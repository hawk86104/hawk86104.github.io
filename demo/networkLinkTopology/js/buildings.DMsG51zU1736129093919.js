import{u as t,_ as n,a as o}from"./mergeTres.DsMio2jP1736129093919.js";import{l as r}from"./utils.BvjrwQBJ1736129093919.js";import{e}from"./@tresjs.C4A766dl1736129093919.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.uQKhJ3x71736129093919.js";import{_ as y}from"./@fesjs.C11Gf8kF1736129093919.js";import"./@amap.DhOO2qTl1736129093919.js";import"./pinia.CtRHBYHM1736129093919.js";import"./vue-demi.Dq6ymT-81736129093919.js";import"./three.ES53pcRR1736129093919.js";import"./three-mesh-bvh.DE7kZA-N1736129093919.js";import"./@vueuse.CaPKQ7tQ1736129093919.js";import"./vue-router.Pr1g0CvG1736129093919.js";import"./lodash-es.Dw4PEFNU1736129093919.js";import"./@qlin.BIlp8Yi21736129093919.js";import"./@babel.BBWsvBIa1736129093919.js";import"./@floating-ui.B75jtkXD1736129093919.js";import"./@juggle.BnTvdTVm1736129093919.js";const C=w;function x(){const t=["TresBufferGeometry","9008LvNVlU","error","tbgRef","info","cameraState","3087ZmosOr","10LGQsLs","geometry","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","5ctgDnd","getZoom","gger","position","688922SYuAPi","toString","5280715eElFBO","chain","positionArray","debu","customCoords","TresShaderMaterial","22810GtnOIt","length","apply","uniforms","prototype","faceUv","u_far","near","1644KYNqcQ","push","init","normal","trace","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","13678AMAIZR","constructor","table","mapHandle","action","TresMesh","399508ZBjAOj","exception","TresGroup","lngLatToCoord","1823860iEVAlB","96SysNaY","bind","81yJWWGO","u_near","counter","normalArray","__proto__","warn","atan","console","string","call","value","test"];return(x=function(){return t})()}function w(t,n){const o=x();return(w=function(t,n){return o[t-=490]})(t,n)}!function(t,n){const o=w,r=x();for(;;)try{if(317963===-parseInt(o(529))/1+-parseInt(o(508))/2*(-parseInt(o(536))/3)+-parseInt(o(533))/4*(parseInt(o(496))/5)+parseInt(o(516))/6*(parseInt(o(523))/7)+parseInt(o(549))/8*(parseInt(o(492))/9)+parseInt(o(493))/10*(-parseInt(o(502))/11)+parseInt(o(534))/12*(parseInt(o(500))/13))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[w(510)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=w,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(521),"i"),r=z(t(518));n[t(547)](r+t(503))&&o[t(547)](r+t(522))?z():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[w(510)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=w;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(543)]=n[t(543)]||{},r=["log",t(541),t(490),t(550),t(530),t(525),t(520)];for(let a=0;a<r[t(509)];a++){const n=I[t(524)][t(512)][t(535)](I),e=r[a],i=o[e]||n;n[t(540)]=I.bind(I),n[t(501)]=i.toString[t(535)](i),o[e]=n}}))();const j=[C(499),C(513),C(519)],S=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=w;for(let r=0;r<t[n(509)];r+=3){const e=[t[r],t[r+1]],a=o[n(526)][n(506)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=w,n=await r(t(495),"buildings");for(let o=0;o<n[t(509)];o++){const r=n[o];a(r[t(494)]);const e=new Float32Array(r[t(494)]),i=new Float32Array(r[t(513)]),l=new Float32Array(r[t(494)].length);d[t(517)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=w;o[t(491)]&&(g[t(511)].u_zoom[t(546)]=o[t(526)][t(497)](),g[t(511)][t(537)][t(546)]=o[t(491)][t(515)],g.uniforms[t(514)].value=o.cameraState.far)})),(t,n)=>{const o=w;return c(),s(o(531),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(528),{key:""+n},[p(r(548),{ref_for:!0,ref:r(551),position:[t[r(504)],3],faceUv:[t.uvArray,2],normal:[t[r(539)],3]},null,8,j),p(r(507),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=w;if(typeof t===o(544))return function(t){}[o(524)]("while (true) {}")[o(510)](o(538));1!==(""+t/t)[o(509)]||t%20==0?function(){return!0}[o(524)]("debu"+o(498))[o(545)](o(527)):function(){return!1}[o(524)](o(505)+o(498))[o(510)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}!function(t,n){const o=P,r=R();for(;;)try{if(493339===parseInt(o(275))/1*(-parseInt(o(268))/2)+-parseInt(o(273))/3+-parseInt(o(248))/4+parseInt(o(267))/5*(-parseInt(o(246))/6)+-parseInt(o(237))/7+parseInt(o(249))/8*(-parseInt(o(271))/9)+parseInt(o(256))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=P,n=new RegExp(t(262)),o=new RegExp(t(265),"i"),r=L("init");n[t(244)](r+t(258))&&o[t(244)](r+"input")?L():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function P(t,n){const o=R();return(P=function(t,n){return o[t-=236]})(t,n)}function R(){const t=["constructor","408vUCcHT","exception","2801992ETtTXj","8eEZjBH","TresAmbientLight","manual","toString","log",'{}.constructor("return this")( )',"warn","31832350fuUHyq","prototype","chain","debu","darkblue","trace","function *\\( *\\)","return (function() ","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","2525AQDoXy","464818FHmQdQ","TresPerspectiveCamera","gger","8616789TfpAQo","error","1008Ndlvzz","counter","4LqQyfd","stateObject","473655qsaDQm","call","console","__proto__","tcRef","string","while (true) {}","test"];return(R=function(){return t})()}F(void 0,(function(){const t=P;let n;try{n=Function(t(263)+t(254)+");")()}catch(e){n=window}const o=n[t(239)]=n[t(239)]||{},r=[t(253),t(255),"info",t(272),t(247),"table",t(261)];for(let a=0;a<r[t(266)];a++){const n=F[t(245)][t(257)][t(264)](F),e=r[a],i=o[e]||n;n[t(240)]=F[t(264)](F),n[t(252)]=i[t(252)][t(264)](i),o[e]=n}}))();function L(t){function n(t){const o=P;if(typeof t===o(242))return function(t){}[o(245)](o(243)).apply(o(274));1!==(""+t/t)[o(266)]||t%20==0?function(){return!0}[o(245)](o(259)+"gger")[o(238)]("action"):function(){return!1}[o(245)]("debu"+o(270)).apply(o(236)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const U=y(a({__name:"buildings",setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(251)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(260)}),g(f,v({id:"tresCanvas",ref:l(241)},a),{default:m((()=>[i[0]||(i[0]=p(l(269),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(250),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{U as default};
