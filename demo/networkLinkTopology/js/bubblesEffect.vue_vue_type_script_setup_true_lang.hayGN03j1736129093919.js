import{_ as n,cc as t,cI as e,aB as o,h as i,ab as r}from"./three.ES53pcRR1736129093919.js";import{a,m as s,e as l}from"./@tresjs.C4A766dl1736129093919.js";import{d as u,b as c,a6 as f,a3 as p,o as m,D as b,J as g,aj as v,ak as y,u as d}from"./@vue.uQKhJ3x71736129093919.js";const h=x;!function(n,t){const e=x,o=_();for(;;)try{if(721656===-parseInt(e(323))/1*(-parseInt(e(335))/2)+parseInt(e(362))/3*(parseInt(e(318))/4)+parseInt(e(353))/5*(parseInt(e(369))/6)+-parseInt(e(355))/7*(parseInt(e(344))/8)+parseInt(e(339))/9*(-parseInt(e(361))/10)+-parseInt(e(337))/11+parseInt(e(322))/12)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[x(316)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(){const n=["chain","offsetY","53690hOSrvB","303LttSru","TresMeshRef","uOpacity","DoubleSide","geometry","uTime","error","18SGywVi","debu","xRayEffect","warn","test","stateObject","apply","sin","15112vdXDKF","return (function() ","AdditiveBlending","traverse","31002264QwrtfS","4734sloWRz","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","verticesNeedUpdate","info","position","gger","init","prototype","TresMesh","model","function *\\( *\\)","console","142vYkleZ","color","14831234NQHtmR","mergeGeometries","1845jxmAlH","opacity","length","TresBufferGeometry","uniforms","659104ENbubV","input","while (true) {}","log","dispose","constructor",'{}.constructor("return this")( )',"bind","map","1155435jABeiR","toString","70VNgdcD","value","Mesh","Color"];return(_=function(){return n})()}!function(){w(this,(function(){const n=x,t=new RegExp(n(333)),e=new RegExp(n(324),"i"),o=P(n(329));t[n(373)](o+n(359))&&e[n(373)](o+n(345))?P():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[x(316)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function x(n,t){const e=_();return(x=function(n,t){return e[n-=316]})(n,t)}z(void 0,(function(){const n=x,t=function(){const n=x;let t;try{t=Function(n(319)+n(350)+");")()}catch(e){t=window}return t}(),e=t[n(334)]=t[n(334)]||{},o=[n(347),n(372),n(326),n(368),"exception","table","trace"];for(let i=0;i<o[n(341)];i++){const t=z.constructor[n(330)][n(351)](z),r=o[i],a=e[r]||t;t.__proto__=z[n(351)](z),t[n(354)]=a[n(354)].bind(a),e[r]=t}}))();const S=u({__name:h(371),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(e){const o=h;let i,r;const u=e,d=c(),w=[];u[o(332)][o(321)]((t=>{const e=o;t instanceof n[e(357)]&&(t[e(366)][e(325)]=!0,w.push(t[e(366)]))}));const _=([i,r]=f((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),i=await i,r(),i),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(358)])(u[o(336)])},lightningTexture:{type:"t",value:_[o(352)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:u[o(340)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(365)],blending:n[o(320)],depthWrite:!1};z[o(343)][o(360)][o(356)]=Math[o(317)](5);const{camera:x}=s(),{onLoop:S}=l();return S((({delta:n})=>{const t=o;x[t(356)][t(327)]&&d[t(356)]&&(z[t(343)][t(367)][t(356)]+=n)})),p((()=>{const e=o;d.value&&(d.value.geometry[e(348)](),d[e(356)][e(366)]=t[e(338)](w)),u.color&&(z[e(343)].glowColor[e(356)]=new(n[e(358)])(u[e(336)])),u.opacity&&(z[e(343)][e(364)][e(356)]=u[e(340)])})),(n,t)=>{const e=o;return m(),b(e(331),{ref_key:e(363),ref:d},[t[0]||(t[0]=g(e(342),null,null,-1)),g("TresShaderMaterial",v(y(z)),null,16)],512)}}});function P(n){function t(n){const e=x;if("string"==typeof n)return function(n){}[e(349)](e(346))[e(316)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(349)]("debu"+e(328)).call("action"):function(){return!1}[e(349)](e(370)+"gger").apply(e(374)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=F;!function(n,t){const e=F,o=C();for(;;)try{if(139926===parseInt(e(508))/1+parseInt(e(548))/2*(parseInt(e(535))/3)+-parseInt(e(561))/4+-parseInt(e(519))/5*(-parseInt(e(554))/6)+parseInt(e(510))/7+-parseInt(e(529))/8*(-parseInt(e(505))/9)+parseInt(e(506))/10*(-parseInt(e(498))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(521)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function C(){const n=["TresShaderMaterial","color","episodic","bind","table","gger","randFloat","map","log","debu","DoubleSide","uTime","__proto__","size","5110556UvXKAn","semantic","init","exception","bridge","warn","bubbles","99EhdXPt","20POrsBH","TresBufferGeometry","216723qgIOul","trace","1498623yhOkfG","material","model","setAttribute","amigdala","#FFF",'{}.constructor("return this")( )',"cerebellum","return (function() ","180ZCNqFW","aDelayDuration","apply","toString","glowColor","value","error","call","afective","brainstem","142696Cxuzdk","prototype","counter","opacity","includes","MathUtils","418551PjzhGo","bubblesEffect","constructor","Color","stateObject","ShaderMaterial","attributes","randInt","input","while (true) {}","Float32BufferAttribute","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","computeBoundingSphere","4vEwGvf","Mesh","console","string","uSlowTime","push","45354QFdvSm","uniforms","info","geometry","array","test","length","436236KBTkUT","traverse","position"];return(C=function(){return n})()}!function(){I(this,(function(){const n=F,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(546),"i"),o=j(n(500));t[n(559)](o+"chain")&&e.test(o+n(543))?j():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(521)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function F(n,t){const e=C();return(F=function(n,t){return e[n-=491]})(n,t)}M(void 0,(function(){const n=F,t=function(){const n=F;let t;try{t=Function(n(518)+n(516)+");")()}catch(e){t=window}return t}(),e=t[n(550)]=t[n(550)]||{},o=[n(492),n(503),n(556),n(525),n(501),n(568),n(509)];for(let i=0;i<o.length;i++){const t=M[n(537)][n(530)][n(567)](M),r=o[i],a=e[r]||t;t[n(496)]=M.bind(M),t[n(522)]=a.toString.bind(a),e[r]=t}}))();const B=u({__name:T(536),props:{model:{},color:{default:T(515)},opacity:{default:1}},setup(t){const a=T,s=t,u=[a(527),a(499),a(566),"process",a(514),a(528),a(502),a(517),"analitic"],f={};s[a(512)][a(562)]((t=>{const o=a;t instanceof n[o(549)]&&u[o(491)]((n=>{const i=o;if(t.name[i(533)](n)){if(f[n]){const o=[f[n],t[i(557)]];return f[n]=e(o),f}return f[n]=t[i(557)]}return[]}))}));const h=c(),w=new(n[a(540)])({uniforms:{glowColor:{type:"c",value:new(n[a(538)])(s[a(565)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:o,side:n[a(494)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h[a(524)]&&(()=>{const t=a,e=[],o=[],s=[],l=[];for(let r=0;r<2e4-3*u[t(560)];r+=1){const a=n[t(534)][t(542)](0,u.length-1),c=u[a],p=f[c][t(541)][t(563)].array[3*r+0]||0,m=f[c][t(541)][t(563)].array[3*r+1]||0,b=f[c][t(541)].position[t(558)][3*r+2]||0;if(o[t(553)](p,m,b),e[r]=i[t(570)](10,20),r%100==0){const e=n[t(534)].randInt(100,250)+m;l[t(553)](p,e,b,1)}else l[t(553)](p,m,b,0);s[2*r+0]=n[t(534)].randFloat(.5,1.5),s[2*r+1]=2.5}h[t(524)][t(513)](t(520),new r(s,2)),h.value[t(513)](t(504),new(n[t(545)])(l,4)),h[t(524)].setAttribute(t(563),new(n[t(545)])(o,3)),h[t(524)][t(513)](t(565),new(n[t(545)])([],3)),h.value[t(513)](t(497),new(n[t(545)])(e,1)),h[t(524)][t(547)]()})()}));const _=c(),{onLoop:z}=l();return z((({delta:t})=>{const e=a;_[e(524)]&&(_[e(524)][e(511)][e(555)][e(495)][e(524)]+=.05,_[e(524)][e(511)].uniforms[e(552)].value+=1/400),s[e(565)]&&(w[e(555)][e(523)].value=new(n[e(538)])(s[e(565)])),s[e(532)]&&(w[e(555)].uOpacity[e(524)]=s[e(532)])})),(n,t)=>{const e=a;return m(),b("TresPoints",{ref_key:"TresMeshRef",ref:_},[g(e(507),{ref_key:"BufferGeometryRef",ref:h},null,512),g(e(564),v(y(d(w))),null,16)],512)}}});function j(n){function t(n){const e=F;if(typeof n===e(551))return function(n){}[e(537)](e(544))[e(521)](e(531));1!==(""+n/n)[e(560)]||n%20==0?function(){return!0}[e(537)](e(493)+e(569))[e(526)]("action"):function(){return!1}.constructor(e(493)+e(569)).apply(e(539)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as _,B as a};
