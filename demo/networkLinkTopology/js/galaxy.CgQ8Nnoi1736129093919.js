import{C as n,aB as t,c9 as e,ak as o,am as a,a as r}from"./three.ES53pcRR1736129093919.js";import{e as s,j as i,F as c,U as l}from"./@tresjs.C4A766dl1736129093919.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as C,F as y}from"./@vue.uQKhJ3x71736129093919.js";import"./@vueuse.CaPKQ7tQ1736129093919.js";const P=z;!function(n,t){const e=z,o=_();for(;;)try{if(978433===parseInt(e(348))/1+-parseInt(e(389))/2+-parseInt(e(358))/3+-parseInt(e(383))/4*(parseInt(e(380))/5)+parseInt(e(341))/6+parseInt(e(349))/7*(-parseInt(e(342))/8)+parseInt(e(344))/9*(parseInt(e(354))/10))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(360)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=_();return(z=function(n,t){return e[n-=335]})(n,t)}!function(){x(this,(function(){const n=z,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(385),"i"),o=T(n(400));t[n(386)](o+n(401))&&e[n(386)](o+n(336))?T():o("0")}))()}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(360)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();S(void 0,(function(){const n=z;let t;try{t=Function(n(355)+n(403)+");")()}catch(a){t=window}const e=t[n(357)]=t[n(357)]||{},o=[n(394),"warn",n(335),n(367),n(362),n(373),"trace"];for(let r=0;r<o[n(353)];r++){const t=S[n(395)][n(363)][n(372)](S),a=o[r],s=e[a]||t;t[n(391)]=S[n(372)](S),t[n(381)]=s[n(381)][n(372)](s),e[a]=t}}))();const I=[P(375),P(351),P(399),"a-randomness"];function _(){const n=["#b5f28d","geometry","color","init","chain","call",'{}.constructor("return this")( )',"counter","info","input","lerp","#1b3984","string","TresCanvas","9884178iIdSXI","56HKudLV","insideColor","9rllHyq","TresShaderMaterial","action","count","411002ROigdy","584381CbBDDv","keys","a-scale","radius","length","27579170zNJiaZ","return (function() ","debu","console","3308469YhxYfS","outsideColor","apply","while (true) {}","exception","prototype","size","TresPoints","uniforms","error","forEach","sin","bufferRef","branches","bind","table","randomnessPower","position","random","TresBufferGeometry","value","uTime","5xiODMp","toString","TresPerspectiveCamera","4550948kzpzSl","cos","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","test","material","setAttribute","2025816CsxGIq","aRandomness","__proto__","gger","clone","log","constructor","aScale"];return(_=function(){return n})()}const j=u({__name:"galaxy",setup(u){const x=P,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(397),outsideColor:"#1b3984"},_=new n(S[x(343)]),j=new n(S[x(359)]),T=new Float32Array(3*S[x(347)]),A=new Float32Array(3*S[x(347)]),F=new Float32Array(S[x(347)]),k=new Float32Array(3*S[x(347)]);for(let n=0;n<S.count;n++){const t=3*n,e=Math[x(376)]()*S[x(352)],o=n%S.branches*Math.PI*2/S[x(371)];T[t]=Math[x(384)](o)*e,T[t+1]=0,T[t+2]=Math.sin(o)*e;const a=Math[x(376)]()**S[x(374)]*(Math[x(376)]()<.5?-1:1),r=Math.random()**S.randomnessPower*(Math[x(376)]()<.5?-1:1),s=Math.random()**S[x(374)]*(Math[x(376)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_[x(393)]();i.lerp(j,e/S.radius),A[t+0]=i.r,A[t+1]=i.g,A[t+2]=i.b,F[n]=Math[x(376)]()}const R={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S[x(364)]}}};const O=d(null),{onLoop:D}=s();D((({elapsed:n})=>{const t=x;O[t(378)]&&(O[t(378)][t(387)][t(366)][t(379)][t(378)]=n)}));const{count:B,size:E,radius:Z,branches:q,spin:G,randomness:H,randomnessPower:J,insideColor:L,outsideColor:Y}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(397),outsideColor:x(338)});return f([B[x(378)],E[x(378)],Z[x(378)],q[x(378)],G[x(378)],H[x(378)],J.value,L[x(378)],Y[x(378)]],(t=>{const e=x;t[e(368)](((n,t)=>{S[Object[e(350)](S)[t]]=n.value})),function(){const t=x;if(O[t(378)]){const e=new n(S.insideColor),o=new n(S[t(359)]),a=new Float32Array(3*S[t(347)]),s=new Float32Array(3*S[t(347)]),i=new Float32Array(S[t(347)]),c=new Float32Array(3*S[t(347)]);for(let n=0;n<S[t(347)];n++){const r=3*n,l=Math[t(376)]()*S[t(352)],u=n%S.branches*Math.PI*2/S.branches;a[r]=Math[t(384)](u)*l,a[r+1]=0,a[r+2]=Math[t(369)](u)*l;const d=Math[t(376)]()**S[t(374)]*(Math[t(376)]()<.5?-1:1),f=Math[t(376)]()**S[t(374)]*(Math[t(376)]()<.5?-1:1),m=Math.random()**S[t(374)]*(Math[t(376)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=e[t(393)]();p[t(337)](o,l/S.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(376)]()}O[t(378)][t(398)][t(388)]("position",new r(a,3)),O.value[t(398)].setAttribute(t(390),new r(c,3)),O.value.geometry[t(388)]("color",new r(s,3)),O[t(378)][t(398)][t(388)](t(396),new r(i,1))}}()})),(n,t)=>{const e=x,o=m(e(340));return p(),h(y,null,[v(g(c)),v(o,b(C(z)),{default:w((()=>[t[0]||(t[0]=M(e(382),{position:[3,3,3]},null,-1)),M(e(365),{ref_key:e(370),ref:O},[M(e(377),{position:[g(T),3],"a-scale":[g(F),1],color:[g(A),3],"a-randomness":[g(k),3]},null,8,I),M(e(345),b(C(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function T(n){function t(n){const e=z;if(typeof n===e(339))return function(n){}[e(395)](e(361))[e(360)](e(404));1!==(""+n/n).length||n%20==0?function(){return!0}[e(395)](e(356)+e(392))[e(402)](e(346)):function(){return!1}[e(395)](e(356)+e(392))[e(360)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
