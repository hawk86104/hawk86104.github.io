import{_ as t}from"./index.DGr6k2KB1736129093919.js";import{_ as e,p as n,a0 as r,s as o,aW as i,J as a,k as c,C as s,ai as l}from"./three.ES53pcRR1736129093919.js";import{a as u,m as f,c as p,e as v,U as d}from"./@tresjs.C4A766dl1736129093919.js";import{n as m}from"./index.B-rh8DoX1736129093919.js";import{_ as h}from"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.C8_m3TS61736129093919.js";import{P as x}from"./tweakpane.BCjFYDHx1736129093919.js";import{d as g,a6 as y,a3 as w,w as b,o as S,D as C,u as _,r as F,e as P,j,g as I,J as D,f as z,al as k,aj as N,ak as R,m as T,F as B}from"./@vue.uQKhJ3x71736129093919.js";import"./utils.Br__lO2J1736129093919.js";import"./@fesjs.C11Gf8kF1736129093919.js";import"./vue-router.Pr1g0CvG1736129093919.js";import"./lodash-es.Dw4PEFNU1736129093919.js";import"./@qlin.BIlp8Yi21736129093919.js";import"./pinia.CtRHBYHM1736129093919.js";import"./vue-demi.Dq6ymT-81736129093919.js";import"./@babel.BBWsvBIa1736129093919.js";import"./@floating-ui.B75jtkXD1736129093919.js";import"./@juggle.BnTvdTVm1736129093919.js";import"./default.vue_vue_type_script_setup_true_lang.1HPtPNtQ1736129093919.js";import"./three-mesh-ui.module.C5LsgWvs1736129093919.js";import"./@vueuse.CaPKQ7tQ1736129093919.js";import"./chalk.B3MNILV41736129093919.js";/* empty css                                 */import"./iconify-icon.DK1S_nhj1736129093919.js";import"./@iconify.CkmZGMLx1736129093919.js";import"./dompurify.MwRjsY0L1736129093919.js";import"./oimophysics.B0i2NtyE1736129093919.js";import"./three-stdlib.hbqaGo6K1736129093919.js";import"./@pmndrs.CFxMGwGw1736129093919.js";import"./object-hash.CvGuPWVa1736129093919.js";import"./@amap.DhOO2qTl1736129093919.js";import"./crypto-js.ChIcq6Eo1736129093919.js";import"./three-custom-shader-material.LMK2zh-z1736129093919.js";import"./three.quarks.Bd0L6lmU1736129093919.js";import"./quarks.core.C7CDonSm1736129093919.js";var E=W;!function(t,e){for(var n=W,r=A();;)try{if(737501===-parseInt(n(244))/1*(parseInt(n(233))/2)+-parseInt(n(245))/3*(parseInt(n(249))/4)+-parseInt(n(205))/5+-parseInt(n(207))/6+-parseInt(n(216))/7+parseInt(n(224))/8+parseInt(n(219))/9*(parseInt(n(242))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();var M=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n.apply(e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function W(t,e){var n=A();return(W=function(t,e){return n[t-=203]})(t,e)}!function(){M(this,(function(){var t=W,e=new RegExp(t(250)),n=new RegExp(t(247),"i"),r=O(t(213));e[t(223)](r+t(228))&&n[t(223)](r+t(248))?O():r("0")}))()}();var V=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n.apply(e,arguments);return n=null,t}}:function(){};return t=!1,r}}();V(void 0,(function(){for(var t=W,e=function(){var t,e=W;try{t=Function("return (function() "+e(253)+");")()}catch(n){t=window}return t}(),n=e[t(256)]=e[t(256)]||{},r=[t(255),t(251),t(218),t(258),t(211),t(234),t(220)],o=0;o<r[t(241)];o++){var i=V[t(238)][t(236)][t(206)](V),a=r[o],c=n[a]||i;i[t(252)]=V[t(206)](V),i[t(231)]=c[t(231)][t(206)](c),n[a]=i}}))();class H{constructor(t,n){var r=W;this[r(240)]=new(e[r(203)])({uniforms:{uTexture:{type:"t",value:null}},vertexShader:"\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position.xy, 0.0, 1.0);    \n                }",fragmentShader:r(226)+(n||r(225))+"  \n                }",depthTest:!1,depthWrite:!1}),this[r(208)]=new(e[r(237)])(new(e[r(229)])(2,2),this[r(240)]),this[r(214)]=new(e[r(221)])(45,window[r(246)]/window[r(239)],1,1e3),this[r(232)]=t,this.scene=new(e[r(230)]),this[r(217)][r(204)](this[r(208)])}[E(210)](t,e){var n=E;this.renderer.setRenderTarget(e),this[n(240)][n(257)][n(235)].value=t,this[n(232)][n(227)](this[n(217)],this[n(214)]),this.renderer[n(215)](null)}}function A(){var t=["innerWidth","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","1942796tNzPcq","function *\\( *\\)","warn","__proto__",'{}.constructor("return this")( )',"gger","log","console","uniforms","error","apply","ShaderMaterial","add","727670lwaGVa","bind","3280350YqiopA","mesh","action","blit","exception","debu","init","camera","setRenderTarget","3040086tMYvqs","scene","info","7659FzIcAq","trace","PerspectiveCamera","call","test","2156840bWzocS","gl_FragColor = texture2D(uTexture, vUv);","\n                uniform sampler2D uTexture;\n\n                varying vec2 vUv;\n\n                void main() {\n                    ","render","chain","PlaneGeometry","Scene","toString","renderer","2wtHHOo","table","uTexture","prototype","Mesh","constructor","innerHeight","material","length","34040xBGGNn","while (true) {}","330953DwSMNd","6LTGZGO"];return(A=function(){return t})()}function O(t){function e(t){var n=W;if("string"==typeof t)return function(t){}[n(238)](n(243)).apply("counter");1!==(""+t/t)[n(241)]||t%20==0?function(){return!0}.constructor("debu"+n(254))[n(222)](n(209)):function(){return!1}[n(238)](n(212)+n(254))[n(259)]("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}function U(t,e){const n=Z();return(U=function(t,e){return n[t-=444]})(t,e)}const q=U;!function(t,e){const n=U,r=Z();for(;;)try{if(851104===parseInt(n(477))/1*(parseInt(n(459))/2)+parseInt(n(513))/3+-parseInt(n(479))/4+-parseInt(n(491))/5*(parseInt(n(451))/6)+parseInt(n(471))/7*(-parseInt(n(497))/8)+parseInt(n(469))/9*(-parseInt(n(499))/10)+parseInt(n(501))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const Y=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[U(460)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){Y(this,(function(){const t=U,e=new RegExp(t(457)),n=new RegExp(t(458),"i"),r=L("init");e[t(444)](r+"chain")&&n[t(444)](r+t(511))?L():r("0")}))()}();const G=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[U(460)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();G(void 0,(function(){const t=U,e=function(){const t=U;let e;try{e=Function("return (function() "+t(463)+");")()}catch(n){e=window}return e}(),n=e[t(478)]=e[t(478)]||{},r=[t(456),t(481),t(482),t(454),t(462),"table",t(448)];for(let o=0;o<r[t(466)];o++){const e=G[t(447)][t(494)][t(483)](G),i=r[o],a=n[i]||e;e.__proto__=G[t(483)](G),e[t(503)]=a[t(503)][t(483)](a),n[i]=e}}))();class X{constructor(t,o,i){const a=U;this[a(498)]=t[a(487)](),this[a(485)]=o,this[a(446)]=i,this[a(506)]=new(e[a(467)]),this[a(506)][a(472)](this.mesh),this[a(509)]=new H(this.renderer),this.ping=new(e[a(500)])(innerWidth,innerHeight,{type:n,depthBuffer:!1,stencilBuffer:!1}),this[a(480)]=new(e[a(500)])(innerWidth,innerHeight,{type:e[a(504)],depthBuffer:!1,stencilBuffer:!1}),this.frontFaceRT=new(e[a(500)])(innerWidth,innerHeight,{type:n}),this[a(496)]=new(e[a(473)])({uniforms:{uCameraFarInverse:{value:1/this.camera.far}},vertexShader:a(445),fragmentShader:a(474),depthTest:!0,depthWrite:!0,side:e[a(502)]}),this[a(461)]=new(e[a(473)])({uniforms:{uScreenSize:{value:new(e[a(453)])(innerWidth,innerHeight)},uPrevDepth:{type:"t",value:this[a(484)][a(450)]},uCameraFarInverse:{value:1/this[a(485)][a(455)]},uSample:{value:0}},vertexShader:a(464),fragmentShader:a(476),depthTest:!1,depthWrite:!1,side:r}),this[a(498)][a(507)]((t=>{const n=a;t instanceof e[n(468)]&&(t.material=this[n(461)])}))}compute(t){const n=U;this[n(446)].setRenderTarget(this[n(484)]),this[n(446)][n(514)](),this[n(446)][n(489)](this[n(480)]),this.renderer[n(514)](),this[n(498)].traverse((t=>{const r=n;t instanceof e[r(468)]&&(t[r(461)]=this[r(461)])})),this.material.uniforms[n(493)][n(486)]=1/this[n(485)][n(455)];for(let e=0;e<t;e++){let t=e%2==0?this[n(484)]:this[n(480)],r=e%2==0?this[n(480)]:this[n(484)];this[n(461)].uniforms.uPrevDepth[n(486)]=t[n(450)],this.material.uniforms[n(452)][n(486)]=e,this[n(446)][n(505)]=!1,this.renderer.setRenderTarget(r),this[n(446)][n(475)](this.scene,this.camera),this.renderer[n(505)]=!0,this[n(509)][n(488)](r.texture,t)}t%2==0?this[n(492)]=this[n(484)]:this.resultBuffer=this[n(480)],this[n(498)][n(507)]((t=>{const e=n;t instanceof o&&(t[e(461)]=this[e(496)])})),this[n(446)][n(489)](this[n(470)]),this.renderer.render(this[n(506)],this[n(485)])}[q(449)](){const t=q;return this.resultBuffer[t(450)]}getFrontFaceTexture(){const t=q;return this[t(470)][t(450)]}}function Z(){const t=["add","ShaderMaterial","\n                uniform float uCameraFarInverse;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n                    float currentDepth = abs(vCameraSpacePos.z) * uCameraFarInverse;\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }","render","\n                uniform sampler2D uPrevDepth;\n                uniform float uCameraFarInverse;\n                uniform float uSample;\n                uniform vec2  uScreenSize;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n\n                    vec2 uv = gl_FragCoord.xy / uScreenSize;\n                    float prevRegisteredDepth = texture2D(uPrevDepth, uv).w;\n                    float currentDepth        = abs(vCameraSpacePos.z) * uCameraFarInverse;\n\n                    if(currentDepth <= prevRegisteredDepth) {\n                        discard;\n                    }\n\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }","1DhbABq","console","2572748lMueRl","pong","warn","info","bind","ping","camera","value","clone","blit","setRenderTarget","gger","110jUOUxs","resultBuffer","uCameraFarInverse","prototype","debu","frontFaceMaterial","16QfNgLm","mesh","1920iGnOQg","WebGLRenderTarget","17721088TvcOFa","FrontSide","toString","FloatType","autoClear","scene","traverse","string","blitProgram","call","input","counter","2429814fQVczB","clear","test","\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normal;\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","renderer","constructor","trace","getBackFaceTexture","texture","22542QuVBfj","uSample","Vector2","error","far","log","function *\\( *\\)","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","37810fEUJyY","apply","material","exception",'{}.constructor("return this")( )',"\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normalize((modelMatrix * vec4(normal, 0.0)).xyz);\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","while (true) {}","length","Scene","Mesh","14499EeYfQn","frontFaceRT","1937579LpBdOe"];return(Z=function(){return t})()}function L(t){function e(t){const n=U;if(typeof t===n(508))return function(t){}[n(447)](n(465)).apply(n(512));1!==(""+t/t)[n(466)]||t%20==0?function(){return!0}[n(447)](n(495)+n(490))[n(510)]("action"):function(){return!1}[n(447)]("debu"+n(490)).apply("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}const $=et;!function(t,e){const n=et,r=tt();for(;;)try{if(150830===parseInt(n(485))/1*(parseInt(n(406))/2)+-parseInt(n(434))/3*(-parseInt(n(476))/4)+parseInt(n(452))/5*(parseInt(n(463))/6)+-parseInt(n(469))/7+-parseInt(n(432))/8*(-parseInt(n(471))/9)+parseInt(n(404))/10+-parseInt(n(438))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const Q=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[et(414)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){Q(this,(function(){const t=et,e=new RegExp(t(479)),n=new RegExp(t(419),"i"),r=rt(t(428));e[t(420)](r+t(407))&&n[t(420)](r+t(481))?rt():r("0")}))()}();const K=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[et(414)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();K(void 0,(function(){const t=et,e=function(){const t=et;let e;try{e=Function(t(461)+'{}.constructor("return this")( ));')()}catch(n){e=window}return e}(),n=e.console=e[t(447)]||{},r=[t(444),t(413),t(466),t(443),t(433),t(445),t(475)];for(let o=0;o<r[t(474)];o++){const e=K[t(418)][t(477)][t(441)](K),i=r[o],a=n[i]||e;e[t(473)]=K[t(441)](K),e.toString=a[t(424)][t(441)](a),n[i]=e}}))();const J=[$(472)];function tt(){const t=["convertLinearToSRGB","Vector4","Color","return (function() ","uExtinctionFX1","42hFOFYR","exposure","setRenderTarget","info","rgb(26, 166, 192)","modelPath","1884148NFgojt","getBackFaceTexture","165303DTxPiE","object","__proto__","length","trace","1020LNEhbA","prototype","uReflectionFactor","function *\\( *\\)","uniforms","input","gger","#fff","counter","1nMMbEc","uTime","uCameraPos","1621820GKHgaY","while (true) {}","271358DEhoqg","chain","reflectionFactor","traverse","uExposure","FrontSide","extintionFactor","warn","apply","ssrtGlassMesh","value","side","constructor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","test","extintionColor1","extintionCol2Random","extintionColor2","toString","call","uBackFaceBuffer","rgb(192,123,25)","init","action","debu","uExtintionColor2","88iufaeO","exception","2859HHjVAq","minFilter","uExtintionFactor","sub","4210459YRNpHv","LinearMipmapLinearFilter","position","bind","stateObject","error","log","table","modelName","console","./draco/","ClampToEdgeWrapping","ShaderMaterial","primitive","42750yHpjyA","extintionCol1Random","wrapS","clone","Vector3","uFrontFaceBuffer"];return(tt=function(){return t})()}function et(t,e){const n=tt();return(et=function(t,e){return n[t-=404]})(t,e)}const nt=g({__name:$(415),props:{skyBoxTexture:{},modelPath:{},modelName:{},extintionFactor:{default:5},reflectionFactor:{default:1},exposure:{default:0},extintionColor1:{default:$(427)},extintionColor2:{default:$(467)},extintionCol1Random:{type:Boolean,default:!1},extintionCol2Random:{type:Boolean,default:!1}},async setup(t){const n=$;let r,l;const d=t,{map:m}=([r,l]=y((()=>u({map:d.skyBoxTexture}))),r=await r,l(),r);m[n(454)]=e[n(449)],m.wrapT=i,m.magFilter=a,m[n(435)]=e[n(439)];const{camera:h,renderer:x,scene:g}=f(),F=new(e[n(450)])({uniforms:{uSkybox:{type:"t",value:m},uBackFaceBuffer:{type:"t",value:null},uFrontFaceBuffer:{type:"t",value:null},uCameraFarInverse:{value:1/h[n(416)].far},uScreenSizeInv:{value:new c(1/window.innerWidth,1/window.innerHeight)},uCameraPos:{value:new(e[n(456)])(0,0,0)},uTime:{value:0},uExtintionColor1:{value:new(e[n(460)])("#fff")[n(437)](new(e[n(460)])(d[n(421)])[n(458)]())},uExtintionColor2:{value:new s(n(483))[n(437)](new(e[n(460)])(d.extintionColor2)[n(458)]())},uExtintionFactor:{value:d[n(412)]},uExposure:{value:d[n(464)]},uReflectionFactor:{value:d[n(408)]},uExtinctionFX1:{value:new(e[n(459)])(d.extintionCol1Random?1:0,d[n(422)]?1:0,0,1)}},vertexShader:"varying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\n// NOTE: we don't need the projViewModel matrix, because vWorldSpaceFragPos is already multiplied by the model matrix\n// I'm repeating this comment 5 times because I've lost 2 hours of my life debugging this thing\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nvoid main(){\n\t// NOTE: the multiplication with modelMatrix is required otherwise viewDir in the fragment shader would be incorrect\n\tvWorldSpaceFragPos=(modelMatrix*vec4(position,1.)).xyz;\n\tvWorldSpaceNormal=normalize((modelMatrix*vec4(normal,0.)).xyz);\n\t\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n\tvProjViewMatrix=projectionMatrix*viewMatrix;\n\tvViewMatrix=viewMatrix;\n}",fragmentShader:"uniform sampler2D uSkybox;\nuniform sampler2D uBackFaceBuffer;\nuniform sampler2D uFrontFaceBuffer;\n\nuniform vec3 uExtintionColor1;\nuniform vec3 uExtintionColor2;\nuniform float uExtintionFactor;\nuniform float uExposure;\nuniform float uReflectionFactor;\nuniform vec4 uExtinctionFX1;\n\nuniform float uTime;\n\nuniform vec3 uCameraPos;\nuniform vec2 uScreenSizeInv;\nuniform float uCameraFarInverse;\n\nvarying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nconst float PI=3.14159265359;\nconst float e=2.7182818284590;\n\nconst float planeSize=3.;\nconst vec3 planeColor=pow(vec3(202./255.,205./255.,185./255.),vec3(3.));\n\nfloat mod289(float x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}\nvec4 perm(vec4 x){return mod289(((x*34.)+1.)*x);}\n\nfloat noise(vec3 p){\n\tvec3 a=floor(p);\n\tvec3 d=p-a;\n\td=d*d*(3.-2.*d);\n\t\n\tvec4 b=a.xxyy+vec4(0.,1.,0.,1.);\n\tvec4 k1=perm(b.xyxy);\n\tvec4 k2=perm(k1.xyxy+b.zzww);\n\t\n\tvec4 c=k2+a.zzzz;\n\tvec4 k3=perm(c);\n\tvec4 k4=perm(c+1.);\n\t\n\tvec4 o1=fract(k3*(1./41.));\n\tvec4 o2=fract(k4*(1./41.));\n\t\n\tvec4 o3=o2*d.z+o1*(1.-d.z);\n\tvec2 o4=o3.yw*d.x+o3.xz*(1.-d.x);\n\t\n\treturn o4.y*d.y+o4.x*(1.-d.y);\n}\n\nvec3 acesFilm(const vec3 x){\n\tconst float a=2.51;\n\tconst float b=.03;\n\tconst float c=2.43;\n\tconst float d=.59;\n\tconst float e=.14;\n\treturn clamp((x*(a*x+b))/(x*(c*x+d)+e),0.,1.);\n}\n\n// gets the skybox color from a given view direction\nvec3 getSkyboxColor(vec3 viewDir){\n\t// skybox coordinates\n\tvec2 skyboxUV=vec2(\n\t\t(atan(viewDir.x,viewDir.z)+PI)/(PI*2.),\n\t\t(asin(viewDir.y)+PI*.5)/(PI)\n\t);\n\t\n\tvec3 col=texture2D(uSkybox,skyboxUV).xyz;\n\tcol=pow(col,vec3(2.2));\n\treturn col;\n}\n\nbool refract2(vec3 v,vec3 n,float ni_over_nt,inout vec3 refracted){\n\tvec3 uv=normalize(v);\n\tfloat dt=dot(uv,n);\n\tfloat discriminant=1.-ni_over_nt*ni_over_nt*(1.-dt*dt);\n\tif(discriminant>0.){\n\t\trefracted=ni_over_nt*(v-n*dt)-n*sqrt(discriminant);\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nvec3 binarySearchHitPoint(vec3 lastP,vec3 hitP,vec3 rayDir){\n\t\n\tfor(int i=0;i<10;i++){\n\t\tvec3 midP=(lastP+hitP)*.5;\n\t\t\n\t\t// project midP in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(midP,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 midpNDC=projCoord.xy;\n\t\tvec2 midpUV=midpNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,midpUV);\n\t\tfloat depth=backBuffer.w;\n\t\t\n\t\tfloat midpDepth=abs((vViewMatrix*vec4(midP,1.)).z)*uCameraFarInverse;\n\t\tif(midpDepth>depth){\n\t\t\thitP=midP;\n\t\t}else{\n\t\t\tlastP=midP;\n\t\t}\n\t}\n\t\n\treturn hitP;\n}\n\nvec3 getRefractedColor(vec3 refractionDir,vec3 hitPoint,float refractionIndex){\n\t// move the hitpoint inside the mesh with epsilon\n\thitPoint+=refractionDir*.0001;\n\t\n\t// raymarch!\n\tfloat stepSize=.02;\n\tfloat stepMult=1.5;\n\t\n\tvec3 lastP=hitPoint;\n\tvec3 p=hitPoint;\n\tvec3 hitPNormal;\n\tfloat currStepSize=stepSize;\n\tfloat transmissionDistance=0.;\n\tfor(int i=0;i<20;i++){\n\t\tp+=currStepSize*refractionDir;\n\t\t\n\t\t// project p in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 pNDC=projCoord.xy;\n\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,pUV);\n\t\tfloat depth=backBuffer.w;\n\t\tvec3 norm=backBuffer.xyz;\n\t\t\n\t\t// get p depth\n\t\tfloat pDepth=abs((vViewMatrix*vec4(p,1.)).z)*uCameraFarInverse;\n\t\t\n\t\tif(pDepth>depth){\n\t\t\t\n\t\t\tvec3 hitp=binarySearchHitPoint(lastP,p,refractionDir);\n\t\t\tp=hitp;\n\t\t\t\n\t\t\t// ************ get the hitpoint normal\n\t\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\t\tprojCoord.xyz/=projCoord.w;\n\t\t\t\n\t\t\tvec2 pNDC=projCoord.xy;\n\t\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\t\n\t\t\t// get depth at point\n\t\t\thitPNormal=texture2D(uBackFaceBuffer,pUV).xyz;\n\t\t\t// ************ get the hitpoint normal - END\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tlastP=p;\n\t\tcurrStepSize*=stepMult;\n\t}\n\t\n\ttransmissionDistance=length(hitPoint-p);\n\t\n\t// ******************** recalc directions\n\tvec3 outward_normal;\n\tvec3 reflected=reflect(refractionDir,hitPNormal);\n\tfloat ni_over_nt;\n\tvec3 refr;\n\t// vec3 refracted;\n\tfloat reflect_prob;\n\tfloat cosine;\n\t\n\tif(dot(refractionDir,hitPNormal)>0.){\n\t\toutward_normal=-hitPNormal;\n\t\tni_over_nt=refractionIndex;\n\t\tcosine=refractionIndex*dot(refractionDir,hitPNormal);\n\t}else{\n\t\toutward_normal=hitPNormal;\n\t\tni_over_nt=1./refractionIndex;\n\t\tcosine=-dot(refractionDir,hitPNormal);\n\t}\n\t\n\t// if (refract2(refractionDir, outward_normal, ni_over_nt, refracted)) {\n\t\tif(refract2(refractionDir,outward_normal,ni_over_nt,refr)){\n\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\tr0*=r0;\n\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t}else{\n\t\t\treflect_prob=1.;\n\t\t}\n\t\t// ******************** recalc directions - END\n\t\t\n\t\t// ******************** get colors\n\t\tvec3 col;\n\t\tvec3 colrefl;\n\t\tvec3 colrefr;\n\t\t// if(refracted.y < 0.0) {\n\t\t\tif(refr.y<0.){\n\t\t\t\t// float t = p.y / abs(refracted.y);\n\t\t\t\t// vec3 planeHitP = p + refracted * t;\n\t\t\t\tfloat t=p.y/abs(refr.y);\n\t\t\t\tvec3 planeHitP=p+refr*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefr=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t}\n\t\t\t\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=p.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=p+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefl=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tcol=colrefl*(reflect_prob*uReflectionFactor)+colrefr*(1.-reflect_prob);\n\t\t\t// ******************** get colors\n\t\t\t\n\t\t\tvec3 transm=vec3(1.);\n\t\t\t// const int steps = 8;\n\t\t\tconst int steps=15;\n\t\t\tfloat step=transmissionDistance/float(steps);\n\t\t\tfloat fc=uExtintionFactor*.07;\n\t\t\t\n\t\t\t// raymarching transmission color\n\t\t\t\n\t\t\t// float noiseStrength = 0.8;\n\t\t\tfloat noiseSpeed=.5;\n\t\t\tfloat noiseTimeSpeed=.5;\n\t\t\t\n\t\t\tfor(int i=0;i<steps;i++){\n\t\t\t\tvec3 np=hitPoint+refractionDir*float(i)*step;\n\t\t\t\t\n\t\t\t\tvec3 nnp=np;\n\t\t\t\tvec3 w=normalize(np-vec3(.75,1.5,0.));\n\t\t\t\tvec3 u=vec3(0.,0.,1.);\n\t\t\t\t// vec3 timeOffset = uTime * normalize(np - vec3(0.75, 1.5, 0.0));\n\t\t\t\tvec3 timeOffset=cos(uTime)*w+sin(uTime)*u;\n\t\t\t\tfloat colorNoiseX=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed);\n\t\t\t\tfloat colorNoiseY=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(15.3278,125.19879,0.));\n\t\t\t\tfloat colorNoiseZ=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(2.6008,78.19879,543.12993));\n\t\t\t\t\n\t\t\t\tfloat targ=length(nnp*.8*uExtinctionFX1.w-vec3(.75,1.5,0.));\n\t\t\t\tfloat targAperture=.25;\n\t\t\t\t\n\t\t\t\t// wave raymarch\n\t\t\t\tif(uExtinctionFX1.z>.5){\n\t\t\t\t\tnnp=np+sin(np.x*2.5+uTime*1.5)*.3;\n\t\t\t\t\ttarg=nnp.y-.85*uExtinctionFX1.w;\n\t\t\t\t}else{\n\t\t\t\t\tnnp=np+vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*1.05;\n\t\t\t\t\tvec3 diff=nnp-vec3(3.3,4.5,0.);\n\t\t\t\t\tfloat angle=(atan(diff.x,diff.y)+PI)/(PI*2.);\n\t\t\t\t\ttarg=length(diff)+sin(angle*32.*PI+uTime*1.5)*.4;\n\t\t\t\t\ttarg*=.475;\n\t\t\t\t\ttargAperture=.5+colorNoiseX*.75;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// what's the color at np?\n\t\t\t\tvec3 col1=uExtintionColor1;\n\t\t\t\tvec3 col2=uExtintionColor2;\n\t\t\t\tif(uExtinctionFX1.x>.5){\n\t\t\t\t\tcol1=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\tif(uExtinctionFX1.y>.5){\n\t\t\t\t\tcol2=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(targ<1.){\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*col2*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ>1.&&targ<1.+targAperture){\n\t\t\t\t\tfloat t=(targ-1.)/targAperture;\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*(col1*t+col2*(1.-t))*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ<(1.+targAperture)*1.85){\n\t\t\t\t\ttransm*=exp(-step*col1*fc);\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// transm = (col1) * targAperture;\n\t\t\t\t\t// transm *= exp(-step * col1 * uExtintionFactor);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// return col * uExtintionColor2 * transm;\n\t\t\tcol*=transm;\n\t\t\t\n\t\t\treturn col;\n\t\t}\n\t\t\n\t\tvoid main(){\n\t\t\tvec2 screenUV=gl_FragCoord.xy*uScreenSizeInv;\n\t\t\t\n\t\t\tvec3 viewDir=normalize(vWorldSpaceFragPos-uCameraPos);\n\t\t\tvec3 normal=vWorldSpaceNormal;\n\t\t\tfloat refractionIndex=1.5;\n\t\t\t\n\t\t\tvec3 outward_normal;\n\t\t\tvec3 reflected=reflect(viewDir,normal);\n\t\t\tfloat ni_over_nt;\n\t\t\tvec3 refracted;\n\t\t\tfloat reflect_prob;\n\t\t\tfloat cosine;\n\t\t\t\n\t\t\tif(dot(viewDir,normal)>0.){\n\t\t\t\toutward_normal=-normal;\n\t\t\t\tni_over_nt=refractionIndex;\n\t\t\t\tcosine=refractionIndex*dot(viewDir,normal);\n\t\t\t}else{\n\t\t\t\toutward_normal=normal;\n\t\t\t\tni_over_nt=1./refractionIndex;\n\t\t\t\tcosine=-dot(viewDir,normal);\n\t\t\t}\n\t\t\t\n\t\t\tif(refract2(viewDir,outward_normal,ni_over_nt,refracted)){\n\t\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\t\tr0*=r0;\n\t\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t\t}else{\n\t\t\t\treflect_prob=1.;\n\t\t\t}\n\t\t\t\n\t\t\tvec3 reflectedCol;\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=vWorldSpaceFragPos.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=vWorldSpaceFragPos+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\treflectedCol=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tvec3 col=reflectedCol*reflect_prob*uReflectionFactor+getRefractedColor(refracted,vWorldSpaceFragPos,refractionIndex)*(1.-reflect_prob);\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.0, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.15, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.35, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333;\n\t\t\t\n\t\t\t// col = getRefractedColor(refracted, vWorldSpaceFragPos) * (1.0 - reflect_prob);\n\t\t\t// vec3 col = getRefractedColor(refracted, vWorldSpaceFragPos);\n\t\t\t// col = getSkyboxColor(reflected) * reflect_prob * 1.0;\n\t\t\t\n\t\t\t// vec3 col = viewDir;\n\t\t\t// gl_FragColor = vec4(col, 1.0);\n\t\t\t// return;\n\t\t\t\n\t\t\tcol*=pow(2.,uExposure);\n\t\t\tcol=acesFilm(col);\n\t\t\tcol=pow(col,vec3(1./2.2));\n\t\t\t\n\t\t\tgl_FragColor=vec4(col,1.);\n\t\t\t// gl_FragColor = vec4(getSkyboxColor(viewDir), 1.0) * 0.5 + vec4(viewDir * 0.5 + 0.5, 1.0);\n\t\t}"}),{nodes:P}=([r,l]=y((()=>p(d[n(468)],{draco:!0,decoderPath:n(448)}))),r=await r,l(),r),j=P.Scene.getObjectByName(d[n(446)]),I=new X(j,h[n(416)],x[n(416)]),D=null==j?void 0:j[n(455)]();null==D||D[n(409)]((t=>{const r=n;t instanceof o&&(t.material=F,t.material[r(417)]=e[r(411)])}));const{onAfterLoop:z}=v();return z((({elapsed:t})=>{const e=n;j&&F&&(F[e(480)][e(487)][e(416)]=h[e(416)][e(440)][e(455)](),F.uniforms[e(486)][e(416)]=t,I.compute(6),F.uniforms[e(426)].value=I[e(470)](),F.uniforms[e(457)][e(416)]=I.getFrontFaceTexture(),x[e(416)][e(465)](null),x[e(416)].autoClear=!1)})),w((()=>{const t=n;d.extintionFactor&&(F.uniforms[t(436)].value=d[t(412)]),d[t(408)]&&(F[t(480)][t(478)][t(416)]=d[t(408)]),d[t(464)]&&(F[t(480)][t(410)].value=d.exposure),d[t(421)]&&(F.uniforms.uExtintionColor1[t(416)]=new(e[t(460)])(t(483))[t(437)](new(e[t(460)])(d[t(421)])[t(458)]())),d[t(423)]&&(F.uniforms[t(431)].value=new(e[t(460)])(t(483))[t(437)](new(e[t(460)])(d[t(423)]).convertLinearToSRGB())),d[t(453)]&&(F[t(480)].uExposure.value=d[t(464)])})),b((()=>d[n(453)]),(t=>{const e=n;F.uniforms[e(462)][e(416)].x=t?1:0}),{immediate:!0}),b((()=>d[n(422)]),(t=>{const e=n;F[e(480)][e(462)][e(416)].y=t?1:0}),{immediate:!0}),(t,e)=>{const r=n;return S(),C(r(451),{object:_(D)},null,8,J)}}});function rt(t){function e(t){const n=et;if("string"==typeof t)return function(t){}.constructor(n(405)).apply(n(484));1!==(""+t/t).length||t%20==0?function(){return!0}[n(418)]("debu"+n(482))[n(425)](n(429)):function(){return!1}[n(418)](n(430)+"gger")[n(414)](n(442)),e(++t)}try{if(t)return e;e(0)}catch(n){}}const ot=st;function it(){const t=["#cbcb96","消光颜色一","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg","#b8b59e","test","消光系数","stateObject","extintionFactor","log","TresCanvas","3931176cpiHbR","1985pgKYGL","rgb(26, 166, 192)","constructor","消光颜色二","extintionColor2","1449fkFcQF","bind","5569529bKSdqt","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/model/eCommerce/guanYu.glb","addBinding","extintionCol1Random","ssrtGlass","__proto__","chain","反射系数","string","warn","prototype","exception","toString","TresPerspectiveCamera","counter","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","while (true) {}","call","10096rijBDv","statue","reflectionFactor","gger","info","TresAmbientLight","曝光系数","#201919","init","input","580hRbYoK","length","10532MQdAYi","随机色1","apply","error","extintionColor1","extintionCol2Random","4867467DpvNGc","3488286RnHnXR","return (function() ","function *\\( *\\)","console","trace","145ZivynY"];return(it=function(){return t})()}!function(t,e){const n=st,r=it();for(;;)try{if(851097===-parseInt(n(360))/1*(-parseInt(n(397))/2)+-parseInt(n(354))/3+-parseInt(n(348))/4*(-parseInt(n(372))/5)+-parseInt(n(355))/6+parseInt(n(379))/7+parseInt(n(371))/8+parseInt(n(377))/9*(-parseInt(n(407))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const at=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[st(350)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){at(this,(function(){const t=st,e=new RegExp(t(357)),n=new RegExp(t(394),"i"),r=ut(t(405));e[t(365)](r+t(385))&&n[t(365)](r+t(406))?ut():r("0")}))()}();const ct=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[st(350)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function st(t,e){const n=it();return(st=function(t,e){return n[t-=348]})(t,e)}ct(void 0,(function(){const t=st;let e;try{e=Function(t(356)+'{}.constructor("return this")( ));')()}catch(o){e=window}const n=e[t(358)]=e[t(358)]||{},r=[t(369),t(388),t(401),t(351),t(390),"table",t(359)];for(let i=0;i<r[t(408)];i++){const e=ct[t(374)][t(389)][t(378)](ct),o=r[i],a=n[o]||e;e[t(384)]=ct[t(378)](ct),e[t(391)]=a[t(391)].bind(a),n[o]=e}}))();const lt=g({__name:ot(383),setup(e){const n=ot,r={clearColor:n(404),windowSize:!0,toneMapping:l,toneMappingExposure:.8},o=F({size:[20,20],color:n(361),shadowColor:n(364),edge:.35}),i=F({extintionFactor:5,reflectionFactor:1,exposure:0,extintionColor1:"rgb(192,123,25)",extintionColor2:n(373),extintionCol1Random:!1,extintionCol2Random:!1}),a=new x({title:"参数"});return a[n(381)](i,n(368),{label:n(366),min:0,max:10,step:.1}),a[n(381)](i,n(399),{label:n(386),min:0,max:2,step:.1}),a[n(381)](i,"exposure",{label:n(403),min:-1,max:1,step:.1}),a[n(381)](i,n(352),{label:n(362)}),a[n(381)](i,n(376),{label:n(375)}),a[n(381)](i,n(382),{label:n(349)}),a[n(381)](i,n(353),{label:"随机色2"}),(e,a)=>{const c=n,s=P(c(370));return S(),C(B,null,[j(_(t)),j(s,N(R(r)),{default:I((()=>[a[0]||(a[0]=D(c(392),{position:[0,8,-13],fov:45,near:.1,far:1e3,"look-at":[0,0,0]},null,-1)),j(_(d),{enableDamping:""}),a[1]||(a[1]=D(c(402),{intensity:10},null,-1)),(S(),z(k,null,{default:I((()=>[j(m,N(R(o)),null,16)])),_:1})),(S(),z(k,null,{default:I((()=>[j(nt,T({scale:2},i,{modelPath:c(380),modelName:c(398),skyBoxTexture:c(363)}),null,16)])),_:1})),(S(),z(k,null,{default:I((()=>[j(h,{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg"})])),_:1}))])),_:1},16)],64)}}});function ut(t){function e(t){const n=st;if(typeof t===n(387))return function(t){}[n(374)](n(395))[n(350)](n(393));1!==(""+t/t)[n(408)]||t%20==0?function(){return!0}[n(374)]("debu"+n(400))[n(396)]("action"):function(){return!1}[n(374)]("debu"+n(400))[n(350)](n(367)),e(++t)}try{if(t)return e;e(0)}catch(n){}}export{lt as default};
