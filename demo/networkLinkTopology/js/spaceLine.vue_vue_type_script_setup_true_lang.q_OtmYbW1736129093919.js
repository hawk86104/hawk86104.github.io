import{a as t,e as n,W as e}from"./@tresjs.C4A766dl1736129093919.js";import{_ as r}from"./three.ES53pcRR1736129093919.js";import{d as o,a6 as a,w as s,o as i,D as c,J as u,u as l,j as f}from"./@vue.uQKhJ3x71736129093919.js";const p=v;!function(t,n){const e=v,r=m();for(;;)try{if(673205===parseInt(e(209))/1+-parseInt(e(205))/2*(-parseInt(e(230))/3)+-parseInt(e(177))/4*(parseInt(e(228))/5)+-parseInt(e(196))/6+parseInt(e(190))/7*(-parseInt(e(168))/8)+-parseInt(e(241))/9*(parseInt(e(217))/10)+parseInt(e(176))/11*(parseInt(e(183))/12))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const d=function(){let t=!0;return function(n,e){const r=t?function(){if(e){const t=e[v(174)](n,arguments);return e=null,t}}:function(){};return t=!1,r}}();function m(){const t=["map","fewNum","info","uColor2","call","7577001Jnzzuj","toString","magFilter","72952EaOFmv","constructor","exception","stateObject","set","generateMipmaps","apply","\n\t\tuniform vec3 uColor2;\n      void main () {\n\t\t\t\t\tif(csm_FragColor.r < 0.001 && csm_FragColor.g < 0.001 && csm_FragColor.b < 0.001){\n\t\t\t\t\t\tcsm_FragColor = vec4(uColor2,1.0);\n\t\t\t\t\t}else{\n          \tcsm_FragColor = csm_FragColor;\n\t\t\t\t\t}\n\t\t\t}\n\t\t","1133nCcNqe","204StGvJp",'{}.constructor("return this")( )',"console","repeat","radialSegments","radius","156396XoOplT","AdditiveBlending","while (true) {}","uniforms","TresTubeGeometry","needsUpdate","CatmullRomCurve3","203QOLSDK","color2","MeshBasicMaterial","action","gger","color","2674884RQVpDs","TresMesh","offset","trace","Vector3","DoubleSide","bind","return (function() ","debu","10tUbIvY","fragmentShader","speed","RepeatWrapping","1247765ATAYdP","error","spaceLine","push","__proto__","test","length","tubularSegments","10xxKwUF","clockwise","log","blending","vertexShader","value","Color","args","counter","NearestFilter","linesList","107150mrNUeu","chain","436875nBVNRt","table","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","warn","forEach"];return(m=function(){return t})()}!function(){d(this,(function(){const t=v,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(232),"i"),r=_("init");n[t(214)](r+t(229))&&e[t(214)](r+t(233))?_():r("0")}))()}();const g=function(){let t=!0;return function(n,e){const r=t?function(){if(e){const t=e[v(174)](n,arguments);return e=null,t}}:function(){};return t=!1,r}}();g(void 0,(function(){const t=v;let n;try{n=Function(t(203)+t(178)+");")()}catch(o){n=window}const e=n[t(179)]=n[t(179)]||{},r=[t(219),t(234),t(238),t(210),t(170),t(231),t(199)];for(let a=0;a<r[t(215)];a++){const n=g[t(169)].prototype[t(202)](g),o=r[a],s=e[o]||n;n[t(213)]=g[t(202)](g),n[t(242)]=s.toString[t(202)](s),e[o]=n}}))();const h={renderOrder:999999},w=[p(224)];function v(t,n){const e=m();return(v=function(t,n){return e[t-=168]})(t,n)}const S=o({__name:p(211),props:{color:{default:"#ff6700"},color2:{default:"#ffffff"},radius:{default:.2},speed:{default:1},radialSegments:{default:6},tubularSegments:{default:64},closed:{type:Boolean,default:!1},clockwise:{type:Boolean,default:!0},fewNum:{default:1},linesList:{default:[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[15,0,15]]}},async setup(o){const d=p;let m,g;const v=o,{map:S}=([m,g]=a((()=>t({map:"./plugins/digitalMapBlock/images/bwPath.png"}))),m=await m,g(),m);S[d(188)]=!0,S.wrapS=S.wrapT=r[d(208)],S.repeat[d(172)](v[d(237)],1),S.rotation=v[d(218)]?0:Math.PI,S[d(173)]=!1,S[d(243)]=r[d(226)];let _=[];v[d(227)][d(235)]((t=>{const n=d;_[n(212)]((new(r[n(200)])).fromArray(t))}));const b=new(r[d(189)])(_),{onLoop:I}=n();I((()=>{const t=d;S[t(198)].x+=.002*v[t(207)]})),s((()=>[v[d(218)],v[d(237)]]),(([t,n])=>{const e=d;S.rotation=t?0:Math.PI,S[e(180)][e(172)](n,1)}));const C={vertexShader:"\n\t\t\t\tvoid main() {\n\t\t\t\t\tcsm_Position = position * vec3(1.0);\n\t\t\t\t}\n\t\t\t",fragmentShader:d(175),uniforms:{uColor2:{value:new(r[d(223)])(v[d(191)])}}};return s((()=>v.color2),(t=>{const n=d;C.uniforms[n(239)][n(222)]=new(r[n(223)])(t)})),(t,n)=>{const o=d;return i(),c(o(197),h,[u(o(187),{args:[l(b),v[o(216)],v[o(182)],v[o(181)],v.closed]},null,8,w),f(l(e),{baseMaterial:r[o(192)],vertexShader:C[o(221)],fragmentShader:C[o(206)],uniforms:C[o(186)],side:r[o(201)],flatShading:!1,blending:r[o(184)],map:l(S),alphaMap:l(S),transparent:!0,color:v[o(195)],depthTest:!0,depthWrite:!1,silent:""},null,8,["baseMaterial","vertexShader",o(206),o(186),"side",o(220),o(236),"alphaMap",o(195)])])}}});function _(t){function n(t){const e=v;if("string"==typeof t)return function(t){}[e(169)](e(185))[e(174)](e(225));1!==(""+t/t)[e(215)]||t%20==0?function(){return!0}[e(169)](e(204)+e(194))[e(240)](e(193)):function(){return!1}[e(169)](e(204)+e(194)).apply(e(171)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{S as _};
