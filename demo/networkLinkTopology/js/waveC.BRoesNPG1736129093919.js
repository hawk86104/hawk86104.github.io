import{e,U as n}from"./@tresjs.C4A766dl1736129093919.js";import{C as t,_ as o}from"./three.ES53pcRR1736129093919.js";import{P as r}from"./tweakpane.BCjFYDHx1736129093919.js";import{d as i,w as a,o as l,D as u,J as c,u as s,r as v,e as f,f as p,g,j as d,aj as y,ak as m,m as x}from"./@vue.uQKhJ3x71736129093919.js";import"./@vueuse.CaPKQ7tQ1736129093919.js";const P=z;function z(e,n){const t=C();return(z=function(e,n){return t[e-=421]})(e,n)}!function(e,n){const t=z,o=C();for(;;)try{if(327156===parseInt(t(483))/1*(parseInt(t(482))/2)+parseInt(t(447))/3*(parseInt(t(443))/4)+-parseInt(t(445))/5*(-parseInt(t(478))/6)+parseInt(t(456))/7*(-parseInt(t(481))/8)+parseInt(t(451))/9*(-parseInt(t(426))/10)+-parseInt(t(430))/11*(parseInt(t(486))/12)+-parseInt(t(470))/13)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[z(488)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=z,n=new RegExp(e(423)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=b(e(469));n.test(o+"chain")&&t[e(448)](o+e(440))?b():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[z(488)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();S(void 0,(function(){const e=z;let n;try{n=Function(e(453)+e(489)+");")()}catch(r){n=window}const t=n.console=n[e(468)]||{},o=["log",e(431),e(477),e(438),e(424),e(479),"trace"];for(let i=0;i<o[e(480)];i++){const n=S.constructor[e(463)][e(458)](S),r=o[i],a=t[r]||n;n[e(422)]=S[e(458)](S),n[e(446)]=a[e(446)].bind(a),t[r]=n}}))();const w=["rotation-x"],I=[P(485),P(449),"fragmentShader",P(487)];function C(){const e=["8396375GYVVnQ","debu","uColorDamping","action","uValleyColor","uPerlinWaveIterations","setStyle","info","54uNzbLN","table","length","1510120QfysrQ","2saebzF","583613UzIinj","Color","side","5720412QZkiOj","wireframe","apply",'{}.constructor("return this")( )',"gger","uSinWaveSpeed","perlinWaveSpeed","DoubleSide","__proto__","function *\\( *\\)","exception","constructor","5060ISYWrh","valleyColor","sinWaveFrequency","uWaveAmplitude","11yHXijn","warn","set","perlinWaveFrequency","waveAmplitude","colorOffset","uTime","while (true) {}","error","uSinWaveFrequency","input","uPerlinWaveFrequency","perlinWaveIterations","1628VuPCJg","uColorOffset","359795XYqXaO","toString","3345rVrbAr","test","vertexShader","#184650","828cNmDmA","colorDamping","return (function() ","TresMesh","uPerlinWaveAmplitude","7nEsNUZ","uPeakColor","bind","peakColor","waveC","Vector2","uPerlinWaveSpeed","prototype","perlinWaveAmplitude","#b367ff","sinWaveSpeed","value","console","init"];return(C=function(){return e})()}const h=i({__name:P(460),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:P(465)},valleyColor:{default:P(450)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=P,i=n,v={uTime:{value:0},uPeakColor:{value:new t(i.peakColor)},uValleyColor:{value:new(o[r(484)])(i[r(427)])},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i[r(452)]},uSinWaveFrequency:{value:new(o[r(461)])(i[r(428)].x,i.sinWaveFrequency.y)},uWaveAmplitude:{value:i[r(434)]},uSinWaveSpeed:{value:new(o[r(461)])(i[r(466)].x,i.sinWaveSpeed.y)},uPerlinWaveIterations:{value:i[r(442)]},uPerlinWaveFrequency:{value:i[r(433)]},uPerlinWaveAmplitude:{value:i[r(464)]},uPerlinWaveSpeed:{value:i[r(492)]}},{onLoop:f}=e();return f((({elapsed:e})=>{v[r(436)].value=e})),a((()=>i),(()=>{const e=r;v[e(457)][e(467)][e(476)](i[e(459)]),v[e(474)][e(467)][e(476)](i[e(427)]),v[e(444)][e(467)]=i[e(435)],v[e(472)][e(467)]=i[e(452)],v[e(439)][e(467)][e(432)](i[e(428)].x,i[e(428)].y),v[e(429)][e(467)]=i[e(434)],v[e(491)].value[e(432)](i[e(466)].x,i[e(466)].y),v[e(475)][e(467)]=i[e(442)],v[e(441)].value=i[e(433)],v[e(455)].value=i[e(464)],v[e(462)][e(467)]=i[e(492)]}),{deep:!0}),(e,n)=>{const t=r;return l(),u(t(454),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=c("TresPlaneGeometry",{args:[10,10,512,512]},null,-1)),c("TresShaderMaterial",{side:o[t(421)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:v,wireframe:e[t(487)]},null,8,I)],8,w)}}});function b(e){function n(e){const t=z;if("string"==typeof e)return function(e){}[t(425)](t(437))[t(488)]("counter");1!==(""+e/e)[t(480)]||e%20==0?function(){return!0}[t(425)](t(471)+t(490)).call(t(473)):function(){return!1}[t(425)](t(471)+t(490)).apply("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}!function(e,n){const t=A,o=T();for(;;)try{if(769521===-parseInt(t(190))/1*(parseInt(t(142))/2)+parseInt(t(198))/3+parseInt(t(169))/4*(-parseInt(t(174))/5)+-parseInt(t(182))/6+-parseInt(t(175))/7*(parseInt(t(176))/8)+parseInt(t(143))/9*(-parseInt(t(162))/10)+parseInt(t(158))/11*(parseInt(t(195))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const _=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[A(141)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function A(e,n){const t=T();return(A=function(e,n){return t[e-=141]})(e,n)}!function(){_(this,(function(){const e=A,n=new RegExp(e(155)),t=new RegExp(e(201),"i"),o=F("init");n.test(o+"chain")&&t[e(189)](o+e(203))?F():o("0")}))()}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();k(void 0,(function(){const e=A,n=function(){const e=A;let n;try{n=Function("return (function() "+e(165)+");")()}catch(t){n=window}return n}(),t=n.console=n[e(151)]||{},o=[e(193),e(167),e(163),"error",e(197),e(168),"trace"];for(let r=0;r<o[e(185)];r++){const n=k[e(153)][e(173)][e(191)](k),i=o[r],a=t[i]||n;n[e(152)]=k.bind(k),n[e(171)]=a[e(171)].bind(a),t[i]=n}}))();const q=i({__name:"waveC",setup(e){const t=A,i={clearColor:t(146),shadows:!0,alpha:!1,shadowMapType:o[t(200)],outputColorSpace:o[t(180)],toneMapping:o[t(196)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},a=v({peakColor:t(204),valleyColor:"#310039",wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),u=new r({title:"参数",expanded:!0});return u.addBinding(a,t(160),{label:t(150)}),u[t(202)](a,t(166),{label:t(199)}),u[t(202)](a,t(157),{label:t(178)}),u[t(202)](a,t(192),{label:t(159),min:.01,max:3,step:.01}),u[t(202)](a,t(194),{label:"颜色抑制",min:.01,max:6,step:.01}),u[t(202)](a,t(188),{label:t(172),picker:t(147),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),u.addBinding(a,t(183),{label:"正弦波振幅",min:0,max:2,step:.01}),u[t(202)](a,t(149),{label:t(170),picker:t(147),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),u[t(202)](a,"perlinWaveIterations",{label:"小波浪层数",min:1,max:7,step:.1}),u.addBinding(a,"perlinWaveFrequency",{label:t(145),min:0,max:5,step:.01}),u.addBinding(a,"perlinWaveAmplitude",{label:"小波浪幅度",min:0,max:2,step:.01}),u.addBinding(a,t(156),{label:t(186),min:0,max:2,step:.01}),(e,o)=>{const r=t,u=f("TresCanvas");return l(),p(u,x(i,{"window-size":""}),{default:g((()=>[o[0]||(o[0]=c(r(164),{position:[10,10,10]},null,-1)),d(s(n)),o[1]||(o[1]=c(r(187),{args:[10,10]},null,-1)),d(h,y(m(a)),null,16)])),_:1},16)}}});function F(e){function n(e){const t=A;if(typeof e===t(161))return function(e){}[t(153)](t(144))[t(141)](t(148));1!==(""+e/e)[t(185)]||e%20==0?function(){return!0}[t(153)](t(177)+"gger")[t(154)](t(181)):function(){return!1}[t(153)]("debu"+t(179))[t(141)](t(184)),n(++e)}try{if(e)return n;n(0)}catch(t){}}function T(){const e=["小波浪速度","TresGridHelper","sinWaveFrequency","test","1047639bgYOhu","bind","colorOffset","log","colorDamping","33664956zAloXC","NoToneMapping","exception","608112EAxNxp","山峰颜色","BasicShadowMap","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","addBinding","input","#ff6767","apply","2AjRtDG","6021XfSkbO","while (true) {}","小波浪频率","#222","inline","counter","sinWaveSpeed","网格化","console","__proto__","constructor","call","function *\\( *\\)","perlinWaveSpeed","valleyColor","22uyhgok","颜色偏移","wireframe","string","19130bZMRkG","info","TresPerspectiveCamera",'{}.constructor("return this")( )',"peakColor","warn","table","16332ZcLuQt","正弦波速度","toString","正弦波频率","prototype","1685DUudkp","7zCLmMI","10588104qYRKIj","debu","山谷颜色","gger","SRGBColorSpace","action","102534iILLTb","waveAmplitude","stateObject","length"];return(T=function(){return e})()}export{q as default};
