DXFcolors = {
	defaults : [
		'rgb(0,0,0)'
	,	'rgb(255,0,0)'
	,	'rgb(255,255,0)'
	,	'rgb(0,255,0)'
	,	'rgb(0,255,255)'
	,	'rgb(0,0,255)'
	,	'rgb(255,0,255)'
	,	'rgb(255,255,255)'
	,	'rgb(65,65,65)'
	,	'rgb(128,128,128)'
	,	'rgb(255,0,0)'
	,	'rgb(255,170,170)'
	,	'rgb(189,0,0)'
	,	'rgb(189,126,126)'
	,	'rgb(129,0,0)'
	,	'rgb(129,86,86)'
	,	'rgb(104,0,0)'
	,	'rgb(104,69,69)'
	,	'rgb(79,0,0)'
	,	'rgb(79,53,53)'
	,	'rgb(255,63,0)'
	,	'rgb(255,191,170)'
	,	'rgb(189,46,0)'
	,	'rgb(189,141,126)'
	,	'rgb(129,31,0)'
	,	'rgb(129,96,86)'
	,	'rgb(104,25,0)'
	,	'rgb(104,78,69)'
	,	'rgb(79,19,0)'
	,	'rgb(79,59,53)'
	,	'rgb(255,127,0)'
	,	'rgb(255,212,170)'
	,	'rgb(189,94,0)'
	,	'rgb(189,157,126)'
	,	'rgb(129,64,0)'
	,	'rgb(129,107,86)'
	,	'rgb(104,52,0)'
	,	'rgb(104,86,69)'
	,	'rgb(79,39,0)'
	,	'rgb(79,66,53)'
	,	'rgb(255,191,0)'
	,	'rgb(255,234,170)'
	,	'rgb(189,141,0)'
	,	'rgb(189,173,126)'
	,	'rgb(129,96,0)'
	,	'rgb(129,118,86)'
	,	'rgb(104,78,0)'
	,	'rgb(104,95,69)'
	,	'rgb(79,59,0)'
	,	'rgb(79,73,53)'
	,	'rgb(255,255,0)'
	,	'rgb(255,255,170)'
	,	'rgb(189,189,0)'
	,	'rgb(189,189,126)'
	,	'rgb(129,129,0)'
	,	'rgb(129,129,86)'
	,	'rgb(104,104,0)'
	,	'rgb(104,104,69)'
	,	'rgb(79,79,0)'
	,	'rgb(79,79,53)'
	,	'rgb(191,255,0)'
	,	'rgb(234,255,170)'
	,	'rgb(141,189,0)'
	,	'rgb(173,189,126)'
	,	'rgb(96,129,0)'
	,	'rgb(118,129,86)'
	,	'rgb(78,104,0)'
	,	'rgb(95,104,69)'
	,	'rgb(59,79,0)'
	,	'rgb(73,79,53)'
	,	'rgb(127,255,0)'
	,	'rgb(212,255,170)'
	,	'rgb(94,189,0)'
	,	'rgb(157,189,126)'
	,	'rgb(64,129,0)'
	,	'rgb(107,129,86)'
	,	'rgb(52,104,0)'
	,	'rgb(86,104,69)'
	,	'rgb(39,79,0)'
	,	'rgb(66,79,53)'
	,	'rgb(63,255,0)'
	,	'rgb(191,255,170)'
	,	'rgb(46,189,0)'
	,	'rgb(141,189,126)'
	,	'rgb(31,129,0)'
	,	'rgb(96,129,86)'
	,	'rgb(25,104,0)'
	,	'rgb(78,104,69)'
	,	'rgb(19,79,0)'
	,	'rgb(59,79,53)'
	,	'rgb(0,255,0)'
	,	'rgb(170,255,170)'
	,	'rgb(0,189,0)'
	,	'rgb(126,189,126)'
	,	'rgb(0,129,0)'
	,	'rgb(86,129,86)'
	,	'rgb(0,104,0)'
	,	'rgb(69,104,69)'
	,	'rgb(0,79,0)'
	,	'rgb(53,79,53)'
	,	'rgb(0,255,63)'
	,	'rgb(170,255,191)'
	,	'rgb(0,189,46)'
	,	'rgb(126,189,141)'
	,	'rgb(0,129,31)'
	,	'rgb(86,129,96)'
	,	'rgb(0,104,25)'
	,	'rgb(69,104,78)'
	,	'rgb(0,79,19)'
	,	'rgb(53,79,59)'
	,	'rgb(0,255,127)'
	,	'rgb(170,255,212)'
	,	'rgb(0,189,94)'
	,	'rgb(126,189,157)'
	,	'rgb(0,129,64)'
	,	'rgb(86,129,107)'
	,	'rgb(0,104,52)'
	,	'rgb(69,104,86)'
	,	'rgb(0,79,39)'
	,	'rgb(53,79,66)'
	,	'rgb(0,255,191)'
	,	'rgb(170,255,234)'
	,	'rgb(0,189,141)'
	,	'rgb(126,189,173)'
	,	'rgb(0,129,96)'
	,	'rgb(86,129,118)'
	,	'rgb(0,104,78)'
	,	'rgb(69,104,95)'
	,	'rgb(0,79,59)'
	,	'rgb(53,79,73)'
	,	'rgb(0,255,255)'
	,	'rgb(170,255,255)'
	,	'rgb(0,189,189)'
	,	'rgb(126,189,189)'
	,	'rgb(0,129,129)'
	,	'rgb(86,129,129)'
	,	'rgb(0,104,104)'
	,	'rgb(69,104,104)'
	,	'rgb(0,79,79)'
	,	'rgb(53,79,79)'
	,	'rgb(0,191,255)'
	,	'rgb(170,234,255)'
	,	'rgb(0,141,189)'
	,	'rgb(126,173,189)'
	,	'rgb(0,96,129)'
	,	'rgb(86,118,129)'
	,	'rgb(0,78,104)'
	,	'rgb(69,95,104)'
	,	'rgb(0,59,79)'
	,	'rgb(53,73,79)'
	,	'rgb(0,127,255)'
	,	'rgb(170,212,255)'
	,	'rgb(0,94,189)'
	,	'rgb(126,157,189)'
	,	'rgb(0,64,129)'
	,	'rgb(86,107,129)'
	,	'rgb(0,52,104)'
	,	'rgb(69,86,104)'
	,	'rgb(0,39,79)'
	,	'rgb(53,66,79)'
	,	'rgb(0,63,255)'
	,	'rgb(170,191,255)'
	,	'rgb(0,46,189)'
	,	'rgb(126,141,189)'
	,	'rgb(0,31,129)'
	,	'rgb(86,96,129)'
	,	'rgb(0,25,104)'
	,	'rgb(69,78,104)'
	,	'rgb(0,19,79)'
	,	'rgb(53,59,79)'
	,	'rgb(0,0,255)'
	,	'rgb(170,170,255)'
	,	'rgb(0,0,189)'
	,	'rgb(126,126,189)'
	,	'rgb(0,0,129)'
	,	'rgb(86,86,129)'
	,	'rgb(0,0,104)'
	,	'rgb(69,69,104)'
	,	'rgb(0,0,79)'
	,	'rgb(53,53,79)'
	,	'rgb(63,0,255)'
	,	'rgb(191,170,255)'
	,	'rgb(46,0,189)'
	,	'rgb(141,126,189)'
	,	'rgb(31,0,129)'
	,	'rgb(96,86,129)'
	,	'rgb(25,0,104)'
	,	'rgb(78,69,104)'
	,	'rgb(19,0,79)'
	,	'rgb(59,53,79)'
	,	'rgb(127,0,255)'
	,	'rgb(212,170,255)'
	,	'rgb(94,0,189)'
	,	'rgb(157,126,189)'
	,	'rgb(64,0,129)'
	,	'rgb(107,86,129)'
	,	'rgb(52,0,104)'
	,	'rgb(86,69,104)'
	,	'rgb(39,0,79)'
	,	'rgb(66,53,79)'
	,	'rgb(191,0,255)'
	,	'rgb(234,170,255)'
	,	'rgb(141,0,189)'
	,	'rgb(173,126,189)'
	,	'rgb(96,0,129)'
	,	'rgb(118,86,129)'
	,	'rgb(78,0,104)'
	,	'rgb(95,69,104)'
	,	'rgb(59,0,79)'
	,	'rgb(73,53,79)'
	,	'rgb(255,0,255)'
	,	'rgb(255,170,255)'
	,	'rgb(189,0,189)'
	,	'rgb(189,126,189)'
	,	'rgb(129,0,129)'
	,	'rgb(129,86,129)'
	,	'rgb(104,0,104)'
	,	'rgb(104,69,104)'
	,	'rgb(79,0,79)'
	,	'rgb(79,53,79)'
	,	'rgb(255,0,191)'
	,	'rgb(255,170,234)'
	,	'rgb(189,0,141)'
	,	'rgb(189,126,173)'
	,	'rgb(129,0,96)'
	,	'rgb(129,86,118)'
	,	'rgb(104,0,78)'
	,	'rgb(104,69,95)'
	,	'rgb(79,0,59)'
	,	'rgb(79,53,73)'
	,	'rgb(255,0,127)'
	,	'rgb(255,170,212)'
	,	'rgb(189,0,94)'
	,	'rgb(189,126,157)'
	,	'rgb(129,0,64)'
	,	'rgb(129,86,107)'
	,	'rgb(104,0,52)'
	,	'rgb(104,69,86)'
	,	'rgb(79,0,39)'
	,	'rgb(79,53,66)'
	,	'rgb(255,0,63)'
	,	'rgb(255,170,191)'
	,	'rgb(189,0,46)'
	,	'rgb(189,126,141)'
	,	'rgb(129,0,31)'
	,	'rgb(129,86,96)'
	,	'rgb(104,0,25)'
	,	'rgb(104,69,78)'
	,	'rgb(79,0,19)'
	,	'rgb(79,53,59)'
	,	'rgb(51,51,51)'
	,	'rgb(80,80,80)'
	,	'rgb(105,105,105)'
	,	'rgb(130,130,130)'
	,	'rgb(190,190,190)'
	,	'rgb(255,255,255)'
	]
,	layer_color : function( name, tbls) {
		tbls = tbls || Active_DXF2TBL.a_TABLES;
		var layer_rec = Active_DXF2TBL.a_TABLES.find(function(v) {
			return (v._name_=='LAYER') 
				&& (name == (v.AcDbLayerTableRecord ? v.AcDbLayerTableRecord['2'] : v['2']));
		});
		if (layer_rec) {
			var col = parseFloat( layer_rec.AcDbLayerTableRecord ? layer_rec.AcDbLayerTableRecord['62'] : layer_rec['62']);
			return {
				rgb : this.defaults[Math.abs(col)]
			,	display : (col >= 0) ? '' :'none'
			}
		}
	}
,	colorize_svg : function( svgG ) {
		svgG = svgG || Active_DXFdrawerSVG.holder;
		if (svgG) {
			svgG.queryXpath('.//s:g[@*[local-name()="inkscape:label"]]',function(o) {
				var name = o.getAttribute('inkscape:label')
				,	layInfo = DXFcolors.layer_color(name)
				;
	//			console.log( layInfo );
				if (layInfo) {
					o.setAttribute('style','stroke:'+layInfo.rgb);
				} else {
					console.log("layer "+name+" has not assigned color " );
				}
			})
		}
	}
}
