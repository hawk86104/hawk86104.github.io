import{C as e,a3 as n,b as t,ar as r,ag as a}from"./three.CMHPKQCP1757651394539.js";import{d as o,b as c,a2 as i,w as s,s as l,G as f,o as _,e as m,I as d,u}from"./@vue.pEDXJ_3Z1757651394539.js";import{h}from"./object-hash.DhyHayLV1757651394539.js";const p={key:0,args:[0,1,64]},M={key:1,args:[.5,1,64]},S={key:2},g=["toneMapped","map","side","color"],v=o({__name:"index",props:{args:{default:null},from:{default:"rect"},toneMapped:{type:Boolean,default:!1},map:{default:null},intensity:{default:1},color:{default:new e(16777215)}},setup(e){const t=e,r=c();return i((()=>{r.value&&(r.value.color.multiplyScalar(t.intensity),r.value.needsUpdate=!0)})),s((()=>t.color),(e=>{r.value&&(r.value.color.set(e),r.value.color.multiplyScalar(t.intensity),r.value.needsUpdate=!0)})),l((()=>{})),(e,a)=>(_(),f("TresMesh",null,["circle"===t.from?(_(),f("TresRingGeometry",p)):"ring"===t.from?(_(),f("TresRingGeometry",M)):"rect"===t.from?(_(),f("TresPlaneGeometry",S)):(_(),m(t.from,{key:3,args:t})),d("TresMeshBasicMaterial",{ref_key:"material",ref:r,toneMapped:e.toneMapped,map:e.map,side:u(n),color:e.color},null,8,g)]))}});function A(e){var n=function(e,n){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,n);if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"==typeof n?n:String(n)}function E(e,n,t){return(n=A(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function y(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function I(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?y(Object(t),!0).forEach((function(n){E(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):y(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function O(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function R(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,c,i=[],s=!0,l=!1;try{if(o=(t=t.call(e)).next,0===n);else for(;!(s=(r=o.call(t)).done)&&(i.push(r.value),i.length!==n);s=!0);}catch(f){l=!0,a=f}finally{try{if(!s&&null!=t.return&&(c=t.return(),Object(c)!==c))return}finally{if(l)throw a}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return O(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?O(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(e,n,t){return n&&function(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,A(r.key),r)}}(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function C(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(e,n){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},P(e,n)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}function j(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,r=D(e);if(n){var a=D(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return function(e,n){if(n&&("object"==typeof n||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return C(e)}(this,t)}}var L,w,H,x="csm_DiffuseColor",N="csm_Normal",F="csm_Roughness",U="csm_Metalness",B="csm_Emissive",k="csm_AO",V="csm_Bump",z="csm_Clearcoat",G="csm_ClearcoatRoughness",K="csm_ClearcoatNormal",Y="csm_PointSize",W="csm_FragColor",X="csm_DepthAlpha",Z="csm_Position",$="csm_PositionRaw",q=(E(L={},"".concat(Z),"*"),E(L,"".concat($),"*"),E(L,"".concat(N),"*"),E(L,"".concat(Y),["PointsMaterial"]),E(L,"".concat(x),"*"),E(L,"".concat(W),"*"),E(L,"".concat(B),["MeshStandardMaterial","MeshPhysicalMaterial"]),E(L,"".concat(F),["MeshStandardMaterial","MeshPhysicalMaterial"]),E(L,"".concat(U),["MeshStandardMaterial","MeshPhysicalMaterial"]),E(L,"".concat(k),["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"]),E(L,"".concat(V),["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"]),E(L,"".concat(X),["MeshDepthMaterial"]),E(L,"".concat(z),["MeshPhysicalMaterial"]),E(L,"".concat(G),["MeshPhysicalMaterial"]),E(L,"".concat(K),["MeshPhysicalMaterial"]),L),J={"#include <lights_physical_fragment>":r.lights_physical_fragment},Q=(E(w={},"".concat(N),{"#include <beginnormal_vertex>":"\n    vec3 objectNormal = ".concat(N,";\n    #ifdef USE_TANGENT\n\t    vec3 objectTangent = vec3( tangent.xyz );\n    #endif\n    ")}),E(w,"".concat(Z),{"#include <begin_vertex>":"\n    vec3 transformed = ".concat(Z,";\n  ")}),E(w,"".concat($),{"#include <begin_vertex>":"\n    vec4 csm_internal_positionUnprojected = ".concat($,";\n    mat4x4 csm_internal_unprojectMatrix = projectionMatrix * modelViewMatrix;\n    #ifdef USE_INSTANCING\n      csm_internal_unprojectMatrix = csm_internal_unprojectMatrix * instanceMatrix;\n    #endif\n    csm_internal_positionUnprojected = inverse(csm_internal_unprojectMatrix) * csm_internal_positionUnprojected;\n    vec3 transformed = csm_internal_positionUnprojected.xyz;\n  ")}),E(w,"".concat(Y),{"gl_PointSize = size;":"\n    gl_PointSize = ".concat(Y,";\n    ")}),E(w,"".concat(x),{"#include <color_fragment>":"\n    #include <color_fragment>\n    diffuseColor = ".concat(x,";\n  ")}),E(w,"".concat(W),{"#include <dithering_fragment>":"\n    #include <dithering_fragment>\n    gl_FragColor  = ".concat(W,";\n  ")}),E(w,"".concat(B),{"vec3 totalEmissiveRadiance = emissive;":"\n    vec3 totalEmissiveRadiance = ".concat(B,";\n    ")}),E(w,"".concat(F),{"#include <roughnessmap_fragment>":"\n    #include <roughnessmap_fragment>\n    roughnessFactor = ".concat(F,";\n    ")}),E(w,"".concat(U),{"#include <metalnessmap_fragment>":"\n    #include <metalnessmap_fragment>\n    metalnessFactor = ".concat(U,";\n    ")}),E(w,"".concat(k),{"#include <aomap_fragment>":"\n    #include <aomap_fragment>\n    reflectedLight.indirectDiffuse *= 1. - ".concat(k,";\n    ")}),E(w,"".concat(V),{"#include <normal_fragment_maps>":"\n    #include <normal_fragment_maps>\n\n    vec3 csm_internal_orthogonal = ".concat(V," - (dot(").concat(V,", normal) * normal);\n    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;\n    normal = normalize(normal - csm_internal_projectedbump);\n    ")}),E(w,"".concat(X),{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":"\n      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * ".concat(X," );\n    "),"gl_FragColor = packDepthToRGBA( fragCoordZ );":"\n      gl_FragColor = packDepthToRGBA( fragCoordZ );\n      gl_FragColor.a *= ".concat(X,";\n    ")}),E(w,"".concat(z),{"material.clearcoat = clearcoat;":"material.clearcoat = ".concat(z,";")}),E(w,"".concat(G),{"material.clearcoatRoughness = clearcoatRoughness;":"material.clearcoatRoughness = ".concat(G,";")}),E(w,"".concat(K),{"#include <clearcoat_normal_fragment_begin>":"\n      vec3 csm_coat_internal_orthogonal = csm_ClearcoatNormal - (dot(csm_ClearcoatNormal, nonPerturbedNormal) * nonPerturbedNormal);\n      vec3 csm_coat_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_coat_internal_orthogonal;\n      vec3 clearcoatNormal = normalize(nonPerturbedNormal - csm_coat_internal_projectedbump);\n    "}),w),ee=(E(H={},"".concat(Z),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":"\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( ".concat(Z,", 1.0 );\n  ")}),E(H,"".concat($),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":"\n    gl_Position = ".concat(Z,";\n  ")}),E(H,"".concat(x),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":"\n    gl_FragColor = ".concat(x,";\n  ")}),E(H,"".concat(W),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":"\n    gl_FragColor = ".concat(W,";\n  ")}),H),ne={clearcoat:[z,K,G]},te=["baseMaterial","fragmentShader","vertexShader","uniforms","patchMap","cacheKey","silent"],re=function(e,n,t){return e.split(n).join(t)},ae=function(e,n){return new RegExp("\\b".concat((t=n,t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")),"\\b")).test(e);var t};function oe(e){return e?e.replace(/\s/g,""):void 0}function ce(e){return e.replace(/\/\*\*(.*?)\*\/|\/\/(.*?)\n/gm,"")}var ie=function(){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&P(e,n)}(n,a);var e=j(n);function n(r){var a,o,c,i,s=r.baseMaterial,l=r.fragmentShader,f=r.vertexShader,_=r.uniforms,m=r.patchMap,d=r.cacheKey,u=r.silent,h=b(r,te);if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),!function(e){try{new e}catch(n){if(n.message.indexOf("is not a constructor")>=0)return!1}return!0}(s)?(o=s,Object.assign(o,h)):o=new s(h),"RawShaderMaterial"===o.type)throw new Error("CustomShaderMaterial does not support RawShaderMaterial");(function(e,n){Object.assign(e,n);var t=Object.getPrototypeOf(n);Object.entries(Object.getOwnPropertyDescriptors(t)).filter((function(e){var n="function"==typeof e[1].get,t="function"==typeof e[1].set,r="function"==typeof e[1].value,a="constructor"===e[0];return(n||t||r)&&!a})).forEach((function(n){"function"!=typeof e[n[0]]&&Object.defineProperty(e,n[0],n[1])}))})(C(a=e.call(this)),o),a.__csm={patchMap:m||{},fragmentShader:l||"",vertexShader:f||"",cacheKey:d,baseMaterial:s,instanceID:t.generateUUID(),type:o.type,isAlreadyExtended:(c=o.onBeforeCompile,i=c.toString().trim(),!(0===i.substring(i.indexOf("{")+1,i.lastIndexOf("}")).trim().length)),cacheHash:"",silent:u},a.uniforms=I(I({},a.uniforms||{}),_||{});var p=a.__csm,M=p.fragmentShader,S=p.vertexShader,g=a.uniforms;return a.__csm.cacheHash=a._getCacheHash(),a._generateMaterial(M,S,g),a}return T(n,[{key:"update",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.uniforms=e.uniforms||this.uniforms,Object.assign(this.__csm,e);var n=this.__csm,t=n.fragmentShader,r=n.vertexShader,a=this.uniforms,o=this._getCacheHash();this.__csm.cacheHash=o,this._generateMaterial(t,r,a)}},{key:"clone",value:function(){var e={baseMaterial:this.__csm.baseMaterial,fragmentShader:this.__csm.fragmentShader,vertexShader:this.__csm.vertexShader,uniforms:this.uniforms,silent:this.__csm.silent,patchMap:this.__csm.patchMap,cacheKey:this.__csm.cacheKey},n=new this.constructor(e);return Object.assign(this,n),n}},{key:"_getCacheHash",value:function(){var e=this.__csm,n=e.fragmentShader,t=e.vertexShader,r=this.uniforms,a=[oe(n),oe(t),r].filter((function(e){return void 0!==e}));return a.length>0?h(a,{excludeValues:!0}):this.customProgramCacheKey()}},{key:"_generateMaterial",value:function(e,n,t){var r=this;this.uniforms=t||{},this.customProgramCacheKey=function(){return r.__csm.cacheHash};var a=function(t){try{var a=r._getMaterialDefine();if(e){var o=r._patchShader(ce(e),t.fragmentShader,!0);t.fragmentShader=a+o}if(n){var c=r._patchShader(ce(n),t.vertexShader);t.vertexShader="#define IS_VERTEX;\n"+c,t.vertexShader=a+t.vertexShader}t.uniforms=I(I({},t.uniforms),r.uniforms),r.uniforms=t.uniforms}catch(i){console.error(i)}};if(this.__csm.isAlreadyExtended){var o=this.onBeforeCompile;this.onBeforeCompile=function(e,n){o(e,n),a(e)}}else this.onBeforeCompile=a;this.needsUpdate=!0}},{key:"_patchShader",value:function(e,n,t){var r=this,a=n,o=I(I({},this._getPatchMapForMaterial()),this.__csm.patchMap);Object.entries(ne).forEach((function(n){var t=R(n,2),a=t[0],o=t[1].find((function(n){return ae(e,n)}));if(o&&!r[a])throw new Error('CSM: Property "'.concat(a,'" is required to use output "').concat(o,'". Shader cannot compile.'))})),Object.entries(J).forEach((function(e){var n=R(e,2),t=n[0],r=n[1];a=re(a,t,r)})),Object.keys(o).forEach((function(n){Object.keys(o[n]).forEach((function(t){var c=q[n],i=r.__csm.type;if("*"===n||ae(e,n)){if(!(!c||Array.isArray(c)&&c.includes(i)||"*"===c))throw new Error("CSM: ".concat(n," is not available in ").concat(i,". Shader cannot compile."));a=re(a,t,o[n][t])}}))}));var c,i,s,l,f="csm_main_"+this.__csm.instanceID.replace(/-/g,"_"),_=e.replace(/void\s+main\s*\(\s*\)/g,"void ".concat(f,"()")),m=e.includes("void main()"),d=a.includes("// #_CSM_#");return m&&(d&&this.__csm.isAlreadyExtended?(a=a.replace("void main() {","\n            ".concat(_,"\n            \n            void main() {\n          ")),c=a,i="// #_CSM_#",s="\n            ".concat(f,"();\n            // #_CSM_#\n          "),l=c.lastIndexOf(i),a=-1===l?c:c.substring(0,l)+s+c.substring(l+i.length)):a=a.replace("void main() {","\n            #ifndef CSM_IS_HEAD_DEFAULTS_DEFINED\n              ".concat("\n    varying mat4 csm_internal_vModelViewMatrix;\n","\n              #define CSM_IS_HEAD_DEFAULTS_DEFINED 1\n            #endif\n    \n            ").concat("\n    \n#ifdef IS_VERTEX\n    vec3 csm_Position;\n    vec4 csm_PositionRaw;\n    vec3 csm_Normal;\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        float csm_PointSize;\n    #endif\n#else\n    vec4 csm_DiffuseColor;\n    vec4 csm_FragColor;\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        vec3 csm_Emissive;\n        float csm_Roughness;\n        float csm_Metalness;\n        \n        #if defined IS_MESHPHYSICALMATERIAL\n            float csm_Clearcoat;\n            float csm_ClearcoatRoughness;\n            vec3 csm_ClearcoatNormal;\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        float csm_AO;\n    #endif\n\n    // csm_Bump\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        vec3 csm_Bump;\n    #endif\n\n    float csm_DepthAlpha;\n#endif\n","\n    \n            ").concat(_,"\n            \n            void main() {\n              #ifndef CSM_IS_DEFAULTS_DEFINED\n                ").concat("\n\n#ifdef IS_VERTEX\n    // csm_Position & csm_PositionRaw\n    #ifdef IS_UNKNOWN\n        csm_Position = vec3(0.0);\n        csm_PositionRaw = vec4(0.0);\n        csm_Normal = vec3(0.0);\n    #else\n        csm_Position = position;\n        csm_PositionRaw = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n        csm_Normal = normal;\n    #endif\n\n    // csm_PointSize\n    #ifdef IS_POINTSMATERIAL\n        csm_PointSize = size;\n    #endif\n#else\n    // csm_DiffuseColor & csm_FragColor\n    #if defined IS_UNKNOWN || defined IS_SHADERMATERIAL || defined IS_MESHDEPTHMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_SHADOWMATERIAL\n        csm_DiffuseColor = vec4(1.0, 0.0, 1.0, 1.0);\n        csm_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n    #else\n        #ifdef USE_MAP\n            vec4 _csm_sampledDiffuseColor = texture2D(map, vMapUv);\n\n            #ifdef DECODE_VIDEO_TEXTURE\n            // inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n            _csm_sampledDiffuseColor = vec4(mix(pow(_csm_sampledDiffuseColor.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), _csm_sampledDiffuseColor.rgb * 0.0773993808, vec3(lessThanEqual(_csm_sampledDiffuseColor.rgb, vec3(0.04045)))), _csm_sampledDiffuseColor.w);\n            #endif\n\n            csm_DiffuseColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n            csm_FragColor = vec4(diffuse, opacity) * _csm_sampledDiffuseColor;\n        #else\n            csm_DiffuseColor = vec4(diffuse, opacity);\n            csm_FragColor = vec4(diffuse, opacity);\n        #endif\n    #endif\n\n    // csm_Emissive, csm_Roughness, csm_Metalness\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL\n        csm_Emissive = emissive;\n        csm_Roughness = roughness;\n        csm_Metalness = metalness;\n\n        #if defined IS_MESHPHYSICALMATERIAL\n            #ifdef USE_CLEARCOAT\n                csm_Clearcoat = clearcoat;\n                csm_ClearcoatRoughness = clearcoatRoughness;\n            #else\n                csm_Clearcoat = 0.0;\n                csm_ClearcoatRoughness = 0.0;\n            #endif\n        #endif\n    #endif\n\n    // csm_AO\n    #if defined IS_MESHSTANDARDMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHBASICMATERIAL || defined IS_MESHLAMBERTMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHTOONMATERIAL\n        csm_AO = 0.0;\n    #endif\n\n    // csm_Bump\n    #if defined IS_MESHLAMBERTMATERIAL || defined IS_MESHMATCAPMATERIAL || defined IS_MESHNORMALMATERIAL || defined IS_MESHPHONGMATERIAL || defined IS_MESHPHYSICALMATERIAL || defined IS_MESHSTANDARDMATERIAL || defined IS_MESHTOONMATERIAL || defined IS_SHADOWMATERIAL \n        csm_Bump = vec3(0.0);\n    #endif\n\n    csm_DepthAlpha = 1.0;\n#endif\n","\n                #define CSM_IS_DEFAULTS_DEFINED 1\n              #endif\n              \n              #ifndef CSM_IS_MAIN_DEFAULTS_DEFINED\n                ").concat(t?"\n    \n":"\n    csm_internal_vModelViewMatrix = modelViewMatrix;\n","\n                #define CSM_IS_MAIN_DEFAULTS_DEFINED 1\n              #endif\n  \n              ").concat(f,"();\n              // #_CSM_#\n          "))),a}},{key:"_getMaterialDefine",value:function(){var e=this.__csm.type;return e?"#define IS_".concat(e.toUpperCase(),";\n"):"#define IS_UNKNOWN;\n"}},{key:"_getPatchMapForMaterial",value:function(){return"ShaderMaterial"===this.__csm.type?ee:Q}}]),n}();export{ie as C,v as _};
