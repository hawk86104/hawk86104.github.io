import{_ as e}from"./three.RuuDeeIf1736251016080.js";import{e as n,U as t,b as a}from"./@tresjs.8C7OKmBm1736251016080.js";import{P as o}from"./tweakpane.yHWGBmom1736251016080.js";import{d as r,a4 as i,X as l,e as s,o as u,f as c,g as p,J as f,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.-Mz_IXfk1736251016080.js";import"./@vueuse.HhUha1mw1736251016080.js";const x=w;!function(e,n){const t=w,a=S();for(;;)try{if(171244===-parseInt(t(174))/1+parseInt(t(173))/2*(parseInt(t(157))/3)+-parseInt(t(164))/4*(parseInt(t(143))/5)+parseInt(t(130))/6+-parseInt(t(149))/7+-parseInt(t(118))/8+-parseInt(t(145))/9*(-parseInt(t(121))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(181)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=w,n=new RegExp(e(126)),t=new RegExp(e(176),"i"),a=b(e(141));n[e(163)](a+e(170))&&t[e(163)](a+e(175))?b():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(){const e=["toString","stateObject","Debug","exception","prototype","712161xWHpCg","color","uWaveHeight","rotation","error","TresIcosahedronGeometry","test","24452OgdAAK","set","addBinding","TresGroup","TresMesh","TresPoints","chain","gger","info","2rKHSLs","153844lscmoA","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#080820","console","SRGBColorSpace","constructor","apply","value","bind","TresHemisphereLight","1001960UEPGau","TresPerspectiveCamera","length","4935010gqdLba","action","log","TresMeshBasicMaterial","string","function *\\( *\\)","海浪变化速度",'{}.constructor("return this")( )',"海浪高度","1763916PRoXFE","TresShaderMaterial","size","while (true) {}","FrontSide","debu","#ffffff","warn","pointsEarth","groupRef","#122148","init","#17c5a9","255KAEtJO","uniforms","9adkxBq","uWaveSpeed","change","table","1839446JyPNCH","粒子大小","trace"];return(S=function(){return e})()}function w(e,n){const t=S();return(w=function(e,n){return t[e-=118]})(e,n)}T(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function("return (function() "+e(128)+");")()}catch(t){n=window}return n}(),t=n[e(178)]=n[e(178)]||{},a=[e(123),e(137),e(172),e(161),e(155),e(148),e(151)];for(let o=0;o<a[e(120)];o++){const n=T[e(180)][e(156)][e(183)](T),r=a[o],i=t[r]||n;n.__proto__=T[e(183)](T),n[e(152)]=i[e(152)][e(183)](i),t[r]=n}}))();const _=r({__name:x(138),async setup(r){const y=x;let T,S;const w={color:y(142),pointSize:4},_={clearColor:y(140),shadows:!1,alpha:!1,outputColorSpace:e[y(179)]},b={color:w[y(158)],wireframe:!0,transparent:!0,opacity:.2},z=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),E=z[0],P=z[1],j=z[2],A=z[3],D=z[4],C={uniforms:{size:{type:"f",value:w.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:j},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:D},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(134)]},k=l(),I=l(),H=(new o).addFolder({title:y(154)});H[y(166)](w,y(158),{type:y(158)}).on(y(147),(({value:e})=>{const n=y;I[n(182)].color[n(165)](e)})),H[y(166)](C.uniforms[y(132)],y(182),{min:.1,max:10,step:.1,label:y(150)}),H[y(166)](C[y(144)][y(159)],"value",{min:.01,max:.5,step:.01,label:y(129)}),H[y(166)](C[y(144)][y(146)],y(182),{min:.01,max:1,step:.01,label:y(127)});const{onLoop:U}=n();return U((({delta:e})=>{const n=y;k[n(182)]&&(k[n(182)][n(160)].y+=.002,C.uniforms.uTime[n(182)]+=10*e)})),(e,n)=>{const a=y,o=s("TresCanvas");return u(),c(o,d(_,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=f(a(119),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),f(a(167),{ref_key:a(139),ref:k},[f(a(168),null,[n[0]||(n[0]=f(a(162),{args:[1,4]},null,-1)),f(a(124),d({ref_key:"wireframeMaterialRef",ref:I},b),null,16)]),f(a(169),null,[n[1]||(n[1]=f(a(162),{args:[1,128]},null,-1)),f(a(131),h(g(C)),null,16)])],512),n[3]||(n[3]=f(a(184),{args:[a(136),a(177),3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=w;if(typeof e===t(125))return function(e){}[t(180)](t(133)).apply("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(180)](t(135)+"gger").call(t(122)):function(){return!1}.constructor(t(135)+t(171))[t(181)](t(153)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
