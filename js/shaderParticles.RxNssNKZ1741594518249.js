import{e as n,o as t}from"./@tresjs.gjafZgVK1741594518249.js";import{aX as o}from"./three.8y0_KTxz1741594518249.js";import{d as e,r as i,e as r,o as s,f as a,g as c,N as u,j as l,u as f,aj as p,ak as d,m as h}from"./@vue.NRI7TcgI1741594518249.js";import"./postprocessing.iiPTtJPW1741594518249.js";import"./@vueuse.8xnC6EWf1741594518249.js";function m(n,t){const o=T();return(m=function(n,t){return o[n-=322]})(n,t)}const g=m;!function(n,t){const o=m,e=T();for(;;)try{if(126926===parseInt(o(352))/1*(-parseInt(o(350))/2)+-parseInt(o(346))/3*(-parseInt(o(355))/4)+-parseInt(o(363))/5*(parseInt(o(339))/6)+-parseInt(o(368))/7+-parseInt(o(358))/8+parseInt(o(324))/9+parseInt(o(332))/10)break;e.push(e.shift())}catch(i){e.push(e.shift())}}();const v=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[m(357)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){v(this,(function(){const n=m,t=new RegExp(n(361)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=I("init");t[n(344)](e+"chain")&&o.test(e+"input")?I():e("0")}))()}();const w=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[m(357)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();w(void 0,(function(){const n=m,t=function(){const n=m;let t;try{t=Function("return (function() "+n(341)+");")()}catch(o){t=window}return t}(),o=t[n(347)]=t[n(347)]||{},e=[n(365),"warn",n(340),n(326),n(360),n(327),n(348)];for(let i=0;i<e[n(338)];i++){const t=w[n(345)][n(353)][n(323)](w),r=e[i],s=o[r]||t;t[n(369)]=w.bind(w),t.toString=s[n(322)][n(323)](s),o[r]=t}}))();const P={position:[-2,-2,-2]},x=[g(336),"a-scale"],y=3e3,j=e({__name:g(342),setup(e){const m=g,v=i({clearColor:m(331),shadows:!0,alpha:!1}),w={transparent:!0,blending:o,depthWrite:!1,vertexShader:m(335),fragmentShader:m(356),uniforms:{uSize:{value:100},uPixelRatio:{value:Math[m(337)](window[m(351)],2)},uTime:{value:0}}},j=new Float32Array(9e3),I=new Float32Array(y);for(let n=0;n<y;n++)j[3*n+0]=4*Math[m(343)](),j[3*n+1]=4*Math[m(343)](),j[3*n+2]=4*Math[m(343)](),I[n]=Math[m(343)]();const{onLoop:T}=n();return T((({elapsed:n})=>{const t=m;w.uniforms[t(328)].value=n})),(n,o)=>{const e=m,i=r(e(325));return s(),a(i,h(v,{"window-size":""}),{default:c((()=>[o[0]||(o[0]=u("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:.1,far:1e3,"look-at":[-8,3,-3]},null,-1)),l(f(t)),o[1]||(o[1]=u("TresAmbientLight",{intensity:.5},null,-1)),u(e(364),P,[u("TresBufferGeometry",{position:[f(j),3],"a-scale":[f(I),1]},null,8,x),u(e(330),p(d(w)),null,16)]),o[2]||(o[2]=u(e(359),{position:[0,2,4],intensity:1,"cast-shadow":""},null,-1)),o[3]||(o[3]=u(e(333),null,null,-1))])),_:1},16)}}});function I(n){function t(n){const o=m;if(typeof n===o(334))return function(n){}.constructor("while (true) {}").apply(o(329));1!==(""+n/n)[o(338)]||n%20==0?function(){return!0}[o(345)](o(367)+"gger")[o(362)](o(354)):function(){return!1}[o(345)](o(367)+o(366)).apply(o(349)),t(++n)}try{if(n)return t;t(0)}catch(o){}}function T(){const n=["107577vQnyHA","console","trace","stateObject","6xjpFHa","devicePixelRatio","15094wgZtUw","prototype","action","8EkIIhz","\n  void main()\n    {\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n      float strength = 0.05 / distanceToCenter - 0.1;\n\n      gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n    }\n  ","apply","1612144fEAIXX","TresDirectionalLight","exception","function *\\( *\\)","call","5xogOru","TresPoints","log","gger","debu","309372IDnVQC","__proto__","toString","bind","2251368thiEen","TresCanvas","error","table","uTime","counter","TresShaderMaterial","black","2938380eWGCBo","TresGridHelper","string","\n  uniform float uPixelRatio;\n  uniform float uSize;\n  uniform float uTime;\n  attribute float aScale;\n\n  void main()\n  {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n      modelPosition.y += sin(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectionPosition = projectionMatrix * viewPosition;\n\n      gl_Position = projectionPosition;\n      gl_PointSize = aScale * uSize * uPixelRatio;\n      gl_PointSize *= (1.0 / - viewPosition.z);\n  }\n  ","position","min","length","1186716qFHcws","info",'{}.constructor("return this")( )',"shaderParticles","random","test","constructor"];return(T=function(){return n})()}export{j as default};
