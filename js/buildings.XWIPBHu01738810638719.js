import{u as t,_ as n,a as o}from"./mergeTres.ZmicJf901738810638719.js";import{l as r}from"./utils.6QzdQGGp1738810638719.js";import{e}from"./@tresjs.8axf5yqM1738810638719.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1738810638719.js";import{_ as C}from"./@fesjs.5sDv5KaN1738810638719.js";import"./@amap.OmDF_WNh1738810638719.js";import"./pinia.a31yeUkM1738810638719.js";import"./three.6w8Allze1738810638719.js";import"./three-mesh-bvh.wW9dzxva1738810638719.js";import"./@vueuse.hJpps2zM1738810638719.js";import"./vue-router.bGXYs4Br1738810638719.js";import"./lodash-es.pklfUAS51738810638719.js";import"./@qlin.yHhFDldE1738810638719.js";import"./@floating-ui.BPbuo5Gx1738810638719.js";import"./@juggle.7yjBMqoW1738810638719.js";const y=S;!function(t,n){const o=S,r=I();for(;;)try{if(384420===-parseInt(o(325))/1*(parseInt(o(330))/2)+parseInt(o(298))/3*(-parseInt(o(353))/4)+parseInt(o(333))/5+parseInt(o(297))/6*(parseInt(o(307))/7)+parseInt(o(328))/8*(parseInt(o(356))/9)+-parseInt(o(324))/10+parseInt(o(340))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(350)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=S,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(316),"i"),r=z(t(314));n[t(301)](r+"chain")&&o[t(301)](r+t(313))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(350)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();w(void 0,(function(){const t=S;let n;try{n=Function(t(357)+t(311)+");")()}catch(e){n=window}const o=n.console=n[t(335)]||{},r=["log",t(352),t(351),t(320),t(321),"table",t(336)];for(let a=0;a<r[t(310)];a++){const n=w[t(338)][t(308)][t(315)](w),e=r[a],i=o[e]||n;n[t(332)]=w[t(315)](w),n[t(354)]=i[t(354)][t(315)](i),o[e]=n}}))();const b=[y(327),y(306),y(299)];function I(){const t=["uniforms","14068384XQUvMe","action","uvArray","call","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","normalArray","getZoom","tbgRef","counter","TresGroup","apply","info","warn","12CyMZJj","toString","cameraState","35181ofizFX","return (function() ","gger","debu","1143924JcsNYN","699627uNyTHt","normal","mapHandle","test","u_far","customCoords","u_near","stateObject","faceUv","7NeRZac","prototype","u_zoom","length",'{}.constructor("return this")( )',"buildings","input","init","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","geometry","atan","TresMesh","error","exception","positionArray","while (true) {}","2980080daxRMj","2dSJHVh","value","position","648qHrEdM","near","738494KFzeuG","lngLatToCoord","__proto__","1671610LUcRau","exp","console","trace","buildingModels","constructor"];return(I=function(){return t})()}function S(t,n){const o=I();return(S=function(t,n){return o[t-=297]})(t,n)}const j=a({__name:y(337),setup(n){const o=t(),a=t=>{const n=S;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(300)][n(303)][n(331)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=S,n=await r(t(344),t(312));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(317)]);const e=new Float32Array(r[t(317)]),i=new Float32Array(r[t(306)]),l=new Float32Array(r.geometry[t(310)]);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;o.cameraState&&(g[t(339)][t(309)][t(326)]=o.mapHandle[t(346)](),g[t(339)][t(304)].value=o[t(355)][t(329)],g[t(339)][t(302)][t(326)]=o[t(355)].far)})),(t,n)=>{const o=S;return c(),s(o(349),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(319),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:r(347),position:[t[r(322)],3],faceUv:[t[r(342)],2],normal:[t[r(345)],3]},null,8,b),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=S;if("string"==typeof t)return function(t){}[o(338)](o(323)).apply(o(348));1!==(""+t/t)[o(310)]||t%20==0?function(){return!0}[o(338)](o(359)+"gger")[o(343)](o(341)):function(){return!1}.constructor(o(359)+o(358))[o(350)](o(305)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const R=M;!function(t,n){const o=M,r=P();for(;;)try{if(574312===-parseInt(o(333))/1*(parseInt(o(340))/2)+-parseInt(o(327))/3+-parseInt(o(358))/4+-parseInt(o(331))/5+parseInt(o(328))/6*(parseInt(o(350))/7)+-parseInt(o(344))/8*(-parseInt(o(338))/9)+parseInt(o(352))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[M(336)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=M,n=new RegExp(t(349)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=A(t(329));n.test(r+"chain")&&o[t(357)](r+t(342))?A():r("0")}))()}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[M(336)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function P(){const t=["bind","TresPerspectiveCamera","test","3053540vqEUUd","tcRef","buildings","info","return (function() ","TresCanvas","3186618LoBevp","6EEWCLi","init","tresCanvas","4226650CdUrkQ","TresAmbientLight","12739ZssXnR","manual","debu","apply","log","4380993kYoSwe","darkblue","158QgJKaZ","prototype","input","trace","8BrTfqK","constructor","toString","action","length","function *\\( *\\)","1372105vFFvjZ","__proto__","35688220PmebzK","table","console"];return(P=function(){return t})()}function M(t,n){const o=P();return(M=function(t,n){return o[t-=324]})(t,n)}U(void 0,(function(){const t=M,n=function(){const t=M;let n;try{n=Function(t(325)+'{}.constructor("return this")( ));')()}catch(o){n=window}return n}(),o=n[t(354)]=n.console||{},r=[t(337),"warn",t(324),"error","exception",t(353),t(343)];for(let e=0;e<r.length;e++){const n=U.constructor[t(341)].bind(U),a=r[e],i=o[a]||n;n[t(351)]=U[t(355)](U),n.toString=i[t(346)][t(355)](i),o[a]=n}}))();function A(t){function n(t){const o=M;if("string"==typeof t)return function(t){}[o(345)]("while (true) {}")[o(336)]("counter");1!==(""+t/t)[o(348)]||t%20==0?function(){return!0}[o(345)](o(335)+"gger").call(o(347)):function(){return!1}.constructor(o(335)+"gger")[o(336)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const L=C(a({__name:R(360),setup(t){const r=R,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(334)});return(t,i)=>{const l=r,f=d(l(326));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(339)}),g(f,v({id:l(330),ref:l(359)},a),{default:m((()=>[i[0]||(i[0]=p(l(356),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(332),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{L as default};
