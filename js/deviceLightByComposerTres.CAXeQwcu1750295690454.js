import{A as e,C as a,av as t,ay as s,c9 as r}from"./three.BCtXTlZY1750295690454.js";import{m as l,e as o,k as i,a as n}from"./@tresjs.wZhcVcHe1750295690454.js";import{P as d}from"./tweakpane.C0HtAJSg1750295690454.js";import{r as u,u as m}from"./device.CJ65bWVk1750295690454.js";import{d as h,a3 as p,a2 as c,G as f,o as v,I as g,u as b,F as _,r as j,h as w,e as y,f as k,j as C,ak as B,al as T,am as x,m as L}from"./@vue.Mugdq9o81750295690454.js";import"./postprocessing.B3dpkXpp1750295690454.js";import"./@vueuse.8goBbrUr1750295690454.js";const P=["object"],S=["object"],M=h({__name:"ByComposerTres",props:{threshold:{default:0},strength:{default:.972},radius:{default:.21}},async setup(t){let s,r;const n=t,{nodes:d}=([s,r]=p((()=>i("./plugins/industry4/model/modelDraco.glb",{draco:!0,decoderPath:"./draco/"}))),s=await s,r(),s),h=u(d.Sketchfab_model),{camera:j,renderer:w,scene:y,sizes:k}=l();let C=null,B=null,T=null;const x=new e({color:"black"});c((()=>{if(j.value){const{finalComposer:e,effectComposer:a,bloomPass:t}=m(y.value,j.value,w.value,k.width.value,k.height.value);C=e,B=a,T=t,T.threshold=n.threshold,T.strength=n.strength,T.radius=n.radius}n.threshold&&(T.threshold=n.threshold),n.strength&&(T.strength=n.strength),n.radius&&(T.radius=n.radius)}));const L={},{onLoop:M,onAfterLoop:A}=o();let z=d.Sketchfab_model.getObjectByName("canister_turbine_011_Nickel-Light-PBR_0"),D=z.material.clone(),N=new e({color:new a("red"),transparent:!0,opacity:1});return M((({elapsed:e})=>{d.hull_turbine&&(d.hull_turbine.rotation.x+=.03,d.blades_turbine_003.rotation.x+=.03),Math.floor(e)%2?z.material=D:z.material=N})),A((({elapsed:e})=>{B&&(y.value.traverse((e=>{var a;(a=e).isMesh&&(L[a.uuid]=a.material,a.material=x)})),B.render(e)),C&&(y.value.traverse((e=>{var a;L[(a=e).uuid]&&(a.material=L[a.uuid],delete L[a.uuid])})),C.render(e))})),(e,a)=>(v(),f(_,null,[g("primitive",{object:b(d).Sketchfab_model},null,8,P),g("primitive",{object:b(h)},null,8,S)],64))}}),A=h({__name:"deviceLightByComposerTres",setup(e){const a=j({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:s,toneMapping:t}),l=j({autoRotate:!0}),o=j({threshold:0,strength:.972,radius:.21}),i=new d({title:"参数"});return i.addBinding(o,"threshold",{label:"阈值",min:0,max:1,step:.1}),i.addBinding(o,"strength",{label:"强度",min:0,max:3,step:.2}),i.addBinding(o,"radius",{label:"半径",min:0,max:1,step:.1}),i.addBlade({view:"text",label:"post-processing",parse:e=>String(e),value:"未完成：等待Tresjs库更新"}),(e,t)=>{const s=w("TresCanvas");return v(),y(s,L(a,{"window-size":""}),{default:k((()=>[t[0]||(t[0]=g("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1)),C(b(n),B(T(l)),null,16),t[1]||(t[1]=g("TresAmbientLight",{color:"#ffffff",intensity:"40"},null,-1)),t[2]||(t[2]=g("TresDirectionalLight",{position:[0,2,-4],intensity:1},null,-1)),(v(),y(x,null,{default:k((()=>[C(M,B(T(o)),null,16)])),_:1}))])),_:1},16)}}});export{A as default};
