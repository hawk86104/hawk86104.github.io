import{_ as n,aX as t,cd as e,ab as o}from"./three.8tDGqmLF1741309500666.js";import{m as i,e as r,a}from"./@tresjs.yaBKiR-I1741309500666.js";import{d as s,b as l,a3 as u,a2 as c,o as f,H as p,N as m,aj as b,ak as g,u as v}from"./@vue.NRI7TcgI1741309500666.js";const y=_;function d(){const n=["position","test","xRayEffect","return (function() ","stateObject","mergeGeometries","length","3862840FnMMlR","log","debu","2214cloKEU","16707rNxGzT","value","uOpacity","while (true) {}","DoubleSide","dispose","string","apply","table","verticesNeedUpdate","geometry","6zScLKi","prototype","action","184LNQiGS","901746owGpBu","trace","info","9247876moNNSz","map","Color","call","model","__proto__","24dHgZsv","constructor","gger","toString","error","TresBufferGeometry","101365KzIVAo","opacity","149BrTUbc","push","Mesh","offsetY","chain","1633499nOTlHJ","traverse","uniforms","exception","bind","console","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","color","init","glowColor","warn"];return(d=function(){return n})()}!function(n,t){const e=_,o=d();for(;;)try{if(321337===parseInt(e(484))/1*(parseInt(e(510))/2)+parseInt(e(511))/3*(parseInt(e(525))/4)+-parseInt(e(482))/5+parseInt(e(522))/6*(-parseInt(e(489))/7)+parseInt(e(476))/8*(-parseInt(e(526))/9)+-parseInt(e(507))/10+parseInt(e(529))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(518)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){h(this,(function(){const n=_,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(495),"i"),o=x(n(497));t.test(o+n(488))&&e[n(501)](o+"input")?x():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(518)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(n,t){const e=d();return(_=function(n,t){return e[n-=475]})(n,t)}w(void 0,(function(){const n=_;let t;try{t=Function(n(503)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(494)]=t[n(494)]||{},o=[n(508),n(499),n(528),n(480),n(492),n(519),n(527)];for(let r=0;r<o.length;r++){const t=w[n(477)][n(523)][n(493)](w),i=o[r],a=e[i]||t;t[n(475)]=w[n(493)](w),t[n(479)]=a[n(479)][n(493)](a),e[i]=t}}))();const z=s({__name:y(502),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(o){const s=y;let v,d;const h=o,w=l(),_=[];h[s(533)][s(490)]((t=>{const e=s;t instanceof n[e(486)]&&(t[e(521)][e(520)]=!0,_[e(485)](t.geometry))}));const z=([v,d]=u((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),v=await v,d(),v),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[s(531)])(h[s(496)])},lightningTexture:{type:"t",value:z[s(530)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:h[s(483)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[s(515)],blending:t,depthWrite:!1};x.uniforms[s(487)][s(512)]=Math.sin(5);const{camera:T}=i(),{onLoop:P}=r();return P((({delta:n})=>{const t=s;T.value[t(500)]&&w.value&&(x[t(491)].uTime.value+=n)})),c((()=>{const t=s;w[t(512)]&&(w.value.geometry[t(516)](),w[t(512)][t(521)]=e[t(505)](_)),h[t(496)]&&(x[t(491)][t(498)][t(512)]=new(n[t(531)])(h[t(496)])),h[t(483)]&&(x[t(491)][t(513)][t(512)]=h[t(483)])})),(n,t)=>{const e=s;return f(),p("TresMesh",{ref_key:"TresMeshRef",ref:w},[t[0]||(t[0]=m(e(481),null,null,-1)),m("TresShaderMaterial",b(g(x)),null,16)],512)}}});function x(n){function t(n){const e=_;if(typeof n===e(517))return function(n){}[e(477)](e(514))[e(518)]("counter");1!==(""+n/n)[e(506)]||n%20==0?function(){return!0}.constructor(e(509)+e(478))[e(532)](e(524)):function(){return!1}.constructor(e(509)+e(478))[e(518)](e(504)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=P;function P(n,t){const e=S();return(P=function(n,t){return e[n-=329]})(n,t)}function S(){const n=["error","uOpacity","toString","exception","push","length","color",'{}.constructor("return this")( )',"array","ShaderMaterial","10222040AmQrOu","test","bridge","warn","position","traverse","8631ErvZtG","gger","opacity","DoubleSide","554GsMWWd","Mesh","attributes","1801deJbkH","bind","analitic","#FFF","uSlowTime","init","chain","16434704zBNmbn","bubblesEffect","6VvviNM","apply","computeBoundingSphere","constructor","5090605TlyLuC","info","debu","return (function() ","Color","uniforms","while (true) {}","material","9XPAnaT","mergeGeometries","1602LZDaVX","TresShaderMaterial","stateObject","string","145884BHtfsJ","afective","function *\\( *\\)","input","Float32BufferAttribute","uTime","counter","randFloat","semantic","MathUtils","log","setAttribute","process","aDelayDuration","table","glowColor","geometry","randInt","name","9763770PdeLBK","size","BufferGeometryRef","cerebellum","value","brainstem","console","bubbles"];return(S=function(){return n})()}!function(n,t){const e=P,o=S();for(;;)try{if(726465===-parseInt(e(355))/1*(-parseInt(e(352))/2)+parseInt(e(364))/3*(parseInt(e(382))/4)+parseInt(e(368))/5+-parseInt(e(378))/6*(-parseInt(e(348))/7)+parseInt(e(342))/8*(parseInt(e(376))/9)+-parseInt(e(401))/10+-parseInt(e(362))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){I(this,(function(){const n=P,t=new RegExp(n(384)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=B(n(360));t[n(343)](o+n(361))&&e.test(o+n(385))?B():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(365)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();M(void 0,(function(){const n=P;let t;try{t=Function(n(371)+n(339)+");")()}catch(i){t=window}const e=t[n(330)]=t[n(330)]||{},o=[n(392),n(345),n(369),n(332),n(335),n(396),"trace"];for(let r=0;r<o[n(337)];r++){const t=M[n(367)].prototype[n(356)](M),i=o[r],a=e[i]||t;t.__proto__=M[n(356)](M),t[n(334)]=a[n(334)][n(356)](a),e[i]=t}}))();const C=s({__name:T(363),props:{model:{},color:{default:T(358)},opacity:{default:1}},setup(i){const a=T,s=i,u=[a(383),a(390),"episodic",a(394),"amigdala",a(329),a(344),a(404),a(357)],y={};s.model[a(347)]((t=>{const o=a;t instanceof n[o(353)]&&u.map((n=>{const i=o;if(t[i(400)].includes(n)){if(y[n]){const o=[y[n],t.geometry];return y[n]=e[i(377)](o),y}return y[n]=t[i(398)]}return[]}))}));const d=l(),h=new(n[a(341)])({uniforms:{glowColor:{type:"c",value:new(n[a(372)])(s[a(338)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s[a(350)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t,side:n[a(351)],depthTest:!1,vertexColors:!1,transparent:!0});c((()=>{d[a(405)]&&(()=>{const t=a,e=[],i=[],r=[],s=[];for(let o=0;o<2e4-3*u[t(337)];o+=1){const a=n[t(391)][t(399)](0,u.length-1),l=u[a],c=y[l].attributes[t(346)][t(340)][3*o+0]||0,f=y[l][t(354)][t(346)].array[3*o+1]||0,p=y[l][t(354)][t(346)][t(340)][3*o+2]||0;if(i[t(336)](c,f,p),e[o]=n[t(391)][t(389)](10,20),o%100==0){const e=n[t(391)][t(399)](100,250)+f;s.push(c,e,p,1)}else s[t(336)](c,f,p,0);r[2*o+0]=n[t(391)][t(389)](.5,1.5),r[2*o+1]=2.5}d[t(405)].setAttribute(t(395),new(n[t(386)])(r,2)),d.value[t(393)](t(331),new o(s,4)),d[t(405)][t(393)](t(346),new(n[t(386)])(i,3)),d[t(405)][t(393)](t(338),new(n[t(386)])([],3)),d[t(405)][t(393)](t(402),new(n[t(386)])(e,1)),d[t(405)][t(366)]()})()}));const w=l(),{onLoop:_}=r();return _((({delta:t})=>{const e=a;w[e(405)]&&(w[e(405)][e(375)].uniforms[e(387)][e(405)]+=.05,w[e(405)].material[e(373)][e(359)][e(405)]+=1/400),s.color&&(h.uniforms[e(397)][e(405)]=new(n[e(372)])(s.color)),s[e(350)]&&(h[e(373)][e(333)].value=s[e(350)])})),(n,t)=>{const e=a;return f(),p("TresPoints",{ref_key:"TresMeshRef",ref:w},[m("TresBufferGeometry",{ref_key:e(403),ref:d},null,512),m(e(379),b(g(v(h))),null,16)],512)}}});function B(n){function t(n){const e=P;if(typeof n===e(381))return function(n){}[e(367)](e(374))[e(365)](e(388));1!==(""+n/n)[e(337)]||n%20==0?function(){return!0}[e(367)]("debu"+e(349)).call("action"):function(){return!1}[e(367)](e(370)+e(349))[e(365)](e(380)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{z as _,C as a};
