import{g as e}from"./@amap.FTf_Qzi31722217438692.js";var r=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"],a=r.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),o=t,l=(o=o.slice().filter((function(e){return!/^(gl\_|texture)/.test(e)}))).concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),n=function(e){var r,t,a,o=0,l=0,n=m,j=[],w=[],F=1,S=0,k=0,V=!1,A=!1,L="",E=g,I=i;"300 es"===(e=e||{}).version&&(E=c,I=u);var B={},O={};for(o=0;o<E.length;o++)B[E[o]]=!0;for(o=0;o<I.length;o++)O[I[o]]=!0;return function(e){return w=[],null!==e?function(e){o=0,e.toString&&(e=e.toString());var t;L+=e.replace(/\r\n/g,"\n"),a=L.length;for(;r=L[o],o<a;){switch(t=o,n){case _:o=z();break;case p:o=q();break;case f:o=X();break;case d:o=N();break;case h:o=J();break;case b:o=Q();break;case M:o=K();break;case x:o=W();break;case v:o=G();break;case m:o=R()}if(t!==o)if("\n"===L[t])S=0,++F;else++S}return l+=o,L=L.slice(o),w}(e):function(e){j.length&&U(j.join(""));return n=C,U("(eof)"),w}()};function U(e){e.length&&w.push({type:y[n],data:e,position:k,line:F,column:S})}function R(){return j=j.length?[]:j,"/"===t&&"*"===r?(k=l+o-1,n=_,t=r,o+1):"/"===t&&"/"===r?(k=l+o-1,n=p,t=r,o+1):"#"===r?(n=f,k=l+o,o):/\s/.test(r)?(n=v,k=l+o,o):(V=/\d/.test(r),A=/[^\w_]/.test(r),k=l+o,n=V?h:A?d:x,o)}function G(){return/[^\s]/g.test(r)?(U(j.join("")),n=m,o):(j.push(r),t=r,o+1)}function X(){return"\r"!==r&&"\n"!==r||"\\"===t?(j.push(r),t=r,o+1):(U(j.join("")),n=m,o)}function q(){return X()}function z(){return"/"===r&&"*"===t?(j.push(r),U(j.join("")),n=m,o+1):(j.push(r),t=r,o+1)}function N(){if("."===t&&/\d/.test(r))return n=M,o;if("/"===t&&"*"===r)return n=_,o;if("/"===t&&"/"===r)return n=p,o;if("."===r&&j.length){for(;H(j););return n=M,o}if(";"===r||")"===r||"("===r){if(j.length)for(;H(j););return U(r),n=m,o+1}var e=2===j.length&&"="!==r;if(/[\w_\d\s]/.test(r)||e){for(;H(j););return n=m,o}return j.push(r),t=r,o+1}function H(e){for(var r,t,a=0;;){if(r=s.indexOf(e.slice(0,e.length+a).join("")),t=s[r],-1===r){if(a--+e.length>0)continue;t=e.slice(0,1).join("")}return U(t),k+=t.length,(j=j.slice(t.length)).length}}function Q(){return/[^a-fA-F0-9]/.test(r)?(U(j.join("")),n=m,o):(j.push(r),t=r,o+1)}function J(){return"."===r||/[eE]/.test(r)?(j.push(r),n=M,t=r,o+1):"x"===r&&1===j.length&&"0"===j[0]?(n=b,j.push(r),t=r,o+1):/[^\d]/.test(r)?(U(j.join("")),n=m,o):(j.push(r),t=r,o+1)}function K(){return"f"===r&&(j.push(r),t=r,o+=1),/[eE]/.test(r)?(j.push(r),t=r,o+1):("-"!==r&&"+"!==r||!/[eE]/.test(t))&&/[^\d]/.test(r)?(U(j.join("")),n=m,o):(j.push(r),t=r,o+1)}function W(){if(/[^\d\w_]/.test(r)){var e=j.join("");return n=O[e]?T:B[e]?P:D,U(j.join("")),n=m,o}return j.push(r),t=r,o+1}},i=r,s=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],g=t,u=a,c=l,m=999,x=9999,_=0,p=1,f=2,d=3,h=4,M=5,D=6,P=7,T=8,v=9,C=10,b=11,y=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];var j=n;const w=e((function(e,r){var t=j(r),a=[];return a=(a=a.concat(t(e))).concat(t(null))}));export{w as t};
