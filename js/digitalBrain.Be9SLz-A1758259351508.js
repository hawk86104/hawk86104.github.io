import{cp as o,N as s,_ as a,co as e}from"./three.CtgP63ME1758259351508.js";import{a as t}from"./@tresjs.CywMBpUh1758259351508.js";import{P as i}from"./tweakpane.C0HtAJSg1758259351508.js";import"./@fesjs.uDzWZsaX1758259351508.js";import"./Resource.DDopQ4j61758259351508.js";/* empty css                                                                             */import{_ as r}from"./randomLoading.vue_vue_type_script_setup_true_lang.BVkzOk_B1758259351508.js";import"./three-mesh-ui.module.t9YwAzlx1758259351508.js";import"./global.DmBaWnKd1758259351508.js";/* empty css                                                              */import{l}from"./util.BTRj-dGq1758259351508.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.B6we2Ag51758259351508.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BrQEzTzs1758259351508.js";import{d,r as u,aa as c,h as j,G as _,o as g,j as f,u as y,f as b,I as h,a7 as w,a8 as v,e as B,H as T,m as x,a5 as L,F as k}from"./@vue.pEDXJ_3Z1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";import"./vue-router.BT0ZZbwZ1758259351508.js";import"./lodash-es.C7pWAXPe1758259351508.js";import"./pinia.C_K98KJs1758259351508.js";import"./@qlin.q6OWdsQV1758259351508.js";import"./@babel.BPq7uOAK1758259351508.js";import"./@floating-ui.BFjFSAYt1758259351508.js";import"./@juggle.CcBCnTIR1758259351508.js";import"./starLoading.DFPZIqgM1758259351508.js";import"./utils.BQV0fxbj1758259351508.js";import"./cssLoaders.CQpM9kUP1758259351508.js";import"./bubbleLoading.DePR09OY1758259351508.js";import"./yangyangLoading.Dr1o3-z41758259351508.js";import"./color.BPoHtV0H1758259351508.js";import"./@amap.CGUF9xH41758259351508.js";import"./color-string.P-yvt9W21758259351508.js";import"./color-name.BQ5IbGbl1758259351508.js";import"./simple-swizzle.Xn8N6iLa1758259351508.js";import"./is-arrayish.CLsR9Wfx1758259351508.js";import"./color-convert.Btfsg-JE1758259351508.js";import"./lodash.Bo0I6nx61758259351508.js";const z={position:[0,120,0]},C=d({__name:"digitalBrain",async setup(d){let C,P;const G=u({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(G,"show",{label:"点云显示"}),R.addBinding(G,"color",{label:"点云颜色"}),R.addBinding(G,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const A=u({color:"#84ccff",show:!0,opacity:1});R.addBinding(A,"show",{label:"脑轮廓显示"}),R.addBinding(A,"color",{label:"脑轮廓颜色"}),R.addBinding(A,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const H=u({color:"#9e00af",show:!0,opacity:1});R.addBinding(H,"show",{label:"脑组织显示"}),R.addBinding(H,"color",{label:"脑组织颜色"}),R.addBinding(H,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const J=new o,M=([C,P]=c((()=>l("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",J))),C=await C,P(),C),S=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),q=u({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=j("TresCanvas");return g(),_(k,null,[f(y(r)),f(a,x(S,{"window-size":""}),{default:b((()=>[s[0]||(s[0]=h("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),f(y(t),w(v(q)),null,16),s[1]||(s[1]=h("TresAmbientLight",{intensity:.5},null,-1)),h("TresGroup",z,[G.show?(g(),B(n,x({key:0,model:y(M)},G),null,16,["model"])):T("",!0),(g(),B(L,null,{default:b((()=>[A.show?(g(),B(p,x({key:0,model:y(M)},A),null,16,["model"])):T("",!0)])),_:1})),H.show?(g(),B(m,x({key:1,model:y(M)},H),null,16,["model"])):T("",!0)]),s[2]||(s[2]=h("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{C as default};
