import{p as n,U as e,z as t,Y as r}from"./@tresjs.C5O8roW51726740218347.js";import{W as o,k as i,c8 as s,b_ as a,bY as u,a0 as c,n as f,b6 as l}from"./three.MbBECAu81726740218347.js";import{d as p,a4 as v,a3 as m,o as d,E as h,L as g,u as y,F as x,e as w,f as D,g as b,j as I,al as R,m as S}from"./@vue.JNsx1iN61726740218347.js";import"./@vueuse.18lbrd2F1726740218347.js";const E=_;function _(n,e){const t=T();return(_=function(n,e){return t[n-=167]})(n,e)}!function(n,e){const t=_,r=T();for(;;)try{if(240356===-parseInt(t(222))/1+-parseInt(t(170))/2*(parseInt(t(181))/3)+parseInt(t(205))/4*(parseInt(t(190))/5)+-parseInt(t(217))/6*(parseInt(t(179))/7)+parseInt(t(198))/8*(parseInt(t(195))/9)+-parseInt(t(224))/10*(parseInt(t(220))/11)+parseInt(t(202))/12)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[_(178)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function T(){const n=["noiseContourMeshRef2","call","5753OZOGAT","tShadow","172207uThhKx","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","8320ygQazJ","__proto__","uniforms","side","table","188458InCYTZ","exception","prototype","innerWidth","stateObject","iTime","debu","noiseContour","apply","131033rmNOeN","gger","9DuDDaB","TresSphereGeometry","function *\\( *\\)","counter","material","warn","constructor","trace","texture","1727045xBcLGb","toString","TresBoxGeometry","value","console","3297537RqVygs","width","chain","8WkVqEp","while (true) {}","info","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","9964824GMtNDp","renderToScreen","addPass","4brbbWU","render","extensions","#ffffff","log","input","TresMesh","test","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",'{}.constructor("return this")( )',"return (function() ","bind","132nzAsQq"];return(T=function(){return n})()}!function(){C(this,(function(){const n=_,e=new RegExp(n(183)),t=new RegExp(n(223),"i"),r=F("init");e[n(212)](r+n(197))&&t[n(212)](r+n(210))?F():r("0")}))()}();const N=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[_(178)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();N(void 0,(function(){const n=_;let e;try{e=Function(n(215)+n(214)+");")()}catch(o){e=window}const t=e.console=e[n(194)]||{},r=[n(209),n(186),n(200),"error",n(171),n(169),n(188)];for(let i=0;i<r.length;i++){const e=N[n(187)][n(172)][n(216)](N),o=r[i],s=t[o]||e;e[n(225)]=N[n(216)](N),e[n(191)]=s[n(191)][n(216)](s),t[o]=e}}))();const P=[E(168),"rotation-x"],U=[g(E(192),{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:E(208),shininess:0},null,-1)],j=[E(168)],M=[g(E(182),{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:E(208),shininess:0},null,-1)],A=E(213),k=E(201),z=p({__name:E(177),async setup(r){const p=E;let w,D;const{camera:b,renderer:I,scene:R,sizes:S}=n(),_=([w,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),w=await w,D(),w),{onLoop:C,onAfterLoop:T}=e(),N=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),z=new i(window[p(173)],window.innerHeight);let F=null;const L=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:z}},vertexShader:A,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),B=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:A,fragmentShader:k});return B[p(203)]=!0,B[p(185)][p(207)].derivatives=!0,m((()=>{const n=p;S[n(196)].value&&(F=new a(I[n(193)]),F[n(204)](new u(R.value,b[n(193)])),F[n(204)](L),F[n(204)](B))})),C((({elapsed:n})=>{const e=p;I[e(193)][e(206)](R[e(193)],b[e(193)],N),L.uniforms[e(221)][e(193)]=N[e(189)],B[e(167)][e(175)][e(193)]=n})),T((()=>{F&&F[p(206)]()})),(n,e)=>{const t=p;return d(),h(x,null,[g(t(211),{ref:t(218),side:y(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},U,8,P),g("TresMesh",{ref:"noiseContourMeshRef1",side:y(c),position:[0,150,0],"cast-shadow":""},M,8,j)],64)}}});function F(n){function e(n){const t=_;if("string"==typeof n)return function(n){}[t(187)](t(199))[t(178)](t(184));1!==(""+n/n).length||n%20==0?function(){return!0}[t(187)](t(176)+t(180))[t(219)]("action"):function(){return!1}[t(187)](t(176)+t(180))[t(178)](t(174)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const L=V;!function(n,e){const t=V,r=Y();for(;;)try{if(506480===parseInt(t(154))/1*(parseInt(t(174))/2)+-parseInt(t(170))/3+parseInt(t(165))/4*(-parseInt(t(158))/5)+-parseInt(t(140))/6+-parseInt(t(152))/7*(parseInt(t(141))/8)+-parseInt(t(144))/9*(parseInt(t(138))/10)+parseInt(t(169))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const B=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[V(148)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){B(this,(function(){const n=V,e=new RegExp(n(157)),t=new RegExp(n(142),"i"),r=$(n(168));e[n(139)](r+n(167))&&t[n(139)](r+n(166))?$():r("0")}))()}();const G=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();G(void 0,(function(){const n=V,e=function(){const n=V;let e;try{e=Function("return (function() "+n(135)+");")()}catch(t){e=window}return e}(),t=e.console=e[n(163)]||{},r=[n(149),n(172),n(164),n(151),n(173),n(161),n(145)];for(let o=0;o<r.length;o++){const e=G[n(153)][n(159)][n(160)](G),i=r[o],s=t[i]||e;e[n(162)]=G.bind(G),e.toString=s.toString.bind(s),t[i]=e}}))();const O={ref:L(147),position:[600,750,-1221],fov:45,near:1,far:1e4},Z=g("TresAmbientLight",{color:L(150)},null,-1),W=g("TresDirectionalLight",{position:[400,400,400],intensity:1,color:L(156)},null,-1),q=p({__name:"noiseContourPage",setup(n){const e=L,t={clearColor:e(143),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=w(e(175));return d(),D(i,S(t,{"window-size":""}),{default:b((()=>[g("TresPerspectiveCamera",O,null,512),I(y(r)),Z,W,(d(),D(R,null,{default:b((()=>[I(z)])),_:1}))])),_:1},16)}}});function V(n,e){const t=Y();return(V=function(n,e){return t[n-=135]})(n,e)}function Y(){const n=["log","#ffffff","error","14RPJXhy","constructor","1yhVeee","length","red","function *\\( *\\)","3970yuAlbH","prototype","bind","table","__proto__","console","info","3144KjDCkp","input","chain","init","22947991WixndX","1526676FFLeOx","while (true) {}","warn","exception","1264772ytbefA","TresCanvas","debu",'{}.constructor("return this")( )',"gger","call","2936310NULqdj","test","4373472YyREJn","226272FTCLNo","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#000000","9uPtoem","trace","action","perspectiveCameraRef","apply"];return(Y=function(){return n})()}function $(n){function e(n){const t=V;if("string"==typeof n)return function(n){}[t(153)](t(171))[t(148)]("counter");1!==(""+n/n)[t(155)]||n%20==0?function(){return!0}[t(153)](t(176)+t(136))[t(137)](t(146)):function(){return!1}[t(153)](t(176)+t(136))[t(148)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{q as default};
