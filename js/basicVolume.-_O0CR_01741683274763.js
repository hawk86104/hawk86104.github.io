import{m as n,e as t,o as e}from"./@tresjs.tqalU7S21741683274763.js";import{_ as r,b as o,d1 as a,m as i,a3 as c}from"./three.3wvNjL8W1741683274763.js";import{P as l}from"./tweakpane.yDiyAAkA1741683274763.js";import{d as u,b as s,r as p,w as m,q as v,o as f,H as _,N as g,u as d,e as x,z as h,j as y,g as b,aj as S,ak as w,f as z,al as j,m as k,F as I}from"./@vue.NRI7TcgI1741683274763.js";import{_ as V}from"./@fesjs.k2eAvwyB1741683274763.js";import"./postprocessing.D4QJINSY1741683274763.js";import"./@vueuse.lt4-M8RL1741683274763.js";import"./vue-router.orSV66Fm1741683274763.js";import"./lodash-es.pklfUAS51741683274763.js";import"./@qlin.yHhFDldE1741683274763.js";import"./pinia.ewBqqOMH1741683274763.js";import"./@floating-ui.BPbuo5Gx1741683274763.js";import"./@juggle.7yjBMqoW1741683274763.js";const D=F;!function(n,t){const e=F,r=O();for(;;)try{if(887723===parseInt(e(169))/1*(-parseInt(e(151))/2)+parseInt(e(140))/3+parseInt(e(157))/4*(parseInt(e(133))/5)+parseInt(e(171))/6+-parseInt(e(139))/7*(-parseInt(e(167))/8)+parseInt(e(123))/9+-parseInt(e(166))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const P=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[F(112)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){P(this,(function(){const n=F,t=new RegExp(n(178)),e=new RegExp(n(175),"i"),r=C(n(130));t[n(141)](r+n(158))&&e[n(141)](r+"input")?C():r("0")}))()}();const M=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function F(n,t){const e=O();return(F=function(n,t){return e[n-=112]})(n,t)}function O(){const n=["TresSphereGeometry","28931280QwOZvE","32xMJdQB","console","2EsHLNn","u_isoValue","4733700gAbjYc","alphaVal","Display Settings","u_dt","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","string","return (function() ","function *\\( *\\)","then","apply","rotation-x","color","needsUpdate","innerHeight","bind","magFilter","LinearFilter","constructor","basicVolumeRendering","u_time","3849228cFUeYk",'{}.constructor("return this")( )',"isoValue","getElapsedTime","u_alphaVal","uniforms","counter","init","__proto__","debu","2923545HDzSAE","log","table","length","action","Vector3","679511UrPuNw","2389452RxPuWW","test","arrayBuffer","RedFormat","call","start","info","u_volume","wrapT","vertexShader","toString","374694CGrjTd","TresMesh","TresShaderMaterial","value","Cross Section Settings","error","12YZekft","chain","Clock","catch","addFolder","Algorithm Settings","gger","addBinding"];return(O=function(){return n})()}M(void 0,(function(){const n=F,t=function(){const n=F;let t;try{t=Function(n(177)+n(124)+");")()}catch(e){t=window}return t}(),e=t[n(168)]=t.console||{},r=[n(134),"warn",n(146),n(156),"exception",n(135),"trace"];for(let o=0;o<r.length;o++){const t=M[n(120)].prototype[n(117)](M),a=r[o],i=e[a]||t;t[n(131)]=M[n(117)](M),t.toString=i[n(150)][n(117)](i),e[a]=t}}))();const R=[D(113)],T=[D(128),D(149),"fragmentShader"],L=41,A=u({__name:D(121),setup(e){var u;const x=D,h=window.innerWidth,y=window[x(116)],b=s(null),S=s(null),w=new(r[x(159)]);w[x(145)]();const z=(new l)[x(161)]({title:x(173)}),j=z.addFolder({title:x(155)}),k=new(r[x(138)])(.5,.5,.5);j[x(164)](k,"x",{label:"X",min:.02,max:.5,step:.02}),j[x(164)](k,"y",{label:"Y",min:.02,max:.5,step:.02}),j[x(164)](k,"z",{label:"Z",min:.02,max:.5,step:.02}),j.expanded=!0;const{camera:I}=n(),V=p({u_camera:{value:null==(u=I[x(154)])?void 0:u.position},u_resolution:{value:new o(h,y,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:k},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),P=z[x(161)]({title:x(162)});P[x(164)](V[x(174)],x(154),{label:"dt",min:4e-4,max:.016,step:2e-4}),P[x(164)](V.u_color,x(154),{label:x(114),min:1,max:3,step:1}),P[x(164)](V[x(127)],x(154),{label:x(172),min:.01,max:1,step:.01}),P[x(164)](V[x(170)],x(154),{label:x(125),min:0,max:1,step:.04}),m(S,(n=>{const t=x;if(n){const e=new a(n,L,L,L);e.format=r[t(143)],e.minFilter=i,e[t(118)]=r[t(119)],e[t(148)]=c,e[t(115)]=!0,V[t(147)][t(154)]=e}}));const{onLoop:M}=t();return M((()=>{const n=x;V[n(122)].value=w[n(126)]()})),v((()=>{(()=>{const n=x;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw")[n(179)]((t=>t[n(142)]()))[n(179)]((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r[e(136)];n++)o[n]=r[n];S.value=o}))[n(160)]((t=>{console[n(156)]("Error fetching volume data:",t)}))})()})),(n,t)=>{const e=x;return f(),_(e(152),{ref_key:"meshRef",ref:b,"rotation-x":Math.PI/-2},[t[0]||(t[0]=g(e(165),{args:[1,16,16]},null,-1)),g(e(153),{uniforms:V,vertexShader:d("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:d("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,T)],8,R)}}});function C(n){function t(n){const e=F;if(typeof n===e(176))return function(n){}.constructor("while (true) {}").apply(e(129));1!==(""+n/n)[e(136)]||n%20==0?function(){return!0}[e(120)](e(132)+e(163))[e(144)](e(137)):function(){return!1}[e(120)](e(132)+e(163))[e(112)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const E=G;!function(n,t){const e=G,r=H();for(;;)try{if(709056===parseInt(e(476))/1+parseInt(e(491))/2*(-parseInt(e(473))/3)+parseInt(e(487))/4+-parseInt(e(481))/5+parseInt(e(470))/6+parseInt(e(482))/7+-parseInt(e(492))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const Z=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[G(505)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function H(){const n=["basicVolume","304zISGMs","13665680KRVnFQ","init","info","toString","constructor","table","log","stateObject"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw ","while (true) {}","gger","length","debu","apply","exception","_blank","8221092GJjBkI","action","#201919","23991fHVbrP","warn","return (function() ","1416190iqnXeg","chain","TresPerspectiveCamera","TresCanvas","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","1947280HkzzCT","4434045yxLePQ","test","error","prototype","console","2409836TKVbzZ","bind",'{}.constructor("return this")( )'];return(H=function(){return n})()}!function(){Z(this,(function(){const n=G,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(480),"i"),r=U(n(493));t[n(483)](r+n(477))&&e.test(r+"input")?U():r("0")}))()}();const W=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function G(n,t){const e=H();return(G=function(n,t){return e[n-=468]})(n,t)}W(void 0,(function(){const n=G,t=function(){const n=G;let t;try{t=Function(n(475)+n(489)+");")()}catch(e){t=window}return t}(),e=t[n(486)]=t[n(486)]||{},r=[n(498),n(474),n(494),n(484),n(468),n(497),"trace"];for(let o=0;o<r[n(503)];o++){const t=W[n(496)][n(485)][n(488)](W),a=r[o],i=e[a]||t;t.__proto__=W[n(488)](W),t[n(495)]=i[n(495)][n(488)](i),e[a]=t}}))();function U(n){function t(n){const e=G;if("string"==typeof n)return function(n){}.constructor(e(501))[e(505)]("counter");1!==(""+n/n)[e(503)]||n%20==0?function(){return!0}[e(496)](e(504)+e(502)).call(e(471)):function(){return!1}[e(496)](e(504)+e(502))[e(505)](e(499)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const B=V(u({__name:E(490),setup(n){const t=p({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=p({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=G,i=x(a(479));return f(),_(I,null,[o[3]||(o[3]=g("div",{class:a(494)},[g("a",{href:"https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw",target:a(469)},a(500)),g("br"),h(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),y(i,k({clearColor:a(472)},t),{default:b((()=>[o[0]||(o[0]=g(a(478),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=g("TresAmbientLight",{intensity:2},null,-1)),y(d(e),S(w(r)),null,16),(f(),z(j,null,{default:b((()=>[y(A,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=g("TresGridHelper",{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{B as default};
