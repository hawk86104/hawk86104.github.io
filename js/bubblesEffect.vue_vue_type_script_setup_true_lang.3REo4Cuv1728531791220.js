import{_ as n,bX as t,a0 as e,h as o}from"./three.QbUqWzuy1728531791220.js";import{p as i,U as r,z as a}from"./@tresjs.TFxw2EXb1728531791220.js";import{d as s,b as l,a4 as u,a3 as c,o as f,E as p,L as m,aj as g,ak as b,u as v}from"./@vue.bvMz0l_u1728531791220.js";function y(){const n=["428nKiUAu","constructor","debu","toString","dispose","gger","map","length","uOpacity","232839QDKAeU","813566uLbYqL","__proto__","return (function() ","call","4561746ueIWrP","value","stateObject","while (true) {}","chain","#84ccff","4714212SjjBgh","Color","xRayEffect","push","warn","opacity","trace","error","traverse","string","geometry","info","verticesNeedUpdate","TresMesh","apply","bind","19930ipRrmj","prototype","test","model","table","mergeGeometries","input","position","init","Mesh","104bnQkVV","713271jbisJW","TresShaderMaterial","log","220566YLxAaP","sin","color","exception","uniforms","TresBufferGeometry","AdditiveBlending","DoubleSide","offsetY"];return(y=function(){return n})()}const d=_;!function(n,t){const e=_,o=y();for(;;)try{if(680341===parseInt(e(344))/1+-parseInt(e(363))/2+parseInt(e(341))/3+parseInt(e(353))/4*(parseInt(e(330))/5)+-parseInt(e(373))/6+parseInt(e(367))/7+-parseInt(e(340))/8*(-parseInt(e(362))/9))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(328)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){h(this,(function(){const n=_,t=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=P(n(338));t[n(332)](o+n(371))&&e.test(o+n(336))?P():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(328)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(n,t){const e=y();return(_=function(n,t){return e[n-=321]})(n,t)}w(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(365)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t.console=t.console||{},o=[n(343),n(377),n(325),n(321),n(347),n(334),n(379)];for(let i=0;i<o[n(360)];i++){const t=w.constructor[n(331)][n(329)](w),r=o[i],a=e[r]||t;t[n(364)]=w[n(329)](w),t[n(356)]=a.toString.bind(a),e[r]=t}}))();const x=m(d(349),null,null,-1),z=s({__name:d(375),props:{model:{},color:{default:d(372)},opacity:{default:1}},async setup(e){const o=d;let s,v;const y=e,h=l(),w=[];y[o(333)][o(322)]((t=>{const e=o;t instanceof n[e(339)]&&(t[e(324)][e(326)]=!0,w[e(376)](t.geometry))}));const _=([s,v]=u((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),s=await s,v(),s),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(374)])(y[o(346)])},lightningTexture:{type:"t",value:_[o(359)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:y[o(378)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(351)],blending:n[o(350)],depthWrite:!1};z.uniforms[o(352)][o(368)]=Math[o(345)](5);const{camera:P}=i(),{onLoop:T}=r();return T((({delta:n})=>{const t=o;P[t(368)][t(337)]&&h[t(368)]&&(z[t(348)].uTime[t(368)]+=n)})),c((()=>{const e=o;h[e(368)]&&(h[e(368)][e(324)][e(357)](),h[e(368)][e(324)]=t[e(335)](w)),y[e(346)]&&(z.uniforms.glowColor[e(368)]=new(n[e(374)])(y.color)),y.opacity&&(z.uniforms[e(361)][e(368)]=y[e(378)])})),(n,t)=>{const e=o;return f(),p(e(327),{ref_key:"TresMeshRef",ref:h},[x,m(e(342),g(b(z)),null,16)],512)}}});function P(n){function t(n){const e=_;if(typeof n===e(323))return function(n){}.constructor(e(370))[e(328)]("counter");1!==(""+n/n)[e(360)]||n%20==0?function(){return!0}[e(354)](e(355)+e(358))[e(366)]("action"):function(){return!1}[e(354)](e(355)+e(358))[e(328)](e(369)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=j;function S(){const n=["setAttribute","semantic","model","push","process","Mesh","randFloat","log","TresShaderMaterial","trace","exception","opacity","analitic","uSlowTime","while (true) {}","includes","apply","uTime","7153368pcVsNs","size","TresMeshRef","glowColor","counter","position","value","array","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","aDelayDuration","map","info","49512nrJoEj","1770832IdHWVY","uOpacity","cerebellum","brainstem","material","873UfYeli","stateObject","Float32BufferAttribute","computeBoundingSphere","bubblesEffect","name","763MLNWia","1926150CCkUQn","chain","Color","50320zjvqAC","test","call","randInt","attributes","warn","debu","954801Hwqorp","bridge","bubbles","amigdala","console","MathUtils","error","TresBufferGeometry","2oRxjKH","episodic","__proto__","AdditiveBlending","length","color","constructor","traverse","init","#FFF","500714dTWMDY",'{}.constructor("return this")( )',"uniforms","gger","input","bind","table","mergeGeometries","string","return (function() ","ShaderMaterial","toString"];return(S=function(){return n})()}!function(n,t){const e=j,o=S();for(;;)try{if(544032===-parseInt(e(253))/1+-parseInt(e(243))/2*(parseInt(e(235))/3)+parseInt(e(213))/4+-parseInt(e(225))/5+-parseInt(e(212))/6*(-parseInt(e(224))/7)+parseInt(e(200))/8+parseInt(e(218))/9*(-parseInt(e(228))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=j,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(208),"i"),o=U(n(251));t[n(229)](o+n(226))&&e.test(o+n(257))?U():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();I(void 0,(function(){const n=j;let t;try{t=Function(n(262)+n(254)+");")()}catch(i){t=window}const e=t[n(239)]=t.console||{},o=[n(189),n(233),n(211),n(241),n(192),n(259),n(191)];for(let r=0;r<o[n(247)];r++){const t=I[n(249)].prototype[n(258)](I),i=o[r],a=e[i]||t;t[n(245)]=I[n(258)](I),t[n(264)]=a[n(264)][n(258)](a),e[i]=t}}))();const M=s({__name:T(222),props:{model:{},color:{default:T(252)},opacity:{default:1}},setup(i){const a=T,s=i,u=["afective",a(183),a(244),a(186),a(238),a(216),a(236),a(215),a(194)],y={};s[a(184)][a(250)]((e=>{const o=a;e instanceof n[o(187)]&&u[o(210)]((n=>{const i=o;if(e[i(223)][i(197)](n)){if(y[n]){const o=[y[n],e.geometry];return y[n]=t[i(260)](o),y}return y[n]=e.geometry}return[]}))}));const d=l(),h=new(n[a(263)])({uniforms:{glowColor:{type:"c",value:new(n[a(227)])(s[a(248)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s[a(193)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(246)],side:e,depthTest:!1,vertexColors:!1,transparent:!0});c((()=>{d[a(206)]&&(()=>{const t=a,e=[],i=[],r=[],s=[];for(let a=0;a<2e4-3*u[t(247)];a+=1){const l=o[t(231)](0,u[t(247)]-1),c=u[l],f=y[c][t(232)][t(205)][t(207)][3*a+0]||0,p=y[c][t(232)].position[t(207)][3*a+1]||0,m=y[c][t(232)][t(205)].array[3*a+2]||0;if(i[t(185)](f,p,m),e[a]=n[t(240)][t(188)](10,20),a%100==0){const n=o[t(231)](100,250)+p;s[t(185)](f,n,m,1)}else s[t(185)](f,p,m,0);r[2*a+0]=n[t(240)][t(188)](.5,1.5),r[2*a+1]=2.5}d.value.setAttribute(t(209),new(n[t(220)])(r,2)),d[t(206)][t(182)](t(237),new(n[t(220)])(s,4)),d[t(206)][t(182)](t(205),new(n[t(220)])(i,3)),d[t(206)][t(182)]("color",new(n[t(220)])([],3)),d[t(206)][t(182)](t(201),new(n[t(220)])(e,1)),d[t(206)][t(221)]()})()}));const w=l(),{onLoop:_}=r();return _((({delta:t})=>{const e=a;w[e(206)]&&(w[e(206)].material[e(255)][e(199)][e(206)]+=.05,w.value[e(217)][e(255)][e(195)].value+=1/400),s[e(248)]&&(h[e(255)][e(203)][e(206)]=new(n[e(227)])(s[e(248)])),s.opacity&&(h[e(255)][e(214)][e(206)]=s[e(193)])})),(n,t)=>{const e=a;return f(),p("TresPoints",{ref_key:e(202),ref:w},[m(e(242),{ref_key:"BufferGeometryRef",ref:d},null,512),m(e(190),g(b(v(h))),null,16)],512)}}});function j(n,t){const e=S();return(j=function(n,t){return e[n-=182]})(n,t)}function U(n){function t(n){const e=j;if(typeof n===e(261))return function(n){}.constructor(e(196))[e(198)](e(204));1!==(""+n/n)[e(247)]||n%20==0?function(){return!0}[e(249)](e(234)+e(256))[e(230)]("action"):function(){return!1}[e(249)](e(234)+"gger")[e(198)](e(219)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{z as _,M as a};
