import{aD as z,bj as W,l as ee,a6 as te,ak as oe,o as r,c as i,G as v,H as se,x as w,E as B,Y as o,t as ne,a8 as A,L as M,al as re,Z as m,cc as ae,ap as ie,au as G,aw as pe,az as ce,bw as le,b3 as D,a9 as ue,cv as de,a1 as he,a2 as j,r as _e,a as O,aa as fe,ab as me,ac as ye,ag as ge}from"./vendor.1SfJ1rT91715934934621.js";import{l as Te}from"./utils.T0bo9m7D1715934934621.js";import{u as xe,f as Ce}from"./utils.lL21jvBF1715934934621.js";import{c as ve,d as we,a as Be}from"./ExtensionUtilities.ipm7HLSH1715934934621.js";import{m as Me}from"./mercator.a2Hae4Rp1715934934621.js";import"./Water2.6em65kAd1715934934621.js";import"./Reflector.OGWpJhsH1715934934621.js";const Le=["position"],Se=["blending","map"],be=["name","renderOrder","pCenter"],ke=["args"],Pe=["color","side"],Ee=["renderOrder","position-z"],$e=["position"],ze=o("TresLineBasicMaterial",{color:16777215,linewidth:.5},null,-1),Ge=["renderOrder"],De=["position"],je=o("TresLineBasicMaterial",{color:0,linewidth:.5},null,-1),Oe={__name:"jiangSuMapMesh",async setup(H){let s,a;(()=>{G.prototype.computeBoundsTree=ve,G.prototype.disposeBoundsTree=we,pe.prototype.raycast=Be})();const y=([s,a]=z(()=>Te("./plugins/simpleGIS/json/320000_full.json","features")),s=await s,a(),s),{map:g}=([s,a]=z(()=>W({map:"./plugins/simpleGIS/image/icon.png"})),s=await s,a(),s),F=y[0].properties.centroid,p=Me();p.center(F).translate([0,0]);const c=[];(()=>{y.forEach(t=>{const l=new ce("hsl( 16, ".concat(Math.random()*30+55,"%, ").concat(Math.random()*30+55,"%)")).getHex(),e=Math.random()*.3+.3,{centroid:n,oneCenter:K,center:Q,name:L}=t.properties,{coordinates:U,type:S}=t.geometry,b=n||K||Q||[0,0],h=p(b);h[1]=-h[1],h[2]=e,c.push({type:"Html",position:h,name:L});const u=p(b);u[1]=-u[1]+.2,u[2]=e+.22,c.push({type:"Sprite",position:u}),U.forEach(k=>{function P(_){const T=new de;_.forEach((x,C)=>{const[f,$]=p(x);C===0?T.moveTo(f,-$):T.lineTo(f,-$)}),c.push({type:"Shape",shape:T,name:L,color:l,depth:e,pCenter:u});const E=[];_.forEach(x=>{const[C,f]=p(x);E.push(C,-f,0)}),c.push({type:"Line",points:new Float32Array(E),depth:e})}S==="MultiPolygon"&&k.forEach(_=>P(_)),S==="Polygon"&&P(k)})})})();const R=t=>{t.rotation.x=-Math.PI/2;const e=new le().setFromObject(t).getCenter(new D),n=[0,0];t.position.x=t.position.x-e.x-n[0],t.position.z=t.position.z-e.z-n[1]},d=ee();te(()=>{d.value&&(R(d.value),d.value.children.forEach(t=>{t.type==="Mesh"&&t.geometry.computeBoundsTree()}))});const V=t=>{t.object.material.opacity=.4},I=t=>{t.material.opacity=1},{camera:Y,controls:J}=oe(),X=(t,l)=>{console.log("click",t,l);const e=new D;e.x=t.point.x,e.y=t.point.y+10,e.z=t.point.z,Ce(Y,e,J)},{onBeforeLoop:Z}=ue();Z(()=>{xe()});const q={wrapperClass:"wrapper",as:"div",center:!0,sprite:!0,prepend:!0,transform:!0};return(t,l)=>(r(),i("TresGroup",{ref_key:"tgRef",ref:d},[(r(),i(v,null,se(c,(e,n)=>(r(),i(v,{key:"".concat(n)},[e.type==="Html"?(r(),w(M(re),A({key:0},q,{position:e.position}),{default:B(()=>[o("span",null,ne(e.name),1)]),_:2},1040,["position"])):m("",!0),e.type==="Sprite"?(r(),i("TresSprite",{key:1,position:e.position,scale:.3,renderOrder:1e3},[o("TresSpriteMaterial",{color:16711680,blending:ae,map:M(g)},null,8,Se)],8,Le)):m("",!0),e.type==="Shape"?(r(),i("TresMesh",{key:2,name:e.name,renderOrder:n,pCenter:e.pCenter,onPointerEnter:V,onPointerLeave:I,onClick:X},[o("TresExtrudeGeometry",{args:[e.shape,{depth:e.depth,bevelEnabled:!1}]},null,8,ke),o("TresMeshStandardMaterial",{color:e.color,emissive:0,roughness:.45,metalness:.8,transparent:!0,side:ie},null,8,Pe)],40,be)):m("",!0),e.type==="Line"?(r(),i(v,{key:3},[o("TresLine",{renderOrder:n,"position-z":e.depth+1e-4},[o("TresBufferGeometry",{position:[e.points,3]},null,8,$e),ze],8,Ee),o("TresLine",{renderOrder:n,"position-z":-1e-4},[o("TresBufferGeometry",{position:[e.points,3]},null,8,De),je],8,Ge)],64)):m("",!0)],64))),64))],512))}},Ae=o("TresPerspectiveCamera",{position:[0,12,0],fov:75,near:.1,far:1e3,up:[0,0,-1]},null,-1),He=o("TresAmbientLight",{intensity:8.8},null,-1),Ne=o("TresDirectionalLight",{position:[0,10,5],intensity:.2},null,-1),Fe=o("TresDirectionalLight",{position:[0,10,-5],intensity:.2},null,-1),Re=o("TresDirectionalLight",{position:[5,10,0],intensity:.2},null,-1),Ve=o("TresDirectionalLight",{position:[-5,10,0],intensity:.2},null,-1),Ie=o("TresGridHelper",{args:[20,10]},null,-1),We=he({__name:"jiangSuMap",setup(H){const s=j({clearColor:"#ffdbd1",alpha:!0,antialias:!0}),a=j({enableDamping:!0,dampingFactor:.05,makeDefault:!0});return(N,y)=>{const g=_e("TresCanvas");return r(),w(g,A(s,{"window-size":""}),{default:B(()=>[Ae,O(M(ye),fe(me(a)),null,16),He,Ne,Fe,Re,Ve,Ie,(r(),w(ge,null,{default:B(()=>[O(Oe)]),_:1}))]),_:1},16)}}});export{We as default};
