import{cf as e,N as o,_ as s,ce as a}from"./three.CMHPKQCP1757651394539.js";import{a as t}from"./@tresjs.DIdO2Yiu1757651394539.js";import{P as i}from"./tweakpane.C0HtAJSg1757651394539.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.Bfz2qsZE1757651394539.js";import"./@fesjs.Bp6K4IrA1757651394539.js";import"./Resource.KHds72Cg1757651394539.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.vk5r7CeE1757651394539.js";import"./three-mesh-ui.module.DvGiv1gQ1757651394539.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1757651394539.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.5Gf3O-xP1757651394539.js";import{_ as m,a as d}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.WET9hQj11757651394539.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as C,m as x,a5 as T,F as k}from"./@vue.pEDXJ_3Z1757651394539.js";import"./postprocessing.BgyKo9Ns1757651394539.js";import"./@vueuse.nD2ilM161757651394539.js";import"./vue-router.Dbyy8kqJ1757651394539.js";import"./lodash-es.C7pWAXPe1757651394539.js";import"./pinia.ByleU3mk1757651394539.js";import"./@qlin.q6OWdsQV1757651394539.js";import"./@babel.BPq7uOAK1757651394539.js";import"./@floating-ui.BFjFSAYt1757651394539.js";import"./@juggle.CcBCnTIR1757651394539.js";import"./starLoading.zOas0Fgx1757651394539.js";import"./utils.D-hA6rPX1757651394539.js";import"./cssLoaders.CZt9nZC81757651394539.js";import"./bubbleLoading.BHr0qewa1757651394539.js";import"./yangyangLoading.W2s5pDEd1757651394539.js";const P={position:[0,120,0]},M=u({__name:"digitalBrainFloor",async setup(u){let M,S;const z=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),G=c({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(G,"show",{label:"点云显示"}),R.addBinding(G,"color",{label:"点云颜色"}),R.addBinding(G,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑轮廓显示"}),R.addBinding(F,"color",{label:"脑轮廓颜色"}),R.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const I=c({color:"#9e00af",show:!0,opacity:1});R.addBinding(I,"show",{label:"脑组织显示"}),R.addBinding(I,"color",{label:"脑组织颜色"}),R.addBinding(I,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const O=new e,q=([M,S]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",O))),M=await M,S(),M),A=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:o}),E=c({autoRotate:!0,autoRotateSpeed:2});return(e,o)=>{const s=j("TresCanvas");return g(),f(k,null,[y(h(l)),y(s,x(A,{"window-size":""}),{default:b((()=>[o[0]||(o[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(E)),null,16),o[1]||(o[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[G.show?(g(),L(p,x({key:0,model:h(q)},G),null,16,["model"])):C("",!0),(g(),L(T,null,{default:b((()=>[F.show?(g(),L(m,x({key:0,model:h(q)},F),null,16,["model"])):C("",!0)])),_:1})),I.show?(g(),L(d,x({key:1,model:h(q)},I),null,16,["model"])):C("",!0)]),y(r,w(B(z)),null,16)])),_:1},16)],64)}}});export{M as default};
