import{e as n,U as t}from"./@tresjs.01P8tiuF1731552996711.js";import{a0 as e,aB as r}from"./three.KG0QRRig1731552996711.js";import{_ as o}from"./argestCircle.iQbYZf4A1731552996711.js";import{d as i,e as s,o as a,f as u,g as c,J as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.-THQH3GC1731552996711.js";import"./@vueuse.YduQ9gvc1731552996711.js";function g(n,t){const e=h();return(g=function(n,t){return e[n-=400]})(n,t)}function h(){const n=["gger","556RyMZqj","1211UwWitF","exception","string","table","1839710gyHUZH","function *\\( *\\)","1565142sAwAQU","18aHWium","value","TresCanvas","24279pDULuI","bind","apply","chain","perspectiveCameraRef","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#ffffff","test","action","input","TresShaderMaterial","__proto__","210lSUkYP","constructor","quanMeshRef","return (function() ","tunnel","uTime","152395nDwlNB","trace","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","TresAmbientLight","stateObject","uniforms","toString","919593xYvLpE","debu","52198960yAscWl","TresPerspectiveCamera","info","7968SkNzYm","warn","while (true) {}","TresMesh"];return(h=function(){return n})()}const T=g;!function(n,t){const e=g,r=h();for(;;)try{if(655870===-parseInt(e(408))/1+-parseInt(e(425))/2+parseInt(e(429))/3*(-parseInt(e(418))/4)+parseInt(e(401))/5*(-parseInt(e(441))/6)+-parseInt(e(419))/7*(-parseInt(e(413))/8)+parseInt(e(426))/9*(-parseInt(e(423))/10)+parseInt(e(410))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const y=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){y(this,(function(){const n=g,t=new RegExp(n(424)),e=new RegExp(n(434),"i"),r=_("init");t[n(436)](r+n(432))&&e.test(r+n(438))?_():r("0")}))()}();const x=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();x(void 0,(function(){const n=g,t=function(){const n=g;let t;try{t=Function(n(444)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t.console=t.console||{},r=["log",n(414),n(412),"error",n(420),n(422),n(402)];for(let o=0;o<r.length;o++){const t=x.constructor.prototype[n(430)](x),i=r[o],s=e[i]||t;t[n(440)]=x.bind(x),t.toString=s[n(407)][n(430)](s),e[i]=t}}))();const w={ref:T(433),position:[600,750,-1221],fov:45,near:1,far:1e4},I=["rotation-x"],b=T(403),j=i({__name:T(445),setup(i){const h={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},T={autoRotate:!0,enableDamping:!0},y={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:b,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:x}=n();return x((({delta:n})=>{const t=g;y[t(406)][t(400)][t(427)]+=n})),(n,e)=>{const r=g,o=s(r(428));return a(),u(o,m(h,{"window-size":""}),{default:c((()=>[l(r(411),w,null,512),f(p(t),v(d(T)),null,16),e[1]||(e[1]=l(r(404),{color:r(435)},null,-1)),e[2]||(e[2]=l("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1)),l(r(416),{ref:r(443),position:[0,100,0],"rotation-x":2*Math.PI/360*90},[e[0]||(e[0]=l("TresPlaneGeometry",{args:[1e3,1e3]},null,-1)),l(r(439),v(d(y)),null,16)],8,I),e[3]||(e[3]=l("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1)),e[4]||(e[4]=l("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});function _(n){function t(n){const e=g;if(typeof n===e(421))return function(n){}[e(442)](e(415))[e(431)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(442)](e(409)+e(417)).call(e(437)):function(){return!1}.constructor(e(409)+e(417))[e(431)](e(405)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
