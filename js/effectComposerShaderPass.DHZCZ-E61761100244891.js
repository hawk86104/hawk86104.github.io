import{F as e,_ as r,K as a}from"./@tresjs.DqJWjmrH1761100244891.js";import{cr as s,cs as n,d as l,ct as t,q as o,cK as u}from"./three.DvmzhRS91761100244891.js";import{d as i,a as v,a3 as d,G as m,o as c,I as p,F as f,g as x,b as T,e as h,h as g,u as w}from"./@vue.CKlgtJke1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";const y=i({__name:"ecLayerShaderPass",setup(a){const i=v(),x=v(),{camera:T,renderer:h,scene:g,sizes:w}=e(),y=.572,_=.51,b=0;let M=null,P=null,j=null;d(()=>{i.value&&i.value.layers.set(0),x.value&&x.value.layers.set(1),w.width.value&&(((e,r,a,o,u)=>{M=new s(e,r);const i=new n(new l(o,u),y,_,b);P=new t(a),P.renderToScreen=!1,P.addPass(M),P.addPass(i)})(g.value,T.value,h,w.width.value,w.height.value),(e=>{j=new t(e);const r=new o({uniforms:{baseTexture:{value:null},bloomTexture:{value:P.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( vec4( 1.0 ) *texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n            }\n        ",defines:{}}),a=new u(r,"baseTexture");a.needsSwap=!0,j.addPass(M),j.addPass(a)})(h))});const{onRender:S}=r();return S(()=>{P&&j&&T.value&&(h.clear(),T.value.layers.set(1),P.render(),h.clearDepth(),T.value.layers.set(0),j.render(g.value,T.value))}),(e,r)=>(c(),m(f,null,[p("TresMesh",{ref_key:"normalBox",ref:i,position:[3,2,1]},[...r[0]||(r[0]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)])],512),p("TresMesh",{ref_key:"shineBox",ref:x,position:[0,2,-4]},[...r[1]||(r[1]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)])],512)],64))}}),_=i({__name:"effectComposerShaderPass",setup(e){const r=v();return d(()=>{if(r.value){r.value.context.renderer.instance.autoClear=!1}}),(e,s)=>{const n=x("TresCanvas");return c(),T(n,{renderMode:"manual","window-size":"",ref_key:"tcRef",ref:r},{default:h(()=>[s[0]||(s[0]=p("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),s[1]||(s[1]=p("TresAmbientLight",{intensity:1},null,-1)),g(w(a)),s[2]||(s[2]=p("TresGridHelper",{args:[10,10]},null,-1)),g(y)]),_:1},512)}}});export{_ as default};
