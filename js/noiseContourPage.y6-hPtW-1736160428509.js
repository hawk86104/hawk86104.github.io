import{m as n,b as e,e as t,U as r}from"./@tresjs.8MtVPQyb1736160428509.js";import{W as o,k as i,cf as s,a0 as a,n as u,b7 as c,c5 as f,c3 as l}from"./three.rmsIv-u_1736160428509.js";import{d as v,a6 as p,a1 as m,o as d,D as h,J as g,u as w,F as x,e as y,f as D,g as S,j as C,al as I,m as R}from"./@vue.4u_eOGex1736160428509.js";import"./@vueuse.GObPVvIB1736160428509.js";const T=E;!function(n,e){const t=E,r=M();for(;;)try{if(792682===-parseInt(t(365))/1*(-parseInt(t(378))/2)+-parseInt(t(380))/3*(parseInt(t(399))/4)+-parseInt(t(370))/5+-parseInt(t(372))/6+-parseInt(t(392))/7+-parseInt(t(412))/8+parseInt(t(391))/9*(parseInt(t(415))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const b=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[E(400)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){b(this,(function(){const n=E,e=new RegExp(n(402)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=F("init");e[n(405)](r+n(409))&&t[n(405)](r+n(383))?F():r("0")}))()}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[E(400)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function E(n,e){const t=M();return(E=function(n,e){return t[n-=365]})(n,e)}_(void 0,(function(){const n=E,e=function(){const n=E;let e;try{e=Function(n(379)+n(401)+");")()}catch(t){e=window}return e}(),t=e[n(371)]=e[n(371)]||{},r=[n(367),"warn","info",n(377),"exception",n(389),n(373)];for(let o=0;o<r.length;o++){const e=_[n(411)][n(413)][n(381)](_),i=r[o],s=t[i]||e;e.__proto__=_[n(381)](_),e[n(384)]=s[n(384)].bind(s),t[i]=e}}))();const P=[T(374),T(385)],U=[T(374)],N="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n";function M(){const n=["derivatives","error","2SSOTlW","return (function() ","290313JUsADG","bind","texture","input","toString","rotation-x","TresMesh","#ffffff","render","table","TresSphereGeometry","27UClDYZ","3608052ellnpH","gger","innerHeight","uniforms","material","call","addPass","20xrkllw","apply",'{}.constructor("return this")( )',"function *\\( *\\)","string","iTime","test","renderToScreen","value","counter","chain","debu","constructor","5300344GfUITv","prototype","tShadow","12156030TwlTwq","865121efFDTS","noiseContourMeshRef2","log","width","noiseContourMeshRef1","3264205UFXtsN","console","8427438BnSayZ","trace","side","extensions"];return(M=function(){return n})()}const j=v({__name:"noiseContour",async setup(r){const v=T;let y,D;const{camera:S,renderer:C,scene:I,sizes:R}=n(),b=([y,D]=p((()=>e({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),y=await y,D(),y),{onLoop:_,onAfterLoop:E}=t(),M=new o(1,1,{minFilter:u,magFilter:u,format:c,stencilBuffer:!1}),j=new i(window.innerWidth,window[v(394)]);let F=null;const k=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:j}},vertexShader:N,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),A=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:b}},vertexShader:N,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return A[v(406)]=!0,A[v(396)][v(375)][v(376)]=!0,m((()=>{const n=v;R[n(368)][n(407)]&&(F=new f(C[n(407)]),F[n(398)](new l(I.value,S.value)),F.addPass(k),F.addPass(A))})),_((({elapsed:n})=>{const e=v;C[e(407)][e(388)](I[e(407)],S[e(407)],M),k[e(395)][e(414)][e(407)]=M[e(382)],A[e(395)][e(404)][e(407)]=n})),E((()=>{F&&F[v(388)]()})),(n,e)=>{const t=v;return d(),h(x,null,[g(t(386),{ref:t(366),side:w(a),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g("TresBoxGeometry",{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:t(387),shininess:0},null,-1)]),8,P),g("TresMesh",{ref:t(369),side:w(a),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g(t(390),{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:"#ffffff",shininess:0},null,-1)]),8,U)],64)}}});function F(n){function e(n){const t=E;if(typeof n===t(403))return function(n){}[t(411)]("while (true) {}")[t(400)](t(408));1!==(""+n/n).length||n%20==0?function(){return!0}[t(411)]("debu"+t(393))[t(397)]("action"):function(){return!1}[t(411)](t(410)+"gger").apply("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const k=z;!function(n,e){const t=z,r=L();for(;;)try{if(164848===parseInt(t(247))/1*(-parseInt(t(260))/2)+-parseInt(t(220))/3+parseInt(t(224))/4+parseInt(t(243))/5*(parseInt(t(230))/6)+parseInt(t(261))/7+-parseInt(t(232))/8+parseInt(t(257))/9*(parseInt(t(246))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const A=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[z(253)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){A(this,(function(){const n=z,e=new RegExp(n(258)),t=new RegExp(n(242),"i"),r=B("init");e.test(r+n(250))&&t[n(251)](r+n(231))?B():r("0")}))()}();const Z=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[z(253)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function z(n,e){const t=L();return(z=function(n,e){return t[n-=220]})(n,e)}Z(void 0,(function(){const n=z,e=function(){const n=z;let e;try{e=Function(n(244)+n(239)+");")()}catch(t){e=window}return e}(),t=e[n(262)]=e[n(262)]||{},r=[n(225),n(227),n(254),n(228),n(248),n(241),"trace"];for(let o=0;o<r.length;o++){const e=Z[n(236)][n(256)][n(249)](Z),i=r[o],s=t[i]||e;e.__proto__=Z[n(249)](Z),e.toString=s[n(223)][n(249)](s),t[i]=e}}))();const G={ref:k(245),position:[600,750,-1221],fov:45,near:1,far:1e4},O=v({__name:"noiseContourPage",setup(n){const e=k,t={clearColor:e(226),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=y(i(222));return d(),D(s,R(t,{"window-size":""}),{default:S((()=>[g(i(238),G,null,512),C(w(r)),o[0]||(o[0]=g(i(252),{color:i(240)},null,-1)),o[1]||(o[1]=g(i(235),{position:[400,400,400],intensity:1,color:i(237)},null,-1)),(d(),D(I,null,{default:S((()=>[C(j)])),_:1}))])),_:1},16)}}});function B(n){function e(n){const t=z;if(typeof n===t(263))return function(n){}[t(236)]("while (true) {}")[t(253)](t(259));1!==(""+n/n)[t(255)]||n%20==0?function(){return!0}.constructor(t(233)+t(221))[t(234)](t(229)):function(){return!1}.constructor("debugger")[t(253)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}function L(){const n=["call","TresDirectionalLight","constructor","red","TresPerspectiveCamera",'{}.constructor("return this")( )',"#ffffff","table","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","951115XCwAsC","return (function() ","perspectiveCameraRef","149980HJIOPT","3FxdZdC","exception","bind","chain","test","TresAmbientLight","apply","info","length","prototype","207eWGcJj","function *\\( *\\)","counter","116962MCkpYo","846538yzvdHG","console","string","279897OaSwHS","gger","TresCanvas","toString","348996eqpOuO","log","#000000","warn","error","action","6ZFfSrl","input","2478160RZmZWf","debu"];return(L=function(){return n})()}export{O as default};
