import{e,b as s,a}from"./@tresjs.BCY8YfXT1755073624354.js";import{P as t}from"./tweakpane.C0HtAJSg1755073624354.js";import"./OimoPhysicsBuffer.Csz6HKsO1755073624354.js";import{_ as i}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.CmXyXtum1755073624354.js";import"./vanilla.esm.5.5.0.4RzPPV3E1755073624354.js";import"./PackedMipMapGenerator.DeiOvyZ_1755073624354.js";import{d as r,aa as o,w as l,G as n,o as p,I as m,u as d,r as u,h as c,e as j,f,j as g,a5 as b,a7 as w,a8 as h,m as _}from"./@vue.BzMISRrV1755073624354.js";import{aL as y,ac as v,V as B,cG as x,a3 as L,bL as M}from"./three.QlBabAUP1755073624354.js";import{g as S}from"./utils.B6CQmLm51755073624354.js";import"./postprocessing.5xFoYuqq1755073624354.js";import"./@vueuse.rvsfWOfQ1755073624354.js";import"./oimophysics.BBtHVm4j1755073624354.js";import"./dither.glsl.tNAdkJUa1755073624354.js";import"./Reflector.DzE5w3fw1755073624354.js";import"./vite-plugin-qiankun.B06WoCqG1755073624354.js";import"./object-hash.BInxg9ro1755073624354.js";import"./@amap.CGUF9xH41755073624354.js";import"./jszip.BXr3cx6s1755073624354.js";import"./three-stdlib.rlp-rRG71755073624354.js";import"./@tweenjs.Dhzs71lh1755073624354.js";import"./utils.BdT8km7q1755073624354.js";import"./@fesjs.DuDMTHmH1755073624354.js";import"./vue-router.D2i-xOim1755073624354.js";import"./lodash-es.C7pWAXPe1755073624354.js";import"./pinia.CVrpo-fQ1755073624354.js";import"./@qlin.q6OWdsQV1755073624354.js";import"./@babel.BPq7uOAK1755073624354.js";import"./@floating-ui.BFjFSAYt1755073624354.js";import"./@juggle.CcBCnTIR1755073624354.js";import"./three-mesh-bvh.DbDPBPoA1755073624354.js";import"./axios.B4LHgpLv1755073624354.js";import"./axios.DLTVXJci1755073624354.js";import"./color.CFyq_33R1755073624354.js";import"./color-string.DXsvjiRp1755073624354.js";import"./color-name.BQ5IbGbl1755073624354.js";import"./simple-swizzle.DJgM2FkY1755073624354.js";import"./is-arrayish.CLsR9Wfx1755073624354.js";import"./color-convert.tuQb1Ap01755073624354.js";import"./lodash.BxmUxzGj1755073624354.js";import"./d3-geo.Bzy3pe6R1755073624354.js";import"./d3-array.DtK5BhF11755073624354.js";const k=["args"],G=["blending","map","side","alphaMap","color"],T=r({__name:"streamLine",props:{color:{default:"#2bc4dc"},radius:{default:.2},speed:{default:1},radialSegments:{default:6},tubularSegments:{default:64},closed:{type:Boolean,default:!1},clockwise:{type:Boolean,default:!0},fewNum:{default:1},linesList:{default:()=>[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[15,0,15]]}},async setup(a){let t,i;const r=a,{map:u}=([t,i]=o((()=>s({map:"./plugins/digitalCity/image/line2.png"}))),t=await t,i(),t);u.needsUpdate=!0,u.wrapS=u.wrapT=y,u.repeat.set(r.fewNum,1),u.rotation=r.clockwise?0:Math.PI,u.generateMipmaps=!1,u.magFilter=v;let c=[];r.linesList.forEach((e=>{c.push((new B).fromArray(e))}));const j=new x(c),{onLoop:f}=e();return f((()=>{u.offset.x+=.002*r.speed})),l((()=>[r.clockwise,r.fewNum]),(([e,s])=>{u.rotation=e?0:Math.PI,u.repeat.set(s,1)})),(e,s)=>(p(),n("TresMesh",null,[m("TresTubeGeometry",{args:[d(j),r.tubularSegments,r.radius,r.radialSegments,r.closed]},null,8,k),m("TresMeshBasicMaterial",{blending:M,map:d(u),side:L,alphaMap:d(u),transparent:!0,color:r.color},null,8,G)]))}}),P=r({__name:"streamLines",async setup(e){let s,r;const l=u({reflectivity:.1,showGridHelper:!1,scale:5}),n=u({color:"#bd01ff",radius:.2,speed:1,tubularSegments:64,radialSegments:6,closed:!1,clockwise:!1,fewNum:1,linesList:[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[13,0,15]]}),y=new t;y.addBinding(n,"color",{label:"流光颜色"}),y.addBinding(n,"radius",{label:"管道半径",min:.01,max:1,step:.01}),y.addBinding(n,"speed",{label:"跑动速度",min:.1,max:10,step:.1}),y.addBinding(n,"tubularSegments",{label:"管道路径平滑",min:1,max:100,step:1}),y.addBinding(n,"radialSegments",{label:"管道壁圆润",min:1,max:20,step:1}),y.addBinding(n,"closed",{label:"闭合管道"}),y.addBinding(n,"clockwise",{label:"顺时针流动"}),y.addBinding(n,"fewNum",{label:"流线数量",min:1,max:10,step:1});const v=([s,r]=o((()=>S("./plugins/simpleGIS/json/320000_full.json"))),s=await s,r(),s);return(e,s)=>{const t=c("TresCanvas");return p(),j(t,{clearColor:"#201919","window-size":""},{default:f((()=>[s[0]||(s[0]=m("TresPerspectiveCamera",{position:[25,25,25],fov:45,near:.1,far:1e4},null,-1)),g(d(a),{enableDamping:"",autoRotate:""}),(p(),j(b,null,{default:f((()=>[g(T,w(h(n)),null,16)])),_:1})),(p(),j(b,null,{default:f((()=>[g(T,{linesList:d(v),position:[0,0,-4]},null,8,["linesList"])])),_:1})),(p(),j(b,null,{default:f((()=>[g(d(i),_({position:[0,-.5,0]},l),null,16)])),_:1}))])),_:1})}}});export{P as default};
