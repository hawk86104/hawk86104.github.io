import{_ as e}from"./three.8tDGqmLF1741309500666.js";import{e as n,o as t,a}from"./@tresjs.yaBKiR-I1741309500666.js";import{P as o}from"./tweakpane.yDiyAAkA1741309500666.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as p,N as v,j as f,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1741309500666.js";import"./postprocessing.5pHDeDVF1741309500666.js";import"./@vueuse.7Aa9Vkmy1741309500666.js";const x=S;!function(e,n){const t=S,a=T();for(;;)try{if(741337===-parseInt(t(364))/1*(parseInt(t(344))/2)+-parseInt(t(357))/3*(-parseInt(t(399))/4)+parseInt(t(385))/5*(parseInt(t(388))/6)+parseInt(t(361))/7+parseInt(t(347))/8+parseInt(t(393))/9+-parseInt(t(349))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(389)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=S,n=new RegExp(e(374)),t=new RegExp(e(383),"i"),a=b(e(346));n[e(378)](a+"chain")&&t[e(378)](a+e(387))?b():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(389)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(){const e=["color","input","157218GwRwkh","apply","bind","#17c5a9","__proto__","900144ecHQQC","uTime","stateObject","return (function() ","prototype","Debug","4QEswns","exception","change","size","addFolder","uWaveHeight","海浪变化速度","TresMeshBasicMaterial","value","addBinding","uWaveSpeed","619908EXngzu","TresShaderMaterial","init","1850272kGhEOl","uniforms","11131120NWLUCn","SRGBColorSpace","while (true) {}","console","call","groupRef","pointsEarth","length","1197159NxFEhh","constructor","海浪高度","rotation","1417563pkDHau","error","info","1OnuAzE","debu","trace","table","gger","TresGroup","action",'{}.constructor("return this")( )',"TresMesh","TresPoints","function *\\( *\\)","TresIcosahedronGeometry","log","粒子大小","test","pointSize","#080820","FrontSide","warn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#122148","235FEeuwX"];return(T=function(){return e})()}function S(e,n){const t=T();return(S=function(e,n){return t[e-=343]})(e,n)}w(void 0,(function(){const e=S;let n;try{n=Function(e(396)+e(371)+");")()}catch(o){n=window}const t=n[e(352)]=n[e(352)]||{},a=[e(376),e(382),e(363),e(362),e(400),e(367),e(366)];for(let r=0;r<a[e(356)];r++){const n=w[e(358)][e(397)][e(390)](w),o=a[r],i=t[o]||n;n[e(392)]=w[e(390)](w),n.toString=i.toString[e(390)](i),t[o]=n}}))();const _=r({__name:x(355),async setup(r){const y=x;let w,T;const S={color:y(391),pointSize:4},_={clearColor:y(384),shadows:!1,alpha:!1,outputColorSpace:e[y(350)]},b={color:S.color,wireframe:!0,transparent:!0,opacity:.2},z=([w,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,T(),w),E=z[0],j=z[1],P=z[2],D=z[3],k=z[4],C={uniforms:{size:{type:"f",value:S[y(379)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:j}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(381)]},A=l(),I=l(),H=(new o)[y(403)]({title:y(398)});H[y(408)](S,"color",{type:y(386)}).on(y(401),(({value:e})=>{const n=y;I[n(407)][n(386)].set(e)})),H[y(408)](C[y(348)][y(402)],y(407),{min:.1,max:10,step:.1,label:y(377)}),H.addBinding(C.uniforms[y(404)],"value",{min:.01,max:.5,step:.01,label:y(359)}),H.addBinding(C[y(348)][y(343)],y(407),{min:.01,max:1,step:.01,label:y(405)});const{onLoop:U}=n();return U((({delta:e})=>{const n=y;A.value&&(A[n(407)][n(360)].y+=.002,C[n(348)][n(394)][n(407)]+=10*e)})),(e,n)=>{const a=y,o=s("TresCanvas");return u(),c(o,d(_,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=v("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),f(m(t),{autoRotate:!0,autoRotateSpeed:2}),v(a(369),{ref_key:a(354),ref:A},[v(a(372),null,[n[0]||(n[0]=v(a(375),{args:[1,4]},null,-1)),v(a(406),d({ref_key:"wireframeMaterialRef",ref:I},b),null,16)]),v(a(373),null,[n[1]||(n[1]=v(a(375),{args:[1,128]},null,-1)),v(a(345),h(g(C)),null,16)])],512),n[3]||(n[3]=v("TresHemisphereLight",{args:["#ffffff",a(380),3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=S;if("string"==typeof e)return function(e){}.constructor(t(351))[t(389)]("counter");1!==(""+e/e)[t(356)]||e%20==0?function(){return!0}[t(358)]("debugger")[t(353)](t(370)):function(){return!1}.constructor(t(365)+t(368)).apply(t(395)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
