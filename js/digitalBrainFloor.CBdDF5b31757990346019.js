import{ck as o,N as e,_ as s,cj as a}from"./three.DHXbQd-f1757990346019.js";import{a as t}from"./@tresjs.PrijCSbN1757990346019.js";import{P as i}from"./tweakpane.C0HtAJSg1757990346019.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.DhzkUxvU1757990346019.js";import"./@fesjs.DsWuaiKR1757990346019.js";import"./Resource.G7gPhd561757990346019.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.BhVVsEKM1757990346019.js";import"./three-mesh-ui.module.fjONUzeg1757990346019.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1757990346019.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.Ddr2oGW71757990346019.js";import{_ as d,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BHUSM1ji1757990346019.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as k,m as x,a5 as C,F as S}from"./@vue.pEDXJ_3Z1757990346019.js";import"./postprocessing.BxUQ5pTE1757990346019.js";import"./@vueuse.D19fGRfI1757990346019.js";import"./vue-router.xKjUDrFa1757990346019.js";import"./lodash-es.C7pWAXPe1757990346019.js";import"./pinia.Bzq4ihza1757990346019.js";import"./@qlin.q6OWdsQV1757990346019.js";import"./@babel.BPq7uOAK1757990346019.js";import"./@floating-ui.BFjFSAYt1757990346019.js";import"./@juggle.CcBCnTIR1757990346019.js";import"./starLoading.CyppAvT91757990346019.js";import"./utils.BDmprct61757990346019.js";import"./cssLoaders.B22JIyZ31757990346019.js";import"./bubbleLoading.D31AVQdS1757990346019.js";import"./yangyangLoading.BvgZjldA1757990346019.js";const T={position:[0,120,0]},P=u({__name:"digitalBrainFloor",async setup(u){let P,R;const z=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),G=c({color:"#fff",show:!0,opacity:1}),M=new i({title:"参数"});M.addBinding(G,"show",{label:"点云显示"}),M.addBinding(G,"color",{label:"点云颜色"}),M.addBinding(G,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});M.addBinding(F,"show",{label:"脑轮廓显示"}),M.addBinding(F,"color",{label:"脑轮廓颜色"}),M.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const I=c({color:"#9e00af",show:!0,opacity:1});M.addBinding(I,"show",{label:"脑组织显示"}),M.addBinding(I,"color",{label:"脑组织颜色"}),M.addBinding(I,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const q=new o,A=([P,R]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",q))),P=await P,R(),P),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(S,null,[y(h(l)),y(s,x(E,{"window-size":""}),{default:b((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(H)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",T,[G.show?(g(),L(p,x({key:0,model:h(A)},G),null,16,["model"])):k("",!0),(g(),L(C,null,{default:b((()=>[F.show?(g(),L(d,x({key:0,model:h(A)},F),null,16,["model"])):k("",!0)])),_:1})),I.show?(g(),L(m,x({key:1,model:h(A)},I),null,16,["model"])):k("",!0)]),y(r,w(B(z)),null,16)])),_:1},16)],64)}}});export{P as default};
