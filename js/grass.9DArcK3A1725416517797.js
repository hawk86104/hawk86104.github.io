import{a6 as t,Z as n,K as e,a9 as o}from"./three.VTQVqxMx1725416517797.js";import{$ as r,N as a,d as i,x as s}from"./@tresjs.5lh7VmqZ1725416517797.js";import"./index.AMVLOANF1725416517797.js";import{a as c}from"./simplex-noise.MycypUyu1725416517797.js";import{C as l}from"./index.6rFj34yJ1725416517797.js";import{d as u,a5 as f,o as p,E as h,L as m,u as d,r as v,f as g,g as x,j as w,aj as y,ak as b,al as _}from"./@vue._6MD2XyK1725416517797.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.qJBKYATO1725416517797.js";import"./tweakpane.yHWGBmom1725416517797.js";import"./@vueuse.L-salR9N1725416517797.js";import"./lamina.3FznHmrT1725416517797.js";import"./glsl-tokenizer.dGVPr_M11725416517797.js";import"./@amap.LUDXTi4z1725416517797.js";import"./glsl-token-descope.k6VenWK11725416517797.js";import"./glsl-token-depth.p3tOIRmp1725416517797.js";import"./glsl-token-scope.famlVRT71725416517797.js";import"./glsl-token-properties.e5wKH_ji1725416517797.js";import"./glsl-token-assignments.gU8TtFbu1725416517797.js";import"./glsl-token-string.7HmLwuvT1725416517797.js";import"./glsl-token-functions.fONiiOsX1725416517797.js";import"./object-hash.UdqO8HjX1725416517797.js";import"./jszip.7CKSmb6c1725416517797.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.zMHiHAwX1725416517797.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.b87w5tq-1725416517797.js";import"./three-stdlib.a3mqXhLa1725416517797.js";import"./@pmndrs.3SP8A_bt1725416517797.js";import"./utils.PFlOIhME1725416517797.js";const j=D;!function(t,n){const e=D,o=F();for(;;)try{if(286328===-parseInt(e(279))/1+-parseInt(e(269))/2+-parseInt(e(230))/3+parseInt(e(210))/4*(-parseInt(e(246))/5)+-parseInt(e(266))/6+parseInt(e(212))/7+parseInt(e(208))/8*(parseInt(e(275))/9))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const z=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[D(233)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){z(this,(function(){const t=D,n=new RegExp(t(219)),e=new RegExp(t(209),"i"),o=E(t(238));n[t(240)](o+t(235))&&e.test(o+"input")?E():o("0")}))()}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[D(233)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();A(void 0,(function(){const t=D,n=function(){let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(n){t=window}return t}(),e=n[t(222)]=n[t(222)]||{},o=[t(205),t(253),"info",t(225),t(250),t(265),t(241)];for(let r=0;r<o.length;r++){const n=A.constructor[t(284)][t(251)](A),a=o[r],i=e[a]||n;n[t(217)]=A[t(251)](A),n[t(244)]=i.toString[t(251)](i),e[a]=n}}))();const I=[j(281)],k=["index",j(228),j(268),j(272),j(271),j(285),j(259),j(280)],C=[j(261)],S=[j(232)];function F(){const t=["TresInstancedBufferGeometry","11953000tuLrTl","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","31676ykesEJ","time","2958837lApjHx","#000f00","map","Vector4","TresMeshStandardMaterial","__proto__","counter","function *\\( *\\)","instances","array","console","translate","width","error","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","constructor","attributes-position","string","1282011rqcoXp","PlaneGeometry","side","apply","gger","chain","sin","Vector3","init","alphaMap","test","trace","cos","push","toString","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","265nSGNUh","normalize","set","TresGroup","exception","bind","attributes","warn","while (true) {}","uniforms","orientationsF32","joints","random","attributes-halfRootAngleSin","computeVertexNormals","geometry","convertSRGBToLinear","debu","offsetsF32","table","1953930OWSAdN","value","attributes-uv","633960AdSrkm","InstancedBufferAttribute","attributes-orientation","attributes-offset","position","index","9dDyYmd","Color","needsUpdate","TresMesh","140809ZzFBXs","attributes-halfRootAngleCos","material","halfRootAngleCosF32","lookAt","prototype","attributes-stretch","length","log","halfRootAngleSinF32"];return(F=function(){return t})()}const R=u({__name:"grass",props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(o){const i=j;let s,u;const v=([s,u]=f((()=>a({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),s=await s,u(),s),g=o,x=c(Math[i(258)]);function w(n,e){const o=i,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,s=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,c=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(215)])(r,a,s,c)}function y(t,n){var e=2*x(t/50,n/50);return e+=4*x(t/100,n/100),e+=.2*x(t/10,n/10)}const b=function(n,o){const r=i,a=[],s=[],c=[],l=[],u=[];let f=new(t[r(215)]),p=new(t[r(215)]);const h=-.25;for(let e=0;e<n;e++){const i=Math[r(258)]()*o-o/2,m=Math.random()*o-o/2,d=y(i,m);a[r(243)](i,d,m);let v=Math.PI-Math[r(258)]()*(2*Math.PI);l[r(243)](Math.sin(.5*v)),u[r(243)](Math[r(242)](.5*v));let g=new(t[r(237)])(0,1,0),x=g.x*Math[r(236)](v/2),b=g.y*Math[r(236)](v/2),_=g.z*Math[r(236)](v/2),M=Math.cos(v/2);f[r(248)](x,b,_,M)[r(247)](),v=.5*Math[r(258)]()+h,g=new(t[r(237)])(1,0,0),x=g.x*Math[r(236)](v/2),b=g.y*Math[r(236)](v/2),_=g.z*Math[r(236)](v/2),M=Math.cos(v/2),p[r(248)](x,b,_,M).normalize(),f=w(f,p),v=.5*Math[r(258)]()+h,g=new(t[r(237)])(0,0,1),x=g.x*Math[r(236)](v/2),b=g.y*Math[r(236)](v/2),_=g.z*Math[r(236)](v/2),M=Math[r(242)](v/2),p[r(248)](x,b,_,M)[r(247)](),f=w(f,p),s[r(243)](f.x,f.y,f.z,f.w),e<n/3?c[r(243)](1.8*Math[r(258)]()):c[r(243)](Math[r(258)]())}return{offsetsF32:new(t[r(270)])(new Float32Array(a),3),orientationsF32:new e(new Float32Array(s),4),stretchesF32:new(t[r(270)])(new Float32Array(c),1),halfRootAngleCosF32:new(t[r(270)])(new Float32Array(u),1),halfRootAngleSinF32:new e(new Float32Array(l),1)}}(g[i(220)],g[i(224)]),_=new(t[i(231)])(g.bW,g.bH,1,g[i(257)])[i(223)](0,g.bH/2,0),M=new(t[i(231)])(g.width,g[i(224)],32,32);M[i(283)](new(t[i(237)])(0,1,0));const z=M[i(252)][i(273)];for(let t=0;t<z[i(221)][i(286)];t+=3)z[i(221)][t+1]=y(z[i(221)][t],z[i(221)][t+2]);M.attributes[i(273)][i(277)]=!0,M[i(260)]();const A=new(l({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[i(276)])(.3,.9,0)[i(262)](),bottomColor:new(t[i(276)])(0,.2,0)[i(262)]()},i(245),i(226),(t=>{t[i(232)]=n})));A[i(214)]=v[i(214)],A[i(239)]=v[i(239)],A.toneMapped=!1;const{onLoop:F}=r();return F((({elapsed:t})=>{const n=i;A[n(255)][n(211)][n(267)]=t/4})),(t,e)=>{const o=i;return p(),h(o(249),null,[m(o(278),{material:d(A)},[m(o(207),{index:d(_)[o(274)],"attributes-position":d(_)[o(252)][o(273)],"attributes-uv":d(_)[o(252)].uv,"attributes-offset":d(b)[o(264)],"attributes-orientation":d(b)[o(256)],"attributes-stretch":d(b).stretchesF32,"attributes-halfRootAngleSin":d(b)[o(206)],"attributes-halfRootAngleCos":d(b)[o(282)]},null,8,k)],8,I),m("TresMesh",{position:[0,0,0],geometry:d(M)},[m(o(216),{color:o(213),side:n},null,8,S)],8,C)])}}});function D(t,n){const e=F();return(D=function(t,n){return e[t-=205]})(t,n)}function E(t){function n(t){const e=D;if(typeof t===e(229))return function(t){}[e(227)](e(254))[e(233)](e(218));1!==(""+t/t).length||t%20==0?function(){return!0}.constructor("debugger").call("action"):function(){return!1}[e(227)](e(263)+e(234))[e(233)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const T=L;!function(t,n){const e=L,o=P();for(;;)try{if(396760===parseInt(e(431))/1+parseInt(e(415))/2*(parseInt(e(445))/3)+-parseInt(e(422))/4+parseInt(e(440))/5*(-parseInt(e(425))/6)+parseInt(e(411))/7+-parseInt(e(438))/8*(parseInt(e(412))/9)+parseInt(e(427))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const B=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function L(t,n){const e=P();return(L=function(t,n){return e[t-=409]})(t,n)}!function(){B(this,(function(){const t=L,n=new RegExp(t(414)),e=new RegExp(t(413),"i"),o=N(t(439));n[t(428)](o+t(417))&&e[t(428)](o+t(430))?N():o("0")}))()}();const O=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();O(void 0,(function(){const t=L,n=function(){const t=L;let n;try{n=Function(t(442)+t(423)+");")()}catch(e){n=window}return n}(),e=n.console=n[t(426)]||{},o=[t(424),t(433),t(443),t(419),"exception",t(437),"trace"];for(let r=0;r<o[t(421)];r++){const n=O[t(434)].prototype.bind(O),a=o[r],i=e[a]||n;n[t(432)]=O.bind(O),n.toString=i.toString[t(410)](i),e[a]=n}}))();const H=m("TresPerspectiveCamera",{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1);function P(){const t=["26992NZkesU",'{}.constructor("return this")( )',"log","132mrdaKf","console","3384200kWmMqd","test","call","input","790504FelhEe","__proto__","warn","constructor","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","counter","table","10304ljniiI","init","118840ARJskr","gger","return (function() ","info","stateObject","15aSabth","string","bind","914858IhXqZz","3357BkvtED","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","58884UCcMpM","action","chain","debu","error","grass","length"];return(P=function(){return t})()}const q=u({__name:T(420),setup(t){const n=v({alpha:!0,toneMapping:o,windowSize:!0,clearColor:6710886}),e=v({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=L;return p(),g(d(s),y(b(n)),{default:x((()=>[H,w(d(i),y(b(e)),null,16),(p(),g(_,null,{default:x((()=>[w(R)])),_:1})),(p(),g(_,null,{default:x((()=>[w(d(M),{texture:r(435)})])),_:1}))])),_:1},16)}}});function N(t){function n(t){const e=L;if(typeof t===e(409))return function(t){}[e(434)]("while (true) {}").apply(e(436));1!==(""+t/t)[e(421)]||t%20==0?function(){return!0}[e(434)](e(418)+e(441))[e(429)](e(416)):function(){return!1}[e(434)](e(418)+"gger").apply(e(444)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{q as default};
