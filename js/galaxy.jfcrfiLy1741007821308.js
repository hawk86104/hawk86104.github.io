import{c1 as n,ak as t,am as e,C as o,aX as r,c as s}from"./three.sBrYSCgq1741007821308.js";import{e as a,I as i,K as c,o as u}from"./@tresjs.u6hJLBm41741007821308.js";import{d as l,b as d,w as f,e as p,o as m,H as h,j as v,u as w,g,N as P,aj as y,ak as M,F as b}from"./@vue.NRI7TcgI1741007821308.js";import"./postprocessing.rsQjznIU1741007821308.js";import"./@vueuse.jd1Cg91M1741007821308.js";const C=I;!function(n,t){const e=I,o=T();for(;;)try{if(102842===parseInt(e(399))/1*(-parseInt(e(408))/2)+-parseInt(e(409))/3*(-parseInt(e(388))/4)+-parseInt(e(390))/5*(parseInt(e(368))/6)+parseInt(e(393))/7+parseInt(e(389))/8*(parseInt(e(377))/9)+parseInt(e(352))/10*(parseInt(e(369))/11)+parseInt(e(391))/12)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=I,t=new RegExp(n(373)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A("init");t[n(394)](o+"chain")&&e.test(o+n(375))?A():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=T();return(I=function(n,t){return e[n-=346]})(n,t)}function T(){const n=["27275pZdIGy","1114968HOZcwP","random","278418qKuKev","test","TresBufferGeometry","constructor","TresCanvas","lerp","5cRIqOu","radius","prototype","console","cos","keys","branches","uTime","__proto__","72648zvniLH","340365TuLXBG","length","table","sin","exception","aScale","while (true) {}",'{}.constructor("return this")( )',"1660OtshrL","position","return (function() ","forEach","#1b3984","call","action","#b5f28d","color","bufferRef","toString","uniforms","bind","value","randomnessPower","geometry","90fIKZeZ","7810OysYpn","a-scale","outsideColor","string","function *\\( *\\)","gger","input","debu","20556ogcHKf","setAttribute","insideColor","error","black","count","apply","warn","a-randomness","stateObject","TresPerspectiveCamera","4qdxvFr","8apNtwJ"];return(T=function(){return n})()}z(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(354)+n(351)+");")()}catch(e){t=window}return t}(),e=t[n(402)]=t[n(402)]||{},o=["log",n(384),"info",n(380),n(348),n(346),"trace"];for(let r=0;r<o[n(410)];r++){const t=z[n(396)][n(401)][n(364)](z),s=o[r],a=e[s]||t;t[n(407)]=z.bind(z),t[n(362)]=a[n(362)].bind(a),e[s]=t}}))();const _=[C(353),C(370),"color",C(385)],j=l({__name:"galaxy",setup(l){const x=C,z={clearColor:x(381),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},I={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(359),outsideColor:x(356)},T=new o(I[x(379)]),j=new o(I[x(371)]),A=new Float32Array(3*I[x(382)]),S=new Float32Array(3*I[x(382)]),F=new Float32Array(I[x(382)]),O=new Float32Array(3*I[x(382)]);for(let n=0;n<I[x(382)];n++){const t=3*n,e=Math[x(392)]()*I.radius,o=n%I[x(405)]*Math.PI*2/I[x(405)];A[t]=Math[x(403)](o)*e,A[t+1]=0,A[t+2]=Math[x(347)](o)*e;const r=Math[x(392)]()**I.randomnessPower*(Math[x(392)]()<.5?-1:1),s=Math[x(392)]()**I.randomnessPower*(Math[x(392)]()<.5?-1:1),a=Math[x(392)]()**I.randomnessPower*(Math[x(392)]()<.5?-1:1);O[t]=r,O[t+1]=s,O[t+2]=a;const i=T.clone();i[x(398)](j,e/I[x(400)]),S[t+0]=i.r,S[t+1]=i.g,S[t+2]=i.b,F[n]=Math[x(392)]()}const k={transparent:!0,depthWrite:!1,blending:r,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:I.size}}};const R=d(null),{onLoop:Z}=a();Z((({elapsed:n})=>{const t=x;R[t(365)]&&(R[t(365)].material[t(363)][t(406)][t(365)]=n)}));const{count:K,size:H,radius:L,branches:q,spin:E,randomness:G,randomnessPower:B,insideColor:N,outsideColor:X}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(359),outsideColor:x(356)});return f([K[x(365)],H[x(365)],L[x(365)],q[x(365)],E[x(365)],G[x(365)],B[x(365)],N[x(365)],X.value],(n=>{const t=x;n[t(355)](((n,e)=>{const o=t;I[Object[o(404)](I)[e]]=n[o(365)]})),function(){const n=x;if(R[n(365)]){const t=new o(I[n(379)]),e=new o(I.outsideColor),r=new Float32Array(3*I[n(382)]),a=new Float32Array(3*I[n(382)]),i=new Float32Array(I[n(382)]),c=new Float32Array(3*I[n(382)]);for(let o=0;o<I[n(382)];o++){const s=3*o,u=Math[n(392)]()*I[n(400)],l=o%I.branches*Math.PI*2/I[n(405)];r[s]=Math[n(403)](l)*u,r[s+1]=0,r[s+2]=Math[n(347)](l)*u;const d=Math.random()**I[n(366)]*(Math[n(392)]()<.5?-1:1),f=Math[n(392)]()**I.randomnessPower*(Math[n(392)]()<.5?-1:1),p=Math[n(392)]()**I[n(366)]*(Math.random()<.5?-1:1);c[s]=d,c[s+1]=f,c[s+2]=p;const m=t.clone();m[n(398)](e,u/I.radius),a[s+0]=m.r,a[s+1]=m.g,a[s+2]=m.b,i[o]=Math[n(392)]()}R.value.geometry[n(378)](n(353),new s(r,3)),R[n(365)][n(367)].setAttribute("aRandomness",new s(c,3)),R[n(365)][n(367)].setAttribute(n(360),new s(a,3)),R[n(365)][n(367)].setAttribute(n(349),new s(i,1))}}()})),(n,t)=>{const e=x,o=p(e(397));return m(),h(b,null,[v(w(c)),v(o,y(M(z)),{default:g((()=>[t[0]||(t[0]=P(e(387),{position:[3,3,3]},null,-1)),P("TresPoints",{ref_key:e(361),ref:R},[P(e(395),{position:[w(A),3],"a-scale":[w(F),1],color:[w(S),3],"a-randomness":[w(O),3]},null,8,_),P("TresShaderMaterial",y(M(k)),null,16)],512),v(w(u))])),_:1},16)],64)}}});function A(n){function t(n){const e=I;if(typeof n===e(372))return function(n){}.constructor(e(350))[e(383)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(e(376)+e(374))[e(357)](e(358)):function(){return!1}.constructor(e(376)+e(374))[e(383)](e(386)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
