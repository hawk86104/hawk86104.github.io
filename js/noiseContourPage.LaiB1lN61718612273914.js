import{a as n,r as e,N as t,d as r}from"./@tresjs.W42D3qe_1718612273914.js";import{W as o,j as i,c5 as s,bX as a,bV as u,Z as c,l as f,aU as l}from"./three.HHcT7YAr1718612273914.js";import{d as p,a3 as v,a2 as m,o as d,D as h,J as g,u as y,F as w,e as x,f as D,g as b,j as I,al as S,m as R}from"./@vue.CpOXM7bB1718612273914.js";import"./@vueuse.YjRg4c7n1718612273914.js";import"./tweakpane.qqn77PB81718612273914.js";function E(){const n=["bind","tShadow","return (function() ","innerWidth","12andZiC","function *\\( *\\)","side","apply","innerHeight","52443zcUApy","toString","iTime","length","gger","material","2868378NzAZxJ","renderToScreen","table","console","TresMesh","rotation-x","#ffffff","extensions","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","1bvfUyp","trace","uniforms","call","log","init","29641601RCfUec","2008294sKgkjs","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","940IDVXIp","string","value","12ObEfVb","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMeshPhongMaterial","constructor","addPass","render","1466288wNgOnW","debu","width","159915aatWqy","279664UkjNHB","TresSphereGeometry","70JlmgxI","counter","test","exception"];return(E=function(){return n})()}const _=C;function C(n,e){const t=E();return(C=function(n,e){return t[n-=411]})(n,e)}!function(n,e){const t=C,r=E();for(;;)try{if(532308===parseInt(t(414))/1*(-parseInt(t(421))/2)+-parseInt(t(457))/3+-parseInt(t(436))/4*(parseInt(t(438))/5)+parseInt(t(426))/6*(parseInt(t(435))/7)+parseInt(t(432))/8+-parseInt(t(451))/9*(-parseInt(t(423))/10)+parseInt(t(420))/11*(parseInt(t(446))/12))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const N=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[C(449)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){N(this,(function(){const n=C,e=new RegExp(n(447)),t=new RegExp(n(427),"i"),r=B(n(419));e[n(440)](r+"chain")&&t[n(440)](r+"input")?B():r("0")}))()}();const U=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();U(void 0,(function(){const n=C;let e;try{e=Function(n(444)+'{}.constructor("return this")( ));')()}catch(o){e=window}const t=e[n(460)]=e.console||{},r=[n(418),"warn","info","error",n(441),n(459),n(415)];for(let i=0;i<r[n(454)];i++){const e=U[n(429)].prototype[n(442)](U),o=r[i],s=t[o]||e;e.__proto__=U.bind(U),e[n(452)]=s[n(452)].bind(s),t[o]=e}}))();const P=[_(448),_(462)],j=[g("TresBoxGeometry",{args:[400,400,400]},null,-1),g(_(428),{color:_(411),shininess:0},null,-1)],T=[_(448)],k=[g(_(437),{args:[50,32,32]},null,-1),g(_(428),{color:_(411),shininess:0},null,-1)],z=_(422),A=_(413),M=p({__name:"noiseContour",async setup(r){const p=_;let x,D;const{camera:b,renderer:I,scene:S,sizes:R}=n(),E=([x,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),x=await x,D(),x),{onLoop:C,onAfterLoop:N}=e(),U=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),M=new i(window[p(445)],window[p(450)]);let B=null;const F=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:M}},vertexShader:z,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),Z=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:E}},vertexShader:z,fragmentShader:A});return Z[p(458)]=!0,Z[p(456)][p(412)].derivatives=!0,m((()=>{const n=p;R[n(434)][n(425)]&&(B=new a(I[n(425)]),B[n(430)](new u(S[n(425)],b[n(425)])),B[n(430)](F),B.addPass(Z))})),C((({elapsed:n})=>{const e=p;I.value[e(431)](S[e(425)],b[e(425)],U),F.uniforms[e(443)].value=U.texture,Z[e(416)][e(453)][e(425)]=n})),N((()=>{B&&B[p(431)]()})),(n,e)=>{const t=p;return d(),h(w,null,[g(t(461),{ref:"noiseContourMeshRef2",side:y(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},j,8,P),g(t(461),{ref:"noiseContourMeshRef1",side:y(c),position:[0,150,0],"cast-shadow":""},k,8,T)],64)}}});function B(n){function e(n){const t=C;if(typeof n===t(424))return function(n){}[t(429)]("while (true) {}")[t(449)](t(439));1!==(""+n/n).length||n%20==0?function(){return!0}[t(429)](t(433)+t(455))[t(417)]("action"):function(){return!1}[t(429)](t(433)+t(455)).apply("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const F=W;function Z(){const n=["17720527yIUzNK","return (function() ","while (true) {}","constructor","perspectiveCameraRef","bind","#ffffff","110ASwVMh","75901zmhlne","5378136SUObUP","978KwVTAa","1044970qZCBHF","prototype","counter","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","3014znHQXc","gger","#000000","2636LGsfhc","TresDirectionalLight","call","console","stateObject","6407280MHaWDB","error","toString","noiseContourPage","action","test","TresPerspectiveCamera","apply","TresCanvas","6955NWPkGj","63jEXBTn","input","function *\\( *\\)","TresAmbientLight"];return(Z=function(){return n})()}!function(n,e){const t=W,r=Z();for(;;)try{if(936156===-parseInt(t(431))/1*(parseInt(t(460))/2)+parseInt(t(425))/3+parseInt(t(434))/4*(-parseInt(t(448))/5)+parseInt(t(426))/6*(parseInt(t(424))/7)+parseInt(t(439))/8+parseInt(t(449))/9*(-parseInt(t(427))/10)+-parseInt(t(453))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[W(446)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){L(this,(function(){const n=W,e=new RegExp(n(451)),t=new RegExp(n(430),"i"),r=$("init");e[n(444)](r+"chain")&&t[n(444)](r+n(450))?$():r("0")}))()}();const V=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function W(n,e){const t=Z();return(W=function(n,e){return t[n-=424]})(n,e)}V(void 0,(function(){const n=W;let e;try{e=Function(n(454)+'{}.constructor("return this")( ));')()}catch(o){e=window}const t=e[n(437)]=e[n(437)]||{},r=["log","warn","info",n(440),"exception","table","trace"];for(let i=0;i<r.length;i++){const e=V[n(456)][n(428)].bind(V),o=r[i],s=t[o]||e;e.__proto__=V[n(458)](V),e[n(441)]=s[n(441)][n(458)](s),t[o]=e}}))();const G={ref:F(457),position:[600,750,-1221],fov:45,near:1,far:1e4},H=g(F(452),{color:F(459)},null,-1),O=g(F(435),{position:[400,400,400],intensity:1,color:"red"},null,-1),X=p({__name:F(442),setup(n){const e=F,t={clearColor:e(433),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=x(i(447));return d(),D(s,R(t,{"window-size":""}),{default:b((()=>[g(i(445),G,null,512),I(y(r)),H,O,(d(),D(S,null,{default:b((()=>[I(M)])),_:1}))])),_:1},16)}}});function $(n){function e(n){const t=W;if("string"==typeof n)return function(n){}[t(456)](t(455))[t(446)](t(429));1!==(""+n/n).length||n%20==0?function(){return!0}[t(456)]("debu"+t(432))[t(436)](t(443)):function(){return!1}[t(456)]("debu"+t(432))[t(446)](t(438)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{X as default};
