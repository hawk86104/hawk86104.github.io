import{_ as t,C as n,as as e,V as o,T as r,ai as a}from"./three.-W-Avfc61734492426993.js";import{e as i,b as s,U as c,c as l}from"./@tresjs.WiFlZbqU1734492426993.js";import"./index.se5nwBOY1734492426993.js";import{a as u}from"./simplex-noise.Yx8GBgKo1734492426993.js";import{C as f}from"./index.GoKrQvrO1734492426993.js";import{d as p,a6 as h,o as m,D as v,J as d,u as g,r as x,f as w,g as y,j as b,aj as _,ak as j,al as M}from"./@vue.-THQH3GC1734492426993.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.WImPY8An1734492426993.js";import"./@vueuse.HnQgsJ961734492426993.js";import"./lamina._UKnrDqV1734492426993.js";import"./glsl-tokenizer.VHjCBirb1734492426993.js";import"./@amap.VVwFehhA1734492426993.js";import"./glsl-token-descope.DhgGiA441734492426993.js";import"./glsl-token-depth.tjyOk1rm1734492426993.js";import"./glsl-token-scope.o3SobK1x1734492426993.js";import"./glsl-token-properties.rH3MMX_-1734492426993.js";import"./glsl-token-assignments.-g3ZCyQG1734492426993.js";import"./glsl-token-string.L2qq6Bo81734492426993.js";import"./glsl-token-functions.ug7lTLej1734492426993.js";import"./object-hash.jUbfcDFp1734492426993.js";import"./jszip.h2xC22IC1734492426993.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.NqlUvpY21734492426993.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.Yj0oKlwA1734492426993.js";import"./three-stdlib.JXmeYOx_1734492426993.js";import"./@pmndrs.2S_aDSAC1734492426993.js";import"./utils.quAuh8dZ1734492426993.js";const A=T;!function(t,n){const e=T,o=D();for(;;)try{if(447299===-parseInt(e(479))/1+parseInt(e(461))/2+-parseInt(e(471))/3*(parseInt(e(483))/4)+-parseInt(e(517))/5+parseInt(e(495))/6*(-parseInt(e(484))/7)+parseInt(e(528))/8+parseInt(e(520))/9*(parseInt(e(506))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){I(this,(function(){const t=T,n=new RegExp(t(525)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=O(t(526));n.test(o+t(457))&&e.test(o+t(489))?O():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[T(511)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();C(void 0,(function(){const t=T,n=function(){const t=T;let n;try{n=Function("return (function() "+t(477)+");")()}catch(e){n=window}return n}(),e=n[t(456)]=n.console||{},o=["log",t(455),t(492),"error",t(463),t(494),t(527)];for(let r=0;r<o[t(504)];r++){const n=C[t(518)][t(470)][t(465)](C),a=o[r],i=e[a]||n;n[t(485)]=C[t(465)](C),n[t(486)]=i[t(486)].bind(i),e[a]=n}}))();const k=[A(516)],R=[A(460),"attributes-position",A(522),A(507),A(510),A(468),A(509),"attributes-halfRootAngleCos"],S=[A(521)],F=[A(519)];function D(){const t=["357796uvJCIF","1981fXfOXZ","__proto__","toString","PlaneGeometry","DoubleSide","input","InstancedBufferAttribute","needsUpdate","info","array","table","16146MGkNma","TresGroup","Vector4","TresInstancedBufferGeometry","orientationsF32","grass","action","instances","translate","length","width","22282910ZeLVMX","attributes-offset","stretchesF32","attributes-halfRootAngleSin","attributes-orientation","apply","random","halfRootAngleCosF32","counter","gger","material","2120235zokbVh","constructor","side","9IipDSo","geometry","attributes-uv","while (true) {}","debu","function *\\( *\\)","init","trace","2644640ZVUtVZ","set","warn","console","chain","map","string","index","210708xywjHq","alphaMap","exception","cos","bind","attributes","push","attributes-stretch","#000f00","prototype","15BjAkWJ","joints","Color","sin","TresMesh","Vector3",'{}.constructor("return this")( )',"value","584081xYpTUy","normalize","position","convertSRGBToLinear"];return(D=function(){return t})()}function T(t,n){const e=D();return(T=function(t,n){return e[t-=454]})(t,n)}const E=p({__name:A(500),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),w=a,y=u(Math[c(512)]);function b(n,e){const o=c,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(497)])(r,a,i,s)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const j=function(n,a){const i=c,s=[],l=[],u=[],f=[],p=[];let h=new e,m=new(t[i(497)]);const v=-.25;for(let e=0;e<n;e++){const r=Math.random()*a-a/2,c=Math[i(512)]()*a-a/2,d=_(r,c);s[i(467)](r,d,c);let g=Math.PI-Math.random()*(2*Math.PI);f[i(467)](Math.sin(.5*g)),p[i(467)](Math[i(464)](.5*g));let x=new o(0,1,0),w=x.x*Math[i(474)](g/2),y=x.y*Math[i(474)](g/2),j=x.z*Math[i(474)](g/2),M=Math.cos(g/2);h[i(454)](w,y,j,M)[i(480)](),g=.5*Math[i(512)]()+v,x=new(t[i(476)])(1,0,0),w=x.x*Math.sin(g/2),y=x.y*Math[i(474)](g/2),j=x.z*Math[i(474)](g/2),M=Math.cos(g/2),m.set(w,y,j,M)[i(480)](),h=b(h,m),g=.5*Math.random()+v,x=new o(0,0,1),w=x.x*Math[i(474)](g/2),y=x.y*Math[i(474)](g/2),j=x.z*Math.sin(g/2),M=Math.cos(g/2),m[i(454)](w,y,j,M)[i(480)](),h=b(h,m),l[i(467)](h.x,h.y,h.z,h.w),e<n/3?u[i(467)](1.8*Math[i(512)]()):u[i(467)](Math[i(512)]())}return{offsetsF32:new r(new Float32Array(s),3),orientationsF32:new(t[i(490)])(new Float32Array(l),4),stretchesF32:new(t[i(490)])(new Float32Array(u),1),halfRootAngleCosF32:new(t[i(490)])(new Float32Array(p),1),halfRootAngleSinF32:new(t[i(490)])(new Float32Array(f),1)}}(w[c(502)],w.width),M=new(t[c(487)])(w.bW,w.bH,1,w[c(472)])[c(503)](0,w.bH/2,0),z=new(t[c(487)])(w.width,w[c(505)],32,32);z.lookAt(new(t[c(476)])(0,1,0));const I=z[c(466)][c(481)];for(let t=0;t<I[c(493)][c(504)];t+=3)I[c(493)][t+1]=_(I[c(493)][t],I[c(493)][t+2]);z[c(466)][c(481)][c(491)]=!0,z.computeVertexNormals();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new n(.3,.9,0)[c(482)](),bottomColor:new(t[c(473)])(0,.2,0).convertSRGBToLinear()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=c;n[e(519)]=t[e(488)]})));C[c(458)]=x[c(458)],C[c(462)]=x[c(462)],C.toneMapped=!1;const{onLoop:D}=i();return D((({elapsed:t})=>{const n=c;C.uniforms.time[n(478)]=t/4})),(n,e)=>{const o=c;return m(),v(o(496),null,[d(o(475),{material:g(C)},[d(o(498),{index:g(M)[o(460)],"attributes-position":g(M)[o(466)][o(481)],"attributes-uv":g(M)[o(466)].uv,"attributes-offset":g(j).offsetsF32,"attributes-orientation":g(j)[o(499)],"attributes-stretch":g(j)[o(508)],"attributes-halfRootAngleSin":g(j).halfRootAngleSinF32,"attributes-halfRootAngleCos":g(j)[o(513)]},null,8,R)],8,k),d(o(475),{position:[0,0,0],geometry:g(z)},[d("TresMeshStandardMaterial",{color:o(469),side:t[o(488)]},null,8,F)],8,S)])}}});function O(t){function n(t){const e=T;if(typeof t===e(459))return function(t){}[e(518)](e(523))[e(511)](e(514));1!==(""+t/t)[e(504)]||t%20==0?function(){return!0}[e(518)](e(524)+e(515)).call(e(501)):function(){return!1}.constructor(e(524)+e(515)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const B=P;!function(t,n){const e=P,o=H();for(;;)try{if(830301===parseInt(e(495))/1+parseInt(e(500))/2*(-parseInt(e(494))/3)+parseInt(e(524))/4+-parseInt(e(499))/5*(parseInt(e(497))/6)+parseInt(e(508))/7+parseInt(e(505))/8*(-parseInt(e(514))/9)+parseInt(e(525))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const G=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function H(){const t=["function *\\( *\\)","2811ruoAqA","442615JUbFJT","console","66VgKrxc","debu","38055BRqsEw","2678sAGOsl","gger","init","error","grass","4240432JjoGHM","length","chain","2772245ajrGpI","return (function() ","TresPerspectiveCamera","exception","bind","action","18rIPAcx","test","string","apply","log","while (true) {}",'{}.constructor("return this")( )',"warn","constructor","table","259768ExvCGs","23251810ZOfiRI","toString","call"];return(H=function(){return t})()}!function(){G(this,(function(){const t=P,n=new RegExp(t(528)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=U(t(502));n[t(515)](o+t(507))&&e[t(515)](o+"input")?U():o("0")}))()}();const L=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[P(517)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function P(t,n){const e=H();return(P=function(t,n){return e[t-=494]})(t,n)}L(void 0,(function(){const t=P;let n;try{n=Function(t(509)+t(520)+");")()}catch(r){n=window}const e=n[t(496)]=n[t(496)]||{},o=[t(518),t(521),"info",t(503),t(511),t(523),"trace"];for(let a=0;a<o.length;a++){const n=L[t(522)].prototype[t(512)](L),r=o[a],i=e[r]||n;n.__proto__=L.bind(L),n[t(526)]=i[t(526)][t(512)](i),e[r]=n}}))();const V=p({__name:B(504),setup(t){const n=x({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=P;return m(),w(g(l),_(j(n)),{default:y((()=>[o[0]||(o[0]=d(r(510),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),b(g(c),_(j(e)),null,16),(m(),w(M,null,{default:y((()=>[b(E)])),_:1})),(m(),w(M,null,{default:y((()=>[b(g(z),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16)}}});function U(t){function n(t){const e=P;if(typeof t===e(516))return function(t){}[e(522)](e(519)).apply("counter");1!==(""+t/t)[e(506)]||t%20==0?function(){return!0}[e(522)](e(498)+e(501))[e(527)](e(513)):function(){return!1}[e(522)]("debugger")[e(517)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{V as default};
