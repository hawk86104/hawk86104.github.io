import{m as n,e as t,o as e}from"./@tresjs.8SAr0PX_1741857949183.js";import{_ as r,b as o,d2 as a,bq as i,m as c}from"./three.Gi_-4zeu1741857949183.js";import{P as l}from"./tweakpane.yDiyAAkA1741857949183.js";import{d as u,b as s,r as p,w as m,q as f,o as v,H as _,N as d,u as g,e as h,z as x,j as y,g as b,aj as S,ak as w,f as z,al as j,m as k,F as D}from"./@vue.NRI7TcgI1741857949183.js";import{_ as I}from"./@fesjs._GqZBaJ41741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";import"./vue-router.vV-TPEpQ1741857949183.js";import"./lodash-es.pklfUAS51741857949183.js";import"./@qlin.yHhFDldE1741857949183.js";import"./pinia.m-1lhBPB1741857949183.js";import"./@floating-ui.BPbuo5Gx1741857949183.js";import"./@juggle.7yjBMqoW1741857949183.js";const V=M;!function(n,t){const e=M,r=F();for(;;)try{if(878451===-parseInt(e(478))/1*(-parseInt(e(467))/2)+parseInt(e(527))/3+-parseInt(e(513))/4+-parseInt(e(498))/5*(-parseInt(e(518))/6)+parseInt(e(487))/7+-parseInt(e(490))/8+parseInt(e(521))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const O=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[M(481)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){O(this,(function(){const n=M,t=new RegExp(n(500)),e=new RegExp(n(469),"i"),r=C("init");t.test(r+n(476))&&e[n(488)](r+n(471))?C():r("0")}))()}();const P=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[M(481)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function M(n,t){const e=F();return(M=function(n,t){return e[n-=462]})(n,t)}P(void 0,(function(){const n=M;let t;try{t=Function(n(485)+'{}.constructor("return this")( ));')()}catch(o){t=window}const e=t.console=t[n(483)]||{},r=[n(477),n(468),n(473),n(474),n(491),n(505),"trace"];for(let a=0;a<r[n(514)];a++){const t=P.constructor[n(462)].bind(P),o=r[a],i=e[o]||t;t.__proto__=P.bind(P),t.toString=i[n(501)][n(480)](i),e[o]=t}}))();const L=["rotation-x"],R=[V(519),V(515),V(463)];function F(){const n=["LinearFilter","gger","u_time","2053455BWuPfQ","call","function *\\( *\\)","toString","value","Cross Section Settings","Display Settings","table","u_isoValue","TresMesh","getElapsedTime","addFolder","TresShaderMaterial","meshRef","u_alphaVal","6402652TUiIhN","length","vertexShader","then","alphaVal","6OmxHlt","uniforms","constructor","14406966OgrLct","u_color","format","action","while (true) {}","minFilter","1190343ffFkQX","prototype","fragmentShader","stateObject","RepeatWrapping","basicVolumeRendering","92712nBLUWP","warn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","wrapT","input","Vector3","info","error","addBinding","chain","log","32OFwKQz","isoValue","bind","apply","Error fetching volume data:","console","Clock","return (function() ","u_volume","961345yHdAGN","test","debu","12398872mseicX","exception","u_dt","start","string"];return(F=function(){return n})()}const A=41,T=u({__name:V(466),setup(e){var u;const h=V,x=window.innerWidth,y=window.innerHeight,b=s(null),S=s(null),w=new(r[h(484)]);w[h(493)]();const z=(new l)[h(509)]({title:h(504)}),j=z[h(509)]({title:h(503)}),k=new o(.5,.5,.5);j[h(475)](k,"x",{label:"X",min:.02,max:.5,step:.02}),j[h(475)](k,"y",{label:"Y",min:.02,max:.5,step:.02}),j.addBinding(k,"z",{label:"Z",min:.02,max:.5,step:.02}),j.expanded=!0;const{camera:D}=n(),I=p({u_camera:{value:null==(u=D.value)?void 0:u.position},u_resolution:{value:new(r[h(472)])(x,y,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:k},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),O=z[h(509)]({title:"Algorithm Settings"});O[h(475)](I[h(492)],h(502),{label:"dt",min:4e-4,max:.016,step:2e-4}),O[h(475)](I[h(522)],h(502),{label:"color",min:1,max:3,step:1}),O.addBinding(I[h(512)],h(502),{label:h(517),min:.01,max:1,step:.01}),O[h(475)](I[h(506)],h(502),{label:h(479),min:0,max:1,step:.04}),m(S,(n=>{const t=h;if(n){const e=new a(n,A,A,A);e[t(523)]=i,e[t(526)]=r[t(495)],e.magFilter=c,e[t(470)]=r[t(465)],e.needsUpdate=!0,I[t(486)][t(502)]=e}}));const{onLoop:P}=t();return P((()=>{const n=h;I[n(497)][n(502)]=w[n(508)]()})),f((()=>{(()=>{const n=M;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw")[n(516)]((n=>n.arrayBuffer())).then((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r[e(514)];n++)o[n]=r[n];S[e(502)]=o})).catch((t=>{const e=n;console.error(e(482),t)}))})()})),(n,t)=>{const e=h;return v(),_(e(507),{ref_key:e(511),ref:b,"rotation-x":Math.PI/-2},[t[0]||(t[0]=d("TresSphereGeometry",{args:[1,16,16]},null,-1)),d(e(510),{uniforms:I,vertexShader:g("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:g("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,R)],8,L)}}});function C(n){function t(n){const e=M;if(typeof n===e(494))return function(n){}[e(520)](e(525))[e(481)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(520)]("debu"+e(496))[e(499)](e(524)):function(){return!1}[e(520)](e(489)+e(496)).apply(e(464)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const W=U;function B(){const n=["stateObject","action","constructor","__proto__","debu","TresPerspectiveCamera","exception","bind","316622PhMuRX","info","apply","call","trace","toString","warn","test","TresAmbientLight","_blank","gger","init","input","length","return (function() ",'{}.constructor("return this")( )',"TresCanvas","35rwmtDn","622911JJUqoh","3021102EyDltV","basicVolume","div","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","log","chain","1871812ODYfyO","7447125uqhJpL","prototype","2779872rjAXJp","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","1839640WaiBPL","#201919","counter"];return(B=function(){return n})()}!function(n,t){const e=U,r=B();for(;;)try{if(976865===-parseInt(e(235))/1+parseInt(e(222))/2+parseInt(e(212))/3+-parseInt(e(219))/4+-parseInt(e(220))/5+parseInt(e(213))/6+-parseInt(e(211))/7*(-parseInt(e(224))/8))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const E=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[U(237)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function U(n,t){const e=B();return(U=function(n,t){return e[n-=206]})(n,t)}!function(){E(this,(function(){const n=U,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(216),"i"),r=q(n(246));t[n(242)](r+n(218))&&e.test(r+n(206))?q():r("0")}))()}();const Z=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[U(237)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();Z(void 0,(function(){const n=U;let t;try{t=Function(n(208)+n(209)+");")()}catch(o){t=window}const e=t.console=t.console||{},r=[n(217),n(241),"info","error",n(233),"table",n(239)];for(let a=0;a<r[n(207)];a++){const t=Z[n(229)][n(221)][n(234)](Z),o=r[a],i=e[o]||t;t[n(230)]=Z.bind(Z),t[n(240)]=i[n(240)].bind(i),e[o]=t}}))();function q(n){function t(n){const e=U;if("string"==typeof n)return function(n){}[e(229)]("while (true) {}")[e(237)](e(226));1!==(""+n/n)[e(207)]||n%20==0?function(){return!0}[e(229)](e(231)+e(245))[e(238)](e(228)):function(){return!1}.constructor(e(231)+e(245))[e(237)](e(227)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const H=I(u({__name:W(214),setup(n){const t=p({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=p({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=U,i=h(a(210));return v(),_(D,null,[o[3]||(o[3]=d(a(215),{class:a(236)},[d("a",{href:a(223),target:a(244)}," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw "),d("br"),x(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),y(i,k({clearColor:a(225)},t),{default:b((()=>[o[0]||(o[0]=d(a(232),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=d(a(243),{intensity:2},null,-1)),y(g(e),S(w(r)),null,16),(v(),z(j,null,{default:b((()=>[y(T,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=d("TresGridHelper",{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{H as default};
