import{a6 as e,x as n}from"./three.VTQVqxMx1725416517797.js";import{$ as t,d as a,N as o}from"./@tresjs.5lh7VmqZ1725416517797.js";import{P as r}from"./tweakpane.yHWGBmom1725416517797.js";import{d as i,a5 as l,Y as s,e as u,o as c,f as v,g as f,j as p,u as m,L as d,m as h,aj as g,ak as x}from"./@vue._6MD2XyK1725416517797.js";import"./@vueuse.L-salR9N1725416517797.js";const y=P;!function(e,n){const t=P,a=w();for(;;)try{if(812761===-parseInt(t(488))/1+-parseInt(t(524))/2+-parseInt(t(483))/3*(-parseInt(t(521))/4)+parseInt(t(534))/5*(-parseInt(t(540))/6)+-parseInt(t(527))/7+parseInt(t(516))/8*(parseInt(t(514))/9)+parseInt(t(508))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[P(525)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(){const e=["exception","pointSize","change","6535605XBtiDt","TresIcosahedronGeometry","trace","TresMeshBasicMaterial","error","warn","6QdKTqs","海浪变化速度","gger","TresCanvas","color","451254YLFykR","value","__proto__","#080820","wireframeMaterialRef","95095dUjrvO","test","set","groupRef","uniforms","call","input","uWaveHeight","table","console","#17c5a9","addBinding","size","return (function() ","海浪高度","TresHemisphereLight","rotation","uWaveSpeed","#122148","info","41182640dlFKtB","chain","bind","pointsEarth","init","TresShaderMaterial","24183OcAKFk","stateObject","256WVvJdF","string","toString","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","SRGBColorSpace","8wHKwTb","debu","length","2887246FWGhse","apply","prototype","5925388NSAiIs","constructor","while (true) {}","TresMesh"];return(w=function(){return e})()}!function(){T(this,(function(){const e=P,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(519),"i"),a=D(e(512));n[e(489)](a+e(509))&&t[e(489)](a+e(494))?D():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[P(525)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();S(void 0,(function(){const e=P;let n;try{n=Function(e(501)+'{}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(497)]=n[e(497)]||{},a=["log",e(539),e(507),e(538),e(531),e(496),e(536)];for(let r=0;r<a[e(523)];r++){const n=S[e(528)][e(526)][e(510)](S),o=a[r],i=t[o]||n;n[e(485)]=S[e(510)](S),n[e(518)]=i[e(518)][e(510)](i),t[o]=n}}))();const b=d("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=d(y(535),{args:[1,4]},null,-1),z=d(y(535),{args:[1,128]},null,-1),j=d(y(503),{args:["#ffffff",y(486),3]},null,-1),E=i({__name:y(511),async setup(i){const T=y;let w,S;const E={color:T(498),pointSize:4},P={clearColor:T(506),shadows:!1,alpha:!1,outputColorSpace:e[T(520)]},D={color:E[T(482)],wireframe:!0,transparent:!0,opacity:.2},k=([w,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,S(),w),A=k[0],I=k[1],C=k[2],F=k[3],W=k[4],U={uniforms:{size:{type:"f",value:E[T(532)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:C},elevTexture:{type:"t",value:F},alphaTexture:{type:"t",value:W},earthTexture:{type:"t",value:A},starTexture:{type:"t",value:I}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},H=s(),L=s(),M=(new r).addFolder({title:"Debug"});M[T(499)](E,T(482),{type:"color"}).on(T(533),(({value:e})=>{const n=T;L[n(484)][n(482)][n(490)](e)})),M[T(499)](U[T(492)][T(500)],T(484),{min:.1,max:10,step:.1,label:"粒子大小"}),M[T(499)](U[T(492)][T(495)],T(484),{min:.01,max:.5,step:.01,label:T(502)}),M[T(499)](U[T(492)][T(505)],T(484),{min:.01,max:1,step:.01,label:T(541)});const{onLoop:R}=t();return R((({delta:e})=>{const n=T;H[n(484)]&&(H[n(484)][n(504)].y+=.002,U[n(492)].uTime[n(484)]+=10*e)})),(e,n)=>{const t=T,o=u(t(543));return c(),v(o,h(P,{"window-size":""}),{default:f((()=>[b,p(m(a),{autoRotate:!0,autoRotateSpeed:2}),d("TresGroup",{ref_key:t(491),ref:H},[d(t(530),null,[_,d(t(537),h({ref_key:t(487),ref:L},D),null,16)]),d("TresPoints",null,[z,d(t(513),g(x(U)),null,16)])],512),j])),_:1},16)}}});function P(e,n){const t=w();return(P=function(e,n){return t[e-=482]})(e,n)}function D(e){function n(e){const t=P;if(typeof e===t(517))return function(e){}.constructor(t(529))[t(525)]("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(528)](t(522)+t(542))[t(493)]("action"):function(){return!1}.constructor("debu"+t(542))[t(525)](t(515)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
