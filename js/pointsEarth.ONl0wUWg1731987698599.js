import{_ as e,ak as n}from"./three.3RwiW87x1731987698599.js";import{e as t,U as a,b as o}from"./@tresjs.juy9qkLz1731987698599.js";import{P as r}from"./tweakpane.yHWGBmom1731987698599.js";import{d as i,a6 as l,X as s,e as u,o as c,f as p,g as f,J as v,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.-THQH3GC1731987698599.js";import"./@vueuse.R8VPJfVr1731987698599.js";const y=b;!function(e,n){const t=b,a=z();for(;;)try{if(344444===parseInt(t(525))/1+-parseInt(t(495))/2*(-parseInt(t(497))/3)+-parseInt(t(547))/4+-parseInt(t(529))/5*(parseInt(t(496))/6)+parseInt(t(522))/7+parseInt(t(530))/8+-parseInt(t(523))/9*(parseInt(t(492))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){w(this,(function(){const e=b,n=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),a=_(e(549));n[e(532)](a+e(539))&&t.test(a+e(535))?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(556)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function b(e,n){const t=z();return(b=function(e,n){return t[e-=492]})(e,n)}function z(){const e=["call","color","input","set","粒子大小","addFolder","chain","toString","uWaveHeight","change","TresGroup","exception","prototype","Debug","45072wINdUe","gger","init","stateObject","console","debu","log","TresHemisphereLight","groupRef","apply","10BwODBM","table","action","2862uIRqLn","1882578ogtvww","984LfzXTK","pointSize","uTime","#ffffff","rotation","trace","return (function() ","addBinding","pointsEarth","length","uniforms","TresMeshBasicMaterial","TresIcosahedronGeometry","TresPerspectiveCamera","counter","#080820","TresMesh","value","warn","size","wireframeMaterialRef","bind","constructor","info","string","563451pzpUwr","1505358spJizX","TresPoints","127589xzmiPb","海浪高度","__proto__","FrontSide","5FpwaBy","1274296DyhzEV",'{}.constructor("return this")( )',"test"];return(z=function(){return e})()}T(void 0,(function(){const e=b,n=function(){const e=b;let n;try{n=Function(e(503)+e(531)+");")()}catch(t){n=window}return n}(),t=n[e(551)]=n.console||{},a=[e(553),e(515),e(520),"error",e(544),e(493),e(502)];for(let o=0;o<a[e(506)];o++){const n=T[e(519)][e(545)][e(518)](T),r=a[o],i=t[r]||n;n[e(527)]=T[e(518)](T),n[e(540)]=i.toString.bind(i),t[r]=n}}))();const S=i({__name:y(505),async setup(i){const w=y;let T,b;const z={color:"#17c5a9",pointSize:4},S={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:n},_={color:z[w(534)],wireframe:!0,transparent:!0,opacity:.2},j=([T,b]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,b(),T),E=j[0],P=j[1],D=j[2],I=j[3],k=j[4],U={uniforms:{size:{type:"f",value:z[w(498)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[w(528)]},A=s(),B=s(),C=(new r)[w(538)]({title:w(546)});C.addBinding(z,w(534),{type:w(534)}).on(w(542),(({value:e})=>{const n=w;B[n(514)][n(534)][n(536)](e)})),C[w(504)](U[w(507)][w(516)],"value",{min:.1,max:10,step:.1,label:w(537)}),C.addBinding(U[w(507)][w(541)],w(514),{min:.01,max:.5,step:.01,label:w(526)}),C[w(504)](U[w(507)].uWaveSpeed,w(514),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:M}=t();return M((({delta:e})=>{const n=w;A[n(514)]&&(A.value[n(501)].y+=.002,U.uniforms[n(499)][n(514)]+=10*e)})),(e,n)=>{const t=w,o=u("TresCanvas");return c(),p(o,h(S,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v(t(510),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),v(t(543),{ref_key:t(555),ref:A},[v(t(513),null,[n[0]||(n[0]=v(t(509),{args:[1,4]},null,-1)),v(t(508),h({ref_key:t(517),ref:B},_),null,16)]),v(t(524),null,[n[1]||(n[1]=v("TresIcosahedronGeometry",{args:[1,128]},null,-1)),v("TresShaderMaterial",g(x(U)),null,16)])],512),n[3]||(n[3]=v(t(554),{args:[t(500),t(512),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=b;if(typeof e===t(521))return function(e){}.constructor("while (true) {}")[t(556)](t(511));1!==(""+e/e)[t(506)]||e%20==0?function(){return!0}[t(519)]("debugger")[t(533)](t(494)):function(){return!1}[t(519)](t(552)+t(548))[t(556)](t(550)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{S as default};
