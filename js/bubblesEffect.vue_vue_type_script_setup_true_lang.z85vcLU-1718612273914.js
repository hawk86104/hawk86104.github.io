import{a5 as n,bU as t,C as e,aA as o}from"./three.HHcT7YAr1718612273914.js";import{a as i,r,N as a}from"./@tresjs.W42D3qe_1718612273914.js";import{d as l,b as s,a3 as u,a2 as c,o as f,D as p,J as m,aj as g,ak as b,u as v}from"./@vue.CpOXM7bB1718612273914.js";const d=z;!function(n,t){const e=z,o=h();for(;;)try{if(658450===-parseInt(e(284))/1+-parseInt(e(305))/2*(-parseInt(e(313))/3)+-parseInt(e(319))/4*(parseInt(e(286))/5)+-parseInt(e(282))/6+-parseInt(e(323))/7+-parseInt(e(291))/8*(parseInt(e(295))/9)+parseInt(e(301))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const y=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function h(){const n=["TresBufferGeometry","3209322Fqkmlg","gger","1237429tQIkQb","Color","1089905rtTwQj","trace","while (true) {}","length","Mesh","8lezwnD","value","input","xRayEffect","5967126xtmWIE","bind","apply","glowColor","AdditiveBlending","debu","23981620ZExZhS","opacity","uniforms","traverse","10WvUWdy","error","__proto__","map","geometry","position","#84ccff","dispose","677949dRohVN","TresShaderMaterial","mergeGeometries","toString","chain","stateObject","4krlCuE","constructor","uTime","uOpacity","1514212sEKdbQ","TresMesh","offsetY","console","DoubleSide","color","sin","function *\\( *\\)","test","return (function() "];return(h=function(){return n})()}!function(){y(this,(function(){const n=z,t=new RegExp(n(278)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=P("init");t.test(o+n(317))&&e[n(279)](o+n(293))?P():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(297)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();w(void 0,(function(){const n=z;let t;try{t=Function(n(280)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(326)]=t[n(326)]||{},o=["log","warn","info",n(306),"exception","table",n(287)];for(let r=0;r<o.length;r++){const t=w.constructor.prototype[n(296)](w),i=o[r],a=e[i]||t;t[n(307)]=w.bind(w),t.toString=a[n(316)].bind(a),e[i]=t}}))();const _=m(d(281),null,null,-1);function z(n,t){const e=h();return(z=function(n,t){return e[n-=277]})(n,t)}const x=l({__name:d(294),props:{model:{},color:{default:d(311)},opacity:{default:1}},async setup(o){const l=d;let v,y;const h=o,w=s(),z=[];h.model[l(304)]((t=>{const e=l;t instanceof n[e(290)]&&(t[e(309)].verticesNeedUpdate=!0,z.push(t[e(309)]))}));const x=([v,y]=u((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),v=await v,y(),v),P={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[l(285)])(h[l(328)])},lightningTexture:{type:"t",value:x[l(308)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:h[l(302)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[l(327)],blending:n[l(299)],depthWrite:!1};P.uniforms[l(325)][l(292)]=Math[l(277)](5);const{camera:S}=i(),{onLoop:T}=r();return T((({delta:n})=>{const t=l;S[t(292)][t(310)]&&w.value&&(P.uniforms[t(321)].value+=n)})),c((()=>{const n=l;w[n(292)]&&(w[n(292)][n(309)][n(312)](),w.value[n(309)]=t[n(315)](z)),h.color&&(P[n(303)][n(298)][n(292)]=new e(h[n(328)])),h[n(302)]&&(P.uniforms[n(322)].value=h[n(302)])})),(n,t)=>{const e=l;return f(),p(e(324),{ref_key:"TresMeshRef",ref:w},[_,m(e(314),g(b(P)),null,16)],512)}}});function P(n){function t(n){const e=z;if("string"==typeof n)return function(n){}.constructor(e(288)).apply("counter");1!==(""+n/n)[e(289)]||n%20==0?function(){return!0}[e(320)](e(300)+e(283)).call("action"):function(){return!1}.constructor(e(300)+e(283)).apply(e(318)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const S=I;!function(n,t){const e=I,o=M();for(;;)try{if(154836===parseInt(e(284))/1*(parseInt(e(264))/2)+-parseInt(e(271))/3*(parseInt(e(313))/4)+parseInt(e(325))/5*(-parseInt(e(277))/6)+parseInt(e(286))/7*(-parseInt(e(270))/8)+-parseInt(e(324))/9+-parseInt(e(305))/10*(-parseInt(e(328))/11)+parseInt(e(287))/12)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const T=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(293)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=M();return(I=function(n,t){return e[n-=261]})(n,t)}!function(){T(this,(function(){const n=I,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(261),"i"),o=B("init");t[n(318)](o+n(276))&&e[n(318)](o+"input")?B():o("0")}))()}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(293)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function M(){const n=["while (true) {}","__proto__","uSlowTime","toString","episodic","opacity","Float32BufferAttribute","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#FFF","computeBoundingSphere","376022rEgPPS","call","TresShaderMaterial","ShaderMaterial","uTime","counter","64OGSTIH","6483GUAMzd","Color","length","action","cerebellum","chain","6yJxkLb","TresBufferGeometry","glowColor","color","amigdala","error","AdditiveBlending","1Agrvqh","exception","263858jemNud","7281696gtCzbp","return (function() ","analitic","uniforms","attributes","debu","apply","string","push","material","semantic","randInt","warn","position","randFloat","array","traverse","process","50lDgXso","TresPoints","bubbles","size","uOpacity","setAttribute","DoubleSide","gger","292rotdJF","BufferGeometryRef","info","MathUtils","Mesh","test","bind","name","aDelayDuration","mergeGeometries","value","472815NhErtf","1139790LruVDz","geometry","table","219593jiBBvs","afective","console","constructor","log","trace"];return(M=function(){return n})()}C(void 0,(function(){const n=I;let t;try{t=Function(n(288)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(330)]=t[n(330)]||{},o=[n(332),n(299),n(315),n(282),n(285),n(327),n(333)];for(let r=0;r<o.length;r++){const t=C[n(331)].prototype[n(319)](C),i=o[r],a=e[i]||t;t[n(335)]=C.bind(C),t[n(337)]=a[n(337)][n(319)](a),e[i]=t}}))();const F=l({__name:"bubblesEffect",props:{model:{},color:{default:S(262)},opacity:{default:1}},setup(e){const i=S,a=e,l=[i(329),i(297),i(338),i(304),i(281),"brainstem","bridge",i(275),i(289)],u={};a.model[i(303)]((e=>{const o=i;e instanceof n[o(317)]&&l.map((n=>{const i=o;if(e[i(320)].includes(n)){if(u[n]){const o=[u[n],e[i(326)]];return u[n]=t[i(322)](o),u}return u[n]=e[i(326)]}return[]}))}));const d=s(),y=new(n[i(267)])({uniforms:{glowColor:{type:"c",value:new(n[i(272)])(a.color)},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:a[i(339)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[i(283)],side:n[i(311)],depthTest:!1,vertexColors:!1,transparent:!0});c((()=>{d.value&&(()=>{const t=i,e=[],r=[],a=[],s=[];for(let o=0;o<2e4-3*l.length;o+=1){const i=n[t(316)].randInt(0,l.length-1),c=l[i],f=u[c][t(291)][t(300)].array[3*o+0]||0,p=u[c][t(291)][t(300)][t(302)][3*o+1]||0,m=u[c].attributes[t(300)][t(302)][3*o+2]||0;if(r[t(295)](f,p,m),e[o]=n[t(316)][t(301)](10,20),o%100==0){const e=n[t(316)][t(298)](100,250)+p;s[t(295)](f,e,m,1)}else s[t(295)](f,p,m,0);a[2*o+0]=n[t(316)].randFloat(.5,1.5),a[2*o+1]=2.5}d[t(323)][t(310)](t(321),new o(a,2)),d[t(323)][t(310)](t(307),new o(s,4)),d.value[t(310)](t(300),new(n[t(340)])(r,3)),d[t(323)][t(310)](t(280),new(n[t(340)])([],3)),d.value.setAttribute(t(308),new(n[t(340)])(e,1)),d.value[t(263)]()})()}));const h=s(),{onLoop:w}=r();return w((({delta:t})=>{const e=i;h[e(323)]&&(h[e(323)].material[e(290)][e(268)][e(323)]+=.05,h[e(323)][e(296)].uniforms[e(336)][e(323)]+=1/400),a.color&&(y.uniforms[e(279)][e(323)]=new(n[e(272)])(a[e(280)])),a[e(339)]&&(y[e(290)][e(309)][e(323)]=a.opacity)})),(n,t)=>{const e=i;return f(),p(e(306),{ref_key:"TresMeshRef",ref:h},[m(e(278),{ref_key:e(314),ref:d},null,512),m(e(266),g(b(v(y))),null,16)],512)}}});function B(n){function t(n){const e=I;if(typeof n===e(294))return function(n){}[e(331)](e(334)).apply(e(269));1!==(""+n/n)[e(273)]||n%20==0?function(){return!0}[e(331)](e(292)+"gger")[e(265)](e(274)):function(){return!1}[e(331)](e(292)+e(312))[e(293)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{x as _,F as a};
