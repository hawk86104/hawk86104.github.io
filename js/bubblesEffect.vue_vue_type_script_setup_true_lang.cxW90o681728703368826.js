import{_ as n,aN as t,bW as e,s as o,m as i,ab as r}from"./three.VoknrmS61728703368826.js";import{p as a,U as s,z as l}from"./@tresjs.JhHPALEY1728703368826.js";import{d as u,b as c,a4 as f,a3 as p,o as m,E as b,L as g,aj as v,ak as y,u as d}from"./@vue.JNsx1iN61728703368826.js";const h=x;!function(n,t){const e=x,o=z();for(;;)try{if(696048===-parseInt(e(323))/1+-parseInt(e(317))/2*(parseInt(e(327))/3)+-parseInt(e(334))/4+-parseInt(e(328))/5*(parseInt(e(292))/6)+parseInt(e(319))/7*(-parseInt(e(338))/8)+parseInt(e(306))/9+parseInt(e(318))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=x,t=new RegExp(n(303)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=T(n(297));t.test(o+"chain")&&e[n(320)](o+n(342))?T():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["29672sBhsdd","uTime","TresMesh",'{}.constructor("return this")( )',"input","stateObject","trace","color","console","opacity","prototype","exception","value","36wWHpZI","glowColor","log","toString","gger","init","table","uniforms","Color","TresBufferGeometry","push","function *\\( *\\)","dispose","geometry","11303775aoDjRd","info","constructor","string","__proto__","while (true) {}","position","TresMeshRef","DoubleSide","TresShaderMaterial","mergeGeometries","24086ZpSaoy","36482430aYjOUW","609enSEww","test","map","uOpacity","300878MtBbZY","Mesh","error","bind","303RNVgaS","926375DvXbeP","#84ccff","apply","return (function() ","call","model","5026464GoWUtj","offsetY","debu","verticesNeedUpdate"];return(z=function(){return n})()}function x(n,t){const e=z();return(x=function(n,t){return e[n-=289]})(n,t)}_(void 0,(function(){const n=x;let t;try{t=Function(n(331)+n(341)+");")()}catch(i){t=window}const e=t[n(346)]=t[n(346)]||{},o=[n(294),"warn",n(307),n(325),n(290),n(298),n(344)];for(let r=0;r<o.length;r++){const t=_[n(308)][n(289)].bind(_),i=o[r],a=e[i]||t;t[n(310)]=_[n(326)](_),t.toString=a[n(295)].bind(a),e[i]=t}}))();const S=g(h(301),null,null,-1),P=u({__name:"xRayEffect",props:{model:{},color:{default:h(329)},opacity:{default:1}},async setup(o){const i=h;let r,u;const d=o,w=c(),_=[];d[i(333)].traverse((t=>{const e=i;t instanceof n[e(324)]&&(t[e(305)][e(337)]=!0,_[e(302)](t.geometry))}));const z=([r,u]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(300)])(d[i(345)])},lightningTexture:{type:"t",value:z[i(321)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(347)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(314)],blending:t,depthWrite:!1};x.uniforms[i(335)].value=Math.sin(5);const{camera:P}=a(),{onLoop:T}=s();return T((({delta:n})=>{const t=i;P[t(291)][t(312)]&&w.value&&(x.uniforms[t(339)][t(291)]+=n)})),p((()=>{const t=i;w.value&&(w[t(291)][t(305)][t(304)](),w.value[t(305)]=e[t(316)](_)),d.color&&(x[t(299)][t(293)][t(291)]=new(n[t(300)])(d[t(345)])),d[t(347)]&&(x[t(299)][t(322)].value=d[t(347)])})),(n,t)=>{const e=i;return m(),b(e(340),{ref_key:e(313),ref:w},[S,g(e(315),v(y(x)),null,16)],512)}}});function T(n){function t(n){const e=x;if(typeof n===e(309))return function(n){}[e(308)](e(311)).apply("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(308)](e(336)+e(296))[e(332)]("action"):function(){return!1}[e(308)](e(336)+e(296))[e(330)](e(343)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const I=U;!function(n,t){const e=U,o=B();for(;;)try{if(372916===parseInt(e(490))/1*(-parseInt(e(488))/2)+-parseInt(e(489))/3*(parseInt(e(494))/4)+-parseInt(e(473))/5+parseInt(e(465))/6+-parseInt(e(514))/7*(-parseInt(e(503))/8)+-parseInt(e(483))/9*(-parseInt(e(511))/10)+-parseInt(e(462))/11*(parseInt(e(508))/12))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(527)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=U,t=new RegExp(n(499)),e=new RegExp(n(466),"i"),o=O("init");t[n(530)](o+n(523))&&e.test(o+n(525))?O():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(527)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(){const n=["randFloat","exception","call","Float32BufferAttribute","episodic","#FFF","380295FagDBB","computeBoundingSphere","opacity","name","cerebellum","push","randInt","setAttribute","warn","includes","54zOUSLH","process","attributes","bubbles","console","361776BMdNqB","23418sbMNwe","1vgQOwW","size",'{}.constructor("return this")( )',"prototype","104LBOUOv","toString","DoubleSide","TresBufferGeometry","mergeGeometries","function *\\( *\\)","uniforms","brainstem","position","550424FokOqI","bubblesEffect","model","map","TresPoints","48OhGWMn","__proto__","material","1144370CrpBWW","color","Color","28TJGlzz","TresMeshRef","uSlowTime","uOpacity","string","array","length","afective","bind","chain","traverse","input","constructor","apply","MathUtils","aDelayDuration","test","geometry","bridge","debu","table","analitic","value","gger","1081718llDtqS","while (true) {}","BufferGeometryRef","1586022HtWcIW","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(B=function(){return n})()}function U(n,t){const e=B();return(U=function(n,t){return e[n-=460]})(n,t)}M(void 0,(function(){const n=U;let t;try{t=Function("return (function() "+n(492)+");")()}catch(i){t=window}const e=t[n(487)]=t[n(487)]||{},o=["log",n(481),"info","error",n(468),n(534),"trace"];for(let r=0;r<o.length;r++){const t=M[n(526)][n(493)][n(522)](M),i=o[r],a=e[i]||t;t[n(509)]=M[n(522)](M),t[n(495)]=a[n(495)][n(522)](a),e[i]=t}}))();const F=u({__name:I(504),props:{model:{},color:{default:I(472)},opacity:{default:1}},setup(a){const l=I,u=a,f=[l(521),"semantic",l(471),l(484),"amigdala",l(501),l(532),l(477),l(535)],h={};u[l(505)][l(524)]((n=>{const t=l;n instanceof o&&f[t(506)]((o=>{const i=t;if(n[i(476)][i(482)](o)){if(h[o]){const t=[h[o],n[i(531)]];return h[o]=e[i(498)](t),h}return h[o]=n[i(531)]}return[]}))}));const w=c(),_=new i({uniforms:{glowColor:{type:"c",value:new(n[l(513)])(u[l(512)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:u[l(475)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t,side:n[l(496)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{w[l(460)]&&(()=>{const t=l,e=[],o=[],i=[],a=[];for(let r=0;r<2e4-3*f[t(520)];r+=1){const s=n[t(528)][t(479)](0,f[t(520)]-1),l=f[s],u=h[l][t(485)][t(502)][t(519)][3*r+0]||0,c=h[l][t(485)].position[t(519)][3*r+1]||0,p=h[l][t(485)][t(502)].array[3*r+2]||0;if(o[t(478)](u,c,p),e[r]=n[t(528)][t(467)](10,20),r%100==0){const e=n[t(528)][t(479)](100,250)+c;a[t(478)](u,e,p,1)}else a[t(478)](u,c,p,0);i[2*r+0]=n[t(528)][t(467)](.5,1.5),i[2*r+1]=2.5}w[t(460)][t(480)](t(529),new(n[t(470)])(i,2)),w[t(460)][t(480)](t(486),new(n[t(470)])(a,4)),w.value.setAttribute(t(502),new(n[t(470)])(o,3)),w.value.setAttribute("color",new r([],3)),w[t(460)][t(480)](t(491),new r(e,1)),w[t(460)][t(474)]()})()}));const z=c(),{onLoop:x}=s();return x((({delta:t})=>{const e=l;z.value&&(z[e(460)][e(510)][e(500)].uTime[e(460)]+=.05,z[e(460)][e(510)].uniforms[e(516)][e(460)]+=1/400),u.color&&(_.uniforms.glowColor[e(460)]=new(n[e(513)])(u[e(512)])),u[e(475)]&&(_[e(500)][e(517)][e(460)]=u[e(475)])})),(n,t)=>{const e=l;return m(),b(e(507),{ref_key:e(515),ref:z},[g(e(497),{ref_key:e(464),ref:w},null,512),g("TresShaderMaterial",v(y(d(_))),null,16)],512)}}});function O(n){function t(n){const e=U;if(typeof n===e(518))return function(n){}[e(526)](e(463))[e(527)]("counter");1!==(""+n/n)[e(520)]||n%20==0?function(){return!0}.constructor(e(533)+e(461))[e(469)]("action"):function(){return!1}.constructor("debugger")[e(527)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,F as a};
