import"./@fesjs.DnM7nINA1761276103973.js";import{M as e,K as s}from"./@tresjs.B_KjVy0E1761276103973.js";import"./Resource.CSaxGSPI1761276103973.js";/* empty css                                                                             */import"./three-mesh-ui.module.C--P1h9b1761276103973.js";import"./global.BkM2LKCv1761276103973.js";/* empty css                                                              */import{d as a,a as r,c as t,w as o,V as i,G as l,o as n,H as p,F as u,W as m,I as d,m as c,r as g,q as j,g as v,b as f,e as k,h as _,u as y,a9 as h,aa as b}from"./@vue.CKlgtJke1761276103973.js";import"./vanilla.esm.5.5.0.CRlEbOMK1761276103973.js";import{P as M}from"./tweakpane.CqZAnw7f1761276103973.js";import{$ as S,ad as w}from"./three.Bhn4-0ry1761276103973.js";import"./vue-router.BFHj2xRz1761276103973.js";import"./lodash-es.DWe8oqPO1761276103973.js";import"./pinia.C8YT0eOZ1761276103973.js";import"./@qlin.y-0Z8WnK1761276103973.js";import"./@babel.BPq7uOAK1761276103973.js";import"./@floating-ui.Bhq4ibgf1761276103973.js";import"./@juggle.Vc7cP4_P1761276103973.js";import"./postprocessing.CeTFUAN_1761276103973.js";import"./@vueuse.wtfleElW1761276103973.js";import"./color.zjyo9y-T1761276103973.js";import"./color-string.Cb0Nf94v1761276103973.js";import"./color-name.gyPnsvCn1761276103973.js";import"./lodash.B8Sqzhuz1761276103973.js";import"./@amap.fjyZdsU91761276103973.js";import"./object-hash.1qNYTrnD1761276103973.js";import"./jszip.y_yjJ09m1761276103973.js";const T={key:0},B=["geometry","render-order"],C=a({__name:"svgCom",props:{src:{default:"./plugins/geokit/case-real-3/icons/satellite.svg"},skipStrokes:{default:!1},skipFills:{default:!1}},setup(s){const a=s,g=r([]),j=r(!0);let v=r(()=>{});const f=t(()=>g.value.filter(e=>!(!e.isStroke||a.skipStrokes)||!e.isStroke&&!a.skipFills));return o(()=>a.src,s=>{v.value();const a=e(s);j.value=!0,o(()=>a.isLoading.value,e=>{e||(g.value=a.layers.value,j.value=a.isLoading.value,v.value=a.dispose)})},{immediate:!0}),i(()=>{v.value()}),(e,s)=>(n(),l("TresGroup",null,[j.value?p("",!0):(n(),l("TresGroup",T,[(n(!0),l(u,null,m(f.value,(e,s)=>(n(),l("TresMesh",{key:`layer-${s}`,geometry:e.geometry,"render-order":s},[d("TresMeshBasicMaterial",c({ref_for:!0},e.material),null,16)],8,B))),128))]))]))}}),F=a({__name:"svgComPage",setup(e){const a={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:w,toneMappingExposure:1,shadowMapType:S},r=g({src:"./plugins/geokit/case-real-3/icons/satellite.svg",skipFills:!1,skipStrokes:!1}),t=new M({title:"参数",expanded:!0}),o=document.createElement("input");o.type="file",o.accept=".svg",o.style.display="none",document.body.appendChild(o);return t.addButton({title:"替换SVG",label:"2MB以内"}).on("click",()=>{o&&(o.value="",o.click())}),t.addBinding(r,"skipStrokes",{label:"剔除线条"}),t.addBinding(r,"skipFills",{label:"剔除填空"}),j(()=>{o.onchange=e=>{const s=e.target.files[0];if(!s)return;if(s.size>2097152)return void alert("SVG大小不能超过2MB");const a=new FileReader;a.onload=e=>{r.src=e.target.result},a.readAsDataURL(s)}}),(e,t)=>{const o=v("TresCanvas");return n(),f(o,h(b(a)),{default:k(()=>[t[0]||(t[0]=d("TresPerspectiveCamera",{position:[-5,3,5],fov:50,near:.1,far:1e4},null,-1)),_(y(s)),t[1]||(t[1]=d("TresAmbientLight",null,null,-1)),_(y(C),h(b(r)),null,16)]),_:1},16)}}});export{F as default};
