import{u as t,_ as n,a as o}from"./mergeTres.2y7WLKwm1741857949183.js";import{l as r}from"./utils.AP-HdWts1741857949183.js";import{e}from"./@tresjs.8SAr0PX_1741857949183.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741857949183.js";import{_ as C}from"./@fesjs._GqZBaJ41741857949183.js";import"./@amap.QByc7Q7q1741857949183.js";import"./pinia.m-1lhBPB1741857949183.js";import"./three.Gi_-4zeu1741857949183.js";import"./three-mesh-bvh.dyGT1sWA1741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";import"./vue-router.vV-TPEpQ1741857949183.js";import"./lodash-es.pklfUAS51741857949183.js";import"./@qlin.yHhFDldE1741857949183.js";import"./@floating-ui.BPbuo5Gx1741857949183.js";import"./@juggle.7yjBMqoW1741857949183.js";const y=j;!function(t,n){const o=j,r=b();for(;;)try{if(448184===parseInt(o(363))/1*(parseInt(o(380))/2)+parseInt(o(362))/3+-parseInt(o(387))/4*(parseInt(o(381))/5)+parseInt(o(397))/6+parseInt(o(365))/7*(-parseInt(o(391))/8)+parseInt(o(361))/9*(parseInt(o(379))/10)+-parseInt(o(348))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(402)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=j,n=new RegExp(t(355)),o=new RegExp(t(375),"i"),r=z(t(350));n[t(385)](r+"chain")&&o[t(385)](r+t(373))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(402)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(){const t=["function *\\( *\\)","call","far","getZoom","mapHandle","trace","1710360yljqhP","1780812qKkOPZ","7TnQfPR","table","7TigxMQ","push","cameraState","console","u_near","customCoords","constructor","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","input","counter","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","position","u_far","prototype","20WwKpka","177614qQHjLk","5NpUtBj","toString","lngLatToCoord","length","test","TresShaderMaterial","316268NjTglb","string","faceUv","__proto__","143872PFCtSD","action","atan","debu","bind","positionArray","665898hjESaT","gger","error","TresMesh","tbgRef","apply","exception","uvArray","TresBufferGeometry","stateObject","12771891LyMipb","exp","init","geometry","while (true) {}","value","uniforms"];return(b=function(){return t})()}function j(t,n){const o=b();return(j=function(t,n){return o[t-=346]})(t,n)}w(void 0,(function(){const t=j;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(368)]=n.console||{},r=["log","warn","info",t(399),t(403),t(364),t(360)];for(let a=0;a<r.length;a++){const n=w[t(371)][t(378)][t(395)](w),e=r[a],i=o[e]||n;n[t(390)]=w.bind(w),n[t(382)]=i[t(382)].bind(i),o[e]=n}}))();const I=[y(376),y(389),"normal"],S=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(359)][n(370)][n(383)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[j(367)]&&(async()=>{const t=j,n=await r(t(372),"buildings");for(let o=0;o<n[t(384)];o++){const r=n[o];a(r[t(351)]);const e=new Float32Array(r[t(351)]),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(351)].length);d[t(366)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o[t(367)]&&(g[t(354)].u_zoom[t(353)]=o[t(359)][t(358)](),g[t(354)][t(369)][t(353)]=o[t(367)].near,g[t(354)][t(377)].value=o.cameraState[t(357)])})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,n)=>{const o=j;return c(),s(o(400),{key:""+n},[p(o(346),{ref_for:!0,ref:o(401),position:[t[o(396)],3],faceUv:[t[o(404)],2],normal:[t.normalArray,3]},null,8,I),p(o(386),v({ref_for:!0},g),null,16)])})),128))]))}});function z(t){function n(t){const o=j;if(typeof t===o(388))return function(t){}[o(371)](o(352))[o(402)](o(374));1!==(""+t/t)[o(384)]||t%20==0?function(){return!0}[o(371)](o(394)+"gger")[o(356)](o(392)):function(){return!1}[o(371)](o(394)+o(398)).apply(o(347)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function P(t,n){const o=M();return(P=function(t,n){return o[t-=129]})(t,n)}!function(t,n){const o=P,r=M();for(;;)try{if(640161===-parseInt(o(165))/1+-parseInt(o(151))/2+-parseInt(o(153))/3+-parseInt(o(161))/4+-parseInt(o(152))/5*(-parseInt(o(154))/6)+-parseInt(o(149))/7*(-parseInt(o(164))/8)+parseInt(o(141))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(159)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=P,n=new RegExp(t(142)),o=new RegExp(t(163),"i"),r=F(t(135));n.test(r+t(143))&&o[t(133)](r+t(162))?F():r("0")}))()}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(159)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();A(void 0,(function(){const t=P;let n;try{n=Function(t(157)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n.console=n[t(147)]||{},r=[t(144),t(166),t(130),t(131),t(158),"table","trace"];for(let a=0;a<r[t(136)];a++){const n=A[t(156)][t(139)].bind(A),e=r[a],i=o[e]||n;n[t(155)]=A[t(138)](A),n[t(148)]=i[t(148)].bind(i),o[e]=n}}))();function F(t){function n(t){const o=P;if("string"==typeof t)return function(t){}[o(156)](o(160))[o(159)]("counter");1!==(""+t/t)[o(136)]||t%20==0?function(){return!0}.constructor(o(140)+o(145))[o(146)]("action"):function(){return!1}[o(156)](o(140)+o(145))[o(159)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}function M(){const t=["return (function() ","exception","apply","while (true) {}","1700140JKRzOt","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","2848688KjOcIB","681657SPPZKs","warn","tresCanvas","info","error","manual","test","TresPerspectiveCamera","init","length","TresCanvas","bind","prototype","debu","8167977CDoPjO","function *\\( *\\)","chain","log","gger","call","console","toString","21tjoCEC","TresAmbientLight","137550PpGzxF","1124115SDMQAJ","2503956ZgRqka","18Abgyxh","__proto__","constructor"];return(M=function(){return t})()}const U=C(a({__name:"buildings",setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(132)});return(t,i)=>{const l=r,f=d(l(137));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(129),ref:"tcRef"},a),{default:m((()=>[i[0]||(i[0]=p(l(134),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(150),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{U as default};
