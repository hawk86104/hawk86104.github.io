import{u as t,_ as o,a as n}from"./mergeTres.2IXSlABK1741490461506.js";import{l as r}from"./utils.yozaP-Fw1741490461506.js";import{e}from"./@tresjs.rE98Wm941741490461506.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741490461506.js";import{_ as y}from"./@fesjs.IWF3W7Eu1741490461506.js";import"./@amap.TO4JQn7s1741490461506.js";import"./pinia.RD4r5tit1741490461506.js";import"./three.Vxh8Czkt1741490461506.js";import"./three-mesh-bvh.un6HGGrA1741490461506.js";import"./postprocessing.wUw4_rsV1741490461506.js";import"./@vueuse.9Z-Ayxy41741490461506.js";import"./vue-router.5pMX5YFH1741490461506.js";import"./lodash-es.pklfUAS51741490461506.js";import"./@qlin.yHhFDldE1741490461506.js";import"./@floating-ui.BPbuo5Gx1741490461506.js";import"./@juggle.7yjBMqoW1741490461506.js";const C=S;!function(t,o){const n=S,r=I();for(;;)try{if(859559===parseInt(n(111))/1+-parseInt(n(106))/2*(parseInt(n(152))/3)+-parseInt(n(109))/4*(parseInt(n(104))/5)+parseInt(n(153))/6+-parseInt(n(132))/7+-parseInt(n(135))/8*(-parseInt(n(101))/9)+parseInt(n(129))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=S,o=new RegExp("function *\\( *\\)"),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(t(121));o[t(100)](r+t(116))&&n.test(r+t(118))?z():r("0")}))()}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[S(120)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();w(void 0,(function(){const t=S;let o;try{o=Function(t(150)+t(131)+");")()}catch(e){o=window}const n=o.console=o[t(147)]||{},r=[t(110),t(123),"info",t(144),t(113),t(126),t(156)];for(let a=0;a<r[t(112)];a++){const o=w[t(154)][t(139)].bind(w),e=r[a],i=n[e]||o;o[t(145)]=w[t(146)](w),o[t(114)]=i[t(114)][t(146)](i),n[e]=o}}))();const b=[C(134),C(140),C(122)];function I(){const t=["exp","value","test","1563021pjOAfY","tbgRef","buildings","2075fpYTwl","near","6176hkKHNt","atan","uvArray","8968xEzCWo","log","1030881iFRcsB","length","exception","toString","stateObject","chain","uniforms","input","action","apply","init","normal","warn","mapHandle","debu","table","TresShaderMaterial","lngLatToCoord","19686490kyPNOB","string",'{}.constructor("return this")( )',"5769393dFLxsE","TresMesh","position","24yTLLzn","positionArray","customCoords","gger","prototype","faceUv","cameraState","TresBufferGeometry","TresGroup","error","__proto__","bind","console","push","getZoom","return (function() ","geometry","1398zJLLwx","3195954QlHPlL","constructor","u_near","trace","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","u_far"];return(I=function(){return t})()}function S(t,o){const n=I();return(S=function(t,o){return n[t-=100]})(t,o)}const j=a({__name:"buildingModels",setup(o){const n=t(),a=t=>{const o=S;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=n[o(124)].customCoords[o(128)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[S(141)]&&(async()=>{const t=S,o=await r(t(157),t(103));for(let n=0;n<o[t(112)];n++){const r=o[n];a(r[t(151)]);const e=new Float32Array(r[t(151)]),i=new Float32Array(r[t(140)]),l=new Float32Array(r[t(151)][t(112)]);d[t(148)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;n[t(141)]&&(g[t(117)].u_zoom[t(160)]=n[t(124)][t(149)](),g.uniforms[t(155)][t(160)]=n[t(141)][t(105)],g[t(117)][t(158)][t(160)]=n.cameraState.far)})),(t,o)=>{const n=S;return c(),s(n(143),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(133),{key:""+o},[p(r(142),{ref_for:!0,ref:r(102),position:[t[r(136)],3],faceUv:[t[r(108)],2],normal:[t.normalArray,3]},null,8,b),p(r(127),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=S;if(typeof t===n(130))return function(t){}.constructor("while (true) {}")[n(120)]("counter");1!==(""+t/t)[n(112)]||t%20==0?function(){return!0}[n(154)](n(125)+n(138)).call(n(119)):function(){return!1}[n(154)](n(125)+n(138)).apply(n(115)),o(++t)}try{if(t)return o;o(0)}catch(n){}}!function(t,o){const n=R,r=L();for(;;)try{if(158022===-parseInt(n(435))/1+parseInt(n(419))/2+parseInt(n(416))/3*(-parseInt(n(406))/4)+parseInt(n(409))/5+-parseInt(n(404))/6+parseInt(n(442))/7*(-parseInt(n(408))/8)+parseInt(n(407))/9*(parseInt(n(432))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[R(425)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=R,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(431),"i"),r=A(t(434));o[t(403)](r+t(427))&&n[t(403)](r+"input")?A():r("0")}))()}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function L(){const t=["312702hPxckZ","length","constructor","__proto__","tresCanvas","return (function() ","while (true) {}","1267469sfacxU","warn","console","test","485388Sqcbzs","gger","80PNSENL","4809573IUiMeJ","8YORVWy","16130DWvilh","error",'{}.constructor("return this")( )',"string","TresAmbientLight","tcRef","trace","285TUkSrZ","stateObject","toString","393932FvSYZi","debu","table","bind","action","exception","apply","info","chain","counter","darkblue","log","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","10JzTFFH","call","init"];return(L=function(){return t})()}function R(t,o){const n=L();return(R=function(t,o){return n[t-=403]})(t,o)}P(void 0,(function(){const t=R;let o;try{o=Function(t(440)+t(411)+");")()}catch(e){o=window}const n=o[t(444)]=o[t(444)]||{},r=[t(430),t(443),t(426),t(410),t(424),t(421),t(415)];for(let a=0;a<r.length;a++){const o=P[t(437)].prototype[t(422)](P),e=r[a],i=n[e]||o;o[t(438)]=P[t(422)](P),o[t(418)]=i[t(418)][t(422)](i),n[e]=o}}))();function A(t){function o(t){const n=R;if(typeof t===n(412))return function(t){}[n(437)](n(441))[n(425)](n(428));1!==(""+t/t)[n(436)]||t%20==0?function(){return!0}[n(437)](n(420)+n(405))[n(433)](n(423)):function(){return!1}[n(437)](n(420)+n(405))[n(425)](n(417)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const U=y(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=R,l=d("TresCanvas");return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(429)}),g(l,v({id:i(439),ref:i(414)},e),{default:m((()=>[a[0]||(a[0]=p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p(i(413),{intensity:.5},null,-1)),g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{U as default};
