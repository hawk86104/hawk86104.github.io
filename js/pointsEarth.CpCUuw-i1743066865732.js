import{ar as e,_ as n}from"./three.qSkR4_5R1743066865732.js";import{e as t,o as a,a as o}from"./@tresjs.NxYvETXi1743066865732.js";import{P as r}from"./tweakpane.ivGeiIdz1743066865732.js";import{d as i,a3 as l,v as s,e as u,o as p,f as c,g as f,N as v,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.L-brCdZe1743066865732.js";import"./postprocessing.ncQBP5me1743066865732.js";import"./@vueuse.2gpu5LGS1743066865732.js";const y=_;function w(){const e=["action","function *\\( *\\)","value","1462485alTuQA","海浪高度","error","color","uWaveSpeed","pointsEarth","size","console","4kCOwgi","1139055vVuxKB","#ffffff","Debug","TresHemisphereLight","constructor","wireframeMaterialRef","while (true) {}","uniforms","TresIcosahedronGeometry","海浪变化速度","1176707DBSTgd","prototype","debu","uWaveHeight","length","#122148","2wmXeQC","warn","stateObject","#080820","test","22bpgczl","trace","6lkznez","addBinding","change","exception","8315136eJPAMe","1580620UqEwns","TresMeshBasicMaterial","log","FrontSide","apply","8QIgbls","gger","91253oxdaLB","addFolder","TresGroup","bind","pointSize","TresPoints","counter","TresShaderMaterial","rotation","2106927iwxolL"];return(w=function(){return e})()}!function(e,n){const t=_,a=w();for(;;)try{if(318997===parseInt(t(496))/1*(parseInt(t(534))/2)+parseInt(t(509))/3*(-parseInt(t(517))/4)+-parseInt(t(518))/5+parseInt(t(484))/6*(parseInt(t(528))/7)+-parseInt(t(494))/8*(parseInt(t(505))/9)+-parseInt(t(489))/10*(-parseInt(t(482))/11)+parseInt(t(488))/12)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[_(493)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=_,n=new RegExp(e(507)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),a=z("init");n[e(481)](a+"chain")&&t[e(481)](a+"input")?z():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[_(493)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function _(e,n){const t=w();return _=function(e,n){return t[e-=481]},_(e,n)}S(void 0,(function(){const e=_;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(516)]=n.console||{},a=[e(491),e(535),"info",e(511),e(487),"table",e(483)];for(let r=0;r<a[e(532)];r++){const n=S[e(522)][e(529)][e(499)](S),o=a[r],i=t[o]||n;n.__proto__=S[e(499)](S),n.toString=i.toString[e(499)](i),t[o]=n}}))();const b=i({__name:y(514),async setup(i){const w=y;let T,S;const _={color:"#17c5a9",pointSize:4},b={clearColor:w(533),shadows:!1,alpha:!1,outputColorSpace:e},z={color:_[w(512)],wireframe:!0,transparent:!0,opacity:.2},j=([T,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),E=j[0],P=j[1],D=j[2],I=j[3],k=j[4],A={uniforms:{size:{type:"f",value:_[w(500)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n[w(492)]},C=s(),M=s(),U=(new r)[w(497)]({title:w(520)});U[w(485)](_,w(512),{type:w(512)}).on(w(486),(({value:e})=>{M[w(508)].color.set(e)})),U[w(485)](A.uniforms[w(515)],"value",{min:.1,max:10,step:.1,label:"粒子大小"}),U[w(485)](A.uniforms[w(531)],"value",{min:.01,max:.5,step:.01,label:w(510)}),U[w(485)](A[w(525)][w(513)],w(508),{min:.01,max:1,step:.01,label:w(527)});const{onLoop:L}=t();return L((({delta:e})=>{const n=w;C[n(508)]&&(C[n(508)][n(504)].y+=.002,A.uniforms.uTime[n(508)]+=10*e)})),(e,n)=>{const t=w,o=u("TresCanvas");return p(),c(o,h(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),v(t(498),{ref_key:"groupRef",ref:C},[v("TresMesh",null,[n[0]||(n[0]=v(t(526),{args:[1,4]},null,-1)),v(t(490),h({ref_key:t(523),ref:M},z),null,16)]),v(t(501),null,[n[1]||(n[1]=v(t(526),{args:[1,128]},null,-1)),v(t(503),g(x(A)),null,16)])],512),n[3]||(n[3]=v(t(521),{args:[t(519),t(537),3]},null,-1))])),_:1},16)}}});function z(e){function n(e){const t=_;if("string"==typeof e)return function(e){}[t(522)](t(524))[t(493)](t(502));1!==(""+e/e)[t(532)]||e%20==0?function(){return!0}[t(522)](t(530)+t(495)).call(t(506)):function(){return!1}[t(522)](t(530)+t(495)).apply(t(536)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
