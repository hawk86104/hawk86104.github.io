import{e as n,o as t}from"./@tresjs.8SAr0PX_1741857949183.js";import{a0 as e,aX as r}from"./three.Gi_-4zeu1741857949183.js";import{_ as o}from"./argestCircle.iQbYZf4A1741857949183.js";import{d as i,e as s,o as a,f as u,g as c,N as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.NRI7TcgI1741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";const g=x;!function(n,t){const e=x,r=T();for(;;)try{if(438399===parseInt(e(393))/1+-parseInt(e(392))/2+-parseInt(e(376))/3*(-parseInt(e(378))/4)+-parseInt(e(400))/5+parseInt(e(408))/6*(parseInt(e(395))/7)+parseInt(e(379))/8*(parseInt(e(398))/9)+parseInt(e(396))/10*(-parseInt(e(387))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[x(416)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function T(){const n=['{}.constructor("return this")( )',"length","log","4367yEWAVR","exception","init","warn","constructor","68862BaxMQQ","353341waIuqI","bind","132944xQyCnP","55850OZeitU","gger","9omkWao","input","43265uYfKea","error","trace","#000000","table","console","action","value","222bKfxsS","string","call","test","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","#ffffff","uTime","apply","TresGridHelper","rotation-x","TresAmbientLight","uniforms","function *\\( *\\)","TresCanvas","debu","302601GFWRdy","TresAxesHelper","32CnOQhh","6685976PORvWH","TresShaderMaterial","quanMeshRef","toString","prototype"];return(T=function(){return n})()}function x(n,t){const e=T();return(x=function(n,t){return e[n-=374]})(n,t)}!function(){h(this,(function(){const n=x,t=new RegExp(n(421)),e=new RegExp(n(412),"i"),r=w(n(389));t[n(411)](r+"chain")&&e[n(411)](r+n(399))?w():r("0")}))()}();const y=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[x(416)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();y(void 0,(function(){const n=x,t=function(){const n=x;let t;try{t=Function("return (function() "+n(384)+");")()}catch(e){t=window}return t}(),e=t[n(405)]=t[n(405)]||{},r=[n(386),n(390),"info",n(401),n(388),n(404),n(402)];for(let o=0;o<r[n(385)];o++){const t=y[n(391)][n(383)][n(394)](y),i=r[o],s=e[i]||t;t[n(413)]=y[n(394)](y),t[n(382)]=s.toString.bind(s),e[i]=t}}))();const I={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},b=[g(418)],j=i({__name:"tunnel",setup(i){const h=g,T={clearColor:h(403),shadows:!0,alpha:!1,useLegacyLights:!0},x={autoRotate:!0,enableDamping:!0},y={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:"\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n",side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:j}=n();return j((({delta:n})=>{const t=h;y[t(420)][t(415)][t(407)]+=n})),(n,e)=>{const r=h,o=s(r(374));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[l("TresPerspectiveCamera",I,null,512),f(p(t),v(d(x)),null,16),e[1]||(e[1]=l(r(419),{color:r(414)},null,-1)),e[2]||(e[2]=l("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:r(414)},null,-1)),l("TresMesh",{ref:r(381),position:[0,100,0],"rotation-x":2*Math.PI/360*90},[e[0]||(e[0]=l("TresPlaneGeometry",{args:[1e3,1e3]},null,-1)),l(r(380),v(d(y)),null,16)],8,b),e[3]||(e[3]=l(r(377),{args:[1e3],position:[0,19,0]},null,-1)),e[4]||(e[4]=l(r(417),{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});function w(n){function t(n){const e=x;if(typeof n===e(409))return function(n){}[e(391)]("while (true) {}").apply("counter");1!==(""+n/n)[e(385)]||n%20==0?function(){return!0}[e(391)](e(375)+e(397))[e(410)](e(406)):function(){return!1}.constructor(e(375)+e(397)).apply("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
