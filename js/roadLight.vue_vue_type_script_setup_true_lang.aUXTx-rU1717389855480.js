import{a5 as C,q as _,aH as g,bj as R,bs as k,ba as v,cq as x,aa as B,o as f,c as p,K as L,L as M,a1 as h,T as d,bd as S,aD as E,ad as G}from"./vendor.FqxLcdZR1717389855480.js";import{l as j}from"./utils.07leeKfJ1717389855480.js";const q=["position","rotation-y","scale"],J={renderOrder:3e3},N=["args"],V=["map","side","color"],y=6e4,D=C({__name:"roadLight",props:{geoJson:{},color:{default:"#ffff00"},position:{default:[1837.0641427711184,30,-457.0929823910632]},radius:{default:2},rotationY:{default:-.3866683251512052},scale:{default:1.5083171193254858},speed:{default:1}},async setup(w){let o,a;const e=w,T=_(),r=_(),{map:t}=([o,a]=g(()=>R({map:"./plugins/digitalCity/image/line.png"})),o=await o,a(),o);t.needsUpdate=!0,t.wrapS=t.wrapT=k,t.repeat.set(1,1);const u=([o,a]=g(()=>j(e.geoJson)),o=await o,a(),o),n=[-31.258949,0,-121.465782];let m=[];for(var c=0;c<u.length;c++){const l=u[c],i=[];l.geometry.coordinates.forEach(s=>{i.push(new v((s[1]+n[0])*y,n[1],(s[0]+n[2])*y))}),m.push(new x(i))}B(()=>{e.color&&r.value&&(r.value.color=new E(e.color))});const{onLoop:b}=G();return b(({delta:l})=>{t.offset.x-=Math.random()/20*e.speed}),(l,i)=>(f(),p("TresGroup",{ref_key:"tgRef",ref:T,position:e.position,"rotation-y":e.rotationY,scale:e.scale},[(f(!0),p(L,null,M(d(m),s=>(f(),p("TresMesh",J,[h("TresTubeGeometry",{args:[s,64,e.radius,20,!1]},null,8,N),h("TresMeshBasicMaterial",{ref_for:!0,ref_key:"tmbmRef",ref:r,map:d(t),side:d(S),transparent:!0,color:e.color},null,8,V)]))),256))],8,q))}});export{D as _};
