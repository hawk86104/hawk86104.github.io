import{_ as e,K as s}from"./@tresjs.DqJWjmrH1761100244891.js";import{P as a}from"./tweakpane.CqZAnw7f1761100244891.js";import"./OimoPhysicsBuffer.RP9_cA631761100244891.js";import{_ as t}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.C3soJrEE1761100244891.js";import"./vanilla.esm.5.5.0.CsbunUBT1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";import"./PackedMipMapGenerator.D8sBv6ND1761100244891.js";import{u as i}from"./utils.pnKaL4Sf1761100244891.js";import{d as r,ac as l,w as o,G as n,o as p,I as m,u,r as d,g as c,b as f,e as j,h as g,ap as b,a9 as w,aa as h,m as _}from"./@vue.CKlgtJke1761100244891.js";import{aE as B,aD as v,V as y,cE as M,a6 as S,bJ as k}from"./three.DvmzhRS91761100244891.js";import{g as x}from"./utils.C0mxMjXV1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./oimophysics.CfVKSiAm1761100244891.js";import"./dither.glsl.tNAdkJUa1761100244891.js";import"./Reflector.C-cnab8L1761100244891.js";import"./vite-plugin-qiankun.B06WoCqG1761100244891.js";import"./utils.CNife3_q1761100244891.js";import"./object-hash.zo7S6bgL1761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./jszip.DTlig5CR1761100244891.js";import"./three-stdlib.Bkbtr8od1761100244891.js";import"./@tweenjs.C9YEcV0Y1761100244891.js";import"./utils.Cw0sHfqi1761100244891.js";import"./@fesjs.DbrjsIBT1761100244891.js";import"./vue-router.AUgVvTqV1761100244891.js";import"./lodash-es.DWe8oqPO1761100244891.js";import"./pinia.-nSLzXOT1761100244891.js";import"./@qlin.y-0Z8WnK1761100244891.js";import"./@babel.BPq7uOAK1761100244891.js";import"./@floating-ui.Bhq4ibgf1761100244891.js";import"./@juggle.Vc7cP4_P1761100244891.js";import"./useTexture.6Wyv_tgl1761100244891.js";import"./three-mesh-bvh.-a2uGGuV1761100244891.js";import"./d3-geo.C51lZA-81761100244891.js";const T=["args"],L=["blending","map","side","alphaMap","color"],D=r({__name:"streamLine",props:{color:{default:"#2bc4dc"},radius:{default:.2},speed:{default:1},radialSegments:{default:6},tubularSegments:{default:64},closed:{type:Boolean,default:!1},clockwise:{type:Boolean,default:!0},fewNum:{default:1},linesList:{default:()=>[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[15,0,15]]}},async setup(s){let a,t;const r=s,d=([a,t]=l(()=>i("./plugins/digitalCity/image/line2.png")),a=await a,t(),a);d.needsUpdate=!0,d.wrapS=d.wrapT=B,d.repeat.set(r.fewNum,1),d.rotation=r.clockwise?0:Math.PI,d.generateMipmaps=!1,d.magFilter=v;let c=[];r.linesList.forEach(e=>{c.push((new y).fromArray(e))});const f=new M(c),{onBeforeRender:j}=e();return j(()=>{d.offset.x+=.002*r.speed}),o(()=>[r.clockwise,r.fewNum],([e,s])=>{d.rotation=e?0:Math.PI,d.repeat.set(s,1)}),(e,s)=>(p(),n("TresMesh",null,[m("TresTubeGeometry",{args:[u(f),r.tubularSegments,r.radius,r.radialSegments,r.closed]},null,8,T),m("TresMeshBasicMaterial",{blending:k,map:u(d),side:S,alphaMap:u(d),transparent:!0,color:r.color},null,8,L)]))}}),G=r({__name:"streamLines",async setup(e){let i,r;const o=d({reflectivity:.1,showGridHelper:!1,scale:5}),n=d({color:"#bd01ff",radius:.2,speed:1,tubularSegments:64,radialSegments:6,closed:!1,clockwise:!1,fewNum:1,linesList:[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[13,0,15]]}),B=new a;B.addBinding(n,"color",{label:"流光颜色"}),B.addBinding(n,"radius",{label:"管道半径",min:.01,max:1,step:.01}),B.addBinding(n,"speed",{label:"跑动速度",min:.1,max:10,step:.1}),B.addBinding(n,"tubularSegments",{label:"管道路径平滑",min:1,max:100,step:1}),B.addBinding(n,"radialSegments",{label:"管道壁圆润",min:1,max:20,step:1}),B.addBinding(n,"closed",{label:"闭合管道"}),B.addBinding(n,"clockwise",{label:"顺时针流动"}),B.addBinding(n,"fewNum",{label:"流线数量",min:1,max:10,step:1});const v=([i,r]=l(()=>x("./plugins/simpleGIS/json/320000_full.json")),i=await i,r(),i);return(e,a)=>{const i=c("TresCanvas");return p(),f(i,{clearColor:"#201919","window-size":""},{default:j(()=>[a[0]||(a[0]=m("TresPerspectiveCamera",{position:[25,25,25],fov:45,near:.1,far:1e4},null,-1)),g(u(s),{enableDamping:"",autoRotate:""}),(p(),f(b,null,{default:j(()=>[g(D,w(h(n)),null,16)]),_:1})),(p(),f(b,null,{default:j(()=>[g(D,{linesList:u(v),position:[0,0,-4]},null,8,["linesList"])]),_:1})),(p(),f(b,null,{default:j(()=>[g(u(t),_({position:[0,-.5,0]},o),null,16)]),_:1}))]),_:1})}}});export{G as default};
