import{e,o as n}from"./@tresjs.rE98Wm941741490461506.js";import{C as t,_ as o,V as r}from"./three.Vxh8Czkt1741490461506.js";import{P as i}from"./tweakpane.yDiyAAkA1741490461506.js";import{d as a,w as l,o as u,H as c,N as s,u as v,r as f,e as p,f as g,g as d,j as m,aj as y,ak as x,m as P}from"./@vue.NRI7TcgI1741490461506.js";import"./postprocessing.wUw4_rsV1741490461506.js";import"./@vueuse.9Z-Ayxy41741490461506.js";const z=S;!function(e,n){const t=S,o=I();for(;;)try{if(511783===-parseInt(t(448))/1+-parseInt(t(440))/2+-parseInt(t(465))/3+-parseInt(t(470))/4*(parseInt(t(490))/5)+parseInt(t(484))/6+parseInt(t(469))/7+-parseInt(t(442))/8*(-parseInt(t(493))/9))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=S,n=new RegExp(e(478)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=b(e(483));n.test(o+e(460))&&t[e(438)](o+e(487))?b():o("0")}))()}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(e,n){const t=I();return(S=function(e,n){return t[e-=432]})(e,n)}w(void 0,(function(){const e=S;let n;try{n=Function(e(439)+e(455)+");")()}catch(r){n=window}const t=n[e(479)]=n.console||{},o=["log",e(434),e(433),e(472),e(436),e(447),e(495)];for(let i=0;i<o.length;i++){const n=w.constructor[e(446)][e(441)](w),r=o[i],a=t[r]||n;n[e(456)]=w[e(441)](w),n[e(482)]=a[e(482)][e(441)](a),t[r]=n}}))();const C=[z(450)],h=[z(494),z(476),z(477),z(459)];function I(){const e=["#184650",'{}.constructor("return this")( )',"__proto__","length","counter","wireframe","chain","TresMesh","TresShaderMaterial","uPerlinWaveAmplitude","colorOffset","2115645iBzDUI","uPerlinWaveIterations","uPerlinWaveSpeed","apply","998004AIFfPY","8fmPBET","Vector2","error","Color","uPerlinWaveFrequency","waveAmplitude","vertexShader","fragmentShader","function *\\( *\\)","console","sinWaveSpeed","sinWaveFrequency","toString","init","3166890asnJFl","stateObject","DoubleSide","input","perlinWaveAmplitude","action","2042205LlbXwH","colorDamping","set","90iqidGj","side","trace","perlinWaveFrequency","perlinWaveIterations","constructor","call","uSinWaveSpeed","TresPlaneGeometry","while (true) {}","uColorOffset","info","warn","uSinWaveFrequency","exception","peakColor","test","return (function() ","1805278EIhKdh","bind","2297944WLgPYL","value","uWaveAmplitude","valleyColor","prototype","table","606298snrGCp","#b367ff","rotation-x","uPeakColor","perlinWaveSpeed","gger"];return(I=function(){return e})()}const _=a({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(449)},valleyColor:{default:z(454)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const i=z,a=n,f={uTime:{value:0},uPeakColor:{value:new t(a[i(437)])},uValleyColor:{value:new(o[i(473)])(a[i(445)])},uColorOffset:{value:a[i(464)]},uColorDamping:{value:a[i(491)]},uSinWaveFrequency:{value:new(o[i(471)])(a[i(481)].x,a[i(481)].y)},uWaveAmplitude:{value:a[i(475)]},uSinWaveSpeed:{value:new r(a[i(480)].x,a[i(480)].y)},uPerlinWaveIterations:{value:a[i(497)]},uPerlinWaveFrequency:{value:a.perlinWaveFrequency},uPerlinWaveAmplitude:{value:a[i(488)]},uPerlinWaveSpeed:{value:a[i(452)]}},{onLoop:p}=e();return p((({elapsed:e})=>{const n=i;f.uTime[n(443)]=e})),l((()=>a),(()=>{const e=i;f[e(451)].value.setStyle(a[e(437)]),f.uValleyColor[e(443)].setStyle(a[e(445)]),f[e(432)][e(443)]=a.colorOffset,f.uColorDamping.value=a.colorDamping,f[e(435)].value.set(a.sinWaveFrequency.x,a[e(481)].y),f[e(444)][e(443)]=a[e(475)],f[e(500)][e(443)][e(492)](a.sinWaveSpeed.x,a[e(480)].y),f[e(466)][e(443)]=a.perlinWaveIterations,f[e(474)][e(443)]=a[e(496)],f[e(463)][e(443)]=a.perlinWaveAmplitude,f[e(467)][e(443)]=a.perlinWaveSpeed}),{deep:!0}),(e,n)=>{const t=i;return u(),c(t(461),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=s(t(501),{args:[10,10,512,512]},null,-1)),s(t(462),{side:o[t(486)],vertexShader:v("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:v("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:f,wireframe:e.wireframe},null,8,h)],8,C)}}});function b(e){function n(e){const t=S;if("string"==typeof e)return function(e){}.constructor(t(502))[t(468)](t(458));1!==(""+e/e)[t(457)]||e%20==0?function(){return!0}[t(498)]("debu"+t(453))[t(499)](t(489)):function(){return!1}[t(498)]("debu"+t(453))[t(468)](t(485)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const A=F;!function(e,n){const t=F,o=D();for(;;)try{if(677724===-parseInt(t(493))/1*(-parseInt(t(509))/2)+-parseInt(t(499))/3*(parseInt(t(506))/4)+parseInt(t(496))/5*(-parseInt(t(483))/6)+-parseInt(t(523))/7+-parseInt(t(522))/8+-parseInt(t(521))/9+parseInt(t(536))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const q=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(510)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(e,n){const t=D();return(F=function(e,n){return t[e-=478]})(e,n)}!function(){q(this,(function(){const e=F,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(511),"i"),o=j(e(537));n.test(o+e(512))&&t.test(o+e(497))?j():o("0")}))()}();const T=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(510)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();T(void 0,(function(){const e=F,n=function(){const e=F;let n;try{n=Function("return (function() "+e(513)+");")()}catch(t){n=window}return n}(),t=n[e(481)]=n[e(481)]||{},o=[e(515),"warn",e(524),e(489),e(508),"table",e(488)];for(let r=0;r<o[e(501)];r++){const n=T[e(514)][e(530)][e(502)](T),i=o[r],a=t[i]||n;n[e(520)]=T[e(502)](T),n[e(507)]=a[e(507)][e(502)](a),t[i]=n}}))();const k=a({__name:A(503),setup(e){const t=A,r={clearColor:t(529),shadows:!0,alpha:!1,shadowMapType:o[t(485)],outputColorSpace:o[t(495)],toneMapping:o[t(500)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},a=f({peakColor:t(534),valleyColor:t(519),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),l=new i({title:"参数",expanded:!0});return l[t(494)](a,t(533),{label:t(540)}),l[t(494)](a,t(516),{label:"山峰颜色"}),l.addBinding(a,"valleyColor",{label:t(492)}),l[t(494)](a,t(528),{label:t(538),min:.01,max:3,step:.01}),l[t(494)](a,t(490),{label:"颜色抑制",min:.01,max:6,step:.01}),l.addBinding(a,"sinWaveFrequency",{label:"正弦波频率",picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),l[t(494)](a,t(535),{label:t(518),min:0,max:2,step:.01}),l[t(494)](a,"sinWaveSpeed",{label:t(480),picker:t(478),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),l.addBinding(a,t(525),{label:t(531),min:1,max:7,step:.1}),l[t(494)](a,"perlinWaveFrequency",{label:t(484),min:0,max:5,step:.01}),l[t(494)](a,t(498),{label:t(505),min:0,max:2,step:.01}),l.addBinding(a,t(526),{label:t(527),min:0,max:2,step:.01}),(e,o)=>{const i=t,l=p(i(539));return u(),g(l,P(r,{"window-size":""}),{default:d((()=>[o[0]||(o[0]=s(i(487),{position:[10,10,10]},null,-1)),m(v(n)),o[1]||(o[1]=s(i(517),{args:[10,10]},null,-1)),m(_,y(x(a)),null,16)])),_:1},16)}}});function j(e){function n(e){const t=F;if(typeof e===t(479))return function(e){}[t(514)](t(486))[t(510)](t(532));1!==(""+e/e)[t(501)]||e%20==0?function(){return!0}[t(514)](t(541)+t(504))[t(491)](t(482)):function(){return!1}.constructor(t(541)+t(504))[t(510)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}function D(){const e=["debu","inline","string","正弦波速度","console","action","19074TkcyHm","小波浪频率","BasicShadowMap","while (true) {}","TresPerspectiveCamera","trace","error","colorDamping","call","山谷颜色","1gUEYQq","addBinding","SRGBColorSpace","450ADJcqS","input","perlinWaveAmplitude","9clPmhN","NoToneMapping","length","bind","waveC","gger","小波浪幅度","1645684ecZpxn","toString","exception","1092422nUClli","apply","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","chain",'{}.constructor("return this")( )',"constructor","log","peakColor","TresGridHelper","正弦波振幅","#310039","__proto__","1086714NaDGDw","6308800LlIduv","7669795AITbCt","info","perlinWaveIterations","perlinWaveSpeed","小波浪速度","colorOffset","#222","prototype","小波浪层数","counter","wireframe","#ff6767","waveAmplitude","36569170vPoIOm","init","颜色偏移","TresCanvas","网格化"];return(D=function(){return e})()}export{k as default};
