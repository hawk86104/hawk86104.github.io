import{_ as n,C as t}from"./three.Rja0AEnA1735866388381.js";import{e as o}from"./@tresjs.FlKhQDQ71735866388381.js";import{g as e}from"./utils.B-Lr6Pag1735866388381.js";import{d as r,b as i,a1 as s,o as c,D as a,J as u,u as l,aj as f,ak as p}from"./@vue.yG49nQHr1735866388381.js";const v=d;!function(n,t){const o=d,e=g();for(;;)try{if(563408===parseInt(o(521))/1+parseInt(o(483))/2*(parseInt(o(462))/3)+-parseInt(o(517))/4+parseInt(o(499))/5*(-parseInt(o(511))/6)+parseInt(o(515))/7+parseInt(o(519))/8+-parseInt(o(490))/9)break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const m=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){m(this,(function(){const n=d,t=new RegExp(n(495)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=w(n(497));t.test(e+n(491))&&o[n(485)](e+"input")?w():e("0")}))()}();const y=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[d(489)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function d(n,t){const o=g();return(d=function(n,t){return o[n-=462]})(n,t)}y(void 0,(function(){const n=d,t=function(){const n=d;let t;try{t=Function(n(505)+n(502)+");")()}catch(o){t=window}return t}(),o=t[n(509)]=t[n(509)]||{},e=[n(475),n(512),n(486),"error",n(488),n(470),"trace"];for(let r=0;r<e[n(496)];r++){const t=y[n(514)][n(474)][n(479)](y),i=e[r],s=o[i]||t;t.__proto__=y[n(479)](y),t[n(484)]=s[n(484)][n(479)](s),o[i]=t}}))();const h=[v(501),"uv"];function g(){const n=["TresShaderMaterial","\n}\n","table","uvs","ShaderChunk","num","prototype","log","stateObject","gger","\nprecision lowp float;\nprecision lowp int;\n","bind","opacity","value","positionSrc","2284ppTlZL","toString","test","info","TresMesh","exception","apply","9700470kcEfLz","chain","time","fog_vertex","set","function *\\( *\\)","length","init","uniforms","139390ZuCtCI","rippleMesh","position",'{}.constructor("return this")( )',"action","debu","return (function() ","\nvarying vec2 vUv;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    ","color","\n  precision lowp float;\n  precision lowp int;\n  uniform float time;\n  uniform float opacity;\n  uniform vec3 color;\n  uniform float num;\n  uniform float speed;\n  varying vec2 vUv;\n  void main() {\n    vec4 fragColor = vec4(0.);\n    float sin = sin((vUv.y - time * speed) * 10. * num);\n    float high = 0.92;\n    float medium = 0.4;\n    if (sin > high) {\n      fragColor = vec4(mix(vec3(.8, 1., 1.), color, (1. - sin) / (1. - high)), 1.);\n    } else if(sin > medium) {\n      fragColor = vec4(color, mix(1., 0., 1.-(sin - medium) / (high - medium)));\n    } else {\n      fragColor = vec4(color, 0.);\n    }\n    vec3 fade = mix(color, vec3(0., 0., 0.), vUv.y);\n    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n  }\n\t","console","fog_pars_vertex","180CoUwlW","warn","pv2","constructor","3498894CtOhNi","counter","942980cTQuBD","#ffff00","7347088ipTyqB","Color","580203ZaXvDX","1878reODfv","height","DoubleSide","speed","call","while (true) {}"];return(g=function(){return n})()}const x=r({__name:v(500),props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:v(518)},opacity:{default:.8},height:{default:100},num:{default:8},speed:{default:.15}},setup(r){const m=v,y=r,d=i(),g={side:n[m(464)],transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:m(478)+n[m(472)][m(510)]+m(506)+n[m(472)][m(493)]+m(469),fragmentShader:m(508),uniforms:{time:{type:m(513),value:0},color:{type:m(471),value:new(n[m(520)])(y[m(507)])},opacity:{type:"pv2",value:y[m(480)]},num:{type:"pv2",value:y[m(473)]},speed:{type:"pv2",value:y[m(465)]}}};let x=null,w=null;const{centerPoint:C,points:_}=e(y[m(482)]);!function(n=[],t){const o=m,e=[],r=[];for(let i=0,s=e[o(496)],c=r.length;i<n[o(496)]-1;i++){let o=1,a=n[i],u=n[i+1];e[s++]=a.x,e[s++]=0,e[s++]=a.y,r[c++]=0,r[c++]=0,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[c++]=1,r[c++]=0,e[s++]=a.x,e[s++]=t,e[s++]=a.y,r[c++]=0,r[c++]=o,e[s++]=a.x,e[s++]=t,e[s++]=a.y,r[c++]=0,r[c++]=o,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[c++]=1,r[c++]=0,e[s++]=u.x,e[s++]=t,e[s++]=u.y,r[c++]=1,r[c++]=o}x=new Float32Array(e),w=new Float32Array(r)}(_,y[m(463)]);const{onLoop:I}=o();return I((({delta:n})=>{const t=m;g[t(498)][t(492)][t(481)]+=n})),s((()=>{const n=m;y[n(507)]&&(g[n(498)][n(507)][n(481)]=new t(y.color)),y.opacity&&(g[n(498)].opacity[n(481)]=y[n(480)]),y.num&&(g[n(498)][n(473)][n(481)]=y.num),y[n(465)]&&(g[n(498)][n(465)][n(481)]=y[n(465)]),d[n(481)]&&d[n(481)][n(501)][n(494)](C.x,d[n(481)].position.y,C.y)})),(n,t)=>{const o=m;return c(),a(o(487),{renderOrder:2200,ref_key:"tresMeshRef",ref:d},[u("TresBufferGeometry",{position:[l(x),3],uv:[l(w),2]},null,8,h),u(o(468),f(p(g)),null,16)],512)}}});function w(n){function t(n){const o=d;if("string"==typeof n)return function(n){}[o(514)](o(467)).apply(o(516));1!==(""+n/n)[o(496)]||n%20==0?function(){return!0}[o(514)](o(504)+o(477))[o(466)](o(503)):function(){return!1}[o(514)](o(504)+"gger").apply(o(476)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{x as _};
