import{q as n,C as t,a6 as e,bV as o,cD as i,aN as r,Z as a,h as s}from"./three.0bBjBDi41721298764655.js";import{p as l,$ as u,N as c}from"./@tresjs.iXEJQd7J1721298764655.js";import{d as f,b as p,a4 as m,a1 as b,o as g,D as v,J as y,aj as d,ak as h,u as w}from"./@vue.Q1VpS3901721298764655.js";const _=S;function z(){const n=["__proto__","TresMeshRef","5118lfzTkg","opacity","TresShaderMaterial","Color","toString","warn","geometry","prototype","TresMesh","glowColor","return (function() ","stateObject",'{}.constructor("return this")( )',"uniforms","position","1264480LQDETH","while (true) {}","test","chain","DoubleSide","call","string","traverse","188983AZvvLT","191323XmlHyt","debu","value","action","input","verticesNeedUpdate","log","uOpacity","init","trace","184UzdeqH","info","#84ccff","bind","counter","table","length","xRayEffect","uTime","sin","477648svrkJx","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","AdditiveBlending","exception","11493nbJDtz","apply","190YliarY","push","console","8cYgXuT","model","172000sLkQIr","function *\\( *\\)","658KBOmrB","gger","constructor"];return(z=function(){return n})()}!function(n,t){const e=S,o=z();for(;;)try{if(398338===parseInt(e(279))/1*(parseInt(e(309))/2)+parseInt(e(300))/3+-parseInt(e(311))/4+-parseInt(e(271))/5+parseInt(e(318))/6*(parseInt(e(313))/7)+parseInt(e(290))/8*(parseInt(e(304))/9)+parseInt(e(306))/10*(-parseInt(e(280))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[S(305)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=S,t=new RegExp(n(312)),e=new RegExp(n(301),"i"),o=C(n(288));t[n(273)](o+n(274))&&e[n(273)](o+n(284))?C():o("0")}))()}();const T=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[S(305)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();T(void 0,(function(){const n=S,t=function(){const n=S;let t;try{t=Function(n(328)+n(330)+");")()}catch(e){t=window}return t}(),e=t.console=t[n(308)]||{},o=[n(286),n(323),n(291),"error",n(303),n(295),n(289)];for(let i=0;i<o[n(296)];i++){const t=T[n(315)][n(325)][n(293)](T),r=o[i],a=e[r]||t;t[n(316)]=T[n(293)](T),t[n(322)]=a.toString[n(293)](a),e[r]=t}}))();const P=y("TresBufferGeometry",null,null,-1);function S(n,t){const e=z();return(S=function(n,t){return e[n-=269]})(n,t)}const I=f({__name:_(297),props:{model:{},color:{default:_(292)},opacity:{default:1}},async setup(i){const r=_;let a,s;const f=i,w=p(),z=[];f[r(310)][r(278)]((t=>{const e=r;t instanceof n&&(t[e(324)][e(285)]=!0,z[e(307)](t[e(324)]))}));const x=([a,s]=m((()=>c({map:"./plugins/medical/image/brainXRayLight.png"}))),a=await a,s(),a),T={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(f.color)},lightningTexture:{type:"t",value:x.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:f[r(319)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e[r(275)],blending:e[r(302)],depthWrite:!1};T[r(269)].offsetY.value=Math[r(299)](5);const{camera:S}=l(),{onLoop:I}=u();return I((({delta:n})=>{const t=r;S[t(282)][t(270)]&&w.value&&(T[t(269)][t(298)][t(282)]+=n)})),b((()=>{const n=r;w[n(282)]&&(w[n(282)][n(324)].dispose(),w.value.geometry=o(z)),f.color&&(T[n(269)][n(327)].value=new(e[n(321)])(f.color)),f[n(319)]&&(T[n(269)][n(287)][n(282)]=f[n(319)])})),(n,t)=>{const e=r;return g(),v(e(326),{ref_key:e(317),ref:w},[P,y(e(320),d(h(T)),null,16)],512)}}});function C(n){function t(n){const e=S;if(typeof n===e(277))return function(n){}[e(315)](e(272)).apply(e(294));1!==(""+n/n)[e(296)]||n%20==0?function(){return!0}[e(315)](e(281)+e(314))[e(276)](e(283)):function(){return!1}[e(315)]("debu"+e(314))[e(305)](e(329)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const M=D;function B(){const n=["50038HrJxQP","return (function() ","geometry","283396axbjEf","warn","afective","uTime","input","Color","while (true) {}","TresPoints","chain","action","semantic","ShaderMaterial","array","episodic","uSlowTime","Mesh","material","constructor","Float32BufferAttribute","42574444KawZFc","brainstem","console","call","mergeGeometries","process","TresBufferGeometry","position","bind","BufferGeometryRef","includes","debu","cerebellum","exception","6645296buDbUE","uOpacity","1678263RBGTOa","6kWGkKA","traverse","function *\\( *\\)","value","push","info","MathUtils","color","18rEvjJn","gger","randInt","3803900dTcttD","4vAgzqJ","test","bubblesEffect","size","toString","amigdala","randFloat","attributes",'{}.constructor("return this")( )',"setAttribute","bubbles","counter","120rIzcet","trace","name","apply","bridge","init","glowColor","map","stateObject","#FFF","TresMeshRef","aDelayDuration","uniforms","opacity","6276336HlRpmp","length","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(B=function(){return n})()}!function(n,t){const e=D,o=B();for(;;)try{if(914537===parseInt(e(439))/1*(-parseInt(e(468))/2)+-parseInt(e(426))/3+-parseInt(e(471))/4*(parseInt(e(451))/5)+parseInt(e(427))/6*(parseInt(e(424))/7)+-parseInt(e(465))/8+-parseInt(e(435))/9*(parseInt(e(438))/10)+parseInt(e(490))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){F(this,(function(){const n=D,t=new RegExp(n(429)),e=new RegExp(n(467),"i"),o=O(n(456));t[n(440)](o+n(479))&&e[n(440)](o+n(475))?O():o("0")}))()}();const U=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();U(void 0,(function(){const n=D,t=function(){const n=D;let t;try{t=Function(n(469)+n(447)+");")()}catch(e){t=window}return t}(),e=t[n(492)]=t[n(492)]||{},o=["log",n(472),n(432),"error",n(423),"table",n(452)];for(let i=0;i<o.length;i++){const t=U.constructor.prototype[n(418)](U),r=o[i],a=e[r]||t;t.__proto__=U.bind(U),t[n(443)]=a[n(443)][n(418)](a),e[r]=t}}))();const j=f({__name:M(441),props:{model:{},color:{default:M(460)},opacity:{default:1}},setup(n){const t=M,o=n,l=[t(473),t(481),t(484),t(495),t(444),t(491),t(455),t(422),"analitic"],c={};o.model[t(428)]((n=>{const o=t;n instanceof e[o(486)]&&l[o(458)]((t=>{const e=o;if(n[e(453)][e(420)](t)){if(c[t]){const o=[c[t],n[e(470)]];return c[t]=i[e(494)](o),c}return c[t]=n[e(470)]}return[]}))}));const f=p(),m=new(e[t(482)])({uniforms:{glowColor:{type:"c",value:new(e[t(476)])(o[t(434)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:o[t(464)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:r,side:a,depthTest:!1,vertexColors:!1,transparent:!0});b((()=>{f[t(430)]&&(()=>{const n=t,o=[],i=[],r=[],a=[];for(let t=0;t<2e4-3*l[n(466)];t+=1){const u=e[n(433)][n(437)](0,l[n(466)]-1),f=l[u],p=c[f][n(446)][n(417)][n(483)][3*t+0]||0,m=c[f][n(446)][n(417)][n(483)][3*t+1]||0,b=c[f][n(446)].position[n(483)][3*t+2]||0;if(i[n(431)](p,m,b),o[t]=s[n(445)](10,20),t%100==0){const t=s[n(437)](100,250)+m;a[n(431)](p,t,b,1)}else a[n(431)](p,m,b,0);r[2*t+0]=e[n(433)][n(445)](.5,1.5),r[2*t+1]=2.5}f[n(430)].setAttribute(n(462),new(e[n(489)])(r,2)),f[n(430)][n(448)](n(449),new(e[n(489)])(a,4)),f[n(430)][n(448)](n(417),new(e[n(489)])(i,3)),f.value[n(448)](n(434),new(e[n(489)])([],3)),f[n(430)][n(448)](n(442),new(e[n(489)])(o,1)),f.value.computeBoundingSphere()})()}));const _=p(),{onLoop:z}=u();return z((({delta:n})=>{const i=t;_.value&&(_[i(430)][i(487)][i(463)][i(474)][i(430)]+=.05,_[i(430)][i(487)][i(463)][i(485)][i(430)]+=1/400),o[i(434)]&&(m[i(463)][i(457)][i(430)]=new(e[i(476)])(o.color)),o.opacity&&(m[i(463)][i(425)][i(430)]=o[i(464)])})),(n,e)=>{const o=t;return g(),v(o(478),{ref_key:o(461),ref:_},[y(o(416),{ref_key:o(419),ref:f},null,512),y("TresShaderMaterial",d(h(w(m))),null,16)],512)}}});function D(n,t){const e=B();return(D=function(n,t){return e[n-=416]})(n,t)}function O(n){function t(n){const e=D;if("string"==typeof n)return function(n){}.constructor(e(477))[e(454)](e(450));1!==(""+n/n)[e(466)]||n%20==0?function(){return!0}[e(488)](e(421)+e(436))[e(493)](e(480)):function(){return!1}[e(488)]("debugger")[e(454)](e(459)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{I as _,j as a};
