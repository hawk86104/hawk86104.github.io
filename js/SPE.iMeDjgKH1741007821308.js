import{X as t,_ as e,bO as i,aX as n,a as o,b as r}from"./three.sBrYSCgq1741007821308.js";const s=h;!function(t,e){const i=h,n=p();for(;;)try{if(516260===parseInt(i(595))/1+parseInt(i(754))/2*(parseInt(i(428))/3)+-parseInt(i(853))/4*(-parseInt(i(550))/5)+parseInt(i(581))/6*(-parseInt(i(447))/7)+-parseInt(i(502))/8*(-parseInt(i(747))/9)+parseInt(i(767))/10*(parseInt(i(688))/11)+-parseInt(i(625))/12*(parseInt(i(547))/13))break;n.push(n.shift())}catch(o){n.push(n.shift())}}();const a=function(){let t=!0;return function(e,i){const n=t?function(){if(i){const t=i.apply(e,arguments);return i=null,t}}:function(){};return t=!1,n}}();!function(){a(this,(function(){const t=h,e=new RegExp(t(776)),i=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),n=f(t(701));e[t(762)](n+"chain")&&i.test(n+t(780))?f():n("0")}))()}();const c=function(){let t=!0;return function(e,i){const n=t?function(){if(i){const t=i[h(556)](e,arguments);return i=null,t}}:function(){};return t=!1,n}}();function h(t,e){const i=p();return(h=function(t,e){return i[t-=389]})(t,e)}c(void 0,(function(){const t=h,e=function(){const t=h;let e;try{e=Function(t(743)+t(652)+");")()}catch(i){e=window}return e}(),i=e.console=e[t(710)]||{},n=[t(647),t(635),t(616),t(825),t(637),"table",t(819)];for(let o=0;o<n.length;o++){const e=c[t(429)].prototype[t(715)](c),r=n[o],s=i[r]||e;e[t(805)]=c[t(715)](c),e[t(651)]=s[t(651)][t(715)](s),i[r]=e}}))();const u={distributions:{BOX:1,SPHERE:2,DISC:3,LINE:4},valueOverLifetimeLength:4};typeof define===s(477)&&define[s(530)]?define(s(658),u):"undefined"!=typeof exports&&typeof module!==s(505)&&(module[s(682)]=u),u[s(394)]=function(t,e,i,n){const o=s;this[o(653)]=i||1,this[o(694)]=e||1,this[o(421)]=t||Float32Array,this[o(773)]=new t(e*this[o(653)]),this[o(645)]=n||0},u[s(394)][s(429)]=u[s(394)],u[s(394)].prototype[s(749)]=function(t,e){const i=s,n=this.array.length;return!e&&(t*=this.componentSize),t<n?this.shrink(t):t>n?this[i(670)](t):void console[i(616)](i(788),t+".",i(798))},u[s(394)][s(727)][s(611)]=function(t){const e=s;return this[e(773)]=this[e(773)][e(789)](0,t),this.size=t,this},u.TypedArrayHelper[s(727)].grow=function(t){const e=s,i=this.array,n=new(this[e(421)])(t);return n[e(468)](i),this[e(773)]=n,this.size=t,this},u[s(394)][s(727)][s(443)]=function(t,e){const i=s;t*=this[i(653)],e*=this[i(653)];const n=[],o=this[i(773)],r=o[i(733)];for(let s=0;s<r;++s)(s<t||s>=e)&&n[i(531)](o[s]);return this[i(525)](0,n),this},u[s(394)][s(727)][s(525)]=function(t,e){const i=s,n=t+e[i(733)];return n>this.array[i(733)]?this[i(670)](n):n<this.array.length&&this[i(611)](n),this.array[i(468)](e,this.indexOffset+t),this},u[s(394)][s(727)][s(852)]=function(t,e){return this.setVec2Components(t,e.x,e.y)},u[s(394)].prototype[s(839)]=function(t,e,i){const n=s,o=this[n(773)],r=this[n(645)]+t*this[n(653)];return o[r]=e,o[r+1]=i,this},u[s(394)][s(727)].setVec3=function(t,e){return this[s(850)](t,e.x,e.y,e.z)},u.TypedArrayHelper[s(727)][s(850)]=function(t,e,i,n){const o=s,r=this[o(773)],a=this.indexOffset+t*this[o(653)];return r[a]=e,r[a+1]=i,r[a+2]=n,this},u[s(394)].prototype[s(462)]=function(t,e){return this[s(677)](t,e.x,e.y,e.z,e.w)},u[s(394)][s(727)][s(677)]=function(t,e,i,n,o){const r=s,a=this[r(773)],c=this[r(645)]+t*this[r(653)];return a[c]=e,a[c+1]=i,a[c+2]=n,a[c+3]=o,this},u[s(394)].prototype.setMat3=function(t,e){const i=s;return this[i(525)](this[i(645)]+t*this[i(653)],e[i(390)])},u[s(394)][s(727)][s(626)]=function(t,e){const i=s;return this.setFromArray(this[i(645)]+t*this[i(653)],e[i(390)])},u.TypedArrayHelper.prototype[s(490)]=function(t,e){return this[s(850)](t,e.r,e.g,e.b)},u[s(394)][s(727)][s(827)]=function(t,e){const i=s;return this.array[this[i(645)]+t*this.componentSize]=e,this},u[s(394)][s(727)][s(744)]=function(t){const e=s;return this[e(773)][this[e(645)]+t]},u[s(394)][s(727)][s(692)]=function(t){const e=s;return this[e(773)][e(789)](this[e(645)]+t*this[e(653)])},u[s(646)]=function(t,e,i){const n=s,o=u[n(646)][n(569)];this.type="string"==typeof t&&o[n(592)](t)?t:"f",this[n(653)]=o[this.type],this[n(746)]=i||Float32Array,this[n(717)]=null,this.bufferAttribute=null,this[n(774)]=!!e,this.updateMin=0,this[n(402)]=0},u[s(646)][s(429)]=u[s(646)],u.ShaderAttribute[s(569)]={f:1,v2:2,v3:3,v4:4,c:3,m3:9,m4:16},u[s(646)][s(727)][s(563)]=function(t,e){const i=s;this[i(499)]=Math[i(404)](t*this[i(653)],this.updateMin*this[i(653)]),this[i(402)]=Math.max(e*this[i(653)],this[i(402)]*this[i(653)])},u[s(646)].prototype[s(603)]=function(){const t=s,e=this.bufferAttribute;!e.updateRange&&(e[t(724)]={});const i=e[t(724)];i[t(764)]=this.updateMin,i[t(488)]=Math[t(404)](this.updateMax-this[t(499)]+this[t(653)],this[t(717)][t(773)][t(733)]),e.needsUpdate=!0},u[s(646)][s(727)].resetUpdateRange=function(){this[s(499)]=0,this.updateMax=0},u[s(646)].prototype[s(400)]=function(){const i=s;this.bufferAttribute[i(779)]=this[i(774)]?t:e[i(508)]},u.ShaderAttribute[s(727)][s(443)]=function(t,e){const i=s;this.typedArray[i(443)](t,e),this[i(527)]()},u.ShaderAttribute[s(727)][s(527)]=function(){const t=s;this.bufferAttribute.array=this[t(717)][t(773)],this[t(809)].updateRange[t(764)]=0,this[t(809)][t(724)][t(488)]=-1,this[t(809)].usage=e[t(508)],this[t(809)][t(551)]=!0},u.ShaderAttribute[s(727)]._ensureTypedArray=function(t){const e=s;null!==this[e(717)]&&this[e(717)][e(694)]===t*this.componentSize||(null!==this[e(717)]&&this[e(717)].size!==t?this[e(717)].setSize(t):null===this.typedArray&&(this.typedArray=new(u[e(394)])(this[e(746)],t,this.componentSize)))},u[s(646)].prototype._createBufferAttribute=function(t){const i=s;if(this[i(554)](t),null!==this.bufferAttribute)return this[i(809)][i(773)]=this.typedArray[i(773)],parseFloat(e[i(559)])>=81&&(this[i(809)][i(488)]=this.bufferAttribute[i(773)][i(733)]/this.bufferAttribute[i(494)]),void(this[i(809)][i(551)]=!0);this[i(809)]=new(e[i(395)])(this[i(717)][i(773)],this[i(653)]),this.bufferAttribute.usage=this[i(774)]?e[i(656)]:e[i(508)]},u[s(646)][s(727)].getLength=function(){const t=s;return null===this[t(717)]?0:this[t(717)][t(773)][t(733)]},u[s(821)]={defines:["#define PACKED_COLOR_SIZE 256.0",s(567)][s(624)]("\n"),uniforms:[s(705),s(512),"uniform sampler2D tex;","uniform vec4 textureAnimation;","uniform float scale;"].join("\n"),attributes:["attribute vec4 acceleration;","attribute vec3 velocity;",s(665),"attribute vec3 rotationCenter;",s(838),s(552),s(583),s(575),s(454)].join("\n"),varyings:[s(755),"#ifdef SHOULD_ROTATE_TEXTURE","    varying float vAngle;","#endif",s(436),s(565),s(684)].join("\n"),branchAvoidanceFunctions:[s(607),s(846),"}","float when_lt(float x, float y) {",s(496),"}",s(529),s(476),"}",s(409),s(524),"}",s(417),s(790),"}","float and(float a, float b) {","    return a * b;","}",s(756),s(822),"}"].join("\n"),unpackColor:[s(497),s(433),s(686),s(586),s(587),s(823),s(713),s(663),"   return c;","}"][s(624)]("\n"),unpackRotationAxis:["vec3 unpackRotationAxis( in float hex ) {",s(433),s(686),s(586),"   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;",s(659),"   c -= vec3( 1.0 );",s(619),"}"].join("\n"),floatOverLifetime:["float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {",s(444),s(422),s(442),s(474),s(734),"",s(703),s(812),s(493),s(748),"    }","",s(722),"}"].join("\n"),colorOverLifetime:[s(535),s(806),"    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );","    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );",s(602),"    return value;","}"][s(624)]("\n"),paramFetchingFunctions:["float getAlive() {",s(691),"}",s(707),"   return params.y;","}","float getMaxAge() {",s(416),"}",s(542),s(693),"}"][s(624)]("\n"),forceFetchingFunctions:[s(672),s(801),"}","vec3 getVelocity( in float age ) {",s(777),"}",s(568),"   return acceleration.xyz * age;","}"][s(624)]("\n"),rotationFunctions:[s(553),"   mat4 getRotationMatrix( in vec3 axis, in float angle) {","       axis = normalize(axis);",s(534),s(430),s(538),"",s(704),s(695),s(700),s(642),s(795),"","   vec3 getRotation( in vec3 pos, in float positionInTime ) {",s(778),s(836),"      }","",s(732),"      vec3 center = rotationCenter;",s(397),s(459),s(391),s(472),s(609),s(599),s(638),s(561),s(795),s(684)][s(624)]("\n"),rotateTexture:[s(654),"",s(781),s(741),s(434),s(851),s(820),s(427),s(594),"",s(555),s(845),"        float framesY = vSpriteSheet.y;",s(728),"        float rowNorm = vSpriteSheet.w;",s(515),s(681),s(594),"","    vec4 rotatedTexture = texture2D( tex, vUv );"][s(624)]("\n")},u[s(423)]={vertex:[u[s(821)][s(786)],u[s(821)][s(601)],u.shaderChunks[s(501)],u[s(821)][s(439)],e[s(483)][s(759)],e[s(483)].logdepthbuf_pars_vertex,e[s(483)][s(630)],u[s(821)][s(831)],u[s(821)][s(441)],u[s(821)][s(742)],u[s(821)][s(828)],u[s(821)].colorOverLifetime,u.shaderChunks[s(829)],u[s(821)][s(549)],u[s(821)][s(766)],s(843),"    highp float age = getAge();","    highp float alive = getAlive();",s(465),s(455),s(740),s(543),"        float wiggleAmount = positionInTime * getWiggle();",s(745),s(662),s(594),s(437),s(621),s(803),s(411),s(751),"    force += vel;","    force *= drag;",s(800),s(521),"    #ifdef SHOULD_WIGGLE_PARTICLES",s(566),s(426),s(757),s(594),s(519),s(514),s(594),s(470),s(770),s(716),s(513),"    #else",s(522),s(594),s(737),"    #ifdef COLORIZE",s(435),s(675),s(431),"           unpackColor( color.y ),",s(495),s(640),s(612),"    #else","       vec3 c = vec3(1.0);",s(594),s(509),s(719),"    #ifdef SHOULD_ROTATE_TEXTURE",s(765),"    #endif",s(555),"        float framesX = textureAnimation.x;",s(413),s(723),"        float totalFrames = textureAnimation.z;","        float frameNumber = mod( (positionInTime * loopCount) * totalFrames, totalFrames );",s(615),s(498),s(461),"        float rowNorm = row / framesY;",s(673),s(721),s(657),s(679),s(594),s(631),s(577),e[s(483)][s(772)],e[s(483)].fog_vertex,"}"][s(624)]("\n"),fragment:[u[s(821)][s(601)],e[s(483)].common,e[s(483)].fog_pars_fragment,i.logdepthbuf_pars_fragment,u[s(821)][s(439)],u[s(821)].branchAvoidanceFunctions,s(843),s(794),s(832),"    #ifdef ALPHATEST",s(698),s(594),u.shaderChunks[s(706)],e[s(483)][s(520)],s(808),"    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );",e[s(483)][s(593)],"}"][s(624)]("\n")},u.utils={types:{BOOLEAN:"boolean",STRING:s(408),NUMBER:s(407),OBJECT:s(636)},ensureTypedArg:(t,e,i)=>typeof t===e?t:i,ensureArrayTypedArg(t,e,i){const n=s;if(Array[n(503)](t)){for(let o=t[n(733)]-1;o>=0;--o)if(typeof t[o]!==e)return i;return t}return this[n(590)](t,e,i)},ensureInstanceOf:(t,e,i)=>void 0!==e&&t instanceof e?t:i,ensureArrayInstanceOf(t,e,i){const n=s;if(Array[n(503)](t)){for(let n=t.length-1;n>=0;--n)if(void 0!==e&&t[n]instanceof e==!1)return i;return t}return this[n(537)](t,e,i)},ensureValueOverLifetimeCompliance(t,e,i){const n=s;e=e||3,i=i||3,!1===Array[n(503)](t[n(669)])&&(t[n(669)]=[t[n(669)]]),!1===Array.isArray(t[n(507)])&&(t._spread=[t[n(507)]]);const o=this[n(473)](t._value[n(733)],e,i),r=this[n(473)](t[n(507)][n(733)],e,i),a=Math[n(830)](o,r);t[n(669)][n(733)]!==a&&(t._value=this[n(600)](t[n(669)],a)),t._spread[n(733)]!==a&&(t[n(507)]=this[n(600)](t[n(507)],a))},interpolateArray(t,e){const i=s,n=t[i(733)],o=["function"==typeof t[0][i(415)]?t[0][i(415)]():t[0]],r=(n-1)/(e-1);for(let s=1;s<e-1;++s){const e=s*r,n=Math[i(414)](e),a=Math.ceil(e),c=e-n;o[s]=this[i(548)](t[n],t[a],c)}return o[i(531)](typeof t[n-1][i(415)]===i(477)?t[n-1][i(415)]():t[n-1]),o},clamp(t,e,i){const n=s;return Math[n(830)](e,Math[n(404)](t,i))},zeroToEpsilon(t,e){let i=1e-5,n=t;return n=e?Math[s(667)]()*i*10:i,t<0&&t>-1e-5&&(n=-n),n},lerpTypeAgnostic(t,i,n){const o=s;let r,a=this[o(632)];return typeof t===a.NUMBER&&typeof i===a[o(456)]?t+(i-t)*n:t instanceof e[o(648)]&&i instanceof e[o(648)]?(r=t[o(415)](),r.x=this[o(671)](t.x,i.x,n),r.y=this[o(671)](t.y,i.y,n),r):t instanceof e[o(758)]&&i instanceof e[o(758)]?(r=t[o(415)](),r.x=this[o(671)](t.x,i.x,n),r.y=this[o(671)](t.y,i.y,n),r.z=this[o(671)](t.z,i.z,n),r):t instanceof e[o(440)]&&i instanceof e[o(440)]?(r=t.clone(),r.x=this[o(671)](t.x,i.x,n),r.y=this[o(671)](t.y,i.y,n),r.z=this[o(671)](t.z,i.z,n),r.w=this[o(671)](t.w,i.w,n),r):t instanceof e[o(491)]&&i instanceof e[o(491)]?(r=t[o(415)](),r.r=this[o(671)](t.r,i.r,n),r.g=this[o(671)](t.g,i.g,n),r.b=this[o(671)](t.b,i.b,n),r):void console[o(635)](o(424),t,i)},lerp:(t,e,i)=>t+(e-t)*i,roundToNearestMultiple(t,e){const i=s;let n=0;return 0===e?t:(n=Math[i(775)](t)%e,0===n?t:t<0?-(Math[i(775)](t)-n):t+e-n)},arrayValuesAreEqual(t){const e=s;for(let i=0;i<t[e(733)]-1;++i)if(t[i]!==t[i+1])return!1;return!0},randomFloat:(t,e)=>t+e*(Math.random()-.5),randomVector3(t,e,i,n,o){const r=s;let a=i.x+(Math[r(667)]()*n.x-.5*n.x),c=i.y+(Math[r(667)]()*n.y-.5*n.y),h=i.z+(Math.random()*n.z-.5*n.z);o&&(a=.5*-o.x+this[r(445)](a,o.x),c=.5*-o.y+this[r(445)](c,o.y),h=.5*-o.z+this.roundToNearestMultiple(h,o.z)),t[r(717)][r(850)](e,a,c,h)},randomColor(t,e,i,n){const o=s;let r=i.r+Math[o(667)]()*n.x,a=i.g+Math.random()*n.y,c=i.b+Math[o(667)]()*n.z;r=this[o(473)](r,0,1),a=this[o(473)](a,0,1),c=this[o(473)](c,0,1),t[o(717)][o(850)](e,r,a,c)},randomColorAsHex:function(){const t=s,i=new(e[t(491)]);return function(e,n,o,r){const s=t,a=o[s(733)],c=[];for(let t=0;t<a;++t){const e=r[t];i[s(661)](o[t]),i.r+=Math.random()*e.x-.5*e.x,i.g+=Math[s(667)]()*e.y-.5*e.y,i.b+=Math[s(667)]()*e.z-.5*e.z,i.r=this.clamp(i.r,0,1),i.g=this[s(473)](i.g,0,1),i.b=this[s(473)](i.b,0,1),c[s(531)](i.getHex())}e.typedArray[s(677)](n,c[0],c[1],c[2],c[3])}}(),randomVector3OnLine(t,e,i,n){const o=s,r=i[o(415)]();r[o(671)](n,Math[o(667)]()),t[o(717)][o(850)](e,r.x,r.y,r.z)},randomVector3OnSphere(t,e,i,n,o,r,a,c){const h=s;let u=2*Math[h(667)]()-1,l=6.2832*Math.random(),f=Math[h(763)](1-u*u),p=this[h(591)](n,o),d=0,m=0,g=0;a&&(p=Math[h(782)](p/a)*a),d=f*Math.cos(l)*p,m=f*Math[h(848)](l)*p,g=u*p,d*=r.x,m*=r.y,g*=r.z,d+=i.x,m+=i.y,g+=i.z,t.typedArray.setVec3Components(e,d,m,g)},seededRandom(t){const e=1e4*Math.sin(t);return e-(0|e)},randomVector3OnDisc(t,e,i,n,o,r,a){const c=s;let h=6.2832*Math[c(667)](),u=Math[c(775)](this.randomFloat(n,o)),l=0,f=0,p=0;a&&(u=Math[c(782)](u/a)*a),l=Math[c(623)](h)*u,f=Math[c(848)](h)*u,l*=r.x,f*=r.y,l+=i.x,f+=i.y,p+=i.z,t[c(717)][c(850)](e,l,f,p)},randomDirectionVector3OnSphere:function(){const t=s,i=new(e[t(758)]);return function(e,n,o,r,s,a,c,h){const u=t;i.copy(a),i.x-=o,i.y-=r,i.z-=s,i[u(500)]()[u(393)](-this[u(591)](c,h)),e[u(717)][u(850)](n,i.x,i.y,i.z)}}(),randomDirectionVector3OnDisc:function(){const t=s,i=new(e[t(758)]);return function(e,n,o,r,s,a,c,h){const u=t;i.copy(a),i.x-=o,i.y-=r,i.z-=s,i.normalize()[u(393)](-this[u(591)](c,h)),e[u(717)][u(850)](n,i.x,i.y,0)}}(),getPackedRotationAxis:function(){const t=s,i=new(e[t(758)]),n=new(e[t(758)]),o=new(e[t(491)]),r=new(e[t(758)])(1,1,1);return function(e,s){const a=t;return i[a(661)](e)[a(500)](),n[a(661)](s)[a(500)](),i.x+=.5*-s.x+Math[a(667)]()*s.x,i.y+=.5*-s.y+Math[a(667)]()*s.y,i.z+=.5*-s.z+Math.random()*s.z,i[a(500)]()[a(573)](r).multiplyScalar(.5),o[a(482)](i.x,i.y,i.z),o.getHex()}}()},u.Group=function(t){const i=s,o=u[i(582)],r=o[i(632)];(t=o[i(590)](t,r[i(824)],{}))[i(702)]=o[i(590)](t[i(702)],r[i(824)],{}),this[i(729)]=e[i(458)][i(649)](),this.fixedTimeStep=o.ensureTypedArg(t[i(696)],r[i(456)],.016),this[i(702)]=o[i(537)](t[i(702)][i(792)],e[i(425)],null),this[i(574)]=o.ensureInstanceOf(t[i(702)][i(410)],e[i(648)],new(e[i(648)])(1,1)),this[i(818)]=o[i(590)](t[i(702)][i(699)],r[i(456)],this[i(574)].x*this.textureFrames.y),this[i(796)]=o[i(590)](t[i(702)][i(485)],r[i(456)],1),this[i(574)][i(830)](new(e[i(648)])(1,1)),this[i(629)]=o.ensureTypedArg(t.hasPerspective,r.BOOLEAN,!0),this.colorize=o[i(590)](t[i(562)],r[i(570)],!0),this[i(532)]=o[i(590)](t[i(532)],r[i(456)],null),this[i(451)]=o[i(590)](t.blending,r[i(456)],n),this[i(811)]=o[i(590)](t[i(811)],r[i(570)],!0),this[i(739)]=parseFloat(o[i(590)](t.alphaTest,r[i(456)],0)),this.depthWrite=o.ensureTypedArg(t[i(446)],r[i(570)],!1),this[i(697)]=o[i(590)](t.depthTest,r[i(570)],!0),this.fog=o[i(590)](t.fog,r.BOOLEAN,!0),this[i(584)]=o.ensureTypedArg(t[i(584)],r[i(456)],300),this[i(604)]=[],this[i(655)]=[],this[i(492)]=[],this[i(489)]=null,this[i(815)]=0,this[i(643)]=!1,this[i(660)]=!1,this[i(844)]=0,this[i(601)]={tex:{type:"t",value:this[i(702)]},textureAnimation:{type:"v4",value:new(e[i(440)])(this.textureFrames.x,this.textureFrames.y,this.textureFrameCount,Math[i(830)](Math[i(775)](this.textureLoop),1))},fogColor:{type:"c",value:this[i(557)]?new(e[i(491)]):null},fogNear:{type:"f",value:10},fogFar:{type:"f",value:200},fogDensity:{type:"f",value:.5},deltaTime:{type:"f",value:0},runTime:{type:"f",value:0},scale:{type:"f",value:this[i(584)]}},this.defines={HAS_PERSPECTIVE:this[i(629)],COLORIZE:this[i(562)],VALUE_OVER_LIFETIME_LENGTH:u[i(540)],SHOULD_ROTATE_TEXTURE:!1,SHOULD_ROTATE_PARTICLES:!1,SHOULD_WIGGLE_PARTICLES:!1,SHOULD_CALCULATE_SPRITE:this[i(574)].x>1||this[i(574)].y>1},this[i(501)]={position:new(u[i(646)])("v3",!0),acceleration:new u.ShaderAttribute("v4",!0),velocity:new u.ShaderAttribute("v3",!0),rotation:new(u[i(646)])("v4",!0),rotationCenter:new(u[i(646)])("v3",!0),params:new(u[i(646)])("v4",!0),size:new(u[i(646)])("v4",!0),angle:new(u[i(646)])("v4",!0),color:new u.ShaderAttribute("v4",!0),opacity:new u.ShaderAttribute("v4",!0)},this[i(469)]=Object[i(406)](this[i(501)]),this[i(464)]=this.attributeKeys.length,this[i(627)]=new(e[i(720)])({uniforms:this[i(601)],vertexShader:u[i(423)][i(753)],fragmentShader:u[i(423)][i(842)],blending:this[i(451)],transparent:this[i(811)],alphaTest:this[i(739)],depthWrite:this[i(446)],depthTest:this.depthTest,defines:this[i(786)],fog:this[i(557)]}),this[i(526)]=new(e[i(736)]),this.mesh=new(e[i(678)])(this[i(526)],this[i(627)]),null===this[i(532)]&&console[i(635)](i(833))},u.Group.constructor=u[s(785)],u[s(785)][s(727)][s(835)]=function(){const t=s;let e,i=this[t(604)],n=i[t(733)]-1,o=this[t(786)];for(;n>=0;--n)e=i[n],!o[t(536)]&&(o.SHOULD_ROTATE_TEXTURE=o[t(596)]||!!Math[t(830)](Math[t(830)][t(556)](null,e[t(666)][t(792)]),Math[t(830)][t(556)](null,e[t(666)].spread))),o[t(457)]=o[t(457)]||!!Math[t(830)](e[t(399)].angle,e[t(399)][t(687)]),o[t(641)]=o[t(641)]||!!Math.max(e[t(449)][t(792)],e[t(449)][t(810)]);this[t(627)][t(551)]=!0},u[s(785)][s(727)]._applyAttributesToGeometry=function(){const t=s;let e,i,n=this[t(501)],o=this.geometry,r=o[t(501)];for(const s in n)n[t(592)](s)&&(e=n[s],i=r[s],i?i[t(773)]=e[t(717)].array:o[t(560)](s,e[t(809)]),e.bufferAttribute[t(551)]=!0);this.geometry.setDrawRange(0,this.particleCount)},u[s(785)].prototype[s(735)]=function(t){const e=s;if(t instanceof u[e(558)]==!1)return void console.error(e(817),t);if(this[e(655)][e(405)](t.uuid)>-1)return void console[e(825)](e(389));if(null!==t[e(791)])return void console[e(825)]("Emitter already belongs to another group. Will not add to requested group.");const i=this[e(501)],n=this[e(844)],o=n+t[e(844)];this[e(844)]=o,null!==this[e(532)]&&this.particleCount>this[e(532)]&&console[e(635)](e(579),this[e(844)],e(726),this[e(532)]),t[e(849)](t[e(750)][e(669)]+t.maxAge._spread),t._setBufferUpdateRanges(this.attributeKeys),t[e(438)](n),t.group=this,t[e(501)]=this[e(501)];for(const r in i)i[e(592)](r)&&i[r][e(481)](null!==this.maxParticleCount?this[e(532)]:this[e(844)]);for(let r=n;r<o;++r)t[e(608)](r),t._assignForceValue(r,"velocity"),t[e(620)](r,e(826)),t[e(418)](r,e(403)),t[e(418)](r,e(694)),t[e(614)](r),t[e(467)](r),t[e(731)](r),t[e(725)](r);return this[e(479)](),this[e(604)][e(531)](t),this.emitterIDs[e(531)](t[e(729)]),this[e(835)](t),this[e(627)].needsUpdate=!0,this[e(526)][e(551)]=!0,this._attributesNeedRefresh=!0,this},u[s(785)].prototype[s(650)]=function(t){const e=s,i=this[e(655)][e(405)](t[e(729)]);if(t instanceof u[e(558)]==!1)return void console.error(e(817),t);if(-1===i)return void console[e(825)]("Emitter does not exist in this group. Will not remove.");const n=t[e(628)],o=n+t[e(844)],r=this.attributes[e(683)][e(717)];for(let s=n;s<o;++s)r.array[4*s]=0,r[e(773)][4*s+1]=0;this[e(604)][e(443)](i,1),this[e(655)][e(443)](i,1);for(const s in this[e(501)])this[e(501)].hasOwnProperty(s)&&this[e(501)][s][e(443)](n,o);this[e(844)]-=t[e(844)],t[e(847)](),this[e(643)]=!0},u[s(785)][s(727)][s(709)]=function(){const t=s,e=this[t(492)],i=this._createNewWhenPoolEmpty;if(e[t(733)])return e[t(517)]();if(i){const e=new u.Emitter(this[t(489)]);return this[t(735)](e),e}return null},u[s(785)][s(727)][s(784)]=function(t){const e=s;if(t instanceof u.Emitter!=!1)return t.reset(),this[e(492)][e(840)](t),this;console[e(825)](e(613),t)},u[s(785)][s(727)][s(718)]=function(){return this[s(492)]},u.Group[s(727)][s(622)]=function(t,e,i){const n=s;let o;this[n(489)]=e,this[n(815)]=!!i;for(let r=0;r<t;++r)o=Array.isArray(e)?new(u[n(558)])(e[r]):new(u[n(558)])(e),this.addEmitter(o),this[n(784)](o);return this},u[s(785)].prototype[s(834)]=function(t){const i=s,n=this[i(709)](),o=this;if(null!==n)return t instanceof e[i(758)]&&(n[i(539)][i(792)][i(661)](t),n[i(539)][i(792)]=n[i(539)].value),n[i(484)](),setTimeout((()=>{n[i(674)](),o.releaseIntoPool(n)}),1e3*Math.max(n[i(396)],n.maxAge[i(792)]+n[i(750)][i(810)])),this;console[i(647)](i(392))},u[s(785)][s(727)].triggerPoolEmitter=function(t,e){const i=s;if(typeof t===i(407)&&t>1)for(let n=0;n<t;++n)this[i(834)](e);else this._triggerSingleEmitter(e);return this},u[s(785)][s(727)][s(634)]=function(t){const e=s;this[e(601)][e(523)][e(792)]+=t,this[e(601)][e(541)][e(792)]=t},u[s(785)][s(727)]._resetBufferRanges=function(){const t=s;let e=this[t(469)],i=this[t(464)]-1,n=this.attributes;for(;i>=0;--i)n[e[i]].resetUpdateRange()},u[s(785)][s(727)][s(398)]=function(t){const e=s;let i,n,o,r=this[e(469)],a=this[e(464)]-1,c=this.attributes,h=t[e(685)];for(;a>=0;--a)i=r[a],n=h[i],o=c[i],o.setUpdateRange(n[e(404)],n[e(830)]),o.flagUpdate()},u.Group[s(727)][s(511)]=function(t){const e=s;var i=this[e(604)],n=i.length,o=t||this.fixedTimeStep,r=this[e(469)],a=this[e(501)];if(this._updateUniforms(o),this[e(768)](),0!==n||!1!==this._attributesNeedRefresh||!1!==this[e(660)]){for(var c,h=0;h<n;++h)(c=i[h])[e(511)](o),this[e(398)](c);if(!0===this[e(660)]){for(h=this.attributeCount-1;h>=0;--h)a[r[h]][e(400)]();this[e(660)]=!1}if(!0===this._attributesNeedRefresh){for(h=this[e(464)]-1;h>=0;--h)a[r[h]][e(527)]();this[e(643)]=!1,this[e(660)]=!0}}},u[s(785)][s(727)][s(571)]=function(){const t=s;return this[t(526)][t(571)](),this.material[t(571)](),this},u[s(558)]=function(t){const i=s,n=u[i(582)],a=n[i(632)],c=u[i(540)];(t=n[i(590)](t,a[i(824)],{})).position=n[i(590)](t[i(539)],a[i(824)],{}),t[i(664)]=n[i(590)](t[i(664)],a[i(824)],{}),t.acceleration=n[i(590)](t[i(826)],a[i(824)],{}),t[i(814)]=n[i(590)](t[i(814)],a[i(824)],{}),t[i(644)]=n[i(590)](t[i(644)],a[i(824)],{}),t[i(399)]=n[i(590)](t[i(399)],a[i(824)],{}),t[i(545)]=n.ensureTypedArg(t[i(545)],a[i(824)],{}),t[i(403)]=n[i(590)](t[i(403)],a[i(824)],{}),t[i(694)]=n[i(590)](t[i(694)],a[i(824)],{}),t[i(666)]=n[i(590)](t[i(666)],a[i(824)],{}),t.wiggle=n[i(590)](t[i(449)],a[i(824)],{}),t[i(750)]=n[i(590)](t[i(750)],a.OBJECT,{}),t.onParticleSpawn&&console.warn(i(528)),this.uuid=o[i(649)](),this.type=n[i(590)](t[i(816)],a[i(456)],u[i(518)][i(475)]),this[i(539)]={_value:n[i(537)](t[i(539)][i(792)],e[i(758)],new r),_spread:n.ensureInstanceOf(t[i(539)][i(810)],e[i(758)],new(e[i(758)])),_spreadClamp:n[i(537)](t[i(539)].spreadClamp,e[i(758)],new(e[i(758)])),_distribution:n[i(590)](t[i(539)].distribution,a[i(456)],this[i(816)]),_randomise:n[i(590)](t[i(539)].randomise,a.BOOLEAN,!1),_radius:n[i(590)](t[i(539)][i(814)],a[i(456)],10),_radiusScale:n[i(537)](t.position[i(708)],e[i(758)],new r(1,1,1)),_distributionClamp:n[i(590)](t.position.distributionClamp,a[i(456)],0)},this.velocity={_value:n[i(537)](t[i(664)][i(792)],e[i(758)],new r),_spread:n[i(537)](t[i(664)][i(810)],r,new(e[i(758)])),_distribution:n[i(590)](t[i(664)][i(799)],a.NUMBER,this[i(816)]),_randomise:n[i(590)](t[i(539)][i(797)],a.BOOLEAN,!1)},this[i(826)]={_value:n.ensureInstanceOf(t[i(826)][i(792)],e[i(758)],new(e[i(758)])),_spread:n[i(537)](t[i(826)][i(810)],e[i(758)],new(e[i(758)])),_distribution:n[i(590)](t[i(826)][i(799)],a[i(456)],this.type),_randomise:n.ensureTypedArg(t[i(539)][i(797)],a[i(570)],!1)},this[i(644)]={_value:n[i(590)](t[i(644)].value,a[i(456)],0),_spread:n.ensureTypedArg(t[i(644)][i(810)],a.NUMBER,0),_randomise:n[i(590)](t[i(539)][i(797)],a.BOOLEAN,!1)},this[i(449)]={_value:n[i(590)](t[i(449)][i(792)],a.NUMBER,0),_spread:n[i(590)](t.wiggle[i(810)],a[i(456)],0)},this.rotation={_axis:n.ensureInstanceOf(t[i(399)][i(450)],e[i(758)],new r(0,1,0)),_axisSpread:n[i(537)](t[i(399)][i(606)],e[i(758)],new(e[i(758)])),_angle:n[i(590)](t.rotation.angle,a.NUMBER,0),_angleSpread:n.ensureTypedArg(t.rotation[i(687)],a[i(456)],0),_static:n[i(590)](t[i(399)].static,a.BOOLEAN,!1),_center:n.ensureInstanceOf(t[i(399)][i(432)],e[i(758)],this.position._value[i(415)]()),_randomise:n.ensureTypedArg(t[i(539)][i(797)],a[i(570)],!1)},this.maxAge={_value:n[i(590)](t[i(750)][i(792)],a[i(456)],2),_spread:n[i(590)](t.maxAge[i(810)],a[i(456)],0)},this.color={_value:n[i(420)](t[i(545)][i(792)],e[i(491)],new(e[i(491)])),_spread:n.ensureArrayInstanceOf(t.color[i(810)],e[i(758)],new(e[i(758)])),_randomise:n[i(590)](t[i(539)][i(797)],a[i(570)],!1)},this.opacity={_value:n[i(588)](t[i(403)][i(792)],a.NUMBER,1),_spread:n[i(588)](t[i(403)][i(810)],a[i(456)],0),_randomise:n[i(590)](t[i(539)][i(797)],a[i(570)],!1)},this[i(694)]={_value:n[i(588)](t[i(694)].value,a[i(456)],1),_spread:n[i(588)](t.size[i(810)],a.NUMBER,0),_randomise:n[i(590)](t[i(539)][i(797)],a[i(570)],!1)},this[i(666)]={_value:n[i(588)](t.angle[i(792)],a.NUMBER,0),_spread:n[i(588)](t[i(666)][i(810)],a[i(456)],0),_randomise:n.ensureTypedArg(t[i(539)][i(797)],a.BOOLEAN,!1)},this.particleCount=n[i(590)](t[i(844)],a[i(456)],100),this.duration=n[i(590)](t[i(396)],a.NUMBER,null),this[i(597)]=n[i(590)](t[i(597)],a.BOOLEAN,!1),this[i(730)]=n[i(590)](t.activeMultiplier,a[i(456)],1),this[i(783)]=n[i(590)](t[i(783)],a[i(456)],1),this[i(412)]=n[i(590)](t[i(412)],a[i(570)],!0),this[i(752)]=0,this.activationIndex=0,this.attributeOffset=0,this[i(589)]=0,this[i(466)]=0,this[i(605)]=0,this[i(791)]=null,this.attributes=null,this[i(580)]=null,this[i(676)]={position:n.ensureTypedArg(t[i(539)][i(797)],a[i(570)],!1)||n[i(590)](t[i(814)][i(797)],a[i(570)],!1),velocity:n[i(590)](t[i(664)][i(797)],a[i(570)],!1),acceleration:n[i(590)](t[i(826)].randomise,a[i(570)],!1)||n[i(590)](t[i(644)][i(797)],a[i(570)],!1),rotation:n[i(590)](t[i(399)][i(797)],a.BOOLEAN,!1),rotationCenter:n.ensureTypedArg(t.rotation[i(797)],a.BOOLEAN,!1),size:n[i(590)](t[i(694)].randomise,a[i(570)],!1),color:n[i(590)](t[i(545)].randomise,a[i(570)],!1),opacity:n[i(590)](t[i(403)][i(797)],a[i(570)],!1),angle:n[i(590)](t[i(666)][i(797)],a[i(570)],!1)},this[i(486)]={},this.updateCounts={},this[i(793)]={maxAge:"params",position:"position",velocity:i(664),acceleration:i(826),drag:i(826),wiggle:i(683),rotation:i(399),size:i(694),color:"color",opacity:i(403),angle:i(666)};for(const e in this[i(793)])this[i(793)][i(592)](e)&&(this[i(802)][this[i(793)][e]]=0,this[i(486)][this.updateMap[e]]=!1,this._createGetterSetters(this[e],e));this.bufferUpdateRanges={},this[i(469)]=null,this[i(464)]=0,n.ensureValueOverLifetimeCompliance(this.color,c,c),n[i(510)](this[i(403)],c,c),n.ensureValueOverLifetimeCompliance(this[i(694)],c,c),n[i(510)](this.angle,c,c)},u.Emitter.constructor=u.Emitter,u[s(558)][s(727)][s(712)]=function(t,e){const i=s,n=this;for(const o in t)if(t.hasOwnProperty(o)){const r=o.replace("_","");Object[i(804)](t,r,{get:function(t){return function(){return this[t]}}(o),set:function(t){return function(i){const o=h,r=n[o(793)][e],s=this[t],a=u[o(540)];"_rotationCenter"===t?(n[o(486)][o(598)]=!0,n.updateCounts[o(598)]=0):"_randomise"===t?n[o(676)][r]=i:(n[o(486)][r]=!0,n.updateCounts[r]=0),n.group[o(835)](),this[t]=i,Array[o(503)](s)&&u[o(582)][o(510)](n[e],a,a)}}(o)})}},u[s(558)][s(727)][s(504)]=function(t){const e=s;this[e(469)]=t,this[e(464)]=t[e(733)];for(let i=this[e(464)]-1;i>=0;--i)this[e(685)][t[i]]={min:Number[e(478)],max:Number[e(419)]}},u[s(558)][s(727)][s(849)]=function(t){const e=s,i=this[e(844)];this[e(396)]?this[e(752)]=i/(t<this[e(396)]?t:this.duration):this.particlesPerSecond=i/t},u.Emitter.prototype[s(438)]=function(t){const e=s;this.attributeOffset=t,this.activationIndex=t,this[e(837)]=t+this[e(844)]},u.Emitter[s(727)][s(463)]=function(t,e){const i=s;switch(t){case i(539):this[i(608)](e);break;case"velocity":case i(826):this._assignForceValue(e,t);break;case i(694):case"opacity":this[i(418)](e,t);break;case i(666):this._assignAngleValue(e);break;case i(683):this[i(731)](e);break;case i(399):this._assignRotationValue(e);break;case"color":this[i(725)](e)}},u.Emitter[s(727)][s(608)]=function(t){const e=s,i=u[e(518)],n=u.utils,o=this[e(539)],r=this.attributes[e(539)],a=o[e(669)],c=o._spread;switch(o._distribution){case i[e(475)]:n[e(689)](r,t,a,c,o[e(617)]);break;case i.SPHERE:n.randomVector3OnSphere(r,t,a,o[e(761)],o[e(507)].x,o[e(578)],o[e(617)].x,o._distributionClamp||this.particleCount);break;case i[e(668)]:n[e(711)](r,t,a,o[e(761)],o[e(507)].x,o[e(578)],o._spreadClamp.x);break;case i[e(813)]:n[e(487)](r,t,a,c)}},u[s(558)][s(727)][s(620)]=function(t,e){const i=s;let n,o,r,a,c,h=u[i(518)],l=u.utils,f=this[e],p=f[i(669)],d=f[i(507)];switch(f[i(506)]){case h[i(475)]:l[i(689)](this[i(501)][e],t,p,d);break;case h[i(576)]:n=this[i(501)][i(539)].typedArray[i(773)],c=3*t,o=n[c],r=n[c+1],a=n[c+2],l[i(610)](this.attributes[e],t,o,r,a,this.position[i(669)],f[i(669)].x,f[i(507)].x);break;case h[i(668)]:n=this[i(501)][i(539)][i(717)][i(773)],c=3*t,o=n[c],r=n[c+1],a=n[c+2],l[i(572)](this[i(501)][e],t,o,r,a,this[i(539)][i(669)],f[i(669)].x,f[i(507)].x);break;case h[i(813)]:l.randomVector3OnLine(this[i(501)][e],t,p,d)}if("acceleration"===e){const e=l[i(473)](l[i(591)](this[i(644)][i(669)],this[i(644)][i(507)]),0,1);this[i(501)][i(826)].typedArray[i(773)][4*t+3]=e}},u.Emitter.prototype[s(418)]=function(t,e){const i=s;let n,o=this[i(501)][e][i(717)],r=this[e],a=u[i(582)];a[i(690)](r[i(669)])&&a[i(690)](r._spread)?(n=Math.abs(a[i(591)](r[i(669)][0],r[i(507)][0])),o[i(677)](t,n,n,n,n)):o.setVec4Components(t,Math[i(775)](a[i(591)](r[i(669)][0],r[i(507)][0])),Math[i(775)](a[i(591)](r[i(669)][1],r[i(507)][1])),Math[i(775)](a[i(591)](r._value[2],r[i(507)][2])),Math[i(775)](a[i(591)](r[i(669)][3],r._spread[3])))},u[s(558)][s(727)][s(614)]=function(t){const e=s;let i,n=this[e(501)][e(666)][e(717)],o=this[e(666)],r=u[e(582)];r[e(690)](o[e(669)])&&r[e(690)](o[e(507)])?(i=r.randomFloat(o._value[0],o._spread[0]),n[e(677)](t,i,i,i,i)):n[e(677)](t,r[e(591)](o[e(669)][0],o._spread[0]),r.randomFloat(o[e(669)][1],o[e(507)][1]),r[e(591)](o[e(669)][2],o[e(507)][2]),r[e(591)](o[e(669)][3],o._spread[3]))},u.Emitter.prototype[s(731)]=function(t){const e=s;this[e(501)][e(683)][e(717)][e(677)](t,this[e(597)]?1:0,0,Math[e(775)](u[e(582)][e(591)](this[e(750)]._value,this.maxAge[e(507)])),u[e(582)][e(591)](this[e(449)]._value,this[e(449)][e(507)]))},u.Emitter[s(727)]._assignRotationValue=function(t){const e=s;this.attributes[e(399)].typedArray[e(850)](t,u.utils[e(714)](this.rotation[e(618)],this.rotation[e(639)]),u[e(582)][e(591)](this.rotation[e(771)],this.rotation[e(453)]),this.rotation[e(841)]?0:1),this[e(501)].rotationCenter[e(717)][e(760)](t,this[e(399)]._center)},u[s(558)].prototype[s(725)]=function(t){const e=s;u[e(582)][e(452)](this[e(501)][e(545)],t,this[e(545)][e(669)],this.color[e(507)])},u[s(558)][s(727)][s(585)]=function(t){const e=s;let i,n,o=this.resetFlags,r=this[e(486)],a=this.updateCounts,c=this[e(469)];for(let s=this[e(464)]-1;s>=0;--s)i=c[s],n=r[i],!0!==o[i]&&!0!==n||(this._assignValue(i,t),this[e(564)](i,t),!0===n&&a[i]===this.particleCount?(r[i]=!1,a[i]=0):1==n&&++a[i])},u.Emitter[s(727)][s(564)]=function(t,e){const i=s,n=this[i(685)][t];n[i(404)]=Math[i(404)](e,n[i(404)]),n[i(830)]=Math[i(830)](e,n[i(830)])},u[s(558)].prototype[s(768)]=function(){const t=s;let e,i=this[t(685)],n=this.bufferUpdateKeys,o=this[t(769)]-1;for(;o>=0;--o)e=n[o],i[e].min=Number[t(478)],i[e][t(830)]=Number[t(419)]},u.Emitter[s(727)][s(847)]=function(){const t=s;this.particlesPerSecond=0,this.attributeOffset=0,this[t(807)]=0,this[t(605)]=0,this[t(791)]=null,this[t(501)]=null,this[t(580)]=null,this[t(466)]=0},u[s(558)][s(727)]._decrementParticleCount=function(){--this[s(605)]},u[s(558)][s(727)][s(448)]=function(){++this[s(605)]},u.Emitter.prototype._checkParticleAges=function(t,e,i,n){const o=s;for(var r,a,c,h,u=e-1;u>=t;--u)0!==(h=i[r=4*u])&&(c=i[r+1],a=i[r+2],1===this[o(783)]?(c+=n)>=a&&(c=0,h=0,this._decrementParticleCount()):(c-=n)<=0&&(c=a,h=0,this[o(546)]()),i[r]=h,i[r+1]=c,this._updateAttributeUpdateRange("params",u))},u[s(558)][s(727)][s(787)]=function(t,e,i,n){const o=s,r=this.direction;for(var a,c,h=t;h<e;++h)0!=i[a=4*h]&&1!==this.particleCount||(this._incrementParticleCount(),i[a]=1,this._resetParticle(h),c=n*(h-t),i[a+1]=-1===r?i[a+2]-c:c,this[o(564)](o(683),h))},u[s(558)][s(727)].tick=function(t){const e=s;if(this[e(597)])return;null===this[e(580)]&&(this[e(580)]=this[e(501)][e(683)].typedArray.array);const i=this.attributeOffset,n=i+this.particleCount,o=this[e(580)],r=this[e(752)]*this[e(730)]*t,a=this[e(807)];if(this[e(768)](),this[e(680)](i,n,o,t),!1===this[e(412)])return void(this[e(466)]=0);if(null!==this.duration&&this[e(466)]>this.duration)return this[e(412)]=!1,void(this[e(466)]=0);const c=1===this[e(844)]?a:0|a,h=Math.min(c+r,this.activationEnd),u=h-this.activationIndex|0,l=u>0?t/u:0;this._activateParticles(c,h,o,l),this[e(807)]+=r,this.activationIndex>n&&(this[e(807)]=i),this[e(466)]+=t},u[s(558)].prototype[s(533)]=function(t){const e=s;if(this[e(466)]=0,this[e(412)]=!1,!0===t){const t=this[e(628)],o=t+this[e(844)],r=this.paramsArray,s=this[e(501)][e(683)][e(809)];for(var i,n=o-1;n>=t;--n)r[i=4*n]=0,r[i+1]=0;s[e(724)][e(764)]=0,s[e(724)][e(488)]=-1,s.needsUpdate=!0}return this},u[s(558)][s(727)][s(484)]=function(){return this[s(412)]=!0,this},u[s(558)][s(727)][s(674)]=function(){return this[s(412)]=!1,this},u[s(558)].prototype[s(516)]=function(){const t=s;return null!==this[t(791)]?this[t(791)][t(650)](this):console[t(825)](t(460)),this};const l=u;function f(t){function e(t){const i=h;if("string"==typeof t)return function(t){}[i(429)](i(633))[i(556)](i(401));1!==(""+t/t)[i(733)]||t%20==0?function(){return!0}[i(429)]("debu"+i(471))[i(544)]("action"):function(){return!1}.constructor(i(480)+i(471))[i(556)](i(738)),e(++t)}try{if(t)return e;e(0)}catch(i){}}function p(){const t=["        vSpriteSheet.z = columnNorm;","spe","   c *= vec3( 2.0 );","_attributesNeedDynamicReset","copy","        float wiggleCos = isAlive * cos( wiggleAmount );","   c.b = b / PACKED_COLOR_DIVISOR;","velocity","attribute vec4 rotation;","angle","random","DISC","_value","grow","lerp","vec4 getPosition( in float age ) {","        vSpriteSheet.x = 1.0 / framesX;","disable","           positionInTime,","resetFlags","setVec4Components","Points","        vSpriteSheet.w = rowNorm;","_checkParticleAges","        vUv.y = 1.0 - (gl_PointCoord.y * framesY + rowNorm);","exports","params","#endif","bufferUpdateRanges","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","angleSpread","362538YVDCBb","randomVector3","arrayValuesAreEqual","   return params.x;","getComponentValueAtIndex","   return params.w;","size","                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,","fixedTimeStep","depthTest","       if ( vColor.w < float(ALPHATEST) ) discard;","frameCount","                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,","init","texture","    for( int i = 0; i < VALUE_OVER_LIFETIME_LENGTH - 1; ++i ) {","       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,","uniform float deltaTime;","rotateTexture","float getAge() {","radiusScale","getFromPool","console","randomVector3OnDisc","_createGetterSetters","   c.g = g / PACKED_COLOR_DIVISOR;","getPackedRotationAxis","bind","    #ifdef HAS_PERSPECTIVE","typedArray","getPool","    vColor = vec4( c, o );","ShaderMaterial","        vSpriteSheet.y = 1.0 / framesY;","    return value;","        float loopCount = textureAnimation.w;","updateRange","_assignColorValue","particles, can support only","prototype","        float columnNorm = vSpriteSheet.z;","uuid","activeMultiplier","_assignParamsValue","      vec3 axis = unpackRotationAxis( rotation.x );","length","    value += attr[ 0 ] * when_eq( deltaAge, 0.0 );","addEmitter","BufferGeometry","    float pointSizePerspective = pointSize * perspective;","stateObject","alphaTest","    highp float isAlive = when_gt( alive, 0.0 );","       float x = gl_PointCoord.x - 0.5;","unpackRotationAxis","return (function() ","getValueAtIndex","        float wiggleSin = isAlive * sin( wiggleAmount );","arrayType","2899467KxBUhI","       value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );","setSize","maxAge","    float drag = 1.0 - (positionInTime * 0.5) * acceleration.w;","particlesPerSecond","vertex","4LGfWYW","varying vec4 vColor;","float or(float a, float b) {","        pos.z += wiggleSin;","Vector3","common","setVec3","_radius","test","sqrt","offset","        vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );","rotationFunctions","10cdQVUl","_resetBufferRanges","bufferUpdateCount","    highp float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;","_angle","logdepthbuf_vertex","array","dynamicBuffer","abs","function *\\( *\\)","   return velocity * age;","      if( rotation.y == 0.0 ) {","usage","input","    #ifdef SHOULD_ROTATE_TEXTURE","round","direction","releaseIntoPool","Group","defines","_activateParticles","TypedArray is already of size:","subarray","  return 1.0 - when_gt(x, y);","group","value","updateMap","    vec3 outgoingLight = vColor.xyz;","   }","textureLoop","randomise","Will not resize.","distribution","    force += accel * age;","   return modelViewMatrix * vec4( position, 1.0 );","updateCounts","    vec3 force = vec3( 0.0 );","defineProperty","__proto__","    vec3 value = vec3( 0.0 );","activationIndex","    outgoingLight = vColor.xyz * rotatedTexture.xyz;","bufferAttribute","spread","transparent","       fIndex = float( i );","LINE","radius","_createNewWhenPoolEmpty","type","`emitter` argument must be instance of SPE.Emitter. Was provided with:","textureFrameCount","trace","       float s = sin( -vAngle );","shaderChunks","    return min(a + b, 1.0);","   c.r = r / PACKED_COLOR_DIVISOR;","OBJECT","error","acceleration","setNumber","floatOverLifetime","paramFetchingFunctions","max","branchAvoidanceFunctions","    ","SPE.Group: No maxParticleCount specified. Adding emitters after rendering will probably cause errors.","_triggerSingleEmitter","_updateDefines","           return pos;","activationEnd","attribute vec4 params;","setVec2Components","unshift","_static","fragment","void main() {","particleCount","        float framesX = vSpriteSheet.x;","    return max(sign(x - y), 0.0);","_onRemove","sin","_calculatePPSValue","setVec3Components","       float c = cos( -vAngle );","setVec2","21764YRWqvn","Emitter already exists in this group. Will not add again.","elements","      float angle = 0.0;","SPE.Group pool ran out.","multiplyScalar","TypedArrayHelper","BufferAttribute","duration","      vec3 translated;","_updateBuffers","rotation","resetDynamic","counter","updateMax","opacity","min","indexOf","keys","number","string","float when_ge(float x, float y) {","frames","    vec3 pos = vec3( position );","alive","        float framesY = textureAnimation.y;","floor","clone","   return params.z;","float when_le(float x, float y) {","_assignAbsLifetimeValue","NEGATIVE_INFINITY","ensureArrayInstanceOf","TypedArrayConstructor","    float deltaAge = positionInTime * float( VALUE_OVER_LIFETIME_LENGTH - 1 );","shaders","Invalid argument types, or argument types do not match:","Texture","        pos.y += wiggleCos;","       vUv = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );","906111GGYAuJ","constructor","       float c = cos(angle);","           unpackColor( color.x ),","center","   vec3 c = vec3( 0.0 );","       float y = 1.0 - gl_PointCoord.y - 0.5;","       vec3 c = isAlive * getColorOverLifetime(","#ifdef SHOULD_CALCULATE_SPRITE","    vec3 vel = getVelocity( age );","_setAttributeOffset","varyings","Vector4","unpackColor","    float fIndex = 0.0;","splice","    highp float value = 0.0;","roundToNearestMultiple","depthWrite","14coyZOp","_incrementParticleCount","wiggle","axis","blending","randomColorAsHex","_angleSpread","attribute vec4 opacity;","    highp float positionInTime = (age / maxAge);","NUMBER","SHOULD_ROTATE_PARTICLES","MathUtils","      mat4 rotationMatrix;","Emitter does not belong to a group, cannot remove.","        float columnNorm = column / framesX;","setVec4","_assignValue","attributeCount","    highp float maxAge = getMaxAge();","age","_assignRotationValue","set","attributeKeys","    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );","gger","      angle += when_eq( rotation.z, 0.0 ) * rotation.y;","clamp","    float shouldApplyValue = 0.0;","BOX","    return 1.0 - abs( sign( x - y ) );","function","POSITIVE_INFINITY","_applyAttributesToGeometry","debu","_createBufferAttribute","setRGB","ShaderChunk","enable","loop","updateFlags","randomVector3OnLine","count","_poolCreationSettings","setColor","Color","_pool","       shouldApplyValue = and( when_gt( deltaAge, fIndex ), when_le( deltaAge, fIndex + 1.0 ) );","itemSize","           unpackColor( color.z ),","    return min( max(1.0 - sign(x - y), 0.0), 1.0 );","vec3 unpackColor( in float hex ) {","        float row = floor( (frameNumber - column) / framesX );","updateMin","normalize","attributes","16FyhduJ","isArray","_setBufferUpdateRanges","undefined","_distribution","_spread","StaticDrawUsage","    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );","ensureValueOverLifetimeCompliance","tick","uniform float runTime;","        float perspective = scale / length( mvPosition.xyz );","        pos = getRotation( pos, positionInTime );","        vUv.x = gl_PointCoord.x * framesX + columnNorm;","remove","pop","distributions","    #ifdef SHOULD_ROTATE_PARTICLES","logdepthbuf_fragment","    pos += force;","        float perspective = 1.0;","runTime","  return 1.0 - when_lt(x, y);","setFromArray","geometry","forceUpdateAll","onParticleSpawn has been removed. Please set properties directly to alter values at runtime.","float when_eq( float x, float y ) {","amd","push","maxParticleCount","reset","       float s = sin(angle);","vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {","SHOULD_CALCULATE_SPRITE","ensureInstanceOf","       float oc = 1.0 - c;","position","valueOverLifetimeLength","deltaTime","float getWiggle() {","    #ifdef SHOULD_WIGGLE_PARTICLES","call","color","_decrementParticleCount","10866323HDbOyn","lerpTypeAgnostic","forceFetchingFunctions","815WjoDiK","needsUpdate","attribute vec4 size;","#ifdef SHOULD_ROTATE_PARTICLES","_ensureTypedArray","    #ifdef SHOULD_CALCULATE_SPRITE","apply","fog","Emitter","REVISION","setAttribute","      return center - vec3( rotationMatrix * vec4( translated, 0.0 ) );","colorize","setUpdateRange","_updateAttributeUpdateRange","    varying vec4 vSpriteSheet;","        pos.x += wiggleSin;","#define PACKED_COLOR_DIVISOR 255.0","vec3 getAcceleration( in float age ) {","typeSizeMap","BOOLEAN","dispose","randomDirectionVector3OnDisc","add","textureFrames","attribute vec4 color;","SPHERE","    gl_Position = projectionMatrix * mvPosition;","_radiusScale","SPE.Group: maxParticleCount exceeded. Requesting","paramsArray","419142HJxycO","utils","attribute vec4 angle;","scale","_resetParticle","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","ensureArrayTypedArg","attributeEnd","ensureTypedArg","randomFloat","hasOwnProperty","fog_fragment","    #endif","995346apaWSa","SHOULD_ROTATE_TEXTURE","isStatic","rotationCenter","      translated = rotationCenter - pos;","interpolateArray","uniforms","    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );","flagUpdate","emitters","activeParticleCount","axisSpread","float when_gt(float x, float y) {","_assignPositionValue","      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime );","randomDirectionVector3OnSphere","shrink","       );","Argument is not instanceof SPE.Emitter:","_assignAngleValue","        float column = floor(mod( frameNumber, framesX ));","info","_spreadClamp","_axis","   return c;","_assignForceValue","    vec3 accel = getAcceleration( age );","addPool","cos","join","36AHAmnd","setMat4","material","attributeOffset","hasPerspective","fog_pars_vertex","    gl_PointSize = pointSizePerspective;","types","while (true) {}","_updateUniforms","warn","object","exception","      rotationMatrix = getRotationMatrix( axis, angle );","_axisSpread","           unpackColor( color.w )","SHOULD_WIGGLE_PARTICLES","                   0.0,                                0.0,                                0.0,                                1.0);","_attributesNeedRefresh","drag","indexOffset","ShaderAttribute","log","Vector2","generateUUID","removeEmitter","toString",'{}.constructor("return this")( )',"componentSize","    vec2 vUv = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","emitterIDs","DynamicDrawUsage"];return(p=function(){return t})()}export{l as _};
