import{k as a,a as e}from"./@tresjs.GoDhnrau1751425979313.js";import{P as t}from"./tweakpane.C0HtAJSg1751425979313.js";import{a9 as s,n,ab as o,c as r,aw as i,ay as l}from"./three.BYAbq0a61751425979313.js";import{h as d}from"./heatmap.js-fix.BCIgpYDS1751425979313.js";import{d as p,a3 as u,a2 as c,G as m,o as h,u as v,r as f,h as g,e as y,f as x,I as b,j as w,am as _,ak as j,al as C,m as k}from"./@vue.Mugdq9o81751425979313.js";import"./postprocessing.B2tDG3sT1751425979313.js";import"./@vueuse.BoGTEdua1751425979313.js";import"./@amap.CGUF9xH41751425979313.js";const B=["object"],M=p({__name:"heatmapClickCom",props:{show2dCanvas:{type:Boolean,default:!0},radius:{default:20}},async setup(e){let t,i;const l=e,{nodes:p}=([t,i]=u((()=>a("https://opensource.cdn.icegl.cn/model/heatmap/test.glb",{draco:!0,decoderPath:"./draco/"}))),t=await t,i(),t);p.mesh_0.position.set(-5088.96,-3.08,39374.7),p.mesh_0.scale.setScalar(.01);let f=null,g=null,y=null;g=new s((y=document.createElement("heatmap-canvas"),y.style.position="absolute",y.style.top="40px",y.style.left="0",document.body.appendChild(y),f=d.create({container:y,width:256,height:256,blur:"0.8",radius:l.radius}),f._renderer.canvas.style.border="1px solid #5384ff",f._renderer.canvas.onclick=function(a){f.addData({x:a.layerX,y:a.layerY,value:1,radius:l.radius}),f.setDataMax(1),g&&(g.needsUpdate=!0)},f)._renderer.canvas);const x=new n({vertexShader:"\n\tvarying vec2 vUv;\n\tvoid main() {\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\tvUv = uv;\n\t}\n\t",fragmentShader:"\n\tuniform sampler2D heightMap;\n\tuniform float uOpacity;\n\tvarying vec2 vUv;\n\tvoid main() {\n\t\tgl_FragColor = vec4(texture2D(heightMap, vUv.xy).rgb, uOpacity);\n\t}\n\t",uniforms:{uOpacity:{value:1},heightMap:{type:"t",value:g}},depthWrite:!0,depthTest:!0,transparent:!0,side:o});p.mesh_0.material=x;return(a=>{a.computeBoundingBox();const{max:e,min:t}=a.boundingBox;a.deleteAttribute("uv");const s=e.x-t.x,n=e.z-t.z,o=[];for(let r=0;r<a.attributes.position.count;r++)o.push((a.attributes.position.getX(r)-t.x)/s),o.push((a.attributes.position.getZ(r)-t.z)/n);const i=new Float32Array(o);a.setAttribute("uv",new r(i,2))})(p.mesh_0.geometry),c((()=>{y.style.display=""+(l.show2dCanvas?"block":"none")})),(a,e)=>(h(),m("primitive",{object:v(p).mesh_0},null,8,B))}}),T=p({__name:"heatmapClick",setup(a){const s={clearColor:"#030311",shadows:!0,alpha:!0,outputColorSpace:l,shadowMapType:i,useLegacyLights:!0,antialias:!0},n=f({show2dCanvas:!0,radius:20}),o=new t({title:"参数",expanded:!0});return o.addBinding(n,"show2dCanvas",{label:"显示二维图"}),o.addBinding(n,"radius",{label:"圆圈的大小",min:.1,max:30,step:.1}),o.addButton({title:"点击左侧蓝色画框"}),(a,t)=>{const o=g("TresCanvas");return h(),y(o,k(s,{"window-size":""}),{default:x((()=>[t[0]||(t[0]=b("TresPerspectiveCamera",{position:[21,34,55],fov:60,near:1,far:1e5},null,-1)),w(v(e),{autoRotate:!1,autoRotateSpeed:2}),t[1]||(t[1]=b("TresDirectionalLight",{position:[5,10,7.5],color:"#ffffff",intensity:5},null,-1)),t[2]||(t[2]=b("TresGridHelper",{args:[50,25]},null,-1)),(h(),y(_,null,{default:x((()=>[w(M,j(C(n)),null,16)])),_:1}))])),_:1},16)}}});export{T as default};
