import{c0 as n,ak as e,am as t,C as o,aB as a,a as r}from"./three.bc6MLGU_1735031078130.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.dTM0HLnZ1735031078130.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as P,aj as M,ak as y,F as b}from"./@vue.-THQH3GC1735031078130.js";import"./@vueuse.COyzlgw71735031078130.js";const C=S;!function(n,e){const t=S,o=z();for(;;)try{if(362620===-parseInt(t(528))/1*(-parseInt(t(520))/2)+-parseInt(t(558))/3+-parseInt(t(560))/4*(parseInt(t(541))/5)+parseInt(t(523))/6*(parseInt(t(500))/7)+-parseInt(t(515))/8*(-parseInt(t(525))/9)+-parseInt(t(540))/10*(parseInt(t(502))/11)+parseInt(t(556))/12*(-parseInt(t(538))/13))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t[S(562)](e,arguments);return t=null,n}}:function(){};return n=!1,o}}();function z(){const n=["TresBufferGeometry","console","input","prototype","function *\\( *\\)","radius","trace","49isNKrn","random","2358191YVJOhE","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","table","exception","position","stateObject","toString","chain","return (function() ","setAttribute","TresPerspectiveCamera","info","aRandomness","40UvuXzS",'{}.constructor("return this")( )',"TresPoints","count","clone","4jynEbN","branches","cos","121782ObaHOs","length","990207SihGff","constructor","counter","178412QYAUZz","lerp","call","bufferRef","forEach","uniforms","black","string","value","sin","13TwQjWL","size","10LPRgaG","430OjiQej","warn","color","action","init","a-randomness","bind","randomnessPower","while (true) {}","error","outsideColor","gger","__proto__","log","geometry","3466128vpeyLD","aScale","7977TKDiLD","#b5f28d","8396sGevXQ","debu","apply","#1b3984"];return(z=function(){return n})()}!function(){x(this,(function(){const n=S,e=new RegExp(n(568)),t=new RegExp(n(503),"i"),o=_(n(545));e.test(o+n(509))&&t.test(o+n(566))?_():o("0")}))()}();const j=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t[S(562)](e,arguments);return t=null,n}}:function(){};return n=!1,o}}();function S(n,e){const t=z();return(S=function(n,e){return t[n-=500]})(n,e)}j(void 0,(function(){const n=S,e=function(){const n=S;let e;try{e=Function(n(510)+n(516)+");")()}catch(t){e=window}return e}(),t=e[n(565)]=e[n(565)]||{},o=[n(554),n(542),n(513),n(550),n(505),n(504),n(570)];for(let a=0;a<o.length;a++){const e=j[n(526)][n(567)][n(547)](j),r=o[a],s=t[r]||e;e[n(553)]=j[n(547)](j),e[n(508)]=s[n(508)][n(547)](s),t[r]=e}}))();const T=[C(506),"a-scale",C(543),C(546)],I=u({__name:"galaxy",setup(u){const x=C,z={clearColor:x(534),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:e,toneMapping:t,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(559),outsideColor:x(563)},S=new o(j.insideColor),I=new o(j[x(551)]),_=new Float32Array(3*j[x(518)]),A=new Float32Array(3*j.count),F=new Float32Array(j[x(518)]),O=new Float32Array(3*j[x(518)]);for(let n=0;n<j[x(518)];n++){const e=3*n,t=Math.random()*j[x(569)],o=n%j.branches*Math.PI*2/j[x(521)];_[e]=Math[x(522)](o)*t,_[e+1]=0,_[e+2]=Math[x(537)](o)*t;const a=Math[x(501)]()**j[x(548)]*(Math.random()<.5?-1:1),r=Math.random()**j.randomnessPower*(Math[x(501)]()<.5?-1:1),s=Math[x(501)]()**j[x(548)]*(Math[x(501)]()<.5?-1:1);O[e]=a,O[e+1]=r,O[e+2]=s;const i=S[x(519)]();i[x(529)](I,t/j.radius),A[e+0]=i.r,A[e+1]=i.g,A[e+2]=i.b,F[n]=Math.random()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[x(539)]}}};const k=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const e=x;k[e(536)]&&(k.value.material[e(533)].uTime[e(536)]=n)}));const{count:L,size:D,radius:G,branches:Q,spin:U,randomness:Z,randomnessPower:B,insideColor:J,outsideColor:K}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(559),outsideColor:"#1b3984"});return f([L.value,D.value,G[x(536)],Q[x(536)],U.value,Z[x(536)],B[x(536)],J.value,K[x(536)]],(n=>{const e=x;n[e(532)](((n,t)=>{const o=e;j[Object.keys(j)[t]]=n[o(536)]})),function(){const n=x;if(k[n(536)]){const e=new o(j.insideColor),t=new o(j[n(551)]),a=new Float32Array(3*j[n(518)]),s=new Float32Array(3*j[n(518)]),i=new Float32Array(j.count),c=new Float32Array(3*j.count);for(let o=0;o<j[n(518)];o++){const r=3*o,l=Math.random()*j[n(569)],u=o%j.branches*Math.PI*2/j[n(521)];a[r]=Math[n(522)](u)*l,a[r+1]=0,a[r+2]=Math.sin(u)*l;const d=Math[n(501)]()**j.randomnessPower*(Math[n(501)]()<.5?-1:1),f=Math[n(501)]()**j[n(548)]*(Math[n(501)]()<.5?-1:1),m=Math[n(501)]()**j.randomnessPower*(Math[n(501)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=e[n(519)]();p[n(529)](t,l/j[n(569)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math[n(501)]()}k.value[n(555)][n(511)]("position",new r(a,3)),k[n(536)][n(555)][n(511)](n(514),new r(c,3)),k.value[n(555)][n(511)](n(543),new r(s,3)),k[n(536)].geometry[n(511)](n(557),new r(i,1))}}()})),(n,e)=>{const t=x,o=m("TresCanvas");return p(),h(b,null,[v(g(c)),v(o,M(y(z)),{default:w((()=>[e[0]||(e[0]=P(t(512),{position:[3,3,3]},null,-1)),P(t(517),{ref_key:t(531),ref:k},[P(t(564),{position:[g(_),3],"a-scale":[g(F),1],color:[g(A),3],"a-randomness":[g(O),3]},null,8,T),P("TresShaderMaterial",M(y(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function _(n){function e(n){const t=S;if(typeof n===t(535))return function(n){}[t(526)](t(549)).apply(t(527));1!==(""+n/n)[t(524)]||n%20==0?function(){return!0}.constructor(t(561)+t(552))[t(530)](t(544)):function(){return!1}[t(526)](t(561)+"gger")[t(562)](t(507)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{I as default};
