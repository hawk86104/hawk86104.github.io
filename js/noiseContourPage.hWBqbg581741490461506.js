import{m as n,e,a as t,o as r}from"./@tresjs.rE98Wm941741490461506.js";import{W as o,V as i,ci as s,c6 as a,c4 as u,a0 as c,m as f,aR as l}from"./three.Vxh8Czkt1741490461506.js";import{d as p,a3 as v,a2 as m,o as d,H as h,N as g,u as x,F as y,e as w,f as D,g as I,j as S,al as E,m as R}from"./@vue.NRI7TcgI1741490461506.js";import"./postprocessing.wUw4_rsV1741490461506.js";import"./@vueuse.9Z-Ayxy41741490461506.js";const b=P;!function(n,e){const t=P,r=N();for(;;)try{if(427479===parseInt(t(130))/1*(-parseInt(t(152))/2)+parseInt(t(114))/3+parseInt(t(162))/4*(-parseInt(t(117))/5)+-parseInt(t(151))/6+parseInt(t(167))/7*(-parseInt(t(134))/8)+parseInt(t(161))/9+parseInt(t(136))/10*(parseInt(t(144))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(153)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){_(this,(function(){const n=P,e=new RegExp(n(137)),t=new RegExp(n(150),"i"),r=F(n(155));e[n(165)](r+"chain")&&t[n(165)](r+n(124))?F():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(153)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(n,e){const t=N();return(P=function(n,e){return t[n-=113]})(n,e)}function N(){const n=["5UnImBb","debu","#ffffff","prototype","log","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","stateObject","input","gger","console","iTime","texture",'{}.constructor("return this")( )',"20731EIwxJX","toString","counter","TresMeshPhongMaterial","568TLGLjZ","noiseContourMeshRef2","1677180uxDdOc","function *\\( *\\)","error","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","tShadow","innerHeight","side","constructor","66vdqFcg","addPass","extensions","innerWidth","renderToScreen","table","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","2610612QfxQpM","14aiGQSI","apply","value","init","TresMesh","length","exception","bind","action","3799539NPQisu","2674444IIDbep","call","string","test","uniforms","3164DoLytu","render","839766EOkWJp","__proto__","info"];return(N=function(){return n})()}C(void 0,(function(){const n=P,e=function(){const n=P;let e;try{e=Function("return (function() "+n(129)+");")()}catch(t){e=window}return e}(),t=e.console=e[n(126)]||{},r=[n(121),"warn",n(116),n(138),n(158),n(149),"trace"];for(let o=0;o<r[n(157)];o++){const e=C[n(143)][n(120)].bind(C),i=r[o],s=t[i]||e;e[n(115)]=C.bind(C),e[n(131)]=s[n(131)][n(159)](s),t[i]=e}}))();const T=["side","rotation-x"],j=[b(142)],U="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",M=b(139),k=b(122),z=p({__name:"noiseContour",async setup(r){const p=b;let w,D;const{camera:I,renderer:S,scene:E,sizes:R}=n(),_=([w,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),w=await w,D(),w),{onLoop:C,onAfterLoop:P}=e(),N=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),z=new i(window[p(147)],window[p(141)]);let F=null;const L=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:z}},vertexShader:U,fragmentShader:M}),A=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:U,fragmentShader:k});return A[p(148)]=!0,A.material[p(146)].derivatives=!0,m((()=>{const n=p;R.width.value&&(F=new a(S[n(154)]),F.addPass(new u(E[n(154)],I.value)),F.addPass(L),F[n(145)](A))})),C((({elapsed:n})=>{const e=p;S.value.render(E[e(154)],I.value,N),L[e(166)][e(140)].value=N[e(128)],A[e(166)][e(127)][e(154)]=n})),P((()=>{F&&F[p(113)]()})),(n,e)=>{const t=p;return d(),h(y,null,[g(t(156),{ref:t(135),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g("TresBoxGeometry",{args:[400,400,400]},null,-1),g(t(133),{color:t(119),shininess:0},null,-1)]),8,T),g(t(156),{ref:"noiseContourMeshRef1",side:x(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g(t(133),{color:t(119),shininess:0},null,-1)]),8,j)],64)}}});function F(n){function e(n){const t=P;if(typeof n===t(164))return function(n){}.constructor("while (true) {}").apply(t(132));1!==(""+n/n)[t(157)]||n%20==0?function(){return!0}[t(143)](t(118)+t(125))[t(163)](t(160)):function(){return!1}[t(143)](t(118)+t(125))[t(153)](t(123)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const L=Q;!function(n,e){const t=Q,r=G();for(;;)try{if(717362===parseInt(t(330))/1*(-parseInt(t(364))/2)+parseInt(t(331))/3+-parseInt(t(355))/4*(parseInt(t(365))/5)+parseInt(t(362))/6+parseInt(t(351))/7*(parseInt(t(367))/8)+-parseInt(t(332))/9+-parseInt(t(342))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const A=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Q(328)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function Q(n,e){const t=G();return(Q=function(n,e){return t[n-=325]})(n,e)}!function(){A(this,(function(){const n=Q,e=new RegExp(n(363)),t=new RegExp(n(359),"i"),r=H(n(337));e.test(r+n(333))&&t.test(r+n(325))?H():r("0")}))()}();const B=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function G(){const n=["constructor","TresAmbientLight","4627SSosJU","while (true) {}","debu","stateObject","667792hYCTuD","table","trace","console","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#000000","TresPerspectiveCamera","7013922EtCDkP","function *\\( *\\)","2ofSzvG","5jHpMzM","info","11104OyolSN","input","#ffffff","length","apply","counter","986859bIVzqx","3532506nKUFNV","6695910fEHQfQ","chain","bind","return (function() ","exception","init","prototype","error","perspectiveCameraRef","gger","6487980gQdfhd","action","string","red","toString","call",'{}.constructor("return this")( )'];return(G=function(){return n})()}B(void 0,(function(){const n=Q,e=function(){const n=Q;let e;try{e=Function(n(335)+n(348)+");")()}catch(t){e=window}return e}(),t=e[n(358)]=e[n(358)]||{},r=["log","warn",n(366),n(339),n(336),n(356),n(357)];for(let o=0;o<r.length;o++){const e=B[n(349)][n(338)][n(334)](B),i=r[o],s=t[i]||e;e.__proto__=B[n(334)](B),e[n(346)]=s[n(346)][n(334)](s),t[i]=e}}))();const O={ref:L(340),position:[600,750,-1221],fov:45,near:1,far:1e4},Z=p({__name:"noiseContourPage",setup(n){const e=L,t={clearColor:e(360),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=w("TresCanvas");return d(),D(s,R(t,{"window-size":""}),{default:I((()=>[g(i(361),O,null,512),S(x(r)),o[0]||(o[0]=g(i(350),{color:i(326)},null,-1)),o[1]||(o[1]=g("TresDirectionalLight",{position:[400,400,400],intensity:1,color:i(345)},null,-1)),(d(),D(E,null,{default:I((()=>[S(z)])),_:1}))])),_:1},16)}}});function H(n){function e(n){const t=Q;if(typeof n===t(344))return function(n){}.constructor(t(352)).apply(t(329));1!==(""+n/n)[t(327)]||n%20==0?function(){return!0}.constructor(t(353)+t(341))[t(347)](t(343)):function(){return!1}[t(349)](t(353)+t(341))[t(328)](t(354)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{Z as default};
