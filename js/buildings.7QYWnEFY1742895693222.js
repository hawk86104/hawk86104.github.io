import{u as t,_ as o,a as n}from"./mergeTres.YAGrnQAD1742895693222.js";import{l as r}from"./utils.0fSHOGus1742895693222.js";import{e}from"./@tresjs.xCsT8yve1742895693222.js";import{d as a,r as i,a2 as c,o as l,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.C4dqouNn1742895693222.js";import{_ as C}from"./@fesjs.C15FMxIg1742895693222.js";import"./@amap.hJQcpQRT1742895693222.js";import"./pinia.JZN5hDyR1742895693222.js";import"./three.DqHgeVY11742895693222.js";import"./three-mesh-bvh.tZwJGpmE1742895693222.js";import"./postprocessing.vTwfsnPH1742895693222.js";import"./@vueuse.q8TRDI1e1742895693222.js";import"./vue-router.0ovIAQEA1742895693222.js";import"./lodash-es.p1wj6C0b1742895693222.js";import"./@qlin.o0hjOMCg1742895693222.js";import"./@floating-ui.HzHndBae1742895693222.js";import"./@juggle.4EyLec-41742895693222.js";function y(){const t=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","positionArray","cameraState","2885NcQhNu","94DjtUPe","counter","normalArray","4219432vIIVJI","call","faceUv","5660QHHXUb","TresGroup","lngLatToCoord","TresBufferGeometry","tbgRef","uniforms","test","u_far","string","https://opensource.cdn.icegl.cn","exception","bind","buildingModels","toString","13892931OwawWL","u_zoom","constructor","while (true) {}","55665bYqGLr","gger","console","table","TresMesh","mapHandle","length","4146506eviWsO","info","debu","value","buildings","trace","atan","init","function *\\( *\\)","apply","3703860vGiPHC","geometry","exp","stateObject","normal","/json/AMapGIS/latlngbuildings.geojson","action","customCoords","45597CdWYpx","__proto__","warn","getZoom","log",'{}.constructor("return this")( )',"uvArray","error"];return(y=function(){return t})()}const x=b;!function(t,o){const n=b,r=y();for(;;)try{if(459663===-parseInt(n(183))/1+-parseInt(n(159))/2*(parseInt(n(146))/3)+parseInt(n(165))/4*(-parseInt(n(158))/5)+-parseInt(n(138))/6+parseInt(n(128))/7+parseInt(n(162))/8+parseInt(n(179))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(137)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function b(t,o){const n=y();return b=function(t,o){return n[t-=127]},b(t,o)}!function(){w(this,(function(){const t=b,o=new RegExp(t(136)),n=new RegExp(t(154),"i"),r=z(t(135));o.test(r+"chain")&&n[t(171)](r+t(155))?z():r("0")}))()}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(137)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=b;let o;try{o=Function("return (function() "+t(151)+");")()}catch(e){o=window}const n=o[t(185)]=o[t(185)]||{},r=[t(150),t(148),t(129),t(153),t(175),t(186),t(133)];for(let a=0;a<r.length;a++){const o=I[t(181)].prototype[t(176)](I),e=r[a],i=n[e]||o;o[t(147)]=I[t(176)](I),o[t(178)]=i[t(178)].bind(i),n[e]=o}}))();const S=["position","faceUv",x(142)],j=a({__name:x(177),setup(o){const n=t(),a=t=>{const o=b;for(let r=0;r<t[o(127)];r+=3){const e=[t[r],t[r+1]],a=n[o(188)].customCoords[o(167)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};c((()=>{n.cameraState&&(async()=>{const t=b,o=await r(t(174)+t(143),t(132));for(let n=0;n<o[t(127)];n++){const r=o[n];a(r[t(139)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(164)]),c=new Float32Array(r.geometry[t(127)]);d.push({positionArray:e,uvArray:i,normalArray:c})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;n.cameraState&&(g[t(170)][t(180)][t(131)]=n[t(188)][t(149)](),g[t(170)].u_near.value=n[t(157)].near,g[t(170)][t(172)][t(131)]=n[t(157)].far)})),(t,o)=>{const n=b;return l(),s(n(166),null,[(l(!0),s(u,null,f(d,((t,o)=>{const r=n;return l(),s(r(187),{key:""+o},[p(r(168),{ref_for:!0,ref:r(169),position:[t[r(156)],3],faceUv:[t[r(152)],2],normal:[t[r(161)],3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=b;if(typeof t===n(173))return function(t){}.constructor(n(182))[n(137)](n(160));1!==(""+t/t)[n(127)]||t%20==0?function(){return!0}.constructor(n(130)+n(184))[n(163)](n(144)):function(){return!1}.constructor(n(130)+"gger").apply(n(141)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const P=U;!function(t,o){const n=U,r=A();for(;;)try{if(142702===parseInt(n(302))/1*(parseInt(n(303))/2)+parseInt(n(306))/3+-parseInt(n(327))/4*(-parseInt(n(305))/5)+-parseInt(n(307))/6*(-parseInt(n(330))/7)+-parseInt(n(296))/8*(parseInt(n(313))/9)+-parseInt(n(300))/10+-parseInt(n(308))/11*(parseInt(n(310))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(326)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=U,o=new RegExp(t(324)),n=new RegExp(t(316),"i"),r=W("init");o[t(335)](r+"chain")&&n.test(r+"input")?W():r("0")}))()}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(326)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();F(void 0,(function(){const t=U,o=function(){const t=U;let o;try{o=Function(t(321)+t(315)+");")()}catch(n){o=window}return o}(),n=o.console=o.console||{},r=["log",t(311),t(319),t(334),t(317),t(295),t(298)];for(let e=0;e<r[t(332)];e++){const o=F[t(299)][t(309)][t(329)](F),a=r[e],i=n[a]||o;o.__proto__=F.bind(F),o[t(331)]=i.toString[t(329)](i),n[a]=o}}))();function U(t,o){const n=A();return U=function(t,o){return n[t-=295]},U(t,o)}function A(){const t=["manual","298PRRvgT","894vYWzzw","gger","150215FkGfoX","398730mvwYTC","186EaWuuy","1362702ZKUkxn","prototype","24fAehmY","warn","debu","18qSfiNu","string",'{}.constructor("return this")( )',"\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","exception","counter","info","TresAmbientLight","return (function() ","action","tcRef","function *\\( *\\)","TresPerspectiveCamera","apply","12CcrJTq","stateObject","bind","40782iPnsHt","toString","length","buildings","error","test","table","22264xaYphB","while (true) {}","trace","constructor","1408190iHTLxl"];return(A=function(){return t})()}function W(t){function o(t){const n=U;if(typeof t===n(314))return function(t){}[n(299)](n(297))[n(326)](n(318));1!==(""+t/t)[n(332)]||t%20==0?function(){return!0}.constructor(n(312)+n(304)).call(n(322)):function(){return!1}.constructor(n(312)+n(304))[n(326)](n(328)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const L=C(a({__name:P(333),setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(301)});return(t,i)=>{const c=r,f=d("TresCanvas");return l(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:"tresCanvas",ref:c(323)},a),{default:m((()=>[i[0]||(i[0]=p(c(325),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(c(320),{intensity:.5},null,-1)),g(n,{center:e}),(l(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{L as default};
