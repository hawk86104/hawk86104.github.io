import{P as e}from"./tweakpane.CqZAnw7f1761100244891.js";import"./vanilla.esm.5.5.0.CsbunUBT1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";import"./SPE.Ea5pRdfI1761100244891.js";import"./@fesjs.DbrjsIBT1761100244891.js";import{_ as t}from"./@tresjs.DqJWjmrH1761100244891.js";import{g as o}from"./utils.Cw0sHfqi1761100244891.js";import{d as n,a as i,a3 as a,w as s,G as r,o as u,I as p,u as l,a9 as m,aa as y,r as f,b as c,e as v,h as d,m as x}from"./@vue.CKlgtJke1761100244891.js";import{k as h,a6 as j}from"./three.DvmzhRS91761100244891.js";import"./Fetch.CIMEiaKn1761100244891.js";import"./three-custom-shader-material.BR24gUv-1761100244891.js";import{b as g}from"./pagesShow.vue_vue_type_script_setup_true_lang.BoKN_xoE1761100244891.js";import"./object-hash.zo7S6bgL1761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./jszip.DTlig5CR1761100244891.js";import"./vue-router.AUgVvTqV1761100244891.js";import"./lodash-es.DWe8oqPO1761100244891.js";import"./pinia.-nSLzXOT1761100244891.js";import"./@qlin.y-0Z8WnK1761100244891.js";import"./@babel.BPq7uOAK1761100244891.js";import"./@floating-ui.Bhq4ibgf1761100244891.js";import"./@juggle.Vc7cP4_P1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./useTexture.6Wyv_tgl1761100244891.js";import"./three-mesh-bvh.-a2uGGuV1761100244891.js";import"./buildingsCustomShaderMaterial.DyBo--wu1761100244891.js";const _=["position","uv"],q=n({__name:"wave",props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:"#ffff00"},opacity:{default:.8},height:{default:100},frequencyNum:{default:8},speed:{default:1}},setup(e){const n=e,f=i(),c={side:j,transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:"\nvarying vec2 vUv; \nvoid main(){\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",fragmentShader:"\n\tuniform float uTime;\n\tvarying vec2 vUv;\n\t#define PI 3.14159265\n  uniform float speed;\n  uniform vec3 color;\n  uniform float opacity;\n  uniform float frequencyNum;\n\tvoid main(){\n\t\t\t\n\tfloat amplitude = 1.;\n\n\tfloat x = vUv.x;\n\tfloat y = sin(x * frequencyNum) ;\n\tfloat t = 0.01*(-uTime*130.0*speed);\n\ty += sin(x*frequencyNum*2.1 + t)*4.5;\n\ty += sin(x*frequencyNum*1.72 + t*1.121)*4.0;\n\ty += sin(x*frequencyNum*2.221 + t*0.437)*5.0;\n\ty += sin(x*frequencyNum*3.1122+ t*4.269)*2.5;\n\ty *= amplitude*0.06;\n\ty /= 3.;\n\ty += 0.55;\n\n\tfloat ap = step(vUv.y,y) * (y-vUv.y)/y;\n\n\tgl_FragColor = vec4(color,ap*opacity);\n}\n\t",uniforms:{uTime:{type:"pv2",value:0},color:{type:"uvs",value:new h(n.color)},opacity:{type:"pv2",value:n.opacity},frequencyNum:{type:"pv2",value:n.frequencyNum},speed:{type:"pv2",value:n.speed}}};let v=null,d=null;function x(e=[],t){const o=[],n=[];for(let i=0,a=o.length,s=n.length;i<e.length-1;i++){let r=1,u=e[i],p=e[i+1];o[a++]=u.x,o[a++]=0,o[a++]=u.y,n[s++]=0,n[s++]=0,o[a++]=p.x,o[a++]=0,o[a++]=p.y,n[s++]=1,n[s++]=0,o[a++]=u.x,o[a++]=t,o[a++]=u.y,n[s++]=0,n[s++]=r,o[a++]=u.x,o[a++]=t,o[a++]=u.y,n[s++]=0,n[s++]=r,o[a++]=p.x,o[a++]=0,o[a++]=p.y,n[s++]=1,n[s++]=0,o[a++]=p.x,o[a++]=t,o[a++]=p.y,n[s++]=1,n[s++]=r}v=new Float32Array(o),d=new Float32Array(n)}const{centerPoint:g,points:q}=o(n.positionSrc);x(q,n.height);const{onBeforeRender:b}=t();return b(({delta:e})=>{c.uniforms.uTime.value+=e}),a(()=>{n.color&&(c.uniforms.color.value=new h(n.color)),n.opacity&&(c.uniforms.opacity.value=n.opacity),n.frequencyNum&&(c.uniforms.frequencyNum.value=n.frequencyNum),n.speed&&(c.uniforms.speed.value=n.speed),f.value&&f.value.position.set(g.x,f.value.position.y,g.y)}),s(()=>n.height,e=>{x(q,n.height),f.value&&f.value.position.set(g.x,f.value.position.y,g.y)}),(e,t)=>(u(),r("TresMesh",{renderOrder:2200,ref_key:"tresMeshRef",ref:f},[p("TresBufferGeometry",{position:[l(v),3],uv:[l(d),2]},null,8,_),p("TresShaderMaterial",m(y(c)),null,16)],512))}}),b=n({__name:"fenceWave",setup(t){const o=i();s(()=>o.value?.contextReady,e=>{e&&o.value.context.context.camera.activeCamera.value.position.set(880,660,800)});const n=f({color:"#00ffdd",opacity:.8,frequencyNum:6,speed:1,height:100}),a=new e({title:"围墙效果",expanded:!0});return a.addBinding(n,"color",{label:"颜色"}),a.addBinding(n,"opacity",{label:"透明度",min:0,max:1,step:.1}),a.addBinding(n,"speed",{label:"滚动速度",min:.1,max:5,step:.001}),a.addBinding(n,"frequencyNum",{label:"波浪数",min:0,max:20,step:1}),a.addBinding(n,"height",{label:"高度",min:10,max:300,step:1}),(e,t)=>(u(),c(g,{ref_key:"pagesShowRef",ref:o},{ability:v(()=>[d(l(q),{"position-y":20,positionSrc:[{x:-292,y:4.27*40},{x:-296,y:402},{x:-196,y:401.2},{x:-196,y:178.4},{x:-292,y:4.27*40}],height:180}),d(l(q),x({"position-y":20,positionSrc:[{x:10.8,y:40*-1.19},{x:12.8,y:-220},{x:-303.6,y:-236},{x:-304,y:-52},{x:10.8,y:40*-1.19}]},n),null,16)]),_:1},512))}});export{b as default};
