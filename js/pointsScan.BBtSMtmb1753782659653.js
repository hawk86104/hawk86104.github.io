import{_ as t}from"./earth.vue_vue_type_script_setup_true_lang.Dib7IfPB1753782659653.js";import{e,a}from"./@tresjs.BTaYoA_d1753782659653.js";import{d as n,w as r,G as o,o as s,I as i,a7 as u,a8 as l,r as c,h as p,e as m,f as v,j as f,u as d,a5 as _}from"./@vue.BzMISRrV1753782659653.js";import{C as g,a as y}from"./three.COeOkYug1753782659653.js";import{P as h}from"./tweakpane.C0HtAJSg1753782659653.js";import"./postprocessing.CeqeRjXM1753782659653.js";import"./@vueuse.kHMOgCjI1753782659653.js";const j=n({__name:"pointsScan",props:{color:{default:"#FFFFFF"},opacity:{default:1},speed:{default:1}},setup(t){const a=t,n={uniforms:{uTime:{value:0},pointNum:{value:new y(32,16)},uColor:{value:new g(a.color)},uOpacity:{value:a.opacity}},transparent:!0,vertexShader:"\n\t\t\t\t\tvarying vec2 vUv;\n                    void main(){\n\t\t\t\t\t\tvUv=uv;\n\t\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                    }",fragmentShader:"\n\t\t\t\t\tfloat PI = acos(-1.0);\n                    uniform vec3 uColor;\n                    uniform vec2 pointNum;\n                    uniform float uTime;\n                    varying vec2 vUv;\n\t\t\t\t\tuniform float uOpacity;\n                    void main(){\n\t\t\t\t\t\tvec2 uv = vUv+ vec2(0.0, uTime);\n\t\t\t\t\t\tfloat current = abs(sin(uv.y * PI));\n\t\t\t\t\t\tif(current < sin(0.4714*PI)) {\n\t\t\t\t\t\t\tcurrent=current*0.5;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfloat d = distance(fract(uv * pointNum*2.0), vec2(0.5, 0.5));\n\n\t\t\t\t\t\tif(d > current*0.2 ) {\n\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl_FragColor =vec4(uColor,current*uOpacity);\n\t\t\t\t\t\t}\n                    }"};r((()=>[a.color,a.opacity]),(([t,e])=>{n.uniforms.uColor.value=new g(t),n.uniforms.uOpacity.value=e}));const{onLoop:c}=e();return c((({delta:t})=>{n.uniforms.uTime.value+=.1*t*a.speed})),(t,e)=>(s(),o("TresMesh",null,[e[0]||(e[0]=i("TresSphereGeometry",{args:[1,32,32]},null,-1)),i("TresShaderMaterial",u(l(n)),null,16)]))}}),T=n({__name:"pointsScan",setup(e){const n=c({color:"#ffffff",opacity:.48,speed:4.8,scale:1.1}),r=new h;return r.addBinding(n,"color",{label:"颜色"}),r.addBinding(n,"opacity",{label:"透明度",min:0,max:1,step:.01}),r.addBinding(n,"speed",{label:"速度",min:.1,max:5,step:.1}),r.addBinding(n,"scale",{label:"大小",min:1.01,max:2,step:.01}),(e,r)=>{const o=p("TresCanvas");return s(),m(o,{clearColor:"#201919","window-size":""},{default:v((()=>[r[0]||(r[0]=i("TresPerspectiveCamera",{position:[3,3,0],fov:45,near:.1,far:1e4},null,-1)),f(d(a),{enableDamping:""}),r[1]||(r[1]=i("TresAmbientLight",{intensity:3},null,-1)),(s(),m(_,null,{default:v((()=>[f(t)])),_:1})),(s(),m(_,null,{default:v((()=>[f(j,u(l(n)),null,16)])),_:1}))])),_:1})}}});export{T as default};
