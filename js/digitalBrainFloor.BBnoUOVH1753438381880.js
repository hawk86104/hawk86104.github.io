import{cf as o,N as s,_ as e,ce as a}from"./three.0XnumNGx1753438381880.js";import{a as i}from"./@tresjs.CL21cZKR1753438381880.js";import{P as t}from"./tweakpane.C0HtAJSg1753438381880.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.DTeC0bTD1753438381880.js";import"./index.3YF1ftF11753438381880.js";import{l}from"./util.BdkO13uJ1753438381880.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.J-PGd_ZK1753438381880.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.B_93CdQN1753438381880.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DEpvjsJ21753438381880.js";import{d as u,r as c,aa as _,h as f,G as j,o as g,j as b,u as h,f as y,I as w,a7 as v,a8 as B,e as L,H as x,m as C,a5 as k,F as T}from"./@vue.BzMISRrV1753438381880.js";import"./postprocessing.Bts7n4b31753438381880.js";import"./@vueuse.B7eBfla_1753438381880.js";import"./utils.BYPsKfP61753438381880.js";import"./@fesjs.Dp_6UiTt1753438381880.js";import"./vue-router.C4RxDKc01753438381880.js";import"./lodash-es.C7pWAXPe1753438381880.js";import"./@qlin.q6OWdsQV1753438381880.js";import"./pinia.DxBg6W7y1753438381880.js";import"./@babel.BPq7uOAK1753438381880.js";import"./@floating-ui.BFjFSAYt1753438381880.js";import"./@juggle.CcBCnTIR1753438381880.js";import"./index.Cp049VOq1753438381880.js";import"./three-mesh-ui.module.CE3wHlBQ1753438381880.js";import"./starLoading.DgJMNOgx1753438381880.js";import"./cssLoaders.BOWWyhX-1753438381880.js";import"./bubbleLoading.CZtxOxL91753438381880.js";import"./yangyangLoading.DPMKG6cS1753438381880.js";const S={position:[0,120,0]},z=u({__name:"digitalBrainFloor",async setup(u){let z,G;const M=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),P=c({color:"#fff",show:!0,opacity:1}),F=new t({title:"参数"});F.addBinding(P,"show",{label:"点云显示"}),F.addBinding(P,"color",{label:"点云颜色"}),F.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const H=c({color:"#84ccff",show:!0,opacity:1});F.addBinding(H,"show",{label:"脑轮廓显示"}),F.addBinding(H,"color",{label:"脑轮廓颜色"}),F.addBinding(H,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const I=c({color:"#9e00af",show:!0,opacity:1});F.addBinding(I,"show",{label:"脑组织显示"}),F.addBinding(I,"color",{label:"脑组织颜色"}),F.addBinding(I,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const R=new o,q=([z,G]=_((()=>l("./plugins/medical/model/brainparts.OBJ",R))),z=await z,G(),z),A=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:e,toneMapping:s}),E=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const e=f("TresCanvas");return g(),j(T,null,[b(h(d)),b(e,C(A,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),v(B(E)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",S,[P.show?(g(),L(n,C({key:0,model:h(q)},P),null,16,["model"])):x("",!0),(g(),L(k,null,{default:y((()=>[H.show?(g(),L(p,C({key:0,model:h(q)},H),null,16,["model"])):x("",!0)])),_:1})),I.show?(g(),L(m,C({key:1,model:h(q)},I),null,16,["model"])):x("",!0)]),b(r,v(B(M)),null,16)])),_:1},16)],64)}}});export{z as default};
