import{m as n,e as t,o as e}from"./@tresjs.4XV_x0mI1739442316051.js";import{_ as r,b as o}from"./three.OosFxi571739442316051.js";import{P as a}from"./tweakpane.yDiyAAkA1739442316051.js";import{d as i,b as c,r as l,w as u,q as s,o as p,H as m,N as v,u as f,e as _,z as g,j as d,g as x,aj as h,ak as y,f as b,al as w,m as S,F as z}from"./@vue.NRI7TcgI1739442316051.js";import{_ as j}from"./@fesjs.DgjXCZoG1739442316051.js";import"./@vueuse.u4XqlOuT1739442316051.js";import"./vue-router.bqZmV3c61739442316051.js";import"./lodash-es.pklfUAS51739442316051.js";import"./@qlin.yHhFDldE1739442316051.js";import"./pinia.ptJyy4pp1739442316051.js";import"./@floating-ui.BPbuo5Gx1739442316051.js";import"./@juggle.7yjBMqoW1739442316051.js";const k=D;!function(n,t){const e=D,r=R();for(;;)try{if(931084===-parseInt(e(472))/1*(parseInt(e(448))/2)+parseInt(e(471))/3*(parseInt(e(458))/4)+-parseInt(e(479))/5+parseInt(e(502))/6+-parseInt(e(486))/7*(parseInt(e(508))/8)+parseInt(e(509))/9+-parseInt(e(459))/10*(-parseInt(e(514))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const I=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[D(504)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){I(this,(function(){const n=D,t=new RegExp(n(452)),e=new RegExp(n(507),"i"),r=F(n(455));t[n(516)](r+n(506))&&e[n(516)](r+n(453))?F():r("0")}))()}();const V=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function D(n,t){const e=R();return(D=function(n,t){return e[n-=447]})(n,t)}function R(){const n=["prototype","rotation-x","u_isoValue","color","3217230oCvFpW","Vector3",'{}.constructor("return this")( )',"minFilter","debu","trace","expanded","14RbwKmC","innerWidth","table","TresMesh","constructor","then","wrapT","TresShaderMaterial","catch","while (true) {}","Clock","magFilter","fragmentShader","meshRef","getElapsedTime","toString","1163412XNOPVn","arrayBuffer","apply","length","chain","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","4908976UMTNXf","10820988CwrPyl","TresSphereGeometry","value","exception","u_dt","11Grwwiq","log","test","LinearFilter","RedFormat","u_volume","2Teebni","Cross Section Settings","innerHeight","console","function *\\( *\\)","input","gger","init","vertexShader","addBinding","1203940FnSXIA","21662650HpRmiL","error","format","addFolder","stateObject","RepeatWrapping","__proto__","uniforms","u_color","Algorithm Settings","alphaVal","bind","3vkRdVp","1061710HtWcNb","Data3DTexture","call"];return(R=function(){return n})()}V(void 0,(function(){const n=D;let t;try{t=Function("return (function() "+n(481)+");")()}catch(o){t=window}const e=t[n(451)]=t[n(451)]||{},r=[n(515),"warn","info","error",n(512),n(488),n(484)];for(let a=0;a<r[n(505)];a++){const t=V[n(490)][n(475)][n(470)](V),o=r[a],i=e[o]||t;t[n(465)]=V[n(470)](V),t[n(501)]=i[n(501)].bind(i),e[o]=t}}))();const M=[k(476)],P=[k(466),k(456),k(498)],O=41,C=i({__name:"basicVolumeRendering",setup(e){var i;const _=k,g=window[_(487)],d=window[_(450)],x=c(null),h=c(null),y=new(r[_(496)]);y.start();const b=(new a)[_(462)]({title:"Display Settings"}),w=b[_(462)]({title:_(449)}),S=new o(.5,.5,.5);w[_(457)](S,"x",{label:"X",min:.02,max:.5,step:.02}),w[_(457)](S,"y",{label:"Y",min:.02,max:.5,step:.02}),w[_(457)](S,"z",{label:"Z",min:.02,max:.5,step:.02}),w[_(485)]=!0;const{camera:z}=n(),j=l({u_camera:{value:null==(i=z[_(511)])?void 0:i.position},u_resolution:{value:new(r[_(480)])(g,d,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:S},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),I=b[_(462)]({title:_(468)});I[_(457)](j[_(513)],_(511),{label:"dt",min:4e-4,max:.016,step:2e-4}),I[_(457)](j[_(467)],_(511),{label:_(478),min:1,max:3,step:1}),I[_(457)](j.u_alphaVal,_(511),{label:_(469),min:.01,max:1,step:.01}),I[_(457)](j[_(477)],_(511),{label:"isoValue",min:0,max:1,step:.04}),u(h,(n=>{const t=_;if(n){const e=new(r[t(473)])(n,O,O,O);e[t(461)]=r[t(518)],e[t(482)]=r[t(517)],e[t(497)]=r[t(517)],e[t(492)]=r[t(464)],e.needsUpdate=!0,j[t(447)][t(511)]=e}}));const{onLoop:V}=t();return V((()=>{const n=_;j.u_time[n(511)]=y[n(500)]()})),s((()=>{(()=>{const n=_;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw")[n(491)]((t=>t[n(503)]()))[n(491)]((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r[e(505)];n++)o[n]=r[n];h[e(511)]=o}))[n(494)]((t=>{console[n(460)]("Error fetching volume data:",t)}))})()})),(n,t)=>{const e=_;return p(),m(e(489),{ref_key:e(499),ref:x,"rotation-x":Math.PI/-2},[t[0]||(t[0]=v(e(510),{args:[1,16,16]},null,-1)),v(e(493),{uniforms:j,vertexShader:f("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:f("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,P)],8,M)}}});function F(n){function t(n){const e=D;if("string"==typeof n)return function(n){}.constructor(e(495))[e(504)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(490)](e(483)+e(454))[e(474)]("action"):function(){return!1}[e(490)](e(483)+e(454))[e(504)](e(463)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=W;function L(){const n=["594845OizMSo","40GysqCE","input","trace","1330955hZKfur","string","apply","length","error","TresGridHelper","2747942LpKebE","chain","call","toString","constructor","TresAmbientLight","stateObject","__proto__","basicVolume","6438852CPmgdc","info","8081550QiWfkJ","console","warn","bind","debu","gger","counter",'{}.constructor("return this")( )',"33942896jrpJVR","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","#201919","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","action","2487150daFpBc","test","table","exception","TresPerspectiveCamera"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw "];return(L=function(){return n})()}!function(n,t){const e=W,r=L();for(;;)try{if(907893===parseInt(e(294))/1+parseInt(e(300))/2+parseInt(e(284))/3+parseInt(e(291))/4*(parseInt(e(290))/5)+parseInt(e(311))/6+-parseInt(e(309))/7+-parseInt(e(319))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const A=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[W(296)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){A(this,(function(){const n=W,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(282),"i"),r=Z("init");t[n(285)](r+n(301))&&e.test(r+n(292))?Z():r("0")}))()}();const E=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[W(296)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function W(n,t){const e=L();return(W=function(n,t){return e[n-=280]})(n,t)}E(void 0,(function(){const n=W;let t;try{t=Function("return (function() "+n(318)+");")()}catch(o){t=window}const e=t.console=t[n(312)]||{},r=["log",n(313),n(310),n(298),n(287),n(286),n(293)];for(let a=0;a<r[n(297)];a++){const t=E[n(304)].prototype[n(314)](E),o=r[a],i=e[o]||t;t[n(307)]=E.bind(E),t[n(303)]=i[n(303)][n(314)](i),e[o]=t}}))();function Z(n){function t(n){const e=W;if(typeof n===e(295))return function(n){}[e(304)]("while (true) {}")[e(296)](e(317));1!==(""+n/n)[e(297)]||n%20==0?function(){return!0}[e(304)](e(315)+e(316))[e(302)](e(283)):function(){return!1}[e(304)](e(315)+"gger").apply(e(306)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const H=j(i({__name:T(308),setup(n){const t=l({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=l({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=W,i=_("TresCanvas");return p(),m(z,null,[o[3]||(o[3]=v("div",{class:a(310)},[v("a",{href:a(280),target:"_blank"},a(289)),v("br"),g(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),d(i,S({clearColor:a(281)},t),{default:x((()=>[o[0]||(o[0]=v(a(288),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=v(a(305),{intensity:2},null,-1)),d(f(e),h(y(r)),null,16),(p(),b(w,null,{default:x((()=>[d(C,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=v(a(299),{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{H as default};
