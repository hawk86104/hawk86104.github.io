import{aL as a,b5 as e,au as o,C as r,a3 as s}from"./three.CcAUWIwc1753233172036.js";import{b as t}from"./@tresjs.C_lUIoBy1753233172036.js";import{g as l,a as u}from"./whiteFloor.BMrBB-CW1753233172036.js";import{d as n,b as i,aa as d,w as f,G as m,o as h,I as p,a7 as w,a8 as g}from"./@vue.DwSifnVs1753233172036.js";const v=["rotation-x"],C=["args"],c=n({__name:"whiteFloorMesh",props:{size:{default:[20,20]},color:{default:"#990"},shadowColor:{default:"#999"},edge:{default:.35}},async setup(n){let c,j;const y=n,S=i(),{map:x}=([c,j]=d((()=>t({map:"./plugins/floor/image/whiteFloor.jpg"}))),c=await c,j(),c);x.wrapS=x.wrapT=a;const T={uniforms:e.merge([o.lights,{uTexture:{type:"t",value:x},uColor:{value:new r(y.color)},uShadowColor:{value:new r(y.shadowColor)},fEdge:{type:"f",value:y.edge}}]),side:s,vertexShader:u(),fragmentShader:l(),lights:!0,transparent:!0};return f((()=>y.edge),(a=>{T.uniforms.fEdge.value=a})),f((()=>y.color),(a=>{T.uniforms.uColor.value=new r(y.color)})),f((()=>y.shadowColor),(a=>{T.uniforms.uShadowColor.value=new r(y.shadowColor)})),(a,e)=>(h(),m("TresMesh",{ref_key:"tmRef",ref:S,"rotation-x":-Math.PI/2},[p("TresPlaneGeometry",{args:y.size},null,8,C),p("TresShaderMaterial",w(g(T)),null,16)],8,v))}});export{c as _};
