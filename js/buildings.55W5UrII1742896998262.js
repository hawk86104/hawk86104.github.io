import{u as t,_ as n,a as o}from"./mergeTres.s5aEHGyO1742896998262.js";import{l as r}from"./utils.8ZAEjuox1742896998262.js";import{e}from"./@tresjs.KzbsBNvc1742896998262.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.L-brCdZe1742896998262.js";import{_ as C}from"./@fesjs.ATKJ6WD31742896998262.js";import"./@amap.tIvpdqPe1742896998262.js";import"./pinia.c7Udjcar1742896998262.js";import"./three.0CcRceKb1742896998262.js";import"./three-mesh-bvh.gH28GZxM1742896998262.js";import"./postprocessing.JNDZZkh81742896998262.js";import"./@vueuse.AtktgvWs1742896998262.js";import"./vue-router.Nr9hetwf1742896998262.js";import"./lodash-es.pklfUAS51742896998262.js";import"./@qlin.o0hjOMCg1742896998262.js";import"./@floating-ui.HzHndBae1742896998262.js";import"./@juggle.4EyLec-41742896998262.js";function y(t,n){const o=x();return y=function(t,n){return o[t-=374]},y(t,n)}const w=y;function x(){const t=["u_far","prototype","input","while (true) {}","test","value","atan","174960NOGwWT","length","counter","4054580hAKKaF","552828bqjINI","far","3202RHzFRN","toString","return (function() ","/json/AMapGIS/latlngbuildings.geojson","uniforms","153525kDZVgU","TresBufferGeometry","exception","6KlCZxg","cameraState","lngLatToCoord","push",'{}.constructor("return this")( )',"info","gger","76roCMsY","616472DCQYCc","__proto__","https://opensource.cdn.icegl.cn","tbgRef","chain","error","mapHandle","faceUv","function *\\( *\\)","u_zoom","u_near","TresGroup","bind","849331IXvScM","geometry","TresMesh","console","trace","9WyEovW","normalArray","uvArray","constructor","buildings","call","apply","table","debu","customCoords","log"];return(x=function(){return t})()}!function(t,n){const o=y,r=x();for(;;)try{if(103682===parseInt(o(392))/1*(-parseInt(o(407))/2)+-parseInt(o(397))/3+-parseInt(o(390))/4+-parseInt(o(386))/5+parseInt(o(400))/6*(parseInt(o(421))/7)+-parseInt(o(408))/8*(parseInt(o(426))/9)+parseInt(o(389))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[y(374)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=y,n=new RegExp(t(416)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=j("init");n[t(383)](r+t(412))&&o.test(r+t(381))?j():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[y(374)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=y,n=function(){const t=y;let n;try{n=Function(t(394)+t(404)+");")()}catch(o){n=window}return n}(),o=n[t(424)]=n.console||{},r=[t(378),"warn",t(405),t(413),t(399),t(375),t(425)];for(let e=0;e<r[t(387)];e++){const n=I[t(429)][t(380)].bind(I),a=r[e],i=o[a]||n;n[t(409)]=I[t(420)](I),n.toString=i[t(393)][t(420)](i),o[a]=n}}))();const S=["position",w(415),"normal"],z=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=y;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(414)][n(377)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[y(401)]&&(async()=>{const t=y,n=await r(t(410)+t(395),t(430));for(let o=0;o<n[t(387)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r[t(422)]),i=new Float32Array(r[t(415)]),l=new Float32Array(r.geometry[t(387)]);d[t(403)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=y;o[t(401)]&&(g[t(396)][t(417)][t(384)]=o[t(414)].getZoom(),g.uniforms[t(418)][t(384)]=o[t(401)].near,g.uniforms[t(379)][t(384)]=o.cameraState[t(391)])})),(t,n)=>{const o=y;return c(),s(o(419),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(423),{key:""+n},[p(r(398),{ref_for:!0,ref:r(411),position:[t.positionArray,3],faceUv:[t[r(428)],2],normal:[t[r(427)],3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function j(t){function n(t){const o=y;if("string"==typeof t)return function(t){}[o(429)](o(382))[o(374)](o(388));1!==(""+t/t).length||t%20==0?function(){return!0}[o(429)](o(376)+o(406))[o(431)]("action"):function(){return!1}[o(429)](o(376)+o(406))[o(374)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const F=A;function R(){const t=["67784EkkRvt","length","stateObject","exception","gger","counter","while (true) {}","input","log","console","15216hSqkFC","bind","62070ZOYOzY","30jtDFEP","toString","constructor","tresCanvas","error",'{}.constructor("return this")( )',"tcRef","2245621dztYtl","debu","table","1706000RwDFMx","string","2698476kGzGDd","trace","2QvDTaN","info","return (function() ","function *\\( *\\)","test","TresAmbientLight","buildings","prototype","call","warn","10881040HsHiwI","init","1467xwzCzp","__proto__"];return(R=function(){return t})()}!function(t,n){const o=A,r=R();for(;;)try{if(226281===-parseInt(o(280))/1*(-parseInt(o(254))/2)+parseInt(o(281))/3*(-parseInt(o(268))/4)+parseInt(o(250))/5+parseInt(o(252))/6+parseInt(o(247))/7+parseInt(o(278))/8*(parseInt(o(266))/9)+-parseInt(o(264))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function A(t,n){const o=R();return A=function(t,n){return o[t-=245]},A(t,n)}!function(){P(this,(function(){const t=A,n=new RegExp(t(257)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=D(t(265));n[t(258)](r+"chain")&&o[t(258)](r+t(275))?D():r("0")}))()}();const k=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();k(void 0,(function(){const t=A;let n;try{n=Function(t(256)+t(245)+");")()}catch(e){n=window}const o=n[t(277)]=n[t(277)]||{},r=[t(276),t(263),t(255),t(285),t(271),t(249),t(253)];for(let a=0;a<r[t(269)];a++){const n=k[t(283)][t(261)][t(279)](k),e=r[a],i=o[e]||n;n[t(267)]=k.bind(k),n[t(282)]=i[t(282)][t(279)](i),o[e]=n}}))();function D(t){function n(t){const o=A;if(typeof t===o(251))return function(t){}[o(283)](o(274)).apply(o(273));1!==(""+t/t)[o(269)]||t%20==0?function(){return!0}[o(283)](o(248)+o(272))[o(262)]("action"):function(){return!1}[o(283)](o(248)+o(272)).apply(o(270)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=C(a({__name:F(260),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=A,l=d("TresCanvas");return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(284),ref:i(246)},e),{default:m((()=>[a[0]||(a[0]=p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p(i(259),{intensity:.5},null,-1)),g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(z)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
