import{u as t,_ as n,a as o}from"./mergeTres.yfAnETHb1721298764655.js";import{l as r}from"./utils.O9A1bznY1721298764655.js";import{$ as e}from"./@tresjs.iXEJQd7J1721298764655.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.Q1VpS3901721298764655.js";import{_ as w}from"./@fesjs.brW7jqtK1721298764655.js";import"./@amap.x_Go35DX1721298764655.js";import"./pinia.3lNuHAZQ1721298764655.js";import"./three.0bBjBDi41721298764655.js";import"./three-mesh-bvh.LM_bczGP1721298764655.js";import"./tweakpane.yHWGBmom1721298764655.js";import"./@vueuse.hS-CVzal1721298764655.js";import"./vue-router.i1Z-d_LR1721298764655.js";import"./lodash-es.nFpJXAf-1721298764655.js";import"./@qlin.yHhFDldE1721298764655.js";import"./@floating-ui.BPbuo5Gx1721298764655.js";import"./@juggle.7yjBMqoW1721298764655.js";const x=z;!function(t,n){const o=z,r=S();for(;;)try{if(686742===-parseInt(o(281))/1+parseInt(o(292))/2*(-parseInt(o(313))/3)+-parseInt(o(286))/4+parseInt(o(305))/5+parseInt(o(296))/6+-parseInt(o(295))/7*(parseInt(o(327))/8)+parseInt(o(288))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(280)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=z,n=new RegExp(t(328)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=R(t(303));n[t(277)](r+t(289))&&o[t(277)](r+t(293))?R():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(280)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function S(){const t=["table","counter","while (true) {}","trace","faceUv","length","positionArray","263648Ttfnyl","function *\\( *\\)","toString","gger","exception","exp","console","test","TresGroup","stateObject","apply","356631Uzrpwe","uniforms","error","u_near","atan","4393384OSHPTt","u_far","19386081wjtKPS","chain","prototype","mapHandle","316586qJnybW","input","info","77wgslBL","2786328SDfJPr","cameraState","uvArray","bind","warn","position","return (function() ","init","buildings","4177980gyArLe","string",'{}.constructor("return this")( )',"value","u_zoom","call","debu","log","18FXmVxj","far","getZoom","lngLatToCoord","constructor","geometry","normalArray"];return(S=function(){return t})()}I(void 0,(function(){const t=z;let n;try{n=Function(t(302)+t(307)+");")()}catch(e){n=window}const o=n[t(276)]=n[t(276)]||{},r=[t(312),t(300),t(294),t(283),t(274),t(320),t(323)];for(let a=0;a<r.length;a++){const n=I[t(317)][t(290)].bind(I),e=r[a],i=o[e]||n;n.__proto__=I[t(299)](I),n[t(329)]=i[t(329)][t(299)](i),o[e]=n}}))();const j=[x(301),x(324),"normal"];function z(t,n){const o=S();return(z=function(t,n){return o[t-=273]})(t,n)}const P=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=z;for(let r=0;r<t[n(325)];r+=3){const e=[t[r],t[r+1]],a=o[n(291)].customCoords[n(316)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[z(297)]&&(async()=>{const t=z,n=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(304));for(let o=0;o<n[t(325)];o++){const r=n[o];a(r[t(318)]);const e=new Float32Array(r.geometry),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(318)][t(325)]);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;o[t(297)]&&(g[t(282)][t(309)][t(308)]=o.mapHandle[t(315)](),g[t(282)][t(284)][t(308)]=o[t(297)].near,g.uniforms[t(287)][t(308)]=o[t(297)][t(314)])})),(t,n)=>{const o=z;return c(),s(o(278),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s("TresMesh",{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:"tbgRef",position:[t[r(326)],3],faceUv:[t[r(298)],2],normal:[t[r(319)],3]},null,8,j),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function R(t){function n(t){const o=z;if(typeof t===o(306))return function(t){}.constructor(o(322)).apply(o(321));1!==(""+t/t)[o(325)]||t%20==0?function(){return!0}.constructor(o(311)+o(273))[o(310)]("action"):function(){return!1}[o(317)](o(311)+o(273))[o(280)](o(279)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const U=F;!function(t,n){const o=F,r=M();for(;;)try{if(485914===parseInt(o(171))/1+-parseInt(o(196))/2*(parseInt(o(168))/3)+parseInt(o(172))/4+-parseInt(o(173))/5+parseInt(o(198))/6*(parseInt(o(187))/7)+-parseInt(o(176))/8*(parseInt(o(160))/9)+parseInt(o(182))/10*(parseInt(o(164))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function F(t,n){const o=M();return(F=function(t,n){return o[t-=155]})(t,n)}!function(){A(this,(function(){const t=F,n=new RegExp(t(191)),o=new RegExp(t(157),"i"),r=E(t(166));n[t(178)](r+t(186))&&o[t(178)](r+t(181))?E():r("0")}))()}();const k=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[F(193)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();k(void 0,(function(){const t=F;let n;try{n=Function(t(194)+t(190)+");")()}catch(e){n=window}const o=n.console=n[t(180)]||{},r=[t(195),"warn",t(177),t(183),t(159),t(155),t(188)];for(let a=0;a<r[t(197)];a++){const n=k.constructor.prototype.bind(k),e=r[a],i=o[e]||n;n.__proto__=k[t(162)](k),n[t(185)]=i[t(185)][t(162)](i),o[e]=n}}))();const L=t=>(y(U(158)),t=t(),C(),t),T=L((()=>p(U(184),{fov:60,near:.1,far:2e3},null,-1))),D=L((()=>p(U(156),{intensity:.5},null,-1)));function E(t){function n(t){const o=F;if("string"==typeof t)return function(t){}.constructor(o(174)).apply(o(163));1!==(""+t/t)[o(197)]||t%20==0?function(){return!0}.constructor(o(170)+o(179))[o(167)](o(175)):function(){return!1}[o(161)](o(170)+o(179)).apply(o(165)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function M(){const t=["constructor","bind","counter","21869518NtSIfJ","stateObject","init","call","542523oePqCl","tcRef","debu","39607fHEsTT","547468kpGzaX","1792170lEsdpS","while (true) {}","action","24QCDCrV","info","test","gger","console","input","10HkLcKO","error","TresPerspectiveCamera","toString","chain","25165EjwMku","trace","buildings",'{}.constructor("return this")( )',"function *\\( *\\)","tresCanvas","apply","return (function() ","log","10axtLkj","length","570GeRUYh","table","TresAmbientLight","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","data-v-40288e17","exception","2272752xOwnWU"];return(M=function(){return t})()}const W=w(a({__name:U(189),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=F,l=d("TresCanvas");return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(192),ref:i(169)},e),{default:m((()=>[T,D,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{W as default};
