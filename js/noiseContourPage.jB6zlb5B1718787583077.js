import{a as n,r as e,N as t,d as r}from"./@tresjs.yMGhEK7G1718787583077.js";import{W as o,j as i,c5 as s,bX as a,bV as u,Z as c,l as f,aU as l}from"./three.OZpCYxlY1718787583077.js";import{d as v,a3 as p,a2 as m,o as d,D as h,J as g,u as y,F as w,e as x,f as D,g as b,j as S,al as R,m as I}from"./@vue.CpOXM7bB1718787583077.js";import"./@vueuse.jAwx0y-e1718787583077.js";import"./tweakpane.qqn77PB81718787583077.js";const _=P;!function(n,e){const t=P,r=k();for(;;)try{if(822136===-parseInt(t(472))/1+-parseInt(t(467))/2*(-parseInt(t(441))/3)+-parseInt(t(449))/4*(parseInt(t(442))/5)+parseInt(t(457))/6*(-parseInt(t(430))/7)+-parseInt(t(424))/8*(-parseInt(t(462))/9)+parseInt(t(455))/10+parseInt(t(458))/11*(parseInt(t(428))/12))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const E=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(446)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(n,e){const t=k();return(P=function(n,e){return t[n-=419]})(n,e)}!function(){E(this,(function(){const n=P,e=new RegExp("function *\\( *\\)"),t=new RegExp(n(422),"i"),r=F(n(423));e.test(r+n(461))&&t.test(r+"input")?F():r("0")}))()}();const T=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(446)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();T(void 0,(function(){const n=P,e=function(){const n=P;let e;try{e=Function(n(431)+n(466)+");")()}catch(t){e=window}return e}(),t=e[n(447)]=e.console||{},r=[n(448),n(434),n(427),"error",n(465),"table",n(444)];for(let o=0;o<r[n(473)];o++){const e=T[n(452)][n(440)].bind(T),i=r[o],s=t[i]||e;e[n(436)]=T[n(421)](T),e.toString=s[n(443)][n(421)](s),t[i]=e}}))();const C=[_(435),_(453)],N=[g(_(469),{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:_(460),shininess:0},null,-1)],j=[_(435)],U=[g(_(432),{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:"#ffffff",shininess:0},null,-1)];function k(){const n=["\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","info","9168276ySijzL","tShadow","126HHGZBO","return (function() ","TresSphereGeometry","uniforms","warn","side","__proto__","TresMesh","noiseContourMeshRef2","texture","prototype","45scyglP","15GGldMm","toString","trace","while (true) {}","apply","console","log","1817012VrovrW","action","addPass","constructor","rotation-x","counter","6433780vhzOqb","extensions","534288MXsuwO","44RTPrQt","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","#ffffff","chain","2835441lpNPTG","call","material","exception",'{}.constructor("return this")( )',"143288ZZOfWH","value","TresBoxGeometry","renderToScreen","debu","1301420wDNTLY","length","innerWidth","render","derivatives","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","init","8JAloED","string"];return(k=function(){return n})()}const M=_(426),Z=_(459),z=v({__name:"noiseContour",async setup(r){const v=_;let x,D;const{camera:b,renderer:S,scene:R,sizes:I}=n(),E=([x,D]=p((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),x=await x,D(),x),{onLoop:P,onAfterLoop:T}=e(),k=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),z=new i(window[v(474)],window.innerHeight);let F=null;const A=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:z}},vertexShader:M,fragmentShader:Z}),G=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:E}},vertexShader:M,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return G[v(470)]=!0,G[v(464)][v(456)][v(420)]=!0,m((()=>{const n=v;I.width.value&&(F=new a(S.value),F[n(451)](new u(R[n(468)],b[n(468)])),F.addPass(A),F[n(451)](G))})),P((({elapsed:n})=>{const e=v;S.value[e(419)](R[e(468)],b[e(468)],k),A.uniforms[e(429)][e(468)]=k[e(439)],G[e(433)].iTime[e(468)]=n})),T((()=>{F&&F[v(419)]()})),(n,e)=>{const t=v;return d(),h(w,null,[g(t(437),{ref:t(438),side:y(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},N,8,C),g(t(437),{ref:"noiseContourMeshRef1",side:y(c),position:[0,150,0],"cast-shadow":""},U,8,j)],64)}}});function F(n){function e(n){const t=P;if(typeof n===t(425))return function(n){}[t(452)](t(445))[t(446)](t(454));1!==(""+n/n)[t(473)]||n%20==0?function(){return!0}[t(452)](t(471)+"gger")[t(463)](t(450)):function(){return!1}[t(452)]("debugger")[t(446)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const A=O;!function(n,e){const t=O,r=B();for(;;)try{if(744260===parseInt(t(156))/1+-parseInt(t(167))/2+parseInt(t(175))/3*(-parseInt(t(159))/4)+parseInt(t(174))/5+parseInt(t(170))/6+-parseInt(t(168))/7+parseInt(t(154))/8*(parseInt(t(143))/9))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const G=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[O(172)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){G(this,(function(){const n=O,e=new RegExp(n(147)),t=new RegExp(n(142),"i"),r=V(n(178));e.test(r+"chain")&&t[n(145)](r+n(182))?V():r("0")}))()}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[O(172)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function O(n,e){const t=B();return(O=function(n,e){return t[n-=141]})(n,e)}function B(){const n=["apply",'{}.constructor("return this")( )',"3648475ewyjhb","1862436JFJUyT","info","exception","init","log","action","warn","input","__proto__","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","45ZYCckt","perspectiveCameraRef","test","TresCanvas","function *\\( *\\)","TresDirectionalLight","stateObject","debu","TresAmbientLight","console","call","3689776itvGdl","#ffffff","567046NkgOoZ","error","gger","8JUoSZG","table","bind","length","red","trace","while (true) {}","string","2038402FUyyrh","8909376XNKDyQ","constructor","4050012Jumknd","#000000"];return(B=function(){return n})()}L(void 0,(function(){const n=O,e=function(){const n=O;let e;try{e=Function("return (function() "+n(173)+");")()}catch(t){e=window}return e}(),t=e.console=e[n(152)]||{},r=[n(179),n(181),n(176),n(157),n(177),n(160),n(164)];for(let o=0;o<r[n(162)];o++){const e=L[n(169)].prototype.bind(L),i=r[o],s=t[i]||e;e[n(141)]=L.bind(L),e.toString=s.toString[n(161)](s),t[i]=e}}))();const J={ref:A(144),position:[600,750,-1221],fov:45,near:1,far:1e4},H=g(A(151),{color:A(155)},null,-1),W=g(A(148),{position:[400,400,400],intensity:1,color:A(163)},null,-1),$=v({__name:"noiseContourPage",setup(n){const e=A,t={clearColor:e(171),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=x(e(146));return d(),D(i,I(t,{"window-size":""}),{default:b((()=>[g("TresPerspectiveCamera",J,null,512),S(y(r)),H,W,(d(),D(R,null,{default:b((()=>[S(z)])),_:1}))])),_:1},16)}}});function V(n){function e(n){const t=O;if(typeof n===t(166))return function(n){}[t(169)](t(165))[t(172)]("counter");1!==(""+n/n)[t(162)]||n%20==0?function(){return!0}[t(169)]("debu"+t(158))[t(153)](t(180)):function(){return!1}[t(169)](t(150)+"gger")[t(172)](t(149)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{$ as default};
