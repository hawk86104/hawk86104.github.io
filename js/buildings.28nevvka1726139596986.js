import{u as t,_ as n,a as o}from"./mergeTres.nP7fFx1k1726139596986.js";import{l as r}from"./utils.3PPFnUEW1726139596986.js";import{U as e}from"./@tresjs.ml1V726H1726139596986.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.JNsx1iN61726139596986.js";import{_ as x}from"./@fesjs.35r0AYgt1726139596986.js";import"./@amap.Fadeb9eG1726139596986.js";import"./pinia.Z8qq8yAz1726139596986.js";import"./three.ewwqFbMB1726139596986.js";import"./three-mesh-bvh.KvyaEo8V1726139596986.js";import"./@vueuse.leIfNolX1726139596986.js";import"./vue-router.j8bZWDwt1726139596986.js";import"./lodash-es.kYt-_xTG1726139596986.js";import"./@qlin.yHhFDldE1726139596986.js";import"./@floating-ui.BPbuo5Gx1726139596986.js";import"./@juggle.7yjBMqoW1726139596986.js";const w=j;function b(){const t=["lngLatToCoord","buildingModels",'{}.constructor("return this")( )',"u_far","490273QqRGxH","6waUWZb","normal","test","657MbhiZU","48890gRxwib","length","return (function() ","buildings","counter","geometry","1396128BMDWCX","223394zBMxqc","atan","__proto__","48IpWLWB","tbgRef","while (true) {}","customCoords","apply","TresBufferGeometry","input","exp","info","value","255idAjSE","stateObject","bind","normalArray","29756WcoEJJ","36KQrTMA","cameraState","exception","table","getZoom","console","log","debu","push","1375145GvGVyl","faceUv","TresMesh","uvArray","init","gger","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","u_near","uniforms","mapHandle","prototype","532268sVLCbp","chain","near","warn","positionArray","constructor","function *\\( *\\)","TresGroup","u_zoom","string","toString","call"];return(b=function(){return t})()}!function(t,n){const o=j,r=b();for(;;)try{if(395269===parseInt(o(283))/1*(parseInt(o(272))/2)+parseInt(o(296))/3*(-parseInt(o(300))/4)+parseInt(o(310))/5+parseInt(o(301))/6*(parseInt(o(271))/7)+-parseInt(o(282))/8+-parseInt(o(275))/9*(parseInt(o(276))/10)+parseInt(o(255))/11*(parseInt(o(286))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(290)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){I(this,(function(){const t=j,n=new RegExp(t(261)),o=new RegExp(t(250),"i"),r=A(t(248));n.test(r+t(256))&&o[t(274)](r+t(292))?A():r("0")}))()}();const S=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(290)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function j(t,n){const o=b();return(j=function(t,n){return o[t-=246]})(t,n)}S(void 0,(function(){const t=j,n=function(){const t=j;let n;try{n=Function(t(278)+t(269)+");")()}catch(o){n=window}return n}(),o=n[t(306)]=n[t(306)]||{},r=[t(307),t(258),t(294),"error",t(303),t(304),"trace"];for(let e=0;e<r[t(277)];e++){const n=S[t(260)][t(254)][t(298)](S),a=r[e],i=o[a]||n;n[t(285)]=S[t(298)](S),n[t(265)]=i[t(265)][t(298)](i),o[a]=n}}))();const z=["position",w(311),w(273)],R=a({__name:w(268),setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t[n(277)];r+=3){const e=[t[r],t[r+1]],a=o[n(253)][n(289)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[j(302)]&&(async()=>{const t=j,n=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(279));for(let o=0;o<n[t(277)];o++){const r=n[o];a(r[t(281)]);const e=new Float32Array(r[t(281)]),i=new Float32Array(r[t(311)]),l=new Float32Array(r[t(281)][t(277)]);d[t(309)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o[t(302)]&&(g[t(252)][t(263)][t(295)]=o[t(253)][t(305)](),g.uniforms[t(251)][t(295)]=o[t(302)][t(257)],g[t(252)][t(270)].value=o[t(302)].far)})),(t,n)=>{const o=j;return c(),s(o(262),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(246),{key:""+n},[p(r(291),{ref_for:!0,ref:r(287),position:[t[r(259)],3],faceUv:[t[r(247)],2],normal:[t[r(299)],3]},null,8,z),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function A(t){function n(t){const o=j;if(typeof t===o(264))return function(t){}[o(260)](o(288))[o(290)](o(280));1!==(""+t/t)[o(277)]||t%20==0?function(){return!0}[o(260)](o(308)+o(249))[o(266)]("action"):function(){return!1}[o(260)](o(308)+"gger")[o(290)](o(297)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const P=T;!function(t,n){const o=T,r=M();for(;;)try{if(976784===-parseInt(o(185))/1+parseInt(o(168))/2*(parseInt(o(182))/3)+-parseInt(o(172))/4+-parseInt(o(147))/5+parseInt(o(154))/6*(-parseInt(o(149))/7)+-parseInt(o(181))/8+parseInt(o(170))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const W=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[T(158)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){W(this,(function(){const t=T,n=new RegExp(t(167)),o=new RegExp(t(173),"i"),r=V(t(178));n.test(r+t(179))&&o[t(175)](r+t(161))?V():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[T(158)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function M(){const t=["bind","TresAmbientLight","function *\\( *\\)","280EaGltK","trace","39759489GyyIpb","__proto__","2600464IJtGZY","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","call","test","log","TresPerspectiveCamera","init","chain","counter","12876000qVyeAX","26463TlxIat","prototype","length","1002607sZVywm",'{}.constructor("return this")( )',"data-v-40288e17","1567270pNEjnM","warn","350FgPbqJ","gger","tresCanvas","while (true) {}","string","132024NsqwWd","debu","exception","constructor","apply","darkblue","console","input","stateObject","return (function() ","table"];return(M=function(){return t})()}F(void 0,(function(){const t=T;let n;try{n=Function(t(163)+t(145)+");")()}catch(e){n=window}const o=n[t(160)]=n[t(160)]||{},r=[t(176),t(148),"info","error",t(156),t(164),t(169)];for(let a=0;a<r.length;a++){const n=F[t(157)][t(183)].bind(F),e=r[a],i=o[e]||n;n[t(171)]=F[t(165)](F),n.toString=i.toString[t(165)](i),o[e]=n}}))();const U=t=>(C(P(146)),t=t(),y(),t),L=U((()=>p(P(177),{fov:60,near:.1,far:2e3},null,-1))),E=U((()=>p(P(166),{intensity:.5},null,-1)));function T(t,n){const o=M();return(T=function(t,n){return o[t-=145]})(t,n)}function V(t){function n(t){const o=T;if(typeof t===o(153))return function(t){}[o(157)](o(152))[o(158)](o(180));1!==(""+t/t)[o(184)]||t%20==0?function(){return!0}[o(157)](o(155)+o(150))[o(174)]("action"):function(){return!1}[o(157)]("debugger")[o(158)](o(162)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const D=x(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=T,l=d("TresCanvas");return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(159)}),g(l,v({id:i(151),ref:"tcRef"},e),{default:m((()=>[L,E,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{D as default};
