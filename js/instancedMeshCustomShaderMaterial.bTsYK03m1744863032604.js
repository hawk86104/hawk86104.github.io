import{at as t,ah as n,ar as e}from"./three.B0XaFSnH1744863032604.js";import{e as a,g as o,a as r,H as i}from"./@tresjs.DDZ0vesk1744863032604.js";import{_ as s}from"./index.TmMel0Tm1744863032604.js";import{d as c,b as l,w as p,H as u,o as f,J as v,j as h,u as m,r as d,e as g,f as x,ak as b,al as y,am as _,m as M}from"./@vue.DK6ok9LJ1744863032604.js";import{_ as w}from"./component.vue_vue_type_script_setup_true_lang.H1BBaJDp1744863032604.js";import"./postprocessing.DMK_Mhe01744863032604.js";import"./@vueuse.aRlY5CPe1744863032604.js";import"./object-hash.BnegGKfT1744863032604.js";import"./@amap.CGUF9xH41744863032604.js";import"./jszip.H-wAjEeh1744863032604.js";import"./three-stdlib.zHR4YQlW1744863032604.js";!function(){for(var t=I,n=z();;)try{if(924371===-parseInt(t(227))/1*(-parseInt(t(232))/2)+parseInt(t(225))/3+parseInt(t(228))/4+parseInt(t(239))/5+-parseInt(t(234))/6+-parseInt(t(224))/7+-parseInt(t(235))/8*(parseInt(t(226))/9))break;n.push(n.shift())}catch(e){n.push(n.shift())}}();var j,P=(j=!0,function(t,n){var e=j?function(){if(n){var e=n.apply(t,arguments);return n=null,e}}:function(){};return j=!1,e});function z(){var t=["call","8qSvEqY",'{}.constructor("return this")( )',"5376810MNydRY","7255288kRaRLF","constructor","exception","debu","7432100AxqQYT","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","stateObject","apply","action","trace","info","length","toString","__proto__","prototype","init","bind","counter","chain","return (function() ","console","11908001nnppgU","5105874vTtcgI","9Uezwyr","202537BvOnwq","1720136uXaVBS","while (true) {}","test"];return(z=function(){return t})()}function I(t,n){var e=z();return I=function(t,n){return e[t-=212]},I(t,n)}!function(){P(this,(function(){var t=I,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(240),"i"),a=R(t(218));n[t(230)](a+t(221))&&e[t(230)](a+"input")?R():a("0")}))()}();var S,T=(S=!0,function(t,n){var e=S?function(){if(n){var e=n[I(242)](t,arguments);return n=null,e}}:function(){};return S=!1,e});T(void 0,(function(){for(var t=I,n=function(){var t,n=I;try{t=Function(n(222)+n(233)+");")()}catch(e){t=window}return t}(),e=n[t(223)]=n[t(223)]||{},a=["log","warn",t(213),"error",t(237),"table",t(212)],o=0;o<a.length;o++){var r=T[t(236)][t(217)].bind(T),i=a[o],s=e[i]||r;r[t(216)]=T.bind(T),r[t(215)]=s[t(215)][t(219)](s),e[i]=r}}))();function R(t){function n(t){var e=I;if("string"==typeof t)return function(t){}.constructor(e(229)).apply(e(220));1!==(""+t/t)[e(214)]||t%20==0?function(){return!0}[e(236)](e(238)+"gger")[e(231)](e(243)):function(){return!1}[e(236)](e(238)+"gger")[e(242)](e(241)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const D=c({__name:"instancedMeshCom",setup(e){const r=l(null),i={vertex:"\n    uniform float uTime;\n\t\tvarying vec3 vPosition;\n\t\t\n// Precision-adjusted variations of https://www.shadertoy.com/view/4djSRW\nfloat hash(float p) { p = fract(p * 0.011); p *= p + 7.5; p *= p + p; return fract(p); }\nfloat hash(vec2 p) { vec3 p3 = fract(vec3(p.xyx) * 0.13); p3 += dot(p3, p3.yzx + 3.333); return fract((p3.x + p3.y) * p3.z); }\n\nfloat noise(vec3 x) {\n    const vec3 step = vec3(110, 241, 171);\n\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n\n    // For performance, compute the base input to a 1D hash from the integer part of the argument and the\n    // incremental change to the 1D based on the 3D -> 1D wrapping\n    float n = dot(i, step);\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n    return mix(mix(mix(hash(n + dot(step, vec3(0, 0, 0))), hash(n + dot(step, vec3(1, 0, 0))), u.x),\n                   mix(hash(n + dot(step, vec3(0, 1, 0))), hash(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\n               mix(mix(hash(n + dot(step, vec3(0, 0, 1))), hash(n + dot(step, vec3(1, 0, 1))), u.x),\n                   mix(hash(n + dot(step, vec3(0, 1, 1))), hash(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\n}\n\n    vec3 displace(vec3 point) {\n      vec3 instancePosition = (instanceMatrix * vec4(point, 1.)).xyz;\n      return instancePosition + (normal * noise((instancePosition * 3.) + uTime) * 0.8);\n    }  \n\n    vec3 orthogonal(vec3 v) {\n      return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0)\n      : vec3(0.0, -v.z, v.y));\n    }\n\n    vec3 recalcNormals(vec3 newPos) {\n      float offset = 0.001;\n      vec3 tangent = orthogonal(normal);\n      vec3 bitangent = normalize(cross(normal, tangent));\n      vec3 neighbour1 = position + tangent * offset;\n      vec3 neighbour2 = position + bitangent * offset;\n\n      vec3 displacedNeighbour1 = displace(neighbour1);\n      vec3 displacedNeighbour2 = displace(neighbour2);\n\n      vec3 displacedTangent = displacedNeighbour1 - newPos;\n      vec3 displacedBitangent = displacedNeighbour2 - newPos;\n\n      return normalize(cross(displacedTangent, displacedBitangent));\n    }\n\n    void main() {\n\t\t\tvPosition = position;\n      vec3 p = displace(position);\n      csm_PositionRaw = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(p, 1.);\n      csm_Normal = recalcNormals(p);\n    }\n    ",fragment:"\n\t\tvarying vec3 vPosition;\n\t\t// 函数将 HSL 转换为 RGB\n\t\tvec3 hsl2rgb(float h, float s, float l) {\n\t\t\t\tfloat c = (1.0 - abs(2.0 * l - 1.0)) * s;\n\t\t\t\tfloat x = c * (1.0 - abs(mod(h * 6.0, 2.0) - 1.0));\n\t\t\t\tfloat m = l - c / 2.0;\n\t\t\t\tvec3 rgb;\n\t\t\t\tif (0.0 <= h && h < 1.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(c, x, 0.0);\n\t\t\t\t} else if (1.0 / 6.0 <= h && h < 2.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(x, c, 0.0);\n\t\t\t\t} else if (2.0 / 6.0 <= h && h < 3.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(0.0, c, x);\n\t\t\t\t} else if (3.0 / 6.0 <= h && h < 4.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(0.0, x, c);\n\t\t\t\t} else if (4.0 / 6.0 <= h && h < 5.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(x, 0.0, c);\n\t\t\t\t} else if (5.0 / 6.0 <= h && h < 6.0 / 6.0) {\n\t\t\t\t\t\trgb = vec3(c, 0.0, x);\n\t\t\t\t} else {\n\t\t\t\t\t\trgb = vec3(0.0, 0.0, 0.0);\n\t\t\t\t}\n\t\t\t\trgb += vec3(m);\n\t\t\t\treturn rgb;\n\t\t}\n    void main() {\n      // csm_DiffuseColor = vec4(1.,1.,1.,1.);\n\t\t\tfloat h = mod(vPosition.x + vPosition.y + vPosition.z, 1.0); // 色相 H: [0, 1)\n\t\t\tfloat s = 0.9; // 饱和度 S: 固定为 0.8\n\t\t\tfloat l = 0.4; // 亮度 L: 固定为 0.5\n\t\t\tvec3 rgb = hsl2rgb(h, s, l);\n\t\t\tcsm_DiffuseColor = vec4(rgb,1.);\n    }\n    "},s={uTime:{value:0}},c=new t,{onLoop:d}=a();return d((({elapsed:t})=>{s.uTime.value=t})),p((()=>r.value),(t=>{if(t){let n=0;for(let e=0;e<88;e++)c.position.set(Math.random(),Math.random(),Math.random()),c.rotation.set(Math.random(),Math.random(),Math.random()),c.position.multiplyScalar(10),c.position.x-=5,c.position.y-=5,c.position.z-=5,c.updateMatrix(),t.setMatrixAt(n++,c.matrix);t.instanceMatrix.needsUpdate=!0}})),(t,e)=>(f(),u("TresInstancedMesh",{ref_key:"tmRef",ref:r,args:[null,null,88]},[e[0]||(e[0]=v("TresSphereGeometry",{args:[1,64,64]},null,-1)),h(m(o),{baseMaterial:n,vertexShader:i.vertex,fragmentShader:i.fragment,uniforms:s,transparent:""},null,8,["baseMaterial","vertexShader","fragmentShader"])],512))}}),N=c({__name:"instancedMeshCustomShaderMaterial",setup(t){const n=d({alpha:!0,toneMapping:e,windowSize:!0,clearColor:"#000000"}),a=d({enableDamping:!0});return(t,e)=>(f(),g(m(i),M(n,{"window-size":""}),{default:x((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:1,far:1e3},null,-1)),h(m(r),b(y(a)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),e[2]||(e[2]=v("TresDirectionalLight",{position:[7,10,-5.5],intensity:5},null,-1)),(f(),g(_,null,{default:x((()=>[h(m(w),{intensity:16,resolution:256,background:"",blur:.6},{default:x((()=>[h(m(s),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[2,4,0],scale:[1,5,0]},null,8,["rotation-x"]),h(m(s),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[-6,4,0],scale:[1,5,0]},null,8,["rotation-x"]),h(m(s),{intensity:1,"rotation-y":-Math.PI/2,position:[-1,0,0],scale:[10,.2,1]},null,8,["rotation-y"]),h(m(s),{intensity:1,"rotation-y":-Math.PI/2,position:[1,0,0],scale:[10,.2,1]},null,8,["rotation-y"])])),_:1})])),_:1})),h(D)])),_:1},16))}});export{N as default};
