import{u as t,_ as n,a as o}from"./mergeTres.iwjdiGCK1729762363846.js";import{l as r}from"./utils.g_yV3y2C1729762363846.js";import{U as e}from"./@tresjs.CmAaFQUS1729762363846.js";import{d as a,r as i,a2 as l,o as c,E as s,F as u,W as f,L as v,m as p,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.n8X62v121729762363846.js";import{_ as w}from"./@fesjs.CZZ05Yp51729762363846.js";import"./@amap.irWeW_Ar1729762363846.js";import"./pinia.DOkF60i-1729762363846.js";import"./three.CQvcOG671729762363846.js";import"./three-mesh-bvh.B7v5qCD_1729762363846.js";import"./@vueuse.DvZn62wO1729762363846.js";import"./vue-router.Du5s6fg51729762363846.js";import"./lodash-es.BBTWvufR1729762363846.js";import"./@qlin.BIlp8Yi21729762363846.js";import"./@babel.Bwyie5id1729762363846.js";import"./@floating-ui.B75jtkXD1729762363846.js";import"./@juggle.BnTvdTVm1729762363846.js";const x=z;!function(t,n){const o=z,r=S();for(;;)try{if(880456===-parseInt(o(429))/1*(-parseInt(o(417))/2)+-parseInt(o(435))/3+parseInt(o(399))/4+parseInt(o(421))/5+-parseInt(o(401))/6+-parseInt(o(425))/7+parseInt(o(405))/8)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(420)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=z,n=new RegExp(t(436)),o=new RegExp(t(408),"i"),r=F(t(446));n[t(414)](r+t(424))&&o[t(414)](r+t(443))?F():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(420)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=z,n=function(){const t=z;let n;try{n=Function(t(432)+'{}.constructor("return this")( ));')()}catch(o){n=window}return n}(),o=n[t(430)]=n[t(430)]||{},r=[t(428),"warn",t(412),"error",t(437),t(419),"trace"];for(let e=0;e<r.length;e++){const n=I[t(423)].prototype[t(440)](I),a=r[e],i=o[a]||n;n.__proto__=I.bind(I),n.toString=i.toString[t(440)](i),o[a]=n}}))();const j=[x(416),x(431),"normal"];function S(){const t=["tbgRef","uniforms","log","2EjQvIh","console","faceUv","return (function() ","while (true) {}","cameraState","4389498cCoPwl","function *\\( *\\)","exception","length","lngLatToCoord","bind","debu","buildingModels","input","value","stateObject","init","TresGroup","u_zoom","counter","customCoords","atan","mapHandle","5984144ZfZBDh","action","5633424oDzAFq","string","uvArray","buildings","10728568KXNnjh","positionArray","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","u_far","gger","u_near","info","exp","test","TresShaderMaterial","position","417986zhbHTT","far","table","apply","197010cFtRLV","geometry","constructor","chain","83783TGgAcS"];return(S=function(){return t})()}function z(t,n){const o=S();return(z=function(t,n){return o[t-=397]})(t,n)}const A=a({__name:x(442),setup(n){const o=t(),a=t=>{const n=z;for(let r=0;r<t[n(438)];r+=3){const e=[t[r],t[r+1]],a=o.mapHandle[n(450)][n(439)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[z(434)]&&(async()=>{const t=z,n=await r(t(407),t(404));for(let o=0;o<n[t(438)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r[t(422)]),i=new Float32Array(r[t(431)]),l=new Float32Array(r.geometry[t(438)]);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;o[t(434)]&&(g[t(427)][t(448)][t(444)]=o[t(398)].getZoom(),g.uniforms[t(411)].value=o[t(434)].near,g.uniforms[t(409)][t(444)]=o[t(434)][t(418)])})),(t,n)=>{const o=z;return c(),s(o(447),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s("TresMesh",{key:""+n},[v("TresBufferGeometry",{ref_for:!0,ref:r(426),position:[t[r(406)],3],faceUv:[t[r(403)],2],normal:[t.normalArray,3]},null,8,j),v(r(415),p({ref_for:!0},g),null,16)])})),128))])}}});function F(t){function n(t){const o=z;if(typeof t===o(402))return function(t){}[o(423)](o(433))[o(420)](o(449));1!==(""+t/t).length||t%20==0?function(){return!0}[o(423)](o(441)+o(410)).call(o(400)):function(){return!1}[o(423)](o(441)+"gger")[o(420)](o(445)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const P=U;!function(t,n){const o=U,r=L();for(;;)try{if(411719===parseInt(o(495))/1*(parseInt(o(463))/2)+-parseInt(o(483))/3+-parseInt(o(487))/4*(parseInt(o(460))/5)+parseInt(o(465))/6+-parseInt(o(491))/7*(-parseInt(o(475))/8)+parseInt(o(479))/9+-parseInt(o(456))/10*(parseInt(o(486))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[U(480)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function L(){const t=["error","debu","toString","242255ocjjVo","darkblue","gger","8rabEqs","init","2135610cQNync","length","constructor","input","table","buildings","exception","call","bind","tresCanvas","2440eICQLf","return (function() ","action","log","2061954UXJBun","apply","test","while (true) {}","126144JKjzoY","info",'{}.constructor("return this")( )',"326051ihwhQY","40wOrLNV","__proto__","tcRef","prototype","2198avxVdr","console","trace","warn","79187mBCaTn","TresPerspectiveCamera","data-v-f2059998","counter","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","20wXHhnd"];return(L=function(){return t})()}function U(t,n){const o=L();return(U=function(t,n){return o[t-=456]})(t,n)}!function(){R(this,(function(){const t=U,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(499),"i"),r=V(t(464));n.test(r+"chain")&&o[t(481)](r+t(468))?V():r("0")}))()}();const T=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[U(480)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();T(void 0,(function(){const t=U,n=function(){const t=U;let n;try{n=Function(t(476)+t(485)+");")()}catch(o){n=window}return n}(),o=n[t(492)]=n[t(492)]||{},r=[t(478),t(494),t(484),t(457),t(471),t(469),t(493)];for(let e=0;e<r[t(466)];e++){const n=T.constructor[t(490)][t(473)](T),a=r[e],i=o[a]||n;n[t(488)]=T[t(473)](T),n[t(459)]=i[t(459)][t(473)](i),o[a]=n}}))();const E=t=>(C(P(497)),t=t(),y(),t),M=E((()=>v(P(496),{fov:60,near:.1,far:2e3},null,-1))),D=E((()=>v("TresAmbientLight",{intensity:.5},null,-1)));function V(t){function n(t){const o=U;if("string"==typeof t)return function(t){}[o(467)](o(482))[o(480)](o(498));1!==(""+t/t)[o(466)]||t%20==0?function(){return!0}[o(467)](o(458)+o(462))[o(472)](o(477)):function(){return!1}.constructor(o(458)+o(462))[o(480)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const W=w(a({__name:P(470),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=U,l=d("TresCanvas");return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(461)}),g(l,p({id:i(474),ref:i(489)},e),{default:m((()=>[M,D,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(A)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{W as default};
