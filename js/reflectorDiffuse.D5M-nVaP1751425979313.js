import{b as e,a as r,E as a,S as o}from"./@tresjs.GoDhnrau1751425979313.js";import{P as s}from"./tweakpane.C0HtAJSg1751425979313.js";import{cj as t,ae as l,a as i,C as n}from"./three.BYAbq0a61751425979313.js";import{R as u}from"./all.three.DpAlAYuL1751425979313.js";import{m as f,a as m}from"./reflectorDiffuse.C8tW-8WH1751425979313.js";import{d as p,b as c,a3 as d,a2 as g,G as h,o as v,I as j,m as w,u as M,r as b,h as _,e as x,f as T,j as y,O as G,am as S,ak as k,al as B}from"./@vue.Mugdq9o81751425979313.js";import"./postprocessing.B2tDG3sT1751425979313.js";import"./@vueuse.BoGTEdua1751425979313.js";import"./oimophysics.BBtHVm4j1751425979313.js";const C=["rotation-x"],D=["object","visible"],R=p({__name:"reflectorDiffuse",props:{mirror:{default:1},mixStrength:{default:10},showGridHelper:{type:Boolean,default:!0},color:{default:"#ffffff"}},async setup(r){let a,o;const s=r,p=new t(9.5,10),b=c(),_=c(),x=c(),T=new u,y={mirror:{value:s.mirror},mixStrength:{value:s.mixStrength}},G=([a,o]=d((()=>e(["./plugins/floor/image/polished_concrete_basecolor.jpg","./plugins/floor/image/polished_concrete_normal.jpg","./plugins/floor/image/polished_concrete_orm.jpg"]))),a=await a,o(),a);for(var S=0;S<3;S++)G[S].wrapS=l,G[S].wrapT=l,G[S].repeat.set(16,16);const k={color:new n("#444"),metalness:1,roughness:1,map:G[0],metalnessMap:G[2],roughnessMap:G[2],aoMap:G[2],aoMapIntensity:1,normalMap:G[1],normalScale:new i(3,3)},B=e=>{e.uniforms.reflectMap=T.renderTargetUniform,e.uniforms.textureMatrix=T.textureMatrixUniform,e.uniforms=Object.assign(e.uniforms,y),f(e),m(e)};return g((()=>{b.value&&(b.value.attributes.uv1=b.value.attributes.uv),x.value&&(x.value.aoMap.channel=1,x.value.onBeforeCompile=B),_.value&&(_.value.add(T),_.value.onBeforeRender=(e,r,a)=>{T.update(e,r,a)}),s.color&&x.value&&(x.value.color=new n(s.color))})),(e,r)=>(v(),h("TresGroup",null,[j("TresMesh",{ref_key:"tmRef",ref:_,"rotation-x":-Math.PI/2,"position-y":-.1},[j("TresPlaneGeometry",{ref_key:"tpgRef",ref:b,args:[10,10]},null,512),j("TresMeshStandardMaterial",w({ref_key:"tmsmRef",ref:x},k),null,16)],8,C),j("primitive",{object:M(p),visible:e.showGridHelper},null,8,D)]))}}),H={position:[0,8,0],intensity:10,color:"#fff"},P=p({__name:"reflectorDiffuse",setup(e){const t=b({mirror:.9,mixStrength:9,showGridHelper:!0,color:"#69a5c2"}),l=new s({title:"镜面参数",expanded:!0});return l.addBinding(t,"color",{label:"镜面颜色"}),l.addBinding(t,"showGridHelper",{label:"显示网格"}),(e,s)=>{const l=_("TresCanvas");return v(),x(l,{clearColor:"#201919","window-size":""},{default:T((()=>[s[0]||(s[0]=j("TresPerspectiveCamera",{position:[-15,15,-15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(M(r),{enableDamping:""}),s[1]||(s[1]=j("TresAmbientLight",{intensity:10},null,-1)),G(j("TresDirectionalLight",H,null,512),[[M(a)]]),y(M(o),{args:[1,1,1],color:"orange",position:[3,1,0]}),s[2]||(s[2]=j("TresMesh",{position:[0,2,4]},[j("TresBoxGeometry",{args:[1,1,1]}),j("TresMeshNormalMaterial")],-1)),(v(),x(S,null,{default:T((()=>[y(R,k(B(t)),null,16)])),_:1}))])),_:1})}}});export{P as default};
