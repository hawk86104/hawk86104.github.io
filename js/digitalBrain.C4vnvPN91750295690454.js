import{ca as a,av as s,ay as o,c9 as e}from"./three.BCtXTlZY1750295690454.js";import{a as t}from"./@tresjs.wZhcVcHe1750295690454.js";import{P as i}from"./tweakpane.C0HtAJSg1750295690454.js";import"./index.Ll1hMrXd1750295690454.js";import{l}from"./util.C7P8qTrj1750295690454.js";import{_ as r}from"./cloudPoints.vue_vue_type_script_setup_true_lang.DuH0CJIi1750295690454.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.3TR6KWBN1750295690454.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DoQlO2Q91750295690454.js";import{d as m,r as u,a3 as c,h as j,G as g,o as _,j as f,u as b,f as h,I as y,ak as w,al as v,e as B,H as k,m as x,am as L,F as T}from"./@vue.Mugdq9o81750295690454.js";import"./postprocessing.B3dpkXpp1750295690454.js";import"./@vueuse.8goBbrUr1750295690454.js";import"./utils.CND_qGth1750295690454.js";import"./@fesjs.DMJyiXGl1750295690454.js";import"./vue-router.88WhL0T41750295690454.js";import"./lodash-es.C7pWAXPe1750295690454.js";import"./@qlin.q6OWdsQV1750295690454.js";import"./pinia.eIwiwG2d1750295690454.js";import"./@babel.BPq7uOAK1750295690454.js";import"./@floating-ui.BFjFSAYt1750295690454.js";import"./@juggle.CcBCnTIR1750295690454.js";import"./index.Di7Z8xNN1750295690454.js";import"./three-mesh-ui.module.D73brVjB1750295690454.js";import"./starLoading.Bc1XS17R1750295690454.js";import"./cssLoaders.BUFMabJn1750295690454.js";import"./bubbleLoading.C2nJkcT71750295690454.js";import"./yangyangLoading.2vs4zCBE1750295690454.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,P;const q=u({color:"#fff",show:!0,opacity:1}),H=new i({title:"参数"});H.addBinding(q,"show",{label:"点云显示"}),H.addBinding(q,"color",{label:"点云颜色"}),H.addBinding(q,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const M=u({color:"#84ccff",show:!0,opacity:1});H.addBinding(M,"show",{label:"脑轮廓显示"}),H.addBinding(M,"color",{label:"脑轮廓颜色"}),H.addBinding(M,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=u({color:"#9e00af",show:!0,opacity:1});H.addBinding(R,"show",{label:"脑组织显示"}),H.addBinding(R,"color",{label:"脑组织颜色"}),H.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const S=new a,z=([G,P]=c((()=>l("./plugins/medical/model/brainparts.OBJ",S))),G=await G,P(),G),A=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:s}),E=u({autoRotate:!0,autoRotateSpeed:2});return(a,s)=>{const o=j("TresCanvas");return _(),g(T,null,[f(b(d)),f(o,x(A,{"window-size":""}),{default:h((()=>[s[0]||(s[0]=y("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),f(b(t),w(v(E)),null,16),s[1]||(s[1]=y("TresAmbientLight",{intensity:.5},null,-1)),y("TresGroup",C,[q.show?(_(),B(r,x({key:0,model:b(z)},q),null,16,["model"])):k("",!0),(_(),B(L,null,{default:h((()=>[M.show?(_(),B(n,x({key:0,model:b(z)},M),null,16,["model"])):k("",!0)])),_:1})),R.show?(_(),B(p,x({key:1,model:b(z)},R),null,16,["model"])):k("",!0)]),s[2]||(s[2]=y("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
