import{b as e}from"./pagesShow.vue_vue_type_script_setup_true_lang.D3nQMavl1752457528298.js";import{m as n,e as o}from"./@tresjs.CutcgRLX1752457528298.js";import{cj as t,a4 as i,ch as a,cx as s,n as u,a as r,C as l,cG as d}from"./three.DOaOWaa_1752457528298.js";import{d as c,a2 as v,r as m,e as p,o as f,f as P,j as h,a6 as x,a7 as S}from"./@vue.CcDZ19ef1752457528298.js";import{P as w}from"./tweakpane.C0HtAJSg1752457528298.js";import"./three-custom-shader-material.B-_h7e_e1752457528298.js";import"./buildingsCustomShaderMaterial.DyBo--wu1752457528298.js";import"./postprocessing.BhLg8VAN1752457528298.js";import"./@vueuse.D5pFWdqo1752457528298.js";const g=c({__name:"buildingsPassA",props:{color:{default:"#FFF"},uScalenum:{default:150},uScaleone:{default:24},uWidth:{default:1},speed:{default:1},uPosition:{default:{x:0,y:0}}},setup(e){const c=e,{renderer:m,scene:p,camera:f,sizes:P}=n();let h,x=0,S=null,w=null;v((()=>{P.width.value&&(h=P.width.value,x=P.height.value,(()=>{S=new t(m.value);const e=new i(h,x);S.readBuffer.depthBuffer=!0,S.readBuffer.depthTexture=e;const n=new a(p.value,f.value);S.addPass(n),w=new s(new u({uniforms:{time:{value:0},tDiffuse:{value:null},depthTexture:{value:e},uProjectionInverse:{value:f.value.projectionMatrixInverse},uMatrixWorld:{value:f.value.matrixWorld},uColor:{value:new l(c.color)},uScalenum:{value:c.uScalenum},uScaleone:{value:c.uScaleone},uWidth:{value:c.uWidth},uPosition:{value:new r(c.uPosition.x,c.uPosition.y)}},vertexShader:"varying vec2 vUv;\nvarying vec3 vPosition;\n\nvoid main(){\n\tvUv=uv;\n\tvPosition=position;\n\tgl_Position=vec4(position,1.);\n}\n",fragmentShader:"varying vec2 vUv;\nvarying vec3 vPosition;\nuniform sampler2D tDiffuse;\nuniform sampler2D depthTexture;\n\nuniform mat4 uProjectionInverse;\nuniform mat4 uMatrixWorld;\n\nuniform float time;\nuniform vec3 uColor;\nuniform float uScalenum;//最大范围\nuniform float uScaleone;//单条圈间距\nuniform float uWidth;//单条厚度\nuniform vec2 uPosition;//位置\n\nvec3 WorldPosFromDepth(float depth){\n\tfloat z=(depth-.5)*2.;\n\tvec4 clipSpacePosition=vec4(vPosition.xy,z,1.);\n\tvec4 viewSpacePosition=uProjectionInverse*clipSpacePosition;\n\tviewSpacePosition/=viewSpacePosition.w;\n\tvec4 worldSpacePosition=uMatrixWorld*viewSpacePosition;\n\treturn worldSpacePosition.xyz;\n}\nvec3 WorldPosFromDepth2(float depth){\n\t// 规范化设备坐标系 ndc (Normalized Device Coordinates)\n\tvec4 ndc=vec4(vPosition.x,vPosition.y,((depth-.5)*2.),1.);\n\t// 根据视图中的位置和深度逆向MVP (ModelViewProjectionMatrix) 以获取真实渲染的位置\n\tvec4 worldSpacePosition=uMatrixWorld*uProjectionInverse*ndc;\n\t// 由于透视相机视图区域是一个截锥体 在乘以矩阵后，结果不在同一个射影空间上（这意味着 w 分量不是每个顶点的 1）\n\t// 为了完成转换，我们需要将向量的每个分量除以 w 分量本身\n\t// 这一步正常渲染时在GPU中做 我们复原需要手动处理\n\tworldSpacePosition/=worldSpacePosition.w;\n\treturn worldSpacePosition.xyz;\n}\n\nvoid main(){\n\tvec4 base=texture2D(tDiffuse,vUv);//之前的纹理\n\tfloat depth=texture2D(depthTexture,vUv).r;\n\t\n\t// vec3 pos=WorldPosFromDepth(depth);\n\tvec3 pos=WorldPosFromDepth2(depth);\n\tpos.x=pos.x+uPosition.x;\n\tpos.z=pos.z+uPosition.y;\n\tfloat dis=distance(pos.xz,vec2(0,0));\n\tvec3 color=vec3(base);\n\tif(pos.y<=0.){\n\t\tdiscard;\n\t}\n\tif(dis<uScalenum){\n\t\tvec3 scanT=uColor;\n\t\tfloat wave=fract((dis-time*10.)/uScaleone);\n\t\tif(wave<uWidth){\n\t\t\tfloat p=wave/uWidth;\n\t\t\tcolor=mix(color,scanT+.1,p*(1.-(dis/uScalenum)));\n\t\t}\n\t}\n\tgl_FragColor=vec4(color,1.);\n}\n"})),S.addPass(w);const o=new s(d);S.addPass(o)})())}));const{onLoop:g}=o();return g((({elapsed:e})=>{S&&(S.render(),w.uniforms.time.value+=c.speed/60)})),v((()=>{w&&(c.color&&(w.material.uniforms.uColor.value=new l(c.color)),c.uScalenum&&(w.material.uniforms.uScalenum.value=c.uScalenum),c.uScaleone&&(w.material.uniforms.uScaleone.value=c.uScaleone),c.uWidth&&(w.material.uniforms.uWidth.value=c.uWidth),c.uPosition&&w.material.uniforms.uPosition.value.set(c.uPosition.x,c.uPosition.y))})),(e,n)=>null}}),W=c({__name:"buildingsPassA",setup(n){const o=m({color:"#00b4fb",uScalenum:250,uScaleone:82,uWidth:.2,speed:10,uPosition:{x:0,y:0}}),t=new w({title:"后期效果",expanded:!0});return t.addBinding(o,"color",{label:"圈颜色"}),t.addBinding(o,"uScalenum",{label:"最大范围",min:1,max:500,step:10}),t.addBinding(o,"uScaleone",{label:"单条圈间距",min:1,max:100,step:1}),t.addBinding(o,"uWidth",{label:"单条圈宽度",min:0,max:1,step:.01}),t.addBinding(o,"speed",{label:"速度",min:1,max:20,step:1}),t.addBinding(o,"uPosition",{picker:"inline",label:"位置",expanded:!0,x:{min:-1e3,max:1e3,step:10},y:{min:-1e3,max:1e3,step:10}}),(n,t)=>(f(),p(e,{disableRender:!0,showAxesHelper:!1},{ability:P((()=>[h(g,x(S(o)),null,16)])),_:1}))}});export{W as default};
