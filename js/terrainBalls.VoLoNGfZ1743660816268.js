import{m as e,ab as a,c4 as s,ar as t,at as r}from"./three.2wx8FU0g1743660816268.js";import{e as o,f as n,o as l}from"./@tresjs.zc7faK4J1743660816268.js";import{c as i}from"./simplex-noise.jB2HxhHB1743660816268.js";import{W as p,S as u,B as m,H as h,V as c}from"./cannon-es.rP2QoA0q1743660816268.js";import{d,b as f,o as g,H as y,N as w,F as v,X as T,u as j,f as S,M,r as _,v as b,a2 as k,g as G,m as B,j as x,aj as L,ak as A}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";const C=d({__name:"terrainBallsCannon",props:{sphereGroup:{default:null},plane:{default:null}},setup(e){const a=e,s=new p;s.gravity.set(0,-9.82,0);const t=[];a.sphereGroup.children.forEach((e=>{const a=e.geometry.parameters.radius,r=new u(a),o=new m({mass:1});o.addShape(r),o.position.copy(e.position),t.push(o),s.addBody(o)}));let r=[];const n=a.plane.geometry.getAttribute("position"),l=a.plane.geometry.parameters.widthSegments+1,i=a.plane.geometry.parameters.heightSegments+1;for(let o=0;o<i;o++)r.push([]);for(let o=0;o<l;o++)for(let e=0;e<i;e++)r[e][o]=n.getZ((l-1-o)*i+e);const d=new h(r,{elementSize:a.plane.geometry.parameters.width/(l-1)}),f=new m({mass:0});f.addShape(d,new c(-a.plane.geometry.parameters.width/2,-a.plane.geometry.parameters.height/2,0)),f.quaternion.set(...a.plane.quaternion.toArray()),s.addBody(f);const{onLoop:g}=o();return g((({delta:e})=>{s.step(1/120,e),t.forEach(((e,s)=>{a.sphereGroup.children[s].position.copy(e.position)}))})),(e,a)=>null}}),D=["position"],q=["geometry","rotation-x"],z=["side"],P=d({__name:"terrainBallsThree",setup(s){const t=f(),r=f(),o=i(),n=new e(100,100,49,49),l=n.getAttribute("position");for(var p=0;p<l.count;p++)l.setZ(p,(u=l.getX(p),m=l.getY(p),1.2*(3.2*o(.1*u,.1*m)+.2*o(.3*u,.3*m))));var u,m;return n.computeBoundingSphere(),n.computeVertexNormals(),console.log(n),(e,s)=>(g(),y(v,null,[w("TresGroup",{ref_key:"sphereGroupRef",ref:t},[(g(),y(v,null,T(10,(e=>(g(),y(v,{key:e},[(g(),y(v,null,T(10,(a=>w("TresMesh",{key:a,position:[10*e-55,26,10*a-55],"cast-shadow":""},s[0]||(s[0]=[w("TresSphereGeometry",{args:[.6,16,16]},null,-1),w("TresMeshStandardMaterial",{color:"#ffffff"},null,-1)]),8,D))),64))],64)))),64))],512),w("TresMesh",{ref_key:"planeRef",ref:r,geometry:j(n),"rotation-x":-Math.PI/2,"receive-shadow":""},[w("TresMeshPhysicalMaterial",{roughness:1,metalness:0,color:"gray",side:a},null,8,z)],8,q),r.value?(g(),S(C,{key:0,sphereGroup:t.value,plane:r.value},null,8,["sphereGroup","plane"])):M("",!0)],64))}}),R=d({__name:"terrainBalls",setup(e){const a=_({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:s,outputColorSpace:t,toneMapping:r}),o=_({enableDamping:!0,dampingFactor:.05,enableZoom:!0,autoRotate:!1}),i=b();return k((()=>{i.value&&(i.value.shadow.mapSize.set(1e3,1e3),i.value.shadow.camera.near=.5,i.value.shadow.camera.far=5e4,i.value.shadow.camera.top=20,i.value.shadow.camera.right=20,i.value.shadow.camera.left=-20,i.value.shadow.camera.bottom=-20)})),(e,s)=>(g(),S(j(n),B(a,{"window-size":""}),{default:G((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[110,70,20],fov:45,near:.1,far:1e3},null,-1)),x(j(l),L(A(o)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:2},null,-1)),w("TresDirectionalLight",{ref_key:"TDirectionalLight",ref:i,position:[10,8,4],intensity:2,"cast-shadow":""},null,512),s[2]||(s[2]=w("TresDirectionalLight",{position:[10,2,4],intensity:2,"cast-shadow":""},null,-1)),x(P)])),_:1},16))}});export{R as default};
