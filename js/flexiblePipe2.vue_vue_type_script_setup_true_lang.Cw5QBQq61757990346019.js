import{e,h as a}from"./@tresjs.PrijCSbN1757990346019.js";import{b as t}from"./buildFlexiblePipe.BoCa2yDH1757990346019.js";import{d as l,b as o,w as s,G as r,o as n,I as i,j as u,u as d}from"./@vue.pEDXJ_3Z1757990346019.js";import{ao as f,V as m,b as v,C as c,a3 as p,aE as g}from"./three.DHXbQd-f1757990346019.js";const h={renderOrder:9999},S=["args"],y=l({__name:"flexiblePipe2",props:{color:{default:"0xff0000"},uGapColor:{default:"#ffffff"},radius:{default:.1},bodyLength:{default:2},headLength:{default:1},headAngle:{default:0},radialSegments:{default:16},tailAngle:{default:0},tailLength:{default:.5},filletRadius:{default:.3},speed:{default:.01},uStripeScale:{default:10},metalness:{default:.3},roughness:{default:.5},reflectivity:{default:.5},ior:{default:1.5}},setup(l){const y=l,C=o(new f);s((()=>[y.bodyLength,y.headLength,y.headAngle,y.tailAngle,y.tailLength,y.filletRadius,y.radialSegments]),(([e,a,l,o,s,r,n])=>{const i=e/2,u=new m(0,0,-i),d=new m(0,0,i),f=v.degToRad(l),c=new m(Math.cos(f),Math.sin(f),0),p=d.clone().add(c.multiplyScalar(a)),g=v.degToRad(o),h=new m(Math.cos(g),Math.sin(g),0),S=[u.clone().add(h.multiplyScalar(s)),u,d,p];C.value=t(S,r,n)}),{immediate:!0});const b={uTime:{value:0},uStripeScale:{value:10},uGapColor:{value:new c(y.uGapColor)}};s((()=>[y.uGapColor,y.uStripeScale]),(([e,a])=>{b.uStripeScale.value=a,b.uGapColor.value.setStyle(e)}),{immediate:!0});const{onLoop:x}=e();return x((()=>{b.uTime.value+=y.speed})),(e,t)=>(n(),r("TresMesh",h,[i("TresTubeGeometry",{args:[C.value,64,e.radius,e.radialSegments,!1]},null,8,S),u(d(a),{baseMaterial:g,color:e.color,metalness:e.metalness,roughness:e.roughness,reflectivity:e.reflectivity,ior:e.ior,side:p,transparent:"",vertexShader:"\n\tvarying vec2 vUv;\n\tvoid main() {\n\t\tvUv = vec3( uv, 1 ).xy; \n\t}\n",fragmentShader:"\n  uniform float uTime;\n  varying vec2 vUv;\n  uniform vec3 uGapColor;\n\tuniform float uStripeScale;\n\n\tvoid main() {\n\t\tvec2 vUV;  \n\t\tvUV=vUv;\n\t\tvUV.x+=uTime/uStripeScale;\n\n\t\tfloat ssColor = smoothstep(.31,.49,fract(vUV.x*uStripeScale));\n\t\tvec3 finalColor = mix(uGapColor, csm_DiffuseColor.xyz, ssColor);\n    csm_DiffuseColor=vec4(finalColor,1.0);\n\t}\n",uniforms:b},null,8,["baseMaterial","color","metalness","roughness","reflectivity","ior","side"])]))}});export{y as _};
