import{A as e,C as a,ap as s,as as t,c6 as r}from"./three.Bj3hPI0l1746335712058.js";import{m as l,e as o,k as i,a as n}from"./@tresjs.CIKSfeCC1746335712058.js";import{P as d}from"./tweakpane.C0HtAJSg1746335712058.js";import{r as u,u as m}from"./device.5qztJ5ax1746335712058.js";import{d as p,a5 as h,a3 as c,H as f,o as g,J as v,u as b,F as _,r as j,h as w,e as k,f as y,j as C,ak as B,al as T,am as x,m as L}from"./@vue.DK6ok9LJ1746335712058.js";import"./postprocessing.Dxg1zmor1746335712058.js";import"./@vueuse.BtSShokC1746335712058.js";const P=["object"],S=["object"],M=p({__name:"ByComposerTres",props:{threshold:{default:0},strength:{default:.972},radius:{default:.21}},async setup(s){let t,r;const n=s,{nodes:d}=([t,r]=h((()=>i("./plugins/industry4/model/modelDraco.glb",{draco:!0,decoderPath:"./draco/"}))),t=await t,r(),t),p=u(d.Sketchfab_model),{camera:j,renderer:w,scene:k,sizes:y}=l();let C=null,B=null,T=null;const x=new e({color:"black"});c((()=>{if(j.value){const{finalComposer:e,effectComposer:a,bloomPass:s}=m(k.value,j.value,w.value,y.width.value,y.height.value);C=e,B=a,T=s,T.threshold=n.threshold,T.strength=n.strength,T.radius=n.radius}n.threshold&&(T.threshold=n.threshold),n.strength&&(T.strength=n.strength),n.radius&&(T.radius=n.radius)}));const L={},{onLoop:M,onAfterLoop:A}=o();let z=d.Sketchfab_model.getObjectByName("canister_turbine_011_Nickel-Light-PBR_0"),D=z.material.clone(),N=new e({color:new a("red"),transparent:!0,opacity:1});return M((({elapsed:e})=>{d.hull_turbine&&(d.hull_turbine.rotation.x+=.03,d.blades_turbine_003.rotation.x+=.03),Math.floor(e)%2?z.material=D:z.material=N})),A((({elapsed:e})=>{B&&(k.value.traverse((e=>{var a;(a=e).isMesh&&(L[a.uuid]=a.material,a.material=x)})),B.render(e)),C&&(k.value.traverse((e=>{var a;L[(a=e).uuid]&&(a.material=L[a.uuid],delete L[a.uuid])})),C.render(e))})),(e,a)=>(g(),f(_,null,[v("primitive",{object:b(d).Sketchfab_model},null,8,P),v("primitive",{object:b(p)},null,8,S)],64))}}),A=p({__name:"deviceLightByComposerTres",setup(e){const a=j({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:t,toneMapping:s}),l=j({autoRotate:!0}),o=j({threshold:0,strength:.972,radius:.21}),i=new d({title:"参数"});return i.addBinding(o,"threshold",{label:"阈值",min:0,max:1,step:.1}),i.addBinding(o,"strength",{label:"强度",min:0,max:3,step:.2}),i.addBinding(o,"radius",{label:"半径",min:0,max:1,step:.1}),i.addBlade({view:"text",label:"post-processing",parse:e=>String(e),value:"未完成：等待Tresjs库更新"}),(e,s)=>{const t=w("TresCanvas");return g(),k(t,L(a,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=v("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1)),C(b(n),B(T(l)),null,16),s[1]||(s[1]=v("TresAmbientLight",{color:"#ffffff",intensity:"40"},null,-1)),s[2]||(s[2]=v("TresDirectionalLight",{position:[0,2,-4],intensity:1},null,-1)),(g(),k(x,null,{default:y((()=>[C(M,B(T(o)),null,16)])),_:1}))])),_:1},16)}}});export{A as default};
