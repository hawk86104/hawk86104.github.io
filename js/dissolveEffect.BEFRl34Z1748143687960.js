import{k as e,b as o,e as s,a as t}from"./@tresjs.CIF1IzyY1748143687960.js";import{_ as r}from"./index.BuMe8b941748143687960.js";import"./index.eYuTuqeB1748143687960.js";import"./index.BfAXr7_01748143687960.js";import{P as a}from"./tweakpane.C0HtAJSg1748143687960.js";import{_ as i}from"./lamboEffect.vue_vue_type_script_setup_true_lang.CqXYX04q1748143687960.js";import{a5 as l,a2 as n,G as u,o as d,u as p,d as m,r as c,b as f,h as g,j as v,f as h,I as x,e as j,ak as _,al as C,am as y,m as b,F as S}from"./@vue.C_fjx3FT1748143687960.js";import{C as M,ah as P,ab as T}from"./three.BAUoVmiW1748143687960.js";import{l as w}from"./bubbleLoading.DcC5478p1748143687960.js";import{_ as k}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.Ds0pslS91748143687960.js";import{_ as B}from"./component.vue_vue_type_script_setup_true_lang.CDTPpu-r1748143687960.js";import"./postprocessing.BT6kobhQ1748143687960.js";import"./@vueuse.CbR7AWyh1748143687960.js";import"./object-hash.BTmndxcc1748143687960.js";import"./@amap.CGUF9xH41748143687960.js";import"./jszip.C_0-KFr21748143687960.js";import"./utils.DUIleYiO1748143687960.js";import"./@fesjs.CQfPqpiA1748143687960.js";import"./vue-router.BZnpJAA51748143687960.js";import"./lodash-es.C7pWAXPe1748143687960.js";import"./@qlin.q6OWdsQV1748143687960.js";import"./pinia.DEEYAsso1748143687960.js";import"./@babel.BPq7uOAK1748143687960.js";import"./@floating-ui.BFjFSAYt1748143687960.js";import"./@juggle.CcBCnTIR1748143687960.js";import"./three-mesh-ui.module.D5v3rw811748143687960.js";import"./all.three.CvaAftsq1748143687960.js";import"./oimophysics.BBtHVm4j1748143687960.js";import"./reflectorDiffuse.DrPwxBzO1748143687960.js";import"./vite-plugin-qiankun.B06WoCqG1748143687960.js";import"./three-stdlib.CY7Srfdh1748143687960.js";import"./whiteFloor.CUeAdUop1748143687960.js";const I=["object","rotation"],D={__name:"dissolveEffectModel",props:{edgeColor:{default:1118481},edgeWidth:{default:.03},dissolveSpeed:{default:.003},funRef:{appear:null,disappear:null}},async setup(t,{expose:r}){let a,i;const m=t,{scene:c,nodes:f,materials:g}=([a,i]=l((()=>e("https://opensource.cdn.icegl.cn/model/industry4/lambo.glb",{draco:!0,decoderPath:"./draco/"}))),a=await a,i(),a);Object.values(f).forEach((e=>{e.isMesh&&(e.name.startsWith("glass")&&e.geometry.computeVertexNormals(),"silver_001_BreakDiscs_0"===e.name&&(e.material=g.BreakDiscs.clone(),e.material.color=new M("#ddd")))})),f.glass_003.scale.setScalar(2.7),g.FrameBlack.color=new M("black"),g.FrameBlack.roughness=0,g.FrameBlack.metalness=.75,g.Chrome.color=new M("#333"),g.Chrome.metalness=1,g.Chrome.roughness=0,g.BreakDiscs.color=new M("#555"),g.BreakDiscs.metalness=.2,g.BreakDiscs.roughness=.2,g.TiresGum.color=new M("#181818"),g.TiresGum.metalness=0,g.TiresGum.roughness=.4,g.GreyElements.color=new M("#292929"),g.GreyElements.metalness=0,f.yellow_WhiteCar_0.material=new P({roughness:.3,metalness:.05,color:"#111",envMapIntensity:.75,clearcoatRoughness:0,clearcoat:1});const v=([a,i]=l((()=>o(["./plugins/digitalCity/image/smokeparticle.png","./plugins/industry4/image/dissolve.jpg"]))),a=await a,i(),a),h=[];let x=!1;const j={dissolveProgress:0,noiseTexture:v[0],edgeColorTexture:v[1]};let _=m.dissolveSpeed;const C=()=>{if(!x){x=!0,_=m.dissolveSpeed;for(const e of h)e.uniforms.dissolveSpeed={value:_},e.uniforms.dissolveProgress={value:0}}},y=()=>{if(!x){x=!0,_=-m.dissolveSpeed;for(const e of h)e.uniforms.dissolveSpeed={value:_},e.uniforms.dissolveProgress={value:1}}};m.funRef.appear=C,m.funRef.disappear=y,r({appear:C,disappear:y}),Object.values(f).forEach((e=>{if(e.isMesh){e.frustumCulled=!1;const o=e.material;o.transparent=!0,o.onBeforeCompile=e=>{h.push(e),e.uniforms.edgeColor={value:new M(m.edgeColor)},e.uniforms.edgeWidth={value:m.edgeWidth},e.uniforms.dissolveSpeed={value:m.dissolveSpeed},e.uniforms.dissolveProgress={value:j.dissolveProgress},e.uniforms.noiseTexture={value:j.noiseTexture},e.uniforms.edgeColorTexture={value:j.edgeColorTexture},e.vertexShader=e.vertexShader.replace("#include <common>",["varying vec2 xUv;","#include <common>"].join("\n")),e.vertexShader=e.vertexShader.replace("#include <uv_vertex>",["xUv = uv;","#include <uv_vertex>"].join("\n")),e.fragmentShader=e.fragmentShader.replace("#include <common>","#include <common>\n             uniform float dissolveProgress;\n             uniform float edgeWidth;\n             uniform vec3 edgeColor;\n             uniform sampler2D noiseTexture;\n             uniform sampler2D edgeColorTexture;\n             varying vec2 xUv;\n            "),e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n                float noiseValue = texture2D(noiseTexture, xUv).r;\n              \tvec4 finalColor = texture2D(edgeColorTexture, xUv);\n\n\t\t\t\t\t\t\t\tvec3 mixedColor = mix(finalColor.rgb, edgeColor, 0.5);\n\t\t\t\t\t\t\t\tfinalColor.rgb = mixedColor;\n\n                // vec4 finalColor = linearToOutputTexel( vec4(edgeColor, gl_FragColor.a) );\n\t\t\t\t\t\t\t\tfloat alpha = step(noiseValue - edgeWidth, dissolveProgress);\n                gl_FragColor.a = alpha;\n\t\t\t\t\t\t\t\tfloat useOrigin = step(noiseValue, dissolveProgress);\n\t\t\t\t\t\t\t\tgl_FragColor.rgb = mix(finalColor.rgb, gl_FragColor.rgb, useOrigin);")}}}));const{onLoop:b}=s();return b((({dt:e})=>{if(x)for(const o of h){const{dissolveProgress:e,dissolveSpeed:s}=o.uniforms;e.value+=s.value,e.value<0&&(x=!1),e.value>1&&(x=!1)}})),n((()=>{if(m.dissolveSpeed)for(const e of h)e.uniforms.dissolveSpeed.value=m.dissolveSpeed;if(m.edgeColor)for(const e of h)e.uniforms.edgeColor.value=new M(m.edgeColor);if(m.edgeWidth)for(const e of h)e.uniforms.edgeWidth.value=m.edgeWidth})),(e,o)=>(d(),u("primitive",{object:p(c),scale:.015,rotation:[0,Math.PI/1.5,0]},null,8,I))}},W=["rotation"],R=["side"],F=["rotation"],G=["side"],E=m({__name:"dissolveEffect",setup(e){const o=c({clearColor:"#15151a",antialias:!1,logarithmicDepthBuffer:!0,renderMode:"manual"}),s=c({autoRotate:!0}),l=new a({title:"溶解参数",expanded:!0}),n=c({edgeColor:"#111111",edgeWidth:.03,dissolveSpeed:.003,funRef:{appear:null,disappear:null}});l.addBinding(n,"edgeColor",{label:"颜色"}),l.addBinding(n,"edgeWidth",{label:"宽度",min:0,max:.13,step:.01}),l.addBinding(n,"dissolveSpeed",{label:"速度",min:.001,max:.01,step:.001});const m=l.addButton({title:"显示",label:"模型"}),M=f(null);m.on("click",(()=>{M.value.appear?M.value.appear():M.value.funRef.appear()}));return l.addButton({title:"消失",label:"模型"}).on("click",(()=>{M.value.appear?M.value.disappear():M.value.funRef.disappear()})),(e,a)=>{const l=g("TresCanvas");return d(),u(S,null,[v(p(w)),v(l,b(o,{"window-size":""}),{default:h((()=>[a[2]||(a[2]=x("TresPerspectiveCamera",{position:[0,10,15],fov:25,near:.1,far:1e4},null,-1)),v(p(t),_(C(s)),null,16),a[3]||(a[3]=x("TresHemisphereLight",{intensity:.5},null,-1)),(d(),j(y,null,{default:h((()=>[v(D,b(n,{ref_key:"dissolveEffectModelRef",ref:M}),null,16)])),_:1})),(d(),j(y,null,{default:h((()=>[v(p(k),{position:[0,-1.562,0],reflectivity:2.6,showGridHelper:!1,scale:1.5})])),_:1})),x("TresMesh",{scale:4,position:[3,-1.161,-1.5],rotation:[-Math.PI/2,0,Math.PI/2.5]},[a[0]||(a[0]=x("TresRingGeometry",{args:[.9,1,4,1]},null,-1)),x("TresMeshStandardMaterial",{color:"white",roughness:.75,side:T},null,8,R)],8,W),x("TresMesh",{scale:4,position:[-3,-1.161,-1],rotation:[-Math.PI/2,0,Math.PI/2.5]},[a[1]||(a[1]=x("TresRingGeometry",{args:[.9,1,3,1]},null,-1)),x("TresMeshStandardMaterial",{color:"white",roughness:.75,side:T},null,8,G)],8,F),(d(),j(y,null,{default:h((()=>[v(p(B),{resolution:512},{default:h((()=>[v(p(r),{intensity:2,position:[0,1,3],scale:[10,1,1]}),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-6],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-3],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,0],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,3],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,6],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,9],scale:[10,1,1]},null,8,["rotation-x"]),v(p(r),{intensity:2,"rotation-y":Math.PI/2,position:[-50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),v(p(r),{intensity:2,"rotation-y":-Math.PI/2,position:[50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),v(p(r),{form:"ring",color:"red",intensity:10,scale:2,position:[10,5,10]})])),_:1})])),_:1})),v(i)])),_:1},16)],64)}}});export{E as default};
