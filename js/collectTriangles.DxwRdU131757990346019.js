import{m as e,e as t,D as s,a as n,t as a}from"./@tresjs.PrijCSbN1757990346019.js";import"./@fesjs.DsWuaiKR1757990346019.js";import"./Resource.G7gPhd561757990346019.js";/* empty css                                                                             */import{_ as o}from"./randomLoading.vue_vue_type_script_setup_true_lang.BhVVsEKM1757990346019.js";import"./three-mesh-ui.module.fjONUzeg1757990346019.js";/* empty css                                                              */import{o as r,au as i,c as l,bc as u,a as p,M as c,S as m,V as d,B as g,l as v,cr as y}from"./three.DHXbQd-f1757990346019.js";import{P as h}from"./tweakpane.C0HtAJSg1757990346019.js";import{I as f,C as j,N as b,c as _,d as w,a as T}from"./three-mesh-bvh.CMm4YHlP1757990346019.js";import{d as x,aa as M,b as L,a2 as B,G as C,o as k,F as A,I as S,u as X,r as Y,h as z,j as I,f as O,e as R,m as Z,a5 as F}from"./@vue.pEDXJ_3Z1757990346019.js";import"./postprocessing.BxUQ5pTE1757990346019.js";import"./@vueuse.D19fGRfI1757990346019.js";import"./vue-router.xKjUDrFa1757990346019.js";import"./lodash-es.C7pWAXPe1757990346019.js";import"./pinia.Bzq4ihza1757990346019.js";import"./@qlin.q6OWdsQV1757990346019.js";import"./@babel.BPq7uOAK1757990346019.js";import"./@floating-ui.BFjFSAYt1757990346019.js";import"./@juggle.CcBCnTIR1757990346019.js";import"./starLoading.CyppAvT91757990346019.js";import"./utils.BDmprct61757990346019.js";import"./cssLoaders.B22JIyZ31757990346019.js";import"./bubbleLoading.D31AVQdS1757990346019.js";import"./yangyangLoading.BvgZjldA1757990346019.js";const H=["geometry","material"],P=["geometry"],U=x({__name:"model",props:{controls:{}},async setup(n){let a,o;const x=n;g.prototype.computeBoundsTree=_,g.prototype.disposeBoundsTree=w,v.prototype.raycast=T;const Y=([a,o]=M((()=>s(y,"https://opensource.cdn.icegl.cn/model/industry4/TR12J_OCC.stl"))),a=await a,o(),a),z=new i({color:16777215,roughness:.2,metalness:1,vertexColors:!0}),I=new Uint8Array(3*Y.attributes.position.count);I.fill(255);const O=new l(I,3,!0);O.setUsage(u),Y.setAttribute("color",O);const R=L(null),Z=L(null),F=L(!1),U=L(-1),W=L(.2),E=new p,{camera:G,raycaster:V}=e(),q=15/255,D=78/255,J=85/255;let N=null;B((()=>{R.value&&(console.log("targetMesh.value init",R.value),R.value.geometry.computeBoundsTree(),N=Y.boundsTree,((e,t,s,n,a,o)=>{window.addEventListener("pointermove",(s=>{e.x=s.clientX/window.innerWidth*2-1,e.y=-s.clientY/window.innerHeight*2+1,t.value=!0})),window.addEventListener("pointerdown",(i=>{e.x=i.clientX/window.innerWidth*2-1,e.y=-i.clientY/window.innerHeight*2+1,n.value=i.button;const l=new r;l.setFromCamera(e,s.value),l.firstHitOnly=!0;const u=l.intersectObject(a.value,!0);t.value=!0,o.enabled=0===u.length}),!0),window.addEventListener("pointerup",(e=>{n.value=-1,"touch"===e.pointerType&&(t.value=!1)}),!0)})(E,F,G,U,R,x.controls.instance))}));const{onLoop:$}=t();$((()=>{const e=Y.index;if(Z.value)if(x.controls.instance.active||!F.value)Z.value.visible=!1;else{Z.value.scale.setScalar(W.value),V.value.setFromCamera(E,G.value),V.value.firstHitOnly=!0;const t=V.value.intersectObject(R.value,!0);if(t.length){Z.value.position.copy(t[0].point),x.controls.instance.enabled=!1,Z.value.visible=!0;const s=new c;s.copy(R.value.matrixWorld).invert();const n=new m;n.center.copy(Z.value.position).applyMatrix4(s),n.radius=100*W.value;const a=[],o=new d;if(N?.shapecast({intersectsBounds:e=>{const t=n.intersectsBox(e),{min:s,max:a}=e;if(t){for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)for(let r=0;r<=1;r++)if(o.set(0===e?s.x:a.x,0===t?s.y:a.y,0===r?s.z:a.z),!n.containsPoint(o))return f;return j}return t?f:b},intersectsTriangle:(e,t,s)=>{if(s||e.intersectsSphere(n)){const e=3*t;a.push(e,e+1,e+2)}return!1}}),0===U.value||2===U.value){let t=1,s=1,n=1;0===U.value&&(t=q,s=D,n=J);for(let o=0,r=a.length;o<r;o++){const r=e.getX(a[o]);O.setX(r,t),O.setY(r,s),O.setZ(r,n)}O.needsUpdate=!0}}else Z.value.visible=!1,x.controls.instance.enabled=!0}}));const K=(new h).addButton({title:"点击按钮",label:"生成模型"}),Q=new g;return K.on("click",(()=>{const e=[],t=[];for(let n=0;n<O.count;n++)O.getX(n)===q&&O.getY(n)===D&&O.getZ(n)===J&&(e.push(Y.attributes.position.getX(n),Y.attributes.position.getY(n),Y.attributes.position.getZ(n)),t.push(Y.attributes.normal.getX(n),Y.attributes.normal.getY(n),Y.attributes.normal.getZ(n)));const s=new Float32Array(e);Q.setAttribute("position",new l(s,3)),Q.setAttribute("normal",new l(s,3))})),(e,t)=>(k(),C(A,null,[S("TresMesh",{ref_key:"targetMesh",ref:R,geometry:X(Y),scale:.005,material:X(z)},null,8,H),S("TresMesh",{ref_key:"brushMesh",ref:Z,visible:!1},t[0]||(t[0]=[S("TresSphereGeometry",{args:[1,40,40]},null,-1),S("TresMeshStandardMaterial",{color:15483002,roughness:.75,metalness:0,transparent:!0,opacity:.5,premultipliedAlpha:!0,emissive:15483002,emissiveIntensity:.5},null,-1)]),512),S("TresMesh",{geometry:X(Q),position:[-2,-2,2],scale:.005},t[1]||(t[1]=[S("TresMeshStandardMaterial",{color:"#023249",roughness:.2,metalness:0,envMapIntensity:.2},null,-1)]),8,P)],64))}}),W=x({__name:"collectTriangles",setup(e){const t=Y({clearColor:"#999999",antialias:!0}),s=Y({autoRotate:!1}),r=L(null);return(e,i)=>{const l=z("TresCanvas");return k(),C(A,null,[I(X(o)),I(l,Z(t,{"window-size":""}),{default:O((()=>[i[0]||(i[0]=S("TresPerspectiveCamera",{position:[5,1,15],fov:30,near:.1,far:1e3},null,-1)),I(X(n),Z({ref_key:"controlsRef",ref:r},s),null,16),i[1]||(i[1]=S("TresAmbientLight",{intensity:1},null,-1)),(k(),R(F,null,{default:O((()=>[I(U,{controls:r.value},null,8,["controls"])])),_:1})),(k(),R(F,null,{default:O((()=>[I(X(a),{background:!1,files:["pos-x.jpg","neg-x.jpg","pos-y.jpg","neg-y.jpg","pos-z.jpg","neg-z.jpg"],path:"https://opensource.cdn.icegl.cn/images/skyBox/6jpg/"},null,8,["path"])])),_:1}))])),_:1},16)],64)}}});export{W as default};
