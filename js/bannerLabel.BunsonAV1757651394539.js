import{a as e}from"./@tresjs.DIdO2Yiu1757651394539.js";import{P as a}from"./tweakpane.C0HtAJSg1757651394539.js";import"./@fesjs.Bp6K4IrA1757651394539.js";import"./Resource.KHds72Cg1757651394539.js";/* empty css                                                                             */import{_ as t}from"./bannerLabel.vue_vue_type_script_setup_true_lang.DCCQcQAV1757651394539.js";import"./three-mesh-ui.module.DvGiv1gQ1757651394539.js";/* empty css                                                              */import{d as i,r as o,h as r,e as n,o as s,f as l,I as d,j as m,u as p,m as u}from"./@vue.pEDXJ_3Z1757651394539.js";import"./three.CMHPKQCP1757651394539.js";import"./postprocessing.BgyKo9Ns1757651394539.js";import"./@vueuse.nD2ilM161757651394539.js";import"./vue-router.Dbyy8kqJ1757651394539.js";import"./lodash-es.C7pWAXPe1757651394539.js";import"./pinia.ByleU3mk1757651394539.js";import"./@qlin.q6OWdsQV1757651394539.js";import"./@babel.BPq7uOAK1757651394539.js";import"./@floating-ui.BFjFSAYt1757651394539.js";import"./@juggle.CcBCnTIR1757651394539.js";const b=i({__name:"bannerLabel",setup(i){const b=o({text:"标识",fontSize:32,fontColor:"#000000",backgroundColor:"#ffaa0066",padding:{y:10,x:20},align:"left-center",scaleFactor:.01,borderColor:"#000000",borderWidth:1,borderRadius:2,dpi:2,isSprite:!0}),g=new a({title:"参数",expanded:!0});g.addBinding(b,"isSprite",{label:"是否精灵图"}).on("change",(e=>{_.disabled=!e.value})),g.addBinding(b,"text",{label:"文字内容"}),g.addBinding(b,"fontSize",{label:"文字大小",min:1,max:100}),g.addBinding(b,"fontColor",{label:"文字颜色"}),g.addBinding(b,"backgroundColor",{label:"背景色"}),g.addBinding(b,"padding",{label:"内边距",x:{min:1,max:50},y:{min:1,max:50}});const c=["left-top","left-center","left-bottom","center-top","center","center-bottom","right-top","right-center","right-bottom"].map((e=>({text:e,value:e}))),_=g.addBlade({view:"list",label:"定位",options:c,value:b.align,disabled:!1===b.isSprite});return _.on("change",(e=>{b.align=e.value})),g.addBinding(b,"scaleFactor",{label:"缩放因子",min:9e-4,max:.02}),g.addBinding(b,"borderColor",{label:"边框颜色"}),g.addBinding(b,"borderWidth",{label:"边框粗细",min:1,max:10,step:.01}),g.addBinding(b,"borderRadius",{label:"边框外弧度",min:0,max:20,step:.1}),g.addBinding(b,"dpi",{label:"清晰度",min:1,max:10,step:.1}),(a,i)=>{const o=r("TresCanvas");return s(),n(o,{clearColor:"#999","window-size":""},{default:l((()=>[i[0]||(i[0]=d("TresPerspectiveCamera",{position:[5,5,5]},null,-1)),m(p(e)),i[1]||(i[1]=d("TresMesh",null,[d("TresBoxGeometry"),d("TresMeshNormalMaterial")],-1)),m(p(t),u({position:[.5,1,0]},b),null,16)])),_:1})}}});export{b as default};
