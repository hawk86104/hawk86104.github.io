import{u as t,_ as n,a as o}from"./mergeTres.T5dbdRE21726563592429.js";import{l as r}from"./utils.Z-lsLrXZ1726563592429.js";import{U as e}from"./@tresjs.Mu0zjs701726563592429.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as g,j as d,g as m,f as h,al as _,am as C,an as y}from"./@vue.bvMz0l_u1726563592429.js";import{_ as x}from"./@fesjs.Kb69K-9r1726563592429.js";import"./@amap.JADYh6_E1726563592429.js";import"./pinia.DLSH1Ooz1726563592429.js";import"./three.ZWd_rX7H1726563592429.js";import"./three-mesh-bvh.Z7OdME_M1726563592429.js";import"./@vueuse.a2m4N83v1726563592429.js";import"./vue-router.69lN8_NV1726563592429.js";import"./lodash-es.guXTxyfJ1726563592429.js";import"./@qlin.yHhFDldE1726563592429.js";import"./@floating-ui.BPbuo5Gx1726563592429.js";import"./@juggle.7yjBMqoW1726563592429.js";const w=j;!function(t,n){const o=j,r=z();for(;;)try{if(644535===-parseInt(o(190))/1+-parseInt(o(236))/2+parseInt(o(252))/3*(-parseInt(o(244))/4)+-parseInt(o(231))/5+-parseInt(o(234))/6*(-parseInt(o(208))/7)+parseInt(o(216))/8*(-parseInt(o(218))/9)+parseInt(o(246))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(226)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=j,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(211),"i"),r=F(t(202));n[t(196)](r+t(210))&&o[t(196)](r+t(238))?F():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(226)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=j,n=function(){const t=j;let n;try{n=Function(t(228)+t(250)+");")()}catch(o){n=window}return n}(),o=n[t(230)]=n.console||{},r=["log","warn",t(194),t(217),"exception",t(200),t(215)];for(let e=0;e<r[t(227)];e++){const n=I[t(240)][t(249)][t(188)](I),a=r[e],i=o[a]||n;n[t(191)]=I.bind(I),n.toString=i[t(222)][t(188)](i),o[a]=n}}))();const S=[w(192),w(197),w(221)];function j(t,n){const o=z();return(j=function(t,n){return o[t-=187]})(t,n)}function z(){const t=["TresMesh","466672VTgChB","normalArray","input","u_far","constructor","tbgRef","TresGroup","gger","104YulyCC","debu","36940590vGDoss","mapHandle","counter","prototype",'{}.constructor("return this")( )',"stateObject","122592XfjmKn","push","bind","call","867877VaDKVR","__proto__","position","TresBufferGeometry","info","u_zoom","test","faceUv","uvArray","positionArray","table","getZoom","init","exp","while (true) {}","far","customCoords","buildingModels","14QkGFys","action","chain","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uniforms","TresShaderMaterial","value","trace","6377240gaagkU","error","9vYuJgv","lngLatToCoord","cameraState","normal","toString","atan","string","geometry","apply","length","return (function() ","buildings","console","1118500XQZGKK","u_near","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","405024eqTHrV"];return(z=function(){return t})()}const R=a({__name:w(207),setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(247)][n(206)][n(219)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},g=i([]),d={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[j(220)]&&(async()=>{const t=j,n=await r(t(233),t(229));for(let o=0;o<n[t(227)];o++){const r=n[o];a(r[t(225)]);const e=new Float32Array(r[t(225)]),i=new Float32Array(r[t(197)]),l=new Float32Array(r.geometry[t(227)]);g[t(187)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o.cameraState&&(d.uniforms[t(195)][t(214)]=o[t(247)][t(201)](),d[t(212)][t(232)][t(214)]=o[t(220)].near,d[t(212)][t(239)].value=o[t(220)][t(205)])})),(t,n)=>{const o=j;return c(),s(o(242),null,[(c(!0),s(u,null,f(g,((t,n)=>{const r=o;return c(),s(r(235),{key:""+n},[p(r(193),{ref_for:!0,ref:r(241),position:[t[r(199)],3],faceUv:[t[r(198)],2],normal:[t[r(237)],3]},null,8,S),p(r(213),v({ref_for:!0},d),null,16)])})),128))])}}});function F(t){function n(t){const o=j;if(typeof t===o(224))return function(t){}.constructor(o(204)).apply(o(248));1!==(""+t/t)[o(227)]||t%20==0?function(){return!0}[o(240)](o(245)+"gger")[o(189)](o(209)):function(){return!1}.constructor("debu"+o(243))[o(226)](o(251)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const P=k;!function(t,n){const o=k,r=D();for(;;)try{if(520499===-parseInt(o(446))/1*(parseInt(o(428))/2)+-parseInt(o(456))/3*(parseInt(o(435))/4)+-parseInt(o(432))/5+parseInt(o(453))/6*(parseInt(o(443))/7)+parseInt(o(445))/8+parseInt(o(457))/9*(parseInt(o(448))/10)+parseInt(o(454))/11*(parseInt(o(425))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[k(464)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=k,n=new RegExp(t(451)),o=new RegExp(t(447),"i"),r=E("init");n[t(455)](r+t(430))&&o[t(455)](r+t(461))?E():r("0")}))()}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[k(464)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function k(t,n){const o=D();return(k=function(t,n){return o[t-=425]})(t,n)}U(void 0,(function(){const t=k;let n;try{n=Function(t(434)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(450)]=n[t(450)]||{},r=["log","warn",t(442),"error",t(460),t(458),t(426)];for(let a=0;a<r.length;a++){const n=U.constructor[t(465)][t(449)](U),e=r[a],i=o[e]||n;n[t(437)]=U[t(449)](U),n[t(440)]=i[t(440)][t(449)](i),o[e]=n}}))();const L=t=>(C(P(427)),t=t(),y(),t),M=L((()=>p(P(459),{fov:60,near:.1,far:2e3},null,-1))),V=L((()=>p(P(463),{intensity:.5},null,-1)));function D(){const t=["9191AXNntE","manual","3115776vxgpNN","5mKDoVk","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","20iVftCf","bind","console","function *\\( *\\)","string","3000IHrYrJ","11142758erWzGE","test","267IOIHOj","538389YIYJjk","table","TresPerspectiveCamera","exception","input","gger","TresAmbientLight","apply","prototype","12MknqZn","trace","data-v-f2059998","208534QdlRFp","debu","chain","TresCanvas","3078315OXPoZL","constructor","return (function() ","23420gGhvCd","while (true) {}","__proto__","action","tcRef","toString","length","info"];return(D=function(){return t})()}function E(t){function n(t){const o=k;if(typeof t===o(452))return function(t){}[o(433)](o(436)).apply("counter");1!==(""+t/t)[o(441)]||t%20==0?function(){return!0}[o(433)]("debugger").call(o(438)):function(){return!1}.constructor(o(429)+o(462))[o(464)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const W=x(a({__name:"buildings",setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(444)});return(t,i)=>{const l=r,f=g(l(431));return c(),s(u,null,[d(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),d(f,v({id:"tresCanvas",ref:l(439)},a),{default:m((()=>[M,V,d(o,{center:e}),(c(),h(_,null,{default:m((()=>[d(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{W as default};
