import{U as e,Y as n}from"./@tresjs.CmAaFQUS1729762363846.js";import{_ as t,k as o,ak as r}from"./three.CQvcOG671729762363846.js";import{P as i}from"./tweakpane.BCjFYDHx1729762363846.js";import{d as a,w as l,o as u,E as c,L as v,u as s,r as f,e as p,f as g,g as d,j as y,aj as m,ak as x,m as P}from"./@vue.n8X62v121729762363846.js";import"./@vueuse.DvZn62wO1729762363846.js";const z=W;function W(e,n){const t=S();return(W=function(e,n){return t[e-=288]})(e,n)}!function(e,n){const t=W,o=S();for(;;)try{if(535589===parseInt(t(356))/1*(-parseInt(t(341))/2)+parseInt(t(334))/3+parseInt(t(345))/4*(parseInt(t(298))/5)+-parseInt(t(316))/6*(parseInt(t(321))/7)+parseInt(t(315))/8*(parseInt(t(325))/9)+-parseInt(t(317))/10+parseInt(t(328))/11*(parseInt(t(348))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[W(318)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){w(this,(function(){const e=W,n=new RegExp(e(320)),t=new RegExp(e(292),"i"),o=F(e(340));n.test(o+e(293))&&t[e(358)](o+"input")?F():o("0")}))()}();const C=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[W(318)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(){const e=["7903060ONTiOc","apply",'{}.constructor("return this")( )',"function *\\( *\\)","7qpsytN","DoubleSide","log","string","540531JWdZlC","bind","uPerlinWaveAmplitude","66539iTNFME","gger","TresShaderMaterial","vertexShader","setStyle","valleyColor","543585SEYeKF","uTime","set","counter","while (true) {}","#184650","init","508372aUsCVQ","side","uSinWaveSpeed","constructor","4nJLOUD","perlinWaveSpeed","uPerlinWaveFrequency","2676hUpkQL","info","__proto__","console","call","prototype","Color","uWaveAmplitude","2GKIpDi","#b367ff","test","error","uPeakColor","perlinWaveAmplitude","perlinWaveFrequency","fragmentShader","uPerlinWaveIterations","rotation-x","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","chain","toString","waveAmplitude","waveC","wireframe","659275hhTRdp","TresPlaneGeometry","uValleyColor","sinWaveFrequency","colorDamping","Vector2","value","length","sinWaveSpeed","trace","TresMesh","peakColor","uColorOffset","uSinWaveFrequency","colorOffset","debu","warn","64gKuLev","1849092modyvD"];return(S=function(){return e})()}C(void 0,(function(){const e=W,n=function(){const e=W;let n;try{n=Function("return (function() "+e(319)+");")()}catch(t){n=window}return n}(),t=n[e(351)]=n.console||{},o=[e(323),e(314),e(349),e(359),"exception","table",e(307)];for(let r=0;r<o[e(305)];r++){const n=C[e(344)][e(353)][e(326)](C),i=o[r],a=t[i]||n;n[e(350)]=C[e(326)](C),n.toString=a[e(294)][e(326)](a),t[i]=n}}))();const h=[z(291)],I=v(z(299),{args:[10,10,512,512]},null,-1),_=[z(342),z(331),z(289),z(297)],b=a({__name:z(296),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(357)},valleyColor:{default:z(339)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,i=n,a={uTime:{value:0},uPeakColor:{value:new(t[r(354)])(i.peakColor)},uValleyColor:{value:new(t[r(354)])(i[r(333)])},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i[r(302)]},uSinWaveFrequency:{value:new o(i[r(301)].x,i[r(301)].y)},uWaveAmplitude:{value:i[r(295)]},uSinWaveSpeed:{value:new(t[r(303)])(i[r(306)].x,i[r(306)].y)},uPerlinWaveIterations:{value:i.perlinWaveIterations},uPerlinWaveFrequency:{value:i.perlinWaveFrequency},uPerlinWaveAmplitude:{value:i[r(361)]},uPerlinWaveSpeed:{value:i[r(346)]}},{onLoop:f}=e();return f((({elapsed:e})=>{a[r(335)].value=e})),l((()=>i),(()=>{const e=r;a[e(360)][e(304)][e(332)](i[e(309)]),a[e(300)][e(304)][e(332)](i.valleyColor),a[e(310)].value=i[e(312)],a.uColorDamping[e(304)]=i[e(302)],a[e(311)][e(304)][e(336)](i.sinWaveFrequency.x,i[e(301)].y),a[e(355)][e(304)]=i[e(295)],a[e(343)][e(304)][e(336)](i[e(306)].x,i[e(306)].y),a[e(290)].value=i.perlinWaveIterations,a[e(347)][e(304)]=i[e(288)],a[e(327)][e(304)]=i.perlinWaveAmplitude,a.uPerlinWaveSpeed[e(304)]=i[e(346)]}),{deep:!0}),(e,n)=>{const o=r;return u(),c(o(308),{"rotation-x":-Math.PI/2,"position-y":1},[I,v(o(330),{side:t[o(322)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[o(297)]},null,8,_)],8,h)}}});function F(e){function n(e){const t=W;if(typeof e===t(324))return function(e){}[t(344)](t(338))[t(318)](t(337));1!==(""+e/e)[t(305)]||e%20==0?function(){return!0}[t(344)](t(313)+"gger")[t(352)]("action"):function(){return!1}[t(344)](t(313)+t(329))[t(318)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}const k=D;!function(e,n){const t=D,o=q();for(;;)try{if(150044===parseInt(t(209))/1*(parseInt(t(240))/2)+parseInt(t(219))/3*(-parseInt(t(195))/4)+parseInt(t(207))/5+parseInt(t(214))/6*(parseInt(t(212))/7)+parseInt(t(199))/8*(parseInt(t(246))/9)+parseInt(t(231))/10*(-parseInt(t(244))/11)+-parseInt(t(210))/12)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[D(226)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function q(){const e=["1437875QwyGUe","error","2333QYkuXL","3339780cprZhQ","#ff6767","1461166CKLZCt","info","6uAPKBR","string","length","trace","网格化","12jNiFQh","colorDamping","console","action","while (true) {}","colorOffset","init","apply","input","log","toString","warn","10cmYoRZ","#310039","table","正弦波振幅","TresGridHelper","addBinding","__proto__","return (function() ","function *\\( *\\)","214ZVmgOH","小波浪速度","inline","constructor","2606439FJDRVK","counter","559584aQZtvu","正弦波频率","peakColor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","waveC","waveAmplitude","山谷颜色","NoToneMapping","perlinWaveSpeed",'{}.constructor("return this")( )',"颜色偏移","sinWaveSpeed","perlinWaveFrequency","颜色抑制","267164qkYblV","perlinWaveIterations","TresCanvas","gger","24npvdax","stateObject","wireframe","prototype","正弦波速度","bind","BasicShadowMap","山峰颜色"];return(q=function(){return e})()}!function(){A(this,(function(){const e=D,n=new RegExp(e(239)),t=new RegExp(e(249),"i"),o=E(e(225));n.test(o+"chain")&&t.test(o+e(227))?E():o("0")}))()}();const T=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();T(void 0,(function(){const e=D,n=function(){const e=D;let n;try{n=Function(e(238)+e(190)+");")()}catch(t){n=window}return n}(),t=n[e(221)]=n[e(221)]||{},o=[e(228),e(230),e(213),e(208),"exception",e(233),e(217)];for(let r=0;r<o[e(216)];r++){const n=T[e(243)][e(202)][e(204)](T),i=o[r],a=t[i]||n;n[e(237)]=T[e(204)](T),n[e(229)]=a[e(229)][e(204)](a),t[i]=n}}))();const O=v("TresPerspectiveCamera",{position:[10,10,10]},null,-1),j=v(k(235),{args:[10,10]},null,-1);function D(e,n){const t=q();return(D=function(e,n){return t[e-=189]})(e,n)}const M=a({__name:k(250),setup(e){const o=k,a={clearColor:"#222",shadows:!0,alpha:!1,shadowMapType:t[o(205)],outputColorSpace:r,toneMapping:t[o(253)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:o(211),valleyColor:o(232),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c[o(236)](l,o(201),{label:o(218)}),c[o(236)](l,o(248),{label:o(206)}),c[o(236)](l,"valleyColor",{label:o(252)}),c[o(236)](l,o(224),{label:o(191),min:.01,max:3,step:.01}),c.addBinding(l,o(220),{label:o(194),min:.01,max:6,step:.01}),c[o(236)](l,"sinWaveFrequency",{label:o(247),picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c[o(236)](l,o(251),{label:o(234),min:0,max:2,step:.01}),c[o(236)](l,o(192),{label:o(203),picker:o(242),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c[o(236)](l,o(196),{label:"小波浪层数",min:1,max:7,step:.1}),c.addBinding(l,o(193),{label:"小波浪频率",min:0,max:5,step:.01}),c[o(236)](l,"perlinWaveAmplitude",{label:"小波浪幅度",min:0,max:2,step:.01}),c[o(236)](l,o(189),{label:o(241),min:0,max:2,step:.01}),(e,t)=>{const r=p(o(197));return u(),g(r,P(a,{"window-size":""}),{default:d((()=>[O,y(s(n)),j,y(b,m(x(l)),null,16)])),_:1},16)}}});function E(e){function n(e){const t=D;if(typeof e===t(215))return function(e){}[t(243)](t(223))[t(226)](t(245));1!==(""+e/e)[t(216)]||e%20==0?function(){return!0}.constructor("debu"+t(198)).call(t(222)):function(){return!1}[t(243)]("debu"+t(198))[t(226)](t(200)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{M as default};
