import{u as t,_ as n,a as o}from"./mergeTres.LhpZ4IwG1731987698599.js";import{l as r}from"./utils.XT-actNW1731987698599.js";import{e}from"./@tresjs.juy9qkLz1731987698599.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-THQH3GC1731987698599.js";import{_ as y}from"./@fesjs.6cRBmkVw1731987698599.js";import"./@amap.8HDR-twf1731987698599.js";import"./pinia.qOeBz4jM1731987698599.js";import"./vue-demi.C4xddsk91731987698599.js";import"./three.3RwiW87x1731987698599.js";import"./three-mesh-bvh.L_h1M-WP1731987698599.js";import"./@vueuse.R8VPJfVr1731987698599.js";import"./vue-router.0Hzo7MDu1731987698599.js";import"./lodash-es.kYt-_xTG1731987698599.js";import"./@qlin.yHhFDldE1731987698599.js";import"./@floating-ui.BPbuo5Gx1731987698599.js";import"./@juggle.7yjBMqoW1731987698599.js";const C=I;!function(t,n){const o=I,r=S();for(;;)try{if(326057===-parseInt(o(255))/1*(-parseInt(o(304))/2)+-parseInt(o(257))/3+parseInt(o(275))/4*(-parseInt(o(303))/5)+parseInt(o(302))/6*(-parseInt(o(309))/7)+parseInt(o(281))/8*(-parseInt(o(266))/9)+parseInt(o(287))/10*(-parseInt(o(265))/11)+parseInt(o(312))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=I,n=new RegExp(t(262)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(t(256));n[t(289)](r+"chain")&&o[t(289)](r+t(301))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(294)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();w(void 0,(function(){const t=I;let n;try{n=Function(t(250)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(270)]=n[t(270)]||{},r=[t(305),t(297),t(313),t(293),t(299),"table",t(311)];for(let a=0;a<r.length;a++){const n=w[t(252)][t(291)][t(258)](w),e=r[a],i=o[e]||n;n[t(286)]=w.bind(w),n[t(310)]=i[t(310)][t(258)](i),o[e]=n}}))();const b=[C(300),C(251),C(282)];function I(t,n){const o=S();return(I=function(t,n){return o[t-=247]})(t,n)}function S(){const t=["warn","cameraState","exception","position","input","18132MMJuAm","699835zhxlml","128RmZJvg","log","u_zoom","buildingModels","counter","406OwiDHn","toString","trace","27091008yAyKAP","info","value","buildings","normalArray","return (function() ","faceUv","constructor","push","TresBufferGeometry","6881JumxAN","init","1907325KioaUq","bind","while (true) {}","exp","lngLatToCoord","function *\\( *\\)","uvArray","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","55UwgBUv","18PwXawH","TresGroup","debu","action","console","near","u_far","getZoom","length","12zrEcgM","customCoords","positionArray","geometry","tbgRef","atan","2351256ecRvAs","normal","TresShaderMaterial","gger","string","__proto__","1106290fSTAKt","uniforms","test","mapHandle","prototype","u_near","error","apply","stateObject","call"];return(S=function(){return t})()}const j=a({__name:C(307),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t[n(274)];r+=3){const e=[t[r],t[r+1]],a=o[n(290)].customCoords[n(261)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=I,n=await r(t(264),t(248));for(let o=0;o<n[t(274)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(251)]),l=new Float32Array(r[t(278)].length);d[t(253)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;o[t(298)]&&(g.uniforms[t(306)][t(247)]=o.mapHandle[t(273)](),g[t(288)][t(292)][t(247)]=o[t(298)][t(271)],g[t(288)][t(272)][t(247)]=o.cameraState.far)})),(t,n)=>{const o=I;return c(),s(o(267),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s("TresMesh",{key:""+n},[p(r(254),{ref_for:!0,ref:r(279),position:[t[r(277)],3],faceUv:[t[r(263)],2],normal:[t[r(249)],3]},null,8,b),p(r(283),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=I;if(typeof t===o(285))return function(t){}[o(252)](o(259))[o(294)](o(308));1!==(""+t/t)[o(274)]||t%20==0?function(){return!0}[o(252)](o(268)+o(284))[o(296)](o(269)):function(){return!1}[o(252)](o(268)+"gger")[o(294)](o(295)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function A(){const t=["input","apply","1395236SSFFfG","constructor","gger","counter","log","2215434tUIIHp","call","debu","while (true) {}","1RMTNkO","prototype","7hFtWGl","968224xCxuiD","table","stateObject","manual","tcRef","return (function() ","tresCanvas","13050070LFvYAh","TresAmbientLight","console","1792062IAPXHB","90826dEKNLQ","trace","test","info","TresPerspectiveCamera","bind","5niVVSA","warn",'{}.constructor("return this")( )',"darkblue","error","init","toString","695595RWQVRT","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","TresCanvas","20FfXFVY","string"];return(A=function(){return t})()}function F(t,n){const o=A();return(F=function(t,n){return o[t-=412]})(t,n)}!function(t,n){const o=F,r=A();for(;;)try{if(328220===parseInt(o(438))/1*(parseInt(o(452))/2)+parseInt(o(421))/3+-parseInt(o(429))/4*(-parseInt(o(414))/5)+parseInt(o(434))/6*(parseInt(o(440))/7)+parseInt(o(441))/8+parseInt(o(451))/9*(parseInt(o(425))/10)+-parseInt(o(448))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=F,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(422),"i"),r=U(t(419));n[t(454)](r+"chain")&&o[t(454)](r+t(427))?U():r("0")}))()}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[F(428)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();P(void 0,(function(){const t=F;let n;try{n=Function(t(446)+t(416)+");")()}catch(e){n=window}const o=n.console=n[t(450)]||{},r=[t(433),t(415),t(455),t(418),"exception",t(442),t(453)];for(let a=0;a<r.length;a++){const n=P[t(430)][t(439)][t(413)](P),e=r[a],i=o[e]||n;n.__proto__=P[t(413)](P),n[t(420)]=i[t(420)].bind(i),o[e]=n}}))();function U(t){function n(t){const o=F;if(typeof t===o(426))return function(t){}.constructor(o(437))[o(428)](o(432));1!==(""+t/t)[o(423)]||t%20==0?function(){return!0}[o(430)](o(436)+o(431))[o(435)]("action"):function(){return!1}[o(430)](o(436)+o(431))[o(428)](o(443)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=y(a({__name:"buildings",setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(444)});return(t,i)=>{const l=r,f=d(l(424));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(417)}),g(f,v({id:l(447),ref:l(445)},a),{default:m((()=>[i[0]||(i[0]=p(l(412),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(449),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
