import{t,_ as n,a0 as e,T as o,at as r,ai as i}from"./three.874nNzAX1726273176332.js";import{U as a,z as s,Y as c,L as l}from"./@tresjs.BFyWuCYn1726273176332.js";import"./index.jm2FsT0V1726273176332.js";import{a as u}from"./simplex-noise.P9JMzoHY1726273176332.js";import{C as f}from"./index.qxyd_JCa1726273176332.js";import{d as p,a4 as h,o as m,E as v,L as d,u as g,r as x,f as w,g as y,j as b,aj as _,ak as M,al as j}from"./@vue.JNsx1iN61726273176332.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.LnesFWni1726273176332.js";import"./@vueuse.NxhkGURn1726273176332.js";import"./lamina.YIeGURM11726273176332.js";import"./glsl-tokenizer.pufBtMwG1726273176332.js";import"./@amap.5r4w7xpt1726273176332.js";import"./glsl-token-descope.tGfw50xB1726273176332.js";import"./glsl-token-depth.LnJ4XvXX1726273176332.js";import"./glsl-token-scope.21deN0f-1726273176332.js";import"./glsl-token-properties.7P0W2HoD1726273176332.js";import"./glsl-token-assignments.6uRjCMaP1726273176332.js";import"./glsl-token-string.tJdjKq7d1726273176332.js";import"./glsl-token-functions.g-9MLpdi1726273176332.js";import"./object-hash.POLi8wZH1726273176332.js";import"./jszip.nlLK-hOV1726273176332.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.w7kVH-gI1726273176332.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.eCqoeFH11726273176332.js";import"./three-stdlib.OiSmdEWB1726273176332.js";import"./@pmndrs.4EygttyV1726273176332.js";import"./utils.CWCtnabC1726273176332.js";const A=D;!function(t,n){const e=D,o=S();for(;;)try{if(787358===-parseInt(e(316))/1+parseInt(e(325))/2+-parseInt(e(318))/3+parseInt(e(346))/4+-parseInt(e(371))/5*(-parseInt(e(340))/6)+-parseInt(e(323))/7+parseInt(e(387))/8*(-parseInt(e(367))/9))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){I(this,(function(){const t=D,n=new RegExp(t(329)),e=new RegExp(t(335),"i"),o=E(t(395));n.test(o+"chain")&&e[t(327)](o+t(342))?E():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[D(396)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function S(){const t=["uniforms","Vector4","TresGroup","109268LkMsVb","convertSRGBToLinear","1043850tESHqI","translate","attributes-uv","geometry","#000f00","8079925bQLkUZ","debu","3096540PrNKbF","attributes-offset","test","attributes-stretch","function *\\( *\\)","length","info","attributes-halfRootAngleCos","joints","instances","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","index","set","orientationsF32","return (function() ","6018324KCIgLK","toString","input","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","exception","InstancedBufferAttribute","1486984HHuKTw","attributes-position","Vector3",'{}.constructor("return this")( )',"error","sin","needsUpdate","prototype","counter","log","normalize","attributes","random","value","computeVertexNormals","push","halfRootAngleCosF32","cos","alphaMap","time","attributes-orientation","4717971SvoSvw","position","toneMapped","halfRootAngleSinF32","5TlsmSc","action","array","TresMesh","side","gger","map","TresMeshStandardMaterial","stretchesF32","__proto__","bind","console","Color","width","stateObject","material","8ADovBS","lookAt","trace","while (true) {}","grass","attributes-halfRootAngleSin","constructor","call","init","apply"];return(S=function(){return t})()}C(void 0,(function(){const t=D,n=function(){const t=D;let n;try{n=Function(t(339)+t(349)+");")()}catch(e){n=window}return n}(),e=n.console=n[t(382)]||{},o=[t(355),"warn",t(331),t(350),t(344),"table",t(389)];for(let r=0;r<o.length;r++){const n=C[t(393)][t(353)][t(381)](C),i=o[r],a=e[i]||n;n[t(380)]=C.bind(C),n[t(341)]=a.toString[t(381)](a),e[i]=n}}))();const k=[A(386)],F=["index",A(347),A(320),A(326),A(366),A(328),A(392),A(332)],R=[A(321)],L=["side"],T=p({__name:A(391),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),w=i,y=u(Math[c(358)]);function b(t,n){const e=t.x*n.w+t.y*n.z-t.z*n.y+t.w*n.x,o=-t.x*n.z+t.y*n.w+t.z*n.x+t.w*n.y,i=t.x*n.y-t.y*n.x+t.z*n.w+t.w*n.z,a=-t.x*n.x-t.y*n.y-t.z*n.z+t.w*n.w;return new r(e,o,i,a)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const M=function(t,e){const r=c,i=[],a=[],s=[],l=[],u=[];let f=new(n[r(314)]),p=new(n[r(314)]);const h=-.25;for(let o=0;o<t;o++){const c=Math[r(358)]()*e-e/2,m=Math.random()*e-e/2,v=_(c,m);i[r(361)](c,v,m);let d=Math.PI-Math[r(358)]()*(2*Math.PI);l.push(Math[r(351)](.5*d)),u[r(361)](Math[r(363)](.5*d));let g=new(n[r(348)])(0,1,0),x=g.x*Math.sin(d/2),w=g.y*Math[r(351)](d/2),y=g.z*Math[r(351)](d/2),M=Math[r(363)](d/2);f.set(x,w,y,M)[r(356)](),d=.5*Math[r(358)]()+h,g=new(n[r(348)])(1,0,0),x=g.x*Math[r(351)](d/2),w=g.y*Math[r(351)](d/2),y=g.z*Math[r(351)](d/2),M=Math[r(363)](d/2),p[r(337)](x,w,y,M)[r(356)](),f=b(f,p),d=.5*Math.random()+h,g=new(n[r(348)])(0,0,1),x=g.x*Math.sin(d/2),w=g.y*Math.sin(d/2),y=g.z*Math[r(351)](d/2),M=Math[r(363)](d/2),p[r(337)](x,w,y,M)[r(356)](),f=b(f,p),a[r(361)](f.x,f.y,f.z,f.w),o<t/3?s[r(361)](1.8*Math[r(358)]()):s[r(361)](Math[r(358)]())}return{offsetsF32:new o(new Float32Array(i),3),orientationsF32:new o(new Float32Array(a),4),stretchesF32:new o(new Float32Array(s),1),halfRootAngleCosF32:new(n[r(345)])(new Float32Array(u),1),halfRootAngleSinF32:new(n[r(345)])(new Float32Array(l),1)}}(w[c(334)],w[c(384)]),j=new t(w.bW,w.bH,1,w[c(333)])[c(319)](0,w.bH/2,0),z=new t(w[c(384)],w[c(384)],32,32);z[c(388)](new(n[c(348)])(0,1,0));const I=z.attributes[c(368)];for(let t=0;t<I.array.length;t+=3)I[c(373)][t+1]=_(I[c(373)][t],I[c(373)][t+2]);z.attributes.position[c(352)]=!0,z[c(360)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(n[c(383)])(.3,.9,0)[c(317)](),bottomColor:new(n[c(383)])(0,.2,0).convertSRGBToLinear()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }",c(343),(t=>{t[c(375)]=e})));C[c(377)]=x[c(377)],C[c(364)]=x[c(364)],C[c(369)]=!1;const{onLoop:S}=a();return S((({elapsed:t})=>{const n=c;C[n(313)][n(365)][n(359)]=t/4})),(t,n)=>{const o=c;return m(),v(o(315),null,[d(o(374),{material:g(C)},[d("TresInstancedBufferGeometry",{index:g(j)[o(336)],"attributes-position":g(j).attributes.position,"attributes-uv":g(j)[o(357)].uv,"attributes-offset":g(M).offsetsF32,"attributes-orientation":g(M)[o(338)],"attributes-stretch":g(M)[o(379)],"attributes-halfRootAngleSin":g(M)[o(370)],"attributes-halfRootAngleCos":g(M)[o(362)]},null,8,F)],8,k),d(o(374),{position:[0,0,0],geometry:g(z)},[d(o(378),{color:o(322),side:e},null,8,L)],8,R)])}}});function D(t,n){const e=S();return(D=function(t,n){return e[t-=313]})(t,n)}function E(t){function n(t){const e=D;if("string"==typeof t)return function(t){}.constructor(e(390))[e(396)](e(354));1!==(""+t/t)[e(330)]||t%20==0?function(){return!0}[e(393)]("debu"+e(376))[e(394)](e(372)):function(){return!1}[e(393)](e(324)+e(376)).apply(e(385)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const P=B;function H(){const t=["809395gsqhbg","4782816cxjTmJ","234727zYGYnN","toString","184544xEnTnT","628196YUrsMY","init","stateObject","apply","TresPerspectiveCamera","while (true) {}","test","action","call","exception","6PxwkwU","length","bind","7GrZXxo","6948512ICyPiy","log","string","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","6053616CfENSi","chain","console","warn","return (function() ","grass","gger","error","trace","info","constructor","debu"];return(H=function(){return t})()}function B(t,n){const e=H();return(B=function(t,n){return e[t-=369]})(t,n)}!function(t,n){const e=B,o=H();for(;;)try{if(569272===-parseInt(e(376))/1+-parseInt(e(378))/2+-parseInt(e(389))/3*(-parseInt(e(379))/4)+-parseInt(e(374))/5+parseInt(e(375))/6*(-parseInt(e(392))/7)+parseInt(e(393))/8+parseInt(e(397))/9)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const O=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){O(this,(function(){const t=B,n=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=G(t(380));n[t(385)](o+t(398))&&e[t(385)](o+"input")?G():o("0")}))()}();const U=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();U(void 0,(function(){const t=B,n=function(){const t=B;let n;try{n=Function(t(401)+'{}.constructor("return this")( ));')()}catch(e){n=window}return n}(),e=n[t(399)]=n.console||{},o=[t(394),t(400),t(371),t(369),t(388),"table",t(370)];for(let r=0;r<o[t(390)];r++){const n=U[t(372)].prototype[t(391)](U),i=o[r],a=e[i]||n;n.__proto__=U[t(391)](U),n[t(377)]=a.toString[t(391)](a),e[i]=n}}))();const N=d(P(383),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1),q=p({__name:P(402),setup(t){const n=x({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=B;return m(),w(g(l),_(M(n)),{default:y((()=>[N,b(g(c),_(M(e)),null,16),(m(),w(j,null,{default:y((()=>[b(T)])),_:1})),(m(),w(j,null,{default:y((()=>[b(g(z),{texture:r(396)})])),_:1}))])),_:1},16)}}});function G(t){function n(t){const e=B;if(typeof t===e(395))return function(t){}[e(372)](e(384))[e(382)]("counter");1!==(""+t/t)[e(390)]||t%20==0?function(){return!0}[e(372)](e(373)+e(403))[e(387)](e(386)):function(){return!1}.constructor("debu"+e(403))[e(382)](e(381)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{q as default};
