import{b as t,a as o}from"./@tresjs.DDZ0vesk1744863032604.js";import"./index.DubKqcPD1744863032604.js";import{P as s}from"./tweakpane.C0HtAJSg1744863032604.js";import{d as e,a5 as r,w as i,H as a,o as n,J as l,u as m,ak as u,al as p,r as c,h as f,e as d,f as v,j as C,am as g,m as h}from"./@vue.DK6ok9LJ1744863032604.js";import{C as j,bq as _}from"./three.B0XaFSnH1744863032604.js";import{_ as P}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.B82eW6Sl1744863032604.js";import"./postprocessing.DMK_Mhe01744863032604.js";import"./@vueuse.aRlY5CPe1744863032604.js";import"./all.three.BWK6-XYU1744863032604.js";import"./oimophysics.BBtHVm4j1744863032604.js";import"./reflectorDiffuse.C720h9Ah1744863032604.js";import"./vite-plugin-qiankun.B06WoCqG1744863032604.js";import"./index.TmMel0Tm1744863032604.js";import"./object-hash.BnegGKfT1744863032604.js";import"./@amap.CGUF9xH41744863032604.js";import"./jszip.H-wAjEeh1744863032604.js";import"./three-stdlib.zHR4YQlW1744863032604.js";import"./whiteFloor.B7ErRpnd1744863032604.js";const w={position:[-8,10,-2],scale:.02},z=["position","color_list"],b=e({__name:"imgParticleMesh",props:{zPos:{default:1},useCustomColor:{default:!1},customColor:{default:"#ff0000"}},async setup(o){let s,e;const c=o,f=([s,e]=r((()=>t(["./logo.png"]))),s=await s,e(),s),d=document.createElement("canvas"),v=f.image.width,C=f.image.height;d.width=v,d.height=C;const g=d.getContext("2d");g?.drawImage(f.image,0,0);const h=g?.getImageData(0,0,v,C).data,P=[],b=[];if(h)for(let t=0;t<C;t++)for(let o=0;o<v;o++){const s=4*(t*v+o);if(h[s+3]>0){const e=h[s]/255,r=h[s+1]/255,i=h[s+2]/255,a=100*Math.random();P.push(o,-t,a),b.push(e,r,i)}}const y=new Float32Array(P),x=new Float32Array(b),T={uniforms:{zPos:{value:c.zPos},useCustomColor:{value:c.useCustomColor},customColor:{value:new j(c.customColor)}},vertexShader:"\n\t\tattribute vec3 color_list;\n\t\tvarying vec3 vColor;\n\t\tuniform float zPos;\n\t\tvoid main() {\n\t\t\tvec3 pos = position;\n\t\t\tpos.z *= zPos;\n\t\t\tvColor = color_list;\n\t\t\tvec4 modelPosition = modelMatrix * vec4(pos, 1.0);\n\t\t\tvec4 viewPosition = viewMatrix * modelPosition;\n\t\t\tgl_PointSize = 0.001 * (1.0 - viewPosition.z);\n\t\t\tgl_Position = projectionMatrix * viewPosition;\n\t\t}",fragmentShader:"\n\t\t\tvarying vec3 vColor;\n\t\t\tuniform bool useCustomColor;\n\t\t\tuniform vec3 customColor;\n\t\t\tvoid main() {\n\t\t\tif(useCustomColor){\n\t\t\t\tgl_FragColor = vec4(customColor, 1.0);\n\t\t\t}else{\n\t\t\t\tgl_FragColor = vec4(vColor, 1.0);\n\t\t\t}\n\t\t}",transparent:!0,depthTest:!1,blending:_};return i((()=>[c.zPos,c.useCustomColor,c.customColor]),(([t,o,s])=>{T.uniforms.zPos.value=t,T.uniforms.useCustomColor.value=o,T.uniforms.customColor.value.set(s)})),(t,o)=>(n(),a("TresPoints",w,[l("TresBufferGeometry",{position:[m(y),3],color_list:[m(x),3]},null,8,z),l("TresShaderMaterial",u(p(T)),null,16)]))}}),y=e({__name:"imgParticle",setup(t){const e={clearColor:"#050505",antialias:!1},r={reflectivity:.8,showGridHelper:!1,scale:6},i=c({zPos:1,useCustomColor:!1,customColor:"#ff0000"}),a=new s({title:"参数"});return a.addBinding(i,"zPos",{label:"厚度",min:.5,max:10,step:.5}),a.addBinding(i,"useCustomColor",{label:"使用自定义颜色"}),a.addBinding(i,"customColor",{label:"自定义颜色"}),(t,s)=>{const a=f("TresCanvas");return n(),d(a,h(e,{"window-size":""}),{default:v((()=>[s[0]||(s[0]=l("TresPerspectiveCamera",{position:[0,3,38],fov:45,near:.1,far:1e3},null,-1)),C(m(o)),s[1]||(s[1]=l("TresAmbientLight",{intensity:.5},null,-1)),(n(),d(g,null,{default:v((()=>[C(b,u(p(i)),null,16)])),_:1})),(n(),d(g,null,{default:v((()=>[C(m(P),h({position:[0,-6,0]},r),null,16)])),_:1}))])),_:1},16)}}});export{y as default};
