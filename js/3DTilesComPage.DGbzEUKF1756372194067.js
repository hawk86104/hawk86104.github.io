import{m as e,e as i,r as t}from"./@tresjs.Df2Jc2df1756372194067.js";import{P as o}from"./tweakpane.C0HtAJSg1756372194067.js";import"./OimoPhysicsBuffer.DTTXKZYU1756372194067.js";import{_ as r}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.CFU1w0z71756372194067.js";import"./vanilla.esm.5.5.0.b8Nged_k1756372194067.js";import"./PackedMipMapGenerator.DAS1QEbV1756372194067.js";import{a,i as l}from"./utils.SMptQq871756372194067.js";import{z as n}from"./three-custom-shader-material.BlQonc4P1756372194067.js";import{cD as s,a3 as d,C as u,bD as m,az as p,cC as f,cE as c,X as v,Y as g}from"./three.QlBabAUP1756372194067.js";import{T as h}from"./3d-tiles-renderer.DOR6-qpv1756372194067.js";import{d as C,w as j,G as y,o as w,I as b,u as x,r as M,b as _,h as T,e as B,f as D,j as O,a7 as P,a8 as W,a5 as L,m as U}from"./@vue.BzMISRrV1756372194067.js";import"./postprocessing.eHqBklb71756372194067.js";import"./@vueuse.BIpwRBdi1756372194067.js";import"./oimophysics.BBtHVm4j1756372194067.js";import"./dither.glsl.tNAdkJUa1756372194067.js";import"./Reflector.Cru6rol41756372194067.js";import"./vite-plugin-qiankun.B06WoCqG1756372194067.js";import"./object-hash._drSlZxG1756372194067.js";import"./@amap.CGUF9xH41756372194067.js";import"./jszip.CcduwmMh1756372194067.js";import"./three-stdlib.CWxBXjoj1756372194067.js";import"./@tweenjs.Dhzs71lh1756372194067.js";import"./utils.HXWwD6ZG1756372194067.js";import"./@fesjs.BxIxMXgl1756372194067.js";import"./vue-router.Dko1PBP91756372194067.js";import"./lodash-es.C7pWAXPe1756372194067.js";import"./pinia.CqPBZQk21756372194067.js";import"./@qlin.q6OWdsQV1756372194067.js";import"./@babel.BPq7uOAK1756372194067.js";import"./@floating-ui.BFjFSAYt1756372194067.js";import"./@juggle.CcBCnTIR1756372194067.js";import"./three-mesh-bvh.Cbp48hCm1756372194067.js";import"./d3-geo.DJvUpGvj1756372194067.js";import"./d3-array.DtK5BhF11756372194067.js";const G=["rotation-x"],z=["object"],k=C({__name:"tilesCom",props:{tilesUrl:{default:"./plugins/geokit/tiles/tileset.json"},bulidingsColor:{default:"#e523ff"},topColor:{default:"#ffff00"},lightColor:{default:"#ffffff"},borderWidth:{default:5},opacity:{default:.8},gradient:{type:Boolean,default:!0},speed:{default:1},lineOpacity:{default:1},linewidth:{default:1},lineColor:{default:"#000000"}},setup(t){const o=t,r={value:0},l=new s({color:o.lineColor,linewidth:o.linewidth,opacity:o.lineOpacity,transparent:!0,depthWrite:!1,depthTest:!0});l.resolution.set(window.innerWidth,window.innerHeight);const v=({scene:e})=>{e.traverse((e=>{e.isMesh&&e.material&&((e=>{e.userData.builds=!0;const{geometry:i}=e;i.computeBoundingBox(),i.computeBoundingSphere();const{max:t,min:a}=i.boundingBox,l=new n({baseMaterial:new m,vertexShader:"varying vec4 vPosition;\nvoid main(){\n\tvPosition=modelMatrix*vec4(position,1.);\n\tcsm_Position=position*vec3(1.);\n}",fragmentShader:"uniform mat4 modelMatrix;\nvarying vec4 vPosition;\nuniform vec3 uMax;\nuniform vec3 uMin;\nuniform float uOpacity;\nuniform float uBorderWidth;\nuniform vec3 uLightColor;\nuniform vec3 uColor;\nuniform float uCircleTime;\nuniform float uTime;\nuniform vec3 uTopColor; \nuniform bool uGradient;\nvec4 uMax_world;\nvec4 uMin_world;\nvoid main() {\n  \n  uMax_world = modelMatrix * vec4(uMax, 1.);\n  uMin_world = modelMatrix * vec4(uMin, 1.);\n  vec3 distColor = uColor;\n  float residue = uTime - floor(uTime / uCircleTime) * uCircleTime;\n  float rate = residue / uCircleTime;\n  float lightOffset = rate * (uMax_world.y - uMin_world.y);\n\n  if (uMin_world.y + lightOffset < vPosition.y &&\n      uMin_world.y + lightOffset + uBorderWidth > vPosition.y) {\n    csm_DiffuseColor = vec4(uLightColor, uOpacity);\n  } else {\n    csm_DiffuseColor = vec4(distColor, uOpacity);\n  }\n\n  \n  if (uGradient) {\n    float rateHight =\n        (vPosition.y - uMin_world.y) / (uMax_world.y - uMin_world.y);\n    \n    float mixNumber = clamp(rateHight * 2.3 - 1.5, 0., 1.);\n    vec3 outColor = mix(csm_DiffuseColor.xyz, uTopColor, mixNumber);\n\n    csm_DiffuseColor = vec4(outColor, uOpacity);\n  }\n}",silent:!0,uniforms:{uMax:{value:t},uMin:{value:a},uBorderWidth:{value:o.borderWidth},uCircleTime:{value:5},uColor:{value:new u(o.bulidingsColor)},uOpacity:{value:o.opacity},uLightColor:{value:new u(o.lightColor)},uTopColor:{value:new u(o.topColor)},uTime:r,uGradient:{value:o.gradient}},depthWrite:!0,depthTest:!0,transparent:!0,side:d});e.material.dispose(),e.material=l})(e),(e=>{const i=new p(e.geometry.clone());let t=(new f).fromEdgesGeometry(i);const o=new c(t,l);o.userData.lines=!0,o.applyMatrix4(e.matrix.clone()),e.parent.add(o)})(e))}))},{camera:g,renderer:C,sizes:M}=e(),_=(e,i,t)=>{e.setCamera(i),e.setResolutionFromRenderer(i,t)},T=()=>{let e=new h(o.tilesUrl);return e.fetchOptions.mode="cors",e.errorTarget=12,e.addEventListener("load-model",v),e.addEventListener("load-tile-set",(()=>{a(e)})),e.addEventListener("dispose-model",(({scene:e})=>{e.traverse((e=>{e.material&&e.material.dispose(),e.userData&&e.userData.lines&&(e.geometry.dispose(),e.material.dispose())}))})),_(e,g.value,C.value),e};let B=T();j(g,(()=>{g.value&&_(B,g.value,C.value)}),{immediate:!0});const{onBeforeLoop:D}=i();return D((({delta:e})=>{g.value&&M.width.value&&B.update&&(g.value.updateMatrixWorld(),B.update(),r.value+=e*o.speed)})),j((()=>[o.bulidingsColor,o.topColor,o.lightColor,o.borderWidth,o.opacity,o.gradient]),(([e,i,t,r,a])=>{B.group.traverse((l=>{l.isMesh&&l.userData&&l.userData.builds&&(l.material.uniforms.uColor.value.set(e),l.material.uniforms.uTopColor.value.set(i),l.material.uniforms.uLightColor.value.set(t),l.material.uniforms.uBorderWidth.value=r,l.material.uniforms.uOpacity.value=a,l.material.uniforms.uGradient.value=o.gradient,l.material.needsUpdate=!0)}))})),j((()=>[o.lineColor,o.linewidth,o.lineOpacity]),(([e,i,t])=>{l.color.set(e),l.linewidth=i,l.opacity=t,l.needsUpdate=!0})),j((()=>o.tilesUrl),(e=>{e!==B.rootURL&&(B.dispose(),B=T())})),(e,i)=>(w(),y("TresGroup",{"rotation-x":-Math.PI/2},[b("primitive",{object:x(B).group},null,8,z)],8,G))}}),E=C({__name:"3DTilesComPage",setup(e){const i={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:g,toneMappingExposure:1,shadowMapType:v},a={reflectivity:1,showGridHelper:!1,scale:500},n=M({tilesUrl:"https://jdvop.oss-cn-qingdao.aliyuncs.com/mapv-data/titleset/sz_ns/tileset.json",bulidingsColor:"#447eff",topColor:"#00efd1",lightColor:"#99ff9f",borderWidth:5,opacity:1,gradient:!0,speed:1,lineOpacity:1,linewidth:1,lineColor:"#000000"}),s=_(n.tilesUrl),d=new o;d.addBinding(s,"value",{label:"tiles地址"});return d.addButton({title:"应用",label:"从url读取tiles"}).on("click",(()=>{s.value!==n.tilesUrl&&(d.disabled=!0,l(s.value).then((e=>{e?n.tilesUrl=s.value:alert("这不是一个有效的3D Tiles地址"),d.disabled=!1})))})),d.addBinding(n,"bulidingsColor",{label:"建筑物颜色"}),d.addBinding(n,"topColor",{label:"顶部颜色"}),d.addBinding(n,"gradient",{label:"是否渐变色"}),d.addBinding(n,"lightColor",{label:"跑光颜色"}),d.addBinding(n,"speed",{label:"跑光速度",min:-2,max:2,step:.01}),d.addBinding(n,"borderWidth",{label:"跑光宽度",min:0,max:20,step:.1}),d.addBinding(n,"opacity",{label:"透明度",min:0,max:1,step:.01}),d.addBinding(n,"lineColor",{label:"边框颜色"}),d.addBinding(n,"linewidth",{label:"边框宽度",min:0,max:5,step:.01}),d.addBinding(n,"lineOpacity",{label:"边框透明度",min:0,max:1,step:.01}),(e,o)=>{const l=T("TresCanvas");return w(),B(l,U(i,{"window-size":""}),{default:D((()=>[o[0]||(o[0]=b("TresPerspectiveCamera",{position:[400,400,400],fov:60,near:1,far:2e4},null,-1)),O(x(t)),o[1]||(o[1]=b("TresAmbientLight",{intensity:1},null,-1)),o[2]||(o[2]=b("TresDirectionalLight",{position:[1,2,3],intensity:1.25},null,-1)),o[3]||(o[3]=b("TresAxesHelper",{args:[100]},null,-1)),O(k,P(W(n)),null,16),(w(),B(L,null,{default:D((()=>[O(x(r),U({position:[0,-120,0]},a),null,16)])),_:1}))])),_:1},16)}}});export{E as default};
