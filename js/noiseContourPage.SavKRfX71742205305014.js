import{m as n,e,a as t,o as r}from"./@tresjs.nk0nhZ9a1742205305014.js";import{W as o,V as i,cl as s,c6 as a,c4 as u,a0 as c,m as f,aR as l}from"./three.LxxvsMJG1742205305014.js";import{d as p,a3 as v,a2 as m,o as d,H as h,N as g,u as w,F as y,e as x,f as D,g as S,j as I,al as R,m as _}from"./@vue.NRI7TcgI1742205305014.js";import"./postprocessing.lrLv6HE21742205305014.js";import"./@vueuse.w6JAmAgA1742205305014.js";const b=P;function E(){const n=["983830pVXWVI","prototype","5386aYiSll","gger","bind","54267fhfdfQ","render","material","TresSphereGeometry","while (true) {}","innerWidth","warn","iTime","exception","24kUfYyj","test","2DMtbYM","string","chain","stateObject","11DfwPOT","apply","TresMesh","noiseContour","innerHeight","log","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","counter","length","info","TresBoxGeometry","227801CTYJST","44SognSo","console","toString","debu","TresMeshPhongMaterial","__proto__","extensions","noiseContourMeshRef1","derivatives","function *\\( *\\)","init","361314gPdgjc","action","tShadow","width","call","renderToScreen","side","826200dVKkkV","value","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n",'{}.constructor("return this")( )',"uniforms","666895mYBalC","#ffffff","texture","addPass","constructor"];return(E=function(){return n})()}!function(n,e){const t=P,r=E();for(;;)try{if(104224===parseInt(t(289))/1*(-parseInt(t(303))/2)+parseInt(t(292))/3*(-parseInt(t(259))/4)+parseInt(t(282))/5+parseInt(t(301))/6*(parseInt(t(258))/7)+parseInt(t(277))/8+parseInt(t(270))/9+-parseInt(t(287))/10*(parseInt(t(307))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const T=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(308)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){T(this,(function(){const n=P,e=new RegExp(n(268)),t=new RegExp(n(313),"i"),r=z(n(269));e[n(302)](r+n(305))&&t.test(r+"input")?z():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(308)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(n,e){const t=E();return(P=function(n,e){return t[n-=257]})(n,e)}C(void 0,(function(){const n=P;let e;try{e=Function("return (function() "+n(280)+");")()}catch(o){e=window}const t=e[n(260)]=e[n(260)]||{},r=[n(312),n(298),n(316),"error",n(300),"table","trace"];for(let i=0;i<r[n(315)];i++){const e=C[n(286)][n(288)][n(291)](C),o=r[i],s=t[o]||e;e[n(264)]=C.bind(C),e[n(261)]=s[n(261)][n(291)](s),t[o]=e}}))();const j=[b(276),"rotation-x"],U=[b(276)],M="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",N=b(279),k=p({__name:b(310),async setup(r){const p=b;let x,D;const{camera:S,renderer:I,scene:R,sizes:_}=n(),E=([x,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),x=await x,D(),x),{onLoop:T,onAfterLoop:C}=e(),P=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),k=new i(window[p(297)],window[p(311)]);let z=null;const A=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:k}},vertexShader:M,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),B=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:E}},vertexShader:M,fragmentShader:N});return B[p(275)]=!0,B[p(294)][p(265)][p(267)]=!0,m((()=>{const n=p;_[n(273)].value&&(z=new a(I.value),z[n(285)](new u(R[n(278)],S[n(278)])),z[n(285)](A),z[n(285)](B))})),T((({elapsed:n})=>{const e=p;I[e(278)][e(293)](R[e(278)],S[e(278)],P),A[e(281)][e(272)][e(278)]=P[e(284)],B.uniforms[e(299)][e(278)]=n})),C((()=>{z&&z[p(293)]()})),(n,e)=>{const t=p;return d(),h(y,null,[g(t(309),{ref:"noiseContourMeshRef2",side:w(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g(t(257),{args:[400,400,400]},null,-1),g(t(263),{color:t(283),shininess:0},null,-1)]),8,j),g("TresMesh",{ref:t(266),side:w(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g(t(295),{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:t(283),shininess:0},null,-1)]),8,U)],64)}}});function z(n){function e(n){const t=P;if(typeof n===t(304))return function(n){}[t(286)](t(296)).apply(t(314));1!==(""+n/n)[t(315)]||n%20==0?function(){return!0}.constructor(t(262)+t(290))[t(274)](t(271)):function(){return!1}[t(286)](t(262)+"gger")[t(308)](t(306)),e(++n)}try{if(n)return e;e(0)}catch(t){}}!function(n,e){const t=B,r=V();for(;;)try{if(675847===parseInt(t(520))/1*(-parseInt(t(494))/2)+parseInt(t(523))/3*(parseInt(t(511))/4)+-parseInt(t(503))/5+parseInt(t(526))/6+-parseInt(t(499))/7*(-parseInt(t(486))/8)+parseInt(t(505))/9*(-parseInt(t(492))/10)+-parseInt(t(500))/11*(-parseInt(t(512))/12))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const A=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[B(522)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function B(n,e){const t=V();return(B=function(n,e){return t[n-=486]})(n,e)}!function(){A(this,(function(){const n=B,e=new RegExp("function *\\( *\\)"),t=new RegExp(n(524),"i"),r=Z(n(508));e.test(r+n(495))&&t[n(527)](r+n(498))?Z():r("0")}))()}();const F=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[B(522)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();F(void 0,(function(){const n=B;let e;try{e=Function(n(519)+n(488)+");")()}catch(o){e=window}const t=e[n(507)]=e[n(507)]||{},r=[n(518),"warn",n(514),"error","exception","table",n(502)];for(let i=0;i<r[n(496)];i++){const e=F.constructor[n(501)][n(513)](F),o=r[i],s=t[o]||e;e.__proto__=F[n(513)](F),e.toString=s[n(506)][n(513)](s),t[o]=e}}))();const L={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4};function V(){const n=["555090uUZVZv","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","counter","4612230nHElvK","test","TresPerspectiveCamera","2264bwuUDc","red",'{}.constructor("return this")( )',"stateObject","TresCanvas","#000000","108570ooULGD","TresDirectionalLight","270dIJSSU","chain","length","gger","input","22519Ionywj","3317501YvLQuq","prototype","trace","3924730zipXhu","call","252BtkyMb","toString","console","init","action","debu","4VfBvRz","36KjwTsD","bind","info","constructor","#ffffff","TresAmbientLight","log","return (function() ","7438nqjcow","while (true) {}","apply"];return(V=function(){return n})()}const Y=p({__name:"noiseContourPage",setup(n){const e=B,t={clearColor:e(491),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=x(i(490));return d(),D(s,_(t,{"window-size":""}),{default:S((()=>[g(i(528),L,null,512),I(w(r)),o[0]||(o[0]=g(i(517),{color:i(516)},null,-1)),o[1]||(o[1]=g(i(493),{position:[400,400,400],intensity:1,color:i(487)},null,-1)),(d(),D(R,null,{default:S((()=>[I(k)])),_:1}))])),_:1},16)}}});function Z(n){function e(n){const t=B;if("string"==typeof n)return function(n){}[t(515)](t(521))[t(522)](t(525));1!==(""+n/n)[t(496)]||n%20==0?function(){return!0}[t(515)](t(510)+t(497))[t(504)](t(509)):function(){return!1}[t(515)](t(510)+t(497))[t(522)](t(489)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{Y as default};
