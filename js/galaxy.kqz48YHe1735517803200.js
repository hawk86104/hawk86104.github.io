import{c0 as n,ak as t,am as o,C as e,aB as a,a as r}from"./three.-uH5I3Xp1735517803200.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.0qL_P2CE1735517803200.js";import{d as u,b as d,w as m,e as f,o as p,D as h,j as v,u as g,g as w,J as M,aj as P,ak as y,F as C}from"./@vue.-THQH3GC1735517803200.js";import"./@vueuse.oT9wchAS1735517803200.js";const b=x;function x(n,t){const o=T();return(x=function(n,t){return o[n-=158]})(n,t)}!function(n,t){const o=x,e=T();for(;;)try{if(369865===parseInt(o(161))/1+parseInt(o(181))/2+parseInt(o(176))/3*(parseInt(o(158))/4)+parseInt(o(179))/5+-parseInt(o(206))/6+parseInt(o(216))/7+parseInt(o(196))/8*(-parseInt(o(186))/9))break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[x(171)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){z(this,(function(){const n=x,t=new RegExp("function *\\( *\\)"),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=A("init");t[n(221)](e+n(188))&&o.test(e+n(172))?A():e("0")}))()}();const S=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[x(171)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function T(){const n=["891750VTYTdB","warn","a-scale","keys","error","cos","stateObject","randomnessPower","TresPerspectiveCamera","lerp","1470021iLYQfJ","clone","color","sin","geometry","test","bufferRef","624628ihdrAP","outsideColor","forEach","534322HAGEGy","gger","prototype","string","length","aRandomness","debu","return (function() ","black","random","apply","input","console","#b5f28d","toString","3oLHVym","size","radius","2520475hXMHum","aScale","35900MySGZk","log","galaxy","uniforms","setAttribute","1359IGIJCi","position","chain","TresBufferGeometry","insideColor","#1b3984","uTime","while (true) {}","value","branches","47896bjPeqC","info","count","trace","table","bind","constructor","material","a-randomness","TresPoints"];return(T=function(){return n})()}S(void 0,(function(){const n=x;let t;try{t=Function(n(168)+'{}.constructor("return this")( ));')()}catch(a){t=window}const o=t[n(173)]=t[n(173)]||{},e=[n(182),n(207),n(197),n(210),"exception",n(200),n(199)];for(let r=0;r<e.length;r++){const t=S[n(202)][n(163)][n(201)](S),a=e[r],s=o[a]||t;t.__proto__=S[n(201)](S),t[n(175)]=s.toString.bind(s),o[a]=t}}))();const _=["position",b(208),b(218),b(204)],j=u({__name:b(183),setup(u){const x=b,z={clearColor:x(169),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(174),outsideColor:x(191)},T=new e(S[x(190)]),j=new e(S[x(159)]),A=new Float32Array(3*S[x(198)]),I=new Float32Array(3*S[x(198)]),F=new Float32Array(S[x(198)]),k=new Float32Array(3*S[x(198)]);for(let n=0;n<S[x(198)];n++){const t=3*n,o=Math[x(170)]()*S.radius,e=n%S[x(195)]*Math.PI*2/S[x(195)];A[t]=Math[x(211)](e)*o,A[t+1]=0,A[t+2]=Math[x(219)](e)*o;const a=Math[x(170)]()**S.randomnessPower*(Math.random()<.5?-1:1),r=Math[x(170)]()**S[x(213)]*(Math[x(170)]()<.5?-1:1),s=Math.random()**S.randomnessPower*(Math[x(170)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=T[x(217)]();i[x(215)](j,o/S[x(178)]),I[t+0]=i.r,I[t+1]=i.g,I[t+2]=i.b,F[n]=Math.random()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S[x(177)]}}};const G=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;G.value&&(G[t(194)][t(203)][t(184)][t(192)].value=n)}));const{count:O,size:B,radius:H,branches:J,spin:L,randomness:Z,randomnessPower:V,insideColor:Y,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:x(191)});return m([O[x(194)],B[x(194)],H[x(194)],J.value,L[x(194)],Z[x(194)],V[x(194)],Y[x(194)],$[x(194)]],(n=>{const t=x;n[t(160)](((n,o)=>{const e=t;S[Object[e(209)](S)[o]]=n[e(194)]})),function(){const n=x;if(G[n(194)]){const t=new e(S.insideColor),o=new e(S[n(159)]),a=new Float32Array(3*S[n(198)]),s=new Float32Array(3*S.count),i=new Float32Array(S[n(198)]),c=new Float32Array(3*S[n(198)]);for(let e=0;e<S[n(198)];e++){const r=3*e,l=Math[n(170)]()*S[n(178)],u=e%S[n(195)]*Math.PI*2/S[n(195)];a[r]=Math[n(211)](u)*l,a[r+1]=0,a[r+2]=Math[n(219)](u)*l;const d=Math.random()**S[n(213)]*(Math[n(170)]()<.5?-1:1),m=Math[n(170)]()**S.randomnessPower*(Math.random()<.5?-1:1),f=Math.random()**S[n(213)]*(Math.random()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(217)]();p[n(215)](o,l/S[n(178)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[e]=Math[n(170)]()}G[n(194)].geometry[n(185)](n(187),new r(a,3)),G[n(194)][n(220)][n(185)](n(166),new r(c,3)),G.value[n(220)][n(185)](n(218),new r(s,3)),G.value[n(220)][n(185)](n(180),new r(i,1))}}()})),(n,t)=>{const o=x,e=f("TresCanvas");return p(),h(C,null,[v(g(c)),v(e,P(y(z)),{default:w((()=>[t[0]||(t[0]=M(o(214),{position:[3,3,3]},null,-1)),M(o(205),{ref_key:o(222),ref:G},[M(o(189),{position:[g(A),3],"a-scale":[g(F),1],color:[g(I),3],"a-randomness":[g(k),3]},null,8,_),M("TresShaderMaterial",P(y(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const o=x;if(typeof n===o(164))return function(n){}[o(202)](o(193))[o(171)]("counter");1!==(""+n/n)[o(165)]||n%20==0?function(){return!0}[o(202)](o(167)+o(162)).call("action"):function(){return!1}.constructor("debu"+o(162)).apply(o(212)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{j as default};
