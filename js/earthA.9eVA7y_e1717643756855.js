import{a5 as m,ah as L,q as v,ab as A,o as i,C as T,T as t,b2 as k,ad as C,aH as w,bk as P,c as S,a1 as e,aE as h,K as $,aT as z,ba as W,L as E,at as y,r as F,a as c,J as M,ac as N,a8 as V,cE as j,ag as q,ak as b}from"./vendor.iBV-vwSJ1717643756855.js";import{_ as H}from"./default.vue_vue_type_script_setup_true_lang.NMoKyw4u1717643756855.js";import{g as U}from"./index.A-uui1DV1717643756855.js";const Z=m({__name:"starts",setup(d){const{onLoop:s}=C(),n=L(0);s(({delta:l})=>{n.value+=.02*l});const a=v();return A(()=>{a.value.value.material.color.setHex(5076687),a.value.value.scale.set(5,5,5)}),(l,o)=>(i(),T(t(k),{ref_key:"StarsREF",ref:a,rotation:[0,n.value,0],radius:100,depth:50,count:1e4,size:5,"size-attenuation":!0},null,8,["rotation"]))}}),D={position:[0,0,0]},J=e("TresSphereGeometry",{args:[50,32,32]},null,-1),K=["map"],O=e("TresSphereGeometry",{args:[53,32,32]},null,-1),Q=["map","alphaMap","blending"],X={scale:[155,155,0]},Y=["map","blending"],ee={scale:[128,128,0]},te=["map","blending"],ae=m({__name:"earthmap",async setup(d){let s,n;const a=([s,n]=w(()=>P(["./plugins/earthSample/image/earthA/map.jpg","./plugins/earthSample/image/earthA/earth.jpg","./plugins/earthSample/image/earthA/glow.png","./plugins/earthSample/image/earthA/innerGlow.png"])),s=await s,n(),s);return(l,o)=>(i(),S($,null,[e("TresMesh",D,[J,e("TresMeshBasicMaterial",{map:t(a)[0]},null,8,K)]),e("TresMesh",null,[O,e("TresMeshBasicMaterial",{map:t(a)[1],alphaMap:t(a)[1],blending:t(h),transparent:!0},null,8,Q)]),e("TresSprite",X,[e("TresSpriteMaterial",{color:"#4d76cf",map:t(a)[2],blending:t(h),depthWrite:!1,depthTest:!1,transparent:!0},null,8,Y)]),e("TresSprite",ee,[e("TresSpriteMaterial",{color:"#4d76cf",map:t(a)[3],blending:t(h),depthWrite:!1,depthTest:!1,transparent:!0},null,8,te)])],64))}}),se=["position"],ne=e("TresPlaneGeometry",{args:[3,20]},null,-1),oe=["map","alphaMap","blending","side"],re=["rotation-y"],le=e("TresPlaneGeometry",{args:[3,20]},null,-1),ie=["map","alphaMap","blending","side"],pe=["rotation-x"],ce=e("TresPlaneGeometry",{args:[6,6]},null,-1),he=["map","blending","side"],R=30,_e=m({__name:"lightlinepoint",async setup(d){let s,n;const a=([s,n]=w(()=>P(["./plugins/earthSample/image/earthA/light_column.png","./plugins/earthSample/image/earthA/label.png"])),s=await s,n(),s),l=[];let o=null;A(()=>{o=z().proxy;for(let r=1;r<=R;r++){l.push(U.to(o.$refs["meshCircleRef".concat(r)][0].scale,{duration:1+Math.random()*.5,x:2,y:2,z:2,repeat:-1,delay:Math.random()*.5,yoyo:!0,ease:"power2.inOut"}));const p=o.$refs["meshRef".concat(r)][0];p.quaternion.setFromUnitVectors(new W(0,1,0),p.position.clone().normalize())}});const f=(r,p,u)=>{let g=p*Math.PI/180;const x=u*Math.PI/180;g=-g;const B=r*Math.cos(x)*Math.cos(g),G=r*Math.sin(x),I=r*Math.cos(x)*Math.sin(g);return[B,G,I]},_=()=>{const r=Math.random()*180-90,p=Math.random()*360-180;return f(60,p,r)};return(r,p)=>(i(),S($,null,E(R,u=>e("TresMesh",{ref_for:!0,ref:"meshRef".concat(u),key:u,position:_()},[ne,e("TresMeshBasicMaterial",{color:"#ffffff",map:t(a)[0],alphaMap:t(a)[0],blending:t(h),side:t(y),depthWrite:!1,transparent:!0},null,8,oe),e("TresMesh",{"rotation-y":Math.PI/2},[le,e("TresMeshBasicMaterial",{color:"#ffffff",map:t(a)[0],alphaMap:t(a)[0],blending:t(h),side:t(y),depthWrite:!1,transparent:!0},null,8,ie)],8,re),e("TresMesh",{ref_for:!0,ref:"meshCircleRef".concat(u),"rotation-x":-Math.PI/2,position:[0,-7,0]},[ce,e("TresMeshBasicMaterial",{color:"#ffffff",map:t(a)[1],blending:t(h),side:t(y),depthWrite:!1,transparent:!0},null,8,he)],8,pe)],8,se)),64))}}),ue=["rotation-x"],me=e("TresSphereGeometry",{args:[5,32,32]},null,-1),de=["map","emissiveMap"],fe=["rotation-x"],ge=e("TresRingGeometry",{args:[145,155,64]},null,-1),Me=["map","blending","side"],Te=m({__name:"moon",async setup(d){let s,n;const a=([s,n]=w(()=>P(["./plugins/earthSample/image/earthA/moon.jpg","./plugins/earthSample/image/earthA/moon_ring.png"])),s=await s,n(),s),{onLoop:l}=C(),o=v(null);return l(({elapsed:f})=>{if(o){const _=f/20;o.value.position.x=150*Math.cos(_*Math.PI*2),o.value.position.z=150*Math.sin(_*Math.PI*2),o.value.rotation.set(0,_*Math.PI*8,0)}}),(f,_)=>(i(),S($,null,[e("TresMesh",{ref_key:"moonRef",ref:o,position:[150,0,0],"rotation-x":-Math.PI/2},[me,e("TresMeshStandardMaterial",{map:t(a)[0],emissive:"#ffffff",emissiveMap:t(a)[0]},null,8,de)],8,ue),e("TresMesh",{"rotation-x":-Math.PI/2},[ge,e("TresMeshBasicMaterial",{map:t(a)[1],blending:t(h),side:t(y),depthWrite:!1,transparent:!0,opacity:.5},null,8,Me)],8,fe)],64))}}),ye=e("TresPerspectiveCamera",{position:[0,50,300],fov:45,near:.1,far:1e5},null,-1),Se=e("TresAmbientLight",{color:"#484068",intensity:1},null,-1),ve=m({__name:"earthA",setup(d){const s={clearColor:"#030311",shadows:!0,alpha:!1,outputColorSpace:V,shadowMapType:j,useLegacyLights:!0},n=v(0);return C().onLoop(({delta:a})=>{n.value+=.02*a}),(a,l)=>{const o=F("TresCanvas");return i(),S($,null,[c(H),c(o,N(s,{"window-size":""}),{default:M(()=>[ye,c(t(q),{autoRotate:!0,autoRotateSpeed:2}),c(Z),(i(),T(b,null,{default:M(()=>[c(ae)]),_:1})),(i(),T(b,null,{default:M(()=>[c(_e)]),_:1})),(i(),T(b,null,{default:M(()=>[c(Te)]),_:1})),Se]),_:1},16)],64)}}});export{ve as default};
