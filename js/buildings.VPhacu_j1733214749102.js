import{u as t,_ as n,a as o}from"./mergeTres.clsNS-oK1733214749102.js";import{l as r}from"./utils.Lq-nxkh31733214749102.js";import{e}from"./@tresjs.lftldzUe1733214749102.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-THQH3GC1733214749102.js";import{_ as y}from"./@fesjs.Of4PiCSw1733214749102.js";import"./@amap.ICsgtrgy1733214749102.js";import"./pinia.YZvRaeWc1733214749102.js";import"./vue-demi.C4xddsk91733214749102.js";import"./three.aWgA1gea1733214749102.js";import"./three-mesh-bvh.MzT5vGt_1733214749102.js";import"./@vueuse.xtU2GBMi1733214749102.js";import"./vue-router.lCq72hq_1733214749102.js";import"./lodash-es.kYt-_xTG1733214749102.js";import"./@qlin.yHhFDldE1733214749102.js";import"./@floating-ui.BPbuo5Gx1733214749102.js";import"./@juggle.7yjBMqoW1733214749102.js";const C=j;!function(t,n){const o=j,r=I();for(;;)try{if(186040===-parseInt(o(353))/1*(parseInt(o(395))/2)+-parseInt(o(393))/3*(-parseInt(o(368))/4)+-parseInt(o(384))/5*(parseInt(o(389))/6)+parseInt(o(394))/7*(-parseInt(o(361))/8)+-parseInt(o(375))/9*(-parseInt(o(349))/10)+-parseInt(o(352))/11+parseInt(o(369))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(365)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=j,n=new RegExp(t(382)),o=new RegExp(t(381),"i"),r=z("init");n[t(347)](r+t(372))&&o.test(r+t(358))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(365)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();w(void 0,(function(){const t=j,n=function(){let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(n){t=window}return t}(),o=n[t(367)]=n[t(367)]||{},r=[t(355),t(374),t(348),t(387),t(392),t(345),t(351)];for(let e=0;e<r[t(373)];e++){const n=w[t(364)][t(379)][t(378)](w),a=r[e],i=o[a]||n;n[t(383)]=w[t(378)](w),n[t(390)]=i[t(390)][t(378)](i),o[a]=n}}))();const b=["position",C(385),C(377)];function I(){const t=["762369radkBr","7IQBAkk","4918TUPJii","uvArray","string","lngLatToCoord","tbgRef","table","customCoords","test","info","10qzaLkC","positionArray","trace","3700114HPfWAc","32DTxgLE","normalArray","log","buildings","counter","input","exp","geometry","496376Extcsk","push","cameraState","constructor","apply","call","console","4WnTyHv","7569156XuVggd","value","near","chain","length","warn","870651jASWzm","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","normal","bind","prototype","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","__proto__","515mrwrQa","faceUv","TresMesh","error","gger","18552LvzXFk","toString","mapHandle","exception"];return(I=function(){return t})()}function j(t,n){const o=I();return(j=function(t,n){return o[t-=341]})(t,n)}const S=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t[n(373)];r+=3){const e=[t[r],t[r+1]],a=o[n(391)].customCoords[n(343)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[j(363)]&&(async()=>{const t=j,n=await r(t(376),t(356));for(let o=0;o<n[t(373)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r[t(360)]),i=new Float32Array(r[t(385)]),l=new Float32Array(r[t(360)][t(373)]);d[t(362)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o[t(363)]&&(g.uniforms.u_zoom.value=o.mapHandle.getZoom(),g[t(380)].u_near[t(370)]=o[t(363)][t(371)],g[t(380)].u_far.value=o[t(363)].far)})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,n)=>{const o=j;return c(),s(o(386),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:o(344),position:[t[o(350)],3],faceUv:[t[o(341)],2],normal:[t[o(354)],3]},null,8,b),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))]))}});function z(t){function n(t){const o=j;if(typeof t===o(342))return function(t){}.constructor("while (true) {}").apply(o(357));1!==(""+t/t)[o(373)]||t%20==0?function(){return!0}[o(364)]("debugger")[o(366)]("action"):function(){return!1}[o(364)]("debu"+o(388)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=R;!function(t,n){const o=R,r=L();for(;;)try{if(590645===parseInt(o(152))/1+parseInt(o(162))/2*(parseInt(o(142))/3)+-parseInt(o(130))/4+-parseInt(o(139))/5*(-parseInt(o(158))/6)+parseInt(o(160))/7*(-parseInt(o(137))/8)+parseInt(o(153))/9+-parseInt(o(157))/10*(parseInt(o(135))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(131)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=R,n=new RegExp(t(164)),o=new RegExp(t(136),"i"),r=k(t(146));n[t(150)](r+"chain")&&o[t(150)](r+t(169))?k():r("0")}))()}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(131)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();P(void 0,(function(){const t=R,n=function(){const t=R;let n;try{n=Function("return (function() "+t(144)+");")()}catch(o){n=window}return n}(),o=n[t(147)]=n.console||{},r=["log","warn",t(134),t(165),t(167),t(133),"trace"];for(let e=0;e<r.length;e++){const n=P.constructor[t(156)][t(168)](P),a=r[e],i=o[a]||n;n[t(129)]=P[t(168)](P),n[t(128)]=i[t(128)].bind(i),o[a]=n}}))();function R(t,n){const o=L();return(R=function(t,n){return o[t-=128]})(t,n)}function k(t){function n(t){const o=R;if(typeof t===o(138))return function(t){}[o(154)]("while (true) {}")[o(131)](o(159));1!==(""+t/t)[o(151)]||t%20==0?function(){return!0}[o(154)](o(140)+o(155))[o(161)](o(163)):function(){return!1}[o(154)](o(140)+o(155))[o(131)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}function L(){const t=["tcRef","table","info","5881799UBsymq","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","1880872cbveqs","string","57160KBcadu","debu","TresAmbientLight","2904342DXbVAW","TresCanvas",'{}.constructor("return this")( )',"manual","init","console","buildings","tresCanvas","test","length","939169IRGVjm","94752gHmThe","constructor","gger","prototype","10mOGHnW","336Fvqawt","counter","35YAJgft","call","2FiLdfR","action","function *\\( *\\)","error","TresPerspectiveCamera","exception","bind","input","toString","__proto__","1028416dcAoKZ","apply"];return(L=function(){return t})()}const U=y(a({__name:A(148),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(145)});return(t,i)=>{const l=r,f=d(l(143));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(149),ref:l(132)},a),{default:m((()=>[i[0]||(i[0]=p(l(166),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(141),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{U as default};
