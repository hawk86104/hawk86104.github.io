import{m as n,e,D as t,a as o,H as i,o as r}from"./@tresjs.zc7faK4J1743660816268.js";import"./index.T-vY6kZg1743660816268.js";import{P as a}from"./tweakpane.ivGeiIdz1743660816268.js";import{_ as c}from"./index.wgv4wbeG1743660816268.js";import{d as l}from"./pinia.0dYyFDku1743660816268.js";import{d as s,b as v,a4 as p,w as f,o as u,H as x,N as d,u as m,j as y,F as w,a2 as _,P as h,R as z,X as g,I as M,O as C,r as S,e as b,f as N,g as D,al as P,m as I,aj as L,ak as R}from"./@vue.B5PFBfKs1743660816268.js";import{z as A}from"./three-custom-shader-material.uMc5A1EX1743660816268.js";import{g as O,M as j,q as T,U as E,b as F,Q as V,t as U,C as k,a9 as G,V as H,bG as W,ae as Q,ar as q,G as Y,cU as K,aY as B,aT as Z,c7 as X,c8 as J,c9 as $,cq as nn}from"./three.2wx8FU0g1743660816268.js";import{P as en}from"./index.05kvU0z71743660816268.js";import{u as tn}from"./index.S3VunCT71743660816268.js";import{g as on}from"./gsap.LhqjuUtK1743660816268.js";import{_ as rn}from"./@fesjs.9AUNBPBQ1743660816268.js";import{_ as an}from"./randomLoading.vue_vue_type_script_setup_true_lang.HuXlgv2z1743660816268.js";import{_ as cn}from"./component.vue_vue_type_script_setup_true_lang.w87a8ogA1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";import"./utils.J8F9Jo-01743660816268.js";import"./three-mesh-ui.module._G62nyeC1743660816268.js";import"./object-hash.6N1Uf8kA1743660816268.js";import"./@amap.c8pGcSIC1743660816268.js";import"./jszip.rGR265Ak1743660816268.js";import"./all.three.q3DPAGr01743660816268.js";import"./oimophysics.WhCxc1Ho1743660816268.js";import"./reflectorDiffuse.5zy0dW_U1743660816268.js";import"./vite-plugin-qiankun.DT7p3NC_1743660816268.js";import"./three-stdlib.rtqrSiFZ1743660816268.js";import"./whiteFloor.45lmiqp31743660816268.js";import"./vue-router.K4ys0Z-O1743660816268.js";import"./lodash-es.IJc9G_SW1743660816268.js";import"./@qlin.o0hjOMCg1743660816268.js";import"./@floating-ui.HzHndBae1743660816268.js";import"./@juggle.4EyLec-41743660816268.js";import"./starLoading.cJyZWFHa1743660816268.js";import"./cssLoaders.bhHKUWvv1743660816268.js";import"./bubbleLoading.rC3bW8Z-1743660816268.js";import"./yangyangLoading.yRjR1R_U1743660816268.js";const ln=s({__name:"reflectorMipMap",props:{parent:{},resolution:{default:512},ignoreObjects:{default:[]}},setup(t,{expose:o}){const i=t,r=new O,a=new j,c=new T,l=new en,s=tn({width:i.resolution,height:i.resolution,settings:{type:E}}),v=tn({width:i.resolution,height:i.resolution,settings:{type:E}}),{camera:p,renderer:f,scene:u}=n(),{onBeforeLoop:x}=e();return x((()=>{(()=>{if(!p.value)return;r.set(new F(0,1,0),0),r.applyMatrix4(i.parent.matrixWorld),c.copy(p.value);const n=new F(0,0,1).clone().negate(),e=p.value.getWorldPosition(new F);n.reflect(r.normal);const t=new F;r.projectPoint(e,t);const o=t.clone();o.sub(e),o.add(t),c.position.copy(o);const l=new F(0,0,-1);l.applyQuaternion(p.value.getWorldQuaternion(new V)),l.add(e);const v=new F;i.parent.getWorldPosition(v),v.sub(l),v.reflect(r.normal).negate(),v.add(i.parent.getWorldPosition(new F)),c.up.set(0,1,0),c.applyQuaternion(p.value.getWorldQuaternion(new V)),c.up.reflect(r.normal),c.lookAt(v),c.updateMatrixWorld();const x=new j;x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),x.multiply(c.projectionMatrix),x.multiply(c.matrixWorldInverse),a.copy(x),r.applyMatrix4(c.matrixWorldInverse);const d=new U(r.normal.x,r.normal.y,r.normal.z,r.constant),m=c.projectionMatrix,y=new U;y.x=(Math.sign(d.x)+m.elements[8])/m.elements[0],y.y=(Math.sign(d.y)+m.elements[9])/m.elements[5],y.z=-1,y.w=(1+m.elements[10])/m.elements[14],d.multiplyScalar(2/d.dot(y)),m.elements[2]=d.x,m.elements[6]=d.y,m.elements[10]=d.z+1,m.elements[14]=d.w;const w=f.value.getRenderTarget();f.value.setRenderTarget(s.value),f.value.state.buffers.depth.setMask(!0),!1===f.value.autoClear&&f.value.clear(),i.ignoreObjects.forEach((n=>n.visible=!1)),f.value.render(u.value,c),i.ignoreObjects.forEach((n=>n.visible=!0)),f.value.setRenderTarget(w)})(),s.value&&v.value&&f.value&&l.update(s.value.texture,v.value,f.value)})),o({matrix:a,renderTarget:v}),(n,e)=>null}}),sn=vn;function vn(n,e){const t=fn();return vn=function(n,e){return t[n-=369]},vn(n,e)}!function(n,e){const t=vn,o=fn();for(;;)try{if(258207===-parseInt(t(388))/1+-parseInt(t(376))/2+-parseInt(t(390))/3+parseInt(t(405))/4*(parseInt(t(372))/5)+-parseInt(t(374))/6*(-parseInt(t(373))/7)+parseInt(t(401))/8+parseInt(t(375))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const pn=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t[vn(400)](e,arguments);return t=null,n}}:function(){};return n=!1,o}}();function fn(){const n=["string","console","bind","function *\\( *\\)","281887xrKxKq","__proto__","655809YMKUQH","trace","warn","debu","table","value","action","counter","call","stateObject","apply","691776vUuyRm","Su7s","error","prototype","12uNlKVZ","length","return (function() ","toString","39135SSuSqq","35Mdslwl","389274XRggpE","5178402JOJpQO","502058rNPsEw","constructor","while (true) {}","#26d6e9","input","log","gger","test"];return(fn=function(){return n})()}!function(){pn(this,(function(){const n=vn,e=new RegExp(n(387)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=dn("init");e.test(o+"chain")&&t[n(383)](o+n(380))?dn():o("0")}))()}();const un=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,o}}();un(void 0,(function(){const n=vn;let e;try{e=Function(n(370)+'{}.constructor("return this")( ));')()}catch(i){e=window}const t=e[n(385)]=e[n(385)]||{},o=[n(381),n(392),"info",n(403),"exception",n(394),n(391)];for(let r=0;r<o[n(369)];r++){const e=un.constructor[n(404)][n(386)](un),i=o[r],a=t[i]||e;e[n(389)]=un[n(386)](un),e[n(371)]=a[n(371)][n(386)](a),t[i]=e}}))();const xn=l(sn(402),(()=>{const n=sn,e=v(!0),t=v(0),o=v(n(379));return{showColorList:e,selColorIndex:t,setShowColorList:function(n){e.value=n},setSelColorIndex:function(e){t[n(395)]=e},selColorData:o}}));function dn(n){function e(n){const t=vn;if(typeof n===t(384))return function(n){}[t(377)](t(378))[t(400)](t(397));1!==(""+n/n)[t(369)]||n%20==0?function(){return!0}[t(377)](t(393)+t(382))[t(398)](t(396)):function(){return!1}[t(377)](t(393)+t(382))[t(400)](t(399)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const mn=n=>{const e=[];return n.traverse((n=>{e.push(n)})),e};const yn=["object"],wn=s({__name:"startroom",props:{hide:{type:Boolean,default:!1}},async setup(n,{expose:e}){let i,r;const a=n,{scene:c}=([i,r]=p((()=>t("./plugins/industry4/model/su7_car/su7_startroom.raw.glb",{draco:!0,decoderPath:"./draco/"}))),i=await i,r(),i),l=([i,r]=p((()=>o(["./plugins/industry4/texture/t_startroom_light.raw.jpg","./plugins/industry4/texture/t_startroom_ao.raw.jpg","./plugins/industry4/texture/t_floor_roughness.webp","./plugins/industry4/texture/t_floor_normal.webp"]))),i=await i,r(),i);l[2].colorSpace=W,l[2].wrapS=l[2].wrapT=Q,l[3].colorSpace=W,l[3].wrapS=l[3].wrapT=Q,l[1].flipY=!1,l[1].channel=1,l[1].flipY=!1,l[1].colorSpace=W,l[0].channel=1,l[0].flipY=!1,l[0].colorSpace=q;const s=mn(c),_=s[1],h=_.material;h.emissive=new k("white"),h.emissiveIntensity=1,h.toneMapped=!1,h.transparent=!0,h.alphaTest=.01,_.name="lightTop";const z=s[2],g=z.material;g.roughnessMap=l[2],g.normalMap=l[3],g.aoMap=l[1],g.lightMap=l[0],g.envMap=l[2],g.envMapIntensity=0,g.transparent=!0,z.name="floorBtm";const M=v(null);f((()=>M),(n=>{z.material=((n,e)=>{const t={uColor:{type:"c",value:new k("white")},uReflectMatrix:{type:"m4",value:new j},uReflectTexture:{type:"t",value:new G},uReflectIntensity:{type:"f",value:15},uIntensity:{type:"f",value:1},uLevel:{type:"f",value:3.5},uResolution:{type:"v2",value:new H},uTime:{type:"f",value:0}},o=new A({baseMaterial:n.material,uniforms:t,vertexShader:"varying vec2 vUv;\nvarying vec4 vWorldPosition;\n\nvoid main() {\n  vec3 p = position;\n\n  csm_Position = p;\n\n  vUv = uv;\n  vWorldPosition = modelMatrix * vec4(p, 1);\n}",fragmentShader:"#ifndef FNC_POW5\n#define FNC_POW5\n\nfloat pow5(const in float v) {\n    float v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec2 pow5(const in vec2 v) {\n    vec2 v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec3 pow5(const in vec3 v) {\n    vec3 v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec4 pow5(const in vec4 v) {\n    vec4 v2 = v * v;\n    return v2 * v2 * v;\n}\n\n#endif\n\n#ifndef FNC_SCHLICK\n#define FNC_SCHLICK\n\nvec3 schlick(const in vec3 f0, const in float f90, const in float VoH) {\n    float f = pow5(1.0 - VoH);\n    return f + f0 * (f90 - f);\n}\n\nvec3 schlick(const in vec3 f0, const in vec3 f90, const in float VoH) {\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nfloat schlick(const in float f0, const in float f90, const in float VoH) {\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\n#endif\n\n#ifndef FNC_POW5\n#define FNC_POW5\n\nfloat pow5(const in float v) {\n    float v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec2 pow5(const in vec2 v) {\n    vec2 v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec3 pow5(const in vec3 v) {\n    vec3 v2 = v * v;\n    return v2 * v2 * v;\n}\n\nvec4 pow5(const in vec4 v) {\n    vec4 v2 = v * v;\n    return v2 * v2 * v;\n}\n\n#endif\n#ifndef EIGHTH_PI\n#define EIGHTH_PI 0.39269908169\n#endif\n#ifndef QTR_PI\n#define QTR_PI 0.78539816339\n#endif\n#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966192313216916398\n#endif\n#ifndef PI\n#define PI 3.1415926535897932384626433832795\n#endif\n#ifndef TWO_PI\n#define TWO_PI 6.2831853071795864769252867665590\n#endif\n#ifndef TAU\n#define TAU 6.2831853071795864769252867665590\n#endif\n#ifndef INV_PI\n#define INV_PI 0.31830988618379067153776752674503\n#endif\n#ifndef INV_SQRT_TAU\n#define INV_SQRT_TAU 0.39894228040143267793994605993439  \n#endif\n#ifndef SQRT_HALF_PI\n#define SQRT_HALF_PI 1.25331413732\n#endif\n#ifndef PHI\n#define PHI 1.618033988749894848204586834\n#endif\n#ifndef EPSILON\n#define EPSILON 0.0000001\n#endif\n#ifndef GOLDEN_RATIO\n#define GOLDEN_RATIO 1.6180339887\n#endif\n#ifndef GOLDEN_RATIO_CONJUGATE \n#define GOLDEN_RATIO_CONJUGATE 0.61803398875\n#endif\n#ifndef GOLDEN_ANGLE \n#define GOLDEN_ANGLE 2.39996323\n#endif\n#ifndef DEG2RAD\n#define DEG2RAD (PI / 180.0)\n#endif\n#ifndef RAD2DEG\n#define RAD2DEG (180.0 / PI)\n#endif\n#if !defined(FNC_SATURATE) && !defined(saturate)\n#define FNC_SATURATE\n#define saturate(V) clamp(V, 0.0, 1.0)\n#endif\n\n#ifndef FNC_FRESNEL\n#define FNC_FRESNEL\n\nvec3 fresnel(const in vec3 f0, vec3 normal, vec3 view) {\n   return schlick(f0, 1.0, dot(view, normal));\n}\n\nvec3 fresnel(const in vec3 f0, const in float NoV) {\n#if defined(TARGET_MOBILE) || defined(PLATFORM_RPI)\n    return schlick(f0, 1.0, NoV);\n#else\n    float f90 = saturate(dot(f0, vec3(50.0 * 0.33)));\n    return schlick(f0, f90, NoV);\n#endif\n}\n\nfloat fresnel(const in float f0, const in float NoV) {\n    return schlick(f0, 1.0, NoV);\n}\n\nvec3 fresnel(vec3 f0, float NoV, float roughness) {\n    return f0 + (max(vec3(1.0 - roughness), f0) - f0) * pow5(1.0 - NoV);\n}\n\n#endif\nvec4 packedTexture2DLOD(sampler2D tex, vec2 uv, int level) {\n\n\t\t\n  float targetSubview = 1.0 / pow(2.0, float(level));\n  float widthRatio = 2.0 / 3.0;\n  vec2 scaledDimensions = vec2(targetSubview * widthRatio, targetSubview);\n\n\t\t\n\t\t\n  vec2 offset = vec2(level > 0 ? widthRatio : 0.0, level > 0 ? targetSubview : 0.0);\n\n  vec2 samplePoint = mix(offset, offset + scaledDimensions, uv);\n  return texture2D(tex, samplePoint);\n\n}\n\nvec4 packedTexture2DLOD(sampler2D tex, vec2 uv, float level) {\n\n  float ratio = mod(level, 1.0);\n  int minLevel = int(floor(level));\n  int maxLevel = int(ceil(level));\n\n  vec4 minValue = packedTexture2DLOD(tex, uv, minLevel);\n  vec4 maxValue = packedTexture2DLOD(tex, uv, maxLevel);\n\n  return mix(minValue, maxValue, ratio);\n\n}\n\n\t\nvec4 packedTexture2DLOD(sampler2D tex, vec2 uv, int level, vec2 originalPixelSize) {\n\n  float floatLevel = float(level);\n  vec2 atlasSize;\n  atlasSize.x = floor(originalPixelSize.x * 1.5);\n  atlasSize.y = originalPixelSize.y;\n\n\t\t\n  float maxLevel = min(floor(log2(originalPixelSize.x)), floor(log2(originalPixelSize.y)));\n  floatLevel = min(floatLevel, maxLevel);\n\n\t\t\n  vec2 currentPixelDimensions = floor(originalPixelSize / pow(2.0, floatLevel));\n  vec2 pixelOffset = vec2(floatLevel > 0.0 ? originalPixelSize.x : 0.0, floatLevel > 0.0 ? currentPixelDimensions.y : 0.0);\n\n\t\t\n\t\t\n  vec2 minPixel = pixelOffset;\n  vec2 maxPixel = pixelOffset + currentPixelDimensions;\n  vec2 samplePoint = mix(minPixel, maxPixel, uv);\n  samplePoint /= atlasSize;\n\n  vec2 halfPixelSize = 1.0 / (2.0 * atlasSize);\n  samplePoint = min(samplePoint, maxPixel / atlasSize - halfPixelSize);\n  samplePoint = max(samplePoint, minPixel / atlasSize + halfPixelSize);\n\n  return texture2D(tex, samplePoint);\n\n}\n\nvec4 packedTexture2DLOD(sampler2D tex, vec2 uv, float level, vec2 originalPixelSize) {\n\n  float ratio = mod(level, 1.0);\n  int minLevel = int(floor(level));\n  int maxLevel = int(ceil(level));\n\n  vec4 minValue = packedTexture2DLOD(tex, uv, minLevel, originalPixelSize);\n  vec4 maxValue = packedTexture2DLOD(tex, uv, maxLevel, originalPixelSize);\n\n  return mix(minValue, maxValue, ratio);\n\n}\nvarying vec2 vUv;\nvarying vec4 vWorldPosition;\n\nuniform vec3 uColor;\nuniform mat4 uReflectMatrix;\nuniform sampler2D uReflectTexture;\nuniform float uReflectIntensity;\nuniform float uIntensity;\nuniform float uLevel;\nuniform vec2 uResolution;\nuniform float uTime;\n\nvoid main() {\n  vec3 worldPos = vWorldPosition.xyz;\n  worldPos.x -= uTime * 0.1;\n  vec3 surfaceNormal = texture2D(normalMap, worldPos.xz).xyz * 2.0 - 1.0;\n  surfaceNormal = surfaceNormal.rbg;\n  surfaceNormal = normalize(surfaceNormal);\n\n  vec3 viewDir = vViewPosition;\n  float d = length(viewDir);\n  viewDir = normalize(viewDir);\n  vec2 distortion = surfaceNormal.xz * (0.001 + 1. / d);\n\n  vec4 reflectPoint = uReflectMatrix * vWorldPosition;\n  reflectPoint = reflectPoint / reflectPoint.w;\n  vec2 uv = reflectPoint.xy + distortion * uIntensity;\n  vec3 reflectionSample =\n      packedTexture2DLOD(uReflectTexture, uv, uLevel, uResolution).xyz;\n  reflectionSample *= uReflectIntensity;\n\n  vec3 strength = fresnel(vec3(0.), vNormal, viewDir);\n  vec3 col = uColor;\n  col = mix(col, reflectionSample, strength);\n  csm_DiffuseColor = vec4(col, 1.);\n}",silent:!0});return t.uReflectTexture.value=e.renderTarget.texture,t.uReflectMatrix.value=e.matrix,t.uResolution.value.set(e.renderTarget.width,e.renderTarget.height),o})(z,n.value)}),{deep:!0}),f((()=>a.hide),(n=>{n?(z.material.envMap=null,z.material.envMapIntensity=1,z.material.opacity=0,h.opacity=0):(z.material.envMap=l[2],z.material.envMapIntensity=0,h.opacity=1)}));const C=v();return e({meshList:[_,z],tresMesh:C}),(n,e)=>(u(),x(w,null,[d("primitive",{object:m(c),ref_key:"tresMesh",ref:C},null,8,yn),y(m(ln),{ref_key:"reflectorMipMapRef",ref:M,parent:m(z),ignoreObjects:[m(_),m(z)]},null,8,["parent","ignoreObjects"])],64))}}),_n=["object","rotation-y"],hn=s({__name:"car",props:{run:{type:Boolean,default:!1}},async setup(n){let t,i;const r=xn(),a=n,c=new Y;c.setMeshoptDecoder(K);const{scene:l}=([t,i]=p((()=>c.loadAsync("./plugins/industry4/model/su7_car/sm_car.gltf"))),t=await t,i(),t);const s=function(n){let e=new Map;return n.traverse((n=>{n.isMesh&&(Array.isArray(n.material)?n.material.forEach((n=>{n.name&&e.set(n.name,n)})):n.material.name&&e.set(n.material.name,n.material))})),Object.fromEntries(e)}(l),v=([t,i]=p((()=>o(["./plugins/industry4/texture/t_car_body_AO.raw.jpg","./plugins/industry4/texture/t_cat_car_body_bc.webp","./plugins/industry4/texture/t_gm_car_body_bc.webp"]))),t=await t,i(),t);v[0].colorSpace=W,v[0].minFilter=B,v[0].magFilter=B,v[0].channel=1;for(let e=0;e<v.length;e++)v[e].flipY=!1;const d=mn(l),y=d[2].material;y.envMapIntensity=4,y.color=new k("#26d6e9"),d.forEach((n=>{if(n.isMesh){n.material.aoMap=v[0]}}));const w=d[35];w.children.forEach((n=>{n.material.envMapIntensity=4}));const{onBeforeLoop:_}=e();_((({delta:n})=>{a.run&&w.children.forEach((e=>{e.rotateZ(30*-n*.5)}))})),f((()=>a.run),(n=>{n?w.children.forEach((n=>{const e=n.material;e.roughness=0,e.envMapIntensity=3})):w.children.forEach((n=>{const e=n.material;e.roughness=1,e.envMapIntensity=4}))}));const h={color:new k,targetColor:new k};return f((()=>r.selColorData),(n=>{on.killTweensOf(h),"c8.webp"===n?(s.Car_body.color.set("#ffffff"),s.Car_body.map=v[1],s.Car_body.envMapIntensity=2):"c9.webp"===n?(s.Car_body.color.set("#ffffff"),s.Car_body.map=v[2],s.Car_body.envMapIntensity=2):(s.Car_body.map=null,h.color=s.Car_body.color,h.targetColor=new k(n),on.to(h.color,{duration:.66,ease:"power1.out",r:h.targetColor.r,g:h.targetColor.g,b:h.targetColor.b,onUpdate:()=>{s.Car_body.color.set(h.color)},onComplete:()=>{s.Car_body.envMapIntensity=4,s.Car_body.needsUpdate=!0}})),s.Car_body.needsUpdate=!0})),(n,e)=>(u(),x("primitive",{object:m(l),"rotation-y":Math.PI},null,8,_n))}});const zn=["object"],gn=s({__name:"speedup",async setup(n){let t,o;const i=new Y;i.setMeshoptDecoder(K);const{scene:r}=([t,o]=p((()=>i.loadAsync("./plugins/industry4/model/su7_car/sm_speedup.gltf"))),t=await t,o(),t),a=new A({baseMaterial:Z,uniforms:{uTime:{value:0},uSpeedFactor:{value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  vUv = uv;\n}",fragmentShader:"#ifndef RANDOM_SCALE\n#ifdef RANDOM_HIGHER_RANGE\n#define RANDOM_SCALE vec4(.1031, .1030, .0973, .1099)\n#else\n#define RANDOM_SCALE vec4(443.897, 441.423, .0973, .1099)\n#endif\n#endif\n\n#ifndef FNC_RANDOM\n#define FNC_RANDOM\nfloat random(in float x) {\n#ifdef RANDOM_SINLESS\n    x = fract(x * RANDOM_SCALE.x);\n    x *= x + 33.33;\n    x *= x + x;\n    return fract(x);\n#else\n    return fract(sin(x) * 43758.5453);\n#endif\n}\n\nfloat random(in vec2 st) {\n#ifdef RANDOM_SINLESS\n    vec3 p3  = fract(vec3(st.xyx) * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n#else\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453);\n#endif\n}\n\nfloat random(in vec3 pos) {\n#ifdef RANDOM_SINLESS\n    pos  = fract(pos * RANDOM_SCALE.xyz);\n    pos += dot(pos, pos.zyx + 31.32);\n    return fract((pos.x + pos.y) * pos.z);\n#else\n    return fract(sin(dot(pos.xyz, vec3(70.9898, 78.233, 32.4355))) * 43758.5453123);\n#endif\n}\n\nfloat random(in vec4 pos) {\n#ifdef RANDOM_SINLESS\n    pos = fract(pos * RANDOM_SCALE);\n    pos += dot(pos, pos.wzxy + 33.33);\n    return fract((pos.x + pos.y) * (pos.z + pos.w));\n#else\n    float dot_product = dot(pos, vec4(12.9898,78.233,45.164,94.673));\n    return fract(sin(dot_product) * 43758.5453);\n#endif\n}\n\nvec2 random2(float p) {\n    vec3 p3 = fract(vec3(p) * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx + p3.yz) * p3.zy);\n}\n\nvec2 random2(vec2 p) {\n    vec3 p3 = fract(p.xyx * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx + p3.yz) * p3.zy);\n}\n\nvec2 random2(vec3 p3) {\n    p3 = fract(p3 * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx + p3.yz) * p3.zy);\n}\n\nvec3 random3(float p) {\n    vec3 p3 = fract(vec3(p) * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xxy + p3.yzz) * p3.zyx); \n}\n\nvec3 random3(vec2 p) {\n    vec3 p3 = fract(vec3(p.xyx) * RANDOM_SCALE.xyz);\n    p3 += dot(p3, p3.yxz + 19.19);\n    return fract((p3.xxy + p3.yzz) * p3.zyx);\n}\n\nvec3 random3(vec3 p) {\n    p = fract(p * RANDOM_SCALE.xyz);\n    p += dot(p, p.yxz + 19.19);\n    return fract((p.xxy + p.yzz) * p.zyx);\n}\n\nvec4 random4(float p) {\n    vec4 p4 = fract(p * RANDOM_SCALE);\n    p4 += dot(p4, p4.wzxy + 19.19);\n    return fract((p4.xxyz + p4.yzzw) * p4.zywx);   \n}\n\nvec4 random4(vec2 p) {\n    vec4 p4 = fract(p.xyxy * RANDOM_SCALE);\n    p4 += dot(p4, p4.wzxy + 19.19);\n    return fract((p4.xxyz + p4.yzzw) * p4.zywx);\n}\n\nvec4 random4(vec3 p) {\n    vec4 p4 = fract(p.xyzx * RANDOM_SCALE);\n    p4 += dot(p4, p4.wzxy + 19.19);\n    return fract((p4.xxyz + p4.yzzw) * p4.zywx);\n}\n\nvec4 random4(vec4 p4) {\n    p4 = fract(p4  * RANDOM_SCALE);\n    p4 += dot(p4, p4.wzxy + 19.19);\n    return fract((p4.xxyz + p4.yzzw) * p4.zywx);\n}\n#endif\n#ifndef FNC_MAP\n#define FNC_MAP\nfloat map(float v, float iMin, float iMax ) { return (v-iMin)/(iMax-iMin); }\nvec2 map(vec2 v, vec2 iMin, vec2 iMax ) { return (v-iMin)/(iMax-iMin); }\nvec3 map(vec3 v, vec3 iMin, vec3 iMax ) { return (v-iMin)/(iMax-iMin); }\nvec4 map(vec4 v, vec4 iMin, vec4 iMax ) { return (v-iMin)/(iMax-iMin); }\n\nfloat map(in float v, in float iMin, in float iMax, in float oMin, in float oMax) { return oMin + (oMax - oMin) * (v - iMin) / (iMax - iMin); }\nvec2 map(in vec2 v, in vec2 iMin, in vec2 iMax, in vec2 oMin, in vec2 oMax) { return oMin + (oMax - oMin) * (v - iMin) / (iMax - iMin); }\nvec3 map(in vec3 v, in vec3 iMin, in vec3 iMax, in vec3 oMin, in vec3 oMax) { return oMin + (oMax - oMin) * (v - iMin) / (iMax - iMin); }\nvec4 map(in vec4 v, in vec4 iMin, in vec4 iMax, in vec4 oMin, in vec4 oMax) { return oMin + (oMax - oMin) * (v - iMin) / (iMax - iMin); }\n#endif\nvec2 hash(vec2 p)\n{\n  p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n  return -1. + 2. * fract(sin(p) * 43758.5453123);\n}\n\nfloat noise(in vec2 p) {\n  const float K1 = .366025404;\n  const float K2 = .211324865;\n\n  vec2 i = floor(p + (p.x + p.y) * K1);\n  vec2 a = p - i + (i.x + i.y) * K2;\n  float m = step(a.y, a.x);\n  vec2 o = vec2(m, 1. - m);\n  vec2 b = a - o + K2;\n  vec2 c = a - 1. + 2. * K2;\n  vec3 h = max(.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.);\n  vec3 n = h * h * h * h * vec3(dot(a, hash(i + 0.)), dot(b, hash(i + o)), dot(c, hash(i + 1.)));\n  return dot(n, vec3(70.));\n}\n#ifndef FNC_MOD289\n#define FNC_MOD289\n\nfloat mod289(const in float x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec2 mod289(const in vec2 x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec3 mod289(const in vec3 x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec4 mod289(const in vec4 x) { return x - floor(x * (1. / 289.)) * 289.; }\n\n#endif\n#ifndef FNC_MOD289\n#define FNC_MOD289\n\nfloat mod289(const in float x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec2 mod289(const in vec2 x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec3 mod289(const in vec3 x) { return x - floor(x * (1. / 289.)) * 289.; }\nvec4 mod289(const in vec4 x) { return x - floor(x * (1. / 289.)) * 289.; }\n\n#endif\n\n#ifndef FNC_PERMUTE\n#define FNC_PERMUTE\n\nfloat permute(const in float v) { return mod289(((v * 34.0) + 1.0) * v); }\nvec2 permute(const in vec2 v) { return mod289(((v * 34.0) + 1.0) * v); }\nvec3 permute(const in vec3 v) { return mod289(((v * 34.0) + 1.0) * v); }\nvec4 permute(const in vec4 v) { return mod289(((v * 34.0) + 1.0) * v); }\n\n#endif\n#ifndef FNC_TAYLORINVSQRT\n#define FNC_TAYLORINVSQRT\nfloat taylorInvSqrt(in float r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec2 taylorInvSqrt(in vec2 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec3 taylorInvSqrt(in vec3 r) { return 1.79284291400159 - 0.85373472095314 * r; }\nvec4 taylorInvSqrt(in vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\n#endif\n#ifndef FNC_GRAD4\n#define FNC_GRAD4\nvec4 grad4(float j, vec4 ip) {\n    const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n    vec4 p,s;\n    p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n    p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n    s = vec4(lessThan(p, vec4(0.0)));\n    p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n    return p;\n}\n#endif\n\n#ifndef FNC_SNOISE\n#define FNC_SNOISE\nfloat snoise(in vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  \n                        0.366025403784439,  \n                        -0.577350269189626,  \n                        0.024390243902439); \n    \n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n\n    \n    vec2 i1;\n    \n    \n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    \n    \n    \n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n\n    \n    i = mod289(i); \n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n\n    \n    \n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    \n    \n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    \n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat snoise(in vec3 v) {\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    \n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    \n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    \n    \n    \n    \n    vec3 x1 = x0 - i1 + C.xxx;\n    vec3 x2 = x0 - i2 + C.yyy; \n    vec3 x3 = x0 - D.yyy;      \n\n    \n    i = mod289(i);\n    vec4 p = permute( permute( permute(\n                i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n            + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    \n    \n    float n_ = 0.142857142857; \n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  \n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    \n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    \n    \n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    \n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    \n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nfloat snoise(in vec4 v) {\n    const vec4  C = vec4( 0.138196601125011,  \n                        0.276393202250021,  \n                        0.414589803375032,  \n                        -0.447213595499958); \n\n    \n    vec4 i  = floor(v + dot(v, vec4(.309016994374947451)) ); \n    vec4 x0 = v -   i + dot(i, C.xxxx);\n\n    \n\n    \n    vec4 i0;\n    vec3 isX = step( x0.yzw, x0.xxx );\n    vec3 isYZ = step( x0.zww, x0.yyz );\n    \n    i0.x = isX.x + isX.y + isX.z;\n    i0.yzw = 1.0 - isX;\n    \n    i0.y += isYZ.x + isYZ.y;\n    i0.zw += 1.0 - isYZ.xy;\n    i0.z += isYZ.z;\n    i0.w += 1.0 - isYZ.z;\n\n    \n    vec4 i3 = clamp( i0, 0.0, 1.0 );\n    vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n    vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n    \n    \n    \n    \n    \n    vec4 x1 = x0 - i1 + C.xxxx;\n    vec4 x2 = x0 - i2 + C.yyyy;\n    vec4 x3 = x0 - i3 + C.zzzz;\n    vec4 x4 = x0 + C.wwww;\n\n    \n    i = mod289(i);\n    float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n    vec4 j1 = permute( permute( permute( permute (\n                i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n            + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n            + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n            + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n    \n    \n    vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n    vec4 p0 = grad4(j0,   ip);\n    vec4 p1 = grad4(j1.x, ip);\n    vec4 p2 = grad4(j1.y, ip);\n    vec4 p3 = grad4(j1.z, ip);\n    vec4 p4 = grad4(j1.w, ip);\n\n    \n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    p4 *= taylorInvSqrt(dot(p4,p4));\n\n    \n    vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n    vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n    m0 = m0 * m0;\n    m1 = m1 * m1;\n    return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n                + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n}\n\nvec2 snoise2( vec2 x ){\n    float s  = snoise(vec2( x ));\n    float s1 = snoise(vec2( x.y - 19.1, x.x + 47.2 ));\n    return vec2( s , s1 );\n}\n\nvec3 snoise3( vec3 x ){\n    float s  = snoise(vec3( x ));\n    float s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\n    float s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\n    return vec3( s , s1 , s2 );\n}\n\nvec3 snoise3( vec4 x ){\n    float s  = snoise(vec4( x ));\n    float s1 = snoise(vec4( x.y - 19.1 , x.z + 33.4 , x.x + 47.2, x.w ));\n    float s2 = snoise(vec4( x.z + 74.2 , x.x - 124.5 , x.y + 99.4, x.w ));\n    return vec3( s , s1 , s2 );\n}\n\n#endif\nvarying vec2 vUv;\nuniform float uTime;\nuniform float uSpeedFactor;\n\nvec3 getColor(vec2 uv) {\n  uv += vec2(9., 0.);\n  float r = random(uv + vec2(12., 2.));\n  float g = random(uv + vec2(7., 5.));\n  float b = random(uv);\n  vec3 col = vec3(r, g, b);\n  return col;\n}\n\nvec3 colorNoise(vec2 uv) {\n  vec2 newUV = floor(uv);\n  vec2 size = vec2(1.);\n  vec3 v1 = getColor((newUV + vec2(0.)) / size);\n  vec3 v2 = getColor((newUV + vec2(0., 1.)) / size);\n  vec3 v3 = getColor((newUV + vec2(1., 0.)) / size);\n  vec3 v4 = getColor((newUV + vec2(1.)) / size);\n  vec2 factor = smoothstep(0., 1., fract(uv));\n  vec3 v1Tov2 = mix(v1, v2, factor.y);\n  vec3 v3Tov4 = mix(v3, v4, factor.y);\n  vec3 mixColor = mix(v1Tov2, v3Tov4, factor.x);\n  return mixColor;\n}\n\nvoid main() {\n  vec2 newUV = vUv;\n  newUV.x += uTime * .5;\n  float alpha = snoise(newUV * vec2(3., 100.));\n  alpha = map(alpha, -1., 1., 0., 1.);\n  alpha = pow(clamp(alpha - .05, 0., 1.), 13.);\n  alpha = smoothstep(0., .04, alpha);\n  vec3 col = vec3(1.);\n  col = colorNoise(newUV * vec2(10., 100.));\n  col *= vec3(1.5, 1., 400.);\n  alpha *= smoothstep(.02, .5, vUv.x) * smoothstep(.02, .5, 1. - vUv.x);\n  alpha *= smoothstep(.01, .1, vUv.y) * smoothstep(.01, .1, 1. - vUv.y);\n  alpha *= smoothstep(0., 1., uSpeedFactor) * 5.;\n  csm_FragColor = vec4(col, alpha);\n}",transparent:!0,depthWrite:!1});r.traverse((n=>{if(n.isMesh){n.material=a}}));const{onBeforeLoop:c}=e();return c((({delta:n})=>{a.uniforms.uTime.value+=n,a.uniforms.uSpeedFactor.value=1})),(n,e)=>(u(),x("primitive",{object:m(r)},null,8,zn))}}),Mn=s({__name:"effect",props:{hide:{type:Boolean,default:!1}},setup(t){const o=t,{camera:i,renderer:r,scene:a,sizes:c}=n(),l=.666,s=.166,v=.3;let p=null,u=null;let x=null;_((()=>{c.width.value&&(((n,e,t,o,i)=>{const r=new X(n,e);u=new J(new H(o,i),s,v,l),p=new $(t),p.addPass(r),p.addPass(u)})(a.value,i.value,r.value,c.width.value,c.height.value),r.value,x=new nn,x.uniforms.damp.value=.2,x.enabled=!1,p.addPass(x))})),f((()=>o.hide),(n=>{n?(u.strength=.01,u.radius=10,x.enabled=!0):(u.strength=.166,u.radius=.3,x.enabled=!1)}));const{onLoop:d}=e();return d((()=>{p&&p.render()})),(n,e)=>null}}),Cn={class:"colorList"},Sn=["onClick"],bn=rn(s({__name:"UIcarSkin",setup(n){const e=xn(),t=[{src:"c1.webp",color:"#26d6e9"},{src:"c2.webp",color:"#444c3c"},{src:"c3.webp",color:"#5d5d5d"},{src:"c4.webp",color:"#8a8a8a"},{src:"c5.webp",color:"#3e3543"},{src:"c6.webp",color:"#822817"},{src:"c7.webp",color:"#e0b023"},{src:"c8.webp",color:"c8.webp"},{src:"c9.webp",color:"c9.webp"}];return(n,o)=>h((u(),x("div",Cn,[(u(),x(w,null,g(t,((n,o)=>d("div",{key:o,class:M({"color-item":m(e).selColorIndex===o}),style:C({backgroundImage:`url(@/../plugins/industry4/icon/${n.src})`,width:"32px",height:"32px",borderRadius:"50%",margin:"8px",backgroundSize:"100% 100%",cursor:"pointer"}),onClick:n=>(n=>{e.selColorIndex=n,e.selColorData=t[n].color})(o)},null,14,Sn))),64))],512)),[[z,m(e).showColorList]])}}),[["__scopeId","data-v-b8b2a8f6"]]),Nn=s({__name:"su7",setup(n){const e=S({clearColor:"#000",antialias:!0,physicallyCorrectLights:!0,logarithmicDepthBuffer:!1,renderMode:"manual"}),t=S({}),o=v(!1),l=new a({title:"参数"});l.addBinding(o,"value",{label:"流光模式"});const s=xn();return l.addBinding(s,"showColorList",{label:"选择皮肤"}),(n,a)=>{const l=b("TresCanvas");return u(),x(w,null,[(u(),N(P,null,{default:D((()=>[y(m(an))])),_:1})),y(l,I(e,{"window-size":""}),{default:D((()=>[y(m(i),{speed:o.value?66:0,rotationFactor:.1,floatFactor:.1,range:[-.2,.1]},{default:D((()=>a[0]||(a[0]=[d("TresPerspectiveCamera",{position:[0,5,8],fov:45,near:.1,far:500},null,-1)]))),_:1},8,["speed"]),y(m(r),L(R(t)),null,16),(u(),N(P,null,{default:D((()=>[y(hn,{run:o.value},null,8,["run"])])),_:1})),(u(),N(P,null,{default:D((()=>[y(gn,{visible:o.value},null,8,["visible"])])),_:1})),(u(),N(P,null,{default:D((()=>[y(wn,{hide:o.value},null,8,["hide"])])),_:1})),(u(),N(P,null,{default:D((()=>[y(m(cn),{blur:0,far:1e4,useDefaultScene:o.value},{default:D((()=>[y(m(c),{intensity:6,"rotation-x":Math.PI/2,position:[0,7,0],scale:[10,10,2]},null,8,["rotation-x"])])),_:1},8,["useDefaultScene"])])),_:1})),y(Mn,{hide:o.value},null,8,["hide"])])),_:1},16),y(bn)],64)}}});export{Nn as default};
