import{e as n,o as t}from"./@tresjs.yaBKiR-I1741309500666.js";import{a0 as e,aX as r}from"./three.8tDGqmLF1741309500666.js";import{_ as o}from"./argestCircle.iQbYZf4A1741309500666.js";import{d as i,e as s,o as a,f as u,g as c,N as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.NRI7TcgI1741309500666.js";import"./postprocessing.5pHDeDVF1741309500666.js";import"./@vueuse.7Aa9Vkmy1741309500666.js";const g=b;!function(n,t){const e=b,r=_();for(;;)try{if(813187===parseInt(e(153))/1+-parseInt(e(178))/2+-parseInt(e(131))/3*(parseInt(e(147))/4)+parseInt(e(164))/5*(parseInt(e(176))/6)+parseInt(e(163))/7+-parseInt(e(135))/8+-parseInt(e(152))/9*(-parseInt(e(134))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){h(this,(function(){const n=b,t=new RegExp(n(136)),e=new RegExp(n(143),"i"),r=w("init");t[n(167)](r+"chain")&&e.test(r+"input")?w():r("0")}))()}();const T=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[b(140)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();T(void 0,(function(){const n=b;let t;try{t=Function(n(173)+n(146)+");")()}catch(o){t=window}const e=t[n(158)]=t[n(158)]||{},r=[n(165),n(160),n(168),n(180),n(150),n(161),n(154)];for(let i=0;i<r[n(170)];i++){const t=T[n(179)].prototype[n(159)](T),o=r[i],s=e[o]||t;t[n(162)]=T[n(159)](T),t[n(156)]=s[n(156)].bind(s),e[o]=t}}))();const y={ref:g(171),position:[600,750,-1221],fov:45,near:1,far:1e4},x=[g(130)];function b(n,t){const e=_();return(b=function(n,t){return e[n-=127]})(n,t)}const I=g(129),j=i({__name:g(169),setup(i){const h=g,T={clearColor:h(166),shadows:!0,alpha:!1,useLegacyLights:!0},b={autoRotate:!0,enableDamping:!0},j={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:I,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:w}=n();return w((({delta:n})=>{const t=h;j[t(177)][t(155)][t(141)]+=n})),(n,e)=>{const r=h,o=s(r(139));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[l("TresPerspectiveCamera",y,null,512),f(p(t),v(d(b)),null,16),e[1]||(e[1]=l(r(149),{color:r(157)},null,-1)),e[2]||(e[2]=l(r(151),{position:[100,100,0],intensity:.5,color:r(157)},null,-1)),l(r(172),{ref:r(128),position:[0,100,0],"rotation-x":2*Math.PI/360*90},[e[0]||(e[0]=l(r(138),{args:[1e3,1e3]},null,-1)),l("TresShaderMaterial",v(d(j)),null,16)],8,x),e[3]||(e[3]=l(r(133),{args:[1e3],position:[0,19,0]},null,-1)),e[4]||(e[4]=l(r(137),{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});function w(n){function t(n){const e=b;if(typeof n===e(132))return function(n){}.constructor(e(142)).apply(e(145));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(e(127)+"gger")[e(174)](e(144)):function(){return!1}[e(179)]("debu"+e(175)).apply(e(148)),t(++n)}try{if(n)return t;t(0)}catch(e){}}function _(){const n=["string","TresAxesHelper","760XNhBDd","3040976iNlKtR","function *\\( *\\)","TresGridHelper","TresPlaneGeometry","TresCanvas","apply","value","while (true) {}","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","action","counter",'{}.constructor("return this")( )',"100XHlrlT","stateObject","TresAmbientLight","exception","TresDirectionalLight","38421OERZkv","1076898IWQlLi","trace","uTime","toString","#ffffff","console","bind","warn","table","__proto__","3356486veUUSJ","251645owaOtL","log","#000000","test","info","tunnel","length","perspectiveCameraRef","TresMesh","return (function() ","call","gger","54JSVPiP","uniforms","2149334WzZIkl","constructor","error","debu","quanMeshRef","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","rotation-x","7899hHWPki"];return(_=function(){return n})()}export{j as default};
