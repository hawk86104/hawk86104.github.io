import{c8 as o,ap as s,as as a,c6 as e}from"./three.BAUoVmiW1748143687960.js";import{a as i}from"./@tresjs.CIF1IzyY1748143687960.js";import{P as t}from"./tweakpane.C0HtAJSg1748143687960.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.Dpq0Q5501748143687960.js";import"./index.eYuTuqeB1748143687960.js";import{l}from"./util.D3BkxE8i1748143687960.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.B4V4cKvW1748143687960.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BI04rvmA1748143687960.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.CS_flEgB1748143687960.js";import{d as u,r as c,a5 as _,h as j,G as f,o as g,j as b,u as h,f as y,I as w,ak as v,al as B,e as k,H as L,m as C,am as x,F as S}from"./@vue.C_fjx3FT1748143687960.js";import"./postprocessing.BT6kobhQ1748143687960.js";import"./@vueuse.CbR7AWyh1748143687960.js";import"./utils.DUIleYiO1748143687960.js";import"./@fesjs.CQfPqpiA1748143687960.js";import"./vue-router.BZnpJAA51748143687960.js";import"./lodash-es.C7pWAXPe1748143687960.js";import"./@qlin.q6OWdsQV1748143687960.js";import"./pinia.DEEYAsso1748143687960.js";import"./@babel.BPq7uOAK1748143687960.js";import"./@floating-ui.BFjFSAYt1748143687960.js";import"./@juggle.CcBCnTIR1748143687960.js";import"./three-mesh-ui.module.D5v3rw811748143687960.js";import"./starLoading.DcnUhauf1748143687960.js";import"./cssLoaders.DDMwnv4M1748143687960.js";import"./bubbleLoading.DcC5478p1748143687960.js";import"./yangyangLoading.CykSYMIp1748143687960.js";const T={position:[0,120,0]},z=u({__name:"digitalBrainFloor",async setup(u){let z,G;const M=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),P=c({color:"#fff",show:!0,opacity:1}),R=new t({title:"参数"});R.addBinding(P,"show",{label:"点云显示"}),R.addBinding(P,"color",{label:"点云颜色"}),R.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑轮廓显示"}),R.addBinding(F,"color",{label:"脑轮廓颜色"}),R.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const q=c({color:"#9e00af",show:!0,opacity:1});R.addBinding(q,"show",{label:"脑组织显示"}),R.addBinding(q,"color",{label:"脑组织颜色"}),R.addBinding(q,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const A=new o,E=([z,G]=_((()=>l("./plugins/medical/model/brainparts.OBJ",A))),z=await z,G(),z),H=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),I=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=j("TresCanvas");return g(),f(S,null,[b(h(d)),b(a,C(H,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),v(B(I)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",T,[P.show?(g(),k(n,C({key:0,model:h(E)},P),null,16,["model"])):L("",!0),(g(),k(x,null,{default:y((()=>[F.show?(g(),k(p,C({key:0,model:h(E)},F),null,16,["model"])):L("",!0)])),_:1})),q.show?(g(),k(m,C({key:1,model:h(E)},q),null,16,["model"])):L("",!0)]),b(r,v(B(M)),null,16)])),_:1},16)],64)}}});export{z as default};
