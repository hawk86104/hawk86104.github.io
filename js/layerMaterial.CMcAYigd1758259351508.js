import{a}from"./@tresjs.CywMBpUh1758259351508.js";import{P as o}from"./tweakpane.C0HtAJSg1758259351508.js";import{_ as e,a as s,b as r}from"./depth.vue_vue_type_script_setup_true_lang.CPsRnItH1758259351508.js";import"./lamina.7xwNePoj1758259351508.js";import"./OimoPhysicsBuffer.ChpcdjlT1758259351508.js";import{_ as t}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.DxOxDTXj1758259351508.js";import"./vanilla.esm.5.5.0.BLQsTmw31758259351508.js";import"./PackedMipMapGenerator.DyzXggGq1758259351508.js";import"./Resource.DDopQ4j61758259351508.js";import{d as i,r as l,ac as p,h as n,e as m,o as d,f as c,I as h,j as f,u,a7 as g,a8 as j,a5 as _,m as v}from"./@vue.pEDXJ_3Z1758259351508.js";import{_ as B,co as b,V as k}from"./three.CtgP63ME1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";import"./glsl-tokenizer.BMVmBPoE1758259351508.js";import"./@amap.CGUF9xH41758259351508.js";import"./glsl-token-descope.4V2_7q6C1758259351508.js";import"./glsl-token-depth.Duvdnvlt1758259351508.js";import"./glsl-token-scope.BdCfdvWe1758259351508.js";import"./glsl-token-properties.DKXemF9b1758259351508.js";import"./glsl-token-assignments.Ctx_yUgS1758259351508.js";import"./glsl-token-string.BBIN0iOh1758259351508.js";import"./glsl-token-functions.7xgp6R6C1758259351508.js";import"./oimophysics.BBtHVm4j1758259351508.js";import"./dither.glsl.tNAdkJUa1758259351508.js";import"./Reflector.B9L45tzA1758259351508.js";import"./vite-plugin-qiankun.B06WoCqG1758259351508.js";import"./object-hash.XWOgmMan1758259351508.js";import"./jszip.uB4RcRU81758259351508.js";import"./three-stdlib.CnBqg7GS1758259351508.js";const w={position:[0,.5,0]},y=i({__name:"layerMaterial",setup(i){const y=l({clearColor:"#000000",shadows:!0,alpha:!1,antialias:!0,pixelRatio:window.devicePixelRatio,shadowMapType:b,outputColorSpace:B,toneMapping:void 0,useLegacyLights:!0}),x=l({autoRotate:!0}),A=p({color1:"#000000",alpha1:1,colorA:"#ed08ff",colorB:"#1bff00",alpha2:1.1,near:.87,far:299.77}),T=new o({expanded:!0}),M=T.addFolder({title:"Color层"});M.addBinding(A,"color1",{label:"颜色"}),M.addBinding(A,"alpha1",{label:"alpha",step:.1,min:0,max:2});const C=T.addFolder({title:"Depth层"});return C.addBinding(A,"colorA",{label:"颜色A"}),C.addBinding(A,"colorB",{label:"颜色B"}),C.addBinding(A,"alpha2",{label:"alpha",step:.1,min:0,max:2}),C.addBinding(A,"near",{label:"near",step:.01,min:0,max:1}),C.addBinding(A,"far",{label:"far",step:.01,min:299,max:300}),(o,i)=>{const l=n("TresCanvas");return d(),m(l,v(y,{"window-size":""}),{default:c((()=>[i[1]||(i[1]=h("TresPerspectiveCamera",{position:[5,10,5],fov:30,near:1,far:1e3},null,-1)),f(u(a),g(j(x)),null,16),i[2]||(i[2]=h("TresAmbientLight",{color:"#ffffff",intensity:2},null,-1)),(d(),m(_,null,{default:c((()=>[f(u(t),{reflectivity:2.6,showGridHelper:"",position:[0,-.6,0]})])),_:1})),h("TresMesh",w,[i[0]||(i[0]=h("TresSphereGeometry",{args:[1,500,500]},null,-1)),f(u(e),{color:"white",lighting:"physical"},{default:c((()=>[f(u(s),{color:u(A).color1,alpha:u(A).alpha1},null,8,["color","alpha"]),f(u(r),{colorA:u(A).colorA,colorB:u(A).colorB,alpha:u(A).alpha2,mode:"normal",near:u(A).near,far:u(A).far,origin:new k(100,100,100)},null,8,["colorA","colorB","alpha","near","far","origin"])])),_:1})])])),_:1},16)}}});export{y as default};
