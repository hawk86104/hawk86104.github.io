import{a0 as d,k as u,ac as r,w as h,r as f,o as g,v as m,D as l,a7 as T,a2 as M,a3 as C,a4 as v,X as e,a,K as s,al as i,aY as w,a_ as x,ao as y,ab as B}from"./vendor.dUBjHEtG1712557423713.js";const k=e("TresPerspectiveCamera",{position:[3,3,3]},null,-1),R={"position-x":3},b=e("TresTorusKnotGeometry",{args:[1,.4,256,20]},null,-1),G={position:[0,0,-1]},S=e("TresPlaneGeometry",{args:[3,3]},null,-1),D=["side"],N=e("TresGridHelper",{args:[10,10]},null,-1),P=e("TresAmbientLight",{intensity:1},null,-1),K=e("TresDirectionalLight",{intensity:1,position:[2,2,2]},null,-1),A=d({__name:"glassMaterial",setup(L){const c={clearColor:"#82DBC5",shadows:!0,alpha:!1,shadowMapType:M,outputColorSpace:C,toneMapping:v},_=u(),t=r(),o=r();return h(t,n=>{o.value.value.material.dispose(),o.value.value.material=n.MeshGlassMaterialClass}),(n,V)=>{const p=f("TresCanvas");return g(),m(p,T(c,{ref_key:"context",ref:_,"window-size":""}),{default:l(()=>[k,e("TresMesh",R,[b,a(s(i),{ref_key:"glassMaterialRef",ref:t},null,512)]),a(s(w),{scale:.5},{default:l(()=>[a(s(i))]),_:1}),a(s(x),{ref_key:"boxRef",ref:o,"position-x":-3},null,512),e("TresMesh",G,[S,e("TresMeshBasicMaterial",{side:s(y),color:16716049},null,8,D)]),N,P,K,a(s(B))]),_:1},16)}}});export{A as default};
