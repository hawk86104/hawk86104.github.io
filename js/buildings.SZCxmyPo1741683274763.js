import{u as t,_ as o,a as n}from"./mergeTres.ZYalh7Ok1741683274763.js";import{l as r}from"./utils.EJ2Xr5EX1741683274763.js";import{e}from"./@tresjs.tqalU7S21741683274763.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741683274763.js";import{_ as y}from"./@fesjs.k2eAvwyB1741683274763.js";import"./@amap.H2801npL1741683274763.js";import"./pinia.ewBqqOMH1741683274763.js";import"./three.3wvNjL8W1741683274763.js";import"./three-mesh-bvh.7KXDHVGx1741683274763.js";import"./postprocessing.D4QJINSY1741683274763.js";import"./@vueuse.lt4-M8RL1741683274763.js";import"./vue-router.orSV66Fm1741683274763.js";import"./lodash-es.pklfUAS51741683274763.js";import"./@qlin.yHhFDldE1741683274763.js";import"./@floating-ui.BPbuo5Gx1741683274763.js";import"./@juggle.7yjBMqoW1741683274763.js";const C=j;!function(t,o){const n=j,r=b();for(;;)try{if(711687===-parseInt(n(527))/1*(-parseInt(n(506))/2)+-parseInt(n(522))/3+-parseInt(n(532))/4+parseInt(n(514))/5+parseInt(n(524))/6+-parseInt(n(501))/7*(parseInt(n(484))/8)+-parseInt(n(507))/9*(-parseInt(n(529))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[j(490)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=j,o=new RegExp(t(495)),n=new RegExp(t(530),"i"),r=z(t(523));o[t(493)](r+t(489))&&n[t(493)](r+"input")?z():r("0")}))()}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function b(){const t=["constructor","7806UZqEpB","423EEDwyk","uniforms","warn","exception","gger","geometry","push","3007140vyUjKH","trace","debu","faceUv","table","error","exp","log","1539336nWXkJd","init","6905880BjVDzo","u_far","u_near","178opiPms","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","178090BQwyly","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","normal","5203680pbqJRk",'{}.constructor("return this")( )',"length","position","normalArray","getZoom","call","positionArray","tbgRef","value","bind","248uDAdcZ","while (true) {}","info","toString","customCoords","chain","apply","TresMesh","mapHandle","test","counter","function *\\( *\\)","far","string","lngLatToCoord","uvArray","cameraState","171262onySOW","buildingModels","prototype","atan"];return(b=function(){return t})()}w(void 0,(function(){const t=j,o=function(){const t=j;let o;try{o=Function("return (function() "+t(533)+");")()}catch(n){o=window}return o}(),n=o.console=o.console||{},r=[t(521),t(509),t(486),t(519),t(510),t(518),t(515)];for(let e=0;e<r.length;e++){const o=w[t(505)][t(503)].bind(w),a=r[e],i=n[a]||o;o.__proto__=w[t(483)](w),o[t(487)]=i[t(487)][t(483)](i),n[a]=o}}))();const I=[C(535),C(517),C(531)];function j(t,o){const n=b();return(j=function(t,o){return n[t-=480]})(t,o)}const S=a({__name:C(502),setup(o){const n=t(),a=t=>{const o=j;for(let r=0;r<t[o(534)];r+=3){const e=[t[r],t[r+1]],a=n[o(492)][o(488)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[j(500)]&&(async()=>{const t=j,o=await r(t(528),"buildings");for(let n=0;n<o.length;n++){const r=o[n];a(r[t(512)]);const e=new Float32Array(r[t(512)]),i=new Float32Array(r[t(517)]),l=new Float32Array(r[t(512)].length);d[t(513)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;n[t(500)]&&(g[t(508)].u_zoom.value=n[t(492)][t(537)](),g[t(508)][t(526)][t(482)]=n[t(500)].near,g[t(508)][t(525)].value=n[t(500)][t(496)])})),(t,o)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,o)=>{const n=j;return c(),s(n(491),{key:""+o},[p("TresBufferGeometry",{ref_for:!0,ref:n(481),position:[t[n(480)],3],faceUv:[t[n(499)],2],normal:[t[n(536)],3]},null,8,I),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))]))}});function z(t){function o(t){const n=j;if(typeof t===n(497))return function(t){}.constructor(n(485))[n(490)](n(494));1!==(""+t/t)[n(534)]||t%20==0?function(){return!0}[n(505)](n(516)+n(511))[n(538)]("action"):function(){return!1}.constructor(n(516)+"gger").apply("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const P=A;!function(t,o){const n=A,r=U();for(;;)try{if(130136===-parseInt(n(414))/1*(parseInt(n(441))/2)+parseInt(n(422))/3*(parseInt(n(446))/4)+parseInt(n(424))/5+-parseInt(n(426))/6+-parseInt(n(413))/7+parseInt(n(425))/8+parseInt(n(444))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[A(439)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function A(t,o){const n=U();return(A=function(t,o){return n[t-=411]})(t,o)}!function(){R(this,(function(){const t=A,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(437),"i"),r=D(t(429));o[t(412)](r+t(434))&&n[t(412)](r+t(419))?D():r("0")}))()}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[A(439)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function U(){const t=["log","debu","manual","chain","action","prototype","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","buildings","apply","__proto__","256EtcGiY","bind","constructor","598995OXbgSx","exception","28BaxIIl","string","return (function() ","test","691726HsxRad","395qMyLgt","toString","info","TresAmbientLight","call","input","counter","length","72159POPjZr","console","278030yCmnDl","1894384siGyWA","1486896agKwTh","tresCanvas","TresPerspectiveCamera","init","gger"];return(U=function(){return t})()}F(void 0,(function(){const t=A;let o;try{o=Function(t(411)+'{}.constructor("return this")( ));')()}catch(e){o=window}const n=o[t(423)]=o.console||{},r=[t(431),"warn",t(416),"error",t(445),"table","trace"];for(let a=0;a<r.length;a++){const o=F[t(443)][t(436)][t(442)](F),e=r[a],i=n[e]||o;o[t(440)]=F.bind(F),o[t(415)]=i[t(415)][t(442)](i),n[e]=o}}))();function D(t){function o(t){const n=A;if(typeof t===n(447))return function(t){}.constructor("while (true) {}")[n(439)](n(420));1!==(""+t/t)[n(421)]||t%20==0?function(){return!0}[n(443)](n(432)+n(430))[n(418)](n(435)):function(){return!1}.constructor("debu"+n(430))[n(439)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const E=y(a({__name:P(438),setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(433)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(427),ref:"tcRef"},a),{default:m((()=>[i[0]||(i[0]=p(l(428),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(417),{intensity:.5},null,-1)),g(n,{center:e}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{E as default};
