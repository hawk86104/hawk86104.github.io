import{_ as e}from"./three.rmsIv-u_1736160428509.js";import{e as n,b as t,U as a}from"./@tresjs.8MtVPQyb1736160428509.js";import{P as o}from"./tweakpane.yHWGBmom1736160428509.js";import{d as r,a6 as i,X as l,e as s,o as u,f as c,g as f,m as p,J as v,j as m,u as d,aj as h,ak as g}from"./@vue.4u_eOGex1736160428509.js";import"./@vueuse.GObPVvIB1736160428509.js";const x=b;!function(e,n){const t=b,a=w();for(;;)try{if(689265===-parseInt(t(380))/1+-parseInt(t(371))/2+parseInt(t(367))/3+-parseInt(t(356))/4+-parseInt(t(376))/5+parseInt(t(360))/6+parseInt(t(354))/7*(parseInt(t(372))/8))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(406)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=b,n=new RegExp(e(393)),t=new RegExp(e(366),"i"),a=_("init");n[e(364)](a+"chain")&&t[e(364)](a+"input")?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(406)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(){const e=["TresIcosahedronGeometry","warn","test","海浪变化速度","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","2219055lKFGlx","while (true) {}","return (function() ","groupRef","1639734PaWpQM","89448kmIFwt","gger","#122148","#080820","3502615FbDSqJ","change","__proto__","addFolder","860139GKFZsA","SRGBColorSpace",'{}.constructor("return this")( )',"FrontSide","debu","toString","console","call","粒子大小","bind","stateObject","TresMesh","TresPoints","function *\\( *\\)","TresMeshBasicMaterial","海浪高度","info","addBinding","length","error","constructor","uniforms","set","#ffffff","TresCanvas","log","apply","pointsEarth","action","uTime","color","value","658EXYfGk","counter","305668seoNEc","rotation","trace","pointSize","8133072pXfpMQ","size"];return(w=function(){return e})()}T(void 0,(function(){const e=b,n=function(){const e=b;let n;try{n=Function(e(369)+e(382)+");")()}catch(t){n=window}return n}(),t=n[e(386)]=n[e(386)]||{},a=[e(405),e(363),e(396),e(399),"exception","table",e(358)];for(let o=0;o<a[e(398)];o++){const n=T.constructor.prototype[e(389)](T),r=a[o],i=t[r]||n;n[e(378)]=T[e(389)](T),n[e(385)]=i[e(385)][e(389)](i),t[r]=n}}))();const S=r({__name:x(407),async setup(r){const y=x;let T,w;const S={color:"#17c5a9",pointSize:4},b={clearColor:y(374),shadows:!1,alpha:!1,outputColorSpace:e[y(381)]},_={color:S[y(352)],wireframe:!0,transparent:!0,opacity:.2},z=([T,w]=i((()=>t(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),E=z[0],j=z[1],P=z[2],D=z[3],k=z[4],A={uniforms:{size:{type:"f",value:S[y(359)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:j}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(383)]},C=l(),F=l(),I=(new o)[y(379)]({title:"Debug"});I[y(397)](S,"color",{type:y(352)}).on(y(377),(({value:e})=>{const n=y;F[n(353)].color[n(402)](e)})),I[y(397)](A[y(401)][y(361)],"value",{min:.1,max:10,step:.1,label:y(388)}),I[y(397)](A[y(401)].uWaveHeight,"value",{min:.01,max:.5,step:.01,label:y(395)}),I.addBinding(A.uniforms.uWaveSpeed,y(353),{min:.01,max:1,step:.01,label:y(365)});const{onLoop:M}=n();return M((({delta:e})=>{const n=y;C[n(353)]&&(C[n(353)][n(357)].y+=.002,A[n(401)][n(409)].value+=10*e)})),(e,n)=>{const t=y,o=s(t(404));return u(),c(o,p(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),v("TresGroup",{ref_key:t(370),ref:C},[v(t(391),null,[n[0]||(n[0]=v(t(362),{args:[1,4]},null,-1)),v(t(394),p({ref_key:"wireframeMaterialRef",ref:F},_),null,16)]),v(t(392),null,[n[1]||(n[1]=v(t(362),{args:[1,128]},null,-1)),v("TresShaderMaterial",h(g(A)),null,16)])],512),n[3]||(n[3]=v("TresHemisphereLight",{args:[t(403),t(375),3]},null,-1))])),_:1},16)}}});function b(e,n){const t=w();return(b=function(e,n){return t[e-=352]})(e,n)}function _(e){function n(e){const t=b;if("string"==typeof e)return function(e){}[t(400)](t(368))[t(406)](t(355));1!==(""+e/e)[t(398)]||e%20==0?function(){return!0}[t(400)]("debu"+t(373))[t(387)](t(408)):function(){return!1}[t(400)](t(384)+t(373)).apply(t(390)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{S as default};
