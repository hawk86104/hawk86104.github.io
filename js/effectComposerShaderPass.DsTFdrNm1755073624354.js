import{m as e,e as a,a as r}from"./@tresjs.BCY8YfXT1755073624354.js";import{ch as s,ci as n,a as l,cj as t,n as o,cw as u}from"./three.QlBabAUP1755073624354.js";import{d as v,b as i,a2 as m,G as d,o as c,I as p,F as f,h,e as x,f as T,j as w,u as g}from"./@vue.BzMISRrV1755073624354.js";import"./postprocessing.5xFoYuqq1755073624354.js";import"./@vueuse.rvsfWOfQ1755073624354.js";const y=v({__name:"ecLayerShaderPass",setup(r){const v=i(),h=i(),{camera:x,renderer:T,scene:w,sizes:g}=e(),y=.572,_=.51,b=0;let j=null,M=null,P=null;m((()=>{v.value&&v.value.layers.set(0),h.value&&h.value.layers.set(1),g.width.value&&(((e,a,r,o,u)=>{j=new s(e,a);const v=new n(new l(o,u),y,_,b);M=new t(r),M.renderToScreen=!1,M.addPass(j),M.addPass(v)})(w.value,x.value,T.value,g.width.value,g.height.value),(e=>{P=new t(e);const a=new o({uniforms:{baseTexture:{value:null},bloomTexture:{value:M.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( vec4( 1.0 ) *texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n            }\n        ",defines:{}}),r=new u(a,"baseTexture");r.needsSwap=!0,P.addPass(j),P.addPass(r)})(T.value))}));const{onLoop:S}=a();return S((()=>{M&&P&&x.value&&(T.value.clear(),x.value.layers.set(1),M.render(),T.value.clearDepth(),x.value.layers.set(0),P.render(w.value,x.value))})),(e,a)=>(c(),d(f,null,[p("TresMesh",{ref_key:"normalBox",ref:v,position:[3,2,1]},a[0]||(a[0]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)]),512),p("TresMesh",{ref_key:"shineBox",ref:h,position:[0,2,-4]},a[1]||(a[1]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)]),512)],64))}}),_=v({__name:"effectComposerShaderPass",setup(e){const a=i();return m((()=>{if(a.value){a.value.context.renderer.value.autoClear=!1}})),(e,s)=>{const n=h("TresCanvas");return c(),x(n,{renderMode:"manual","window-size":"",ref_key:"tcRef",ref:a},{default:T((()=>[s[0]||(s[0]=p("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),s[1]||(s[1]=p("TresAmbientLight",{intensity:1},null,-1)),w(g(r)),s[2]||(s[2]=p("TresGridHelper",{args:[10,10]},null,-1)),w(y)])),_:1},512)}}});export{_ as default};
