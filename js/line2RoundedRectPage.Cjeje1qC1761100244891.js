import"./@fesjs.DbrjsIBT1761100244891.js";import{K as e}from"./@tresjs.DqJWjmrH1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";/* empty css                                                                             */import"./three-mesh-ui.module.B6HSvFaK1761100244891.js";import"./global.CFybmx-G1761100244891.js";/* empty css                                                              */import{_ as s}from"./line2RoundedRect.vue_vue_type_script_setup_true_lang.B9bUwtmq1761100244891.js";import{_ as i}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.C8G69FYg1761100244891.js";import{P as t}from"./tweakpane.CqZAnw7f1761100244891.js";import{d as r,r as o,g as a,b as n,o as p,e as m,I as l,h as d,u,m as j,a9 as _,aa as c}from"./@vue.CKlgtJke1761100244891.js";import{$ as g,ad as f}from"./three.DvmzhRS91761100244891.js";import"./vue-router.AUgVvTqV1761100244891.js";import"./lodash-es.DWe8oqPO1761100244891.js";import"./pinia.-nSLzXOT1761100244891.js";import"./@qlin.y-0Z8WnK1761100244891.js";import"./@babel.BPq7uOAK1761100244891.js";import"./@floating-ui.Bhq4ibgf1761100244891.js";import"./@juggle.Vc7cP4_P1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./color.DSPNiGxi1761100244891.js";import"./color-string.Bn2Vqey71761100244891.js";import"./color-name.gyPnsvCn1761100244891.js";import"./lodash.DPxB_j171761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./ReflectorMaterial.DlkhVbJT1761100244891.js";import"./dither.glsl.tNAdkJUa1761100244891.js";import"./Reflector.C-cnab8L1761100244891.js";import"./OimoPhysicsBuffer.RP9_cA631761100244891.js";import"./oimophysics.CfVKSiAm1761100244891.js";import"./utils.CNife3_q1761100244891.js";const h=r({__name:"line2RoundedRectPage",setup(r){const h={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:f,toneMappingExposure:1,shadowMapType:g},v=o({reflectivity:.941,mirror:113.25,mixStrength:12,showGridHelper:!1,scale:1}),b=o({linewidth:10,color:"#ffff00",width:2,height:6,radius:.3,cornerSegments:6}),w=new t({title:"参数",expanded:!0});return w.addBinding(b,"linewidth",{label:"线条宽度",step:.1,min:0,max:20}),w.addBinding(b,"color",{label:"线条颜色"}),w.addBinding(b,"width",{label:"宽",step:.1,min:.1,max:10}),w.addBinding(b,"height",{label:"长",step:.1,min:.1,max:10}),w.addBinding(b,"radius",{label:"角度",step:.001,min:.001,max:1}),w.addBinding(b,"cornerSegments",{label:"平滑",step:.1,min:.1,max:6}),(t,r)=>{const o=a("TresCanvas");return p(),n(o,_(c(h)),{default:m(()=>[r[0]||(r[0]=l("TresPerspectiveCamera",{position:[-5,3,5],fov:50,near:.1,far:1e4},null,-1)),d(u(e)),r[1]||(r[1]=l("TresAmbientLight",null,null,-1)),d(u(s),j({position:[0,.5,0]},b),null,16),d(i,_(c(v)),null,16)]),_:1},16)}}});export{h as default};
