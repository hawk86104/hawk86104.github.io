import{a1 as l,a2 as c,aq as p,r as m,o as r,x as t,E as o,a as n,L as _,ac as d,ag as f,aa as u,ab as h,Y as e}from"./vendor.ydO6dH7Z1712722105506.js";import{_ as T}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.Fm-ugc-A1712722105506.js";import"./dither.glsl.y2WXw1t-1712722105506.js";import"./OimoPhysicsBuffer.DLNh8Qr91712722105506.js";const g=e("TresPerspectiveCamera",{position:[-15,15,-15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),v=e("TresAmbientLight",{intensity:10},null,-1),x=e("TresMesh",{position:[3,1,0]},[e("TresBoxGeometry",{args:[2,2,2]}),e("TresMeshNormalMaterial",{wireframe:!0})],-1),C=e("TresMesh",{position:[0,2,4]},[e("TresBoxGeometry",{args:[1,1,1]}),e("TresMeshNormalMaterial")],-1),P=l({__name:"reflectorDUDV",setup(w){const a=c({reflectivity:2.6,showGridHelper:!0}),s=new p({title:"镜面参数",expanded:!0});return s.addBinding(a,"reflectivity",{label:"反射率",min:0,max:10,step:.1}),s.addBinding(a,"showGridHelper",{label:"显示网格"}),(B,M)=>{const i=m("TresCanvas");return r(),t(i,{clearColor:"#201919","window-size":""},{default:o(()=>[g,n(_(d),{enableDamping:""}),v,x,C,(r(),t(f,null,{default:o(()=>[n(T,u(h(a)),null,16)]),_:1}))]),_:1})}}});export{P as default};
