import{c1 as n,ak as o,am as t,C as e,aX as r,c as a}from"./three.sQDbNBks1741583630766.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.ZmhvXhx31741583630766.js";import{d as u,b as d,w as m,e as f,o as p,H as h,j as g,u as v,g as w,N as M,aj as P,ak as b,F as C}from"./@vue.NRI7TcgI1741583630766.js";import"./postprocessing.7Yq_IN-m1741583630766.js";import"./@vueuse.Z9_WSajh1741583630766.js";const y=j;!function(n,o){const t=j,e=T();for(;;)try{if(417227===parseInt(t(364))/1+-parseInt(t(402))/2*(-parseInt(t(357))/3)+parseInt(t(414))/4+parseInt(t(409))/5*(-parseInt(t(410))/6)+parseInt(t(407))/7*(-parseInt(t(368))/8)+-parseInt(t(408))/9+parseInt(t(399))/10)break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const x=function(){let n=!0;return function(o,t){const e=n?function(){if(t){const n=t[j(351)](o,arguments);return t=null,n}}:function(){};return n=!1,e}}();!function(){x(this,(function(){const n=j,o=new RegExp(n(358)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=_(n(379));o[n(404)](e+n(388))&&t[n(404)](e+n(367))?_():e("0")}))()}();const z=function(){let n=!0;return function(o,t){const e=n?function(){if(t){const n=t[j(351)](o,arguments);return t=null,n}}:function(){};return n=!1,e}}();function j(n,o){const t=T();return(j=function(n,o){return t[n-=350]})(n,o)}z(void 0,(function(){const n=j;let o;try{o=Function("return (function() "+n(377)+");")()}catch(r){o=window}const t=o[n(362)]=o.console||{},e=[n(371),n(356),n(372),n(384),n(366),n(369),n(352)];for(let a=0;a<e.length;a++){const o=z[n(365)][n(382)][n(398)](z),r=e[a],s=t[r]||o;o[n(387)]=z[n(398)](z),o[n(376)]=s.toString.bind(s),t[r]=o}}))();const I=[y(381),y(385),y(389),y(416)],S=u({__name:y(360),setup(u){const x=y,z={clearColor:x(363),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:o,toneMapping:t,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:"#1b3984"},S=new e(j[x(353)]),T=new e(j[x(375)]),_=new Float32Array(3*j[x(383)]),A=new Float32Array(3*j[x(383)]),F=new Float32Array(j[x(383)]),k=new Float32Array(3*j[x(383)]);for(let n=0;n<j[x(383)];n++){const o=3*n,t=Math[x(355)]()*j[x(395)],e=n%j[x(374)]*Math.PI*2/j[x(374)];_[o]=Math[x(406)](e)*t,_[o+1]=0,_[o+2]=Math[x(401)](e)*t;const r=Math[x(355)]()**j[x(394)]*(Math[x(355)]()<.5?-1:1),a=Math[x(355)]()**j.randomnessPower*(Math[x(355)]()<.5?-1:1),s=Math[x(355)]()**j[x(394)]*(Math.random()<.5?-1:1);k[o]=r,k[o+1]=a,k[o+2]=s;const i=S[x(370)]();i.lerp(T,t/j[x(395)]),A[o+0]=i.r,A[o+1]=i.g,A[o+2]=i.b,F[n]=Math.random()}const R={transparent:!0,depthWrite:!1,blending:r,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[x(373)]}}};const O=d(null),{onLoop:Z}=s();Z((({elapsed:n})=>{const o=x;O[o(413)]&&(O[o(413)][o(350)][o(392)][o(400)][o(413)]=n)}));const{count:E,size:K,radius:G,branches:V,spin:L,randomness:N,randomnessPower:W,insideColor:$,outsideColor:q}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(391),outsideColor:x(390)});return m([E[x(413)],K.value,G[x(413)],V[x(413)],L[x(413)],N[x(413)],W[x(413)],$[x(413)],q.value],(n=>{const o=x;n[o(396)](((n,t)=>{const e=o;j[Object[e(412)](j)[t]]=n[e(413)]})),function(){const n=x;if(O[n(413)]){const o=new e(j.insideColor),t=new e(j.outsideColor),r=new Float32Array(3*j[n(383)]),s=new Float32Array(3*j[n(383)]),i=new Float32Array(j.count),c=new Float32Array(3*j.count);for(let e=0;e<j[n(383)];e++){const a=3*e,l=Math.random()*j[n(395)],u=e%j[n(374)]*Math.PI*2/j[n(374)];r[a]=Math[n(406)](u)*l,r[a+1]=0,r[a+2]=Math[n(401)](u)*l;const d=Math.random()**j.randomnessPower*(Math[n(355)]()<.5?-1:1),m=Math[n(355)]()**j[n(394)]*(Math[n(355)]()<.5?-1:1),f=Math[n(355)]()**j[n(394)]*(Math[n(355)]()<.5?-1:1);c[a]=d,c[a+1]=m,c[a+2]=f;const p=o[n(370)]();p.lerp(t,l/j[n(395)]),s[a+0]=p.r,s[a+1]=p.g,s[a+2]=p.b,i[e]=Math.random()}O[n(413)].geometry[n(386)]("position",new a(r,3)),O[n(413)].geometry.setAttribute(n(397),new a(c,3)),O[n(413)][n(361)][n(386)]("color",new a(s,3)),O[n(413)].geometry[n(386)]("aScale",new a(i,1))}}()})),(n,o)=>{const t=x,e=f("TresCanvas");return p(),h(C,null,[g(v(c)),g(e,P(b(z)),{default:w((()=>[o[0]||(o[0]=M(t(403),{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:t(378),ref:O},[M(t(411),{position:[v(_),3],"a-scale":[v(F),1],color:[v(A),3],"a-randomness":[v(k),3]},null,8,I),M(t(354),P(b(R)),null,16)],512),g(v(l))])),_:1},16)],64)}}});function T(){const n=["aRandomness","bind","9775340ZbVIjG","uTime","sin","466082wAMLNg","TresPerspectiveCamera","test","string","cos","364KPKZhh","1030410GYZpAo","2552395FwrqId","6QjkiMV","TresBufferGeometry","keys","value","420980RcOEfe","action","a-randomness","material","apply","trace","insideColor","TresShaderMaterial","random","warn","6WuzUjk","function *\\( *\\)","call","galaxy","geometry","console","black","294447PTCmor","constructor","exception","input","123248hKpVao","table","clone","log","info","size","branches","outsideColor","toString",'{}.constructor("return this")( )',"bufferRef","init","debu","position","prototype","count","error","a-scale","setAttribute","__proto__","chain","color","#1b3984","#b5f28d","uniforms","counter","randomnessPower","radius","forEach"];return(T=function(){return n})()}function _(n){function o(n){const t=j;if(typeof n===t(405))return function(n){}[t(365)]("while (true) {}")[t(351)](t(393));1!==(""+n/n).length||n%20==0?function(){return!0}[t(365)]("debugger")[t(359)](t(415)):function(){return!1}[t(365)](t(380)+"gger")[t(351)]("stateObject"),o(++n)}try{if(n)return o;o(0)}catch(t){}}export{S as default};
