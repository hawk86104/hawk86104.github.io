import{t,_ as n,V as e,C as o,as as r,ai as i}from"./three.jaHX2_hY1736406294003.js";import{e as a,b as s,U as c,c as l}from"./@tresjs.AACxYGk_1736406294003.js";import"./index.-KUQ5eUx1736406294003.js";import{c as u}from"./simplex-noise.jB2HxhHB1736406294003.js";import{C as f}from"./index.kRzWk3zA1736406294003.js";import{d as p,a4 as h,o as m,D as v,J as d,u as g,r as x,f as w,g as y,j as b,aj as _,ak as M,al as z}from"./@vue.yG49nQHr1736406294003.js";import{_ as j}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.s_SDik-x1736406294003.js";import"./@vueuse.d_orRt1V1736406294003.js";import"./lamina.jHLAKZVu1736406294003.js";import"./glsl-tokenizer.GFkJRHQ11736406294003.js";import"./@amap.wPPLvrz51736406294003.js";import"./glsl-token-descope.uYKsnziz1736406294003.js";import"./glsl-token-depth.DhzLf7B11736406294003.js";import"./glsl-token-scope.7SIq8OKw1736406294003.js";import"./glsl-token-properties.e2wfrj_M1736406294003.js";import"./glsl-token-assignments.U8wHn4D51736406294003.js";import"./glsl-token-string.CHEun0sA1736406294003.js";import"./glsl-token-functions.7phpwP3H1736406294003.js";import"./object-hash.rVwfFGxE1736406294003.js";import"./jszip.PTcwYbUP1736406294003.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.U2EEcDGh1736406294003.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.ZFNI0Ceu1736406294003.js";import"./three-stdlib.BOoafp_E1736406294003.js";import"./@pmndrs.4D3EB6G21736406294003.js";import"./utils.vhfCtITU1736406294003.js";const I=k;!function(t,n){const e=k,o=T();for(;;)try{if(958378===parseInt(e(302))/1*(parseInt(e(294))/2)+parseInt(e(289))/3*(parseInt(e(246))/4)+-parseInt(e(276))/5+parseInt(e(279))/6+parseInt(e(251))/7+-parseInt(e(269))/8*(-parseInt(e(270))/9)+-parseInt(e(248))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(250)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){A(this,(function(){const t=k,n=new RegExp(t(314)),e=new RegExp(t(311),"i"),o=E("init");n[t(263)](o+t(278))&&e.test(o+t(243))?E():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(250)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(t,n){const e=T();return(k=function(t,n){return e[t-=238]})(t,n)}C(void 0,(function(){const t=k;let n;try{n=Function(t(265)+t(260)+");")()}catch(r){n=window}const e=n.console=n[t(303)]||{},o=[t(273),t(247),t(304),t(268),t(291),"table",t(297)];for(let i=0;i<o[t(315)];i++){const n=C[t(244)][t(267)][t(293)](C),r=o[i],a=e[r]||n;n[t(307)]=C[t(293)](C),n.toString=a.toString[t(293)](a),e[r]=n}}))();const S=[I(290)],R=["index","attributes-position",I(242),"attributes-offset",I(286),I(306),I(310),I(301)],D=[I(252)],F=["side"];function T(){const t=["error","8LxpYUW","8000865Vsskhi","Color","Vector4","log","stretchesF32","side","315095QFkmZv","random","chain","9415884FPwGZV","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","offsetsF32","push","width","index","debu","attributes-orientation","#000f00","computeVertexNormals","1677RpgzTz","material","exception","map","bind","24IRWFgb","array","InstancedBufferAttribute","trace","TresMesh","Vector3","TresMeshStandardMaterial","attributes-halfRootAngleCos","98851ySALDI","console","info","TresInstancedBufferGeometry","attributes-stretch","__proto__","translate","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","attributes-halfRootAngleSin","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","needsUpdate","lookAt","function *\\( *\\)","length","set","TresGroup","gger","cos","halfRootAngleSinF32","attributes-uv","input","constructor","while (true) {}","11792kzkiVy","warn","49204280KcNvpu","sin","apply","4545674MTYVQX","geometry","normalize","instances","alphaMap","attributes","PlaneGeometry","counter","uniforms",'{}.constructor("return this")( )',"string","value","test","position","return (function() ","DoubleSide","prototype"];return(T=function(){return t})()}const L=p({__name:"grass",props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const c=I;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),w=i,y=u(Math[c(277)]);function b(t,e){const o=c,r=t.x*e.w+t.y*e.z-t.z*e.y+t.w*e.x,i=-t.x*e.z+t.y*e.w+t.z*e.x+t.w*e.y,a=t.x*e.y-t.y*e.x+t.z*e.w+t.w*e.z,s=-t.x*e.x-t.y*e.y-t.z*e.z+t.w*e.w;return new(n[o(272)])(r,i,a,s)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const M=function(t,e){const o=c,i=[],a=[],s=[],l=[],u=[];let f=new(n[o(272)]),p=new r;const h=-.25;for(let r=0;r<t;r++){const c=Math.random()*e-e/2,m=Math[o(277)]()*e-e/2,v=_(c,m);i[o(282)](c,v,m);let d=Math.PI-Math[o(277)]()*(2*Math.PI);l[o(282)](Math[o(249)](.5*d)),u[o(282)](Math[o(240)](.5*d));let g=new(n[o(299)])(0,1,0),x=g.x*Math[o(249)](d/2),w=g.y*Math[o(249)](d/2),y=g.z*Math[o(249)](d/2),M=Math[o(240)](d/2);f[o(316)](x,w,y,M)[o(253)](),d=.5*Math[o(277)]()+h,g=new(n[o(299)])(1,0,0),x=g.x*Math[o(249)](d/2),w=g.y*Math[o(249)](d/2),y=g.z*Math.sin(d/2),M=Math[o(240)](d/2),p[o(316)](x,w,y,M)[o(253)](),f=b(f,p),d=.5*Math[o(277)]()+h,g=new(n[o(299)])(0,0,1),x=g.x*Math[o(249)](d/2),w=g.y*Math[o(249)](d/2),y=g.z*Math[o(249)](d/2),M=Math[o(240)](d/2),p[o(316)](x,w,y,M)[o(253)](),f=b(f,p),a.push(f.x,f.y,f.z,f.w),r<t/3?s[o(282)](1.8*Math[o(277)]()):s[o(282)](Math[o(277)]())}return{offsetsF32:new(n[o(296)])(new Float32Array(i),3),orientationsF32:new(n[o(296)])(new Float32Array(a),4),stretchesF32:new(n[o(296)])(new Float32Array(s),1),halfRootAngleCosF32:new(n[o(296)])(new Float32Array(u),1),halfRootAngleSinF32:new(n[o(296)])(new Float32Array(l),1)}}(w[c(254)],w[c(283)]),z=new t(w.bW,w.bH,1,w.joints)[c(308)](0,w.bH/2,0),j=new(n[c(257)])(w.width,w[c(283)],32,32);j[c(313)](new e(0,1,0));const A=j.attributes[c(264)];for(let t=0;t<A[c(295)][c(315)];t+=3)A[c(295)][t+1]=_(A[c(295)][t],A[c(295)][t+2]);j[c(256)][c(264)][c(312)]=!0,j[c(288)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new o(.3,.9,0).convertSRGBToLinear(),bottomColor:new(n[c(271)])(0,.2,0).convertSRGBToLinear()},c(309),c(280),(t=>{const e=c;t[e(275)]=n[e(266)]})));C[c(292)]=x[c(292)],C[c(255)]=x[c(255)],C.toneMapped=!1;const{onLoop:k}=a();return k((({elapsed:t})=>{const n=c;C[n(259)].time[n(262)]=t/4})),(t,e)=>{const o=c;return m(),v(o(238),null,[d(o(298),{material:g(C)},[d(o(305),{index:g(z)[o(284)],"attributes-position":g(z)[o(256)][o(264)],"attributes-uv":g(z)[o(256)].uv,"attributes-offset":g(M)[o(281)],"attributes-orientation":g(M).orientationsF32,"attributes-stretch":g(M)[o(274)],"attributes-halfRootAngleSin":g(M)[o(241)],"attributes-halfRootAngleCos":g(M).halfRootAngleCosF32},null,8,R)],8,S),d(o(298),{position:[0,0,0],geometry:g(j)},[d(o(300),{color:o(287),side:n[o(266)]},null,8,F)],8,D)])}}});function E(t){function n(t){const e=k;if(typeof t===e(261))return function(t){}[e(244)](e(245))[e(250)](e(258));1!==(""+t/t).length||t%20==0?function(){return!0}[e(244)](e(285)+e(239)).call("action"):function(){return!1}[e(244)]("debu"+e(239))[e(250)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const O=B;!function(t,n){const e=B,o=V();for(;;)try{if(953701===parseInt(e(107))/1+-parseInt(e(119))/2*(-parseInt(e(104))/3)+-parseInt(e(138))/4*(-parseInt(e(109))/5)+parseInt(e(106))/6*(-parseInt(e(113))/7)+parseInt(e(128))/8+-parseInt(e(103))/9*(-parseInt(e(116))/10)+-parseInt(e(110))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[B(101)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){P(this,(function(){const t=B,n=new RegExp(t(137)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=G(t(139));n[t(130)](o+t(105))&&e[t(130)](o+t(120))?G():o("0")}))()}();const U=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[B(101)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function V(){const t=["15tRxKVW","chain","2286HeUTMI","50956QaMiKl","debu","95CLDZAm","16594666wlhxZh","error","__proto__","11697NpfufK","warn","TresPerspectiveCamera","40cvpLLT","log","console","631102gEdYJd","input","string","bind","while (true) {}","call","action","length","return (function() ","7915296DrxuJw","info","test","grass","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","counter","gger","constructor","trace","function *\\( *\\)","88052DlwfEU","init","apply","toString","140823knObTt"];return(V=function(){return t})()}function B(t,n){const e=V();return(B=function(t,n){return e[t-=101]})(t,n)}U(void 0,(function(){const t=B;let n;try{n=Function(t(127)+'{}.constructor("return this")( ));')()}catch(r){n=window}const e=n.console=n[t(118)]||{},o=[t(117),t(114),t(129),t(111),"exception","table",t(136)];for(let i=0;i<o[t(126)];i++){const n=U.constructor.prototype[t(122)](U),r=o[i],a=e[r]||n;n[t(112)]=U[t(122)](U),n[t(102)]=a.toString[t(122)](a),e[r]=n}}))();const H=p({__name:O(131),setup(t){const n=x({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=B;return m(),w(g(l),_(M(n)),{default:y((()=>[o[0]||(o[0]=d(r(115),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),b(g(c),_(M(e)),null,16),(m(),w(z,null,{default:y((()=>[b(L)])),_:1})),(m(),w(z,null,{default:y((()=>[b(g(j),{texture:r(132)})])),_:1}))])),_:1},16)}}});function G(t){function n(t){const e=B;if(typeof t===e(121))return function(t){}.constructor(e(123))[e(101)](e(133));1!==(""+t/t).length||t%20==0?function(){return!0}[e(135)](e(108)+e(134))[e(124)](e(125)):function(){return!1}.constructor(e(108)+e(134))[e(101)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{H as default};
