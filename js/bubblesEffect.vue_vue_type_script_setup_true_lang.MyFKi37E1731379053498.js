import{_ as n,bY as t,cG as e,h as o}from"./three.bXjbKLxC1731379053498.js";import{m as i,e as r,b as a}from"./@tresjs.bLKO3xyw1731379053498.js";import{d as l,b as s,a6 as u,a3 as c,o as f,D as p,J as m,aj as g,ak as b,u as v}from"./@vue.-THQH3GC1731379053498.js";const y=h;!function(n,t){const e=h,o=x();for(;;)try{if(571774===parseInt(e(198))/1*(-parseInt(e(203))/2)+-parseInt(e(237))/3*(-parseInt(e(202))/4)+parseInt(e(209))/5+parseInt(e(193))/6*(-parseInt(e(225))/7)+parseInt(e(197))/8+-parseInt(e(239))/9*(parseInt(e(230))/10)+-parseInt(e(236))/11*(-parseInt(e(220))/12))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const d=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(196)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function h(n,t){const e=x();return(h=function(n,t){return e[n-=186]})(n,t)}!function(){d(this,(function(){const n=h,t=new RegExp(n(205)),e=new RegExp(n(194),"i"),o=z(n(241));t[n(244)](o+n(218))&&e[n(244)](o+"input")?z():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(196)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();w(void 0,(function(){const n=h;let t;try{t=Function(n(208)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(211)]=t[n(211)]||{},o=["log",n(224),n(222),n(229),"exception",n(187),n(188)];for(let r=0;r<o.length;r++){const t=w[n(195)][n(212)].bind(w),i=o[r],a=e[i]||t;t.__proto__=w[n(213)](w),t[n(217)]=a.toString[n(213)](a),e[i]=t}}))();const _=l({__name:y(227),props:{model:{},color:{default:y(186)},opacity:{default:1}},async setup(e){const o=y;let l,v;const d=e,h=s(),w=[];d.model[o(242)]((t=>{const e=o;t instanceof n[e(240)]&&(t[e(190)][e(206)]=!0,w[e(189)](t.geometry))}));const _=([l,v]=u((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),l=await l,v(),l),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(192)])(d[o(231)])},lightningTexture:{type:"t",value:_[o(215)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d.opacity}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(235)],blending:n[o(221)],depthWrite:!1};z[o(223)][o(210)][o(243)]=Math[o(216)](5);const{camera:x}=i(),{onLoop:S}=r();return S((({delta:n})=>{const t=o;x[t(243)][t(234)]&&h[t(243)]&&(z[t(223)][t(191)][t(243)]+=n)})),c((()=>{const e=o;h[e(243)]&&(h.value[e(190)][e(214)](),h[e(243)].geometry=t(w)),d.color&&(z[e(223)][e(232)][e(243)]=new(n[e(192)])(d.color)),d[e(207)]&&(z[e(223)].uOpacity.value=d[e(207)])})),(n,t)=>{const e=o;return f(),p("TresMesh",{ref_key:e(245),ref:h},[t[0]||(t[0]=m(e(199),null,null,-1)),m(e(233),g(b(z)),null,16)],512)}}});function z(n){function t(n){const e=h;if(typeof n===e(246))return function(n){}[e(195)]("while (true) {}")[e(196)](e(238));1!==(""+n/n)[e(204)]||n%20==0?function(){return!0}[e(195)](e(228)+e(219))[e(226)](e(200)):function(){return!1}[e(195)](e(228)+e(219))[e(196)](e(201)),t(++n)}try{if(n)return t;t(0)}catch(e){}}function x(){const n=["debu","error","10YlqZhe","color","glowColor","TresShaderMaterial","position","DoubleSide","11OOqcID","12801WGQQDH","counter","3495249kOwzTg","Mesh","init","traverse","value","test","TresMeshRef","string","#84ccff","table","trace","push","geometry","uTime","Color","8748pNblQl","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor","apply","3025968dFQEAt","1008sdlzuP","TresBufferGeometry","action","stateObject","124JKCfPJ","556mlzyty","length","function *\\( *\\)","verticesNeedUpdate","opacity","return (function() ","4167465zUisvb","offsetY","console","prototype","bind","dispose","map","sin","toString","chain","gger","2027868uAYFeT","AdditiveBlending","info","uniforms","warn","1309cvDBoi","call","xRayEffect"];return(x=function(){return n})()}const S=C;function P(){const n=["function *\\( *\\)","model","counter","Mesh","900684TLkrel","length","AdditiveBlending","includes","uSlowTime","trace","toString","121835SAaEMS","log","test","5128BmGUCw","#FFF","uTime","gger","bubbles","material","134570aYNAEI","2068086SwnvoZ","value","Color","DoubleSide","bind",'{}.constructor("return this")( )',"TresPoints","console","init","input","randFloat","amigdala","geometry","table","setAttribute","bubblesEffect","constructor","chain","size","3632660gvIHdt","position","randInt","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","analitic","MathUtils","exception","name","attributes","18xGcygz","prototype","993FUbYvD","Float32BufferAttribute","afective","ShaderMaterial","debu","traverse","7gUxbNn","uniforms","array","call","3037432mhQYnK","TresShaderMaterial","episodic","opacity","cerebellum","warn","BufferGeometryRef","apply","glowColor","TresBufferGeometry","while (true) {}","color","mergeGeometries","action","string","stateObject","push"];return(P=function(){return n})()}!function(n,t){const e=C,o=P();for(;;)try{if(628593===-parseInt(e(479))/1+parseInt(e(463))/2+parseInt(e(510))/3*(-parseInt(e(473))/4)+-parseInt(e(470))/5+-parseInt(e(480))/6+parseInt(e(516))/7*(parseInt(e(520))/8)+-parseInt(e(508))/9*(-parseInt(e(499))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const T=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(527)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){T(this,(function(){const n=C,t=new RegExp(n(459)),e=new RegExp(n(502),"i"),o=F(n(488));t[n(472)](o+n(497))&&e.test(o+n(489))?F():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(527)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function C(n,t){const e=P();return(C=function(n,t){return e[n-=459]})(n,t)}I(void 0,(function(){const n=C;let t;try{t=Function("return (function() "+n(485)+");")()}catch(i){t=window}const e=t[n(487)]=t[n(487)]||{},o=[n(471),n(525),"info","error",n(505),n(493),n(468)];for(let r=0;r<o[n(464)];r++){const t=I[n(496)][n(509)][n(484)](I),i=o[r],a=e[i]||t;t.__proto__=I[n(484)](I),t[n(469)]=a.toString[n(484)](a),e[i]=t}}))();const M=l({__name:S(495),props:{model:{},color:{default:S(474)},opacity:{default:1}},setup(t){const i=S,a=t,l=[i(512),"semantic",i(522),"process",i(491),"brainstem","bridge",i(524),i(503)],u={};a[i(460)][i(515)]((t=>{const o=i;t instanceof n[o(462)]&&l.map((n=>{const i=o;if(t[i(506)][i(466)](n)){if(u[n]){const o=[u[n],t[i(492)]];return u[n]=e[i(532)](o),u}return u[n]=t[i(492)]}return[]}))}));const y=s(),d=new(n[i(513)])({uniforms:{glowColor:{type:"c",value:new(n[i(482)])(a[i(531)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:a.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[i(465)],side:n[i(483)],depthTest:!1,vertexColors:!1,transparent:!0});c((()=>{y[i(481)]&&(()=>{const t=i,e=[],r=[],a=[],s=[];for(let i=0;i<2e4-3*l.length;i+=1){const c=n[t(504)][t(501)](0,l[t(464)]-1),f=l[c],p=u[f].attributes.position[t(518)][3*i+0]||0,m=u[f][t(507)][t(500)][t(518)][3*i+1]||0,g=u[f].attributes[t(500)][t(518)][3*i+2]||0;if(r[t(536)](p,m,g),e[i]=n[t(504)][t(490)](10,20),i%100==0){const e=n[t(504)][t(501)](100,250)+m;s[t(536)](p,e,g,1)}else s.push(p,m,g,0);a[2*i+0]=o[t(490)](.5,1.5),a[2*i+1]=2.5}y[t(481)][t(494)]("aDelayDuration",new(n[t(511)])(a,2)),y[t(481)].setAttribute(t(477),new(n[t(511)])(s,4)),y[t(481)][t(494)](t(500),new(n[t(511)])(r,3)),y.value[t(494)](t(531),new(n[t(511)])([],3)),y.value[t(494)](t(498),new(n[t(511)])(e,1)),y[t(481)].computeBoundingSphere()})()}));const h=s(),{onLoop:w}=r();return w((({delta:t})=>{const e=i;h[e(481)]&&(h.value[e(478)][e(517)][e(475)][e(481)]+=.05,h[e(481)].material[e(517)][e(467)][e(481)]+=1/400),a[e(531)]&&(d[e(517)][e(528)][e(481)]=new(n[e(482)])(a.color)),a.opacity&&(d.uniforms.uOpacity[e(481)]=a[e(523)])})),(n,t)=>{const e=i;return f(),p(e(486),{ref_key:"TresMeshRef",ref:h},[m(e(529),{ref_key:e(526),ref:y},null,512),m(e(521),g(b(v(d))),null,16)],512)}}});function F(n){function t(n){const e=C;if(typeof n===e(534))return function(n){}[e(496)](e(530))[e(527)](e(461));1!==(""+n/n).length||n%20==0?function(){return!0}[e(496)](e(514)+e(476))[e(519)](e(533)):function(){return!1}[e(496)](e(514)+"gger")[e(527)](e(535)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_,M as a};
