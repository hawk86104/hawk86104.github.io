import{u as t,_ as o,a as n}from"./mergeTres.VuMR8yr_1731462043013.js";import{l as r}from"./utils.cFc4kGHg1731462043013.js";import{e}from"./@tresjs.xlnLF3O61731462043013.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-THQH3GC1731462043013.js";import{_ as C}from"./@fesjs.uG2EzMwn1731462043013.js";import"./@amap.r7GlLHCm1731462043013.js";import"./pinia.TsQ0LDHQ1731462043013.js";import"./vue-demi.C4xddsk91731462043013.js";import"./three.wKRaqyB-1731462043013.js";import"./three-mesh-bvh.KZ7d0h7V1731462043013.js";import"./@vueuse.W4jVx8WA1731462043013.js";import"./vue-router.9VsVDPG11731462043013.js";import"./lodash-es.kYt-_xTG1731462043013.js";import"./@qlin.yHhFDldE1731462043013.js";import"./@floating-ui.BPbuo5Gx1731462043013.js";import"./@juggle.7yjBMqoW1731462043013.js";const y=w;!function(t,o){const n=w,r=S();for(;;)try{if(733041===parseInt(n(321))/1+parseInt(n(330))/2+-parseInt(n(350))/3+parseInt(n(360))/4*(-parseInt(n(347))/5)+parseInt(n(346))/6+parseInt(n(345))/7*(-parseInt(n(315))/8)+parseInt(n(334))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function w(t,o){const n=S();return(w=function(t,o){return n[t-=304]})(t,o)}!function(){x(this,(function(){const t=w,o=new RegExp(t(328)),n=new RegExp(t(320),"i"),r=z(t(313));o.test(r+t(364))&&n[t(325)](r+"input")?z():r("0")}))()}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[w(333)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();b(void 0,(function(){const t=w;let o;try{o=Function(t(354)+t(311)+");")()}catch(e){o=window}const n=o[t(327)]=o.console||{},r=["log",t(312),t(349),t(363),t(335),"table",t(359)];for(let a=0;a<r[t(319)];a++){const o=b[t(341)].prototype[t(352)](b),e=r[a],i=n[e]||o;o[t(322)]=b[t(352)](b),o[t(339)]=i[t(339)][t(352)](i),n[e]=o}}))();const I=[y(338),y(307),y(308)];function S(){const t=["76020QSjcWz","string","uniforms","apply","18409581Dbsdoj","exception","value","cameraState","position","toString","gger","constructor","near","buildings","positionArray","6024151tLfIFb","6142782mbCneO","655fozYTz","debu","info","2642454gJFVVI","atan","bind","TresShaderMaterial","return (function() ","customCoords","geometry","lngLatToCoord","tbgRef","trace","31896ZOHEKd","buildingModels","action","error","chain","stateObject","u_near","far","counter","faceUv","normal","exp","u_far",'{}.constructor("return this")( )',"warn","init","push","8SFGhBP","u_zoom","getZoom","TresGroup","length","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","411730XqXYuT","__proto__","uvArray","mapHandle","test","TresBufferGeometry","console","function *\\( *\\)","call"];return(S=function(){return t})()}const j=a({__name:y(361),setup(o){const n=t(),a=t=>{const o=w;for(let r=0;r<t[o(319)];r+=3){const e=[t[r],t[r+1]],a=n[o(324)].customCoords[o(357)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[w(337)]&&(async()=>{const t=w,o=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(343));for(let n=0;n<o[t(319)];n++){const r=o[n];a(r[t(356)]);const e=new Float32Array(r[t(356)]),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(356)][t(319)]);d[t(314)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=w;n[t(337)]&&(g[t(332)][t(316)][t(336)]=n[t(324)][t(317)](),g[t(332)][t(304)][t(336)]=n[t(337)][t(342)],g.uniforms[t(310)][t(336)]=n.cameraState[t(305)])})),(t,o)=>{const n=w;return c(),s(n(318),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s("TresMesh",{key:""+o},[p(r(326),{ref_for:!0,ref:r(358),position:[t[r(344)],3],faceUv:[t[r(323)],2],normal:[t.normalArray,3]},null,8,I),p(r(353),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=w;if(typeof t===n(331))return function(t){}.constructor("while (true) {}").apply(n(306));1!==(""+t/t)[n(319)]||t%20==0?function(){return!0}.constructor(n(348)+"gger")[n(329)](n(362)):function(){return!1}[n(341)]("debu"+n(340))[n(333)](n(365)),o(++t)}try{if(t)return o;o(0)}catch(n){}}!function(t,o){const n=R,r=A();for(;;)try{if(661246===-parseInt(n(261))/1*(-parseInt(n(252))/2)+-parseInt(n(240))/3+parseInt(n(233))/4*(-parseInt(n(238))/5)+parseInt(n(224))/6*(-parseInt(n(232))/7)+-parseInt(n(260))/8+-parseInt(n(230))/9+-parseInt(n(258))/10*(-parseInt(n(247))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[R(246)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){P(this,(function(){const t=R,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(234),"i"),r=U(t(241));o.test(r+"chain")&&n[t(239)](r+t(228))?U():r("0")}))()}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[R(246)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();F(void 0,(function(){const t=R,o=function(){const t=R;let o;try{o=Function(t(253)+t(242)+");")()}catch(n){o=window}return o}(),n=o[t(221)]=o[t(221)]||{},r=[t(256),t(231),t(235),t(254),"exception",t(236),"trace"];for(let e=0;e<r[t(257)];e++){const o=F[t(222)][t(250)][t(225)](F),a=r[e],i=n[a]||o;o[t(259)]=F[t(225)](F),o[t(243)]=i[t(243)].bind(i),n[a]=o}}))();function A(){const t=["78JTAbvp","bind","debu","action","input","gger","11884212CJWDlf","warn","497735qCuiki","252ImVUyS","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","info","table","TresPerspectiveCamera","21395UMbzvA","test","3120141TtJWnR","init",'{}.constructor("return this")( )',"toString","darkblue","TresCanvas","apply","38034733CublDe","string","tcRef","prototype","stateObject","2HDKHco","return (function() ","error","call","log","length","10JKKPhY","__proto__","424952IkgBXs","811119frPHsc","console","constructor","counter"];return(A=function(){return t})()}function R(t,o){const n=A();return(R=function(t,o){return n[t-=221]})(t,o)}function U(t){function o(t){const n=R;if(typeof t===n(248))return function(t){}[n(222)]("while (true) {}").apply(n(223));1!==(""+t/t).length||t%20==0?function(){return!0}[n(222)](n(226)+n(229))[n(255)](n(227)):function(){return!1}[n(222)](n(226)+n(229))[n(246)](n(251)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const D=C(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=R,l=d(i(245));return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(244)}),g(l,v({id:"tresCanvas",ref:i(249)},e),{default:m((()=>[a[0]||(a[0]=p(i(237),{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p("TresAmbientLight",{intensity:.5},null,-1)),g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{D as default};
