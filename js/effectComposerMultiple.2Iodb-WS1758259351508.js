import{m as e,e as t,a as r}from"./@tresjs.CywMBpUh1758259351508.js";import{cr as a,ct as s,cs as l,a as n,cL as u,cM as o,n as i,cJ as v,cN as d}from"./three.CtgP63ME1758259351508.js";import{d as m,b as c,a2 as T,G as f,o as p,I as x,F as h,h as g,e as w,f as y,j as M,u as _}from"./@vue.pEDXJ_3Z1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";const P=m({__name:"ecLayerMultiple",setup(r){const m=c(),g=c(),w=c(),y=c();T((()=>{m.value&&m.value.layers.set(0),g.value&&g.value.layers.set(1),w.value&&w.value.layers.set(2),y.value&&y.value.layers.set(3)}));const{camera:M,renderer:_,scene:P,sizes:D}=e(),b=.572,S=.51,j=0;let B=null,U=null;let G=null;let k=null;let C=null;T((()=>{D.width.value&&(((e,t,r,u,o)=>{B=new a(e,t),U=new s(r),U.renderToScreen=!1,U.addPass(B);const i=new l(new n(u,o),b,S,j);U.addPass(i)})(P.value,M.value,_.value,D.width.value,D.height.value),(e=>{k=new s(e),k.renderToScreen=!1,k.addPass(B);const t=new o;k.addPass(t)})(_.value),(e=>{G=new s(e),G.renderToScreen=!1,G.addPass(B);const t=new u;G.addPass(t)})(_.value),(e=>{C=new s(e),C.addPass(B);const t=new i({uniforms:{baseTexture:{value:null},bloomTexture:{value:U.renderTarget2.texture},filmTexture:{value:G.renderTarget2.texture},glitchTexture:{value:k.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n\t\t\t\t\t\tuniform sampler2D filmTexture;\n\t\t\t\t\t\tuniform sampler2D glitchTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( \n\t\t\t\t\t\t\t\t\tvec4( 1.0 ) * texture2D( baseTexture, vUv )  + \n\t\t\t\t\t\t\t\t\tvec4( 1.0 ) * texture2D( bloomTexture, vUv ) + \n\t\t\t\t\t\t\t\t\tvec4( 1.0 ) * texture2D( filmTexture, vUv ) + \n\t\t\t\t\t\t\t\t\tvec4( 1.0 ) * texture2D( glitchTexture, vUv ) \n\t\t\t\t\t\t\t\t);\n            }\n        ",defines:{}}),r=new v(t,"baseTexture");r.needsSwap=!0,C.addPass(r);const{width:a,height:l}=e.getDrawingBufferSize(new n),u=new v(d);u.uniforms.resolution.value.set(1/a,1/l),C.addPass(u)})(_.value))}));const{onLoop:N}=t();return N((()=>{U&&C&&M.value&&(_.value.clear(),M.value.layers.set(1),U.render(),M.value.layers.set(2),G.render(),M.value.layers.set(3),k.render(),_.value.clearDepth(),M.value.layers.set(0),C.render(P.value,M.value))})),(e,t)=>(p(),f(h,null,[x("TresMesh",{ref_key:"normalBox",ref:m,position:[3,2,1]},t[0]||(t[0]=[x("TresBoxGeometry",{args:[1,1,1]},null,-1),x("TresMeshNormalMaterial",null,null,-1)]),512),x("TresMesh",{ref_key:"shineBox",ref:g,position:[0,2,-4]},t[1]||(t[1]=[x("TresBoxGeometry",{args:[1,1,1]},null,-1),x("TresMeshNormalMaterial",null,null,-1)]),512),x("TresMesh",{ref_key:"filmBox",ref:w,position:[1,2,3]},t[2]||(t[2]=[x("TresBoxGeometry",{args:[1,1,1]},null,-1),x("TresMeshNormalMaterial",null,null,-1)]),512),x("TresMesh",{ref_key:"glitchSphere",ref:y,position:[-3,2,0]},t[3]||(t[3]=[x("TresSphereGeometry",{args:[.8,32,16]},null,-1),x("TresMeshNormalMaterial",null,null,-1)]),512)],64))}}),D=m({__name:"effectComposerMultiple",setup(e){const t=c();return T((()=>{if(t.value){t.value.context.renderer.value.autoClear=!1}})),(e,a)=>{const s=g("TresCanvas");return p(),w(s,{renderMode:"manual","window-size":"",ref_key:"tcRef",ref:t},{default:y((()=>[a[0]||(a[0]=x("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),a[1]||(a[1]=x("TresAmbientLight",{intensity:1},null,-1)),M(_(r)),a[2]||(a[2]=x("TresGridHelper",{args:[10,10]},null,-1)),M(P)])),_:1},512)}}});export{D as default};
