import{g as E}from"./_commonjsHelpers.5-cIlDoe1718333718672.js";var N=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],ee=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],z=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"],re=N,te=re.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),j=z;j=j.slice().filter(function(n){return!/^(gl\_|texture)/.test(n)});var ae=j.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),ie=pe,ne=N,A=ee,oe=z,le=te,ue=ae,f=999,I=9999,S=0,F=1,V=2,B=3,k=4,b=5,se=6,ge=7,ce=8,R=9,fe=10,U=11,me=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function pe(n){var e=0,u=0,i=f,r,o,a=[],m=[],h=1,s=0,t=0,p=!1,v=!1,g="",M;n=n||{};var _=oe,D=ne;n.version==="300 es"&&(_=ue,D=le);for(var d={},O={},e=0;e<_.length;e++)d[_[e]]=!0;for(var e=0;e<D.length;e++)O[D[e]]=!0;return function(l){return m=[],l!==null?G(l):X()};function c(l){l.length&&m.push({type:me[i],data:l,position:t,line:h,column:s})}function G(l){e=0,l.toString&&(l=l.toString()),g+=l.replace(/\r\n/g,"\n"),M=g.length;for(var T;r=g[e],e<M;){switch(T=e,i){case S:e=K();break;case F:e=H();break;case V:e=L();break;case B:e=Q();break;case k:e=Y();break;case U:e=W();break;case b:e=J();break;case I:e=Z();break;case R:e=$();break;case f:e=q();break}if(T!==e)switch(g[T]){case"\n":s=0,++h;break;default:++s;break}}return u+=e,g=g.slice(e),m}function X(l){return a.length&&c(a.join("")),i=fe,c("(eof)"),m}function q(){return a=a.length?[]:a,o==="/"&&r==="*"?(t=u+e-1,i=S,o=r,e+1):o==="/"&&r==="/"?(t=u+e-1,i=F,o=r,e+1):r==="#"?(i=V,t=u+e,e):/\s/.test(r)?(i=R,t=u+e,e):(p=/\d/.test(r),v=/[^\w_]/.test(r),t=u+e,i=p?k:v?B:I,e)}function $(){return/[^\s]/g.test(r)?(c(a.join("")),i=f,e):(a.push(r),o=r,e+1)}function L(){return(r==="\r"||r==="\n")&&o!=="\\"?(c(a.join("")),i=f,e):(a.push(r),o=r,e+1)}function H(){return L()}function K(){return r==="/"&&o==="*"?(a.push(r),c(a.join("")),i=f,e+1):(a.push(r),o=r,e+1)}function Q(){if(o==="."&&/\d/.test(r))return i=b,e;if(o==="/"&&r==="*")return i=S,e;if(o==="/"&&r==="/")return i=F,e;if(r==="."&&a.length){for(;C(a););return i=b,e}if(r===";"||r===")"||r==="("){if(a.length)for(;C(a););return c(r),i=f,e+1}var l=a.length===2&&r!=="=";if(/[\w_\d\s]/.test(r)||l){for(;C(a););return i=f,e}return a.push(r),o=r,e+1}function C(l){var T=0,w,P;do{if(w=A.indexOf(l.slice(0,l.length+T).join("")),P=A[w],w===-1){if(T--+l.length>0)continue;P=l.slice(0,1).join("")}return c(P),t+=P.length,a=a.slice(P.length),a.length}while(!0)}function W(){return/[^a-fA-F0-9]/.test(r)?(c(a.join("")),i=f,e):(a.push(r),o=r,e+1)}function Y(){return r==="."||/[eE]/.test(r)?(a.push(r),i=b,o=r,e+1):r==="x"&&a.length===1&&a[0]==="0"?(i=U,a.push(r),o=r,e+1):/[^\d]/.test(r)?(c(a.join("")),i=f,e):(a.push(r),o=r,e+1)}function J(){return r==="f"&&(a.push(r),o=r,e+=1),/[eE]/.test(r)||(r==="-"||r==="+")&&/[eE]/.test(o)?(a.push(r),o=r,e+1):/[^\d]/.test(r)?(c(a.join("")),i=f,e):(a.push(r),o=r,e+1)}function Z(){if(/[^\d\w_]/.test(r)){var l=a.join("");return O[l]?i=ce:d[l]?i=ge:i=se,c(a.join("")),i=f,e}return a.push(r),o=r,e+1}}var de=ie,xe=_e;function _e(n,e){var u=de(e),i=[];return i=i.concat(u(n)),i=i.concat(u(null)),i}const Pe=E(xe);var he=ve;function ve(n){for(var e=[],u=0;u<n.length;u++)n[u].type!=="eof"&&e.push(n[u].data);return e.join("")}const be=E(he);var Me=De;function De(n){var e=null,u=null,i=0,r=0,o=0,a=0,m=0,h=[],s,t,p;for(s=0,t;s<n.length;s++)if(p=n[s],p.data==="{"){if(i&&i++||(t=g(s,x(")"),x()),t<0)||(a=t,t=g(t,x("("),x(")")),t<0)||(m=t,t=g(t,y),t<0)||n[t].type!=="ident"||(u=n[t].data,t=g(t,y),t<0))continue;i=1,r=s,e=n[t].data,o=t;var v=g(t,y);switch(n[v]&&n[v].data){case"lowp":case"highp":case"mediump":o=v}}else if(i&&p.data==="}"){if(--i)continue;h.push({name:u,type:e,body:[r+1,s],args:[m,a+1],outer:[o,s+1]})}for(s=0;s<n.length;s++)if(p=n[s],p.data===";"){if(t=g(s,x(")"),x()),t<0||(a=t,t=g(t,x("("),x(")")),t<0)||(m=t,t=g(t,y),t<0)||n[t].type!=="ident"||(u=n[t].data,t=g(t,y),t<0)||n[t].type==="operator"||n[t].data==="return")continue;e=n[t].data,h.push({name:u,type:e,body:!1,args:[m,a+1],outer:[t,s+1]})}return h.sort(function(M,_){return M.outer[0]-_.outer[0]});function g(M,_,D){for(var d=M-1;d>=0;d--){if(_(n[d]))return d;if(D&&D(n[d]))return-1}return-1}}function x(n){return function(e){return e.type==="operator"&&(!n||e.data===n)}}function y(n){return n.type!=="whitespace"}const ye=E(Me);export{ye as a,be as s,Pe as t};
