import{P as t}from"./tweakpane.C0HtAJSg1755073624354.js";import{b as e}from"./pagesShow.vue_vue_type_script_setup_true_lang.Dhq1s2qP1755073624354.js";import{C as a,bd as o,a3 as n,cg as s,m as i,al as r}from"./three.QlBabAUP1755073624354.js";import{e as l}from"./@tresjs.BCY8YfXT1755073624354.js";import{d as m,w as p,G as u,o as d,I as c,a7 as f,a8 as h,u as v,b as g,s as y,t as w,r as x,e as b,f as _,j as C,m as j}from"./@vue.BzMISRrV1755073624354.js";import"./three-custom-shader-material.CWc4oRjg1755073624354.js";import"./buildingsCustomShaderMaterial.DyBo--wu1755073624354.js";import"./postprocessing.5xFoYuqq1755073624354.js";import"./@vueuse.rvsfWOfQ1755073624354.js";const k=["geometry"],B=m({__name:"fencePlus",props:{width:{default:100},height:{default:100},depth:{default:100},color:{default:"#ffff00"},opacity:{default:1},thickness:{default:.99},room:{default:.7},num:{default:8},speed:{default:.15}},setup(t){const e=t,m={side:n,transparent:!0,depthWrite:!1,depthTest:!0,blending:o,vertexShader:"\n\t\tprecision highp float;\n\t\tprecision highp int;\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\t}\n",fragmentShader:"\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp int;\n\t\t\t\tuniform float time;\n\t\t\t\tuniform float opacity;\n\t\t\t\tuniform vec3 color;\n\t\t\t\tuniform float num;\n\t\t\t\tuniform float thickness;\n\t\t\t\tuniform float speed;\n\t\t\t\tuniform float room;\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec4 fragColor = vec4(0.);\n\t\t\t\t\tfloat sinnum = sin((vUv.y - time * speed) * 10. * num);\n\n\t\t\t\t\tvec4 wcolor = vec4(mix(color, vec3(1., 1., 1.), 0.9),1.0);\n\n\t\t\t\t\tvec3 fade = mix(color, vec3(1., 1., 1.), vUv.y);\n                    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n                    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n\n\t\t\t\t\tif(vUv.y < room){\n\t\t\t\t\t\tfloat alpha = smoothstep(1.0 - thickness - 0.1, 1.0 - thickness, sinnum);\n\t\t\t\t\t\tfragColor = mix(gl_FragColor, wcolor, alpha);\n\t\t\t\t\t\tfragColor.a = fragColor.a * opacity;\n\t\t\t\t\t\tgl_FragColor = fragColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t",uniforms:{time:{type:"pv2",value:0},color:{type:"uvs",value:new a(e.color)},opacity:{value:e.opacity},num:{value:e.num},thickness:{value:e.thickness},speed:{value:e.speed},room:{value:e.room}}};let g=null;function y(t,e,a){const o=[],n=(t,e)=>{const a=new i(t,e,1,1),o=[];return o.push(0,1),o.push(1,1),o.push(0,0),o.push(1,0),a.setAttribute("uv",new r(o,2)),a},l=n(t,a);l.rotateY(Math.PI),l.translate(0,a/2,-e/2),o.push(l);const m=n(t,a);m.translate(0,a/2,e/2),o.push(m);const p=n(e,a);p.rotateY(Math.PI/2),p.translate(-t/2,a/2,0),o.push(p);const u=n(e,a);u.rotateY(-Math.PI/2),u.translate(t/2,a/2,0),o.push(u);return s(o,!0)}g=y(e.width,e.depth,e.height);const{onLoop:w}=l();return w((({delta:t})=>{m.uniforms.time.value+=t})),p((()=>[e.color,e.opacity,e.num,e.thickness,e.speed,e.room]),(([t,e,o,n,s,i])=>{m.uniforms.color.value=new a(t),m.uniforms.opacity.value=e,m.uniforms.num.value=o,m.uniforms.thickness.value=n,m.uniforms.speed.value=s,m.uniforms.room.value=i})),p((()=>[e.width,e.depth,e.height]),(([t,e,a])=>{g=y(t,e,a)})),(t,e)=>(d(),u("TresMesh",{renderOrder:2e3,geometry:v(g)},[c("TresShaderMaterial",f(h(m)),null,16)],8,k))}}),M=m({__name:"fencePlusPage",setup(a){const o=g();y((()=>{w((()=>{o.value&&o.value.$refs.perspectiveCameraRef.position.set(580,360,500)}))}));const n=x({width:100,height:100,depth:100,color:"#00ffdd",opacity:1,num:6,thickness:.01,speed:.2,room:.7}),s=new t({title:"围墙高级效果",expanded:!0});return s.addBinding(n,"width",{label:"宽",min:10,max:200,step:1}),s.addBinding(n,"depth",{label:"长",min:10,max:200,step:1}),s.addBinding(n,"height",{label:"高",min:10,max:200,step:1}),s.addBinding(n,"color",{label:"颜色"}),s.addBinding(n,"opacity",{label:"透明度",min:0,max:1,step:.1}),s.addBinding(n,"speed",{label:"滚动速度",min:-1,max:1,step:.01}),s.addBinding(n,"thickness",{label:"粗细",min:.01,max:1,step:.01}),s.addBinding(n,"num",{label:"条纹数",min:0,max:20,step:1}),s.addBinding(n,"room",{label:"条纹空间占比",min:0,max:1,step:.01}),(t,a)=>(d(),b(e,{ref_key:"pagesShowRef",ref:o},{ability:_((()=>[C(B,j(n,{"position-y":23,scale:2}),null,16)])),_:1},512))}});export{M as default};
