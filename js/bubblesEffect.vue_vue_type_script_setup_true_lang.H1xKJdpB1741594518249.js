import{_ as n,C as t,cd as e,r as o,c3 as i,a as r}from"./three.8y0_KTxz1741594518249.js";import{m as a,e as s,a as l}from"./@tresjs.gjafZgVK1741594518249.js";import{d as u,b as c,a3 as f,a2 as p,o as m,H as g,N as b,aj as v,ak as y,u as d}from"./@vue.NRI7TcgI1741594518249.js";function h(n,t){const e=_();return(h=function(n,t){return e[n-=142]})(n,t)}const w=h;function _(){const n=["call","opacity","color","geometry","log","uniforms","947703kPSKpm","312990vocsXM","TresMeshRef","#84ccff","sin","2742534dZrGMv","length","value","input","info","apply","glowColor","DoubleSide","error","mergeGeometries","trace","exception","10EZGzgd","action","toString","warn","console","52odZyty","Color","AdditiveBlending","stateObject","4151462mkMekj","constructor","227875vszydM","uOpacity","TresShaderMaterial","table","TresBufferGeometry","test","chain","1DLUnCE","bind","traverse","function *\\( *\\)","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","init","Mesh","return (function() ","model","TresMesh","3452432BkmxqE","1539606OuCnyN","gger"];return(_=function(){return n})()}!function(n,t){const e=h,o=_();for(;;)try{if(402180===parseInt(e(150))/1*(parseInt(e(161))/2)+parseInt(e(169))/3+parseInt(e(191))/4*(-parseInt(e(143))/5)+parseInt(e(170))/6+parseInt(e(195))/7+-parseInt(e(160))/8+-parseInt(e(174))/9*(parseInt(e(186))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(179)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){z(this,(function(){const n=h,t=new RegExp(n(153)),e=new RegExp(n(154),"i"),o=S(n(155));t[n(148)](o+n(149))&&e[n(148)](o+n(177))?S():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(179)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();x(void 0,(function(){const n=h;let t;try{t=Function(n(157)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t.console=t[n(190)]||{},o=[n(167),n(189),n(178),n(182),n(185),n(146),n(184)];for(let r=0;r<o[n(175)];r++){const t=x.constructor.prototype[n(151)](x),i=o[r],a=e[i]||t;t.__proto__=x.bind(x),t[n(188)]=a[n(188)][n(151)](a),e[i]=t}}))();const P=u({__name:"xRayEffect",props:{model:{},color:{default:w(172)},opacity:{default:1}},async setup(o){const i=w;let r,u;const d=o,h=c(),_=[];d[i(158)][i(152)]((t=>{t instanceof n[i(156)]&&(t.geometry.verticesNeedUpdate=!0,_.push(t.geometry))}));const z=([r,u]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(d[i(165)])},lightningTexture:{type:"t",value:z.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(164)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(181)],blending:n[i(193)],depthWrite:!1};x[i(168)].offsetY[i(176)]=Math[i(173)](5);const{camera:P}=a(),{onLoop:S}=s();return S((({delta:n})=>{const t=i;P.value.position&&h[t(176)]&&(x[t(168)].uTime.value+=n)})),p((()=>{const t=i;h[t(176)]&&(h[t(176)][t(166)].dispose(),h[t(176)][t(166)]=e[t(183)](_)),d[t(165)]&&(x[t(168)][t(180)][t(176)]=new(n[t(192)])(d[t(165)])),d.opacity&&(x.uniforms[t(144)][t(176)]=d[t(164)])})),(n,t)=>{const e=i;return m(),g(e(159),{ref_key:e(171),ref:h},[t[0]||(t[0]=b(e(147),null,null,-1)),b(e(145),v(y(x)),null,16)],512)}}});function S(n){function t(n){const e=h;if("string"==typeof n)return function(n){}[e(142)]("while (true) {}").apply("counter");1!==(""+n/n)[e(175)]||n%20==0?function(){return!0}[e(142)]("debu"+e(162))[e(163)](e(187)):function(){return!1}.constructor("debugger")[e(179)](e(194)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=F;!function(n,t){const e=F,o=I();for(;;)try{if(233616===-parseInt(e(153))/1*(-parseInt(e(167))/2)+parseInt(e(150))/3*(-parseInt(e(133))/4)+parseInt(e(121))/5+-parseInt(e(130))/6+-parseInt(e(156))/7+parseInt(e(146))/8+parseInt(e(124))/9*(parseInt(e(141))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=F,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(162),"i"),o=U(n(182));t[n(139)](o+"chain")&&e.test(o+"input")?U():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(176)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(){const n=["toString","TresBufferGeometry","map","474230KHrzMd","position","cerebellum","81aDNIUV","MathUtils","uOpacity","push","ShaderMaterial","constructor","2380362tnkwfX","bind","uSlowTime","4nDaMWJ","opacity","return (function() ","attributes","bridge","Color","test","geometry","835790CjYDJm","size","amigdala","while (true) {}","TresMeshRef","912864YmVnoD","DoubleSide","bubblesEffect","AdditiveBlending","149847mjYLRW","uniforms","value","739lqfWsR","randInt","console","2674812Lflrtx","episodic","gger","traverse","action","color","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","material","brainstem","stateObject","analitic","274ewAySe","array","error","glowColor","prototype","bubbles","randFloat","debu","semantic","apply","counter","includes","setAttribute","aDelayDuration","#FFF","init","trace","Float32BufferAttribute","length","warn",'{}.constructor("return this")( )',"model"];return(I=function(){return n})()}M(void 0,(function(){const n=F,t=function(){const n=F;let t;try{t=Function(n(135)+n(187)+");")()}catch(e){t=window}return t}(),e=t[n(155)]=t[n(155)]||{},o=["log",n(186),"info",n(169),"exception","table",n(183)];for(let i=0;i<o.length;i++){const t=M[n(129)][n(171)][n(131)](M),r=o[i],a=e[r]||t;t.__proto__=M[n(131)](M),t[n(189)]=a[n(189)][n(131)](a),e[r]=t}}))();const B=u({__name:T(148),props:{model:{},color:{default:T(181)},opacity:{default:1}},setup(e){const a=T,l=e,u=["afective",a(175),a(157),"process",a(143),a(164),a(137),a(123),a(166)],f={};l[a(188)][a(159)]((n=>{const t=a;n instanceof o&&u[t(191)]((e=>{const o=t;if(n.name[o(178)](e)){if(f[e]){const t=[f[e],n[o(140)]];return f[e]=i(t),f}return f[e]=n.geometry}return[]}))}));const h=c(),w=new(n[a(128)])({uniforms:{glowColor:{type:"c",value:new(n[a(138)])(l[a(161)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l[a(134)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(149)],side:n[a(147)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h[a(152)]&&(()=>{const t=a,e=[],o=[],i=[],s=[];for(let a=0;a<2e4-3*u[t(185)];a+=1){const l=n[t(125)][t(154)](0,u[t(185)]-1),c=u[l],p=f[c].attributes.position.array[3*a+0]||0,m=f[c][t(136)][t(122)].array[3*a+1]||0,g=f[c][t(136)][t(122)][t(168)][3*a+2]||0;if(o[t(127)](p,m,g),e[a]=r[t(173)](10,20),a%100==0){const n=r[t(154)](100,250)+m;s.push(p,n,g,1)}else s[t(127)](p,m,g,0);i[2*a+0]=n[t(125)][t(173)](.5,1.5),i[2*a+1]=2.5}h[t(152)][t(179)](t(180),new(n[t(184)])(i,2)),h[t(152)][t(179)](t(172),new(n[t(184)])(s,4)),h[t(152)][t(179)](t(122),new(n[t(184)])(o,3)),h[t(152)].setAttribute(t(161),new(n[t(184)])([],3)),h[t(152)][t(179)](t(142),new(n[t(184)])(e,1)),h[t(152)].computeBoundingSphere()})()}));const _=c(),{onLoop:z}=s();return z((({delta:n})=>{const e=a;_[e(152)]&&(_[e(152)][e(163)].uniforms.uTime[e(152)]+=.05,_[e(152)][e(163)][e(151)][e(132)][e(152)]+=1/400),l[e(161)]&&(w[e(151)][e(170)][e(152)]=new t(l.color)),l[e(134)]&&(w[e(151)][e(126)][e(152)]=l[e(134)])})),(n,t)=>{const e=a;return m(),g("TresPoints",{ref_key:e(145),ref:_},[b(e(190),{ref_key:"BufferGeometryRef",ref:h},null,512),b("TresShaderMaterial",v(y(d(w))),null,16)],512)}}});function F(n,t){const e=I();return(F=function(n,t){return e[n-=121]})(n,t)}function U(n){function t(n){const e=F;if("string"==typeof n)return function(n){}[e(129)](e(144))[e(176)](e(177));1!==(""+n/n)[e(185)]||n%20==0?function(){return!0}[e(129)](e(174)+e(158)).call(e(160)):function(){return!1}[e(129)](e(174)+e(158))[e(176)](e(165)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,B as a};
