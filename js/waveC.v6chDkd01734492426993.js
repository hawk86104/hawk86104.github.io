import{e,U as n}from"./@tresjs.WiFlZbqU1734492426993.js";import{C as t,_ as o,k as r,ak as i}from"./three.-W-Avfc61734492426993.js";import{P as a}from"./tweakpane.yHWGBmom1734492426993.js";import{d as l,w as u,o as c,D as s,J as v,u as f,r as p,e as g,f as d,g as y,j as m,aj as x,ak as P,m as z}from"./@vue.-THQH3GC1734492426993.js";import"./@vueuse.HnQgsJ961734492426993.js";function W(){const e=["error","set","trace","#b367ff","perlinWaveAmplitude","20RvvsyO","#184650","debu","11534EdzQpG","perlinWaveFrequency","function *\\( *\\)","gger","bind","TresMesh","waveAmplitude","uColorDamping","call","sinWaveSpeed","uTime","12477740vDMamA","vertexShader","apply","918350FHbQYH","TresShaderMaterial","chain","uSinWaveSpeed","188592JceGTy","test","colorOffset","TresPlaneGeometry","uPeakColor","setStyle","uWaveAmplitude","while (true) {}","Vector2","DoubleSide","sinWaveFrequency","input","peakColor","uPerlinWaveIterations","constructor","toString","exception","rotation-x","perlinWaveSpeed","console","117HeDVex","Color","action","side","value","93gqWaPu","1089579EaISWM","381204oPyADi","84TyiUJe","valleyColor","length","uSinWaveFrequency","2031240tMfTiO","prototype","perlinWaveIterations","colorDamping","info","table",'{}.constructor("return this")( )',"stateObject","uPerlinWaveAmplitude","wireframe"];return(W=function(){return e})()}const w=C;!function(e,n){const t=C,o=W();for(;;)try{if(714098===parseInt(t(390))/1*(-parseInt(t(347))/2)+parseInt(t(391))/3+-parseInt(t(365))/4*(parseInt(t(344))/5)+parseInt(t(392))/6*(parseInt(t(393))/7)+parseInt(t(397))/8+parseInt(t(385))/9*(parseInt(t(361))/10)+-parseInt(t(358))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(360)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function C(e,n){const t=W();return(C=function(e,n){return t[e-=341]})(e,n)}!function(){S(this,(function(){const e=C,n=new RegExp(e(349)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A("init");n[e(366)](o+e(363))&&t[e(366)](o+e(376))?A():o("0")}))()}();const I=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(360)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();I(void 0,(function(){const e=C;let n;try{n=Function("return (function() "+e(403)+");")()}catch(r){n=window}const t=n[e(384)]=n[e(384)]||{},o=["log","warn",e(401),e(407),e(381),e(402),e(341)];for(let i=0;i<o[e(395)];i++){const n=I[e(379)][e(398)].bind(I),r=o[i],a=t[r]||n;n.__proto__=I[e(351)](I),n[e(380)]=a.toString[e(351)](a),t[r]=n}}))();const h=[w(382)],_=[w(388),w(359),"fragmentShader",w(406)],b=l({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:w(342)},valleyColor:{default:w(345)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const i=w,a=n,l={uTime:{value:0},uPeakColor:{value:new t(a[i(377)])},uValleyColor:{value:new(o[i(386)])(a[i(394)])},uColorOffset:{value:a[i(367)]},uColorDamping:{value:a[i(400)]},uSinWaveFrequency:{value:new(o[i(373)])(a[i(375)].x,a[i(375)].y)},uWaveAmplitude:{value:a[i(353)]},uSinWaveSpeed:{value:new r(a[i(356)].x,a[i(356)].y)},uPerlinWaveIterations:{value:a.perlinWaveIterations},uPerlinWaveFrequency:{value:a[i(348)]},uPerlinWaveAmplitude:{value:a.perlinWaveAmplitude},uPerlinWaveSpeed:{value:a[i(383)]}},{onLoop:p}=e();return p((({elapsed:e})=>{l[i(357)].value=e})),u((()=>a),(()=>{const e=i;l[e(369)][e(389)][e(370)](a[e(377)]),l.uValleyColor[e(389)][e(370)](a[e(394)]),l.uColorOffset[e(389)]=a[e(367)],l[e(354)].value=a[e(400)],l[e(396)][e(389)][e(408)](a[e(375)].x,a[e(375)].y),l[e(371)][e(389)]=a.waveAmplitude,l[e(364)][e(389)].set(a[e(356)].x,a[e(356)].y),l[e(378)][e(389)]=a[e(399)],l.uPerlinWaveFrequency.value=a[e(348)],l[e(405)][e(389)]=a[e(343)],l.uPerlinWaveSpeed[e(389)]=a[e(383)]}),{deep:!0}),(e,n)=>{const t=i;return c(),s(t(352),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v(t(368),{args:[10,10,512,512]},null,-1)),v(t(362),{side:o[t(374)],vertexShader:f("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:f("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:l,wireframe:e[t(406)]},null,8,_)],8,h)}}});function A(e){function n(e){const t=C;if("string"==typeof e)return function(e){}[t(379)](t(372))[t(360)]("counter");1!==(""+e/e)[t(395)]||e%20==0?function(){return!0}[t(379)](t(346)+t(350))[t(355)](t(387)):function(){return!1}[t(379)](t(346)+"gger").apply(t(404)),n(++e)}try{if(e)return n;n(0)}catch(t){}}function q(){const e=["wireframe","addBinding","小波浪幅度","init","constructor","12bGNfuN","山峰颜色","call","apply","log","chain","prototype","正弦波振幅","while (true) {}","table","length","__proto__","perlinWaveIterations","gger","616DJHtqm","625900WuyQdr","test","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","13418251XYMDQq","小波浪层数","perlinWaveAmplitude","正弦波速度","valleyColor","#ff6767","colorDamping","exception","console","27ggfotB","toString","19674zHQURn","#222","inline","perlinWaveFrequency","debu","action","小波浪速度","return (function() ","TresCanvas","185722TRVxhb","error","90443AQmsxd","颜色抑制","BasicShadowMap","4740561woOmJo","function *\\( *\\)","waveC","bind","peakColor","正弦波频率","perlinWaveSpeed","TresPerspectiveCamera","6BCQPTl","colorOffset","waveAmplitude","网格化","counter","stateObject","颜色偏移","sinWaveSpeed","NoToneMapping","山谷颜色","5uYFGZO","trace","#310039",'{}.constructor("return this")( )',"642356snWGJS"];return(q=function(){return e})()}const T=k;!function(e,n){const t=k,o=q();for(;;)try{if(579371===-parseInt(t(164))/1+-parseInt(t(162))/2*(parseInt(t(151))/3)+parseInt(t(189))/4*(-parseInt(t(185))/5)+-parseInt(t(175))/6*(-parseInt(t(167))/7)+-parseInt(t(138))/8*(parseInt(t(153))/9)+-parseInt(t(139))/10+-parseInt(t(142))/11*(-parseInt(t(195))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const F=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function k(e,n){const t=q();return(k=function(e,n){return t[e-=134]})(e,n)}!function(){F(this,(function(){const e=k,n=new RegExp(e(168)),t=new RegExp(e(141),"i"),o=O(e(193));n[e(140)](o+e(200))&&t[e(140)](o+"input")?O():o("0")}))()}();const M=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();M(void 0,(function(){const e=k,n=function(){const e=k;let n;try{n=Function(e(160)+e(188)+");")()}catch(t){n=window}return n}(),t=n[e(150)]=n.console||{},o=[e(199),"warn","info",e(163),e(149),e(204),e(186)];for(let r=0;r<o[e(134)];r++){const n=M[e(194)][e(201)][e(170)](M),i=o[r],a=t[i]||n;n[e(135)]=M.bind(M),n[e(152)]=a[e(152)][e(170)](a),t[i]=n}}))();const D=l({__name:T(169),setup(e){const t=T,r={clearColor:t(154),shadows:!0,alpha:!1,shadowMapType:o[t(166)],outputColorSpace:i,toneMapping:o[t(183)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=p({peakColor:t(147),valleyColor:t(187),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),u=new a({title:"参数",expanded:!0});return u[t(191)](l,t(190),{label:t(178)}),u[t(191)](l,t(171),{label:t(196)}),u[t(191)](l,t(146),{label:t(184)}),u.addBinding(l,t(176),{label:t(181),min:.01,max:3,step:.01}),u[t(191)](l,t(148),{label:t(165),min:.01,max:6,step:.01}),u[t(191)](l,"sinWaveFrequency",{label:t(172),picker:t(155),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),u[t(191)](l,t(177),{label:t(202),min:0,max:2,step:.01}),u[t(191)](l,t(182),{label:t(145),picker:t(155),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),u[t(191)](l,t(136),{label:t(143),min:1,max:7,step:.1}),u.addBinding(l,t(156),{label:"小波浪频率",min:0,max:5,step:.01}),u[t(191)](l,t(144),{label:t(192),min:0,max:2,step:.01}),u[t(191)](l,t(173),{label:t(159),min:0,max:2,step:.01}),(e,o)=>{const i=t,a=g(i(161));return c(),d(a,z(r,{"window-size":""}),{default:y((()=>[o[0]||(o[0]=v(i(174),{position:[10,10,10]},null,-1)),m(f(n)),o[1]||(o[1]=v("TresGridHelper",{args:[10,10]},null,-1)),m(b,x(P(l)),null,16)])),_:1},16)}}});function O(e){function n(e){const t=k;if("string"==typeof e)return function(e){}[t(194)](t(203))[t(198)](t(179));1!==(""+e/e)[t(134)]||e%20==0?function(){return!0}.constructor(t(157)+t(137))[t(197)](t(158)):function(){return!1}.constructor("debu"+t(137)).apply(t(180)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{D as default};
