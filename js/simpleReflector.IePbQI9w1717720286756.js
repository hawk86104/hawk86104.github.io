import{a5 as n,a6 as t,au as l,r as c,o as d,C as m,J as p,a as r,T as i,ag as f,O as _,d0 as g,a1 as e,b3 as u,ae as C,af as h}from"./vendor.2VFT6kQ_1717720286756.js";import{_ as v}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.D8oxfLfR1717720286756.js";import"./Reflector.8rQ13e9b1717720286756.js";const T=e("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),x=e("TresAmbientLight",{intensity:10},null,-1),B={position:[0,10,0],intensity:10,color:"#ffffff"},b=e("TresMesh",{position:[0,2,-4]},[e("TresBoxGeometry",{args:[1,1,1]}),e("TresMeshNormalMaterial")],-1),D=n({__name:"simpleReflector",setup(z){const o=t({mirrorSize:16,gridSize:15,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),a=new l({title:"地板参数",expanded:!0});return a.addBinding(o,"mirrorColor",{label:"镜面颜色"}),a.addBinding(o,"mirrorSize",{label:"镜面大小",min:10,max:50,step:1}),a.addBinding(o,"gridSize",{label:"网格大小",min:10,max:50,step:1}),(S,w)=>{const s=c("TresCanvas");return d(),m(s,{clearColor:"#201919","window-size":""},{default:p(()=>[T,r(i(f),{enableDamping:""}),x,_(e("TresDirectionalLight",B,null,512),[[i(g)]]),r(i(u),{args:[1,1,1],color:"orange",position:[3,2,1]}),b,r(v,C(h(o)),null,16)]),_:1})}}});export{D as default};
