import{a3 as e,C as a,az as o,cC as t,cD as l,cE as r,n as i,N as s,_ as n,ce as u}from"./three.QlBabAUP1755073624354.js";import{C as d,e as p,a as m}from"./@tresjs.BCY8YfXT1755073624354.js";import{z as c}from"./three-custom-shader-material.CWc4oRjg1755073624354.js";import{b as f,a as y}from"./buildingsCustomShaderMaterial.DyBo--wu1755073624354.js";import{d as h,b as w,a2 as g,w as v,G as C,o as b,u as x,r as S,aa as _,h as B,e as T,f as j,I as L,j as M,H as A,L as R,a7 as O,a8 as G,F as H,m as W}from"./@vue.BzMISRrV1755073624354.js";const D=async()=>{const e=await d("./plugins/digitalCity/model/shanghai.FBX");let a=null,o=null,t=null;return e.traverse((e=>{"CITY_UNTRIANGULATED"===e.name&&(a=e),"LANDMASS"===e.name&&(o=e),"ROADS"===e.name&&(t=e)})),{model:e,city:a,land:o,roads:t}},F=["object"],k=h({__name:"buildingsModelCustomShader",props:{model:{},bulidingsColor:{default:"#e523ff"},landColor:{default:"#112233"},topColor:{default:"#ffff00"},opacity:{default:.9},gradient:{type:Boolean,default:!0}},setup(o){const t=o,l=w(0),r=t.model.city;r.renderOrder=1001;const i=t.model.land;(()=>{const{geometry:o}=r;o.computeBoundingBox(),o.computeBoundingSphere();const{max:i,min:s}=o.boundingBox;if(r.material.__csm)return;const n=new c({baseMaterial:r.material,vertexShader:y,fragmentShader:f,silent:!0,uniforms:{uMax:{value:i},uMin:{value:s},uBorderWidth:{value:5},uCircleTime:{value:5},uColor:{value:new a(t.bulidingsColor)},uOpacity:{value:t.opacity},uLightColor:{value:new a("#ffffff")},uTopColor:{value:new a(t.topColor)},uTime:l,uGradient:{value:t.gradient}},depthWrite:!0,depthTest:!0,transparent:!0,side:e});r.material.dispose(),r.material=n})();const{onLoop:s}=p();s((({delta:e})=>{l.value+=e})),g((()=>{t.bulidingsColor&&r.material.uniforms.uColor.value.setStyle(t.bulidingsColor),t.landColor&&((a,o)=>{let l;l=Array.isArray(i.material)?i.material:[i.material],l.forEach((a=>{a[o].setStyle(t.landColor),a.side=e}))})(0,"color"),t.opacity&&(r.material.uniforms.uOpacity.value=t.opacity)})),v(t,((e,a)=>{r.material.uniforms.uGradient.value=e.gradient}));const n=t.model.model.clone();return(e,a)=>(b(),C("primitive",{object:x(n)},null,8,F))}}),E=["object"],N=h({__name:"buildingsLines",props:{builds:{},width:{default:1},color:{default:"#FFF"},opacity:{default:1},style:{default:"Wireframe"}},setup(e){const s=e;let n=null,u=null;if("Wireframe"===s.style){const e=new o(s.builds.geometry);let a=(new t).fromEdgesGeometry(e),i=new l({color:s.color,linewidth:s.width,opacity:s.opacity,transparent:!0,depthWrite:!0,depthTest:!0});i.resolution.set(window.innerWidth,window.innerHeight),n=new r(a,i),n.applyMatrix4(s.builds.matrix.clone())}else{u={transparent:!0,uniforms:{uColor:{value:new a(s.color)},uOpacity:{value:s.opacity}},vertexShader:"\n       void main() {\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:" \n        uniform vec3 uColor;\n\t\t\t\tuniform float uOpacity;\n        void main() {\n          gl_FragColor = vec4(uColor, uOpacity);\n        }\n      "};const e=new o(s.builds.geometry),t=new i(u);n=new LineSegments(e,t),n.applyMatrix4(s.builds.matrix.clone()),n.material.linewidth=s.width,n.renderOrder=1e3}return g((()=>{"Shader"===s.style&&(s.color&&(u.uniforms.uColor.value=new a(s.color)),s.opacity&&(u.uniforms.uOpacity.value=s.opacity)),"Wireframe"===s.style&&(s.color&&(n.material.color=new a(s.color)),s.opacity&&(n.material.opacity=s.opacity)),s.width&&(n.material.linewidth=s.width)})),(e,a)=>(b(),C("primitive",{object:x(n)},null,8,E))}}),I={key:1,args:[1e3],position:[0,19,0]},z={key:2,args:[6e3,100],position:[0,19,0]},P=h({__name:"pagesShow",props:{showBuildings:{type:Boolean,default:!0},autoRotate:{type:Boolean,default:!0},showAxesHelper:{type:Boolean,default:!0},showGridHelper:{type:Boolean,default:!0},disableRender:{type:Boolean,default:!1}},async setup(e){let a,o;const t=e,l=S({clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0,shadowMapType:u,outputColorSpace:n,toneMapping:s,disableRender:t.disableRender}),r=S({autoRotate:t.autoRotate,enableDamping:!0});let i=null;t.showBuildings&&([a,o]=_((()=>D())),a=await a,o(),i=a);const d=w(),p=w();return(e,a)=>{const o=B("TresCanvas");return b(),T(o,W({ref_key:"tcRef",ref:p},l,{"window-size":""}),{default:j((()=>[L("TresPerspectiveCamera",{ref_key:"perspectiveCameraRef",ref:d,position:[600,750,-1221],fov:45,near:1,far:1e5},null,512),M(x(m),O(G(r)),null,16),a[0]||(a[0]=L("TresAmbientLight",{color:"#ffffff"},null,-1)),a[1]||(a[1]=L("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1)),t.showBuildings&&x(i)?(b(),C(H,{key:0},[M(k,{model:x(i)},null,8,["model"]),M(N,{builds:x(i).city,color:"#000"},null,8,["builds"])],64)):A("",!0),R(e.$slots,"ability"),t.showAxesHelper?(b(),C("TresAxesHelper",I)):A("",!0),t.showGridHelper?(b(),C("TresGridHelper",z)):A("",!0)])),_:3},16)}}});export{k as _,N as a,P as b,D as l};
