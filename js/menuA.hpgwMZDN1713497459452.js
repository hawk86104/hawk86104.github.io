import{a1 as L,l as b,a6 as I,r as z,o as g,x as R,E as x,a8 as $,a9 as k,Y as f,L as _,c8 as K,aD as Q,bc as oo,c as E,a as w,ac as j,aA as C,ap as y,az as M,cs as U,ah as W,ai as N,_ as Y,ct as eo,bi as B,cj as D,aw as F,cu as V,cv as q,b3 as P,cw as G,bL as A,au as H,av as S,cx as no,bt as to,be as io,bJ as ao,br as so,ay as po,bP as ro,bg as mo,ax as lo,cy as co,ag as O}from"./vendor.KJlYgoAc1713497459452.js";const uo=f("TresPerspectiveCamera",{position:[0,50,300],fov:40,far:800,plane:1},null,-1),fo=["position"],ho=f("TresPointsMaterial",{color:"#66ffff",size:1.1,transparency:!0,opacity:.8},null,-1),vo=L({__name:"starts",setup(p){const e={clearColor:"#000000",alpha:!0,useLegacyLights:!0,antialias:!0},o=b();let n,a=null;I(()=>{o.value&&(o.value.context.renderer.value.setPixelRatio(window.devicePixelRatio?window.devicePixelRatio:1),o.value.context.renderer.value.autoClear=!1,o.value.context.renderer.value.setClearColor(0,0),a=o.value.context.scene.value,n=o.value.context.camera.value,a.fog=new K(1776411,1e-4),n.position.z=800/2)});const r=window.innerWidth/2,i=window.innerHeight/2;let m=0,t=0;function s(l){m=l.clientX-r,t=l.clientY-i}document.addEventListener("mousemove",s,!1);const c=new Float32Array(45e3*3);for(let l=0;l<45e3;l++)c[l*3+0]=Math.random()*2e3-1e3,c[l*3+1]=Math.random()*2e3-1e3,c[l*3+2]=Math.random()*2e3-1e3;const{onLoop:v}=k();return v(()=>{n&&(n.position.x+=(m-n.position.x)*.005,n.position.y+=(-t-n.position.y)*.005,n.lookAt(a.position))}),(l,h)=>{const d=z("TresCanvas");return g(),R(d,$({ref_key:"TresCanvasRef",ref:o},e,{"window-size":""}),{default:x(()=>[uo,f("TresPoints",null,[f("TresBufferGeometry",{args:[1e3,100,50],position:[_(c),3]},null,8,fo),ho])]),_:1},16)}}}),J=p=>(W("data-v-723b22dd"),p=p(),N(),p),_o={class:"position-absolute w-full h-full"},wo=J(()=>f("TresPerspectiveCamera",{position:[0,100,420],fov:50,aspect:1,near:1,far:1e4},null,-1)),go=["rotation-x"],xo=J(()=>f("TresPlaneGeometry",{args:[400,400]},null,-1)),yo=["map","alphaMap","blending","side"],Mo=L({__name:"circle",async setup(p){let e,o;const n={clearColor:"#000000",alpha:!0,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0,precision:"highp",premultipliedAlpha:!1},a=([e,o]=Q(()=>oo({map:"./plugins/earthSample/image/menuA/quan_01.png"})),e=await e,o(),e),{onLoop:r}=k();r(({delta:t})=>{m.value&&(m.value.rotation.z-=.005)});const i=b(),m=b();return I(()=>{if(i.value&&i.value.context){i.value.context.renderer.value.setPixelRatio(window.devicePixelRatio?window.devicePixelRatio:1),i.value.context.renderer.value.autoClear=!0,i.value.context.renderer.value.autoClearColor=new M(1,0,0,0),i.value.context.renderer.value.setClearColor(0,0);const t=i.value.context.scene.value;i.value.context.camera.value,t.fog=new U(4095,100,1e3)}m.value}),(t,s)=>{const c=z("TresCanvas");return g(),E("div",_o,[w(c,$({class:"TresCanvasNoPointerEvents",ref_key:"TresCanvasRef",ref:i},n),{default:x(()=>[wo,w(_(j),{autoRotate:!1}),f("TresMesh",{ref_key:"quanMeshRef",ref:m,position:[0,0,0],"rotation-x":2*Math.PI/360*100},[xo,f("TresMeshBasicMaterial",{color:"#ffffff",map:_(a).map,alphaMap:_(a).map,blending:_(C),side:_(y),depthTest:.2,opacity:1,depthWrite:!1,transparent:!0,alphaTest:0},null,8,yo)],8,go)]),_:1},16)])}}}),Po=Y(Mo,[["__scopeId","data-v-723b22dd"]]),X=[{name:"中国",position:[116.2,39.55]},{name:"中非共和国",position:[18.35,4.23]},{name:"智利",position:[-70.4,-33.24]},{name:"乍得",position:[14.59,12.1]},{name:"赞比亚",position:[28.16,-15.28]},{name:"越南",position:[105.55,21.05]},{name:"约旦",position:[35.52,31.57]},{name:"英属维尔京群岛",position:[-64.37,18.27]},{name:"英国",position:[-.05,51.36]},{name:"印度尼西亚",position:[106.49,-6.09]},{name:"印度",position:[77.13,28.37]},{name:"意大利",position:[12.29,41.54]},{name:"以色列",position:[35.12,31.47]},{name:"伊朗",position:[51.3,35.44]},{name:"伊拉克",position:[44.3,33.2]},{name:"亚美尼亚",position:[44.31,40.1]},{name:"牙买加",position:[-76.5,18]},{name:"匈牙利",position:[19.05,47.29]},{name:"新西兰",position:[174.46,-41.19]},{name:"新喀里多尼亚",position:[166.3,-22.17]},{name:"希腊",position:[23.46,37.58]},{name:"西班牙",position:[-3.45,40.25]},{name:"乌兹别克斯坦",position:[69.1,41.2]},{name:"乌拉圭",position:[-56.11,-34.5]},{name:"乌克兰",position:[30.28,50.3]},{name:"乌干达",position:[32.3,.2]},{name:"文莱",position:[115,4.52]},{name:"委内瑞拉",position:[-66.55,10.3]},{name:"危地马拉",position:[-90.22,14.4]},{name:"瓦努阿图",position:[168.18,-17.45]},{name:"土库曼斯坦",position:[57.5,38]},{name:"土耳其",position:[32.54,39.57]},{name:"图瓦卢",position:[179.13,-8.31]},{name:"突尼斯",position:[10.11,36.5]},{name:"汤加",position:[-174,-21.1]},{name:"坦桑尼亚",position:[35.45,-6.08]},{name:"泰国",position:[100.35,13.45]},{name:"塔吉克斯坦",position:[68.48,38.33]},{name:"索马里",position:[45.25,2.02]},{name:"所罗门群岛",position:[159.57,-9.27]},{name:"苏里南",position:[-55.1,5.5]},{name:"苏丹",position:[32.35,15.31]},{name:"斯威士兰",position:[31.06,-26.18]},{name:"斯洛文尼亚",position:[14.33,46.04]},{name:"斯洛伐克",position:[17.07,48.1]},{name:"圣文森特和格林纳丁斯",position:[-61.1,13.1]},{name:"圣皮埃尔和密克隆",position:[-56.12,46.46]},{name:"圣马力诺",position:[12.3,43.55]},{name:"圣卢西亚",position:[-60.58,14.02]},{name:"圣基茨和尼维斯",position:[-62.43,17.17]},{name:"圣多美和普林西比",position:[6.39,.1]},{name:"沙特阿拉伯",position:[46.42,24.41]},{name:"塞浦路斯",position:[33.25,35.1]},{name:"塞内加尔",position:[-17.29,14.34]},{name:"塞拉利昂",position:[-13.17,8.3]},{name:"萨摩亚",position:[-171.5,-13.5]},{name:"萨尔瓦多",position:[-89.1,13.4]},{name:"瑞士",position:[7.28,46.57]},{name:"瑞典",position:[18.03,59.2]},{name:"葡萄牙",position:[-9.1,38.42]},{name:"帕劳",position:[134.28,7.2]},{name:"诺福克岛",position:[168.43,-45.2]},{name:"挪威",position:[10.45,59.55]},{name:"尼日利亚",position:[7.32,9.05]},{name:"尼日尔",position:[2.06,13.27]},{name:"尼加拉瓜",position:[-86.2,12.06]},{name:"尼泊尔",position:[85.2,27.45]},{name:"南斯拉夫",position:[20.37,44.5]},{name:"纳米比亚",position:[17.04,-22.35]},{name:"墨西哥",position:[-99.1,19.2]},{name:"莫桑比克",position:[32.32,-25.58]},{name:"摩尔多瓦共和国",position:[28.5,47.02]},{name:"缅甸",position:[96.2,16.45]},{name:"秘鲁",position:[-77,-12]},{name:"孟加拉国",position:[90.26,23.43]},{name:"美属维尔京群岛",position:[-64.56,18.21]},{name:"美属萨摩亚",position:[-170.43,-14.16]},{name:"美国",position:[-77.02,39.91]},{name:"毛里塔尼亚",position:[57.3,-20.1]},{name:"马约特岛",position:[45.14,-12.48]},{name:"马提尼克岛",position:[-61.02,14.36]},{name:"马其顿",position:[21.26,42.01]},{name:"马里",position:[-7.55,12.34]},{name:"马来西亚",position:[101.41,3.09]},{name:"马拉维",position:[33.48,-14]},{name:"马耳他",position:[14.31,35.54]},{name:"马尔代夫",position:[73.28,4]},{name:"马达加斯加",position:[47.31,-18.55]},{name:"罗马尼亚",position:[26.1,44.27]},{name:"卢旺达",position:[30.04,-1.59]},{name:"卢森堡",position:[6.09,49.37]},{name:"列支敦士登",position:[9.31,47.08]},{name:"利比里亚",position:[-10.47,6.18]},{name:"立陶宛",position:[25.19,54.38]},{name:"黎巴嫩",position:[35.31,33.53]},{name:"老挝",position:[102.36,17.58]},{name:"莱索托",position:[27.3,-29.18]},{name:"拉脱维亚",position:[24.08,56.53]},{name:"肯尼亚",position:[36.48,-1.17]},{name:"克罗地亚",position:[15.58,45.5]},{name:"科威特",position:[48,29.3]},{name:"科特迪瓦",position:[-5.17,6.49]},{name:"科摩罗",position:[43.16,-11.4]},{name:"开曼群岛",position:[-81.24,19.2]},{name:"卡塔尔",position:[51.35,25.15]},{name:"喀麦隆",position:[11.35,3.5]},{name:"津巴布韦",position:[31.02,-17.43]},{name:"捷克共和国",position:[14.22,50.05]},{name:"柬埔寨",position:[104.55,11.33]},{name:"加蓬",position:[9.26,.25]},{name:"加纳",position:[-.06,5.35]},{name:"加拿大",position:[-75.42,45.27]},{name:"几内亚比绍",position:[-15.45,11.45]},{name:"几内亚",position:[-13.49,9.29]},{name:"吉尔吉斯斯坦",position:[74.46,42.54]},{name:"吉布提",position:[42.2,11.08]},{name:"基里巴斯",position:[173,1.3]},{name:"洪都拉斯",position:[-87.14,14.05]},{name:"赫德岛和麦当劳群岛",position:[74,-53]},{name:"荷属安的列斯",position:[-69,12.05]},{name:"荷兰",position:[4.54,52.23]},{name:"韩国",position:[126.58,37.31]},{name:"海地",position:[-72.2,18.4]},{name:"哈萨克斯坦",position:[71.3,51.1]},{name:"圭亚那",position:[-58.12,6.5]},{name:"瓜德罗普岛",position:[-61.44,16]},{name:"古巴",position:[-82.22,23.08]},{name:"根西岛",position:[-2.33,49.26]},{name:"格鲁吉亚",position:[44.5,41.43]},{name:"格陵兰",position:[-51.35,64.1]},{name:"哥斯达黎加",position:[-84.02,9.55]},{name:"哥伦比亚",position:[-74,4.34]},{name:"刚果",position:[15.12,-4.09]},{name:"刚果(扎伊尔)",position:[15.15,-4.2]},{name:"冈比亚",position:[-16.4,13.28]},{name:"福克兰群岛(马尔维纳斯群岛)",position:[-59.51,-51.4]},{name:"佛得角",position:[-23.34,15.02]},{name:"芬兰",position:[25.03,60.15]},{name:"斐济",position:[178.3,-18.06]},{name:"菲律宾",position:[121.03,14.4]},{name:"法属圭亚那",position:[-52.18,5.05]},{name:"法属波利尼西亚",position:[-149.34,-17.32]},{name:"法罗群岛",position:[-6.56,62.05]},{name:"法国",position:[2.2,48.5]},{name:"厄立特里亚",position:[38.55,15.19]},{name:"厄瓜多尔",position:[-78.35,-.15]},{name:"俄罗斯",position:[37.35,55.45]},{name:"多米尼加共和国",position:[-69.59,18.3]},{name:"多米尼加",position:[-61.24,15.2]},{name:"多哥",position:[1.2,6.09]},{name:"东帝汶",position:[125.34,-8.29]},{name:"德国",position:[13.25,52.3]},{name:"丹麦",position:[12.34,55.41]},{name:"赤道几内亚",position:[8.5,3.45]},{name:"朝鲜",position:[125.3,39.09]},{name:"布隆迪",position:[29.18,-3.16]},{name:"布基纳法索",position:[-1.3,12.15]},{name:"不丹",position:[89.45,27.31]},{name:"博茨瓦纳",position:[25.57,-24.45]},{name:"伯利兹",position:[-88.3,17.18]},{name:"玻利维亚",position:[-68.1,-16.2]},{name:"波斯尼亚和黑塞哥维那",position:[18.26,43.52]},{name:"波兰",position:[21,52.13]},{name:"波多黎各",position:[-66.07,18.28]},{name:"冰岛",position:[-21.57,64.1]},{name:"比利时",position:[4.21,50.51]},{name:"比勒陀利亚",position:[28.12,-25.44]},{name:"贝宁",position:[2.42,6.23]},{name:"北马里亚纳群岛",position:[145.45,15.12]},{name:"保加利亚",position:[23.2,42.45]},{name:"白俄罗斯",position:[27.3,53.52]},{name:"巴西",position:[-47.55,-15.47]},{name:"巴拿马",position:[-79.25,9]},{name:"巴林",position:[50.3,26.1]},{name:"巴拉圭",position:[-57.3,-25.1]},{name:"巴基斯坦",position:[73.1,33.4]},{name:"巴哈马",position:[-77.2,25.05]},{name:"巴布亚新几内亚",position:[147.08,-9.24]},{name:"巴巴多斯",position:[-59.3,13.05]},{name:"澳大利亚",position:[149.08,-35.15]},{name:"奥地利",position:[16.22,48.12]},{name:"安提瓜和巴布达",position:[-61.48,17.2]},{name:"安哥拉",position:[13.15,-8.5]},{name:"安道尔",position:[1.32,42.31]},{name:"爱沙尼亚",position:[24.48,59.22]},{name:"爱尔兰",position:[-6.15,53.21]},{name:"埃塞俄比亚",position:[38.42,9.02]},{name:"埃及",position:[31.14,30.01]},{name:"阿塞拜疆",position:[49.56,40.29]},{name:"阿曼",position:[58.36,23.37]},{name:"阿鲁巴",position:[-70.02,12.32]},{name:"阿联酋",position:[54.22,24.28]},{name:"阿拉伯叙利亚共和国",position:[36.18,33.3]},{name:"阿拉伯利比亚民众国",position:[13.07,32.49]},{name:"阿根廷",position:[-60,-36.3]},{name:"阿富汗",position:[69.11,34.28]},{name:"阿尔及利亚",position:[3.08,36.42]},{name:"阿尔巴尼亚",position:[19.49,41.18]}],Co=p=>{const e=new q;e.radius=100;const o=p[0],n=p[1],a=(o+90)*(Math.PI/180),r=(90-n)*(Math.PI/180);e.phi=r,e.theta=a;const i=new P;return i.setFromSpherical(e),i},bo=(p,e)=>{const o=new V,a=["#66ffff","#66aaaa"][e],r=new G(2,6),i=new A({color:a,side:y,transparent:!0,opacity:1}),t=new G(3,6).getAttribute("position"),s=new Float32Array(t.count*3-3);for(let d=3;d<t.array.length;d++)s[d-3]=t.array[d];const c=new H;c.setAttribute("position",new S(s,3));const v=new A({color:a,side:y,blending:C}),l=new no(c,v),h=new F(r,i);return h.position.copy(p),l.position.copy(p),h.lookAt(new P(0,0,0)),l.lookAt(new P(0,0,0)),o.add(l),o.add(h),o},To=p=>{const e=new B().load("./plugins/earthSample/image/menuA/lightray.jpg"),o=new A({map:e,alphaMap:e,transparent:!0,depthTest:!0,depthWrite:!0,alphaTest:.3,opacity:.9,side:y,color:16777215,blending:C}),n=50*Math.random(),a=new to(6,n),r=new io,i=new F(a,o);r.makeRotationX(Math.PI/2),r.setPosition(new P(0,0,n/-2)),a.applyMatrix4(r);const m=i.clone();return m.rotation.z=Math.PI/2,i.add(m),i.position.copy(p),i.lookAt(0,0,0),i},Ro=p=>{for(let e=0;e<X.length;e++){const o=Co(X[e].position),n=Math.floor(2*Math.random());p.add(bo(o,n)),p.add(To(o))}},Ao=(p,e,o,n)=>{const a=Math.trunc(n.width*p),r=Math.trunc(n.height*e);return o.data[4*(r*o.width+a)]===0},So=(p,e,o)=>{const n=[],a=[],r=[];for(let t=0;t<2;t++){n[t]={positions:[]},r[t]={sizes:[]};const s=new ao;s.size=5,s.color=new M(10092543),s.map=new B().load("./plugins/earthSample/image/menuA/circle.png"),s.depthWrite=!1,s.transparent=!0,s.opacity=.2,s.side=so,s.blending=C;const c=t/2;s.t_=c*Math.PI*2,s.speed_=.05,s.min_=.2*Math.random()+.5,s.delta_=.1*Math.random()+.1,s.opacity_coef_=1,a.push(s)}const i=new q;i.radius=100;for(let t=200,s=0;s<t;s++)for(let c=new P,v=t*(1-Math.sin(s/t*Math.PI))/t+.5,l=0;l<t;l+=v){const h=l/t,d=s/t,u=Math.floor(2*Math.random()),T=n[u],Z=r[u];Ao(h,d,e,o)&&(i.theta=h*Math.PI*2-Math.PI/2,i.phi=d*Math.PI,c.setFromSpherical(i),T.positions.push(c.x),T.positions.push(c.y),T.positions.push(c.z),l%3===0&&Z.sizes.push(6))}const m=new V;for(let t=0;t<n.length;t++){const s=new H,c=n[t],v=r[t],l=new Float32Array(c.positions.length),h=new Float32Array(v.sizes.length);for(let u=0;u<c.positions.length;u++)l[u]=c.positions[u];for(let u=0;u<v.sizes.length;u++)h[u]=v.sizes[u];s.setAttribute("position",new S(l,3)),s.setAttribute("size",new S(h,1)),s.computeBoundingSphere();const d=new po(s,a[t]);m.add(d)}m.name="pointsEearth",p.add(m)},Lo=p=>{const e=document.createElement("img");e.src="./plugins/earthSample/image/menuA/earth.jpg",e.onload=function(){const o=document.createElement("canvas"),n=o.getContext("2d");o.width=e.width,o.height=e.height,n.drawImage(e,0,0,e.width,e.height);const a=n.getImageData(0,0,e.width,e.height);So(p,a,e)}},Io=p=>{const e=function(m){const t={uTex:{type:"t",value:m.map||new ro},offsetRepeat:{value:new mo(0,0,1,1)},alphaProportion:{type:"1f",value:m.alphaProportion||.5},diffuse:{value:m.color||new M(16777215)},opacity:{value:m.opacity||1},gridOffset:{value:0}};return new lo({uniforms:t,vertexShader:" \nvarying float _alpha;\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\nuniform float alphaProportion;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\nvec4 worldPosition = modelMatrix * vec4( vec3( position ), 1.0 );\nvec3 cameraToVertex = normalize( cameraPosition - worldPosition.xyz);\n_alpha = 1.0 - max( 0.0, dot( normal, cameraToVertex ) );\n_alpha = max( 0.0, (_alpha - alphaProportion) / (1.0 - alphaProportion) );\n}",fragmentShader:"\nuniform sampler2D uTex;\nuniform vec3 diffuse;\nuniform float opacity;\nuniform float gridOffset;\nvarying float _alpha;\nvarying vec2 vUv;\nvoid main() {\nvec4 texColor = texture2D( uTex, vUv );\nfloat _a = _alpha * opacity;\nif( _a <= 0.0 ) discard;\n_a = _a * ( sin( vUv.y * 1.0 + gridOffset ) * .5 + .5 );\ngl_FragColor = vec4( texColor.rgb * diffuse, _a );\n}",transparent:!0,blending:C,depthTest:!1,side:y})},o=new eo(110.00000000000001,120,144),n=new B().load("./plugins/earthSample/image/menuA/clouds.png");n.wrapT=D,n.wrapS=D;const a=new e({map:n,alphaProportion:.35,color:new M(6723993),opacity:1,gridOffsetSpeed:.6}),r=new F(o,a);r.matrixAutoUpdate=!1;const i=new V;return i.name="cloudsEearth",i.add(r),p.add(i),i},zo={class:"w-full h-full"},$o=f("TresPerspectiveCamera",{position:[0,0,365],fov:45,near:1,far:1e4},null,-1),ko={__name:"earth",setup(p){const e={clearColor:"#000000",alpha:!0,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},o=b();let n=null;const a=[],{seek:r}=co();I(()=>{o.value&&o.value.context&&(o.value.context.renderer.value.setPixelRatio(window.devicePixelRatio?window.devicePixelRatio:1),o.value.context.renderer.value.autoClear=!1,o.value.context.renderer.value.autoClearColor=new M(1,0,0,0),n=o.value.context.scene.value,n.fog=new U(4095,100,1e3),Ro(n),Lo(n),a[1]=Io(n))});const{onLoop:i}=k();return i(({delta:m})=>{if(a[0]===void 0){const t=r(n,"name","pointsEearth");t&&(a[0]=t)}a.length&&a[1]&&a[0]&&(a[1].rotation.z+=.002,a[0].rotation.y+=.002)}),(m,t)=>{const s=z("TresCanvas");return g(),E("div",zo,[w(s,$({ref_key:"TresCanvasRef",ref:o},e),{default:x(()=>[$o,w(_(j),{autoRotate:!0,autoRotateSpeed:2,enableZoom:!1,enablePan:!1})]),_:1},16)])}}},Eo=p=>(W("data-v-7ab41dcf"),p=p(),N(),p),Bo={class:"bg-img flex justify-center flex-items-center"},Fo={class:"w-120 h-120 pos-relative"},Vo=Eo(()=>f("div",{class:"css_globe_halo1"},null,-1)),Do=L({__name:"menuA",setup(p){return(e,o)=>(g(),E("div",Bo,[w(vo),f("div",Fo,[(g(),R(O,null,{default:x(()=>[w(Po)]),_:1})),Vo,(g(),R(O,null,{default:x(()=>[w(ko)]),_:1}))])]))}}),Oo=Y(Do,[["__scopeId","data-v-7ab41dcf"]]);export{Oo as default};
