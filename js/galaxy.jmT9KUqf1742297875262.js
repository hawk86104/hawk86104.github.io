import{c1 as n,ak as t,am as e,C as o,aX as a,c as r}from"./three.N4lg2KsY1742297875262.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.oW7bfow21742297875262.js";import{d as u,b as d,w as m,e as f,o as p,H as h,j as v,u as g,g as w,N as M,aj as b,ak as P,F as y}from"./@vue.NRI7TcgI1742297875262.js";import"./postprocessing.9PKUyDJ51742297875262.js";import"./@vueuse.Y8_DCJgq1742297875262.js";const C=T;!function(n,t){const e=T,o=j();for(;;)try{if(340916===parseInt(e(194))/1*(parseInt(e(184))/2)+parseInt(e(236))/3+parseInt(e(237))/4*(parseInt(e(232))/5)+-parseInt(e(223))/6+-parseInt(e(221))/7+parseInt(e(235))/8+parseInt(e(226))/9)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(227)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=T,t=new RegExp(n(187)),e=new RegExp(n(182),"i"),o=A(n(185));t.test(o+n(208))&&e[n(231)](o+n(169))?A():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(227)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();z(void 0,(function(){const n=T;let t;try{t=Function(n(170)+'{}.constructor("return this")( ));')()}catch(a){t=window}const e=t.console=t[n(196)]||{},o=[n(212),n(209),n(174),n(229),"exception",n(202),"trace"];for(let r=0;r<o[n(172)];r++){const t=z.constructor[n(200)][n(210)](z),a=o[r],s=e[a]||t;t[n(225)]=z.bind(z),t[n(206)]=s.toString[n(210)](s),e[a]=t}}))();const S=[C(213),C(228),C(204),C(214)];function j(){const n=["toString","branches","chain","warn","bind","#b5f28d","log","position","a-randomness","while (true) {}","#1b3984","bufferRef","radius","outsideColor","insideColor","1349222XYhITR","material","3981180wRuKAo","TresPerspectiveCamera","__proto__","4833351SlEOQn","apply","a-scale","error","TresBufferGeometry","test","5gdvOYg","TresCanvas","geometry","2142144SQeRxj","312684kpXzQg","144412ByjWzd","setAttribute","input","return (function() ","keys","length","black","info","call","galaxy","debu","constructor","count","TresShaderMaterial","uTime","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","string","134nQvlsA","init","action","function *\\( *\\)","counter","cos","stateObject","sin","clone","random","3762KpQubT","forEach","console","value","uniforms","lerp","prototype","aRandomness","table","randomnessPower","color","gger"];return(j=function(){return n})()}function T(n,t){const e=j();return(T=function(n,t){return e[n-=169]})(n,t)}const _=u({__name:C(176),setup(u){const x=C,z={clearColor:x(173),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(211),outsideColor:x(216)},T=new o(j[x(220)]),_=new o(j[x(219)]),A=new Float32Array(3*j.count),I=new Float32Array(3*j[x(179)]),F=new Float32Array(j[x(179)]),R=new Float32Array(3*j[x(179)]);for(let n=0;n<j.count;n++){const t=3*n,e=Math[x(193)]()*j[x(218)],o=n%j.branches*Math.PI*2/j[x(207)];A[t]=Math[x(189)](o)*e,A[t+1]=0,A[t+2]=Math[x(191)](o)*e;const a=Math[x(193)]()**j.randomnessPower*(Math[x(193)]()<.5?-1:1),r=Math[x(193)]()**j[x(203)]*(Math[x(193)]()<.5?-1:1),s=Math.random()**j[x(203)]*(Math.random()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=T[x(192)]();i.lerp(_,e/j[x(218)]),I[t+0]=i.r,I[t+1]=i.g,I[t+2]=i.b,F[n]=Math[x(193)]()}const k={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j.size}}};const O=d(null),{onLoop:Q}=s();Q((({elapsed:n})=>{const t=x;O[t(197)]&&(O.value[t(222)][t(198)][t(181)].value=n)}));const{count:E,size:K,radius:X,branches:B,spin:W,randomness:Y,randomnessPower:Z,insideColor:$,outsideColor:G}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(211),outsideColor:"#1b3984"});return m([E[x(197)],K.value,X.value,B[x(197)],W.value,Y[x(197)],Z[x(197)],$.value,G[x(197)]],(n=>{const t=x;n[t(195)](((n,e)=>{const o=t;j[Object[o(171)](j)[e]]=n[o(197)]})),function(){const n=x;if(O[n(197)]){const t=new o(j.insideColor),e=new o(j[n(219)]),a=new Float32Array(3*j.count),s=new Float32Array(3*j[n(179)]),i=new Float32Array(j[n(179)]),c=new Float32Array(3*j[n(179)]);for(let o=0;o<j[n(179)];o++){const r=3*o,l=Math[n(193)]()*j[n(218)],u=o%j[n(207)]*Math.PI*2/j.branches;a[r]=Math[n(189)](u)*l,a[r+1]=0,a[r+2]=Math[n(191)](u)*l;const d=Math[n(193)]()**j[n(203)]*(Math[n(193)]()<.5?-1:1),m=Math[n(193)]()**j.randomnessPower*(Math.random()<.5?-1:1),f=Math[n(193)]()**j[n(203)]*(Math[n(193)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(192)]();p[n(199)](e,l/j[n(218)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}O[n(197)].geometry.setAttribute(n(213),new r(a,3)),O.value[n(234)][n(238)](n(201),new r(c,3)),O.value[n(234)][n(238)](n(204),new r(s,3)),O[n(197)].geometry[n(238)]("aScale",new r(i,1))}}()})),(n,t)=>{const e=x,o=f(e(233));return p(),h(y,null,[v(g(c)),v(o,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(e(224),{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:e(217),ref:O},[M(e(230),{position:[g(A),3],"a-scale":[g(F),1],color:[g(I),3],"a-randomness":[g(R),3]},null,8,S),M(e(180),b(P(k)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const e=T;if(typeof n===e(183))return function(n){}[e(178)](e(215))[e(227)](e(188));1!==(""+n/n)[e(172)]||n%20==0?function(){return!0}.constructor(e(177)+"gger")[e(175)](e(186)):function(){return!1}[e(178)](e(177)+e(205))[e(227)](e(190)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_ as default};
