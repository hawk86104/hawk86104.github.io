import{u as t,_ as o,a as n}from"./mergeTres.WpdkrjKI1722217438692.js";import{l as r}from"./utils.UPkeWItR1722217438692.js";import{$ as e}from"./@tresjs.vs5lCFs11722217438692.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.Q1VpS3901722217438692.js";import{_ as x}from"./@fesjs.oJOSvSTI1722217438692.js";import"./@amap.FTf_Qzi31722217438692.js";import"./pinia.iyC53SMr1722217438692.js";import"./three.ej3u8izI1722217438692.js";import"./three-mesh-bvh.iDyulXMj1722217438692.js";import"./tweakpane.yHWGBmom1722217438692.js";import"./@vueuse.mG9rDBoo1722217438692.js";import"./vue-router.K-gJhGrY1722217438692.js";import"./lodash-es.nFpJXAf-1722217438692.js";import"./@qlin.yHhFDldE1722217438692.js";import"./@floating-ui.BPbuo5Gx1722217438692.js";import"./@juggle.7yjBMqoW1722217438692.js";const w=z;function b(){const t=["console","bind","50msjhhC","2914640sWugWB","normal","init","position","getZoom","buildings","TresGroup","74768YoNOer","57aJTqHR","value","49702tYUsWU","apply","u_zoom","action","buildingModels","200154jzunoO","u_far","uniforms","geometry","log","mapHandle","prototype","475809jFpXNb","table","push","8MfABaG","toString","2079873rDyLKJ","u_near","input","error","lngLatToCoord","far","near","warn","test","constructor","while (true) {}","946750yLAOmu","function *\\( *\\)","chain","positionArray","faceUv","length","info",'{}.constructor("return this")( )',"exception","cameraState","customCoords"];return(b=function(){return t})()}!function(t,o){const n=z,r=b();for(;;)try{if(346553===parseInt(n(365))/1+parseInt(n(353))/2*(-parseInt(n(351))/3)+parseInt(n(350))/4+-parseInt(n(394))/5*(parseInt(n(358))/6)+parseInt(n(381))/7+parseInt(n(368))/8*(parseInt(n(370))/9)+parseInt(n(395))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){I(this,(function(){const t=z,o=new RegExp(t(382)),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=R(t(397));o.test(r+t(383))&&n[t(378)](r+t(372))?R():r("0")}))()}();const j=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();j(void 0,(function(){const t=z;let o;try{o=Function("return (function() "+t(388)+");")()}catch(e){o=window}const n=o[t(392)]=o.console||{},r=[t(362),t(377),t(387),t(373),t(389),t(366),"trace"];for(let a=0;a<r[t(386)];a++){const o=j[t(379)][t(364)][t(393)](j),e=r[a],i=n[e]||o;o.__proto__=j[t(393)](j),o.toString=i[t(369)][t(393)](i),n[e]=o}}))();const S=[w(398),"faceUv",w(396)];function z(t,o){const n=b();return(z=function(t,o){return n[t-=348]})(t,o)}const A=a({__name:w(357),setup(o){const n=t(),a=t=>{const o=z;for(let r=0;r<t[o(386)];r+=3){const e=[t[r],t[r+1]],a=n[o(363)][o(391)][o(374)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[z(390)]&&(async()=>{const t=z,o=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(348));for(let n=0;n<o.length;n++){const r=o[n];a(r[t(361)]);const e=new Float32Array(r[t(361)]),i=new Float32Array(r[t(385)]),l=new Float32Array(r.geometry[t(386)]);d[t(367)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;n[t(390)]&&(g[t(360)][t(355)][t(352)]=n[t(363)][t(399)](),g[t(360)][t(371)].value=n[t(390)][t(376)],g[t(360)][t(359)].value=n[t(390)][t(375)])})),(t,o)=>{const n=z;return c(),s(n(349),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s("TresMesh",{key:""+o},[p("TresBufferGeometry",{ref_for:!0,ref:"tbgRef",position:[t[r(384)],3],faceUv:[t.uvArray,2],normal:[t.normalArray,3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function R(t){function o(t){const n=z;if("string"==typeof t)return function(t){}[n(379)](n(380))[n(354)]("counter");1!==(""+t/t)[n(386)]||t%20==0?function(){return!0}[n(379)]("debugger").call(n(356)):function(){return!1}[n(379)]("debugger")[n(354)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const F=U;!function(t,o){const n=U,r=M();for(;;)try{if(333028===-parseInt(n(476))/1+-parseInt(n(491))/2*(-parseInt(n(503))/3)+-parseInt(n(481))/4+parseInt(n(504))/5+-parseInt(n(469))/6*(-parseInt(n(490))/7)+-parseInt(n(500))/8*(-parseInt(n(497))/9)+-parseInt(n(465))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(474)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function U(t,o){const n=M();return(U=function(t,o){return n[t-=463]})(t,o)}!function(){P(this,(function(){const t=U,o=new RegExp(t(464)),n=new RegExp(t(501),"i"),r=N(t(467));o.test(r+t(471))&&n[t(483)](r+t(499))?N():r("0")}))()}();const L=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(474)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function M(){const t=["TresPerspectiveCamera","42LFIuer","12XxRzYM","bind","call","debu","warn","string","99DAJJHj","action","input","33896PTdqNC","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","stateObject","172908SqsxFN","185060WzQQkw","exception","__proto__","function *\\( *\\)","1165890AxVGlC","data-v-40288e17","init","TresAmbientLight","615684jrYOBp","prototype","chain","length","error","apply","gger","120175ylHbwo","return (function() ","while (true) {}","table","tresCanvas","1901308vJfNnM","console","test","constructor","trace","info","buildings","toString"];return(M=function(){return t})()}L(void 0,(function(){const t=U,o=function(){const t=U;let o;try{o=Function(t(477)+'{}.constructor("return this")( ));')()}catch(n){o=window}return o}(),n=o[t(482)]=o[t(482)]||{},r=["log",t(495),t(486),t(473),t(505),t(479),t(485)];for(let e=0;e<r[t(472)];e++){const o=L[t(484)][t(470)][t(492)](L),a=r[e],i=n[a]||o;o[t(463)]=L[t(492)](L),o[t(488)]=i[t(488)][t(492)](i),n[a]=o}}))();const W=t=>(y(F(466)),t=t(),C(),t),k=W((()=>p(F(489),{fov:60,near:.1,far:2e3},null,-1))),D=W((()=>p(F(468),{intensity:.5},null,-1)));function N(t){function o(t){const n=U;if(typeof t===n(496))return function(t){}.constructor(n(478)).apply("counter");1!==(""+t/t)[n(472)]||t%20==0?function(){return!0}[n(484)](n(494)+"gger")[n(493)](n(498)):function(){return!1}.constructor(n(494)+n(475)).apply(n(502)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const T=x(a({__name:F(487),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=U,l=d("TresCanvas");return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(480),ref:"tcRef"},e),{default:m((()=>[k,D,g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(A)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{T as default};
