import{ak as e,_ as n}from"./three.ZddO3ejJ1726800306729.js";import{U as t,Y as a,z as o}from"./@tresjs.pv1MNfNv1726800306729.js";import{P as r}from"./tweakpane.yHWGBmom1726800306729.js";import{d as i,a4 as l,Y as s,e as u,o as c,f,g as v,j as p,u as m,L as d,m as h,aj as g,ak as x}from"./@vue.bvMz0l_u1726800306729.js";import"./@vueuse.bZHkTEeA1726800306729.js";const y=j;!function(e,n){const t=j,a=E();for(;;)try{if(816718===parseInt(t(415))/1*(parseInt(t(389))/2)+-parseInt(t(409))/3+-parseInt(t(408))/4+parseInt(t(411))/5+-parseInt(t(387))/6*(parseInt(t(403))/7)+-parseInt(t(391))/8*(-parseInt(t(357))/9)+parseInt(t(373))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(386)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=j,n=new RegExp(e(367)),t=new RegExp(e(360),"i"),a=D(e(416));n.test(a+e(390))&&t[e(383)](a+e(405))?D():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(386)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();w(void 0,(function(){const e=j,n=function(){const e=j;let n;try{n=Function(e(404)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(378)]=n[e(378)]||{},a=[e(355),e(393),e(372),"error","exception","table",e(377)];for(let o=0;o<a[e(398)];o++){const n=w[e(381)][e(359)][e(356)](w),r=a[o],i=t[r]||n;n[e(380)]=w[e(356)](w),n[e(376)]=i[e(376)][e(356)](i),t[r]=n}}))();const S=d("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=d(y(395),{args:[1,4]},null,-1),b=d(y(395),{args:[1,128]},null,-1),z=d(y(375),{args:["#ffffff",y(385),3]},null,-1);function j(e,n){const t=E();return(j=function(e,n){return t[e-=355]})(e,n)}function E(){const e=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","pointsEarth","addBinding","wireframeMaterialRef","#17c5a9","size","TresGroup","function *\\( *\\)","TresMesh","海浪变化速度","debu","TresCanvas","info","7567390HJtJcI","#122148","TresHemisphereLight","toString","trace","console","string","__proto__","constructor","uTime","test","set","#080820","apply","6LRFeKC","action","2797330itGCaO","chain","17832BkiZOI","FrontSide","warn","change","TresIcosahedronGeometry","while (true) {}","counter","length","addFolder","uWaveSpeed","海浪高度","gger","6976214aswUGM","return (function() ","input","Debug","pointSize","2996740THskcL","1485720EFijjF","uniforms","3787280FWJqWl","groupRef","color","call","1HlWXhs","init","log","bind","585YBDqDL","value","prototype"];return(E=function(){return e})()}const P=i({__name:y(361),async setup(i){const T=y;let w,j;const E={color:T(364),pointSize:4},P={clearColor:T(374),shadows:!1,alpha:!1,outputColorSpace:e},D={color:E[T(413)],wireframe:!0,transparent:!0,opacity:.2},k=([w,j]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,j(),w),I=k[0],C=k[1],W=k[2],A=k[3],F=k[4],H={uniforms:{size:{type:"f",value:E[T(407)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:W},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:F},earthTexture:{type:"t",value:I},starTexture:{type:"t",value:C}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n[T(392)]},L=s(),U=s(),M=(new r)[T(399)]({title:T(406)});M[T(362)](E,T(413),{type:"color"}).on(T(394),(({value:e})=>{const n=T;U.value[n(413)][n(384)](e)})),M[T(362)](H[T(410)][T(365)],T(358),{min:.1,max:10,step:.1,label:"粒子大小"}),M[T(362)](H[T(410)].uWaveHeight,T(358),{min:.01,max:.5,step:.01,label:T(401)}),M.addBinding(H[T(410)][T(400)],T(358),{min:.01,max:1,step:.01,label:T(369)});const{onLoop:B}=t();return B((({delta:e})=>{const n=T;L[n(358)]&&(L.value.rotation.y+=.002,H[n(410)][n(382)][n(358)]+=10*e)})),(e,n)=>{const t=T,o=u(t(371));return c(),f(o,h(P,{"window-size":""}),{default:v((()=>[S,p(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(366),{ref_key:t(412),ref:L},[d(t(368),null,[_,d("TresMeshBasicMaterial",h({ref_key:t(363),ref:U},D),null,16)]),d("TresPoints",null,[b,d("TresShaderMaterial",g(x(H)),null,16)])],512),z])),_:1},16)}}});function D(e){function n(e){const t=j;if(typeof e===t(379))return function(e){}[t(381)](t(396)).apply(t(397));1!==(""+e/e)[t(398)]||e%20==0?function(){return!0}[t(381)](t(370)+t(402))[t(414)](t(388)):function(){return!1}[t(381)](t(370)+"gger")[t(386)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{P as default};
