import{cp as o,N as s,_ as a,co as e}from"./three.CC50Wz7a1758524188831.js";import{a as t}from"./@tresjs.BL1sBIDK1758524188831.js";import{P as i}from"./tweakpane.C0HtAJSg1758524188831.js";import"./@fesjs.C0vFiD6Z1758524188831.js";import"./Resource.DxdCIUkg1758524188831.js";/* empty css                                                                             */import{_ as r}from"./randomLoading.vue_vue_type_script_setup_true_lang.DeQBI-cj1758524188831.js";import"./three-mesh-ui.module.CE9rtod61758524188831.js";import"./global.B9GyzW9k1758524188831.js";/* empty css                                                              */import{l}from"./util.BTRj-dGq1758524188831.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.Hwzx3aVj1758524188831.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.Dt4PdASH1758524188831.js";import{d,r as u,aa as c,h as _,G as j,o as g,j as f,u as y,f as h,I as b,a7 as w,a8 as v,e as B,H as x,m as C,a5 as L,F as T}from"./@vue.pEDXJ_3Z1758524188831.js";import"./postprocessing.DYlQqnRh1758524188831.js";import"./@vueuse.C-O_6is-1758524188831.js";import"./vue-router.DFx_OtVs1758524188831.js";import"./lodash-es.C7pWAXPe1758524188831.js";import"./pinia.DVrvLNCY1758524188831.js";import"./@qlin.q6OWdsQV1758524188831.js";import"./@babel.BPq7uOAK1758524188831.js";import"./@floating-ui.BFjFSAYt1758524188831.js";import"./@juggle.CcBCnTIR1758524188831.js";import"./starLoading.1FEktDMq1758524188831.js";import"./utils.PgMvYI3o1758524188831.js";import"./cssLoaders.1NZwOheM1758524188831.js";import"./bubbleLoading.CCP9fGkz1758524188831.js";import"./yangyangLoading.cPq95vdS1758524188831.js";import"./color.D9QGz8GJ1758524188831.js";import"./@amap.CGUF9xH41758524188831.js";import"./color-string.BDbH6wEP1758524188831.js";import"./color-name.BQ5IbGbl1758524188831.js";import"./simple-swizzle.Bkblhu7y1758524188831.js";import"./is-arrayish.CLsR9Wfx1758524188831.js";import"./color-convert.P-wMblBM1758524188831.js";import"./lodash.iw1WOawC1758524188831.js";const k={position:[0,120,0]},z=d({__name:"digitalBrain",async setup(d){let z,P;const G=u({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(G,"show",{label:"点云显示"}),R.addBinding(G,"color",{label:"点云颜色"}),R.addBinding(G,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const A=u({color:"#84ccff",show:!0,opacity:1});R.addBinding(A,"show",{label:"脑轮廓显示"}),R.addBinding(A,"color",{label:"脑轮廓颜色"}),R.addBinding(A,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const H=u({color:"#9e00af",show:!0,opacity:1});R.addBinding(H,"show",{label:"脑组织显示"}),R.addBinding(H,"color",{label:"脑组织颜色"}),R.addBinding(H,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const J=new o,M=([z,P]=c((()=>l("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",J))),z=await z,P(),z),S=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),q=u({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=_("TresCanvas");return g(),j(T,null,[f(y(r)),f(a,C(S,{"window-size":""}),{default:h((()=>[s[0]||(s[0]=b("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),f(y(t),w(v(q)),null,16),s[1]||(s[1]=b("TresAmbientLight",{intensity:.5},null,-1)),b("TresGroup",k,[G.show?(g(),B(n,C({key:0,model:y(M)},G),null,16,["model"])):x("",!0),(g(),B(L,null,{default:h((()=>[A.show?(g(),B(p,C({key:0,model:y(M)},A),null,16,["model"])):x("",!0)])),_:1})),H.show?(g(),B(m,C({key:1,model:y(M)},H),null,16,["model"])):x("",!0)]),s[2]||(s[2]=b("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{z as default};
