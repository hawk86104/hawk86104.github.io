import{c0 as n,ak as t,am as e,C as o,az as a,a as r}from"./three.8H01GNxA1736128832096.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.pA0fT6uQ1736128832096.js";import{d as u,b as d,w as m,e as f,o as p,D as h,j as v,u as g,g as w,J as M,aj as P,ak as y,F as b}from"./@vue.yG49nQHr1736128832096.js";import"./@vueuse.iB8cUOAP1736128832096.js";const C=I;!function(n,t){const e=I,o=S();for(;;)try{if(974090===-parseInt(e(432))/1+parseInt(e(455))/2+-parseInt(e(429))/3+parseInt(e(469))/4+-parseInt(e(439))/5*(-parseInt(e(417))/6)+-parseInt(e(460))/7+-parseInt(e(462))/8*(-parseInt(e(444))/9))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(478)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=I,t=new RegExp(n(441)),e=new RegExp(n(453),"i"),o=T("init");t.test(o+n(420))&&e[n(418)](o+"input")?T():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(478)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function S(){const n=["call","string","a-scale","stateObject","insideColor","5884444IjpUNt","clone","setAttribute","size","trace","info","warn","value","galaxy","apply","return (function() ","length","console","a-randomness","geometry","TresBufferGeometry","1602szdLMH","test","error","chain","while (true) {}","TresPoints","position","TresCanvas","keys","material","uniforms","aRandomness","4109445HGhjWL","__proto__","outsideColor","1500858oIUQHO","counter","random","constructor","prototype","randomnessPower","table","805gDalAs","exception","function *\\( *\\)","uTime","black","20064663SkASJg","radius","branches","cos","sin","color","#b5f28d","bufferRef","count","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","3478916xKaymt","aScale","debu","gger","log","11467400oHHJEF","toString","8lUIDsL","#1b3984"];return(S=function(){return n})()}z(void 0,(function(){const n=I;let t;try{t=Function(n(479)+'{}.constructor("return this")( ));')()}catch(a){t=window}const e=t[n(481)]=t[n(481)]||{},o=[n(459),n(475),n(474),n(419),n(440),n(438),n(473)];for(let r=0;r<o[n(480)];r++){const t=z.constructor[n(436)][n(454)](z),a=o[r],s=e[a]||t;t[n(430)]=z[n(454)](z),t[n(461)]=s[n(461)].bind(s),e[a]=t}}))();const j=[C(423),C(466),"color",C(482)],_=u({__name:C(477),setup(u){const x=C,z={clearColor:x(443),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(450),outsideColor:x(463)},_=new o(S[x(468)]),T=new o(S[x(431)]),A=new Float32Array(3*S[x(452)]),F=new Float32Array(3*S[x(452)]),k=new Float32Array(S.count),R=new Float32Array(3*S.count);for(let n=0;n<S[x(452)];n++){const t=3*n,e=Math.random()*S[x(445)],o=n%S[x(446)]*Math.PI*2/S[x(446)];A[t]=Math[x(447)](o)*e,A[t+1]=0,A[t+2]=Math[x(448)](o)*e;const a=Math.random()**S[x(437)]*(Math[x(434)]()<.5?-1:1),r=Math[x(434)]()**S[x(437)]*(Math.random()<.5?-1:1),s=Math[x(434)]()**S[x(437)]*(Math[x(434)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=_[x(470)]();i.lerp(T,e/S[x(445)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,k[n]=Math[x(434)]()}const H={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S[x(472)]}}};const O=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;O[t(476)]&&(O[t(476)][t(426)][t(427)][t(442)][t(476)]=n)}));const{count:L,size:U,radius:D,branches:J,spin:G,randomness:W,randomnessPower:Z,insideColor:$,outsideColor:B}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:x(463)});return m([L.value,U.value,D[x(476)],J[x(476)],G.value,W[x(476)],Z.value,$[x(476)],B[x(476)]],(n=>{n.forEach(((n,t)=>{const e=I;S[Object[e(425)](S)[t]]=n[e(476)]})),function(){const n=x;if(O[n(476)]){const t=new o(S[n(468)]),e=new o(S[n(431)]),a=new Float32Array(3*S[n(452)]),s=new Float32Array(3*S[n(452)]),i=new Float32Array(S[n(452)]),c=new Float32Array(3*S[n(452)]);for(let o=0;o<S[n(452)];o++){const r=3*o,l=Math[n(434)]()*S[n(445)],u=o%S[n(446)]*Math.PI*2/S[n(446)];a[r]=Math[n(447)](u)*l,a[r+1]=0,a[r+2]=Math[n(448)](u)*l;const d=Math[n(434)]()**S.randomnessPower*(Math[n(434)]()<.5?-1:1),m=Math.random()**S.randomnessPower*(Math[n(434)]()<.5?-1:1),f=Math[n(434)]()**S.randomnessPower*(Math[n(434)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(470)]();p.lerp(e,l/S[n(445)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}O[n(476)].geometry[n(471)](n(423),new r(a,3)),O[n(476)][n(483)][n(471)](n(428),new r(c,3)),O[n(476)].geometry[n(471)](n(449),new r(s,3)),O[n(476)][n(483)][n(471)](n(456),new r(i,1))}}()})),(n,t)=>{const e=x,o=f(e(424));return p(),h(b,null,[v(g(c)),v(o,P(y(z)),{default:w((()=>[t[0]||(t[0]=M("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),M(e(422),{ref_key:e(451),ref:O},[M(e(416),{position:[g(A),3],"a-scale":[g(k),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,j),M("TresShaderMaterial",P(y(H)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function I(n,t){const e=S();return(I=function(n,t){return e[n-=416]})(n,t)}function T(n){function t(n){const e=I;if(typeof n===e(465))return function(n){}[e(435)](e(421))[e(478)](e(433));1!==(""+n/n)[e(480)]||n%20==0?function(){return!0}[e(435)]("debu"+e(458))[e(464)]("action"):function(){return!1}[e(435)](e(457)+e(458))[e(478)](e(467)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_ as default};
