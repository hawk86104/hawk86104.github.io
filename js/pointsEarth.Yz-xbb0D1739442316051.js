import{ak as e,_ as n}from"./three.OosFxi571739442316051.js";import{e as t,o as a,a as o}from"./@tresjs.4XV_x0mI1739442316051.js";import{P as r}from"./tweakpane.yDiyAAkA1739442316051.js";import{d as i,a3 as l,v as s,e as u,o as c,f,g as v,N as p,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.NRI7TcgI1739442316051.js";import"./@vueuse.u4XqlOuT1739442316051.js";!function(e,n){const t=w,a=z();for(;;)try{if(316867===parseInt(t(442))/1*(-parseInt(t(463))/2)+-parseInt(t(462))/3+-parseInt(t(465))/4+-parseInt(t(432))/5+parseInt(t(440))/6+-parseInt(t(458))/7*(-parseInt(t(435))/8)+-parseInt(t(431))/9*(-parseInt(t(461))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(418)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=z();return(w=function(e,n){return t[e-=407]})(e,n)}!function(){y(this,(function(){const e=w,n=new RegExp(e(447)),t=new RegExp(e(411),"i"),a=_("init");n[e(446)](a+e(426))&&t[e(446)](a+e(450))?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(418)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();T(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function(e(422)+e(408)+");")()}catch(t){n=window}return n}(),t=n.console=n.console||{},a=["log",e(443),e(457),e(466),"exception",e(429),e(467)];for(let o=0;o<a.length;o++){const n=T[e(427)][e(409)][e(423)](T),r=a[o],i=t[r]||n;n[e(415)]=T[e(423)](T),n[e(424)]=i[e(424)][e(423)](i),t[r]=n}}))();const S=i({__name:"pointsEarth",async setup(i){const y=w;let T,S;const _={color:y(454),pointSize:4},z={clearColor:y(416),shadows:!1,alpha:!1,outputColorSpace:e},b={color:_[y(428)],wireframe:!0,transparent:!0,opacity:.2},j=([T,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),E=j[0],P=j[1],D=j[2],k=j[3],C=j[4],I={uniforms:{size:{type:"f",value:_[y(412)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:k},alphaTexture:{type:"t",value:C},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n[y(433)]},A=s(),W=s(),B=(new r)[y(451)]({title:y(444)});B.addBinding(_,y(428),{type:y(428)}).on(y(425),(({value:e})=>{const n=y;W[n(417)].color[n(437)](e)})),B.addBinding(I.uniforms[y(436)],y(417),{min:.1,max:10,step:.1,label:y(434)}),B.addBinding(I[y(448)][y(453)],"value",{min:.01,max:.5,step:.01,label:y(445)}),B[y(420)](I.uniforms[y(449)],"value",{min:.01,max:1,step:.01,label:y(456)});const{onLoop:M}=t();return M((({delta:e})=>{const n=y;A[n(417)]&&(A.value[n(419)].y+=.002,I.uniforms[n(410)][n(417)]+=10*e)})),(e,n)=>{const t=y,o=u(t(438));return c(),f(o,h(z,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=p("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),p("TresGroup",{ref_key:t(414),ref:A},[p(t(430),null,[n[0]||(n[0]=p("TresIcosahedronGeometry",{args:[1,4]},null,-1)),p("TresMeshBasicMaterial",h({ref_key:"wireframeMaterialRef",ref:W},b),null,16)]),p(t(407),null,[n[1]||(n[1]=p(t(455),{args:[1,128]},null,-1)),p(t(413),g(x(I)),null,16)])],512),n[3]||(n[3]=p("TresHemisphereLight",{args:[t(421),t(460),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=w;if(typeof e===t(452))return function(e){}[t(427)]("while (true) {}")[t(418)]("counter");1!==(""+e/e)[t(459)]||e%20==0?function(){return!0}.constructor(t(439)+"gger")[t(464)]("action"):function(){return!1}[t(427)](t(439)+t(441))[t(418)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}function z(){const e=["gger","126698FXlzCe","warn","Debug","海浪高度","test","function *\\( *\\)","uniforms","uWaveSpeed","input","addFolder","string","uWaveHeight","#17c5a9","TresIcosahedronGeometry","海浪变化速度","info","5579OUPZZp","length","#080820","1490wBwzMC","886404uamxCy","2EYQmuB","call","1023516NWwrLc","error","trace","TresPoints",'{}.constructor("return this")( )',"prototype","uTime","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","pointSize","TresShaderMaterial","groupRef","__proto__","#122148","value","apply","rotation","addBinding","#ffffff","return (function() ","bind","toString","change","chain","constructor","color","table","TresMesh","22608KKXNGo","199640fmroaX","FrontSide","粒子大小","4168qpnkye","size","set","TresCanvas","debu","1471890WdyAiY"];return(z=function(){return e})()}export{S as default};
