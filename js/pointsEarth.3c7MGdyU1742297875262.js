import{_ as e,ak as n}from"./three.N4lg2KsY1742297875262.js";import{e as t,o as a,a as o}from"./@tresjs.oW7bfow21742297875262.js";import{P as r}from"./tweakpane.yDiyAAkA1742297875262.js";import{d as i,a3 as l,v as s,e as u,o as c,f as p,g as v,N as f,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.NRI7TcgI1742297875262.js";import"./postprocessing.9PKUyDJ51742297875262.js";import"./@vueuse.Y8_DCJgq1742297875262.js";const y=b;!function(e,n){const t=b,a=z();for(;;)try{if(209718===parseInt(t(493))/1*(parseInt(t(521))/2)+parseInt(t(481))/3*(parseInt(t(503))/4)+-parseInt(t(472))/5+-parseInt(t(479))/6+parseInt(t(495))/7+parseInt(t(504))/8*(-parseInt(t(509))/9)+-parseInt(t(471))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(505)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){w(this,(function(){const e=b,n=new RegExp(e(469)),t=new RegExp(e(512),"i"),a=_(e(520));n[e(474)](a+e(477))&&t[e(474)](a+"input")?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(505)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function b(e,n){const t=z();return(b=function(e,n){return t[e-=466]})(e,n)}function z(){const e=["101592rZnQMa","value","259553LMQGag","uWaveSpeed","wireframeMaterialRef","TresMesh","粒子大小","uWaveHeight","stateObject","TresIcosahedronGeometry","4zzyGzz","27952XwJsJL","apply","table","__proto__","TresPerspectiveCamera","117sVnAYm","console","TresGroup","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","info","prototype","warn",'{}.constructor("return this")( )',"trace","海浪高度","size","init","8AGFpNH","length","exception","toString","海浪变化速度","uniforms","uTime","gger","debu","function *\\( *\\)","pointsEarth","2154570wumNmQ","1297915VbbnCX","Debug","test","color","addBinding","chain","TresCanvas","564480aNBFzN","rotation","1142439aMPBeA","error","constructor","#080820","pointSize","log","TresPoints","#17c5a9","FrontSide","change","bind","while (true) {}"];return(z=function(){return e})()}T(void 0,(function(){const e=b;let n;try{n=Function("return (function() "+e(516)+");")()}catch(o){n=window}const t=n[e(510)]=n[e(510)]||{},a=[e(486),e(515),e(513),e(482),e(523),e(506),e(517)];for(let r=0;r<a[e(522)];r++){const n=T[e(483)][e(514)].bind(T),o=a[r],i=t[o]||n;n[e(507)]=T[e(491)](T),n.toString=i[e(524)].bind(i),t[o]=n}}))();const S=i({__name:y(470),async setup(i){const w=y;let T,b;const z={color:w(488),pointSize:4},S={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:n},_={color:z.color,wireframe:!0,transparent:!0,opacity:.2},j=([T,b]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,b(),T),E=j[0],P=j[1],D=j[2],A=j[3],k=j[4],I={uniforms:{size:{type:"f",value:z[w(485)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[w(489)]},M=s(),C=s(),F=(new r).addFolder({title:w(473)});F[w(476)](z,w(475),{type:w(475)}).on(w(490),(({value:e})=>{const n=w;C.value[n(475)].set(e)})),F[w(476)](I[w(526)][w(519)],w(494),{min:.1,max:10,step:.1,label:w(499)}),F[w(476)](I[w(526)][w(500)],"value",{min:.01,max:.5,step:.01,label:w(518)}),F.addBinding(I[w(526)][w(496)],w(494),{min:.01,max:1,step:.01,label:w(525)});const{onLoop:H}=t();return H((({delta:e})=>{const n=w;M[n(494)]&&(M[n(494)][n(480)].y+=.002,I.uniforms[n(466)][n(494)]+=10*e)})),(e,n)=>{const t=w,o=u(t(478));return c(),p(o,h(S,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=f(t(508),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),f(t(511),{ref_key:"groupRef",ref:M},[f(t(498),null,[n[0]||(n[0]=f(t(502),{args:[1,4]},null,-1)),f("TresMeshBasicMaterial",h({ref_key:t(497),ref:C},_),null,16)]),f(t(487),null,[n[1]||(n[1]=f(t(502),{args:[1,128]},null,-1)),f("TresShaderMaterial",g(x(I)),null,16)])],512),n[3]||(n[3]=f("TresHemisphereLight",{args:["#ffffff",t(484),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=b;if("string"==typeof e)return function(e){}[t(483)](t(492))[t(505)]("counter");1!==(""+e/e).length||e%20==0?function(){return!0}.constructor(t(468)+"gger").call("action"):function(){return!1}[t(483)](t(468)+t(467))[t(505)](t(501)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{S as default};
