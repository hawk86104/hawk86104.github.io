import{bU as n,ak as t,am as e,C as o,aB as a,a as r}from"./three.bXjbKLxC1731379053498.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.bLKO3xyw1731379053498.js";import{d as u,b as f,w as d,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as P,F as y}from"./@vue.-THQH3GC1731379053498.js";import"./@vueuse.DWZrQ1Sl1731379053498.js";const C=T;function x(){const n=["TresBufferGeometry","string","#1b3984","material","constructor","trace","size","610264JpJHjb","setAttribute","TresCanvas","390804glykrY","input","radius","branches","__proto__","uTime","bufferRef","geometry","console","return (function() ","exception","value","bind","TresPerspectiveCamera","toString","549730fTBonf","debu","apply","gger","count","init","539160RMNAQV","21jakZbB","randomnessPower","outsideColor","chain","info","3GrOApf","insideColor","6vrnYsv","test","uniforms","14061553hDvaWq","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresShaderMaterial","prototype","lerp","log","clone","warn","132597qTrOZY","black","174440DLRAMk",'{}.constructor("return this")( )',"cos","random","aScale","100tkYRjQ","length","sin","position"];return(x=function(){return n})()}!function(n,t){const e=T,o=x();for(;;)try{if(275325===-parseInt(e(132))/1+-parseInt(e(159))/2+-parseInt(e(144))/3*(parseInt(e(117))/4)+-parseInt(e(138))/5*(-parseInt(e(146))/6)+parseInt(e(139))/7*(-parseInt(e(114))/8)+-parseInt(e(157))/9*(parseInt(e(164))/10)+parseInt(e(149))/11)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(134)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){z(this,(function(){const n=T,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(150),"i"),o=_(n(137));t.test(o+n(142))&&e[n(147)](o+n(118))?_():o("0")}))()}();const j=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function T(n,t){const e=x();return(T=function(n,t){return e[n-=113]})(n,t)}j(void 0,(function(){const n=T;let t;try{t=Function(n(126)+n(160)+");")()}catch(a){t=window}const e=t[n(125)]=t.console||{},o=[n(154),n(156),n(143),"error",n(127),"table",n(173)];for(let r=0;r<o[n(165)];r++){const t=j[n(172)][n(152)].bind(j),a=o[r],s=e[a]||t;t[n(121)]=j[n(129)](j),t[n(131)]=s.toString[n(129)](s),e[a]=t}}))();const A=[C(167),"a-scale","color","a-randomness"],S=u({__name:"galaxy",setup(u){const x=C,z={clearColor:x(158),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:x(170)},S=new o(j[x(145)]),_=new o(j[x(141)]),I=new Float32Array(3*j[x(136)]),F=new Float32Array(3*j[x(136)]),k=new Float32Array(j[x(136)]),R=new Float32Array(3*j[x(136)]);for(let n=0;n<j.count;n++){const t=3*n,e=Math[x(162)]()*j.radius,o=n%j[x(120)]*Math.PI*2/j[x(120)];I[t]=Math[x(161)](o)*e,I[t+1]=0,I[t+2]=Math[x(166)](o)*e;const a=Math[x(162)]()**j[x(140)]*(Math[x(162)]()<.5?-1:1),r=Math[x(162)]()**j[x(140)]*(Math[x(162)]()<.5?-1:1),s=Math.random()**j[x(140)]*(Math[x(162)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=S[x(155)]();i[x(153)](_,e/j[x(119)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,k[n]=Math.random()}const O={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[x(113)]}}};const B=f(null),{onLoop:Y}=s();Y((({elapsed:n})=>{const t=x;B[t(128)]&&(B[t(128)][t(171)][t(148)][t(122)].value=n)}));const{count:Z,size:D,radius:E,branches:J,spin:q,randomness:G,randomnessPower:L,insideColor:Q,outsideColor:U}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:x(170)});return d([Z.value,D[x(128)],E.value,J.value,q[x(128)],G[x(128)],L[x(128)],Q[x(128)],U[x(128)]],(n=>{n.forEach(((n,t)=>{const e=T;j[Object.keys(j)[t]]=n[e(128)]})),function(){const n=x;if(B[n(128)]){const t=new o(j[n(145)]),e=new o(j.outsideColor),a=new Float32Array(3*j[n(136)]),s=new Float32Array(3*j[n(136)]),i=new Float32Array(j.count),c=new Float32Array(3*j[n(136)]);for(let o=0;o<j[n(136)];o++){const r=3*o,l=Math[n(162)]()*j[n(119)],u=o%j[n(120)]*Math.PI*2/j[n(120)];a[r]=Math[n(161)](u)*l,a[r+1]=0,a[r+2]=Math[n(166)](u)*l;const f=Math[n(162)]()**j.randomnessPower*(Math[n(162)]()<.5?-1:1),d=Math[n(162)]()**j.randomnessPower*(Math.random()<.5?-1:1),m=Math[n(162)]()**j[n(140)]*(Math[n(162)]()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=t[n(155)]();p[n(153)](e,l/j[n(119)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}B.value[n(124)][n(115)]("position",new r(a,3)),B[n(128)][n(124)].setAttribute("aRandomness",new r(c,3)),B[n(128)][n(124)][n(115)]("color",new r(s,3)),B[n(128)].geometry[n(115)](n(163),new r(i,1))}}()})),(n,t)=>{const e=x,o=m(e(116));return p(),h(y,null,[v(g(c)),v(o,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(e(130),{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:e(123),ref:B},[M(e(168),{position:[g(I),3],"a-scale":[g(k),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,A),M(e(151),b(P(O)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function _(n){function t(n){const e=T;if(typeof n===e(169))return function(n){}[e(172)]("while (true) {}")[e(134)]("counter");1!==(""+n/n)[e(165)]||n%20==0?function(){return!0}[e(172)](e(133)+e(135)).call("action"):function(){return!1}[e(172)](e(133)+e(135))[e(134)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as default};
