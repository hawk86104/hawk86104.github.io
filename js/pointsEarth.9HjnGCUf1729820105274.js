import{_ as e,z as n}from"./three.0W5n8UBO1729820105274.js";import{U as t,Y as a,z as o}from"./@tresjs.S6PXiQcG1729820105274.js";import{P as r}from"./tweakpane.yHWGBmom1729820105274.js";import{d as i,a4 as l,Y as s,e as u,o as c,f as p,g as f,j as v,u as m,L as d,m as h,aj as g,ak as x}from"./@vue.bvMz0l_u1729820105274.js";import"./@vueuse.3M_MDcJc1729820105274.js";const y=j;!function(e,n){const t=j,a=P();for(;;)try{if(963849===parseInt(t(312))/1+parseInt(t(317))/2*(parseInt(t(331))/3)+-parseInt(t(358))/4*(-parseInt(t(371))/5)+-parseInt(t(369))/6+-parseInt(t(326))/7+-parseInt(t(373))/8*(parseInt(t(322))/9)+-parseInt(t(332))/10*(-parseInt(t(310))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(353)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=j,n=new RegExp(e(357)),t=new RegExp(e(336),"i"),a=D(e(356));n[e(330)](a+e(342))&&t[e(330)](a+"input")?D():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(353)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();w(void 0,(function(){const e=j;let n;try{n=Function(e(316)+e(366)+");")()}catch(o){n=window}const t=n[e(345)]=n.console||{},a=[e(367),e(313),e(311),e(327),e(325),e(314),e(339)];for(let r=0;r<a[e(370)];r++){const n=w[e(344)][e(349)][e(343)](w),o=a[r],i=t[o]||n;n[e(335)]=w[e(343)](w),n[e(354)]=i[e(354)][e(343)](i),t[o]=n}}))();const S=d("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),z=d(y(321),{args:[1,4]},null,-1),_=d(y(321),{args:[1,128]},null,-1),b=d(y(318),{args:[y(328),y(350),3]},null,-1);function j(e,n){const t=P();return(j=function(e,n){return t[e-=309]})(e,n)}const E=i({__name:y(340),async setup(i){const T=y;let w,j;const E={color:T(363),pointSize:4},P={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[T(309)]},D={color:E[T(338)],wireframe:!0,transparent:!0,opacity:.2},I=([w,j]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,j(),w),A=I[0],U=I[1],k=I[2],C=I[3],M=I[4],H={uniforms:{size:{type:"f",value:E.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:k},elevTexture:{type:"t",value:C},alphaTexture:{type:"t",value:M},earthTexture:{type:"t",value:A},starTexture:{type:"t",value:U}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},R=s(),W=s(),F=(new r).addFolder({title:T(359)});F.addBinding(E,T(338),{type:T(338)}).on(T(355),(({value:e})=>{const n=T;W[n(324)][n(338)][n(334)](e)})),F[T(319)](H[T(315)][T(374)],T(324),{min:.1,max:10,step:.1,label:T(333)}),F[T(319)](H[T(315)][T(352)],T(324),{min:.01,max:.5,step:.01,label:T(329)}),F[T(319)](H[T(315)][T(337)],T(324),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:L}=t();return L((({delta:e})=>{const n=T;R[n(324)]&&(R[n(324)].rotation.y+=.002,H[n(315)][n(365)][n(324)]+=10*e)})),(e,n)=>{const t=T,o=u(t(351));return c(),p(o,h(P,{"window-size":""}),{default:f((()=>[S,v(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(364),{ref_key:"groupRef",ref:R},[d(t(368),null,[z,d(t(362),h({ref_key:"wireframeMaterialRef",ref:W},D),null,16)]),d("TresPoints",null,[_,d(t(372),g(x(H)),null,16)])],512),b])),_:1},16)}}});function P(){const e=["2540836ghyrvi","Debug","counter","call","TresMeshBasicMaterial","#17c5a9","TresGroup","uTime",'{}.constructor("return this")( )',"log","TresMesh","3271002FgaMFV","length","5DJyazR","TresShaderMaterial","56cRIzBm","size","SRGBColorSpace","141097mGAVnJ","info","612761xxDHdY","warn","table","uniforms","return (function() ","2690PynWYN","TresHemisphereLight","addBinding","debu","TresIcosahedronGeometry","1439541IYLgAZ","stateObject","value","exception","5470591HrcjMV","error","#ffffff","海浪高度","test","1647gaDwOU","1110FKApUJ","粒子大小","set","__proto__","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uWaveSpeed","color","trace","pointsEarth","gger","chain","bind","constructor","console","string","while (true) {}","action","prototype","#080820","TresCanvas","uWaveHeight","apply","toString","change","init","function *\\( *\\)"];return(P=function(){return e})()}function D(e){function n(e){const t=j;if(typeof e===t(346))return function(e){}[t(344)](t(347))[t(353)](t(360));1!==(""+e/e)[t(370)]||e%20==0?function(){return!0}[t(344)](t(320)+"gger")[t(361)](t(348)):function(){return!1}[t(344)]("debu"+t(341)).apply(t(323)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
