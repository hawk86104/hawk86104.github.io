import{c0 as n,ak as t,am as e,C as o,aX as a,c as r}from"./three.sXv6UbbL1740621336114.js";import{e as s,I as i,K as c,o as u}from"./@tresjs.Td0X-dew1740621336114.js";import{d as l,b as d,w as m,e as f,o as p,H as h,j as v,u as w,g,N as M,aj as P,ak as C,F as b}from"./@vue.NRI7TcgI1740621336114.js";import"./@vueuse.cgJUSr_21740621336114.js";const y=I;function x(){const n=["branches","exception","lerp","action","1419DuVcnA","outsideColor","2769076muRIcT","2470512MJcmbC","#b5f28d","9150453mXNQMQ","table","call","bind","info","a-randomness","test","radius","464FImWUM","43866QUEprB","TresCanvas","prototype","aScale","gger","color","constructor","debu","galaxy","2082dJIhbp","random","#1b3984","length","cos","12761qkJszL","961181SjYMYD","black","toString","trace","clone","value","setAttribute","count","65NHknOu","10GxNNnS","geometry","stateObject","input","insideColor","apply","string","TresPoints",'{}.constructor("return this")( )',"uniforms","position","warn","material","36HPZKfi","chain","console","randomnessPower","__proto__"];return(x=function(){return n})()}!function(n,t){const e=I,o=x();for(;;)try{if(619141===parseInt(e(236))/1+-parseInt(e(230))/2*(-parseInt(e(207))/3)+-parseInt(e(209))/4+-parseInt(e(244))/5*(-parseInt(e(221))/6)+parseInt(e(235))/7*(parseInt(e(220))/8)+-parseInt(e(212))/9*(parseInt(e(245))/10)+-parseInt(e(210))/11*(-parseInt(e(198))/12))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=x();return(I=function(n,t){return e[n-=195]})(n,t)}!function(){z(this,(function(){const n=I,t=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=j("init");t[n(218)](o+n(199))&&e[n(218)](o+n(248))?j():o("0")}))()}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(250)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();S(void 0,(function(){const n=I;let t;try{t=Function("return (function() "+n(253)+");")()}catch(a){t=window}const e=t[n(200)]=t.console||{},o=["log",n(196),n(216),"error",n(204),n(213),n(239)];for(let r=0;r<o[n(233)];r++){const t=S.constructor[n(223)][n(215)](S),a=o[r],s=e[a]||t;t[n(202)]=S.bind(S),t[n(238)]=s[n(238)][n(215)](s),e[a]=t}}))();const T=[y(195),"a-scale",y(226),y(217)],_=l({__name:y(229),setup(l){const x=y,z={clearColor:x(237),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},I={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(211),outsideColor:x(232)},S=new o(I.insideColor),_=new o(I[x(208)]),j=new Float32Array(3*I[x(243)]),A=new Float32Array(3*I[x(243)]),F=new Float32Array(I[x(243)]),k=new Float32Array(3*I.count);for(let n=0;n<I.count;n++){const t=3*n,e=Math.random()*I.radius,o=n%I[x(203)]*Math.PI*2/I[x(203)];j[t]=Math[x(234)](o)*e,j[t+1]=0,j[t+2]=Math.sin(o)*e;const a=Math.random()**I[x(201)]*(Math[x(231)]()<.5?-1:1),r=Math[x(231)]()**I.randomnessPower*(Math[x(231)]()<.5?-1:1),s=Math[x(231)]()**I[x(201)]*(Math[x(231)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=S[x(240)]();i[x(205)](_,e/I.radius),A[t+0]=i.r,A[t+1]=i.g,A[t+2]=i.b,F[n]=Math[x(231)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:I.size}}};const N=d(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=x;N[t(241)]&&(N[t(241)][t(197)][t(254)].uTime.value=n)}));const{count:E,size:H,radius:J,branches:Q,spin:Z,randomness:B,randomnessPower:D,insideColor:G,outsideColor:K}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:x(232)});return m([E.value,H.value,J[x(241)],Q[x(241)],Z.value,B.value,D[x(241)],G[x(241)],K[x(241)]],(n=>{n.forEach(((n,t)=>{I[Object.keys(I)[t]]=n.value})),function(){const n=x;if(N[n(241)]){const t=new o(I[n(249)]),e=new o(I[n(208)]),a=new Float32Array(3*I[n(243)]),s=new Float32Array(3*I[n(243)]),i=new Float32Array(I.count),c=new Float32Array(3*I.count);for(let o=0;o<I.count;o++){const r=3*o,u=Math[n(231)]()*I.radius,l=o%I[n(203)]*Math.PI*2/I[n(203)];a[r]=Math[n(234)](l)*u,a[r+1]=0,a[r+2]=Math.sin(l)*u;const d=Math[n(231)]()**I[n(201)]*(Math.random()<.5?-1:1),m=Math.random()**I[n(201)]*(Math.random()<.5?-1:1),f=Math[n(231)]()**I.randomnessPower*(Math[n(231)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(240)]();p.lerp(e,u/I[n(219)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math[n(231)]()}N[n(241)][n(246)][n(242)](n(195),new r(a,3)),N.value[n(246)][n(242)]("aRandomness",new r(c,3)),N.value[n(246)][n(242)](n(226),new r(s,3)),N[n(241)][n(246)][n(242)](n(224),new r(i,1))}}()})),(n,t)=>{const e=x,o=f(e(222));return p(),h(b,null,[v(w(c)),v(o,P(C(z)),{default:g((()=>[t[0]||(t[0]=M("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),M(e(252),{ref_key:"bufferRef",ref:N},[M("TresBufferGeometry",{position:[w(j),3],"a-scale":[w(F),1],color:[w(A),3],"a-randomness":[w(k),3]},null,8,T),M("TresShaderMaterial",P(C(R)),null,16)],512),v(w(u))])),_:1},16)],64)}}});function j(n){function t(n){const e=I;if(typeof n===e(251))return function(n){}[e(227)]("while (true) {}")[e(250)]("counter");1!==(""+n/n)[e(233)]||n%20==0?function(){return!0}[e(227)](e(228)+e(225))[e(214)](e(206)):function(){return!1}[e(227)](e(228)+e(225))[e(250)](e(247)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_ as default};
