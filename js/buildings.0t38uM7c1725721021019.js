import{u as t,_ as n,a as o}from"./mergeTres.B__6a-US1725721021019.js";import{l as r}from"./utils.topX00vP1725721021019.js";import{$ as e}from"./@tresjs.bIWdfO9a1725721021019.js";import{d as a,r as i,a2 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue._6MD2XyK1725721021019.js";import{_ as x}from"./@fesjs.ozYBrZAq1725721021019.js";import"./@amap.9EMhYPgf1725721021019.js";import"./pinia.U_UMJ01N1725721021019.js";import"./three.a9V66irq1725721021019.js";import"./three-mesh-bvh.ysdIJ9eS1725721021019.js";import"./tweakpane.yHWGBmom1725721021019.js";import"./@vueuse.Ex-1AOlz1725721021019.js";import"./vue-router._EXpxh631725721021019.js";import"./lodash-es.kYt-_xTG1725721021019.js";import"./@qlin.yHhFDldE1725721021019.js";import"./@floating-ui.BPbuo5Gx1725721021019.js";import"./@juggle.7yjBMqoW1725721021019.js";const b=w;function w(t,n){const o=j();return(w=function(t,n){return o[t-=340]})(t,n)}!function(t,n){const o=w,r=j();for(;;)try{if(933894===parseInt(o(374))/1*(-parseInt(o(352))/2)+-parseInt(o(357))/3*(parseInt(o(364))/4)+parseInt(o(382))/5*(-parseInt(o(345))/6)+-parseInt(o(394))/7*(-parseInt(o(373))/8)+parseInt(o(355))/9*(-parseInt(o(356))/10)+parseInt(o(362))/11*(parseInt(o(402))/12)+parseInt(o(405))/13*(parseInt(o(391))/14))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function j(){const t=["uniforms","14495pViJPx","warn","push","normal","near","buildingModels","402342TGqyjg","debu","apply","TresShaderMaterial","u_near","input","getZoom","561258MiPrMc","string","log","9KTMBvS","719660CvLOQG","3jvLPsf","bind","length","uvArray","TresMesh","11jLpnbH","return (function() ","2086088adtlbf","stateObject","TresGroup","call","atan","TresBufferGeometry","table","exp","lngLatToCoord","1906208ZFFvWL","1dNJmrb","u_far","faceUv","position","mapHandle","u_zoom","exception","toString","135NxptRI","positionArray","geometry","prototype","cameraState","constructor","function *\\( *\\)","test","init","24808PbPpXF","__proto__","action","28jdylZw","trace","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","while (true) {}","error","gger","customCoords","counter","8275992NFDRQy","value"];return(j=function(){return t})()}!function(){I(this,(function(){const t=w,n=new RegExp(t(388)),o=new RegExp(t(396),"i"),r=R(t(390));n[t(389)](r+"chain")&&o[t(389)](r+t(350))?R():r("0")}))()}();const S=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[w(347)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();S(void 0,(function(){const t=w;let n;try{n=Function(t(363)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n.console=n.console||{},r=[t(354),t(340),"info",t(398),t(380),t(370),t(395)];for(let a=0;a<r[t(359)];a++){const n=S[t(387)][t(385)].bind(S),e=r[a],i=o[e]||n;n[t(392)]=S[t(358)](S),n[t(381)]=i[t(381)][t(358)](i),o[e]=n}}))();const z=[b(377),b(376),b(342)],P=a({__name:b(344),setup(n){const o=t(),a=t=>{const n=w;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(378)].customCoords[n(372)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[w(386)]&&(async()=>{const t=w,n=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","buildings");for(let o=0;o<n[t(359)];o++){const r=n[o];a(r[t(384)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(376)]),l=new Float32Array(r[t(384)][t(359)]);d[t(341)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=w;o[t(386)]&&(g.uniforms[t(379)][t(403)]=o[t(378)][t(351)](),g[t(404)][t(349)].value=o[t(386)][t(343)],g.uniforms[t(375)][t(403)]=o[t(386)].far)})),(t,n)=>{const o=w;return c(),s(o(366),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(361),{key:""+n},[p(r(369),{ref_for:!0,ref:"tbgRef",position:[t[r(383)],3],faceUv:[t[r(360)],2],normal:[t.normalArray,3]},null,8,z),p(r(348),v({ref_for:!0},g),null,16)])})),128))])}}});function R(t){function n(t){const o=w;if(typeof t===o(353))return function(t){}.constructor(o(397))[o(347)](o(401));1!==(""+t/t)[o(359)]||t%20==0?function(){return!0}.constructor(o(346)+o(399))[o(367)](o(393)):function(){return!1}[o(387)](o(346)+"gger")[o(347)](o(365)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function L(){const t=["3AGLRLW","tresCanvas","__proto__","TresAmbientLight","prototype","action","string","775ShBtcG","523768MqLZvz","console","bind","716306RYkBnP","buildings","1950515EUbqPZ","data-v-40288e17","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","log","2891180RONvBO","toString","chain","7730190jkoRty","TresPerspectiveCamera","8aNQYQL","counter","8854371AnwUpP","trace","stateObject","table","error","test","info","warn","function *\\( *\\)","apply","constructor","return (function() ",'{}.constructor("return this")( )',"while (true) {}","init","tcRef","exception","length","10284SRKLWb"];return(L=function(){return t})()}const F=M;!function(t,n){const o=M,r=L();for(;;)try{if(492641===parseInt(o(243))/1+-parseInt(o(246))/2*(-parseInt(o(235))/3)+-parseInt(o(252))/4+-parseInt(o(242))/5*(-parseInt(o(234))/6)+parseInt(o(248))/7+-parseInt(o(214))/8*(parseInt(o(216))/9)+parseInt(o(212))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function M(t,n){const o=L();return(M=function(t,n){return o[t-=211]})(t,n)}!function(){A(this,(function(){const t=M,n=new RegExp(t(224)),o=new RegExp(t(250),"i"),r=E(t(230));n.test(r+t(211))&&o[t(221)](r+"input")?E():r("0")}))()}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[M(225)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();U(void 0,(function(){const t=M,n=function(){const t=M;let n;try{n=Function(t(227)+t(228)+");")()}catch(o){n=window}return n}(),o=n[t(244)]=n[t(244)]||{},r=[t(251),t(223),t(222),t(220),t(232),t(219),t(217)];for(let e=0;e<r[t(233)];e++){const n=U[t(226)][t(239)].bind(U),a=r[e],i=o[a]||n;n[t(237)]=U[t(245)](U),n[t(253)]=i[t(253)].bind(i),o[a]=n}}))();const W=t=>(y(F(249)),t=t(),C(),t),k=W((()=>p(F(213),{fov:60,near:.1,far:2e3},null,-1))),N=W((()=>p(F(238),{intensity:.5},null,-1)));function E(t){function n(t){const o=M;if(typeof t===o(241))return function(t){}.constructor(o(229))[o(225)](o(215));1!==(""+t/t)[o(233)]||t%20==0?function(){return!0}.constructor("debugger").call(o(240)):function(){return!1}[o(226)]("debugger")[o(225)](o(218)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const T=x(a({__name:F(247),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=M,l=d("TresCanvas");return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(236),ref:i(231)},e),{default:m((()=>[k,N,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{T as default};
