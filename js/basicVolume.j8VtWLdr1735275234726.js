import{m as n,e as t,U as e}from"./@tresjs.fCqPNEAw1735275234726.js";import{_ as r,a3 as o}from"./three.jpi2UCEx1735275234726.js";import{P as a}from"./tweakpane.yHWGBmom1735275234726.js";import{d as i,b as c,r as l,w as u,q as s,o as p,D as m,J as v,u as f,e as _,x as g,j as d,g as h,aj as x,ak as y,f as b,al as S,m as w,F as z}from"./@vue.u2cBPEWn1735275234726.js";import{_ as j}from"./@fesjs.Okr_vpx41735275234726.js";import"./@vueuse.8jEBPPFT1735275234726.js";import"./vue-router.bq4JfoTS1735275234726.js";import"./lodash-es.guXTxyfJ1735275234726.js";import"./@qlin.yHhFDldE1735275234726.js";import"./pinia.BXllYoho1735275234726.js";import"./vue-demi.C4xddsk91735275234726.js";import"./@floating-ui.BPbuo5Gx1735275234726.js";import"./@juggle.7yjBMqoW1735275234726.js";const I=P;!function(n,t){const e=P,r=O();for(;;)try{if(222194===-parseInt(e(398))/1+parseInt(e(395))/2+-parseInt(e(387))/3*(parseInt(e(381))/4)+-parseInt(e(403))/5+-parseInt(e(400))/6+parseInt(e(390))/7+parseInt(e(374))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const D=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[P(383)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){D(this,(function(){const n=P,t=new RegExp(n(388)),e=new RegExp(n(384),"i"),r=F("init");t[n(377)](r+n(407))&&e.test(r+n(399))?F():r("0")}))()}();const k=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[P(383)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();k(void 0,(function(){const n=P;let t;try{t=Function("return (function() "+n(371)+");")()}catch(o){t=window}const e=t[n(362)]=t[n(362)]||{},r=[n(360),n(361),n(402),n(393),n(409),"table",n(370)];for(let a=0;a<r[n(378)];a++){const t=k[n(411)][n(394)][n(420)](k),o=r[a],i=e[o]||t;t[n(363)]=k[n(420)](k),t[n(359)]=i[n(359)][n(420)](i),e[o]=t}}))();const V=["rotation-x"],M=[I(380),"vertexShader",I(364)];function O(){const n=["addBinding","bind","gger","debu","TresShaderMaterial","u_time","toString","log","warn","console","__proto__","fragmentShader","u_volume","while (true) {}","Vector3","Error fetching volume data:","addFolder","trace",'{}.constructor("return this")( )',"isoValue","start","3467480RGulbl","RedFormat","stateObject","test","length","Cross Section Settings","uniforms","4nHDOUV","format","apply","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","LinearFilter","wrapT","80211cRUcYb","function *\\( *\\)","meshRef","1328691rgPzTL","action","value","error","prototype","342698gnsYAa","needsUpdate","Clock","421909hQFWIJ","input","37986lJZyek","color","info","587130UiETPK","u_color","TresMesh","catch","chain","Data3DTexture","exception","then","constructor","magFilter","innerHeight","basicVolumeRendering","minFilter","Display Settings","innerWidth","position"];return(O=function(){return n})()}function P(n,t){const e=O();return(P=function(n,t){return e[n-=359]})(n,t)}const R=41,A=i({__name:I(414),setup(e){var i;const _=I,g=window[_(417)],d=window[_(413)],h=c(null),x=c(null),y=new(r[_(397)]);y[_(373)]();const b=(new a)[_(369)]({title:_(416)}),S=b.addFolder({title:_(379)}),w=new(r[_(367)])(.5,.5,.5);S[_(419)](w,"x",{label:"X",min:.02,max:.5,step:.02}),S.addBinding(w,"y",{label:"Y",min:.02,max:.5,step:.02}),S[_(419)](w,"z",{label:"Z",min:.02,max:.5,step:.02}),S.expanded=!0;const{camera:z}=n(),j=l({u_camera:{value:null==(i=z[_(392)])?void 0:i[_(418)]},u_resolution:{value:new(r[_(367)])(g,d,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:w},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),D=b[_(369)]({title:"Algorithm Settings"});D[_(419)](j.u_dt,"value",{label:"dt",min:4e-4,max:.016,step:2e-4}),D.addBinding(j[_(404)],_(392),{label:_(401),min:1,max:3,step:1}),D[_(419)](j.u_alphaVal,_(392),{label:"alphaVal",min:.01,max:1,step:.01}),D[_(419)](j.u_isoValue,_(392),{label:_(372),min:0,max:1,step:.04}),u(x,(n=>{const t=_;if(n){const e=new(r[t(408)])(n,R,R,R);e[t(382)]=r[t(375)],e[t(415)]=r[t(385)],e[t(412)]=r[t(385)],e[t(386)]=o,e[t(396)]=!0,j[t(365)][t(392)]=e}}));const{onLoop:k}=t();return k((()=>{const n=_;j[n(424)][n(392)]=y.getElapsedTime()})),s((()=>{(()=>{const n=_;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw").then((n=>n.arrayBuffer()))[n(410)]((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r.length;n++)o[n]=r[n];x[e(392)]=o}))[n(406)]((t=>{const e=n;console[e(393)](e(368),t)}))})()})),(n,t)=>{const e=_;return p(),m(e(405),{ref_key:e(389),ref:h,"rotation-x":Math.PI/-2},[t[0]||(t[0]=v("TresSphereGeometry",{args:[1,16,16]},null,-1)),v(e(423),{uniforms:j,vertexShader:f("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:f("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,M)],8,V)}}});function F(n){function t(n){const e=P;if("string"==typeof n)return function(n){}[e(411)](e(366))[e(383)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(411)](e(422)+e(421)).call(e(391)):function(){return!1}[e(411)](e(422)+e(421))[e(383)](e(376)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=E;!function(n,t){const e=E,r=C();for(;;)try{if(684886===parseInt(e(485))/1+parseInt(e(498))/2*(-parseInt(e(507))/3)+-parseInt(e(478))/4+-parseInt(e(470))/5+parseInt(e(501))/6+parseInt(e(487))/7*(-parseInt(e(472))/8)+parseInt(e(476))/9*(parseInt(e(484))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){L(this,(function(){const n=E,t=new RegExp(n(500)),e=new RegExp(n(489),"i"),r=U(n(468));t.test(r+n(511))&&e[n(475)](r+n(509))?U():r("0")}))()}();const Z=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[E(510)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function C(){const n=["input","apply","chain","init","TresGridHelper","5512775coTttA","gger","1234576oZbNat","div"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw ","test","2757789EZZeAp","debu","2269460pXScCI","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","TresAmbientLight","call","info","while (true) {}","70aKJtIg","570106UAiSgA","#201919","28cDSmyq","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","exception","table","prototype","toString","TresPerspectiveCamera","__proto__","basicVolume","trace","4QXKwFi","_blank","function *\\( *\\)","4039266tRMKYx","string","constructor","bind","console","counter","624255KwoqvO","log"];return(C=function(){return n})()}function E(n,t){const e=C();return(E=function(n,t){return e[n-=468]})(n,t)}Z(void 0,(function(){const n=E,t=function(){const n=E;let t;try{t=Function(n(488)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t[n(505)]=t[n(505)]||{},r=[n(508),"warn",n(482),"error",n(490),n(491),n(497)];for(let o=0;o<r.length;o++){const t=Z[n(503)][n(492)].bind(Z),a=r[o],i=e[a]||t;t[n(495)]=Z[n(504)](Z),t[n(493)]=i.toString[n(504)](i),e[a]=t}}))();function U(n){function t(n){const e=E;if(typeof n===e(502))return function(n){}[e(503)](e(483))[e(510)](e(506));1!==(""+n/n).length||n%20==0?function(){return!0}[e(503)](e(477)+e(471))[e(481)]("action"):function(){return!1}[e(503)](e(477)+e(471)).apply("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const q=j(i({__name:T(496),setup(n){const t=l({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=l({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=E,i=_("TresCanvas");return p(),m(z,null,[o[3]||(o[3]=v(a(473),{class:a(482)},[v("a",{href:a(479),target:a(499)},a(474)),v("br"),g(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),d(i,w({clearColor:a(486)},t),{default:h((()=>[o[0]||(o[0]=v(a(494),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=v(a(480),{intensity:2},null,-1)),d(f(e),x(y(r)),null,16),(p(),b(S,null,{default:h((()=>[d(A,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=v(a(469),{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{q as default};
