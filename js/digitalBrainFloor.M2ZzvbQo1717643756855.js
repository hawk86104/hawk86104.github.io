import{a5 as S,a6 as o,au as k,aH as v,a7 as x,a8 as T,a9 as P,r as R,o as n,c as $,a as l,T as r,J as f,ac as c,K as z,ag as J,ae as g,af as h,a1 as _,C as d,a2 as p,ak as M}from"./vendor.iBV-vwSJ1717643756855.js";import{O as N,l as O}from"./util.K2EcU_So1717643756855.js";import{_ as G}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.ba2v7PbY1717643756855.js";/* empty css                                                                                 */import{_ as L}from"./randomLoading.vue_vue_type_script_setup_true_lang.Tc-f9qNn1717643756855.js";import{_ as V}from"./cloudPoints.vue_vue_type_script_setup_true_lang.e8lEP4JW1717643756855.js";import{_ as A,a as F}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.hjZmwHZm1717643756855.js";import"./Reflector.tD_C3sdV1717643756855.js";import"./starLoading.dWV4fsEh1717643756855.js";import"./cssLoaders.eivDI6V11717643756855.js";import"./bubbleLoading.SfumyIEd1717643756855.js";import"./BufferGeometryUtils.0qcmfQC61717643756855.js";const E=_("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),H=_("TresAmbientLight",{intensity:.5},null,-1),K={position:[0,120,0]},j="./plugins/medical/model/brainparts.OBJ",ra=S({__name:"digitalBrainFloor",async setup(q){let i,u;const w=o({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),e=o({color:"#fff",show:!0,opacity:1}),a=new k({title:"参数"});a.addBinding(e,"show",{label:"点云显示"}),a.addBinding(e,"color",{label:"点云颜色"}),a.addBinding(e,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const t=o({color:"#84ccff",show:!0,opacity:1});a.addBinding(t,"show",{label:"脑轮廓显示"}),a.addBinding(t,"color",{label:"脑轮廓颜色"}),a.addBinding(t,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const s=o({color:"#9e00af",show:!0,opacity:1});a.addBinding(s,"show",{label:"脑组织显示"}),a.addBinding(s,"color",{label:"脑组织颜色"}),a.addBinding(s,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const B=new N,m=([i,u]=v(()=>O(j,B)),i=await i,u(),i),C=o({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:x,outputColorSpace:T,toneMapping:P}),b=o({autoRotate:!0,autoRotateSpeed:2});return(D,I)=>{const y=R("TresCanvas");return n(),$(z,null,[l(r(L)),l(y,c(C,{"window-size":""}),{default:f(()=>[E,l(r(J),g(h(b)),null,16),H,_("TresGroup",K,[e.show?(n(),d(V,c({key:0,model:r(m)},e),null,16,["model"])):p("",!0),(n(),d(M,null,{default:f(()=>[t.show?(n(),d(A,c({key:0,model:r(m)},t),null,16,["model"])):p("",!0)]),_:1})),s.show?(n(),d(F,c({key:1,model:r(m)},s),null,16,["model"])):p("",!0)]),l(G,g(h(w)),null,16)]),_:1},16)],64)}}});export{ra as default};
