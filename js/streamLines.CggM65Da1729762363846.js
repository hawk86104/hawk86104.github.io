import{Y as t}from"./@tresjs.CmAaFQUS1729762363846.js";import{P as n}from"./tweakpane.BCjFYDHx1729762363846.js";import{a as s}from"./index.BDIKs_XA1729762363846.js";import{_ as e}from"./streamLine.vue_vue_type_script_setup_true_lang.B35TVswk1729762363846.js";import{g as r}from"./utils.BKAEJ67Y1729762363846.js";import{d as o,r as i,a5 as a,e as l,o as u,f as c,g as p,j as m,u as f,al as j,aj as d,ak as h,m as g,L as b}from"./@vue.n8X62v121729762363846.js";import"./three.CQvcOG671729762363846.js";import"./@vueuse.DvZn62wO1729762363846.js";import"./@fesjs.CZZ05Yp51729762363846.js";import"./vue-router.Du5s6fg51729762363846.js";import"./lodash-es.BBTWvufR1729762363846.js";import"./@qlin.BIlp8Yi21729762363846.js";import"./pinia.DOkF60i-1729762363846.js";import"./@babel.Bwyie5id1729762363846.js";import"./@amap.irWeW_Ar1729762363846.js";import"./@floating-ui.B75jtkXD1729762363846.js";import"./@juggle.BnTvdTVm1729762363846.js";import"./chalk.B3MNILV41729762363846.js";/* empty css                                 */import"./iconify-icon.DK1S_nhj1729762363846.js";import"./@iconify.DKvOo9eU1729762363846.js";import"./oimophysics.B0i2NtyE1729762363846.js";import"./three-stdlib.CqKdLpwa1729762363846.js";import"./@pmndrs.DnYI6N3H1729762363846.js";import"./object-hash.BiCA96VN1729762363846.js";import"./jszip.B5yG0Hpd1729762363846.js";import"./three-custom-shader-material.CWa5qaDo1729762363846.js";import"./glsl-tokenizer.DodQ2RCy1729762363846.js";import"./glsl-token-string.Eyit8_HG1729762363846.js";import"./glsl-token-functions.D2Lt0tGo1729762363846.js";import"./three.quarks.BQqMGnDH1729762363846.js";import"./quarks.core.C7CDonSm1729762363846.js";import"./@tweenjs.l_ZFvaN51729762363846.js";import"./utils.g_yV3y2C1729762363846.js";import"./three-mesh-bvh.B7v5qCD_1729762363846.js";import"./d3-geo.7JUgQZ7N1729762363846.js";import"./d3-array.CKz3hFNy1729762363846.js";const _=k;!function(t,n){const s=k,e=I();for(;;)try{if(864731===-parseInt(s(201))/1+parseInt(s(194))/2*(-parseInt(s(187))/3)+-parseInt(s(206))/4+-parseInt(s(174))/5+parseInt(s(210))/6*(-parseInt(s(213))/7)+parseInt(s(202))/8*(parseInt(s(212))/9)+parseInt(s(173))/10*(parseInt(s(179))/11))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const w=function(){let t=!0;return function(n,s){const e=t?function(){if(s){const t=s[k(219)](n,arguments);return s=null,t}}:function(){};return t=!1,e}}();!function(){w(this,(function(){const t=k,n=new RegExp(t(181)),s=new RegExp(t(185),"i"),e=S(t(211));n[t(217)](e+"chain")&&s.test(e+t(191))?S():e("0")}))()}();const y=function(){let t=!0;return function(n,s){const e=t?function(){if(s){const t=s[k(219)](n,arguments);return s=null,t}}:function(){};return t=!1,e}}();function k(t,n){const s=I();return(k=function(t,n){return s[t-=173]})(t,n)}y(void 0,(function(){const t=k;let n;try{n=Function(t(195)+t(222)+");")()}catch(r){n=window}const s=n[t(197)]=n[t(197)]||{},e=[t(205),"warn",t(199),"error",t(218),t(189),t(183)];for(let o=0;o<e[t(220)];o++){const n=y[t(224)][t(200)][t(221)](y),r=e[o],i=s[r]||n;n[t(209)]=y[t(221)](y),n[t(208)]=i.toString[t(221)](i),s[r]=n}}))();const v=b("TresPerspectiveCamera",{position:[25,25,25],fov:45,near:.1,far:1e4},null,-1),x=o({__name:_(177),async setup(o){const b=_;let w,y;const k=i({reflectivity:.1,showGridHelper:!1,scale:5}),x=i({color:b(215),radius:.2,speed:1,tubularSegments:64,radialSegments:6,closed:!1,clockwise:!1,fewNum:1,linesList:[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[13,0,15]]}),I=new n;I[b(193)](x,b(204),{label:"流光颜色"}),I[b(193)](x,b(192),{label:b(176),min:.01,max:1,step:.01}),I[b(193)](x,b(184),{label:b(223),min:.1,max:10,step:.1}),I[b(193)](x,"tubularSegments",{label:b(182),min:1,max:100,step:1}),I[b(193)](x,b(225),{label:b(180),min:1,max:20,step:1}),I[b(193)](x,"closed",{label:b(186)}),I[b(193)](x,b(188),{label:b(207)}),I.addBinding(x,b(175),{label:"流线数量",min:1,max:10,step:1});const S=([w,y]=a((()=>r("./plugins/simpleGIS/json/320000_full.json"))),w=await w,y(),w);return(n,r)=>{const o=b,i=l("TresCanvas");return u(),c(i,{clearColor:o(196),"window-size":""},{default:p((()=>[v,m(f(t),{enableDamping:"",autoRotate:""}),(u(),c(j,null,{default:p((()=>[m(e,d(h(x)),null,16)])),_:1})),(u(),c(j,null,{default:p((()=>[m(e,{linesList:f(S),position:[0,0,-4]},null,8,[o(216)])])),_:1})),(u(),c(j,null,{default:p((()=>[m(f(s),g({position:[0,-.5,0]},k),null,16)])),_:1}))])),_:1})}}});function I(){const t=["stateObject","color","log","2089652zJWmhh","顺时针流动","toString","__proto__","12GKXnlv","init","2795895CBEfHf","616126ShmzhG","action","#bd01ff","linesList","test","exception","apply","length","bind",'{}.constructor("return this")( )',"跑动速度","constructor","radialSegments","120lcpPsu","3332700rQHxxn","fewNum","管道半径","streamLines","call","4186622yFrBss","管道壁圆润","function *\\( *\\)","管道路径平滑","trace","speed","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","闭合管道","3lqQcsX","clockwise","table","gger","input","radius","addBinding","3367898CmQkXe","return (function() ","#201919","console","counter","info","prototype","1274865VOtZqC","16mtiBCW"];return(I=function(){return t})()}function S(t){function n(t){const s=k;if("string"==typeof t)return function(t){}[s(224)]("while (true) {}")[s(219)](s(198));1!==(""+t/t)[s(220)]||t%20==0?function(){return!0}[s(224)]("debu"+s(190))[s(178)](s(214)):function(){return!1}[s(224)]("debu"+s(190))[s(219)](s(203)),n(++t)}try{if(t)return n;n(0)}catch(s){}}export{x as default};
