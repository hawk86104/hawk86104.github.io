import{cf as s,N as a,_ as o,ce as e}from"./three.DOaOWaa_1752457528298.js";import{a as t}from"./@tresjs.CutcgRLX1752457528298.js";import{P as i}from"./tweakpane.C0HtAJSg1752457528298.js";import"./index.CEkoY90U1752457528298.js";import{l}from"./util.CygnVFDe1752457528298.js";import{_ as r}from"./cloudPoints.vue_vue_type_script_setup_true_lang.ALJykY3-1752457528298.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.DheFmHp71752457528298.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.TXwGU1WL1752457528298.js";import{d as m,r as u,a9 as c,h as j,G as g,o as f,j as _,u as b,f as h,I as w,a6 as y,a7 as v,e as B,H as k,m as x,a4 as L,F as T}from"./@vue.CcDZ19ef1752457528298.js";import"./postprocessing.BhLg8VAN1752457528298.js";import"./@vueuse.D5pFWdqo1752457528298.js";import"./utils.BMJFJ69p1752457528298.js";import"./@fesjs.t5OnzKcQ1752457528298.js";import"./vue-router.8pdmj1nv1752457528298.js";import"./lodash-es.C7pWAXPe1752457528298.js";import"./@qlin.q6OWdsQV1752457528298.js";import"./pinia.D2lIig6I1752457528298.js";import"./@babel.BPq7uOAK1752457528298.js";import"./@floating-ui.BFjFSAYt1752457528298.js";import"./@juggle.CcBCnTIR1752457528298.js";import"./index.28NlFPHI1752457528298.js";import"./three-mesh-ui.module.BXFGKuQq1752457528298.js";import"./starLoading.GAPnrgZ31752457528298.js";import"./cssLoaders.xDiDlJ0_1752457528298.js";import"./bubbleLoading.B49UHpwD1752457528298.js";import"./yangyangLoading.BBO92wuf1752457528298.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,P;const E=u({color:"#fff",show:!0,opacity:1}),F=new i({title:"参数"});F.addBinding(E,"show",{label:"点云显示"}),F.addBinding(E,"color",{label:"点云颜色"}),F.addBinding(E,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const H=u({color:"#84ccff",show:!0,opacity:1});F.addBinding(H,"show",{label:"脑轮廓显示"}),F.addBinding(H,"color",{label:"脑轮廓颜色"}),F.addBinding(H,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const M=u({color:"#9e00af",show:!0,opacity:1});F.addBinding(M,"show",{label:"脑组织显示"}),F.addBinding(M,"color",{label:"脑组织颜色"}),F.addBinding(M,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const R=new s,S=([G,P]=c((()=>l("./plugins/medical/model/brainparts.OBJ",R))),G=await G,P(),G),q=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a}),z=u({autoRotate:!0,autoRotateSpeed:2});return(s,a)=>{const o=j("TresCanvas");return f(),g(T,null,[_(b(d)),_(o,x(q,{"window-size":""}),{default:h((()=>[a[0]||(a[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),_(b(t),y(v(z)),null,16),a[1]||(a[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",C,[E.show?(f(),B(r,x({key:0,model:b(S)},E),null,16,["model"])):k("",!0),(f(),B(L,null,{default:h((()=>[H.show?(f(),B(n,x({key:0,model:b(S)},H),null,16,["model"])):k("",!0)])),_:1})),M.show?(f(),B(p,x({key:1,model:b(S)},M),null,16,["model"])):k("",!0)]),a[2]||(a[2]=w("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
