import{u as t,_ as n,a as o}from"./mergeTres.9-9R3cJl1723608367756.js";import{l as r}from"./utils.7CWG20CN1723608367756.js";import{$ as e}from"./@tresjs.zzLYikgQ1723608367756.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.Q1VpS3901723608367756.js";import{_ as w}from"./@fesjs.v28izi2B1723608367756.js";import"./@amap.AaCaABAE1723608367756.js";import"./pinia.KbXOifkD1723608367756.js";import"./three.X8FgZbPT1723608367756.js";import"./three-mesh-bvh.ArMO-VqG1723608367756.js";import"./tweakpane.yHWGBmom1723608367756.js";import"./@vueuse.QL9lULrD1723608367756.js";import"./vue-router.Hmvx0_Do1723608367756.js";import"./lodash-es.nFpJXAf-1723608367756.js";import"./@qlin.yHhFDldE1723608367756.js";import"./@floating-ui.BPbuo5Gx1723608367756.js";import"./@juggle.7yjBMqoW1723608367756.js";const x=S;!function(t,n){const o=S,r=z();for(;;)try{if(175112===-parseInt(o(479))/1*(parseInt(o(482))/2)+parseInt(o(444))/3+-parseInt(o(442))/4*(-parseInt(o(489))/5)+parseInt(o(498))/6+parseInt(o(497))/7*(-parseInt(o(478))/8)+parseInt(o(487))/9+parseInt(o(490))/10*(parseInt(o(493))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(474)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=S,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(459),"i"),r=R(t(496));n[t(494)](r+"chain")&&o[t(494)](r+t(450))?R():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(474)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function S(t,n){const o=z();return(S=function(t,n){return o[t-=440]})(t,n)}I(void 0,(function(){const t=S,n=function(){const t=S;let n;try{n=Function(t(465)+t(448)+");")()}catch(o){n=window}return n}(),o=n[t(486)]=n[t(486)]||{},r=[t(466),"warn",t(492),"error",t(449),"table","trace"];for(let e=0;e<r[t(454)];e++){const n=I[t(461)][t(477)][t(452)](I),a=r[e],i=o[a]||n;n[t(451)]=I.bind(I),n[t(467)]=i.toString[t(452)](i),o[a]=n}}))();const j=[x(441),x(495),"normal"];function z(){const t=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","buildingModels","constructor","cameraState","debu","buildings","return (function() ","log","toString","getZoom","atan","customCoords","uniforms","uvArray","u_zoom","apply","lngLatToCoord","tbgRef","prototype","2791088LdIqqq","3gBKaFQ","push","normalArray","113944xyLyDQ","string","TresGroup","u_near","console","2642499vXHwuB","gger","60MUwIRY","28690LTDDqG","stateObject","info","781eUnwys","test","faceUv","init","7NWpWnd","5544XhwJlp","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","position","5144zzOhKP","far","543744PcobHH","counter","TresShaderMaterial","TresMesh",'{}.constructor("return this")( )',"exception","input","__proto__","bind","value","length","geometry","TresBufferGeometry","call","mapHandle"];return(z=function(){return t})()}const P=a({__name:x(460),setup(n){const o=t(),a=t=>{const n=S;for(let r=0;r<t[n(454)];r+=3){const e=[t[r],t[r+1]],a=o[n(458)][n(470)][n(475)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[S(462)]&&(async()=>{const t=S,n=await r(t(440),t(464));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(455)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(495)]),l=new Float32Array(r.geometry.length);d[t(480)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;o.cameraState&&(g.uniforms[t(473)][t(453)]=o[t(458)][t(468)](),g[t(471)][t(485)][t(453)]=o[t(462)].near,g.uniforms.u_far[t(453)]=o[t(462)][t(443)])})),(t,n)=>{const o=S;return c(),s(o(484),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(447),{key:""+n},[p(r(456),{ref_for:!0,ref:r(476),position:[t.positionArray,3],faceUv:[t[r(472)],2],normal:[t[r(481)],3]},null,8,j),p(r(446),v({ref_for:!0},g),null,16)])})),128))])}}});function R(t){function n(t){const o=S;if(typeof t===o(483))return function(t){}[o(461)]("while (true) {}").apply(o(445));1!==(""+t/t)[o(454)]||t%20==0?function(){return!0}.constructor(o(463)+"gger")[o(457)]("action"):function(){return!1}.constructor(o(463)+o(488))[o(474)](o(491)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const U=E;!function(t,n){const o=E,r=M();for(;;)try{if(329491===parseInt(o(219))/1*(parseInt(o(222))/2)+parseInt(o(206))/3+-parseInt(o(234))/4*(parseInt(o(218))/5)+-parseInt(o(228))/6*(-parseInt(o(201))/7)+parseInt(o(213))/8+-parseInt(o(221))/9+-parseInt(o(239))/10*(parseInt(o(240))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[E(216)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=E,n=new RegExp(t(241)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=k(t(235));n[t(236)](r+"chain")&&o[t(236)](r+t(215))?k():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[E(216)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();F(void 0,(function(){const t=E;let n;try{n=Function(t(211)+t(205)+");")()}catch(e){n=window}const o=n[t(238)]=n[t(238)]||{},r=["log",t(223),t(231),"error",t(214),t(207),"trace"];for(let a=0;a<r[t(203)];a++){const n=F[t(208)][t(233)].bind(F),e=r[a],i=o[e]||n;n[t(242)]=F[t(220)](F),n[t(224)]=i[t(224)][t(220)](i),o[e]=n}}))();const D=t=>(y("data-v-40288e17"),t=t(),C(),t),L=D((()=>p(U(217),{fov:60,near:.1,far:2e3},null,-1))),W=D((()=>p(U(202),{intensity:.5},null,-1)));function E(t,n){const o=M();return(E=function(t,n){return o[t-=201]})(t,n)}function M(){const t=["length","gger",'{}.constructor("return this")( )',"908037EUPxos","table","constructor","counter","TresCanvas","return (function() ","call","4653656CWogsw","exception","input","apply","TresPerspectiveCamera","230BYEaVp","484833DGhrYj","bind","1024344OEWMup","2OVyxTr","warn","toString","stateObject","string","while (true) {}","891708KpQjxu","tresCanvas","darkblue","info","tcRef","prototype","35836IeCUix","init","test","debu","console","7220AdwkYE","16885ZKzOYj","function *\\( *\\)","__proto__","28hrbelq","TresAmbientLight"];return(M=function(){return t})()}function k(t){function n(t){const o=E;if(typeof t===o(226))return function(t){}[o(208)](o(227))[o(216)](o(209));1!==(""+t/t)[o(203)]||t%20==0?function(){return!0}[o(208)](o(237)+o(204))[o(212)]("action"):function(){return!1}[o(208)](o(237)+o(204))[o(216)](o(225)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const T=w(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=E,l=d(i(210));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(230)}),g(l,v({id:i(229),ref:i(232)},e),{default:m((()=>[L,W,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{T as default};
