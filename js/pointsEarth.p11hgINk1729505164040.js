import{_ as e,z as n}from"./three.YREzp-_G1729505164040.js";import{U as t,Y as a,z as o}from"./@tresjs.IsKybBdF1729505164040.js";import{P as r}from"./tweakpane.yHWGBmom1729505164040.js";import{d as i,a4 as l,Y as s,e as u,o as c,f,g as p,j as v,u as m,L as d,m as h,aj as g,ak as x}from"./@vue.JNsx1iN61729505164040.js";import"./@vueuse.9dhnH8nd1729505164040.js";const y=E;!function(e,n){const t=E,a=T();for(;;)try{if(655242===-parseInt(t(185))/1+-parseInt(t(148))/2+-parseInt(t(182))/3+parseInt(t(168))/4*(-parseInt(t(160))/5)+parseInt(t(136))/6+-parseInt(t(189))/7+-parseInt(t(165))/8*(-parseInt(t(144))/9))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[E(151)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(){const e=["value","3459174KFCyrZ","function *\\( *\\)","call","while (true) {}","length","pointSize","TresShaderMaterial","#122148","215262juJtyL","toString","TresCanvas","chain","1855482BNHsLW","#17c5a9","stateObject","apply","error","wireframeMaterialRef","action","SRGBColorSpace","uniforms","constructor","addBinding","console","5oYaGow","#ffffff","pointsEarth","bind","change","1360wWrImO","input","debu","3374188WjNwCO","uWaveHeight","TresGroup","addFolder","粒子大小","海浪高度","exception","color","string","uWaveSpeed","log","gger","海浪变化速度","#080820","3633702dMWdlW","TresMesh","rotation","368237oyfGHX","warn","TresMeshBasicMaterial","uTime","4456116szieTC","TresIcosahedronGeometry","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","info","counter","groupRef"];return(T=function(){return e})()}!function(){w(this,(function(){const e=E,n=new RegExp(e(137)),t=new RegExp(e(131),"i"),a=D("init");n.test(a+e(147))&&t.test(a+e(166))?D():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();S(void 0,(function(){const e=E,n=function(){let e;try{e=Function('return (function() {}.constructor("return this")( ));')()}catch(n){e=window}return e}(),t=n[e(159)]=n[e(159)]||{},a=[e(178),e(186),e(132),e(152),e(174),"table","trace"];for(let o=0;o<a[e(140)];o++){const n=S[e(157)].prototype.bind(S),r=a[o],i=t[r]||n;n.__proto__=S[e(163)](S),n[e(145)]=i[e(145)][e(163)](i),t[r]=n}}))();const b=d("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=d(y(190),{args:[1,4]},null,-1),z=d(y(190),{args:[1,128]},null,-1),j=d("TresHemisphereLight",{args:[y(161),y(181),3]},null,-1);function E(e,n){const t=T();return(E=function(e,n){return t[e-=131]})(e,n)}const P=i({__name:y(162),async setup(i){const w=y;let T,S;const E={color:w(149),pointSize:4},P={clearColor:w(143),shadows:!1,alpha:!1,outputColorSpace:e[w(155)]},D={color:E.color,wireframe:!0,transparent:!0,opacity:.2},C=([T,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),W=C[0],I=C[1],k=C[2],A=C[3],H=C[4],L={uniforms:{size:{type:"f",value:E[w(141)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:k},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:H},earthTexture:{type:"t",value:W},starTexture:{type:"t",value:I}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},M=s(),U=s(),B=(new r)[w(171)]({title:"Debug"});B[w(158)](E,w(175),{type:w(175)}).on(w(164),(({value:e})=>{const n=w;U[n(135)][n(175)].set(e)})),B[w(158)](L[w(156)].size,w(135),{min:.1,max:10,step:.1,label:w(172)}),B.addBinding(L[w(156)][w(169)],w(135),{min:.01,max:.5,step:.01,label:w(173)}),B.addBinding(L[w(156)][w(177)],w(135),{min:.01,max:1,step:.01,label:w(180)});const{onLoop:R}=t();return R((({delta:e})=>{const n=w;M[n(135)]&&(M[n(135)][n(184)].y+=.002,L.uniforms[n(188)][n(135)]+=10*e)})),(e,n)=>{const t=w,o=u(t(146));return c(),f(o,h(P,{"window-size":""}),{default:p((()=>[b,v(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(170),{ref_key:t(134),ref:M},[d(t(183),null,[_,d(t(187),h({ref_key:t(153),ref:U},D),null,16)]),d("TresPoints",null,[z,d(t(142),g(x(L)),null,16)])],512),j])),_:1},16)}}});function D(e){function n(e){const t=E;if(typeof e===t(176))return function(e){}[t(157)](t(139))[t(151)](t(133));1!==(""+e/e)[t(140)]||e%20==0?function(){return!0}.constructor("debu"+t(179))[t(138)](t(154)):function(){return!1}[t(157)](t(167)+t(179)).apply(t(150)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{P as default};
