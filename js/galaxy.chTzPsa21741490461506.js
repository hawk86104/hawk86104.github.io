import{c1 as n,ak as e,am as t,C as o,aX as a,c as r}from"./three.Vxh8Czkt1741490461506.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.rE98Wm941741490461506.js";import{d as u,b as d,w as m,e as f,o as p,H as h,j as v,u as g,g as w,N as M,aj as b,ak as C,F as P}from"./@vue.NRI7TcgI1741490461506.js";import"./postprocessing.wUw4_rsV1741490461506.js";import"./@vueuse.9Z-Ayxy41741490461506.js";!function(n,e){const t=z,o=_();for(;;)try{if(556806===parseInt(t(513))/1+-parseInt(t(486))/2+-parseInt(t(524))/3*(-parseInt(t(477))/4)+-parseInt(t(532))/5*(parseInt(t(493))/6)+parseInt(t(517))/7*(-parseInt(t(533))/8)+parseInt(t(483))/9*(parseInt(t(514))/10)+-parseInt(t(470))/11*(-parseInt(t(475))/12))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t[z(484)](e,arguments);return t=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=z,e=new RegExp(n(521)),t=new RegExp(n(531),"i"),o=S(n(496));e[n(519)](o+"chain")&&t[n(519)](o+n(502))?S():o("0")}))()}();const y=function(){let n=!0;return function(e,t){const o=n?function(){if(t){const n=t[z(484)](e,arguments);return t=null,n}}:function(){};return n=!1,o}}();y(void 0,(function(){const n=z;let e;try{e=Function(n(512)+'{}.constructor("return this")( ));')()}catch(a){e=window}const t=e[n(469)]=e[n(469)]||{},o=[n(515),n(478),n(535),"error",n(534),n(489),n(500)];for(let r=0;r<o[n(504)];r++){const e=y[n(522)][n(495)][n(479)](y),a=o[r],s=t[a]||e;e[n(523)]=y[n(479)](y),e[n(530)]=s[n(530)][n(479)](s),t[a]=e}}))();const I=["position","a-scale","color","a-randomness"];function z(n,e){const t=_();return(z=function(n,e){return t[n-=467]})(n,e)}const j=u({__name:"galaxy",setup(u){const x=z,y={clearColor:x(473),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:e,toneMapping:t,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(499),outsideColor:"#1b3984"},S=new o(j.insideColor),_=new o(j[x(520)]),F=new Float32Array(3*j[x(503)]),T=new Float32Array(3*j[x(503)]),A=new Float32Array(j[x(503)]),k=new Float32Array(3*j[x(503)]);for(let n=0;n<j[x(503)];n++){const e=3*n,t=Math[x(487)]()*j[x(468)],o=n%j[x(492)]*Math.PI*2/j[x(492)];F[e]=Math.cos(o)*t,F[e+1]=0,F[e+2]=Math[x(525)](o)*t;const a=Math.random()**j[x(488)]*(Math.random()<.5?-1:1),r=Math.random()**j[x(488)]*(Math[x(487)]()<.5?-1:1),s=Math[x(487)]()**j[x(488)]*(Math[x(487)]()<.5?-1:1);k[e]=a,k[e+1]=r,k[e+2]=s;const i=S.clone();i.lerp(_,t/j[x(468)]),T[e+0]=i.r,T[e+1]=i.g,T[e+2]=i.b,A[n]=Math[x(487)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j.size}}};const O=d(null),{onLoop:B}=s();B((({elapsed:n})=>{const e=x;O.value&&(O[e(507)][e(505)][e(482)][e(481)][e(507)]=n)}));const{count:E,size:H,radius:Z,branches:J,spin:L,randomness:G,randomnessPower:N,insideColor:Q,outsideColor:W}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(499),outsideColor:x(510)});return m([E[x(507)],H[x(507)],Z[x(507)],J.value,L[x(507)],G.value,N[x(507)],Q[x(507)],W[x(507)]],(n=>{n.forEach(((n,e)=>{const t=z;j[Object[t(511)](j)[e]]=n[t(507)]})),function(){const n=x;if(O.value){const e=new o(j[n(498)]),t=new o(j[n(520)]),a=new Float32Array(3*j[n(503)]),s=new Float32Array(3*j[n(503)]),i=new Float32Array(j.count),c=new Float32Array(3*j[n(503)]);for(let o=0;o<j[n(503)];o++){const r=3*o,l=Math.random()*j.radius,u=o%j[n(492)]*Math.PI*2/j.branches;a[r]=Math[n(472)](u)*l,a[r+1]=0,a[r+2]=Math.sin(u)*l;const d=Math[n(487)]()**j[n(488)]*(Math[n(487)]()<.5?-1:1),m=Math[n(487)]()**j.randomnessPower*(Math[n(487)]()<.5?-1:1),f=Math[n(487)]()**j[n(488)]*(Math.random()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=e[n(480)]();p[n(527)](t,l/j[n(468)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}O[n(507)][n(474)][n(471)](n(506),new r(a,3)),O[n(507)].geometry.setAttribute(n(526),new r(c,3)),O.value.geometry[n(471)](n(501),new r(s,3)),O.value[n(474)][n(471)](n(490),new r(i,1))}}()})),(n,e)=>{const t=x,o=f(t(494));return p(),h(P,null,[v(g(c)),v(o,b(C(y)),{default:w((()=>[e[0]||(e[0]=M(t(467),{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:t(528),ref:O},[M(t(476),{position:[g(F),3],"a-scale":[g(A),1],color:[g(T),3],"a-randomness":[g(k),3]},null,8,I),M(t(509),b(C(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function S(n){function e(n){const t=z;if(typeof n===t(485))return function(n){}[t(522)]("while (true) {}")[t(484)](t(508));1!==(""+n/n)[t(504)]||n%20==0?function(){return!0}[t(522)](t(497)+t(529))[t(516)](t(518)):function(){return!1}.constructor(t(497)+"gger")[t(484)](t(491)),e(++n)}try{if(n)return e;e(0)}catch(t){}}function _(){const n=["TresCanvas","prototype","init","debu","insideColor","#b5f28d","trace","color","input","count","length","material","position","value","counter","TresShaderMaterial","#1b3984","keys","return (function() ","889268BlOHeS","10ZUGMVb","log","call","25368EqIYiB","action","test","outsideColor","function *\\( *\\)","constructor","__proto__","70572MLduBg","sin","aRandomness","lerp","bufferRef","gger","toString","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","13355lHclRd","704bJfFIs","exception","info","TresPerspectiveCamera","radius","console","160105JniIJf","setAttribute","cos","black","geometry","204oLkcFx","TresBufferGeometry","48xdxAHY","warn","bind","clone","uTime","uniforms","6831342noCOZe","apply","string","1354594bwMSQj","random","randomnessPower","table","aScale","stateObject","branches","1404FWQNja"];return(_=function(){return n})()}export{j as default};
