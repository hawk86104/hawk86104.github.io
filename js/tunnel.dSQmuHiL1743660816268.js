import{e,o as n}from"./@tresjs.zc7faK4J1743660816268.js";import{ab as a,a$ as s}from"./three.2wx8FU0g1743660816268.js";import{s as i}from"./argestCircle.C_sAC3lC1743660816268.js";import{d as r,e as o,o as t,f as l,g as u,m as f,N as v,j as c,aj as m,ak as d,u as p}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";const g={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},T=["rotation-x"],h=r({__name:"tunnel",setup(r){const h={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},x={autoRotate:!0,enableDamping:!0},j={uniforms:{uTime:{type:"f",value:0}},vertexShader:i,fragmentShader:"\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n",side:a,blending:s,depthWrite:!1,transparent:!0},{onLoop:C}=e();return C((({delta:e})=>{j.uniforms.uTime.value+=e})),(e,a)=>{const s=o("TresCanvas");return t(),l(s,f(h,{"window-size":""}),{default:u((()=>[v("TresPerspectiveCamera",g,null,512),c(p(n),m(d(x)),null,16),a[1]||(a[1]=v("TresAmbientLight",{color:"#ffffff"},null,-1)),a[2]||(a[2]=v("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1)),v("TresMesh",{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[a[0]||(a[0]=v("TresPlaneGeometry",{args:[1e3,1e3]},null,-1)),v("TresShaderMaterial",m(d(j)),null,16)],8,T),a[3]||(a[3]=v("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1)),a[4]||(a[4]=v("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});export{h as default};
