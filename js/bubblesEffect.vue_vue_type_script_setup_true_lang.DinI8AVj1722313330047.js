import{q as n,a6 as t,Z as e,bV as o,C as i,h as r,aB as a}from"./three.0L1oP_mX1722313330047.js";import{p as s,$ as l,N as u}from"./@tresjs.Q03Md-En1722313330047.js";import{d as c,b as f,a4 as p,a1 as m,o as b,D as g,J as v,aj as y,ak as d,u as h}from"./@vue.Q1VpS3901722313330047.js";function w(){const n=["action","toString","debu","6GRuUyl","test","473946ewivUV","Color","3002325UVsuDA","value","uOpacity","warn","constructor","AdditiveBlending",'{}.constructor("return this")( )',"offsetY","sin","apply","TresMesh","chain","map","model","3741120jytmCn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","console","9435188isuJsn","#84ccff","2137760THJkFf","gger","uniforms","string","dispose","geometry","opacity","TresMeshRef","init","625178ZAiAUG","exception","mergeGeometries","bind","prototype","position","info","error","290432SEcZSd","TresBufferGeometry","stateObject","call","push","glowColor","__proto__","traverse","TresShaderMaterial","length","color"];return(w=function(){return n})()}const _=S;!function(n,t){const e=S,o=w();for(;;)try{if(926704===-parseInt(e(417))/1+parseInt(e(387))/2+-parseInt(e(389))/3+parseInt(e(425))/4+parseInt(e(408))/5+-parseInt(e(385))/6*(-parseInt(e(406))/7)+parseInt(e(403))/8)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[S(398)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){z(this,(function(){const n=S,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(404),"i"),o=C(n(416));t[n(386)](o+n(400))&&e[n(386)](o+"input")?C():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();x(void 0,(function(){const n=S;let t;try{t=Function("return (function() "+n(395)+");")()}catch(i){t=window}const e=t.console=t[n(405)]||{},o=["log",n(392),n(423),n(424),n(418),"table","trace"];for(let r=0;r<o[n(380)];r++){const t=x[n(393)][n(421)].bind(x),i=o[r],a=e[i]||t;t[n(377)]=x.bind(x),t[n(383)]=a[n(383)][n(420)](a),e[i]=t}}))();const P=v(_(426),null,null,-1);function S(n,t){const e=w();return(S=function(n,t){return e[n-=377]})(n,t)}const T=c({__name:"xRayEffect",props:{model:{},color:{default:_(407)},opacity:{default:1}},async setup(r){const a=_;let c,h;const w=r,z=f(),x=[];w[a(402)][a(378)]((t=>{const e=a;t instanceof n&&(t.geometry.verticesNeedUpdate=!0,x[e(429)](t[e(413)]))}));const S=([c,h]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),c=await c,h(),c),T={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[a(388)])(w[a(381)])},lightningTexture:{type:"t",value:S[a(401)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:w[a(414)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e,blending:t[a(394)],depthWrite:!1};T.uniforms[a(396)].value=Math[a(397)](5);const{camera:C}=s(),{onLoop:M}=l();return M((({delta:n})=>{const t=a;C.value[t(422)]&&z.value&&(T.uniforms.uTime[t(390)]+=n)})),m((()=>{const n=a;z[n(390)]&&(z.value.geometry[n(412)](),z[n(390)][n(413)]=o[n(419)](x)),w.color&&(T[n(410)][n(430)][n(390)]=new i(w[n(381)])),w[n(414)]&&(T.uniforms[n(391)][n(390)]=w[n(414)])})),(n,t)=>{const e=a;return b(),g(e(399),{ref_key:e(415),ref:z},[P,v(e(379),y(d(T)),null,16)],512)}}});function C(n){function t(n){const e=S;if(typeof n===e(411))return function(n){}[e(393)]("while (true) {}")[e(398)]("counter");1!==(""+n/n)[e(380)]||n%20==0?function(){return!0}[e(393)](e(384)+e(409))[e(428)](e(382)):function(){return!1}[e(393)](e(384)+e(409))[e(398)](e(427)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const M=U;!function(n,t){const e=U,o=F();for(;;)try{if(387374===parseInt(e(370))/1*(parseInt(e(380))/2)+-parseInt(e(374))/3+parseInt(e(447))/4+parseInt(e(375))/5+-parseInt(e(377))/6+-parseInt(e(379))/7+parseInt(e(373))/8*(parseInt(e(390))/9))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function U(n,t){const e=F();return(U=function(n,t){return e[n-=370]})(n,t)}!function(){I(this,(function(){const n=U,t=new RegExp(n(396)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A(n(395));t[n(443)](o+n(400))&&e[n(443)](o+"input")?A():o("0")}))()}();const B=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(414)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function F(){const n=["traverse","size","includes","AdditiveBlending","gger","stateObject","semantic","afective","bridge","Color","MathUtils","uTime","push","exception","Float32BufferAttribute","test","DoubleSide","#FFF","array","2624632RbbysB","8vvJWNX","setAttribute","console","1114504oqLatn","1643679Lbueue","1980870xHzUoq","glowColor","2644980OozeJP","randInt","3687649QtlKMp","73330eyjfSr","table","__proto__","uniforms","bubblesEffect","warn","map","trace","ShaderMaterial","attributes","36CknBgd","string","length","log","debu","init","function *\\( *\\)","call","episodic","TresPoints","chain","material","constructor","aDelayDuration","color","action","value","opacity","position","mergeGeometries","brainstem","geometry","uSlowTime","bubbles","apply","info","process","randFloat","TresShaderMaterial",'{}.constructor("return this")( )',"prototype","while (true) {}","bind","uOpacity","cerebellum","name","amigdala","toString"];return(F=function(){return n})()}B(void 0,(function(){const n=U;let t;try{t=Function("return (function() "+n(419)+");")()}catch(i){t=window}const e=t[n(372)]=t[n(372)]||{},o=[n(393),n(385),n(415),"error",n(441),n(381),n(387)];for(let r=0;r<o[n(392)];r++){const t=B.constructor[n(420)].bind(B),i=o[r],a=e[i]||t;t[n(382)]=B[n(422)](B),t[n(427)]=a[n(427)].bind(a),e[i]=t}}))();const j=c({__name:M(384),props:{model:{},color:{default:M(445)},opacity:{default:1}},setup(e){const i=M,s=e,u=[i(435),i(434),i(398),i(416),i(426),i(410),i(436),i(424),"analitic"],c={};s.model[i(428)]((t=>{const e=i;t instanceof n&&u[e(386)]((n=>{const i=e;if(t[i(425)][i(430)](n)){if(c[n]){const e=[c[n],t.geometry];return c[n]=o[i(409)](e),c}return c[n]=t[i(411)]}return[]}))}));const p=f(),w=new(t[i(388)])({uniforms:{glowColor:{type:"c",value:new(t[i(437)])(s[i(404)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t[i(431)],side:t[i(444)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{p.value&&(()=>{const n=i,e=[],o=[],s=[],l=[];for(let i=0;i<2e4-3*u[n(392)];i+=1){const a=r[n(378)](0,u[n(392)]-1),f=u[a],p=c[f].attributes[n(408)][n(446)][3*i+0]||0,m=c[f].attributes.position[n(446)][3*i+1]||0,b=c[f][n(389)][n(408)][n(446)][3*i+2]||0;if(o[n(440)](p,m,b),e[i]=r[n(417)](10,20),i%100==0){const e=t[n(438)][n(378)](100,250)+m;l.push(p,e,b,1)}else l[n(440)](p,m,b,0);s[2*i+0]=t[n(438)].randFloat(.5,1.5),s[2*i+1]=2.5}p.value[n(371)](n(403),new a(s,2)),p[n(406)].setAttribute(n(413),new a(l,4)),p[n(406)][n(371)]("position",new(t[n(442)])(o,3)),p[n(406)][n(371)](n(404),new(t[n(442)])([],3)),p[n(406)][n(371)](n(429),new(t[n(442)])(e,1)),p.value.computeBoundingSphere()})()}));const _=f(),{onLoop:z}=l();return z((({delta:n})=>{const e=i;_[e(406)]&&(_[e(406)][e(401)][e(383)][e(439)][e(406)]+=.05,_[e(406)][e(401)][e(383)][e(412)][e(406)]+=1/400),s[e(404)]&&(w[e(383)][e(376)][e(406)]=new(t[e(437)])(s[e(404)])),s.opacity&&(w[e(383)][e(423)][e(406)]=s[e(407)])})),(n,t)=>{const e=i;return b(),g(e(399),{ref_key:"TresMeshRef",ref:_},[v("TresBufferGeometry",{ref_key:"BufferGeometryRef",ref:p},null,512),v(e(418),y(d(h(w))),null,16)],512)}}});function A(n){function t(n){const e=U;if(typeof n===e(391))return function(n){}[e(402)](e(421))[e(414)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(402)](e(394)+e(432))[e(397)](e(405)):function(){return!1}[e(402)]("debugger")[e(414)](e(433)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as _,j as a};
