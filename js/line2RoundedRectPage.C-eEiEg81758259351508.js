import"./@fesjs.uDzWZsaX1758259351508.js";import{a as e}from"./@tresjs.CywMBpUh1758259351508.js";import"./Resource.DDopQ4j61758259351508.js";/* empty css                                                                             */import"./three-mesh-ui.module.t9YwAzlx1758259351508.js";import"./global.DmBaWnKd1758259351508.js";/* empty css                                                              */import{_ as s}from"./line2RoundedRect.vue_vue_type_script_setup_true_lang.D66eTvIW1758259351508.js";import{_ as i}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.DY-bbkyg1758259351508.js";import{P as r}from"./tweakpane.C0HtAJSg1758259351508.js";import{d as t,r as o,h as a,e as p,o as n,f as l,I as m,j as d,u,m as j,a5 as _,a7 as c,a8 as g}from"./@vue.pEDXJ_3Z1758259351508.js";import{X as h,N as f}from"./three.CtgP63ME1758259351508.js";import"./vue-router.BT0ZZbwZ1758259351508.js";import"./lodash-es.C7pWAXPe1758259351508.js";import"./pinia.C_K98KJs1758259351508.js";import"./@qlin.q6OWdsQV1758259351508.js";import"./@babel.BPq7uOAK1758259351508.js";import"./@floating-ui.BFjFSAYt1758259351508.js";import"./@juggle.CcBCnTIR1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";import"./color.BPoHtV0H1758259351508.js";import"./@amap.CGUF9xH41758259351508.js";import"./color-string.P-yvt9W21758259351508.js";import"./color-name.BQ5IbGbl1758259351508.js";import"./simple-swizzle.Xn8N6iLa1758259351508.js";import"./is-arrayish.CLsR9Wfx1758259351508.js";import"./color-convert.Btfsg-JE1758259351508.js";import"./lodash.Bo0I6nx61758259351508.js";import"./ReflectorMaterial.tiZs418S1758259351508.js";import"./dither.glsl.tNAdkJUa1758259351508.js";import"./Reflector.B9L45tzA1758259351508.js";import"./OimoPhysicsBuffer.ChpcdjlT1758259351508.js";import"./oimophysics.BBtHVm4j1758259351508.js";const v=t({__name:"line2RoundedRectPage",setup(t){const v={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:f,toneMappingExposure:1,shadowMapType:h},w=o({reflectivity:.941,mirror:113.25,mixStrength:12,showGridHelper:!1,scale:100}),y=o({linewidth:10,color:"#ffff00",width:2,height:6,radius:.3,cornerSegments:6}),b=new r({title:"参数",expanded:!0});return b.addBinding(y,"linewidth",{label:"线条宽度",step:.1,min:0,max:20}),b.addBinding(y,"color",{label:"线条颜色"}),b.addBinding(y,"width",{label:"宽",step:.1,min:.1,max:10}),b.addBinding(y,"height",{label:"长",step:.1,min:.1,max:10}),b.addBinding(y,"radius",{label:"角度",step:.001,min:.001,max:1}),b.addBinding(y,"cornerSegments",{label:"平滑",step:.1,min:.1,max:6}),(r,t)=>{const o=a("TresCanvas");return n(),p(o,c(g(v)),{default:l((()=>[t[0]||(t[0]=m("TresPerspectiveCamera",{position:[-5,3,5],fov:50,near:.1,far:1e4},null,-1)),d(u(e)),t[1]||(t[1]=m("TresAmbientLight",null,null,-1)),d(u(s),j({position:[0,-1.5,0]},y),null,16),(n(),p(_,null,{default:l((()=>[d(i,c(g(w)),null,16)])),_:1}))])),_:1},16)}}});export{v as default};
