import{_ as n,c2 as t,C as e,s as o,m as i,ab as r}from"./three.jpi2UCEx1735275234726.js";import{m as a,e as s,b as l}from"./@tresjs.fCqPNEAw1735275234726.js";import{d as u,b as c,a6 as f,a3 as p,o as m,D as g,J as b,aj as v,ak as y,u as d}from"./@vue.u2cBPEWn1735275234726.js";const h=z;!function(n,t){const e=z,o=x();for(;;)try{if(539182===parseInt(e(447))/1*(-parseInt(e(431))/2)+-parseInt(e(429))/3+-parseInt(e(445))/4+parseInt(e(421))/5+-parseInt(e(423))/6*(parseInt(e(450))/7)+parseInt(e(458))/8*(parseInt(e(443))/9)+parseInt(e(452))/10*(parseInt(e(437))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=z,t=new RegExp(n(455)),e=new RegExp(n(418),"i"),o=T(n(427));t.test(o+n(432))&&e[n(424)](o+n(410))?T():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(448)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=x();return(z=function(n,t){return e[n-=401]})(n,t)}function x(){const n=["mergeGeometries","3011925HDkzel","opacity","66630vzsuJi","test","log","uniforms","init","stateObject","1590510VhPOBq",'{}.constructor("return this")( )',"192XUdstO","chain","offsetY","map","action","traverse","33kNmlxR","sin","debu","error","uTime","toString","4665195GunkSW","TresShaderMaterial","3624800IKFtSH","value","4803QDnCaE","apply","xRayEffect","175wlEVsw","geometry","5311750ijTdza","color","Color","function *\\( *\\)","bind","__proto__","8GlIEIB","verticesNeedUpdate","trace","AdditiveBlending","constructor","console","Mesh","DoubleSide","dispose","prototype","uOpacity","glowColor","return (function() ","input","table","string","TresMeshRef","counter","length","push","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresBufferGeometry"];return(x=function(){return n})()}_(void 0,(function(){const n=z;let t;try{t=Function(n(409)+n(430)+");")()}catch(i){t=window}const e=t.console=t[n(402)]||{},o=[n(425),"warn","info",n(440),"exception",n(411),n(460)];for(let r=0;r<o[n(415)];r++){const t=_[n(401)][n(406)][n(456)](_),i=o[r],a=e[i]||t;t[n(457)]=_[n(456)](_),t[n(442)]=a[n(442)][n(456)](a),e[i]=t}}))();const P=u({__name:h(449),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(o){const i=h;let r,u;const d=o,w=c(),_=[];d.model[i(436)]((t=>{const e=i;t instanceof n[e(403)]&&(t[e(451)][e(459)]=!0,_[e(416)](t[e(451)]))}));const z=([r,u]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(454)])(d.color)},lightningTexture:{type:"t",value:z[i(434)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(422)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(404)],blending:n[i(461)],depthWrite:!1};x.uniforms[i(433)][i(446)]=Math[i(438)](5);const{camera:P}=a(),{onLoop:T}=s();return T((({delta:n})=>{const t=i;P.value.position&&w[t(446)]&&(x[t(426)][t(441)][t(446)]+=n)})),p((()=>{const n=i;w[n(446)]&&(w.value[n(451)][n(405)](),w[n(446)][n(451)]=t[n(420)](_)),d[n(453)]&&(x[n(426)][n(408)][n(446)]=new e(d[n(453)])),d.opacity&&(x.uniforms[n(407)][n(446)]=d.opacity)})),(n,t)=>{const e=i;return m(),g("TresMesh",{ref_key:e(413),ref:w},[t[0]||(t[0]=b(e(419),null,null,-1)),b(e(444),v(y(x)),null,16)],512)}}});function T(n){function t(n){const e=z;if(typeof n===e(412))return function(n){}.constructor("while (true) {}")[e(448)](e(414));1!==(""+n/n)[e(415)]||n%20==0?function(){return!0}.constructor(e(439)+"gger")[e(417)](e(435)):function(){return!1}[e(401)](e(439)+"gger")[e(448)](e(428)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const S=I;!function(n,t){const e=I,o=B();for(;;)try{if(984031===-parseInt(e(370))/1+-parseInt(e(379))/2*(-parseInt(e(391))/3)+parseInt(e(405))/4+parseInt(e(389))/5+-parseInt(e(412))/6*(-parseInt(e(372))/7)+parseInt(e(393))/8+parseInt(e(409))/9*(parseInt(e(408))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(424)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=B();return(I=function(n,t){return e[n-=348]})(n,t)}!function(){C(this,(function(){const n=I,t=new RegExp(n(415)),e=new RegExp(n(421),"i"),o=U(n(377));t.test(o+"chain")&&e[n(414)](o+n(368))?U():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(){const n=["glowColor","toString","while (true) {}","warn","log","value","return (function() ","TresMeshRef","1314550TNckCy","randFloat","4725APSnBE","DoubleSide","1334424TnRGXu","includes","TresBufferGeometry","Color","string",'{}.constructor("return this")( )',"action","prototype","size","afective","info","attributes","169276CpAaLP","TresPoints","bind","230TKmhnB","27693rpQJvJ","#FFF","setAttribute","9276888MjerFg","exception","test","function *\\( *\\)","length","position","episodic","uniforms","TresShaderMaterial","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","opacity","bubbles","apply","error","color","array","stateObject","debu","computeBoundingSphere","mergeGeometries","gger","AdditiveBlending","Float32BufferAttribute","call","geometry","material","bubblesEffect","uOpacity","constructor","push","map","name","uSlowTime","input","trace","1155320LbubwV","__proto__","7sJdJCe","counter","MathUtils","randInt","cerebellum","init","table","64gyjSMU","analitic"];return(B=function(){return n})()}M(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(387)+n(398)+");")()}catch(e){t=window}return t}(),e=t.console=t.console||{},o=[n(385),n(384),n(403),n(348),n(413),n(378),n(369)];for(let i=0;i<o[n(416)];i++){const t=M.constructor[n(400)].bind(M),r=o[i],a=e[r]||t;t[n(371)]=M[n(407)](M),t[n(382)]=a[n(382)][n(407)](a),e[r]=t}}))();const F=u({__name:S(361),props:{model:{},color:{default:S(410)},opacity:{default:1}},setup(e){const a=S,l=e,u=[a(402),"semantic",a(418),"process","amigdala","brainstem","bridge",a(376),a(380)],f={};l.model.traverse((n=>{const e=a;n instanceof o&&u[e(365)]((o=>{const i=e;if(n[i(366)][i(394)](o)){if(f[o]){const e=[f[o],n[i(359)]];return f[o]=t[i(354)](e),f}return f[o]=n.geometry}return[]}))}));const h=c(),w=new i({uniforms:{glowColor:{type:"c",value:new(n[a(396)])(l.color)},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(356)],side:n[a(392)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h[a(386)]&&(()=>{const t=a,e=[],o=[],i=[],s=[];for(let r=0;r<2e4-3*u[t(416)];r+=1){const a=n[t(374)][t(375)](0,u.length-1),l=u[a],c=f[l][t(404)].position.array[3*r+0]||0,p=f[l][t(404)].position[t(350)][3*r+1]||0,m=f[l].attributes[t(417)][t(350)][3*r+2]||0;if(o[t(364)](c,p,m),e[r]=n[t(374)].randFloat(10,20),r%100==0){const e=n[t(374)][t(375)](100,250)+p;s[t(364)](c,e,m,1)}else s[t(364)](c,p,m,0);i[2*r+0]=n[t(374)][t(390)](.5,1.5),i[2*r+1]=2.5}h[t(386)][t(411)]("aDelayDuration",new(n[t(357)])(i,2)),h[t(386)][t(411)](t(423),new r(s,4)),h[t(386)][t(411)](t(417),new r(o,3)),h[t(386)][t(411)](t(349),new(n[t(357)])([],3)),h[t(386)][t(411)](t(401),new(n[t(357)])(e,1)),h[t(386)][t(353)]()})()}));const _=c(),{onLoop:z}=s();return z((({delta:t})=>{const e=a;_[e(386)]&&(_.value[e(360)][e(419)].uTime[e(386)]+=.05,_[e(386)][e(360)].uniforms[e(367)][e(386)]+=1/400),l[e(349)]&&(w[e(419)][e(381)][e(386)]=new(n[e(396)])(l[e(349)])),l[e(422)]&&(w.uniforms[e(362)][e(386)]=l[e(422)])})),(n,t)=>{const e=a;return m(),g(e(406),{ref_key:e(388),ref:_},[b(e(395),{ref_key:"BufferGeometryRef",ref:h},null,512),b(e(420),v(y(d(w))),null,16)],512)}}});function U(n){function t(n){const e=I;if(typeof n===e(397))return function(n){}.constructor(e(383))[e(424)](e(373));1!==(""+n/n).length||n%20==0?function(){return!0}[e(363)](e(352)+e(355))[e(358)](e(399)):function(){return!1}[e(363)](e(352)+e(355))[e(424)](e(351)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,F as a};
