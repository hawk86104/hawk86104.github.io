import{F as a}from"./@tresjs.B_KjVy0E1761276103973.js";import{d as e,P as t}from"./@pmndrs.CvKgExG31761276103973.js";import{d as o,a as s,w as r,ad as i,a3 as n,G as l,o as d,I as h,a9 as p,aa as c}from"./@vue.CKlgtJke1761276103973.js";import{V as m,f as u,av as f,b as w}from"./three.Bhn4-0ry1761276103973.js";const g=["rotate-x"],M=o({__name:"accumulativeShadowsCom",props:{opacity:{default:.8},alphaTest:{default:.9},color:{default:"#000000"},blend:{default:2},lightPosition:{default:{x:3,y:5,z:3}},frames:{default:60},blendWindow:{default:100},ambient:{default:.5}},setup(o){const M=o;let b=s();const{extend:v,scene:S,renderer:y,camera:z}=a();v({SoftShadowMaterial:e});const P={position:(new m).set(M.lightPosition.x,M.lightPosition.y,M.lightPosition.z),radius:1,amount:8,intensity:Math.PI,bias:.001,mapSize:1024,size:8,near:.5,far:200},x=new t(y,S.value,P.mapSize),T={map:x.progressiveLightMap2.texture,transparent:!0,depthWrite:!1,toneMapped:!0,blend:M.blend,alphaTest:M.alphaTest,opacity:M.opacity,color:M.color},j=new u;for(let a=0;a<P.amount;a++){const a=new f(16777215,P.intensity/P.amount);a.castShadow=!0,a.shadow.bias=P.bias,a.shadow.camera.near=P.near,a.shadow.camera.far=P.far,a.shadow.camera.right=P.size/2,a.shadow.camera.left=-4,a.shadow.camera.top=P.size/2,a.shadow.camera.bottom=-4,a.shadow.mapSize.width=P.mapSize,a.shadow.mapSize.height=P.mapSize,j.add(a)}const I=()=>{const a=P.position.length();for(let e=0;e<j.children.length;e++){const t=j.children[e];if(Math.random()>M.ambient)t.position.set(P.position.x+w.randFloatSpread(P.radius),P.position.y+w.randFloatSpread(P.radius),P.position.z+w.randFloatSpread(P.radius));else{let e=Math.acos(2*Math.random()-1)-Math.PI/2,o=2*Math.PI*Math.random();t.position.set(Math.cos(e)*Math.cos(o)*a,Math.abs(Math.cos(e)*Math.sin(o)*a),Math.sin(e)*a)}}},F=(a=1)=>{S.value.add(j),x.prepare();for(let e=0;e<a;e++)I(),x.update(z.value,M.blendWindow),console.log("shadows plm update",e);S.value.remove(j),x.finish()};r(()=>b.value,a=>{a&&(x.configure(i(a)),x.clear(),console.log("shadows render start"),F(M.frames),console.log("shadows render end"))});const W=()=>{x.clear(),F(M.frames)};return n(()=>{b.value&&(M.opacity&&(b.value.material.opacity=M.opacity),M.alphaTest&&(b.value.material.alphaTest=M.alphaTest),M.color&&b.value.material.color.set(M.color),M.blend&&(b.value.material.blend=M.blend))}),r(()=>M.lightPosition,a=>{a&&(console.log(M.lightPosition),P.position.set(a.x,a.y,a.z),W())},{deep:!0}),r(()=>[M.frames,M.blendWindow,M.ambient],()=>{W()}),(a,e)=>(d(),l("TresMesh",{"receive-shadow":"",ref_key:"gPlane",ref:b,scale:10,"rotate-x":-Math.PI/2},[e[0]||(e[0]=h("TresPlaneGeometry",{args:[1,1]},null,-1)),h("TresSoftShadowMaterial",p(c(T)),null,16)],8,g))}});export{M as _};
