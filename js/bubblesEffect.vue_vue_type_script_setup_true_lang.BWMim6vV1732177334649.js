import{_ as n,C as t,bX as e,a0 as o,ab as i}from"./three.rV-MfnQb1732177334649.js";import{m as r,e as a,b as s}from"./@tresjs.ty5XF8T_1732177334649.js";import{d as l,b as u,a6 as c,a3 as f,o as p,D as m,J as b,aj as g,ak as v,u as y}from"./@vue.-THQH3GC1732177334649.js";const d=z;!function(n,t){const e=z,o=_();for(;;)try{if(505530===-parseInt(e(213))/1*(parseInt(e(167))/2)+parseInt(e(218))/3*(parseInt(e(215))/4)+parseInt(e(191))/5+-parseInt(e(165))/6+parseInt(e(163))/7*(parseInt(e(193))/8)+-parseInt(e(187))/9+parseInt(e(205))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(217)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){h(this,(function(){const n=z,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(219),"i"),o=T(n(206));t[n(189)](o+n(188))&&e[n(189)](o+n(196))?T():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(217)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(){const n=["xRayEffect","position","action","verticesNeedUpdate","opacity","exception","29849cZskvG","string","2687584GltDow","uTime","apply","3rDryom","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","console","log","679KtMKmr","map","5882808dGNgnx","TresShaderMaterial","38oUObgQ","trace","debu","bind","return (function() ","__proto__","TresMesh","mergeGeometries","traverse","while (true) {}","error","uOpacity","prototype","model","offsetY","sin","counter","value","uniforms","TresBufferGeometry","8899038bNamqw","chain","test","TresMeshRef","4493195NhrDOS","toString","12456QHTIom","constructor","gger","input","geometry","info","AdditiveBlending","#84ccff","DoubleSide","color","warn","Mesh","13203470xcaMhc","init"];return(_=function(){return n})()}function z(n,t){const e=_();return(z=function(n,t){return e[n-=161]})(n,t)}w(void 0,(function(){const n=z;let t;try{t=Function(n(171)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(161)]=t[n(161)]||{},o=[n(162),n(203),n(198),n(177),n(212),"table",n(168)];for(let r=0;r<o[n(220)];r++){const t=w.constructor[n(179)].bind(w),i=o[r],a=e[i]||t;t[n(172)]=w[n(170)](w),t[n(192)]=a[n(192)][n(170)](a),e[i]=t}}))();const x=l({__name:d(207),props:{model:{},color:{default:d(200)},opacity:{default:1}},async setup(o){const i=d;let l,y;const h=o,w=u(),_=[];h[i(180)][i(175)]((t=>{const e=i;t instanceof n[e(204)]&&(t[e(197)][e(210)]=!0,_.push(t[e(197)]))}));const z=([l,y]=c((()=>s({map:"./plugins/medical/image/brainXRayLight.png"}))),l=await l,y(),l),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(h[i(202)])},lightningTexture:{type:"t",value:z[i(164)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:h[i(211)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(201)],blending:n[i(199)],depthWrite:!1};x.uniforms[i(181)][i(184)]=Math[i(182)](5);const{camera:T}=r(),{onLoop:P}=a();return P((({delta:n})=>{const t=i;T.value[t(208)]&&w[t(184)]&&(x.uniforms[t(216)][t(184)]+=n)})),f((()=>{const n=i;w[n(184)]&&(w[n(184)][n(197)].dispose(),w[n(184)][n(197)]=e[n(174)](_)),h[n(202)]&&(x[n(185)].glowColor[n(184)]=new t(h[n(202)])),h[n(211)]&&(x[n(185)][n(178)][n(184)]=h.opacity)})),(n,t)=>{const e=i;return p(),m(e(173),{ref_key:e(190),ref:w},[t[0]||(t[0]=b(e(186),null,null,-1)),b(e(166),g(v(x)),null,16)],512)}}});function T(n){function t(n){const e=z;if(typeof n===e(214))return function(n){}[e(194)](e(176))[e(217)](e(183));1!==(""+n/n)[e(220)]||n%20==0?function(){return!0}[e(194)](e(169)+"gger").call(e(209)):function(){return!1}.constructor(e(169)+e(195))[e(217)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const P=C;function S(){const n=["array","stateObject","geometry","traverse","uOpacity","episodic","while (true) {}","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","2585212qTLkOE","afective","attributes","log","215370zcTUlu","ShaderMaterial","4119QNnEGi","bind","length","constructor","model","function *\\( *\\)","randInt","531334GTJmQq","aDelayDuration","8uQYHIM","uSlowTime","Color","material","error","TresMeshRef","randFloat","prototype","brainstem","map","color","mergeGeometries","size","Float32BufferAttribute","uTime","action","opacity",'{}.constructor("return this")( )',"#FFF","computeBoundingSphere","input","semantic","AdditiveBlending","2284HtZSGy","push","position","10837998miAwjm","cerebellum","value","toString","exception","TresBufferGeometry","MathUtils","name","setAttribute","812394WQwXzK","debu","uniforms","BufferGeometryRef","includes","Mesh","init","apply","test","counter","gger","console","1341410szIOPy","bubblesEffect","table"];return(S=function(){return n})()}!function(n,t){const e=C,o=S();for(;;)try{if(432031===-parseInt(e(134))/1+parseInt(e(171))/2+parseInt(e(127))/3*(-parseInt(e(159))/4)+-parseInt(e(183))/5+parseInt(e(125))/6+parseInt(e(121))/7+-parseInt(e(136))/8*(-parseInt(e(162))/9))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(178)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){I(this,(function(){const n=C,t=new RegExp(n(132)),e=new RegExp(n(119),"i"),o=U(n(177));t[n(179)](o+"chain")&&e[n(179)](o+n(156))?U():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(178)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function C(n,t){const e=S();return(C=function(n,t){return e[n-=114]})(n,t)}M(void 0,(function(){const n=C,t=function(){const n=C;let t;try{t=Function("return (function() "+n(153)+");")()}catch(e){t=window}return t}(),e=t[n(182)]=t[n(182)]||{},o=[n(124),"warn","info",n(140),n(166),n(185),"trace"];for(let i=0;i<o[n(129)];i++){const t=M[n(130)][n(143)][n(128)](M),r=o[i],a=e[r]||t;t[n(120)]=M.bind(M),t.toString=a[n(165)][n(128)](a),e[r]=t}}))();const F=l({__name:P(184),props:{model:{},color:{default:P(154)},opacity:{default:1}},setup(t){const r=P,s=t,l=[r(122),r(157),r(117),"process","amigdala",r(144),"bridge",r(163),"analitic"],c={};s[r(131)][r(115)]((t=>{const o=r;t instanceof n[o(176)]&&l[o(145)]((n=>{const i=o;if(t[i(169)][i(175)](n)){if(c[n]){const o=[c[n],t.geometry];return c[n]=e[i(147)](o),c}return c[n]=t[i(114)]}return[]}))}));const d=u(),h=new(n[r(126)])({uniforms:{glowColor:{type:"c",value:new(n[r(138)])(s.color)},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s[r(152)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[r(158)],side:o,depthTest:!1,vertexColors:!1,transparent:!0});f((()=>{d.value&&(()=>{const t=r,e=[],o=[],a=[],s=[];for(let i=0;i<2e4-3*l.length;i+=1){const r=n[t(168)][t(133)](0,l[t(129)]-1),u=l[r],f=c[u][t(123)][t(161)][t(186)][3*i+0]||0,p=c[u][t(123)][t(161)][t(186)][3*i+1]||0,m=c[u][t(123)][t(161)][t(186)][3*i+2]||0;if(o[t(160)](f,p,m),e[i]=n[t(168)][t(142)](10,20),i%100==0){const e=n[t(168)].randInt(100,250)+p;s[t(160)](f,e,m,1)}else s.push(f,p,m,0);a[2*i+0]=n[t(168)].randFloat(.5,1.5),a[2*i+1]=2.5}d[t(164)][t(170)](t(135),new i(a,2)),d[t(164)].setAttribute("bubbles",new(n[t(149)])(s,4)),d[t(164)].setAttribute("position",new i(o,3)),d.value[t(170)](t(146),new i([],3)),d[t(164)][t(170)](t(148),new(n[t(149)])(e,1)),d[t(164)][t(155)]()})()}));const w=u(),{onLoop:_}=a();return _((({delta:t})=>{const e=r;w[e(164)]&&(w[e(164)][e(139)].uniforms[e(150)][e(164)]+=.05,w[e(164)][e(139)].uniforms[e(137)][e(164)]+=1/400),s[e(146)]&&(h[e(173)].glowColor[e(164)]=new(n[e(138)])(s.color)),s[e(152)]&&(h[e(173)][e(116)][e(164)]=s[e(152)])})),(n,t)=>{const e=r;return p(),m("TresPoints",{ref_key:e(141),ref:w},[b(e(167),{ref_key:e(174),ref:d},null,512),b("TresShaderMaterial",g(v(y(h))),null,16)],512)}}});function U(n){function t(n){const e=C;if("string"==typeof n)return function(n){}[e(130)](e(118))[e(178)](e(180));1!==(""+n/n)[e(129)]||n%20==0?function(){return!0}[e(130)](e(172)+e(181)).call(e(151)):function(){return!1}[e(130)](e(172)+e(181))[e(178)](e(187)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{x as _,F as a};
