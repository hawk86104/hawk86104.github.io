import{m as a}from"./@tresjs.Fe0mFN5V1748945481918.js";import{d as e,P as t}from"./@pmndrs.DE3oMxDY1748945481918.js";import{d as o,b as s,w as i,a2 as r,G as l,o as n,I as d,ak as h,al as p}from"./@vue.C_fjx3FT1748945481918.js";import{V as m,f as c,aT as u,b as f}from"./three.Bg9S6UMF1748945481918.js";const w=["rotate-x"],b=o({__name:"accumulativeShadowsCom",props:{opacity:{default:.8},alphaTest:{default:.9},color:{default:"#000000"},blend:{default:2},lightPosition:{default:{x:3,y:5,z:3}},frames:{default:60},blendWindow:{default:100},ambient:{default:.5}},setup(o){const b=o;let g=s();const{extend:M,scene:v,renderer:S,camera:y}=a();M({SoftShadowMaterial:e});const z={position:(new m).set(b.lightPosition.x,b.lightPosition.y,b.lightPosition.z),radius:1,amount:8,intensity:Math.PI,bias:.001,mapSize:1024,size:8,near:.5,far:200},P=new t(S.value,v.value,z.mapSize),T={map:P.progressiveLightMap2.texture,transparent:!0,depthWrite:!1,toneMapped:!0,blend:b.blend,alphaTest:b.alphaTest,opacity:b.opacity,color:b.color},x=new c;for(let a=0;a<z.amount;a++){const a=new u(16777215,z.intensity/z.amount);a.castShadow=!0,a.shadow.bias=z.bias,a.shadow.camera.near=z.near,a.shadow.camera.far=z.far,a.shadow.camera.right=z.size/2,a.shadow.camera.left=-4,a.shadow.camera.top=z.size/2,a.shadow.camera.bottom=-4,a.shadow.mapSize.width=z.mapSize,a.shadow.mapSize.height=z.mapSize,x.add(a)}const j=()=>{const a=z.position.length();for(let e=0;e<x.children.length;e++){const t=x.children[e];if(Math.random()>b.ambient)t.position.set(z.position.x+f.randFloatSpread(z.radius),z.position.y+f.randFloatSpread(z.radius),z.position.z+f.randFloatSpread(z.radius));else{let e=Math.acos(2*Math.random()-1)-Math.PI/2,o=2*Math.PI*Math.random();t.position.set(Math.cos(e)*Math.cos(o)*a,Math.abs(Math.cos(e)*Math.sin(o)*a),Math.sin(e)*a)}}},I=(a=1)=>{v.value.add(x),P.prepare();for(let e=0;e<a;e++)j(),P.update(y.value,b.blendWindow),console.log("shadows plm update",e);v.value.remove(x),P.finish()};i((()=>g.value),(a=>{a&&(P.configure(a),P.clear(),console.log("shadows render start"),I(b.frames),console.log("shadows render end"))}));const W=()=>{P.clear(),I(b.frames)};return r((()=>{g.value&&(b.opacity&&(g.value.material.opacity=b.opacity),b.alphaTest&&(g.value.material.alphaTest=b.alphaTest),b.color&&g.value.material.color.set(b.color),b.blend&&(g.value.material.blend=b.blend))})),i((()=>b.lightPosition),(a=>{a&&(console.log(b.lightPosition),z.position.set(a.x,a.y,a.z),W())}),{deep:!0}),i((()=>[b.frames,b.blendWindow,b.ambient]),(()=>{W()})),(a,e)=>(n(),l("TresMesh",{"receive-shadow":"",ref_key:"gPlane",ref:g,scale:10,"rotate-x":-Math.PI/2},[e[0]||(e[0]=d("TresPlaneGeometry",{args:[1,1]},null,-1)),d("TresSoftShadowMaterial",h(p(T)),null,16)],8,w))}});export{b as _};
