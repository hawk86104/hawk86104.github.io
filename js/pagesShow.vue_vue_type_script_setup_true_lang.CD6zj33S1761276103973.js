import{a6 as e,k as a,ap as o,cU as t,cG as l,cV as r,q as i,a0 as n,A as s,cn as u}from"./three.Bhn4-0ry1761276103973.js";import{_ as d,K as c}from"./@tresjs.B_KjVy0E1761276103973.js";import{i as m}from"./Resource.CSaxGSPI1761276103973.js";import{w as p,d as f,a3 as y,G as h,o as g,u as w,r as v,a as b,q as C,g as x,b as B,e as S,I as T,h as _,H as M,L as R,a9 as j,aa as A,F as L,m as F}from"./@vue.CKlgtJke1761276103973.js";import{B as G}from"./three-custom-shader-material.DSmV-ApW1761276103973.js";import{b as O,a as H}from"./buildingsCustomShaderMaterial.DyBo--wu1761276103973.js";const W=async()=>{m.getResource("FBXLoader","https://opensource.cdn.icegl.cn/model/digitalCity/shanghai.FBX","shanghai.FBX");const e=m.getReactiveItem("shanghai.FBX");return new Promise((a,o)=>{const t=p(()=>e(),e=>{if(e){t();let o=null,l=null,r=null;e.traverse(e=>{"CITY_UNTRIANGULATED"===e.name&&(o=e),"LANDMASS"===e.name&&(l=e),"ROADS"===e.name&&(r=e)}),a({model:e,city:o,land:l,roads:r})}else o(new Error("FBX 加载失败，未得到模型"))})})},k=["object"],D=f({__name:"buildingsModelCustomShader",props:{model:{},bulidingsColor:{default:"#e523ff"},landColor:{default:"#112233"},topColor:{default:"#ffff00"},opacity:{default:.9},gradient:{type:Boolean,default:!0}},setup(o){const t=o,l=t.model.city;l.renderOrder=1001;const r=t.model.land;(()=>{const{geometry:o}=l;o.computeBoundingBox(),o.computeBoundingSphere();const{max:r,min:i}=o.boundingBox;if(l.material.__csm)return;const n=new G({baseMaterial:l.material,vertexShader:H,fragmentShader:O,silent:!0,uniforms:{uMax:{value:r},uMin:{value:i},uBorderWidth:{value:5},uCircleTime:{value:5},uColor:{value:new a(t.bulidingsColor)},uOpacity:{value:t.opacity},uLightColor:{value:new a("#ffffff")},uTopColor:{value:new a(t.topColor)},uTime:{value:0},uGradient:{value:t.gradient}},depthWrite:!0,depthTest:!0,transparent:!0,side:e});l.material.dispose(),l.material=n})();const{onBeforeRender:i}=d();i(({delta:e})=>{l.material.uniforms.uTime.value+=e}),y(()=>{t.bulidingsColor&&l.material.uniforms.uColor.value.setStyle(t.bulidingsColor),t.landColor&&((a,o)=>{let l;l=Array.isArray(r.material)?r.material:[r.material],l.forEach(a=>{a[o].setStyle(t.landColor),a.side=e})})(0,"color"),t.opacity&&(l.material.uniforms.uOpacity.value=t.opacity)}),p(t,(e,a)=>{l.material.uniforms.uGradient.value=e.gradient});const n=t.model.model.clone();return(e,a)=>(g(),h("primitive",{object:w(n)},null,8,k))}}),E=["object"],X=f({__name:"buildingsLines",props:{builds:{},width:{default:1},color:{default:"#FFF"},opacity:{default:1},style:{default:"Wireframe"}},setup(e){const n=e;let s=null,u=null;if("Wireframe"===n.style){const e=new o(n.builds.geometry);let a=(new t).fromEdgesGeometry(e),i=new l({color:n.color,linewidth:n.width,opacity:n.opacity,transparent:!0,depthWrite:!0,depthTest:!0});i.resolution.set(window.innerWidth,window.innerHeight),s=new r(a,i),s.applyMatrix4(n.builds.matrix.clone())}else{u={transparent:!0,uniforms:{uColor:{value:new a(n.color)},uOpacity:{value:n.opacity}},vertexShader:"\n       void main() {\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:" \n        uniform vec3 uColor;\n\t\t\t\tuniform float uOpacity;\n        void main() {\n          gl_FragColor = vec4(uColor, uOpacity);\n        }\n      "};const e=new o(n.builds.geometry),t=new i(u);s=new LineSegments(e,t),s.applyMatrix4(n.builds.matrix.clone()),s.material.linewidth=n.width,s.renderOrder=1e3}return y(()=>{"Shader"===n.style&&(n.color&&(u.uniforms.uColor.value=new a(n.color)),n.opacity&&(u.uniforms.uOpacity.value=n.opacity)),"Wireframe"===n.style&&(n.color&&(s.material.color=new a(n.color)),n.opacity&&(s.material.opacity=n.opacity)),n.width&&(s.material.linewidth=n.width)}),(e,a)=>(g(),h("primitive",{object:w(s)},null,8,E))}}),I={key:1,args:[1e3],position:[0,19,0]},N={key:2,args:[6e3,100],position:[0,19,0]},P=f({__name:"pagesShow",props:{showBuildings:{type:Boolean,default:!0},autoRotate:{type:Boolean,default:!0},showAxesHelper:{type:Boolean,default:!0},showGridHelper:{type:Boolean,default:!0},disableRender:{type:Boolean,default:!1}},setup(e,{expose:a}){const o=e,t=v({clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0,shadowMapType:u,outputColorSpace:s,toneMapping:n,toneMappingExposure:1.2,renderMode:o.disableRender?"manual":"always"}),l={autoRotate:o.autoRotate,enableDamping:!0,makeDefault:!0};let r=b(null);const i=b(!1);C(async()=>{o.showBuildings&&(r.value=await W()),i.value=!0});const d=e=>{},m=b();return a({context:m,contextReady:i}),(e,a)=>{const n=x("TresCanvas");return g(),B(n,F({ref_key:"tcRef",ref:m},t,{"window-size":"",onReady:d}),{default:S(()=>[a[0]||(a[0]=T("TresPerspectiveCamera",{position:[600,750,-1221],fov:45,near:1,far:1e5},null,-1)),_(w(c),j(A(l)),null,16),a[1]||(a[1]=T("TresAmbientLight",{color:"#ffffff"},null,-1)),a[2]||(a[2]=T("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1)),o.showBuildings&&i.value?(g(),h(L,{key:0},[_(D,{model:w(r)},null,8,["model"]),_(X,{builds:w(r).city,color:"#000"},null,8,["builds"])],64)):M("",!0),R(e.$slots,"ability"),o.showAxesHelper?(g(),h("TresAxesHelper",I)):M("",!0),o.showGridHelper?(g(),h("TresGridHelper",N)):M("",!0)]),_:3},16)}}});export{D as _,X as a,P as b,W as l};
