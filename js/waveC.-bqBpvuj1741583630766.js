import{e,o as n}from"./@tresjs.ZmhvXhx31741583630766.js";import{C as t,_ as o,c1 as r}from"./three.sQDbNBks1741583630766.js";import{P as i}from"./tweakpane.yDiyAAkA1741583630766.js";import{d as a,w as l,o as u,H as c,N as v,u as s,r as f,e as p,f as g,g as d,j as y,aj as m,ak as x,m as P}from"./@vue.NRI7TcgI1741583630766.js";import"./postprocessing.7Yq_IN-m1741583630766.js";import"./@vueuse.Z9_WSajh1741583630766.js";const z=S;function W(){const e=["string","peakColor","DoubleSide","#b367ff","table","__proto__","debu","test","uSinWaveFrequency","uPeakColor","445ZeCZnZ","warn","valleyColor","error","sinWaveFrequency","stateObject","call","vertexShader","colorOffset","uWaveAmplitude","side","sinWaveSpeed","perlinWaveAmplitude","info","uPerlinWaveAmplitude","9273504XGmEkJ","#184650","1802181PEyqVK","2446504kcMdlU","bind","console","length","79224AETIbh","log","function *\\( *\\)","setStyle",'{}.constructor("return this")( )',"uPerlinWaveFrequency","TresShaderMaterial","TresMesh","input","uTime","apply","trace","return (function() ","perlinWaveSpeed","counter","perlinWaveIterations","rotation-x","waveAmplitude","gger","set","chain","constructor","colorDamping","Color","init","Vector2","3002741ybDQLR","uColorOffset","perlinWaveFrequency","toString","10254BWoOmw","value","wireframe","2167708BkWVdO"];return(W=function(){return e})()}!function(e,n){const t=S,o=W();for(;;)try{if(722504===-parseInt(t(250))/1+-parseInt(t(246))/2+parseInt(t(245))/3+parseInt(t(217))/4+parseInt(t(228))/5*(parseInt(t(214))/6)+-parseInt(t(210))/7+parseInt(t(243))/8)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){w(this,(function(){const e=S,n=new RegExp(e(252)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=_(e(208));n[e(225)](o+e(204))&&t.test(o+e(258))?_():o("0")}))()}();const C=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[S(260)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(e,n){const t=W();return(S=function(e,n){return t[e-=202]})(e,n)}C(void 0,(function(){const e=S;let n;try{n=Function(e(262)+e(254)+");")()}catch(r){n=window}const t=n[e(248)]=n[e(248)]||{},o=[e(251),e(229),e(241),e(231),"exception",e(222),e(261)];for(let i=0;i<o[e(249)];i++){const n=C[e(205)].prototype.bind(C),r=o[i],a=t[r]||n;n[e(223)]=C[e(247)](C),n[e(213)]=a[e(213)][e(247)](a),t[r]=n}}))();const I=[z(266)],h=[z(238),z(235),"fragmentShader",z(216)],b=a({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(221)},valleyColor:{default:z(244)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,i=n,a={uTime:{value:0},uPeakColor:{value:new t(i[r(219)])},uValleyColor:{value:new(o[r(207)])(i[r(230)])},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i[r(206)]},uSinWaveFrequency:{value:new(o[r(209)])(i[r(232)].x,i[r(232)].y)},uWaveAmplitude:{value:i[r(267)]},uSinWaveSpeed:{value:new(o[r(209)])(i.sinWaveSpeed.x,i[r(239)].y)},uPerlinWaveIterations:{value:i[r(265)]},uPerlinWaveFrequency:{value:i[r(212)]},uPerlinWaveAmplitude:{value:i[r(240)]},uPerlinWaveSpeed:{value:i[r(263)]}},{onLoop:f}=e();return f((({elapsed:e})=>{a[r(259)].value=e})),l((()=>i),(()=>{const e=r;a[e(227)].value[e(253)](i[e(219)]),a.uValleyColor[e(215)][e(253)](i.valleyColor),a[e(211)][e(215)]=i[e(236)],a.uColorDamping[e(215)]=i[e(206)],a[e(226)][e(215)][e(203)](i[e(232)].x,i.sinWaveFrequency.y),a[e(237)][e(215)]=i[e(267)],a.uSinWaveSpeed[e(215)][e(203)](i[e(239)].x,i[e(239)].y),a.uPerlinWaveIterations[e(215)]=i.perlinWaveIterations,a[e(255)][e(215)]=i.perlinWaveFrequency,a[e(242)][e(215)]=i.perlinWaveAmplitude,a.uPerlinWaveSpeed.value=i[e(263)]}),{deep:!0}),(e,n)=>{const t=r;return u(),c(t(257),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v("TresPlaneGeometry",{args:[10,10,512,512]},null,-1)),v(t(256),{side:o[t(220)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[t(216)]},null,8,h)],8,I)}}});function _(e){function n(e){const t=S;if(typeof e===t(218))return function(e){}[t(205)]("while (true) {}")[t(260)](t(264));1!==(""+e/e)[t(249)]||e%20==0?function(){return!0}[t(205)](t(224)+t(202))[t(234)]("action"):function(){return!1}[t(205)]("debugger")[t(260)](t(233)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const A=k;!function(e,n){const t=k,o=T();for(;;)try{if(187504===-parseInt(t(307))/1*(-parseInt(t(312))/2)+parseInt(t(254))/3*(parseInt(t(259))/4)+-parseInt(t(294))/5+parseInt(t(255))/6*(parseInt(t(267))/7)+-parseInt(t(318))/8*(-parseInt(t(305))/9)+-parseInt(t(286))/10+-parseInt(t(310))/11*(-parseInt(t(284))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const q=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(290)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){q(this,(function(){const e=k,n=new RegExp(e(269)),t=new RegExp(e(289),"i"),o=O("init");n[e(303)](o+e(295))&&t[e(303)](o+e(300))?O():o("0")}))()}();const F=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(290)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function k(e,n){const t=T();return(k=function(e,n){return t[e-=254]})(e,n)}function T(){const e=["log","return (function() ","console","正弦波频率","table","NoToneMapping","54276iJGjdv","颜色抑制","711060BrAAlL","valleyColor","__proto__","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","apply","颜色偏移","SRGBColorSpace",'{}.constructor("return this")( )',"1239745RmSXle","chain","山峰颜色","perlinWaveIterations","stateObject","waveAmplitude","input","正弦波振幅","while (true) {}","test","prototype","37431UfPtYG","info","16LzQvBE","colorDamping","peakColor","649Lbnxfo","error","5496QQtxCt","length","toString","sinWaveFrequency","gger","constructor","32NtIVXe","3LQXqpc","39252YCpyFO","小波浪层数","inline","string","36024NohFLH","bind","waveC","counter","call","trace","sinWaveSpeed","TresGridHelper","182duIBJK","colorOffset","function *\\( *\\)","debu","小波浪速度","perlinWaveSpeed","addBinding","#ff6767","action","正弦波速度","TresPerspectiveCamera"];return(T=function(){return e})()}F(void 0,(function(){const e=k,n=function(){const e=k;let n;try{n=Function(e(279)+e(293)+");")()}catch(t){n=window}return n}(),t=n[e(280)]=n[e(280)]||{},o=[e(278),"warn",e(306),e(311),"exception",e(282),e(264)];for(let r=0;r<o[e(313)];r++){const n=F[e(317)][e(304)].bind(F),i=o[r],a=t[i]||n;n[e(288)]=F[e(260)](F),n[e(314)]=a[e(314)].bind(a),t[i]=n}}))();const j=a({__name:A(261),setup(e){const t=A,a={clearColor:"#222",shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:o[t(292)],toneMapping:o[t(283)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:t(274),valleyColor:"#310039",wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c[t(273)](l,"wireframe",{label:"网格化"}),c.addBinding(l,t(309),{label:t(296)}),c.addBinding(l,t(287),{label:"山谷颜色"}),c[t(273)](l,t(268),{label:t(291),min:.01,max:3,step:.01}),c[t(273)](l,t(308),{label:t(285),min:.01,max:6,step:.01}),c[t(273)](l,t(315),{label:t(281),picker:t(257),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c.addBinding(l,t(299),{label:t(301),min:0,max:2,step:.01}),c.addBinding(l,t(265),{label:t(276),picker:t(257),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c[t(273)](l,t(297),{label:t(256),min:1,max:7,step:.1}),c.addBinding(l,"perlinWaveFrequency",{label:"小波浪频率",min:0,max:5,step:.01}),c[t(273)](l,"perlinWaveAmplitude",{label:"小波浪幅度",min:0,max:2,step:.01}),c[t(273)](l,t(272),{label:t(271),min:0,max:2,step:.01}),(e,o)=>{const r=t,i=p("TresCanvas");return u(),g(i,P(a,{"window-size":""}),{default:d((()=>[o[0]||(o[0]=v(r(277),{position:[10,10,10]},null,-1)),y(s(n)),o[1]||(o[1]=v(r(266),{args:[10,10]},null,-1)),y(b,m(x(l)),null,16)])),_:1},16)}}});function O(e){function n(e){const t=k;if(typeof e===t(258))return function(e){}[t(317)](t(302))[t(290)](t(262));1!==(""+e/e)[t(313)]||e%20==0?function(){return!0}.constructor(t(270)+"gger")[t(263)](t(275)):function(){return!1}[t(317)]("debu"+t(316))[t(290)](t(298)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{j as default};
