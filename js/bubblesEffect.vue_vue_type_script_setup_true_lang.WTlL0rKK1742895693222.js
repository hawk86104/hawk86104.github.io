import{_ as n,C as t,a$ as e,cj as o,a as i,aj as r}from"./three.DqHgeVY11742895693222.js";import{m as a,e as s,a as l}from"./@tresjs.xCsT8yve1742895693222.js";import{d as u,b as c,a3 as f,a2 as p,o as m,H as g,N as b,aj as v,ak as y,u as d}from"./@vue.C4dqouNn1742895693222.js";const h=z;!function(n,t){const e=z,o=x();for(;;)try{if(131165===parseInt(e(321))/1*(-parseInt(e(294))/2)+-parseInt(e(303))/3+-parseInt(e(298))/4*(parseInt(e(334))/5)+parseInt(e(332))/6+parseInt(e(313))/7+parseInt(e(331))/8*(parseInt(e(289))/9)+-parseInt(e(328))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(320)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=z,t=new RegExp(n(317)),e=new RegExp(n(304),"i"),o=T(n(308));t[n(338)](o+n(329))&&e[n(338)](o+n(311))?T():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(320)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=x();return z=function(n,t){return e[n-=282]},z(n,t)}function x(){const n=["apply","1197JBnpWE","#84ccff","prototype","bind","uniforms","uTime","__proto__","1529590saCznH","chain","debu","6064WVApyq","1412904HOaYHj","opacity","32255GXrfoF","sin","Mesh","return (function() ","test","traverse","gger","offsetY","uOpacity","constructor","counter","error","2448KGLjul","action","position","stateObject","call","374gxDXhX",'{}.constructor("return this")( )',"geometry","dispose","48gqzgCX","value","verticesNeedUpdate","trace","length","2574QqcRmd","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","glowColor","console","warn","init","exception","xRayEffect","input","DoubleSide","1012011tPityQ","color","mergeGeometries","TresMeshRef","function *\\( *\\)","Color","log"];return(x=function(){return n})()}_(void 0,(function(){const n=z,t=function(){const n=z;let t;try{t=Function(n(337)+n(295)+");")()}catch(e){t=window}return t}(),e=t.console=t[n(306)]||{},o=[n(319),n(307),"info",n(288),n(309),"table",n(301)];for(let i=0;i<o[n(302)];i++){const t=_[n(286)][n(323)][n(324)](_),r=o[i],a=e[r]||t;t[n(327)]=_[n(324)](_),t.toString=a.toString[n(324)](a),e[r]=t}}))();const P=u({__name:h(310),props:{model:{},color:{default:h(322)},opacity:{default:1}},async setup(i){const r=h;let u,d;const w=i,_=c(),z=[];w.model[r(282)]((t=>{const e=r;t instanceof n[e(336)]&&(t.geometry[e(300)]=!0,z.push(t[e(296)]))}));const x=([u,d]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),u=await u,d(),u),P={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(w[r(314)])},lightningTexture:{type:"t",value:x.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:w[r(333)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[r(312)],blending:e,depthWrite:!1};P[r(325)][r(284)][r(299)]=Math[r(335)](5);const{camera:T}=a(),{onLoop:C}=s();return C((({delta:n})=>{const t=r;T.value[t(291)]&&_[t(299)]&&(P.uniforms[t(326)][t(299)]+=n)})),p((()=>{const t=r;_[t(299)]&&(_.value.geometry[t(297)](),_.value[t(296)]=o[t(315)](z)),w[t(314)]&&(P[t(325)][t(305)].value=new(n[t(318)])(w.color)),w[t(333)]&&(P.uniforms[t(285)][t(299)]=w.opacity)})),(n,t)=>{const e=r;return m(),g("TresMesh",{ref_key:e(316),ref:_},[t[0]||(t[0]=b("TresBufferGeometry",null,null,-1)),b("TresShaderMaterial",v(y(P)),null,16)],512)}}});function T(n){function t(n){const e=z;if("string"==typeof n)return function(n){}[e(286)]("while (true) {}")[e(320)](e(287));1!==(""+n/n)[e(302)]||n%20==0?function(){return!0}[e(286)](e(330)+e(283))[e(293)](e(290)):function(){return!1}[e(286)](e(330)+e(283))[e(320)](e(292)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const C=M;!function(n,t){const e=M,o=j();for(;;)try{if(981924===parseInt(e(311))/1*(-parseInt(e(332))/2)+parseInt(e(334))/3*(-parseInt(e(321))/4)+parseInt(e(319))/5+-parseInt(e(292))/6*(parseInt(e(260))/7)+-parseInt(e(285))/8+-parseInt(e(283))/9*(parseInt(e(299))/10)+parseInt(e(293))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){S(this,(function(){const n=M,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(269),"i"),o=F(n(267));t[n(329)](o+n(307))&&e[n(329)](o+n(326))?F():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(306)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function M(n,t){const e=j();return M=function(n,t){return e[n-=255]},M(n,t)}function j(){const n=["semantic","TresBufferGeometry","uTime","mergeGeometries","value","color","init","brainstem","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","console","bubblesEffect","opacity","afective","TresMeshRef","DoubleSide","call","counter","table","MathUtils","toString","BufferGeometryRef","setAttribute","9YMMMNo","ShaderMaterial","6993416AajynA","action","bubbles","debu","info","analitic","amigdala","612RfHesC","60019399uYEDHq","uOpacity","warn","bind","error","randFloat","9911960oBfUUR","Float32BufferAttribute","push","TresShaderMaterial","exception","glowColor","randInt","apply","chain","string","uniforms","Mesh","2forgNr","Color","return (function() ","name","uSlowTime","array","cerebellum","while (true) {}","3321175YYlUEV","traverse","4scIzOC","stateObject","__proto__","constructor","episodic","input","material","length","test","size","AdditiveBlending","1454854CZNrRI","log","8073tkyynJ","TresPoints","attributes",'{}.constructor("return this")( )',"geometry","position","124607BzXZTs"];return(j=function(){return n})()}I(void 0,(function(){const n=M;let t;try{t=Function(n(313)+n(257)+");")()}catch(i){t=window}const e=t[n(270)]=t[n(270)]||{},o=[n(333),n(295),n(289),n(297),n(303),n(278),"trace"];for(let r=0;r<o[n(328)];r++){const t=I[n(324)].prototype[n(296)](I),i=o[r],a=e[i]||t;t[n(323)]=I.bind(I),t[n(280)]=a[n(280)].bind(a),e[i]=t}}))();const B=u({__name:C(271),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(e){const a=C,l=e,u=[a(273),a(261),a(325),"process",a(291),a(268),"bridge",a(317),a(290)],f={};l.model[a(320)]((t=>{const e=a;t instanceof n[e(310)]&&u.map((n=>{const i=e;if(t[i(314)].includes(n)){if(f[n]){const e=[f[n],t[i(258)]];return f[n]=o[i(264)](e),f}return f[n]=t[i(258)]}return[]}))}));const h=c(),w=new(n[a(284)])({uniforms:{glowColor:{type:"c",value:new t(l[a(266)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(331)],side:n[a(275)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h.value&&(()=>{const t=a,e=[],o=[],s=[],l=[];for(let r=0;r<2e4-3*u[t(328)];r+=1){const a=i[t(305)](0,u[t(328)]-1),c=u[a],p=f[c][t(256)][t(259)].array[3*r+0]||0,m=f[c][t(256)][t(259)].array[3*r+1]||0,g=f[c][t(256)][t(259)][t(316)][3*r+2]||0;if(o[t(301)](p,m,g),e[r]=n[t(279)][t(298)](10,20),r%100==0){const n=i[t(305)](100,250)+m;l[t(301)](p,n,g,1)}else l.push(p,m,g,0);s[2*r+0]=n[t(279)][t(298)](.5,1.5),s[2*r+1]=2.5}h[t(265)].setAttribute("aDelayDuration",new r(s,2)),h.value[t(282)](t(287),new(n[t(300)])(l,4)),h[t(265)][t(282)](t(259),new(n[t(300)])(o,3)),h[t(265)][t(282)](t(266),new(n[t(300)])([],3)),h[t(265)].setAttribute(t(330),new r(e,1)),h[t(265)].computeBoundingSphere()})()}));const _=c(),{onLoop:z}=s();return z((({delta:t})=>{const e=a;_[e(265)]&&(_[e(265)][e(327)][e(309)][e(263)].value+=.05,_[e(265)][e(327)][e(309)][e(315)].value+=1/400),l[e(266)]&&(w[e(309)][e(304)][e(265)]=new(n[e(312)])(l[e(266)])),l[e(272)]&&(w[e(309)][e(294)].value=l.opacity)})),(n,t)=>{const e=a;return m(),g(e(255),{ref_key:e(274),ref:_},[b(e(262),{ref_key:e(281),ref:h},null,512),b(e(302),v(y(d(w))),null,16)],512)}}});function F(n){function t(n){const e=M;if(typeof n===e(308))return function(n){}[e(324)](e(318))[e(306)](e(277));1!==(""+n/n)[e(328)]||n%20==0?function(){return!0}[e(324)](e(288)+"gger")[e(276)](e(286)):function(){return!1}.constructor(e(288)+"gger")[e(306)](e(322)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,B as a};
