import{K as e}from"./@tresjs.DqJWjmrH1761100244891.js";import{bJ as o}from"./three.DvmzhRS91761100244891.js";import{d as i,r as n,g as a,b as t,o as s,e as r,I as l,h as u,u as m,a9 as d,aa as c,m as p}from"./@vue.CKlgtJke1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";const v={position:[-2,-2,-2]},f=["position","a-scale"],P=3e3,h=i({__name:"shaderParticles",setup(i){const h=n({clearColor:"black",shadows:!0,alpha:!1}),g={transparent:!0,blending:o,depthWrite:!1,vertexShader:"\n  uniform float uPixelRatio;\n  uniform float uSize;\n  uniform float uTime;\n  attribute float aScale;\n\n  void main()\n  {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n      modelPosition.y += sin(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectionPosition = projectionMatrix * viewPosition;\n\n      gl_Position = projectionPosition;\n      gl_PointSize = aScale * uSize * uPixelRatio;\n      gl_PointSize *= (1.0 / - viewPosition.z);\n  }\n  ",fragmentShader:"\n  void main()\n    {\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n      float strength = 0.05 / distanceToCenter - 0.1;\n\n      gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n    }\n  ",uniforms:{uSize:{value:100},uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uTime:{value:0}}},T=new Float32Array(9e3),w=new Float32Array(P);for(let e=0;e<P;e++)T[3*e+0]=4*Math.random(),T[3*e+1]=4*Math.random(),T[3*e+2]=4*Math.random(),w[e]=Math.random();const S=({elapsed:e})=>{g.uniforms.uTime.value=e};return(o,i)=>{const n=a("TresCanvas");return s(),t(n,p(h,{"window-size":"",onLoop:S}),{default:r(()=>[i[0]||(i[0]=l("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:.1,far:1e3,"look-at":[-8,3,-3]},null,-1)),u(m(e)),i[1]||(i[1]=l("TresAmbientLight",{intensity:.5},null,-1)),l("TresPoints",v,[l("TresBufferGeometry",{position:[m(T),3],"a-scale":[m(w),1]},null,8,f),l("TresShaderMaterial",d(c(g)),null,16)]),i[2]||(i[2]=l("TresDirectionalLight",{position:[0,2,4],intensity:1,"cast-shadow":""},null,-1)),i[3]||(i[3]=l("TresGridHelper",null,null,-1))]),_:1},16)}}});export{h as default};
