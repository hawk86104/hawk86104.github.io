import{e,U as n}from"./@tresjs.xlnLF3O61731462043013.js";import{_ as t,k as o,bU as r}from"./three.wKRaqyB-1731462043013.js";import{P as i}from"./tweakpane.yHWGBmom1731462043013.js";import{d as a,w as l,o as u,D as c,J as v,u as s,r as f,e as p,f as g,g as d,j as y,aj as m,ak as x,m as P}from"./@vue.-THQH3GC1731462043013.js";import"./@vueuse.W4jVx8WA1731462043013.js";const z=W;function W(e,n){const t=C();return(W=function(e,n){return t[e-=375]})(e,n)}!function(e,n){const t=W,o=C();for(;;)try{if(337739===parseInt(t(396))/1+parseInt(t(428))/2+parseInt(t(407))/3+-parseInt(t(403))/4*(parseInt(t(443))/5)+parseInt(t(378))/6*(-parseInt(t(405))/7)+parseInt(t(419))/8+parseInt(t(380))/9*(-parseInt(t(415))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[W(387)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){w(this,(function(){const e=W,n=new RegExp(e(394)),t=new RegExp(e(389),"i"),o=b("init");n.test(o+e(444))&&t[e(385)](o+e(438))?b():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function C(){const e=["return (function() ","function *\\( *\\)","gger","308458eJlNrO","TresMesh","uColorDamping","uSinWaveFrequency","wireframe","#b367ff","DoubleSide","108eOnUhJ","log","21DiUiBS","table","561030DMXrdw","perlinWaveFrequency","uPerlinWaveIterations","sinWaveFrequency","constructor","colorDamping","TresShaderMaterial","value","70ODjZjr","set","string","debu","1774088YMBqZK","Vector2","Color","action","console","toString","side","uPerlinWaveFrequency","perlinWaveIterations","1006194dtycSz","uValleyColor","colorOffset","stateObject","uTime","uPerlinWaveAmplitude","length","bind","trace","uSinWaveSpeed","input","error","#184650","while (true) {}","__proto__","72085EtPRXO","chain","counter",'{}.constructor("return this")( )',"perlinWaveSpeed","prototype","506274eAzdpO","uWaveAmplitude","308817VqFegv","valleyColor","waveC","setStyle","TresPlaneGeometry","test","uPerlinWaveSpeed","apply","peakColor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","sinWaveSpeed","perlinWaveAmplitude","uPeakColor"];return(C=function(){return e})()}S(void 0,(function(){const e=W;let n;try{n=Function(e(393)+e(375)+");")()}catch(r){n=window}const t=n.console=n[e(423)]||{},o=[e(404),"warn","info",e(439),"exception",e(406),e(436)];for(let i=0;i<o[e(434)];i++){const n=S[e(411)][e(377)][e(435)](S),r=o[i],a=t[r]||n;n[e(442)]=S[e(435)](S),n[e(424)]=a[e(424)][e(435)](a),t[r]=n}}))();const h=["rotation-x"],I=[z(425),"vertexShader","fragmentShader","wireframe"],_=a({__name:z(382),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(401)},valleyColor:{default:z(440)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,i=n,a={uTime:{value:0},uPeakColor:{value:new(t[r(421)])(i[r(388)])},uValleyColor:{value:new(t[r(421)])(i[r(381)])},uColorOffset:{value:i[r(430)]},uColorDamping:{value:i[r(412)]},uSinWaveFrequency:{value:new o(i[r(410)].x,i[r(410)].y)},uWaveAmplitude:{value:i.waveAmplitude},uSinWaveSpeed:{value:new(t[r(420)])(i.sinWaveSpeed.x,i[r(390)].y)},uPerlinWaveIterations:{value:i[r(427)]},uPerlinWaveFrequency:{value:i[r(408)]},uPerlinWaveAmplitude:{value:i.perlinWaveAmplitude},uPerlinWaveSpeed:{value:i[r(376)]}},{onLoop:f}=e();return f((({elapsed:e})=>{const n=r;a[n(432)][n(414)]=e})),l((()=>i),(()=>{const e=r;a[e(392)][e(414)][e(383)](i.peakColor),a[e(429)].value[e(383)](i.valleyColor),a.uColorOffset[e(414)]=i[e(430)],a[e(398)][e(414)]=i[e(412)],a[e(399)][e(414)][e(416)](i[e(410)].x,i.sinWaveFrequency.y),a[e(379)][e(414)]=i.waveAmplitude,a[e(437)].value[e(416)](i[e(390)].x,i.sinWaveSpeed.y),a[e(409)][e(414)]=i[e(427)],a[e(426)][e(414)]=i.perlinWaveFrequency,a[e(433)][e(414)]=i[e(391)],a[e(386)].value=i[e(376)]}),{deep:!0}),(e,n)=>{const o=r;return u(),c(o(397),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v(o(384),{args:[10,10,512,512]},null,-1)),v(o(413),{side:t[o(402)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[o(400)]},null,8,I)],8,h)}}});function b(e){function n(e){const t=W;if(typeof e===t(417))return function(e){}[t(411)](t(441)).apply(t(445));1!==(""+e/e)[t(434)]||e%20==0?function(){return!0}[t(411)](t(418)+t(395)).call(t(422)):function(){return!1}[t(411)](t(418)+"gger")[t(387)](t(431)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const A=T;!function(e,n){const t=T,o=F();for(;;)try{if(479337===-parseInt(t(337))/1+parseInt(t(332))/2*(parseInt(t(298))/3)+parseInt(t(324))/4*(-parseInt(t(334))/5)+-parseInt(t(313))/6*(parseInt(t(311))/7)+-parseInt(t(333))/8+parseInt(t(312))/9+parseInt(t(345))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const q=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(){const e=["小波浪频率","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","action",'{}.constructor("return this")( )',"chain","inline","颜色偏移","table","504dMGtqG","702567PHhCwy","13326EzzHtW","TresPerspectiveCamera","exception","perlinWaveIterations","TresCanvas","valleyColor","waveAmplitude","小波浪幅度","waveC","test","warn","3831492UdVdZP","#ff6767","__proto__","perlinWaveFrequency","function *\\( *\\)","正弦波频率","stateObject","return (function() ","16iBoiAV","725032NKPeZA","5FsoQAY","colorOffset","debu","405794yrBOJY","sinWaveFrequency","error","constructor","call","NoToneMapping","log","length","15315060rMkakm","counter","#310039","addBinding","山峰颜色","SRGBColorSpace","#222","perlinWaveSpeed","小波浪层数","while (true) {}","正弦波速度","gger","bind","网格化","181491IcIkhE","toString","perlinWaveAmplitude","正弦波振幅"];return(F=function(){return e})()}!function(){q(this,(function(){const e=T,n=new RegExp(e(328)),t=new RegExp(e(304),"i"),o=j(e(303));n[e(322)](o+e(307))&&t.test(o+"input")?j():o("0")}))()}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function T(e,n){const t=F();return(T=function(e,n){return t[e-=285]})(e,n)}k(void 0,(function(){const e=T;let n;try{n=Function(e(331)+e(306)+");")()}catch(r){n=window}const t=n.console=n.console||{},o=[e(343),e(323),"info",e(339),e(315),e(310),"trace"];for(let i=0;i<o[e(344)];i++){const n=k[e(340)].prototype.bind(k),r=o[i],a=t[r]||n;n[e(326)]=k[e(296)](k),n[e(299)]=a[e(299)][e(296)](a),t[r]=n}}))();const O=a({__name:A(321),setup(e){const o=A,a={clearColor:o(290),shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:t[o(289)],toneMapping:t[o(342)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:o(325),valleyColor:o(286),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c[o(287)](l,"wireframe",{label:o(297)}),c[o(287)](l,"peakColor",{label:o(288)}),c[o(287)](l,o(318),{label:"山谷颜色"}),c[o(287)](l,o(335),{label:o(309),min:.01,max:3,step:.01}),c[o(287)](l,"colorDamping",{label:"颜色抑制",min:.01,max:6,step:.01}),c.addBinding(l,o(338),{label:o(329),picker:o(308),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c.addBinding(l,o(319),{label:o(301),min:0,max:2,step:.01}),c[o(287)](l,"sinWaveSpeed",{label:o(294),picker:"inline",x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c[o(287)](l,o(316),{label:o(292),min:1,max:7,step:.1}),c.addBinding(l,o(327),{label:o(302),min:0,max:5,step:.01}),c[o(287)](l,o(300),{label:o(320),min:0,max:2,step:.01}),c[o(287)](l,o(291),{label:"小波浪速度",min:0,max:2,step:.01}),(e,t)=>{const r=o,i=p(r(317));return u(),g(i,P(a,{"window-size":""}),{default:d((()=>[t[0]||(t[0]=v(r(314),{position:[10,10,10]},null,-1)),y(s(n)),t[1]||(t[1]=v("TresGridHelper",{args:[10,10]},null,-1)),y(_,m(x(l)),null,16)])),_:1},16)}}});function j(e){function n(e){const t=T;if("string"==typeof e)return function(e){}.constructor(t(293)).apply(t(285));1!==(""+e/e)[t(344)]||e%20==0?function(){return!0}.constructor(t(336)+t(295))[t(341)](t(305)):function(){return!1}[t(340)]("debugger").apply(t(330)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{O as default};
