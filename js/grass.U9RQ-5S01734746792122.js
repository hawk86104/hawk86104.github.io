import{_ as t,V as n,as as e,T as o,ai as r}from"./three.1FILWcBb1734746792122.js";import{e as a,b as i,U as s,c}from"./@tresjs.vA_UT8oy1734746792122.js";import"./index.aOdJH2Uf1734746792122.js";import{a as l}from"./simplex-noise.Yx8GBgKo1734746792122.js";import{C as u}from"./index.5EJM2L-T1734746792122.js";import{d as f,a6 as p,o as h,D as m,J as d,u as v,r as g,f as x,g as w,j as y,aj as b,ak as _,al as j}from"./@vue.-THQH3GC1734746792122.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.rcDau37N1734746792122.js";import"./@vueuse.lqJslAkC1734746792122.js";import"./lamina.NPDeqEpV1734746792122.js";import"./glsl-tokenizer.nuQIbiEU1734746792122.js";import"./@amap.zNgKkCGX1734746792122.js";import"./glsl-token-descope.GeHxDQJy1734746792122.js";import"./glsl-token-depth.nTCWCtL21734746792122.js";import"./glsl-token-scope.0z1CaDEQ1734746792122.js";import"./glsl-token-properties.uAl9IcF51734746792122.js";import"./glsl-token-assignments.LBXXpVnb1734746792122.js";import"./glsl-token-string.94Tm9fXU1734746792122.js";import"./glsl-token-functions.xhw_MWdT1734746792122.js";import"./object-hash.J27X2Uyf1734746792122.js";import"./jszip.shhf2-t61734746792122.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang._RJNy3ZO1734746792122.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.1dmaOr9T1734746792122.js";import"./three-stdlib.1ZAvCJOA1734746792122.js";import"./@pmndrs.53rYJjok1734746792122.js";import"./utils.AMhiIFG-1734746792122.js";const M=C;!function(t,n){const e=C,o=F();for(;;)try{if(532552===-parseInt(e(508))/1*(parseInt(e(542))/2)+-parseInt(e(512))/3*(-parseInt(e(548))/4)+-parseInt(e(554))/5+parseInt(e(516))/6*(-parseInt(e(559))/7)+-parseInt(e(556))/8+parseInt(e(520))/9*(-parseInt(e(555))/10)+parseInt(e(522))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){A(this,(function(){const t=C,n=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=P(t(494));n[t(560)](o+t(571))&&e[t(560)](o+t(507))?P():o("0")}))()}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function C(t,n){const e=F();return(C=function(t,n){return e[t-=494]})(t,n)}function F(){const t=["log","time","cos","translate","width","trace","chain","constructor","halfRootAngleSinF32","instances","init","return (function() ","#000f00","set","toString","PlaneGeometry","attributes-halfRootAngleSin","table","value","console","array","length","attributes-orientation","input","974825viwDPN","side","bind","Vector3","534930dRPCqd","__proto__","Color","TresMesh","18bzxYUE","InstancedBufferAttribute","counter","geometry","718506RzKOGM","Vector4","42161537JHgrAj","info","debu","DoubleSide","computeVertexNormals","needsUpdate","convertSRGBToLinear","TresMeshStandardMaterial","action","push","prototype","uniforms",'{}.constructor("return this")( )',"attributes-offset","gger","position","exception","attributes","warn","TresGroup","2nVcdfo","offsetsF32","material","map","stretchesF32","sin","4yNFQYo","attributes-uv","call","orientationsF32","apply","joints","3876440jiznIN","90AXeVbG","5916232VhvIYd","random","grass","631113rbFNsU","test","alphaMap","normalize","attributes-position","attributes-stretch"];return(F=function(){return t})()}I(void 0,(function(){const t=C,n=function(){const t=C;let n;try{n=Function(t(495)+t(534)+");")()}catch(e){n=window}return n}(),e=n[t(503)]=n[t(503)]||{},o=[t(565),t(540),t(523),"error",t(538),t(501),t(570)];for(let r=0;r<o[t(505)];r++){const n=I[t(572)][t(532)][t(510)](I),a=o[r],i=e[a]||n;n[t(513)]=I[t(510)](I),n[t(498)]=i.toString.bind(i),e[a]=n}}))();const R=[M(544)],S=["index",M(563),M(549),M(535),M(506),M(564),M(500),"attributes-halfRootAngleCos"],k=[M(519)],D=[M(509)],T=f({__name:M(558),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(r){const s=M;let c,f;const g=([c,f]=p((()=>i({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),c=await c,f(),c),x=r,w=l(Math[s(557)]);function y(n,e){const o=s,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,c=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(521)])(r,a,i,c)}function b(t,n){var e=2*w(t/50,n/50);return e+=4*w(t/100,n/100),e+=.2*w(t/10,n/10)}const _=function(r,a){const i=s,c=[],l=[],u=[],f=[],p=[];let h=new e,m=new(t[i(521)]);const d=-.25;for(let e=0;e<r;e++){const o=Math[i(557)]()*a-a/2,s=Math[i(557)]()*a-a/2,v=b(o,s);c[i(531)](o,v,s);let g=Math.PI-Math[i(557)]()*(2*Math.PI);f.push(Math.sin(.5*g)),p.push(Math.cos(.5*g));let x=new n(0,1,0),w=x.x*Math[i(547)](g/2),_=x.y*Math[i(547)](g/2),j=x.z*Math[i(547)](g/2),z=Math[i(567)](g/2);h.set(w,_,j,z)[i(562)](),g=.5*Math.random()+d,x=new n(1,0,0),w=x.x*Math.sin(g/2),_=x.y*Math[i(547)](g/2),j=x.z*Math[i(547)](g/2),z=Math.cos(g/2),m[i(497)](w,_,j,z)[i(562)](),h=y(h,m),g=.5*Math.random()+d,x=new(t[i(511)])(0,0,1),w=x.x*Math.sin(g/2),_=x.y*Math[i(547)](g/2),j=x.z*Math[i(547)](g/2),z=Math[i(567)](g/2),m[i(497)](w,_,j,z).normalize(),h=y(h,m),l[i(531)](h.x,h.y,h.z,h.w),e<r/3?u[i(531)](1.8*Math[i(557)]()):u[i(531)](Math[i(557)]())}return{offsetsF32:new o(new Float32Array(c),3),orientationsF32:new(t[i(517)])(new Float32Array(l),4),stretchesF32:new(t[i(517)])(new Float32Array(u),1),halfRootAngleCosF32:new o(new Float32Array(p),1),halfRootAngleSinF32:new o(new Float32Array(f),1)}}(x[s(574)],x.width),j=new(t[s(499)])(x.bW,x.bH,1,x[s(553)])[s(568)](0,x.bH/2,0),z=new(t[s(499)])(x[s(569)],x[s(569)],32,32);z.lookAt(new n(0,1,0));const A=z.attributes[s(537)];for(let t=0;t<A.array[s(505)];t+=3)A[s(504)][t+1]=b(A[s(504)][t],A.array[t+2]);z[s(539)][s(537)][s(527)]=!0,z[s(526)]();const I=new(u({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[s(514)])(.3,.9,0)[s(528)](),bottomColor:new(t[s(514)])(0,.2,0).convertSRGBToLinear()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=s;n[e(509)]=t[e(525)]})));I[s(545)]=g[s(545)],I.alphaMap=g[s(561)],I.toneMapped=!1;const{onLoop:C}=a();return C((({elapsed:t})=>{const n=s;I[n(533)][n(566)][n(502)]=t/4})),(n,e)=>{const o=s;return h(),m(o(541),null,[d(o(515),{material:v(I)},[d("TresInstancedBufferGeometry",{index:v(j).index,"attributes-position":v(j).attributes[o(537)],"attributes-uv":v(j).attributes.uv,"attributes-offset":v(_)[o(543)],"attributes-orientation":v(_)[o(551)],"attributes-stretch":v(_)[o(546)],"attributes-halfRootAngleSin":v(_)[o(573)],"attributes-halfRootAngleCos":v(_).halfRootAngleCosF32},null,8,S)],8,R),d(o(515),{position:[0,0,0],geometry:v(z)},[d(o(529),{color:o(496),side:t[o(525)]},null,8,D)],8,k)])}}});function P(t){function n(t){const e=C;if("string"==typeof t)return function(t){}[e(572)]("while (true) {}")[e(552)](e(518));1!==(""+t/t)[e(505)]||t%20==0?function(){return!0}[e(572)]("debu"+e(536))[e(550)](e(530)):function(){return!1}[e(572)](e(524)+e(536))[e(552)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const B=L;!function(t,n){const e=L,o=O();for(;;)try{if(134902===parseInt(e(402))/1*(-parseInt(e(383))/2)+parseInt(e(363))/3+-parseInt(e(400))/4*(parseInt(e(385))/5)+parseInt(e(379))/6+-parseInt(e(395))/7+-parseInt(e(390))/8+parseInt(e(378))/9)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const E=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[L(381)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){E(this,(function(){const t=L,n=new RegExp(t(374)),e=new RegExp(t(372),"i"),o=V(t(391));n.test(o+t(373))&&e[t(376)](o+t(397))?V():o("0")}))()}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[L(381)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function O(){const t=["__proto__","2778642UTplPd","420474IoUzZu","return (function() ","apply","info","10088hvuOoF","TresPerspectiveCamera","284465uvunpp","toString","string","while (true) {}","gger","1437960sBCdrs","init","bind","console","constructor","854266rdwpWg","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","input","log","table","4BFHDWH","prototype","11PurTbT","510735klKKVC","grass","action","counter","warn","exception",'{}.constructor("return this")( )',"call","stateObject","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","chain","function *\\( *\\)","trace","test"];return(O=function(){return t})()}H(void 0,(function(){const t=L;let n;try{n=Function(t(380)+t(369)+");")()}catch(r){n=window}const e=n[t(393)]=n.console||{},o=[t(398),t(367),t(382),"error",t(368),t(399),t(375)];for(let a=0;a<o.length;a++){const n=H.constructor[t(401)][t(392)](H),r=o[a],i=e[r]||n;n[t(377)]=H.bind(H),n[t(386)]=i[t(386)][t(392)](i),e[r]=n}}))();const U=f({__name:B(364),setup(t){const n=g({alpha:!0,toneMapping:r,windowSize:!0,clearColor:6710886}),e=g({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=L;return h(),x(v(c),b(_(n)),{default:w((()=>[o[0]||(o[0]=d(r(384),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),y(v(s),b(_(e)),null,16),(h(),x(j,null,{default:w((()=>[y(T)])),_:1})),(h(),x(j,null,{default:w((()=>[y(v(z),{texture:r(396)})])),_:1}))])),_:1},16)}}});function L(t,n){const e=O();return(L=function(t,n){return e[t-=363]})(t,n)}function V(t){function n(t){const e=L;if(typeof t===e(387))return function(t){}[e(394)](e(388))[e(381)](e(366));1!==(""+t/t).length||t%20==0?function(){return!0}.constructor("debu"+e(389))[e(370)](e(365)):function(){return!1}.constructor("debu"+e(389))[e(381)](e(371)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{U as default};
