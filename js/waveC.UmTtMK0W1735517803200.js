import{e,U as n}from"./@tresjs.0qL_P2CE1735517803200.js";import{_ as t,k as o}from"./three.-uH5I3Xp1735517803200.js";import{P as i}from"./tweakpane.yHWGBmom1735517803200.js";import{d as r,w as a,o as l,D as u,J as c,u as v,r as s,e as f,f as p,g as d,j as g,aj as y,ak as m,m as x}from"./@vue.-THQH3GC1735517803200.js";import"./@vueuse.oT9wchAS1735517803200.js";function P(){const e=["chain","trace","#184650","colorOffset","function *\\( *\\)","1574292NxLSIO",'{}.constructor("return this")( )',"Color","peakColor","return (function() ","1538579OukYyr","8NTuzhW","perlinWaveFrequency","2xtimSK","table","uSinWaveSpeed","debu","TresMesh","152997aWlziL","prototype","1068556OTSMzH","apply","setStyle","uWaveAmplitude","fragmentShader","perlinWaveIterations","while (true) {}","stateObject","DoubleSide","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uPerlinWaveFrequency","exception","uPerlinWaveSpeed","warn","sinWaveSpeed","sinWaveFrequency","Vector2","constructor","action","log","waveAmplitude","821655CRwsAV","wireframe","string","bind","TresShaderMaterial","uTime","uSinWaveFrequency","init","error","uPerlinWaveIterations","gger","toString","perlinWaveSpeed","colorDamping","TresPlaneGeometry","test","valleyColor","608274CdXYxS","length","#b367ff","vertexShader","set","input","side","uValleyColor","console","perlinWaveAmplitude","value","962015yaNXBl"];return(P=function(){return e})()}const z=w;!function(e,n){const t=w,o=P();for(;;)try{if(163693===-parseInt(t(185))/1*(parseInt(t(180))/2)+parseInt(t(155))/3+-parseInt(t(187))/4+-parseInt(t(166))/5+parseInt(t(172))/6+-parseInt(t(177))/7*(-parseInt(t(178))/8)+parseInt(t(208))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[w(188)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=w,n=new RegExp(e(171)),t=new RegExp(e(196),"i"),o=_(e(145));n[e(153)](o+e(167))&&t[e(153)](o+e(160))?_():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[w(188)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function w(e,n){const t=P();return(w=function(e,n){return t[e-=139]})(e,n)}S(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function(e(176)+e(173)+");")()}catch(t){n=window}return n}(),t=n[e(163)]=n[e(163)]||{},o=[e(206),e(200),"info",e(146),e(198),e(181),e(168)];for(let i=0;i<o.length;i++){const n=S[e(204)][e(186)][e(141)](S),r=o[i],a=t[r]||n;n.__proto__=S[e(141)](S),n.toString=a[e(149)][e(141)](a),t[r]=n}}))();const C=["rotation-x"],h=[z(161),z(158),z(191),z(139)],I=r({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(157)},valleyColor:{default:z(169)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const i=z,r=n,s={uTime:{value:0},uPeakColor:{value:new(t[i(174)])(r[i(175)])},uValleyColor:{value:new(t[i(174)])(r[i(154)])},uColorOffset:{value:r.colorOffset},uColorDamping:{value:r[i(151)]},uSinWaveFrequency:{value:new o(r[i(202)].x,r.sinWaveFrequency.y)},uWaveAmplitude:{value:r[i(207)]},uSinWaveSpeed:{value:new(t[i(203)])(r.sinWaveSpeed.x,r[i(201)].y)},uPerlinWaveIterations:{value:r.perlinWaveIterations},uPerlinWaveFrequency:{value:r[i(179)]},uPerlinWaveAmplitude:{value:r.perlinWaveAmplitude},uPerlinWaveSpeed:{value:r.perlinWaveSpeed}},{onLoop:f}=e();return f((({elapsed:e})=>{const n=i;s[n(143)][n(165)]=e})),a((()=>r),(()=>{const e=i;s.uPeakColor[e(165)].setStyle(r.peakColor),s[e(162)][e(165)][e(189)](r[e(154)]),s.uColorOffset.value=r[e(170)],s.uColorDamping.value=r[e(151)],s[e(144)][e(165)].set(r[e(202)].x,r.sinWaveFrequency.y),s[e(190)][e(165)]=r.waveAmplitude,s[e(182)][e(165)][e(159)](r[e(201)].x,r[e(201)].y),s[e(147)][e(165)]=r[e(192)],s[e(197)][e(165)]=r[e(179)],s.uPerlinWaveAmplitude.value=r[e(164)],s[e(199)][e(165)]=r[e(150)]}),{deep:!0}),(e,n)=>{const o=i;return l(),u(o(184),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=c(o(152),{args:[10,10,512,512]},null,-1)),c(o(142),{side:t[o(195)],vertexShader:v("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:v("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:s,wireframe:e[o(139)]},null,8,h)],8,C)}}});function _(e){function n(e){const t=w;if(typeof e===t(140))return function(e){}[t(204)](t(193))[t(188)]("counter");1!==(""+e/e)[t(156)]||e%20==0?function(){return!0}[t(204)](t(183)+t(148)).call(t(205)):function(){return!1}[t(204)](t(183)+t(148))[t(188)](t(194)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const b=k;!function(e,n){const t=k,o=F();for(;;)try{if(851726===parseInt(t(399))/1+-parseInt(t(440))/2+parseInt(t(408))/3+-parseInt(t(405))/4*(-parseInt(t(443))/5)+-parseInt(t(412))/6+-parseInt(t(389))/7*(-parseInt(t(411))/8)+-parseInt(t(425))/9*(parseInt(t(421))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){A(this,(function(){const e=k,n=new RegExp(e(410)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=M(e(430));n[e(432)](o+e(387))&&t.test(o+e(450))?M():o("0")}))()}();const q=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(419)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(){const e=["perlinWaveAmplitude","gger","debu","NoToneMapping","perlinWaveSpeed","384442lIHUmB","exception","valleyColor","15adawsS","log","table","stateObject","小波浪幅度","info","addBinding","input","BasicShadowMap","chain","warn","2748032ZiJoMY","sinWaveSpeed","TresCanvas","山峰颜色","prototype","#310039","console","正弦波频率","toString","颜色抑制","11955gtSVqE","SRGBColorSpace","colorOffset",'{}.constructor("return this")( )',"perlinWaveFrequency","#222","475868mUdPMj","string","error","4346997AIBdWS","action","function *\\( *\\)","16XzDWqp","4610748yqQlVs","waveC","peakColor","小波浪速度","sinWaveFrequency","颜色偏移","trace","apply","length","460McDHTP","TresGridHelper","wireframe","小波浪层数","154683pDERuX","inline","网格化","正弦波振幅","bind","init","perlinWaveIterations","test","constructor","colorDamping"];return(F=function(){return e})()}function k(e,n){const t=F();return(k=function(e,n){return t[e-=386]})(e,n)}q(void 0,(function(){const e=k,n=function(){const e=k;let n;try{n=Function("return (function() "+e(402)+");")()}catch(t){n=window}return n}(),t=n[e(395)]=n[e(395)]||{},o=[e(444),e(388),e(448),e(407),e(441),e(445),e(418)];for(let i=0;i<o.length;i++){const n=q[e(433)][e(393)][e(429)](q),r=o[i],a=t[r]||n;n.__proto__=q[e(429)](q),n[e(397)]=a[e(397)].bind(a),t[r]=n}}))();const T=r({__name:b(413),setup(e){const o=b,r={clearColor:o(404),shadows:!0,alpha:!1,shadowMapType:t[o(386)],outputColorSpace:t[o(400)],toneMapping:t[o(438)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},a=s({peakColor:"#ff6767",valleyColor:o(394),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),u=new i({title:"参数",expanded:!0});return u[o(449)](a,o(423),{label:o(427)}),u[o(449)](a,o(414),{label:o(392)}),u.addBinding(a,o(442),{label:"山谷颜色"}),u.addBinding(a,o(401),{label:o(417),min:.01,max:3,step:.01}),u[o(449)](a,o(434),{label:o(398),min:.01,max:6,step:.01}),u[o(449)](a,o(416),{label:o(396),picker:o(426),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),u.addBinding(a,"waveAmplitude",{label:o(428),min:0,max:2,step:.01}),u[o(449)](a,o(390),{label:"正弦波速度",picker:o(426),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),u.addBinding(a,o(431),{label:o(424),min:1,max:7,step:.1}),u.addBinding(a,o(403),{label:"小波浪频率",min:0,max:5,step:.01}),u.addBinding(a,o(435),{label:o(447),min:0,max:2,step:.01}),u.addBinding(a,o(439),{label:o(415),min:0,max:2,step:.01}),(e,t)=>{const i=o,u=f(i(391));return l(),p(u,x(r,{"window-size":""}),{default:d((()=>[t[0]||(t[0]=c("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),g(v(n)),t[1]||(t[1]=c(i(422),{args:[10,10]},null,-1)),g(I,y(m(a)),null,16)])),_:1},16)}}});function M(e){function n(e){const t=k;if(typeof e===t(406))return function(e){}[t(433)]("while (true) {}")[t(419)]("counter");1!==(""+e/e)[t(420)]||e%20==0?function(){return!0}[t(433)](t(437)+t(436)).call(t(409)):function(){return!1}[t(433)](t(437)+"gger")[t(419)](t(446)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{T as default};
