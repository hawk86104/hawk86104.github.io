import{_ as n,bV as t}from"./three.CQvcOG671729762363846.js";import{U as o}from"./@tresjs.CmAaFQUS1729762363846.js";import{g as e}from"./utils.g_yV3y2C1729762363846.js";import{d as r,b as i,a2 as s,o as a,E as c,L as u,u as l,aj as f,ak as p}from"./@vue.n8X62v121729762363846.js";const v=g;!function(n,t){const o=g,e=I();for(;;)try{if(327803===parseInt(o(282))/1*(parseInt(o(265))/2)+-parseInt(o(269))/3*(parseInt(o(244))/4)+-parseInt(o(243))/5*(-parseInt(o(242))/6)+parseInt(o(234))/7*(parseInt(o(257))/8)+parseInt(o(255))/9*(-parseInt(o(236))/10)+parseInt(o(280))/11*(-parseInt(o(264))/12)+-parseInt(o(231))/13*(parseInt(o(277))/14))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const m=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[g(246)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){m(this,(function(){const n=g,t=new RegExp("function *\\( *\\)"),o=new RegExp(n(241),"i"),e=x(n(263));t[n(284)](e+n(233))&&o.test(e+n(235))?x():e("0")}))()}();const d=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[g(246)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();d(void 0,(function(){const n=g;let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(r){t=window}const o=t[n(258)]=t[n(258)]||{},e=["log",n(281),n(272),n(262),n(260),n(245),"trace"];for(let i=0;i<e[n(232)];i++){const t=d[n(248)][n(238)][n(276)](d),r=e[i],s=o[r]||t;t.__proto__=d[n(276)](d),t[n(240)]=s[n(240)].bind(s),o[r]=t}}))();const y=["position","uv"];function g(n,t){const o=I();return(g=function(n,t){return o[n-=228]})(n,t)}const h=r({__name:v(228),props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:"#ffff00"},opacity:{default:.8},height:{default:100},num:{default:8},speed:{default:.15}},setup(r){const m=v,d=r,g=i(),h={side:n[m(253)],transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:"\nprecision lowp float;\nprecision lowp int;\n"+t[m(256)]+"\nvarying vec2 vUv;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    "+t.fog_vertex+"\n}\n",fragmentShader:m(266),uniforms:{time:{type:m(239),value:0},color:{type:m(259),value:new(n[m(279)])(d.color)},opacity:{type:m(239),value:d.opacity},num:{type:m(239),value:d[m(261)]},speed:{type:m(239),value:d[m(247)]}}};let x=null,I=null;const{centerPoint:w,points:_}=e(d[m(267)]);!function(n=[],t){const o=m,e=[],r=[];for(let i=0,s=e[o(232)],a=r[o(232)];i<n.length-1;i++){let o=1,c=n[i],u=n[i+1];e[s++]=c.x,e[s++]=0,e[s++]=c.y,r[a++]=0,r[a++]=0,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=u.x,e[s++]=t,e[s++]=u.y,r[a++]=1,r[a++]=o}x=new Float32Array(e),I=new Float32Array(r)}(_,d[m(250)]);const{onLoop:C}=o();return C((({delta:n})=>{const t=m;h[t(274)][t(251)][t(249)]+=n})),s((()=>{const t=m;d[t(270)]&&(h[t(274)][t(270)].value=new(n[t(279)])(d.color)),d[t(273)]&&(h[t(274)][t(273)].value=d[t(273)]),d[t(261)]&&(h[t(274)][t(261)][t(249)]=d[t(261)]),d[t(247)]&&(h[t(274)].speed[t(249)]=d.speed),g.value&&g[t(249)][t(254)][t(275)](w.x,g[t(249)][t(254)].y,w.y)})),(n,t)=>{const o=m;return a(),c("TresMesh",{renderOrder:2200,ref_key:o(252),ref:g},[u(o(237),{position:[l(x),3],uv:[l(I),2]},null,8,y),u(o(268),f(p(h)),null,16)],512)}}});function x(n){function t(n){const o=g;if(typeof n===o(271))return function(n){}[o(248)]("while (true) {}").apply("counter");1!==(""+n/n)[o(232)]||n%20==0?function(){return!0}.constructor(o(283)+"gger")[o(278)]("action"):function(){return!1}.constructor("debu"+o(230)).apply(o(229)),t(++n)}try{if(n)return t;t(0)}catch(o){}}function I(){const n=["position","2184669laPaHo","fog_pars_vertex","16XnDHNj","console","uvs","exception","num","error","init","96iLTCkB","2urNstB","\n  precision lowp float;\n  precision lowp int;\n  uniform float time;\n  uniform float opacity;\n  uniform vec3 color;\n  uniform float num;\n  uniform float speed;\n  varying vec2 vUv;\n  void main() {\n    vec4 fragColor = vec4(0.);\n    float sin = sin((vUv.y - time * speed) * 10. * num);\n    float high = 0.92;\n    float medium = 0.4;\n    if (sin > high) {\n      fragColor = vec4(mix(vec3(.8, 1., 1.), color, (1. - sin) / (1. - high)), 1.);\n    } else if(sin > medium) {\n      fragColor = vec4(color, mix(1., 0., 1.-(sin - medium) / (high - medium)));\n    } else {\n      fragColor = vec4(color, 0.);\n    }\n    vec3 fade = mix(color, vec3(0., 0., 0.), vUv.y);\n    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n  }\n\t","positionSrc","TresShaderMaterial","309MpLLvB","color","string","info","opacity","uniforms","set","bind","353654uBXYRR","call","Color","85316pRTpxD","warn","567455qAIIdA","debu","test","rippleMesh","stateObject","gger","390AjrCZr","length","chain","1262821ErRLdG","input","10IAFnNP","TresBufferGeometry","prototype","pv2","toString","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","12IPFGGX","1203555BwAlLs","748SxkfDV","table","apply","speed","constructor","value","height","time","tresMeshRef","DoubleSide"];return(I=function(){return n})()}export{h as _};
