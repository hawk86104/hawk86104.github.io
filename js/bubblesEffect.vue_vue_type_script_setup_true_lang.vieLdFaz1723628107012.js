import{q as n,a6 as t,bV as e,ck as o,aL as i,h as r,az as a}from"./three.LOnTLfxo1723628107012.js";import{p as s,$ as l,N as u}from"./@tresjs.SUe87xao1723628107012.js";import{d as c,b as f,a4 as p,a1 as m,o as b,D as g,J as v,aj as y,ak as d,u as h}from"./@vue.9bHx4gg21723628107012.js";const w=S;!function(n,t){const e=S,o=P();for(;;)try{if(495177===-parseInt(e(357))/1+-parseInt(e(311))/2*(-parseInt(e(336))/3)+parseInt(e(334))/4+parseInt(e(309))/5+parseInt(e(360))/6*(parseInt(e(361))/7)+-parseInt(e(319))/8*(-parseInt(e(358))/9)+parseInt(e(312))/10*(-parseInt(e(327))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[S(330)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){_(this,(function(){const n=S,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(326),"i"),o=I(n(355));t[n(308)](o+n(317))&&e[n(308)](o+"input")?I():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[S(330)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();z(void 0,(function(){const n=S;let t;try{t=Function(n(356)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(352)]=t[n(352)]||{},o=["log",n(329),n(318),n(324),n(351),n(350),n(323)];for(let r=0;r<o[n(348)];r++){const t=z.constructor[n(339)][n(304)](z),i=o[r],a=e[i]||t;t[n(337)]=z[n(304)](z),t[n(310)]=a[n(310)][n(304)](a),e[i]=t}}))();const x=v(w(303),null,null,-1);function P(){const n=["color","TresBufferGeometry","bind","xRayEffect","constructor","uOpacity","test","4372440ozfalu","toString","107890UvBEFp","20OyfwrK","uTime","dispose","offsetY","mergeGeometries","chain","info","3234760HiJmAn","geometry","map","uniforms","trace","error","action","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","16568497LTohSm","glowColor","warn","apply","value","traverse","TresMeshRef","2641332JeHWGh","push","51cirYny","__proto__","AdditiveBlending","prototype","stateObject","DoubleSide","TresShaderMaterial","debu","verticesNeedUpdate","opacity","while (true) {}","gger","length","string","table","exception","console","sin","call","init","return (function() ","730109GeBvqz","18eBHBsQ","Color","24pBZaNK","1710037oYseGF","position"];return(P=function(){return n})()}function S(n,t){const e=P();return(S=function(n,t){return e[n-=301]})(n,t)}const T=c({__name:w(305),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(o){const i=w;let r,a;const c=o,h=f(),_=[];c.model[i(332)]((t=>{const e=i;t instanceof n&&(t.geometry[e(344)]=!0,_[e(335)](t[e(320)]))}));const z=([r,a]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,a(),r),P={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[i(359)])(c.color)},lightningTexture:{type:"t",value:z[i(321)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:c[i(345)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:t[i(341)],blending:t[i(338)],depthWrite:!1};P[i(322)][i(315)][i(331)]=Math[i(353)](5);const{camera:S}=s(),{onLoop:T}=l();return T((({delta:n})=>{const t=i;S[t(331)][t(301)]&&h[t(331)]&&(P[t(322)][t(313)][t(331)]+=n)})),m((()=>{const n=i;h.value&&(h.value[n(320)][n(314)](),h[n(331)][n(320)]=e[n(316)](_)),c[n(302)]&&(P[n(322)][n(328)].value=new(t[n(359)])(c.color)),c.opacity&&(P[n(322)][n(307)][n(331)]=c[n(345)])})),(n,t)=>{const e=i;return b(),g("TresMesh",{ref_key:e(333),ref:h},[x,v(e(342),y(d(P)),null,16)],512)}}});function I(n){function t(n){const e=S;if(typeof n===e(349))return function(n){}[e(306)](e(346)).apply("counter");1!==(""+n/n)[e(348)]||n%20==0?function(){return!0}[e(306)](e(343)+e(347))[e(354)](e(325)):function(){return!1}.constructor("debu"+e(347))[e(330)](e(340)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const B=M;!function(n,t){const e=M,o=U();for(;;)try{if(765445===-parseInt(e(150))/1+parseInt(e(154))/2+parseInt(e(159))/3*(parseInt(e(164))/4)+parseInt(e(175))/5*(-parseInt(e(142))/6)+parseInt(e(184))/7+parseInt(e(174))/8*(-parseInt(e(170))/9)+parseInt(e(211))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=M,t=new RegExp(n(176)),e=new RegExp(n(177),"i"),o=j(n(203));t.test(o+n(141))&&e[n(178)](o+n(156))?j():o("0")}))()}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(210)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function M(n,t){const e=U();return(M=function(n,t){return e[n-=139]})(n,t)}function U(){const n=["383230ZBcUBS","counter","input","attributes","aDelayDuration","9dBFRcZ","Color","geometry","DoubleSide","opacity","1765108gdKWUV","debu","size","Float32BufferAttribute","MathUtils","array","2473866vgEFKP","__proto__","traverse","value","40TRAHEm","1965IXIFvU","function *\\( *\\)","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","test","toString","push","brainstem","uTime","ShaderMaterial","1649459xzQRWK","while (true) {}","error","prototype","bubbles","BufferGeometryRef","map","uSlowTime","Mesh","gger","console","material","string","return (function() ","stateObject","length","setAttribute","log","bridge","init","computeBoundingSphere",'{}.constructor("return this")( )',"constructor","action","color","bind","apply","31651180sGOSEq","randFloat","position","amigdala","chain","20892egAGMB","process","#FFF","uniforms","TresPoints","warn","uOpacity","episodic","1407960VkNUOl","call","semantic","randInt"];return(U=function(){return n})()}F(void 0,(function(){const n=M;let t;try{t=Function(n(197)+n(205)+");")()}catch(i){t=window}const e=t.console=t[n(194)]||{},o=[n(201),n(147),"info",n(186),"exception","table","trace"];for(let r=0;r<o[n(199)];r++){const t=F[n(206)][n(187)][n(209)](F),i=o[r],a=e[i]||t;t[n(171)]=F.bind(F),t[n(179)]=a[n(179)].bind(a),e[i]=t}}))();const O=c({__name:"bubblesEffect",props:{model:{},color:{default:B(144)},opacity:{default:1}},setup(n){const e=B,s=n,u=["afective",e(152),e(149),e(143),e(140),e(181),e(202),"cerebellum","analitic"],c={};s.model[e(172)]((n=>{const i=e;n instanceof t[i(192)]&&u[i(190)]((t=>{const e=i;if(n.name.includes(t)){if(c[t]){const i=[c[t],n[e(161)]];return c[t]=o(i),c}return c[t]=n[e(161)]}return[]}))}));const p=f(),w=new(t[e(183)])({uniforms:{glowColor:{type:"c",value:new(t[e(160)])(s[e(208)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:i,side:t[e(162)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{p.value&&(()=>{const n=e,o=[],i=[],s=[],l=[];for(let e=0;e<2e4-3*u[n(199)];e+=1){const a=r[n(153)](0,u[n(199)]-1),f=u[a],p=c[f][n(157)][n(139)][n(169)][3*e+0]||0,m=c[f][n(157)][n(139)][n(169)][3*e+1]||0,b=c[f][n(157)].position[n(169)][3*e+2]||0;if(i[n(180)](p,m,b),o[e]=t[n(168)][n(212)](10,20),e%100==0){const e=t[n(168)][n(153)](100,250)+m;l[n(180)](p,e,b,1)}else l[n(180)](p,m,b,0);s[2*e+0]=r[n(212)](.5,1.5),s[2*e+1]=2.5}p[n(173)].setAttribute(n(158),new a(s,2)),p.value[n(200)](n(188),new(t[n(167)])(l,4)),p[n(173)][n(200)](n(139),new(t[n(167)])(i,3)),p[n(173)][n(200)]("color",new(t[n(167)])([],3)),p[n(173)].setAttribute(n(166),new(t[n(167)])(o,1)),p.value[n(204)]()})()}));const _=f(),{onLoop:z}=l();return z((({delta:n})=>{const o=e;_.value&&(_.value[o(195)][o(145)][o(182)][o(173)]+=.05,_[o(173)][o(195)][o(145)][o(191)].value+=1/400),s[o(208)]&&(w.uniforms.glowColor.value=new(t[o(160)])(s[o(208)])),s[o(163)]&&(w[o(145)][o(148)][o(173)]=s[o(163)])})),(n,t)=>{const o=e;return b(),g(o(146),{ref_key:"TresMeshRef",ref:_},[v("TresBufferGeometry",{ref_key:o(189),ref:p},null,512),v("TresShaderMaterial",y(d(h(w))),null,16)],512)}}});function j(n){function t(n){const e=M;if(typeof n===e(196))return function(n){}[e(206)](e(185)).apply(e(155));1!==(""+n/n)[e(199)]||n%20==0?function(){return!0}.constructor(e(165)+e(193))[e(151)](e(207)):function(){return!1}[e(206)](e(165)+"gger")[e(210)](e(198)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as _,O as a};
