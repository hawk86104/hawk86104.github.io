import{e as t,a as e,d as o}from"./@tresjs.CywMBpUh1758259351508.js";import{i as s}from"./Resource.DDopQ4j61758259351508.js";import"./@fesjs.uDzWZsaX1758259351508.js";/* empty css                                                                             */import{l as a}from"./yangyangLoading.Dr1o3-z41758259351508.js";import"./three-mesh-ui.module.t9YwAzlx1758259351508.js";import"./global.DmBaWnKd1758259351508.js";/* empty css                                                              */import{d as n,w as i,G as r,o as l,u as p,F as u,I as m,j as c,W as d,h,f as g,e as j,H as f,m as y}from"./@vue.pEDXJ_3Z1758259351508.js";import"./three.CtgP63ME1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";import"./vue-router.BT0ZZbwZ1758259351508.js";import"./lodash-es.C7pWAXPe1758259351508.js";import"./pinia.C_K98KJs1758259351508.js";import"./@qlin.q6OWdsQV1758259351508.js";import"./@babel.BPq7uOAK1758259351508.js";import"./@floating-ui.BFjFSAYt1758259351508.js";import"./@juggle.CcBCnTIR1758259351508.js";import"./utils.BQV0fxbj1758259351508.js";import"./color.BPoHtV0H1758259351508.js";import"./@amap.CGUF9xH41758259351508.js";import"./color-string.P-yvt9W21758259351508.js";import"./color-name.BQ5IbGbl1758259351508.js";import"./simple-swizzle.Xn8N6iLa1758259351508.js";import"./is-arrayish.CLsR9Wfx1758259351508.js";import"./color-convert.Btfsg-JE1758259351508.js";import"./lodash.Bo0I6nx61758259351508.js";const _=["object"],M=n({__name:"airplane",props:{planet:{}},setup(e){const o=e,{scene:a}=s.getItem("airplane.gltf"),n=a;n.rotation.set(0,Math.PI,0),a.traverse((t=>{t.isMesh&&(t.castShadow=!0)})),n.updateMatrixWorld();const{onLoop:u}=t();i((()=>o.planet),(t=>{if(!t)return;t.geometry.computeBoundingSphere();const e=Math.abs(1|t.geometry.boundingSphere?.radius);n.position.set(e,0,0),n.lookAt(t.position)}));let m=0;return u((({delta:t})=>{if(!n||!o.planet)return;const e=Math.abs(o.planet.geometry.boundingSphere.radius)+.5;m+=.2*t;const s=e*Math.cos(m),a=e*Math.sin(m);n.position.x=s,n.position.z=a,n.rotation.z=-Math.PI/2,n.rotation.y=-m,n.updateMatrixWorld()})),(t,e)=>(l(),r("primitive",{object:p(n)},null,8,_))}}),v=["object"],b=n({__name:"cloud",props:{planet:{}},setup(e){const o=e,{scene:a}=s.getItem("cloud.gltf"),n=a.children[0];function u(t,e){const o=Math.random()*(e-t)+t;return Math.random()<.5?-o:o}n.castShadow=!0,n.position.set(u(-8,8),u(.5,1),u(-8,8));const m=u(.5,1);n.scale.set(m,m,m),n.updateMatrixWorld(),i((()=>o.planet),(t=>{t&&(n.lookAt(t.position),n.updateMatrixWorld())}));const{onLoop:c}=t();let d=u(-1,1)*Math.PI;const h=Math.random()/10;return c((({delta:t})=>{if(!n)return;const e=Math.abs(o.planet.geometry.boundingSphere.radius-.5);d+=t*h;const s=e*Math.cos(d),a=e*Math.sin(d);n.position.x=s,n.position.z=a,n.rotation.y=-d,n.lookAt(o.planet.position),n.updateMatrixWorld()})),(t,e)=>(l(),r("primitive",{object:p(a),"cast-shadow":""},null,8,v))}}),w=["object"],L=n({__name:"planet",setup(e){const{nodes:o}=s.getItem("planet.gltf"),a=o.Planet,n=o.Icosphere;a.traverse((t=>{t.isMesh&&(t.receiveShadow=!0)}));const{onLoop:i}=t();return i((({delta:t})=>{a&&(a.rotation.y+=.04*t,a.rotation.z+=.02*t,a.rotation.x+=.05*t,a.updateMatrixWorld())})),(t,e)=>(l(),r(u,null,[m("primitive",{object:p(a)},null,8,w),c(M,{planet:p(n)},null,8,["planet"]),(l(),r(u,null,d([1,2,3,4,5,6,7,8,9],(t=>c(b,{key:t,planet:p(n)},null,8,["planet"]))),64))],64))}}),x=n({__name:"simpleLoading",setup(t){const n={alpha:!1,clearColor:"#11101B",shadows:!0,useLegacyLights:!0};return s.loadResources([{functionName:"GLTFLoader",url:"./plugins/earthSample/model/lowpolyPlanet/planet.gltf"},{functionName:"GLTFLoader",url:"./plugins/earthSample/model/lowpolyPlanet/airplane.gltf"},{functionName:"GLTFLoader",url:"./plugins/earthSample/model/lowpolyPlanet/cloud.gltf"}]),(t,i)=>{const d=h("TresCanvas");return l(),r(u,null,[c(p(a),{useResourceManager:""}),c(d,y(n,{"window-size":""}),{default:g((()=>[i[0]||(i[0]=m("TresPerspectiveCamera",{position:[0,.5,3],fov:75,near:.1,far:1e3},null,-1)),c(p(e)),i[1]||(i[1]=m("TresAmbientLight",{color:"#484068",intensity:1},null,-1)),i[2]||(i[2]=m("TresPointLight",{color:"#1BFFEF",position:[0,0,-8],intensity:80,"cast-shadow":""},null,-1)),i[3]||(i[3]=m("TresDirectionalLight",{position:[0,2,4],intensity:3,"cast-shadow":"","shadow-mapSize-width":2048,"shadow-mapSize-height":2048},null,-1)),c(p(o),{radius:50,depth:50,count:5e3,size:.3,"size-attenuation":!0}),p(s).hasAllFinished.value?(l(),j(L,{key:0})):f("",!0)])),_:1},16)],64)}}});export{x as default};
