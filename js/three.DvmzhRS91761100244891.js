const e={},t=function(t,n,i){let r=Promise.resolve();if(n&&n.length>0){const t=document.getElementsByTagName("link"),s=document.querySelector("meta[property=csp-nonce]"),a=s?.nonce||s?.getAttribute("nonce");r=Promise.allSettled(n.map(n=>{if(n=function(e,t){return new URL(e,t).href}(n,i),n in e)return;e[n]=!0;const r=n.endsWith(".css"),s=r?'[rel="stylesheet"]':"";if(!!i)for(let e=t.length-1;e>=0;e--){const i=t[e];if(i.href===n&&(!r||"stylesheet"===i.rel))return}else if(document.querySelector(`link[href="${n}"]${s}`))return;const o=document.createElement("link");return o.rel=r?"stylesheet":"modulepreload",r||(o.as="script"),o.crossOrigin="",o.href=n,a&&o.setAttribute("nonce",a),document.head.appendChild(o),r?new Promise((e,t)=>{o.addEventListener("load",e),o.addEventListener("error",()=>t(new Error(`Unable to preload CSS for ${n}`)))}):void 0}))}function s(e){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}return r.then(e=>{for(const t of e||[])"rejected"===t.status&&s(t.reason);return t().catch(s)})},n="180",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},r={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,a=2,o=0,l=1,c=2,u=0,h=1,d=2,p=3,m=4,f=5,g=100,v=101,b=102,y=103,x=104,_=200,T=201,S=202,w=203,M=204,E=205,A=206,R=207,C=208,N=209,P=210,L=211,I=212,D=213,F=214,U=0,O=1,B=2,k=3,V=4,z=5,G=6,H=7,W=0,j=1,X=2,q=3,$=4,Y=5,K=6,Q=7,Z="attached",J="detached",ee=300,te=301,ne=302,ie=303,re=304,se=306,ae=1e3,oe=1001,le=1002,ce=1003,ue=1004,he=1005,de=1006,pe=1007,me=1008,fe=1008,ge=1009,ve=1010,be=1011,ye=1012,xe=1013,_e=1014,Te=1015,Se=1016,we=1017,Me=1018,Ee=1020,Ae=35902,Re=35899,Ce=1021,Ne=1022,Pe=1023,Le=1026,Ie=1027,De=1028,Fe=1029,Ue=1030,Oe=1031,Be=1032,ke=1033,Ve=33776,ze=33777,Ge=33778,He=33779,We=35840,je=35841,Xe=35842,qe=35843,$e=36196,Ye=37492,Ke=37496,Qe=37808,Ze=37809,Je=37810,et=37811,tt=37812,nt=37813,it=37814,rt=37815,st=37816,at=37817,ot=37818,lt=37819,ct=37820,ut=37821,ht=36492,dt=36494,pt=36495,mt=36283,ft=36284,gt=36285,vt=36286,bt=2200,yt=2201,xt=2202,_t=2300,Tt=2301,St=2302,wt=2400,Mt=2401,Et=2402,At=2500,Rt=2501,Ct=0,Nt=1,Pt=2,Lt=3200,It=3201,Dt=0,Ft="",Ut="srgb",Ot="srgb-linear",Bt="linear",kt="srgb",Vt=7680,zt=7681,Gt=7682,Ht=7683,Wt=34055,jt=34056,Xt=5386,qt=514,$t=519,Yt=512,Kt=513,Qt=514,Zt=515,Jt=516,en=517,tn=518,nn=519,rn=35044,sn=35048,an="300 es",on=2e3,ln=2001,cn={COMPUTE:"compute",RENDER:"render"},un={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},hn={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class dn{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return void 0!==n&&(void 0!==n[e]&&-1!==n[e].indexOf(t))}removeEventListener(e,t){const n=this._listeners;if(void 0===n)return;const i=n[e];if(void 0!==i){const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}dispatchEvent(e){const t=this._listeners;if(void 0===t)return;const n=t[e.type];if(void 0!==n){e.target=this;const t=n.slice(0);for(let n=0,i=t.length;n<i;n++)t[n].call(this,e);e.target=null}}}const pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let mn=1234567;const fn=Math.PI/180,gn=180/Math.PI;function vn(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(pn[255&e]+pn[e>>8&255]+pn[e>>16&255]+pn[e>>24&255]+"-"+pn[255&t]+pn[t>>8&255]+"-"+pn[t>>16&15|64]+pn[t>>24&255]+"-"+pn[63&n|128]+pn[n>>8&255]+"-"+pn[n>>16&255]+pn[n>>24&255]+pn[255&i]+pn[i>>8&255]+pn[i>>16&255]+pn[i>>24&255]).toLowerCase()}function bn(e,t,n){return Math.max(t,Math.min(n,e))}function yn(e,t){return(e%t+t)%t}function xn(e,t,n){return(1-n)*e+n*t}function _n(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Tn(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const Sn={DEG2RAD:fn,RAD2DEG:gn,generateUUID:vn,clamp:bn,euclideanModulo:yn,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:xn,damp:function(e,t,n,i){return xn(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(yn(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(mn=e);let t=mn+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*fn},radToDeg:function(e){return e*gn},isPowerOfTwo:function(e){return!(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((t+i)/2),u=a((t+i)/2),h=s((t-i)/2),d=a((t-i)/2),p=s((i-t)/2),m=a((i-t)/2);switch(r){case"XYX":e.set(o*u,l*h,l*d,o*c);break;case"YZY":e.set(l*d,o*u,l*h,o*c);break;case"ZXZ":e.set(l*h,l*d,o*u,o*c);break;case"XZX":e.set(o*u,l*m,l*p,o*c);break;case"YXY":e.set(l*p,o*u,l*m,o*c);break;case"ZYZ":e.set(l*m,l*p,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:Tn,denormalize:_n};class wn{constructor(e=0,t=0){wn.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=bn(this.x,e.x,t.x),this.y=bn(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=bn(this.x,e,t),this.y=bn(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(bn(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(bn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*n-s*i+e.x,this.y=r*i+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Mn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,s,a){let o=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3];const h=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return e[t+0]=o,e[t+1]=l,e[t+2]=c,void(e[t+3]=u);if(1===a)return e[t+0]=h,e[t+1]=d,e[t+2]=p,void(e[t+3]=m);if(u!==m||o!==h||l!==d||c!==p){let e=1-a;const t=o*h+l*d+c*p+u*m,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,t*n);e=Math.sin(e*s)/r,a=Math.sin(a*s)/r}const r=a*n;if(o=o*e+h*r,l=l*e+d*r,c=c*e+p*r,u=u*e+m*r,e===1-a){const e=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=e,l*=e,c*=e,u*=e}}e[t]=o,e[t+1]=l,e[t+2]=c,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,s){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],u=r[s],h=r[s+1],d=r[s+2],p=r[s+3];return e[t]=a*p+c*u+o*d-l*h,e[t+1]=o*p+c*h+l*u-a*d,e[t+2]=l*p+c*d+a*h-o*u,e[t+3]=c*p-a*u-o*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),u=a(r/2),h=o(n/2),d=o(i/2),p=o(r/2);switch(s){case"XYZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"YXZ":this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"ZXY":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p;break;case"ZYX":this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p;break;case"YZX":this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p;break;case"XZY":this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],c=t[6],u=t[10],h=n+a+u;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(c-o)*e,this._y=(r-l)*e,this._z=(s-i)*e}else if(n>a&&n>u){const e=2*Math.sqrt(1+n-a-u);this._w=(c-o)/e,this._x=.25*e,this._y=(i+s)/e,this._z=(r+l)/e}else if(a>u){const e=2*Math.sqrt(1+a-n-u);this._w=(r-l)/e,this._x=(i+s)/e,this._y=.25*e,this._z=(o+c)/e}else{const e=2*Math.sqrt(1+u-n-a);this._w=(s-i)/e,this._x=(r+l)/e,this._y=(o+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(bn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w,a=t._x,o=t._y,l=t._z,c=t._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),u=Math.sin((1-t)*c)/l,h=Math.sin(t*c)/l;return this._w=s*u+this._w*h,this._x=n*u+this._x*h,this._y=i*u+this._y*h,this._z=r*u+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class En{constructor(e=0,t=0,n=0){En.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Rn.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Rn.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,s=e.y,a=e.z,o=e.w,l=2*(s*i-a*n),c=2*(a*t-r*i),u=2*(r*n-s*t);return this.x=t+o*l+s*u-a*c,this.y=n+o*c+a*l-r*u,this.z=i+o*u+r*c-s*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=bn(this.x,e.x,t.x),this.y=bn(this.y,e.y,t.y),this.z=bn(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=bn(this.x,e,t),this.y=bn(this.y,e,t),this.z=bn(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(bn(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,s=t.x,a=t.y,o=t.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return An.copy(this).projectOnVector(e),this.sub(An)}reflect(e){return this.sub(An.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(bn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=2*Math.random()-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const An=new En,Rn=new Mn;class Cn{constructor(e,t,n,i,r,s,a,o,l){Cn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,s,a,o,l)}set(e,t,n,i,r,s,a,o,l){const c=this.elements;return c[0]=e,c[1]=i,c[2]=a,c[3]=t,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],v=i[1],b=i[4],y=i[7],x=i[2],_=i[5],T=i[8];return r[0]=s*m+a*v+o*x,r[3]=s*f+a*b+o*_,r[6]=s*g+a*y+o*T,r[1]=l*m+c*v+u*x,r[4]=l*f+c*b+u*_,r[7]=l*g+c*y+u*T,r[2]=h*m+d*v+p*x,r[5]=h*f+d*b+p*_,r[8]=h*g+d*y+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8];return t*s*c-t*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8],u=c*s-a*l,h=a*o-c*r,d=l*r-s*o,p=t*u+n*h+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(i*l-c*n)*m,e[2]=(a*n-i*s)*m,e[3]=h*m,e[4]=(c*t-i*o)*m,e[5]=(i*r-a*t)*m,e[6]=d*m,e[7]=(n*o-l*t)*m,e[8]=(s*t-n*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*s+l*a)+s+e,-i*l,i*o,-i*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Nn.makeScale(e,t)),this}rotate(e){return this.premultiply(Nn.makeRotation(-e)),this}translate(e,t){return this.premultiply(Nn.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Nn=new Cn;function Pn(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}const Ln={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function In(e,t){return new Ln[e](t)}function Dn(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Fn(){const e=Dn("canvas");return e.style.display="block",e}const Un={};function On(e){e in Un||(Un[e]=!0,console.warn(e))}const Bn=(new Cn).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),kn=(new Cn).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Vn(){const e={enabled:!0,workingColorSpace:Ot,spaces:{},convert:function(e,t,n){return!1!==this.enabled&&t!==n&&t&&n?(this.spaces[t].transfer===kt&&(e.r=Gn(e.r),e.g=Gn(e.g),e.b=Gn(e.b)),this.spaces[t].primaries!==this.spaces[n].primaries&&(e.applyMatrix3(this.spaces[t].toXYZ),e.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===kt&&(e.r=Hn(e.r),e.g=Hn(e.g),e.b=Hn(e.b)),e):e},workingToColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},colorSpaceToWorking:function(e,t){return this.convert(e,t,this.workingColorSpace)},getPrimaries:function(e){return this.spaces[e].primaries},getTransfer:function(e){return e===Ft?Bt:this.spaces[e].transfer},getToneMappingMode:function(e){return this.spaces[e].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(e,t=this.workingColorSpace){return e.fromArray(this.spaces[t].luminanceCoefficients)},define:function(e){Object.assign(this.spaces,e)},_getMatrix:function(e,t,n){return e.copy(this.spaces[t].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(e){return this.spaces[e].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(e=this.workingColorSpace){return this.spaces[e].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(t,n){return On("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),e.workingToColorSpace(t,n)},toWorkingColorSpace:function(t,n){return On("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),e.colorSpaceToWorking(t,n)}},t=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return e.define({[Ot]:{primaries:t,whitePoint:i,transfer:Bt,toXYZ:Bn,fromXYZ:kn,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:Ut},outputColorSpaceConfig:{drawingBufferColorSpace:Ut}},[Ut]:{primaries:t,whitePoint:i,transfer:kt,toXYZ:Bn,fromXYZ:kn,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:Ut}}}),e}const zn=Vn();function Gn(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Hn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let Wn;class jn{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{void 0===Wn&&(Wn=Dn("canvas")),Wn.width=e.width,Wn.height=e.height;const t=Wn.getContext("2d");e instanceof ImageData?t.putImageData(e,0,0):t.drawImage(e,0,0,e.width,e.height),n=Wn}return n.toDataURL(t)}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Dn("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*Gn(r[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Gn(t[e]/255)):t[e]=Gn(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Xn=0;class qn{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Xn++}),this.uuid=vn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return"undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):null!==t?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push($n(i[t].image)):e.push($n(i[t]))}else e=$n(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function $n(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?jn.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Yn=0;const Kn=new En;class Qn extends dn{constructor(e=Qn.DEFAULT_IMAGE,t=Qn.DEFAULT_MAPPING,n=1001,i=1001,r=1006,s=1008,a=1023,o=1009,l=Qn.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Yn++}),this.uuid=vn(),this.name="",this.source=new qn(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new wn(0,0),this.repeat=new wn(1,1),this.center=new wn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Cn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Kn).x}get height(){return this.source.getSize(Kn).y}get depth(){return this.source.getSize(Kn).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const i=this[t];void 0!==i?i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n:console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ee)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ae:e.x=e.x-Math.floor(e.x);break;case oe:e.x=e.x<0?0:1;break;case le:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case ae:e.y=e.y-Math.floor(e.y);break;case oe:e.y=e.y<0?0:1;break;case le:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}Qn.DEFAULT_IMAGE=null,Qn.DEFAULT_MAPPING=ee,Qn.DEFAULT_ANISOTROPY=1;class Zn{constructor(e=0,t=0,n=0,i=1){Zn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const s=.01,a=.1,o=e.elements,l=o[0],c=o[4],u=o[8],h=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-h)<s&&Math.abs(u-m)<s&&Math.abs(p-f)<s){if(Math.abs(c+h)<a&&Math.abs(u+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,v=(g+1)/2,b=(c+h)/4,y=(u+m)/4,x=(p+f)/4;return e>o&&e>v?e<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=b/n,r=y/n):o>v?o<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=b/i,r=x/i):v<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=y/r,i=x/r),this.set(n,i,r,t),this}let v=Math.sqrt((f-p)*(f-p)+(u-m)*(u-m)+(h-c)*(h-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(u-m)/v,this.z=(h-c)/v,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=bn(this.x,e.x,t.x),this.y=bn(this.y,e.y,t.y),this.z=bn(this.z,e.z,t.z),this.w=bn(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=bn(this.x,e,t),this.y=bn(this.y,e,t),this.z=bn(this.z,e,t),this.w=bn(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(bn(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Jn extends dn{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:de,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new Zn(0,0,e,t),this.scissorTest=!1,this.viewport=new Zn(0,0,e,t);const i={width:e,height:t,depth:n.depth},r=new Qn(i);this.textures=[];const s=n.count;for(let a=0;a<s;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:de,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==e.mapping&&(t.mapping=e.mapping),void 0!==e.wrapS&&(t.wrapS=e.wrapS),void 0!==e.wrapT&&(t.wrapT=e.wrapT),void 0!==e.wrapR&&(t.wrapR=e.wrapR),void 0!==e.magFilter&&(t.magFilter=e.magFilter),void 0!==e.minFilter&&(t.minFilter=e.minFilter),void 0!==e.format&&(t.format=e.format),void 0!==e.type&&(t.type=e.type),void 0!==e.anisotropy&&(t.anisotropy=e.anisotropy),void 0!==e.colorSpace&&(t.colorSpace=e.colorSpace),void 0!==e.flipY&&(t.flipY=e.flipY),void 0!==e.generateMipmaps&&(t.generateMipmaps=e.generateMipmaps),void 0!==e.internalFormat&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++){this.textures[n].setValues(t)}}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==e&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new qn(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ei extends Jn{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class ti extends Qn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ce,this.minFilter=ce,this.wrapR=oe,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ni extends ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ti(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class ii extends Qn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ce,this.minFilter=ce,this.wrapR=oe,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ri extends ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ii(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class si{constructor(e=new En(1/0,1/0,1/0),t=new En(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(oi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(oi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=oi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===t&&void 0!==i&&!0!==e.isInstancedMesh)for(let t=0,n=i.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,oi):oi.fromBufferAttribute(i,t),oi.applyMatrix4(e.matrixWorld),this.expandByPoint(oi);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),li.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),li.copy(n.boundingBox)),li.applyMatrix4(e.matrixWorld),this.union(li)}const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,oi),oi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(fi),gi.subVectors(this.max,fi),ci.subVectors(e.a,fi),ui.subVectors(e.b,fi),hi.subVectors(e.c,fi),di.subVectors(ui,ci),pi.subVectors(hi,ui),mi.subVectors(ci,hi);let t=[0,-di.z,di.y,0,-pi.z,pi.y,0,-mi.z,mi.y,di.z,0,-di.x,pi.z,0,-pi.x,mi.z,0,-mi.x,-di.y,di.x,0,-pi.y,pi.x,0,-mi.y,mi.x,0];return!!yi(t,ci,ui,hi,gi)&&(t=[1,0,0,0,1,0,0,0,1],!!yi(t,ci,ui,hi,gi)&&(vi.crossVectors(di,pi),t=[vi.x,vi.y,vi.z],yi(t,ci,ui,hi,gi)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,oi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(oi).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ai[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ai[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ai[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ai[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ai[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ai[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ai[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ai[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ai)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const ai=[new En,new En,new En,new En,new En,new En,new En,new En],oi=new En,li=new si,ci=new En,ui=new En,hi=new En,di=new En,pi=new En,mi=new En,fi=new En,gi=new En,vi=new En,bi=new En;function yi(e,t,n,i,r){for(let s=0,a=e.length-3;s<=a;s+=3){bi.fromArray(e,s);const a=r.x*Math.abs(bi.x)+r.y*Math.abs(bi.y)+r.z*Math.abs(bi.z),o=t.dot(bi),l=n.dot(bi),c=i.dot(bi);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const xi=new si,_i=new En,Ti=new En;class Si{constructor(e=new En,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):xi.setFromPoints(e).getCenter(n);let i=0;for(let r=0,s=e.length;r<s;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_i.subVectors(e,this.center);const t=_i.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(_i,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Ti.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_i.copy(e.center).add(Ti)),this.expandByPoint(_i.copy(e.center).sub(Ti))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const wi=new En,Mi=new En,Ei=new En,Ai=new En,Ri=new En,Ci=new En,Ni=new En;class Pi{constructor(e=new En,t=new En(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,wi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=wi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(wi.copy(this.origin).addScaledVector(this.direction,t),wi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Mi.copy(e).add(t).multiplyScalar(.5),Ei.copy(t).sub(e).normalize(),Ai.copy(this.origin).sub(Mi);const r=.5*e.distanceTo(t),s=-this.direction.dot(Ei),a=Ai.dot(this.direction),o=-Ai.dot(Ei),l=Ai.lengthSq(),c=Math.abs(1-s*s);let u,h,d,p;if(c>0)if(u=s*o-a,h=s*a-o,p=r*c,u>=0)if(h>=-p)if(h<=p){const e=1/c;u*=e,h*=e,d=u*(u+s*h+2*a)+h*(s*u+h+2*o)+l}else h=r,u=Math.max(0,-(s*h+a)),d=-u*u+h*(h+2*o)+l;else h=-r,u=Math.max(0,-(s*h+a)),d=-u*u+h*(h+2*o)+l;else h<=-p?(u=Math.max(0,-(-s*r+a)),h=u>0?-r:Math.min(Math.max(-r,-o),r),d=-u*u+h*(h+2*o)+l):h<=p?(u=0,h=Math.min(Math.max(-r,-o),r),d=h*(h+2*o)+l):(u=Math.max(0,-(s*r+a)),h=u>0?r:Math.min(Math.max(-r,-o),r),d=-u*u+h*(h+2*o)+l);else h=s>0?-r:r,u=Math.max(0,-(s*h+a)),d=-u*u+h*(h+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(Mi).addScaledVector(Ei,h),d}intersectSphere(e,t){wi.subVectors(e.center,this.origin);const n=wi.dot(this.direction),i=wi.dot(wi)-n*n,r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i),a=n-s,o=n+s;return o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return!(e.radius<0)&&this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,i=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,i=(e.min.x-h.x)*l),c>=0?(r=(e.min.y-h.y)*c,s=(e.max.y-h.y)*c):(r=(e.max.y-h.y)*c,s=(e.min.y-h.y)*c),n>s||r>i?null:((r>n||isNaN(n))&&(n=r),(s<i||isNaN(i))&&(i=s),u>=0?(a=(e.min.z-h.z)*u,o=(e.max.z-h.z)*u):(a=(e.max.z-h.z)*u,o=(e.min.z-h.z)*u),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,wi)}intersectTriangle(e,t,n,i,r){Ri.subVectors(t,e),Ci.subVectors(n,e),Ni.crossVectors(Ri,Ci);let s,a=this.direction.dot(Ni);if(a>0){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Ai.subVectors(this.origin,e);const o=s*this.direction.dot(Ci.crossVectors(Ai,Ci));if(o<0)return null;const l=s*this.direction.dot(Ri.cross(Ai));if(l<0)return null;if(o+l>a)return null;const c=-s*Ai.dot(Ni);return c<0?null:this.at(c/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Li{constructor(e,t,n,i,r,s,a,o,l,c,u,h,d,p,m,f){Li.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,s,a,o,l,c,u,h,d,p,m,f)}set(e,t,n,i,r,s,a,o,l,c,u,h,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=u,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Li).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ii.setFromMatrixColumn(e,0).length(),r=1/Ii.setFromMatrixColumn(e,1).length(),s=1/Ii.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){const e=s*c,n=s*u,i=a*c,r=a*u;t[0]=o*c,t[4]=-o*u,t[8]=l,t[1]=n+i*l,t[5]=e-r*l,t[9]=-a*o,t[2]=r-e*l,t[6]=i+n*l,t[10]=s*o}else if("YXZ"===e.order){const e=o*c,n=o*u,i=l*c,r=l*u;t[0]=e+r*a,t[4]=i*a-n,t[8]=s*l,t[1]=s*u,t[5]=s*c,t[9]=-a,t[2]=n*a-i,t[6]=r+e*a,t[10]=s*o}else if("ZXY"===e.order){const e=o*c,n=o*u,i=l*c,r=l*u;t[0]=e-r*a,t[4]=-s*u,t[8]=i+n*a,t[1]=n+i*a,t[5]=s*c,t[9]=r-e*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){const e=s*c,n=s*u,i=a*c,r=a*u;t[0]=o*c,t[4]=i*l-n,t[8]=e*l+r,t[1]=o*u,t[5]=r*l+e,t[9]=n*l-i,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){const e=s*o,n=s*l,i=a*o,r=a*l;t[0]=o*c,t[4]=r-e*u,t[8]=i*u+n,t[1]=u,t[5]=s*c,t[9]=-a*c,t[2]=-l*c,t[6]=n*u+i,t[10]=e-r*u}else if("XZY"===e.order){const e=s*o,n=s*l,i=a*o,r=a*l;t[0]=o*c,t[4]=-u,t[8]=l*c,t[1]=e*u+r,t[5]=s*c,t[9]=n*u-i,t[2]=i*u-n,t[6]=a*c,t[10]=r*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Fi,e,Ui)}lookAt(e,t,n){const i=this.elements;return ki.subVectors(e,t),0===ki.lengthSq()&&(ki.z=1),ki.normalize(),Oi.crossVectors(n,ki),0===Oi.lengthSq()&&(1===Math.abs(n.z)?ki.x+=1e-4:ki.z+=1e-4,ki.normalize(),Oi.crossVectors(n,ki)),Oi.normalize(),Bi.crossVectors(ki,Oi),i[0]=Oi.x,i[4]=Bi.x,i[8]=ki.x,i[1]=Oi.y,i[5]=Bi.y,i[9]=ki.y,i[2]=Oi.z,i[6]=Bi.z,i[10]=ki.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],b=n[7],y=n[11],x=n[15],_=i[0],T=i[4],S=i[8],w=i[12],M=i[1],E=i[5],A=i[9],R=i[13],C=i[2],N=i[6],P=i[10],L=i[14],I=i[3],D=i[7],F=i[11],U=i[15];return r[0]=s*_+a*M+o*C+l*I,r[4]=s*T+a*E+o*N+l*D,r[8]=s*S+a*A+o*P+l*F,r[12]=s*w+a*R+o*L+l*U,r[1]=c*_+u*M+h*C+d*I,r[5]=c*T+u*E+h*N+d*D,r[9]=c*S+u*A+h*P+d*F,r[13]=c*w+u*R+h*L+d*U,r[2]=p*_+m*M+f*C+g*I,r[6]=p*T+m*E+f*N+g*D,r[10]=p*S+m*A+f*P+g*F,r[14]=p*w+m*R+f*L+g*U,r[3]=v*_+b*M+y*C+x*I,r[7]=v*T+b*E+y*N+x*D,r[11]=v*S+b*A+y*P+x*F,r[15]=v*w+b*R+y*L+x*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],s=e[1],a=e[5],o=e[9],l=e[13],c=e[2],u=e[6],h=e[10],d=e[14];return e[3]*(+r*o*u-i*l*u-r*a*h+n*l*h+i*a*d-n*o*d)+e[7]*(+t*o*d-t*l*h+r*s*h-i*s*d+i*l*c-r*o*c)+e[11]*(+t*l*u-t*a*d-r*s*u+n*s*d+r*a*c-n*l*c)+e[15]*(-i*a*c-t*o*u+t*a*h+i*s*u-n*s*h+n*o*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8],u=e[9],h=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=u*f*l-m*h*l+m*o*d-a*f*d-u*o*g+a*h*g,b=p*h*l-c*f*l-p*o*d+s*f*d+c*o*g-s*h*g,y=c*m*l-p*u*l+p*a*d-s*m*d-c*a*g+s*u*g,x=p*u*o-c*m*o-p*a*h+s*m*h+c*a*f-s*u*f,_=t*v+n*b+i*y+r*x;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/_;return e[0]=v*T,e[1]=(m*h*r-u*f*r-m*i*d+n*f*d+u*i*g-n*h*g)*T,e[2]=(a*f*r-m*o*r+m*i*l-n*f*l-a*i*g+n*o*g)*T,e[3]=(u*o*r-a*h*r-u*i*l+n*h*l+a*i*d-n*o*d)*T,e[4]=b*T,e[5]=(c*f*r-p*h*r+p*i*d-t*f*d-c*i*g+t*h*g)*T,e[6]=(p*o*r-s*f*r-p*i*l+t*f*l+s*i*g-t*o*g)*T,e[7]=(s*h*r-c*o*r+c*i*l-t*h*l-s*i*d+t*o*d)*T,e[8]=y*T,e[9]=(p*u*r-c*m*r-p*n*d+t*m*d+c*n*g-t*u*g)*T,e[10]=(s*m*r-p*a*r+p*n*l-t*m*l-s*n*g+t*a*g)*T,e[11]=(c*a*r-s*u*r-c*n*l+t*u*l+s*n*d-t*a*d)*T,e[12]=x*T,e[13]=(c*m*i-p*u*i+p*n*h-t*m*h-c*n*f+t*u*f)*T,e[14]=(p*a*i-s*m*i-p*n*o+t*m*o+s*n*f-t*a*f)*T,e[15]=(s*u*i-c*a*i+c*n*o-t*u*o-s*n*h+t*a*h)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,s=e.x,a=e.y,o=e.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,s){return this.set(1,n,r,0,e,1,s,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,s=t._y,a=t._z,o=t._w,l=r+r,c=s+s,u=a+a,h=r*l,d=r*c,p=r*u,m=s*c,f=s*u,g=a*u,v=o*l,b=o*c,y=o*u,x=n.x,_=n.y,T=n.z;return i[0]=(1-(m+g))*x,i[1]=(d+y)*x,i[2]=(p-b)*x,i[3]=0,i[4]=(d-y)*_,i[5]=(1-(h+g))*_,i[6]=(f+v)*_,i[7]=0,i[8]=(p+b)*T,i[9]=(f-v)*T,i[10]=(1-(h+m))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Ii.set(i[0],i[1],i[2]).length();const s=Ii.set(i[4],i[5],i[6]).length(),a=Ii.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Di.copy(this);const o=1/r,l=1/s,c=1/a;return Di.elements[0]*=o,Di.elements[1]*=o,Di.elements[2]*=o,Di.elements[4]*=l,Di.elements[5]*=l,Di.elements[6]*=l,Di.elements[8]*=c,Di.elements[9]*=c,Di.elements[10]*=c,t.setFromRotationMatrix(Di),n.x=r,n.y=s,n.z=a,this}makePerspective(e,t,n,i,r,s,a=2e3,o=!1){const l=this.elements,c=2*r/(t-e),u=2*r/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i);let p,m;if(o)p=r/(s-r),m=s*r/(s-r);else if(a===on)p=-(s+r)/(s-r),m=-2*s*r/(s-r);else{if(a!==ln)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);p=-s/(s-r),m=-s*r/(s-r)}return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,s,a=2e3,o=!1){const l=this.elements,c=2/(t-e),u=2/(n-i),h=-(t+e)/(t-e),d=-(n+i)/(n-i);let p,m;if(o)p=1/(s-r),m=s/(s-r);else if(a===on)p=-2/(s-r),m=-(s+r)/(s-r);else{if(a!==ln)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=-1/(s-r),m=-r/(s-r)}return l[0]=c,l[4]=0,l[8]=0,l[12]=h,l[1]=0,l[5]=u,l[9]=0,l[13]=d,l[2]=0,l[6]=0,l[10]=p,l[14]=m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ii=new En,Di=new Li,Fi=new En(0,0,0),Ui=new En(1,1,1),Oi=new En,Bi=new En,ki=new En,Vi=new Li,zi=new Mn;class Gi{constructor(e=0,t=0,n=0,i=Gi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],s=i[4],a=i[8],o=i[1],l=i[5],c=i[9],u=i[2],h=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(bn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-bn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(bn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-bn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(bn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-bn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Vi.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Vi,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return zi.setFromEuler(this),this.setFromQuaternion(zi,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Gi.DEFAULT_ORDER="XYZ";class Hi{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return 0!==(this.mask&e.mask)}isEnabled(e){return!!(this.mask&1<<e)}}let Wi=0;const ji=new En,Xi=new Mn,qi=new Li,$i=new En,Yi=new En,Ki=new En,Qi=new Mn,Zi=new En(1,0,0),Ji=new En(0,1,0),er=new En(0,0,1),tr={type:"added"},nr={type:"removed"},ir={type:"childadded",child:null},rr={type:"childremoved",child:null};class sr extends dn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Wi++}),this.uuid=vn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=sr.DEFAULT_UP.clone();const e=new En,t=new Gi,n=new Mn,i=new En(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Li},normalMatrix:{value:new Cn}}),this.matrix=new Li,this.matrixWorld=new Li,this.matrixAutoUpdate=sr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=sr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Hi,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Xi.setFromAxisAngle(e,t),this.quaternion.multiply(Xi),this}rotateOnWorldAxis(e,t){return Xi.setFromAxisAngle(e,t),this.quaternion.premultiply(Xi),this}rotateX(e){return this.rotateOnAxis(Zi,e)}rotateY(e){return this.rotateOnAxis(Ji,e)}rotateZ(e){return this.rotateOnAxis(er,e)}translateOnAxis(e,t){return ji.copy(e).applyQuaternion(this.quaternion),this.position.add(ji.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Zi,e)}translateY(e){return this.translateOnAxis(Ji,e)}translateZ(e){return this.translateOnAxis(er,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(qi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?$i.copy(e):$i.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Yi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?qi.lookAt(Yi,$i,this.up):qi.lookAt($i,Yi,this.up),this.quaternion.setFromRotationMatrix(qi),i&&(qi.extractRotation(i.matrixWorld),Xi.setFromRotationMatrix(qi),this.quaternion.premultiply(Xi.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(tr),ir.child=e,this.dispatchEvent(ir),ir.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(nr),rr.child=e,this.dispatchEvent(rr),rr.child=null),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),qi.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),qi.multiply(e.parent.matrixWorld)),e.applyMatrix4(qi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(tr),ir.child=e,this.dispatchEvent(ir),ir.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yi,e,Ki),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yi,Qi,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){t[n].updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){e[t].updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox?e.boundingBox.toJSON():void 0,boundingSphere:e.boundingSphere?e.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(e=>({...e})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(i.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(i.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=s(e.geometries),i=s(e.materials),r=s(e.textures),a=s(e.images),o=s(e.shapes),l=s(e.skeletons),c=s(e.animations),u=s(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),u.length>0&&(n.nodes=u)}return n.object=i,n;function s(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++){const t=e.children[n];this.add(t.clone())}return this}}sr.DEFAULT_UP=new En(0,1,0),sr.DEFAULT_MATRIX_AUTO_UPDATE=!0,sr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ar=new En,or=new En,lr=new En,cr=new En,ur=new En,hr=new En,dr=new En,pr=new En,mr=new En,fr=new En,gr=new Zn,vr=new Zn,br=new Zn;let yr=class e{constructor(e=new En,t=new En,n=new En){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),ar.subVectors(e,t),i.cross(ar);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){ar.subVectors(i,t),or.subVectors(n,t),lr.subVectors(e,t);const s=ar.dot(ar),a=ar.dot(or),o=ar.dot(lr),l=or.dot(or),c=or.dot(lr),u=s*l-a*a;if(0===u)return r.set(0,0,0),null;const h=1/u,d=(l*o-a*c)*h,p=(s*c-a*o)*h;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return null!==this.getBarycoord(e,t,n,i,cr)&&(cr.x>=0&&cr.y>=0&&cr.x+cr.y<=1)}static getInterpolation(e,t,n,i,r,s,a,o){return null===this.getBarycoord(e,t,n,i,cr)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,cr.x),o.addScaledVector(s,cr.y),o.addScaledVector(a,cr.z),o)}static getInterpolatedAttribute(e,t,n,i,r,s){return gr.setScalar(0),vr.setScalar(0),br.setScalar(0),gr.fromBufferAttribute(e,t),vr.fromBufferAttribute(e,n),br.fromBufferAttribute(e,i),s.setScalar(0),s.addScaledVector(gr,r.x),s.addScaledVector(vr,r.y),s.addScaledVector(br,r.z),s}static isFrontFacing(e,t,n,i){return ar.subVectors(n,t),or.subVectors(e,t),ar.cross(or).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ar.subVectors(this.c,this.b),or.subVectors(this.a,this.b),.5*ar.cross(or).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return e.getNormal(this.a,this.b,this.c,t)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,n){return e.getBarycoord(t,this.a,this.b,this.c,n)}getInterpolation(t,n,i,r,s){return e.getInterpolation(t,this.a,this.b,this.c,n,i,r,s)}containsPoint(t){return e.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return e.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let s,a;ur.subVectors(i,n),hr.subVectors(r,n),pr.subVectors(e,n);const o=ur.dot(pr),l=hr.dot(pr);if(o<=0&&l<=0)return t.copy(n);mr.subVectors(e,i);const c=ur.dot(mr),u=hr.dot(mr);if(c>=0&&u<=c)return t.copy(i);const h=o*u-c*l;if(h<=0&&o>=0&&c<=0)return s=o/(o-c),t.copy(n).addScaledVector(ur,s);fr.subVectors(e,r);const d=ur.dot(fr),p=hr.dot(fr);if(p>=0&&d<=p)return t.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(hr,a);const f=c*p-d*u;if(f<=0&&u-c>=0&&d-p>=0)return dr.subVectors(r,i),a=(u-c)/(u-c+(d-p)),t.copy(i).addScaledVector(dr,a);const g=1/(f+m+h);return s=m*g,a=h*g,t.copy(n).addScaledVector(ur,s).addScaledVector(hr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const xr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_r={h:0,s:0,l:0},Tr={h:0,s:0,l:0};function Sr(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class wr{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ut){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,zn.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=zn.workingColorSpace){return this.r=e,this.g=t,this.b=n,zn.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=zn.workingColorSpace){if(e=yn(e,1),t=bn(t,0,1),n=bn(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Sr(r,i,e+1/3),this.g=Sr(r,i,e),this.b=Sr(r,i,e-1/3)}return zn.colorSpaceToWorking(this,i),this}setStyle(e,t=Ut){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],a=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Ut){const n=xr[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Gn(e.r),this.g=Gn(e.g),this.b=Gn(e.b),this}copyLinearToSRGB(e){return this.r=Hn(e.r),this.g=Hn(e.g),this.b=Hn(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ut){return zn.workingToColorSpace(Mr.copy(this),e),65536*Math.round(bn(255*Mr.r,0,255))+256*Math.round(bn(255*Mr.g,0,255))+Math.round(bn(255*Mr.b,0,255))}getHexString(e=Ut){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=zn.workingColorSpace){zn.workingToColorSpace(Mr.copy(this),t);const n=Mr.r,i=Mr.g,r=Mr.b,s=Math.max(n,i,r),a=Math.min(n,i,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const e=s-a;switch(l=c<=.5?e/(s+a):e/(2-s-a),s){case n:o=(i-r)/e+(i<r?6:0);break;case i:o=(r-n)/e+2;break;case r:o=(n-i)/e+4}o/=6}return e.h=o,e.s=l,e.l=c,e}getRGB(e,t=zn.workingColorSpace){return zn.workingToColorSpace(Mr.copy(this),t),e.r=Mr.r,e.g=Mr.g,e.b=Mr.b,e}getStyle(e=Ut){zn.workingToColorSpace(Mr.copy(this),e);const t=Mr.r,n=Mr.g,i=Mr.b;return e!==Ut?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(e,t,n){return this.getHSL(_r),this.setHSL(_r.h+e,_r.s+t,_r.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(_r),e.getHSL(Tr);const n=xn(_r.h,Tr.h,t),i=xn(_r.s,Tr.s,t),r=xn(_r.l,Tr.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Mr=new wr;wr.NAMES=xr;let Er=0;class Ar extends dn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Er++}),this.uuid=vn(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=M,this.blendDst=E,this.blendEquation=g,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new wr(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=$t,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Vt,this.stencilZFail=Vt,this.stencilZPass=Vt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==M&&(n.blendSrc=this.blendSrc),this.blendDst!==E&&(n.blendDst=this.blendDst),this.blendEquation!==g&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==$t&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Vt&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Vt&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Vt&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Rr extends Ar{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new wr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gi,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Cr=Nr();function Nr(){const e=new ArrayBuffer(4),t=new Float32Array(e),n=new Uint32Array(e),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const e=l-127;e<-27?(i[l]=0,i[256|l]=32768,r[l]=24,r[256|l]=24):e<-14?(i[l]=1024>>-e-14,i[256|l]=1024>>-e-14|32768,r[l]=-e-1,r[256|l]=-e-1):e<=15?(i[l]=e+15<<10,i[256|l]=e+15<<10|32768,r[l]=13,r[256|l]=13):e<128?(i[l]=31744,i[256|l]=64512,r[l]=24,r[256|l]=24):(i[l]=31744,i[256|l]=64512,r[l]=13,r[256|l]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let e=l<<13,t=0;for(;!(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,s[l]=e|t}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)32!==l&&(o[l]=1024);return{floatView:t,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function Pr(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=bn(e,-65504,65504),Cr.floatView[0]=e;const t=Cr.uint32View[0],n=t>>23&511;return Cr.baseTable[n]+((8388607&t)>>Cr.shiftTable[n])}function Lr(e){const t=e>>10;return Cr.uint32View[0]=Cr.mantissaTable[Cr.offsetTable[t]+(1023&e)]+Cr.exponentTable[t],Cr.floatView[0]}class Ir{static toHalfFloat(e){return Pr(e)}static fromHalfFloat(e){return Lr(e)}}const Dr=new En,Fr=new wn;let Ur=0;class Or{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ur++}),this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=rn,this.updateRanges=[],this.gpuType=Te,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Fr.fromBufferAttribute(this,t),Fr.applyMatrix3(e),this.setXY(t,Fr.x,Fr.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Dr.fromBufferAttribute(this,t),Dr.applyMatrix3(e),this.setXYZ(t,Dr.x,Dr.y,Dr.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Dr.fromBufferAttribute(this,t),Dr.applyMatrix4(e),this.setXYZ(t,Dr.x,Dr.y,Dr.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dr.fromBufferAttribute(this,t),Dr.applyNormalMatrix(e),this.setXYZ(t,Dr.x,Dr.y,Dr.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dr.fromBufferAttribute(this,t),Dr.transformDirection(e),this.setXYZ(t,Dr.x,Dr.y,Dr.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=_n(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Tn(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=_n(t,this.array)),t}setX(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=_n(t,this.array)),t}setY(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=_n(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=_n(t,this.array)),t}setW(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array),r=Tn(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==rn&&(e.usage=this.usage),e}}class Br extends Or{constructor(e,t,n){super(new Int8Array(e),t,n)}}class kr extends Or{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Vr extends Or{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class zr extends Or{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Gr extends Or{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Hr extends Or{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Wr extends Or{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class jr extends Or{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Lr(this.array[e*this.itemSize]);return this.normalized&&(t=_n(t,this.array)),t}setX(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize]=Pr(t),this}getY(e){let t=Lr(this.array[e*this.itemSize+1]);return this.normalized&&(t=_n(t,this.array)),t}setY(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+1]=Pr(t),this}getZ(e){let t=Lr(this.array[e*this.itemSize+2]);return this.normalized&&(t=_n(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+2]=Pr(t),this}getW(e){let t=Lr(this.array[e*this.itemSize+3]);return this.normalized&&(t=_n(t,this.array)),t}setW(e,t){return this.normalized&&(t=Tn(t,this.array)),this.array[e*this.itemSize+3]=Pr(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array)),this.array[e+0]=Pr(t),this.array[e+1]=Pr(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array)),this.array[e+0]=Pr(t),this.array[e+1]=Pr(n),this.array[e+2]=Pr(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array),r=Tn(r,this.array)),this.array[e+0]=Pr(t),this.array[e+1]=Pr(n),this.array[e+2]=Pr(i),this.array[e+3]=Pr(r),this}}class Xr extends Or{constructor(e,t,n){super(new Float32Array(e),t,n)}}let qr=0;const $r=new Li,Yr=new sr,Kr=new En,Qr=new si,Zr=new si,Jr=new En;class es extends dn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:qr++}),this.uuid=vn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Pn(e)?Wr:Gr)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new Cn).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return $r.makeRotationFromQuaternion(e),this.applyMatrix4($r),this}rotateX(e){return $r.makeRotationX(e),this.applyMatrix4($r),this}rotateY(e){return $r.makeRotationY(e),this.applyMatrix4($r),this}rotateZ(e){return $r.makeRotationZ(e),this.applyMatrix4($r),this}translate(e,t,n){return $r.makeTranslation(e,t,n),this.applyMatrix4($r),this}scale(e,t,n){return $r.makeScale(e,t,n),this.applyMatrix4($r),this}lookAt(e){return Yr.lookAt(e),Yr.updateMatrix(),this.applyMatrix4(Yr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Kr).negate(),this.translate(Kr.x,Kr.y,Kr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(void 0===t){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}this.setAttribute("position",new Xr(t,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const n=e[i];t.setXYZ(i,n.x,n.y,n.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new si);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new En(-1/0,-1/0,-1/0),new En(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const e=t[n];Qr.setFromBufferAttribute(e),this.morphTargetsRelative?(Jr.addVectors(this.boundingBox.min,Qr.min),this.boundingBox.expandByPoint(Jr),Jr.addVectors(this.boundingBox.max,Qr.max),this.boundingBox.expandByPoint(Jr)):(this.boundingBox.expandByPoint(Qr.min),this.boundingBox.expandByPoint(Qr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Si);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new En,1/0);if(e){const n=this.boundingSphere.center;if(Qr.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const n=t[e];Zr.setFromBufferAttribute(n),this.morphTargetsRelative?(Jr.addVectors(Qr.min,Zr.min),Qr.expandByPoint(Jr),Jr.addVectors(Qr.max,Zr.max),Qr.expandByPoint(Jr)):(Qr.expandByPoint(Zr.min),Qr.expandByPoint(Zr.max))}Qr.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)Jr.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(Jr));if(t)for(let r=0,s=t.length;r<s;r++){const s=t[r],a=this.morphTargetsRelative;for(let t=0,r=s.count;t<r;t++)Jr.fromBufferAttribute(s,t),a&&(Kr.fromBufferAttribute(e,t),Jr.add(Kr)),i=Math.max(i,n.distanceToSquared(Jr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.position,i=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Or(new Float32Array(4*n.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let S=0;S<n.count;S++)a[S]=new En,o[S]=new En;const l=new En,c=new En,u=new En,h=new wn,d=new wn,p=new wn,m=new En,f=new En;function g(e,t,i){l.fromBufferAttribute(n,e),c.fromBufferAttribute(n,t),u.fromBufferAttribute(n,i),h.fromBufferAttribute(r,e),d.fromBufferAttribute(r,t),p.fromBufferAttribute(r,i),c.sub(l),u.sub(l),d.sub(h),p.sub(h);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(m.copy(c).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(s),f.copy(u).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(s),a[e].add(m),a[t].add(m),a[i].add(m),o[e].add(f),o[t].add(f),o[i].add(f))}let v=this.groups;0===v.length&&(v=[{start:0,count:e.count}]);for(let S=0,w=v.length;S<w;++S){const t=v[S],n=t.start;for(let i=n,r=n+t.count;i<r;i+=3)g(e.getX(i+0),e.getX(i+1),e.getX(i+2))}const b=new En,y=new En,x=new En,_=new En;function T(e){x.fromBufferAttribute(i,e),_.copy(x);const t=a[e];b.copy(t),b.sub(x.multiplyScalar(x.dot(t))).normalize(),y.crossVectors(_,t);const n=y.dot(o[e])<0?-1:1;s.setXYZW(e,b.x,b.y,b.z,n)}for(let S=0,w=v.length;S<w;++S){const t=v[S],n=t.start;for(let i=n,r=n+t.count;i<r;i+=3)T(e.getX(i+0)),T(e.getX(i+1)),T(e.getX(i+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Or(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new En,r=new En,s=new En,a=new En,o=new En,l=new En,c=new En,u=new En;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),m=e.getX(h+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),a.add(c),o.add(c),l.add(c),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,h=t.count;e<h;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Jr.fromBufferAttribute(e,t),Jr.normalize(),e.setXYZ(t,Jr.x,Jr.y,Jr.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,s=new n.constructor(t.length*i);let a=0,o=0;for(let l=0,c=t.length;l<c;l++){a=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*i;for(let e=0;e<i;e++)s[o++]=n[a++]}return new Or(s,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new es,n=this.index.array,i=this.attributes;for(const a in i){const r=e(i[a],n);t.setAttribute(a,r)}const r=this.morphAttributes;for(const a in r){const i=[],s=r[a];for(let t=0,r=s.length;t<r;t++){const r=e(s[t],n);i.push(r)}t.morphAttributes[a]=i}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const e=s[a];t.addGroup(e.start,e.count,e.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const o in n){const t=n[o];e.data.attributes[o]=t.toJSON(e.data)}const i={};let r=!1;for(const o in this.morphAttributes){const t=this.morphAttributes[o],n=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];n.push(r.toJSON(e.data))}n.length>0&&(i[o]=n,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere=a.toJSON()),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const e=i[l];this.setAttribute(l,e.clone(t))}const r=e.morphAttributes;for(const l in r){const e=[],n=r[l];for(let i=0,r=n.length;i<r;i++)e.push(n[i].clone(t));this.morphAttributes[l]=e}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let l=0,c=s.length;l<c;l++){const e=s[l];this.addGroup(e.start,e.count,e.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ts=new Li,ns=new Pi,is=new Si,rs=new En,ss=new En,as=new En,os=new En,ls=new En,cs=new En,us=new En,hs=new En;class ds extends sr{constructor(e=new es,t=new Rr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,s=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){cs.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=a[n],o=r[n];0!==i&&(ls.fromBufferAttribute(o,e),s?cs.addScaledVector(ls,i):cs.addScaledVector(ls.sub(t),i))}t.add(cs)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),is.copy(n.boundingSphere),is.applyMatrix4(r),ns.copy(e.ray).recast(e.near),!1===is.containsPoint(ns.origin)){if(null===ns.intersectSphere(is,rs))return;if(ns.origin.distanceToSquared(rs)>(e.far-e.near)**2)return}ts.copy(r).invert(),ns.copy(e.ray).applyMatrix4(ts),null!==n.boundingBox&&!1===ns.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,ns)}}_computeIntersections(e,t,n){let i;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,u=r.attributes.normal,h=r.groups,d=r.drawRange;if(null!==a)if(Array.isArray(s))for(let p=0,m=h.length;p<m;p++){const r=h[p],o=s[r.materialIndex];for(let s=Math.max(r.start,d.start),h=Math.min(a.count,Math.min(r.start+r.count,d.start+d.count));s<h;s+=3){i=ps(this,o,e,n,l,c,u,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=r.materialIndex,t.push(i))}}else{for(let r=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);r<o;r+=3){i=ps(this,s,e,n,l,c,u,a.getX(r),a.getX(r+1),a.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),t.push(i))}}else if(void 0!==o)if(Array.isArray(s))for(let p=0,m=h.length;p<m;p++){const r=h[p],a=s[r.materialIndex];for(let s=Math.max(r.start,d.start),h=Math.min(o.count,Math.min(r.start+r.count,d.start+d.count));s<h;s+=3){i=ps(this,a,e,n,l,c,u,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=r.materialIndex,t.push(i))}}else{for(let r=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);r<a;r+=3){i=ps(this,s,e,n,l,c,u,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),t.push(i))}}}}function ps(e,t,n,i,r,s,a,o,l,c){e.getVertexPosition(o,ss),e.getVertexPosition(l,as),e.getVertexPosition(c,os);const u=function(e,t,n,i,r,s,a,o){let l;if(l=1===t.side?i.intersectTriangle(a,s,r,!0,o):i.intersectTriangle(r,s,a,0===t.side,o),null===l)return null;hs.copy(o),hs.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(hs);return c<n.near||c>n.far?null:{distance:c,point:hs.clone(),object:e}}(e,t,n,i,ss,as,os,us);if(u){const e=new En;yr.getBarycoord(us,ss,as,os,e),r&&(u.uv=yr.getInterpolatedAttribute(r,o,l,c,e,new wn)),s&&(u.uv1=yr.getInterpolatedAttribute(s,o,l,c,e,new wn)),a&&(u.normal=yr.getInterpolatedAttribute(a,o,l,c,e,new En),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const t={a:o,b:l,c:c,normal:new En,materialIndex:0};yr.getNormal(ss,as,os,t.normal),u.face=t,u.barycoord=e}return u}class ms extends es{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const a=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],u=[];let h=0,d=0;function p(e,t,n,i,r,s,p,m,f,g,v){const b=s/f,y=p/g,x=s/2,_=p/2,T=m/2,S=f+1,w=g+1;let M=0,E=0;const A=new En;for(let a=0;a<w;a++){const s=a*y-_;for(let o=0;o<S;o++){const h=o*b-x;A[e]=h*i,A[t]=s*r,A[n]=T,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),u.push(o/f),u.push(1-a/g),M+=1}}for(let a=0;a<g;a++)for(let e=0;e<f;e++){const t=h+e+S*a,n=h+e+S*(a+1),i=h+(e+1)+S*(a+1),r=h+(e+1)+S*a;o.push(t,n,r),o.push(n,i,r),E+=6}a.addGroup(d,E,v),d+=E,h+=M}p("z","y","x",-1,-1,n,t,e,s,r,0),p("z","y","x",1,-1,n,t,-e,s,r,1),p("x","z","y",1,1,e,n,t,i,s,2),p("x","z","y",1,-1,e,n,-t,i,s,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Xr(l,3)),this.setAttribute("normal",new Xr(c,3)),this.setAttribute("uv",new Xr(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ms(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function fs(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function gs(e){const t={};for(let n=0;n<e.length;n++){const i=fs(e[n]);for(const e in i)t[e]=i[e]}return t}function vs(e){const t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:zn.workingColorSpace}const bs={clone:fs,merge:gs};class ys extends Ar{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=fs(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class xs extends sr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Li,this.projectionMatrix=new Li,this.projectionMatrixInverse=new Li,this.coordinateSystem=on,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const _s=new En,Ts=new wn,Ss=new wn;class ws extends xs{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*gn*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*fn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*gn*Math.atan(Math.tan(.5*fn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){_s.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(_s.x,_s.y).multiplyScalar(-e/_s.z),_s.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(_s.x,_s.y).multiplyScalar(-e/_s.z)}getViewSize(e,t){return this.getViewBounds(e,Ts,Ss),t.subVectors(Ss,Ts)}setViewOffset(e,t,n,i,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*fn*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/e,t-=s.offsetY*n/a,i*=s.width/e,n*=s.height/a}const a=this.filmOffset;0!==a&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ms=-90;class Es extends sr{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new ws(Ms,1,e,t);i.layers=this.layers,this.add(i);const r=new ws(Ms,1,e,t);r.layers=this.layers,this.add(r);const s=new ws(Ms,1,e,t);s.layers=this.layers,this.add(s);const a=new ws(Ms,1,e,t);a.layers=this.layers,this.add(a);const o=new ws(Ms,1,e,t);o.layers=this.layers,this.add(o);const l=new ws(Ms,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,s,a,o]=t;for(const l of t)this.remove(l);if(e===on)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(e!==ln)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,o,l,c]=this.children,u=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,s),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,o),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,i),e.render(t,c),e.setRenderTarget(u,h,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class As extends Qn{constructor(e=[],t=301,n,i,r,s,a,o,l,c){super(e,t,n,i,r,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Rs extends ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new As(i),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new ms(5,5,5),r=new ys({name:"CubemapFromEquirect",uniforms:fs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const s=new ds(i,r),a=t.minFilter;t.minFilter===me&&(t.minFilter=de);return new Es(1,10,this).update(e,s),t.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,i);e.setRenderTarget(r)}}class Cs extends sr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ns={type:"move"};class Ps{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Cs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Cs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new En,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new En),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Cs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new En,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new En),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){s=!0;for(const s of e.hand.values()){const e=t.getJointPose(s,n),i=this._getHandJoint(l,s);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Ns)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new Cs;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Ls{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new wr(e),this.density=t}clone(){return new Ls(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Is{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new wr(e),this.near=t,this.far=n}clone(){return new Is(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Ds extends sr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Gi,this.environmentIntensity=1,this.environmentRotation=new Gi,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Fs{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=rn,this.updateRanges=[],this.version=0,this.uuid=vn()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=vn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=vn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Us=new En;class Os{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Us.fromBufferAttribute(this,t),Us.applyMatrix4(e),this.setXYZ(t,Us.x,Us.y,Us.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Us.fromBufferAttribute(this,t),Us.applyNormalMatrix(e),this.setXYZ(t,Us.x,Us.y,Us.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Us.fromBufferAttribute(this,t),Us.transformDirection(e),this.setXYZ(t,Us.x,Us.y,Us.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=_n(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Tn(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Tn(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Tn(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Tn(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Tn(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=_n(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=_n(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=_n(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=_n(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tn(t,this.array),n=Tn(n,this.array),i=Tn(i,this.array),r=Tn(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Or(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Os(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Bs extends Ar{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new wr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ks;const Vs=new En,zs=new En,Gs=new En,Hs=new wn,Ws=new wn,js=new Li,Xs=new En,qs=new En,$s=new En,Ys=new wn,Ks=new wn,Qs=new wn;class Zs extends sr{constructor(e=new Bs){if(super(),this.isSprite=!0,this.type="Sprite",void 0===ks){ks=new es;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Fs(e,5);ks.setIndex([0,1,2,0,2,3]),ks.setAttribute("position",new Os(t,3,0,!1)),ks.setAttribute("uv",new Os(t,2,3,!1))}this.geometry=ks,this.material=e,this.center=new wn(.5,.5),this.count=1}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),zs.setFromMatrixScale(this.matrixWorld),js.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Gs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&zs.multiplyScalar(-Gs.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Js(Xs.set(-.5,-.5,0),Gs,s,zs,i,r),Js(qs.set(.5,-.5,0),Gs,s,zs,i,r),Js($s.set(.5,.5,0),Gs,s,zs,i,r),Ys.set(0,0),Ks.set(1,0),Qs.set(1,1);let a=e.ray.intersectTriangle(Xs,qs,$s,!1,Vs);if(null===a&&(Js(qs.set(-.5,.5,0),Gs,s,zs,i,r),Ks.set(0,1),a=e.ray.intersectTriangle(Xs,$s,qs,!1,Vs),null===a))return;const o=e.ray.origin.distanceTo(Vs);o<e.near||o>e.far||t.push({distance:o,point:Vs.clone(),uv:yr.getInterpolation(Vs,Xs,qs,$s,Ys,Ks,Qs,new wn),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Js(e,t,n,i,r,s){Hs.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(Ws.x=s*Hs.x-r*Hs.y,Ws.y=r*Hs.x+s*Hs.y):Ws.copy(Hs),e.copy(t),e.x+=Ws.x,e.y+=Ws.y,e.applyMatrix4(js)}const ea=new En,ta=new En;class na extends sr{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const e=t[n];this.addLevel(e.object.clone(),e.distance,e.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const e=t.splice(n,1);return this.remove(e[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let i=t[n].distance;if(t[n].object.visible&&(i-=i*t[n].hysteresis),e<i)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ea.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(ea);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ea.setFromMatrixPosition(e.matrixWorld),ta.setFromMatrixPosition(this.matrixWorld);const n=ea.distanceTo(ta)/e.zoom;let i,r;for(t[0].object.visible=!0,i=1,r=t.length;i<r;i++){let e=t[i].distance;if(t[i].object.visible&&(e-=e*t[i].hysteresis),!(n>=e))break;t[i-1].object.visible=!1,t[i].object.visible=!0}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const e=n[i];t.object.levels.push({object:e.object.uuid,distance:e.distance,hysteresis:e.hysteresis})}return t}}const ia=new En,ra=new Zn,sa=new Zn,aa=new En,oa=new Li,la=new En,ca=new Si,ua=new Li,ha=new Pi;class da extends ds{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Z,this.bindMatrix=new Li,this.bindMatrixInverse=new Li,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;null===this.boundingBox&&(this.boundingBox=new si),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,la),this.boundingBox.expandByPoint(la)}computeBoundingSphere(){const e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Si),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,la),this.boundingSphere.expandByPoint(la)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),ca.copy(this.boundingSphere),ca.applyMatrix4(i),!1!==e.ray.intersectsSphere(ca)&&(ua.copy(i).invert(),ha.copy(e.ray).applyMatrix4(ua),null!==this.boundingBox&&!1===ha.intersectsBox(this.boundingBox)||this._computeIntersections(e,t,ha)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Zn,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Z?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===J?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;ra.fromBufferAttribute(i.attributes.skinIndex,e),sa.fromBufferAttribute(i.attributes.skinWeight,e),ia.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const e=sa.getComponent(r);if(0!==e){const i=ra.getComponent(r);oa.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(aa.copy(ia).applyMatrix4(oa),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}class pa extends sr{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ma extends Qn{constructor(e=null,t=1,n=1,i,r,s,a,o,l=1003,c=1003,u,h){super(null,s,a,o,l,c,i,r,u,h),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const fa=new Li,ga=new Li;class va{constructor(e=[],t=[]){this.uuid=vn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Li)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Li;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const i=e[r]?e[r].matrixWorld:ga;fa.multiplyMatrices(i,t[r]),fa.toArray(n,16*r)}null!==i&&(i.needsUpdate=!0)}clone(){return new va(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ma(t,e,e,Pe,Te);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const i=e.bones[n];let r=t[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new pa),this.bones.push(r),this.boneInverses.push((new Li).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const r=t[i];e.bones.push(r.uuid);const s=n[i];e.boneInverses.push(s.toArray())}return e}}class ba extends Or{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ya=new Li,xa=new Li,_a=[],Ta=new si,Sa=new Li,wa=new ds,Ma=new Si;class Ea extends ds{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ba(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Sa)}computeBoundingBox(){const e=this.geometry,t=this.count;null===this.boundingBox&&(this.boundingBox=new si),null===e.boundingBox&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ya),Ta.copy(e.boundingBox).applyMatrix4(ya),this.boundingBox.union(Ta)}computeBoundingSphere(){const e=this.geometry,t=this.count;null===this.boundingSphere&&(this.boundingSphere=new Si),null===e.boundingSphere&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ya),Ma.copy(e.boundingSphere).applyMatrix4(ya),this.boundingSphere.union(Ma)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.morphTexture&&(this.morphTexture=e.morphTexture.clone()),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=e*(n.length+1)+1;for(let s=0;s<n.length;s++)n[s]=i[r+s]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(wa.geometry=this.geometry,wa.material=this.material,void 0!==wa.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),Ma.copy(this.boundingSphere),Ma.applyMatrix4(n),!1!==e.ray.intersectsSphere(Ma)))for(let r=0;r<i;r++){this.getMatrixAt(r,ya),xa.multiplyMatrices(n,ya),wa.matrixWorld=xa,wa.raycast(e,_a);for(let e=0,n=_a.length;e<n;e++){const n=_a[e];n.instanceId=r,n.object=this,t.push(n)}_a.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new ba(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new ma(new Float32Array(i*this.count),i,this.count,De,Te));const r=this.morphTexture.source.data.data;let s=0;for(let l=0;l<n.length;l++)s+=n[l];const a=this.geometry.morphTargetsRelative?1:1-s,o=i*e;r[o]=a,r.set(n,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Aa=new En,Ra=new En,Ca=new Cn;class Na{constructor(e=new En(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Aa.subVectors(n,t).cross(Ra.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Aa),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Ca.getNormalMatrix(e),i=this.coplanarPoint(Aa).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Pa=new Si,La=new wn(.5,.5),Ia=new En;class Da{constructor(e=new Na,t=new Na,n=new Na,i=new Na,r=new Na,s=new Na){this.planes=[e,t,n,i,r,s]}set(e,t,n,i,r,s){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3,n=!1){const i=this.planes,r=e.elements,s=r[0],a=r[1],o=r[2],l=r[3],c=r[4],u=r[5],h=r[6],d=r[7],p=r[8],m=r[9],f=r[10],g=r[11],v=r[12],b=r[13],y=r[14],x=r[15];if(i[0].setComponents(l-s,d-c,g-p,x-v).normalize(),i[1].setComponents(l+s,d+c,g+p,x+v).normalize(),i[2].setComponents(l+a,d+u,g+m,x+b).normalize(),i[3].setComponents(l-a,d-u,g-m,x-b).normalize(),n)i[4].setComponents(o,h,f,y).normalize(),i[5].setComponents(l-o,d-h,g-f,x-y).normalize();else if(i[4].setComponents(l-o,d-h,g-f,x-y).normalize(),t===on)i[5].setComponents(l+o,d+h,g+f,x+y).normalize();else{if(t!==ln)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);i[5].setComponents(o,h,f,y).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),Pa.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),Pa.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Pa)}intersectsSprite(e){Pa.center.set(0,0,0);const t=La.distanceTo(e.center);return Pa.radius=.7071067811865476+t,Pa.applyMatrix4(e.matrixWorld),this.intersectsSphere(Pa)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++){if(t[r].distanceToPoint(n)<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ia.x=i.normal.x>0?e.max.x:e.min.x,Ia.y=i.normal.y>0?e.max.y:e.min.y,Ia.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ia)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const Fa=new Li,Ua=new Da;class Oa{constructor(){this.coordinateSystem=on}intersectsObject(e,t){if(!t.isArrayCamera||0===t.cameras.length)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Fa.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ua.setFromProjectionMatrix(Fa,i.coordinateSystem,i.reversedDepth),Ua.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Fa.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ua.setFromProjectionMatrix(Fa,i.coordinateSystem,i.reversedDepth),Ua.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Fa.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ua.setFromProjectionMatrix(Fa,i.coordinateSystem,i.reversedDepth),Ua.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Fa.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ua.setFromProjectionMatrix(Fa,i.coordinateSystem,i.reversedDepth),Ua.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Fa.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Ua.setFromProjectionMatrix(Fa,i.coordinateSystem,i.reversedDepth),Ua.containsPoint(e))return!0}return!1}clone(){return new Oa}}function Ba(e,t){return e-t}function ka(e,t){return e.z-t.z}function Va(e,t){return t.z-e.z}class za{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,s=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];s.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const Ga=new Li,Ha=new wr(1,1,1),Wa=new Da,ja=new Oa,Xa=new si,qa=new Si,$a=new En,Ya=new En,Ka=new En,Qa=new za,Za=new ds,Ja=[];function eo(e,t,n=0){const i=t.itemSize;if(e.isInterleavedBufferAttribute||e.array.constructor!==t.array.constructor){const r=e.count;for(let s=0;s<r;s++)for(let r=0;r<i;r++)t.setComponent(s+n,r,e.getComponent(s,r))}else t.array.set(e.array,n*i);t.needsUpdate=!0}function to(e,t){if(e.constructor!==t.constructor){const n=Math.min(e.length,t.length);for(let i=0;i<n;i++)t[i]=e[i]}else{const n=Math.min(e.length,t.length);t.set(new e.constructor(e.buffer,0,n))}}class no extends ds{constructor(e,t,n=2*t,i){super(new es,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(4*this._maxInstanceCount);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ma(t,e,e,Pe,Te);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new ma(t,e,e,Fe,_e);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new ma(t,e,e,Pe,Te);n.colorSpace=zn.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(!1===this._geometryInitialized){for(const i in e.attributes){const r=e.getAttribute(i),{array:s,itemSize:a,normalized:o}=r,l=new s.constructor(n*a),c=new Or(l,a,o);t.setAttribute(i,c)}if(null!==e.getIndex()){const e=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Or(e,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(Boolean(e.getIndex())!==Boolean(t.getIndex()))throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||!1===t[e].active)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||!1===t[e].active)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new si);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(!1===t[n].active)continue;const i=t[n].geometryIndex;this.getMatrixAt(n,Ga),this.getBoundingBoxAt(i,Xa).applyMatrix4(Ga),e.union(Xa)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Si);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(!1===t[n].active)continue;const i=t[n].geometryIndex;this.getMatrixAt(n,Ga),this.getBoundingSphereAt(i,qa).applyMatrix4(Ga),e.union(qa)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const t={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Ba),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=t):(n=this._instanceInfo.length,this._instanceInfo.push(t));const i=this._matricesTexture;Ga.identity().toArray(i.image.data,16*n),i.needsUpdate=!0;const r=this._colorsTexture;return r&&(Ha.toArray(r.image.data,4*n),r.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=-1===t?e.getAttribute("position").count:t;const s=e.getIndex();if(null!==s&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=-1===n?s.count:n),-1!==i.indexStart&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let a;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Ba),a=this._availableGeometryIds.shift(),r[a]=i):(a=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(a,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,a}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=null!==n.getIndex(),r=n.getIndex(),s=t.getIndex(),a=this._geometryInfo[e];if(i&&s.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const o=a.vertexStart,l=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const c in n.attributes){const e=t.getAttribute(c),i=n.getAttribute(c);eo(e,i,o);const r=e.itemSize;for(let t=e.count,n=l;t<n;t++){const e=o+t;for(let t=0;t<r;t++)i.setComponent(e,t,0)}i.needsUpdate=!0,i.addUpdateRange(o*r,l*r)}if(i){const e=a.indexStart,n=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let t=0;t<s.count;t++)r.setX(e+t,o+s.getX(t));for(let t=s.count,i=n;t<i;t++)r.setX(e+t,o);r.needsUpdate=!0,r.addUpdateRange(e,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,null!==t.boundingBox&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,null!==t.boundingSphere&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||!1===t[e].active)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((e,t)=>t).sort((e,t)=>n[e].vertexStart-n[t].vertexStart),r=this.geometry;for(let s=0,a=n.length;s<a;s++){const a=i[s],o=n[a];if(!1!==o.active){if(null!==r.index){if(o.indexStart!==t){const{indexStart:n,vertexStart:i,reservedIndexCount:s}=o,a=r.index,l=a.array,c=e-i;for(let e=n;e<n+s;e++)l[e]=l[e]+c;a.array.copyWithin(t,n,n+s),a.addUpdateRange(t,s),o.indexStart=t}t+=o.reservedIndexCount}if(o.vertexStart!==e){const{vertexStart:t,reservedVertexCount:n}=o,i=r.attributes;for(const r in i){const s=i[r],{array:a,itemSize:o}=s;a.copyWithin(e*o,t*o,(t+n)*o),s.addUpdateRange(e*o,n*o)}o.vertexStart=e}e+=o.reservedVertexCount,o.start=r.index?o.indexStart:o.vertexStart,this._nextIndexStart=r.index?o.indexStart+o.reservedIndexCount:0,this._nextVertexStart=o.vertexStart+o.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(null===i.boundingBox){const e=new si,t=n.index,r=n.attributes.position;for(let n=i.start,s=i.start+i.count;n<s;n++){let i=n;t&&(i=t.getX(i)),e.expandByPoint($a.fromBufferAttribute(r,i))}i.boundingBox=e}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(null===i.boundingSphere){const t=new Si;this.getBoundingBoxAt(e,Xa),Xa.getCenter(t.center);const r=n.index,s=n.attributes.position;let a=0;for(let e=i.start,n=i.start+i.count;e<n;e++){let n=e;r&&(n=r.getX(n)),$a.fromBufferAttribute(s,n),a=Math.max(a,t.center.distanceToSquared($a))}t.radius=Math.sqrt(a),i.boundingSphere=t}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,16*e),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,16*e)}setColorAt(e,t){return this.validateInstanceId(e),null===this._colorsTexture&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,4*e),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,4*e)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t||(this._instanceInfo[e].visible=t,this._visibilityChanged=!0),this}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Ba);t[t.length-1]===n.length-1;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);to(this._multiDrawCounts,i),to(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const s=this._indirectTexture,a=this._matricesTexture,o=this._colorsTexture;s.dispose(),this._initIndirectTexture(),to(s.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),to(a.image.data,this._matricesTexture.image.data),o&&(o.dispose(),this._initColorsTexture(),to(o.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(e=>e.active),i=Math.max(...n.map(e=>e.vertexStart+e.reservedVertexCount));if(i>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index){const e=Math.max(...n.map(e=>e.indexStart+e.reservedIndexCount));if(e>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`)}const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new es,this._initializeGeometry(r));const s=this.geometry;r.index&&to(r.index.array,s.index.array);for(const a in r.attributes)to(r.attributes[a].array,s.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,s=this.geometry;Za.material=this.material,Za.geometry.index=s.index,Za.geometry.attributes=s.attributes,null===Za.geometry.boundingBox&&(Za.geometry.boundingBox=new si),null===Za.geometry.boundingSphere&&(Za.geometry.boundingSphere=new Si);for(let a=0,o=n.length;a<o;a++){if(!n[a].visible||!n[a].active)continue;const s=n[a].geometryIndex,o=i[s];Za.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(a,Za.matrixWorld).premultiply(r),this.getBoundingBoxAt(s,Za.geometry.boundingBox),this.getBoundingSphereAt(s,Za.geometry.boundingSphere),Za.raycast(e,Ja);for(let e=0,n=Ja.length;e<n;e++){const n=Ja[e];n.object=this,n.batchId=a,t.push(n)}Ja.length=0}Za.material=null,Za.geometry.index=null,Za.geometry.attributes={},Za.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=null!==e.boundingBox?e.boundingBox.clone():null,this.boundingSphere=null!==e.boundingSphere?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(e=>({...e,boundingBox:null!==e.boundingBox?e.boundingBox.clone():null,boundingSphere:null!==e.boundingSphere?e.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(e=>({...e})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const s=i.getIndex(),a=null===s?1:s.array.BYTES_PER_ELEMENT,o=this._instanceInfo,l=this._multiDrawStarts,c=this._multiDrawCounts,u=this._geometryInfo,h=this.perObjectFrustumCulled,d=this._indirectTexture,p=d.image.data,m=n.isArrayCamera?ja:Wa;h&&!n.isArrayCamera&&(Ga.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Wa.setFromProjectionMatrix(Ga,n.coordinateSystem,n.reversedDepth));let f=0;if(this.sortObjects){Ga.copy(this.matrixWorld).invert(),$a.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Ga),Ya.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Ga);for(let i=0,r=o.length;i<r;i++)if(o[i].visible&&o[i].active){const e=o[i].geometryIndex;this.getMatrixAt(i,Ga),this.getBoundingSphereAt(e,qa).applyMatrix4(Ga);let t=!1;if(h&&(t=!m.intersectsSphere(qa,n)),!t){const t=u[e],n=Ka.subVectors(qa.center,$a).dot(Ya);Qa.push(t.start,t.count,n,i)}}const e=Qa.list,t=this.customSort;null===t?e.sort(r.transparent?Va:ka):t.call(this,e,n);for(let n=0,i=e.length;n<i;n++){const t=e[n];l[f]=t.start*a,c[f]=t.count,p[f]=t.index,f++}Qa.reset()}else for(let g=0,v=o.length;g<v;g++)if(o[g].visible&&o[g].active){const e=o[g].geometryIndex;let t=!1;if(h&&(this.getMatrixAt(g,Ga),this.getBoundingSphereAt(e,qa).applyMatrix4(Ga),t=!m.intersectsSphere(qa,n)),!t){const t=u[e];l[f]=t.start*a,c[f]=t.count,p[f]=g,f++}}d.needsUpdate=!0,this._multiDrawCount=f,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,s){this.onBeforeRender(e,null,i,r,s)}}class io extends Ar{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new wr(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ro=new En,so=new En,ao=new Li,oo=new Pi,lo=new Si,co=new En,uo=new En;class ho extends sr{constructor(e=new es,t=new io){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)ro.fromBufferAttribute(t,e-1),so.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=ro.distanceTo(so);e.setAttribute("lineDistance",new Xr(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),lo.copy(n.boundingSphere),lo.applyMatrix4(i),lo.radius+=r,!1===e.ray.intersectsSphere(lo))return;ao.copy(i).invert(),oo.copy(e.ray).applyMatrix4(ao);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,c=n.index,u=n.attributes.position;if(null!==c){const n=Math.max(0,s.start),i=Math.min(c.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=l){const n=c.getX(r),i=c.getX(r+1),s=po(this,e,oo,o,n,i,r);s&&t.push(s)}if(this.isLineLoop){const r=c.getX(i-1),s=c.getX(n),a=po(this,e,oo,o,r,s,i-1);a&&t.push(a)}}else{const n=Math.max(0,s.start),i=Math.min(u.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=l){const n=po(this,e,oo,o,r,r+1,r);n&&t.push(n)}if(this.isLineLoop){const r=po(this,e,oo,o,i-1,n,i-1);r&&t.push(r)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function po(e,t,n,i,r,s,a){const o=e.geometry.attributes.position;ro.fromBufferAttribute(o,r),so.fromBufferAttribute(o,s);if(n.distanceSqToSegment(ro,so,co,uo)>i)return;co.applyMatrix4(e.matrixWorld);const l=t.ray.origin.distanceTo(co);return l<t.near||l>t.far?void 0:{distance:l,point:uo.clone().applyMatrix4(e.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:e}}const mo=new En,fo=new En;class go extends ho{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)mo.fromBufferAttribute(t,e),fo.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+mo.distanceTo(fo);e.setAttribute("lineDistance",new Xr(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vo extends ho{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class bo extends Ar{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new wr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const yo=new Li,xo=new Pi,_o=new Si,To=new En;class So extends sr{constructor(e=new es,t=new bo){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),_o.copy(n.boundingSphere),_o.applyMatrix4(i),_o.radius+=r,!1===e.ray.intersectsSphere(_o))return;yo.copy(i).invert(),xo.copy(e.ray).applyMatrix4(yo);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l){for(let n=Math.max(0,s.start),r=Math.min(l.count,s.start+s.count);n<r;n++){const r=l.getX(n);To.fromBufferAttribute(c,r),wo(To,r,o,i,e,t,this)}}else{for(let n=Math.max(0,s.start),r=Math.min(c.count,s.start+s.count);n<r;n++)To.fromBufferAttribute(c,n),wo(To,n,o,i,e,t,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function wo(e,t,n,i,r,s,a){const o=xo.distanceSqToPoint(e);if(o<n){const n=new En;xo.closestPointToPoint(e,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,faceIndex:null,barycoord:null,object:a})}}class Mo extends Qn{constructor(e,t,n,i,r=1006,s=1006,a,o,l){super(e,t,n,i,r,s,a,o,l),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const c=this;"requestVideoFrameCallback"in e&&(this._requestVideoFrameCallbackId=e.requestVideoFrameCallback(function t(){c.needsUpdate=!0,c._requestVideoFrameCallbackId=e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){0!==this._requestVideoFrameCallbackId&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class Eo extends Mo{constructor(e,t,n,i,r,s,a,o){super({},e,t,n,i,r,s,a,o),this.isVideoFrameTexture=!0}update(){}clone(){return(new this.constructor).copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Ao extends Qn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=ce,this.minFilter=ce,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ro extends Qn{constructor(e,t,n,i,r,s,a,o,l,c,u,h){super(null,s,a,o,l,c,i,r,u,h),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Co extends Ro{constructor(e,t,n,i,r,s){super(e,t,n,r,s),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=oe,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class No extends Ro{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,te),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Po extends Qn{constructor(e,t,n,i,r,s,a,o,l){super(e,t,n,i,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Lo extends Qn{constructor(e,t,n=1014,i,r,s,a=1003,o=1003,l,c=1026,u=1){if(c!==Le&&c!==Ie)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:e,height:t,depth:u},i,r,s,a,o,c,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new qn(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class Io extends Qn{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class Do extends es{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const s=[],a=[],o=[],l=[],c=t/2,u=Math.PI/2*e,h=t,d=2*u+h,p=2*n+r,m=i+1,f=new En,g=new En;for(let v=0;v<=p;v++){let b=0,y=0,x=0,_=0;if(v<=n){const t=v/n,i=t*Math.PI/2;y=-c-e*Math.cos(i),x=e*Math.sin(i),_=-e*Math.cos(i),b=t*u}else if(v<=n+r){const i=(v-n)/r;y=i*t-c,x=e,_=0,b=u+i*h}else{const t=(v-n-r)/n,i=t*Math.PI/2;y=c+e*Math.sin(i),x=e*Math.cos(i),_=e*Math.sin(i),b=u+h+t*u}const T=Math.max(0,Math.min(1,b/d));let S=0;0===v?S=.5/i:v===p&&(S=-.5/i);for(let e=0;e<=i;e++){const t=e/i,n=t*Math.PI*2,r=Math.sin(n),s=Math.cos(n);g.x=-x*s,g.y=y,g.z=x*r,a.push(g.x,g.y,g.z),f.set(-x*s,_,x*r),f.normalize(),o.push(f.x,f.y,f.z),l.push(t+S,T)}if(v>0){const e=(v-1)*m;for(let t=0;t<i;t++){const n=e+t,i=e+t+1,r=v*m+t,a=v*m+t+1;s.push(n,i,r),s.push(i,a,r)}}}this.setIndex(s),this.setAttribute("position",new Xr(a,3)),this.setAttribute("normal",new Xr(o,3)),this.setAttribute("uv",new Xr(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Do(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class Fo extends es{constructor(e=1,t=32,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],s=[],a=[],o=[],l=new En,c=new wn;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let u=0,h=3;u<=t;u++,h+=3){const r=n+u/t*i;l.x=e*Math.cos(r),l.y=e*Math.sin(r),s.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(s[h]/e+1)/2,c.y=(s[h+1]/e+1)/2,o.push(c.x,c.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Xr(s,3)),this.setAttribute("normal",new Xr(a,3)),this.setAttribute("uv",new Xr(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fo(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Uo extends es{constructor(e=1,t=1,n=1,i=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),r=Math.floor(r);const c=[],u=[],h=[],d=[];let p=0;const m=[],f=n/2;let g=0;function v(n){const r=p,s=new wn,m=new En;let v=0;const b=!0===n?e:t,y=!0===n?1:-1;for(let e=1;e<=i;e++)u.push(0,f*y,0),h.push(0,y,0),d.push(.5,.5),p++;const x=p;for(let e=0;e<=i;e++){const t=e/i*o+a,n=Math.cos(t),r=Math.sin(t);m.x=b*r,m.y=f*y,m.z=b*n,u.push(m.x,m.y,m.z),h.push(0,y,0),s.x=.5*n+.5,s.y=.5*r*y+.5,d.push(s.x,s.y),p++}for(let e=0;e<i;e++){const t=r+e,i=x+e;!0===n?c.push(i,i+1,t):c.push(i+1,i,t),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}!function(){const s=new En,v=new En;let b=0;const y=(t-e)/n;for(let l=0;l<=r;l++){const c=[],g=l/r,b=g*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i,r=t*o+a,l=Math.sin(r),m=Math.cos(r);v.x=b*l,v.y=-g*n+f,v.z=b*m,u.push(v.x,v.y,v.z),s.set(l,y,m).normalize(),h.push(s.x,s.y,s.z),d.push(t,1-g),c.push(p++)}m.push(c)}for(let n=0;n<i;n++)for(let i=0;i<r;i++){const s=m[i][n],a=m[i+1][n],o=m[i+1][n+1],l=m[i][n+1];(e>0||0!==i)&&(c.push(s,a,l),b+=3),(t>0||i!==r-1)&&(c.push(a,o,l),b+=3)}l.addGroup(g,b,0),g+=b}(),!1===s&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new Xr(u,3)),this.setAttribute("normal",new Xr(h,3)),this.setAttribute("uv",new Xr(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Oo extends Uo{constructor(e=1,t=1,n=32,i=1,r=!1,s=0,a=2*Math.PI){super(0,e,t,n,i,r,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new Oo(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Bo extends es{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],s=[];function a(e,t,n,i){const r=i+1,s=[];for(let a=0;a<=r;a++){s[a]=[];const i=e.clone().lerp(n,a/r),o=t.clone().lerp(n,a/r),l=r-a;for(let e=0;e<=l;e++)s[a][e]=0===e&&a===r?i:i.clone().lerp(o,e/l)}for(let a=0;a<r;a++)for(let e=0;e<2*(r-a)-1;e++){const t=Math.floor(e/2);e%2==0?(o(s[a][t+1]),o(s[a+1][t]),o(s[a][t])):(o(s[a][t+1]),o(s[a+1][t+1]),o(s[a+1][t]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,n){const i=3*t;n.x=e[i+0],n.y=e[i+1],n.z=e[i+2]}function c(e,t,n,i){i<0&&1===e.x&&(s[t]=e.x-1),0===n.x&&0===n.z&&(s[t]=i/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}!function(e){const n=new En,i=new En,r=new En;for(let s=0;s<t.length;s+=3)l(t[s+0],n),l(t[s+1],i),l(t[s+2],r),a(n,i,r,e)}(i),function(e){const t=new En;for(let n=0;n<r.length;n+=3)t.x=r[n+0],t.y=r[n+1],t.z=r[n+2],t.normalize().multiplyScalar(e),r[n+0]=t.x,r[n+1]=t.y,r[n+2]=t.z}(n),function(){const e=new En;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];const n=u(e)/2/Math.PI+.5,i=h(e)/Math.PI+.5;s.push(n,1-i)}(function(){const e=new En,t=new En,n=new En,i=new En,a=new wn,o=new wn,l=new wn;for(let h=0,d=0;h<r.length;h+=9,d+=6){e.set(r[h+0],r[h+1],r[h+2]),t.set(r[h+3],r[h+4],r[h+5]),n.set(r[h+6],r[h+7],r[h+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),i.copy(e).add(t).add(n).divideScalar(3);const p=u(i);c(a,d+0,e,p),c(o,d+2,t,p),c(l,d+4,n,p)}})(),function(){for(let e=0;e<s.length;e+=6){const t=s[e+0],n=s[e+2],i=s[e+4],r=Math.max(t,n,i),a=Math.min(t,n,i);r>.9&&a<.1&&(t<.2&&(s[e+0]+=1),n<.2&&(s[e+2]+=1),i<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new Xr(r,3)),this.setAttribute("normal",new Xr(r.slice(),3)),this.setAttribute("uv",new Xr(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bo(e.vertices,e.indices,e.radius,e.details)}}class ko extends Bo{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ko(e.radius,e.detail)}}const Vo=new En,zo=new En,Go=new En,Ho=new yr;class Wo extends es{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const n=4,i=Math.pow(10,n),r=Math.cos(fn*t),s=e.getIndex(),a=e.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],c=["a","b","c"],u=new Array(3),h={},d=[];for(let e=0;e<o;e+=3){s?(l[0]=s.getX(e),l[1]=s.getX(e+1),l[2]=s.getX(e+2)):(l[0]=e,l[1]=e+1,l[2]=e+2);const{a:t,b:n,c:o}=Ho;if(t.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Ho.getNormal(Go),u[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`,u[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,u[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=u[e],i=u[t],s=Ho[c[e]],a=Ho[c[t]],o=`${n}_${i}`,p=`${i}_${n}`;p in h&&h[p]?(Go.dot(h[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[e],index1:l[t],normal:Go.clone()})}}for(const e in h)if(h[e]){const{index0:t,index1:n}=h[e];Vo.fromBufferAttribute(a,t),zo.fromBufferAttribute(a,n),d.push(Vo.x,Vo.y,Vo.z),d.push(zo.x,zo.y,zo.z)}this.setAttribute("position",new Xr(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class jo{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let s;s=t||e*n[r-1];let a,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-s,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===s)return i/(r-1);const c=n[i];return(i+(s-c)/(n[i+1]-c))/(r-1)}getTangent(e,t){const n=1e-4;let i=e-n,r=e+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=t||(s.isVector2?new wn:new En);return o.copy(a).sub(s).normalize(),o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new En,i=[],r=[],s=[],a=new En,o=new Li;for(let d=0;d<=e;d++){const t=d/e;i[d]=this.getTangentAt(t,new En)}r[0]=new En,s[0]=new En;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),s[d]=s[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(bn(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(o.makeRotationAxis(a,e))}s[d].crossVectors(i[d],r[d])}if(!0===t){let t=Math.acos(bn(r[0].dot(r[e]),-1,1));t/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(t=-t);for(let n=1;n<=e;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],t*n)),s[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Xo extends jo{constructor(e=0,t=0,n=1,i=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(e,t=new wn){const n=t,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const a=this.aStartAngle+e*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*e-i*t+this.aX,l=n*t+i*e+this.aY}return n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class qo extends Xo{constructor(e,t,n,i,r,s){super(e,t,n,n,i,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function $o(){let e=0,t=0,n=0,i=0;function r(r,s,a,o){e=r,t=a,n=-3*r+3*s-2*a-o,i=2*r-2*s+a+o}return{initCatmullRom:function(e,t,n,i,s){r(t,n,s*(n-e),s*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,s,a,o){let l=(t-e)/s-(n-e)/(s+a)+(n-t)/a,c=(n-t)/a-(i-t)/(a+o)+(i-n)/o;l*=a,c*=a,r(t,n,l,c)},calc:function(r){const s=r*r;return e+t*r+n*s+i*(s*r)}}}const Yo=new En,Ko=new $o,Qo=new $o,Zo=new $o;class Jo extends jo{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new En){const n=t,i=this.points,r=i.length,s=(r-(this.closed?0:1))*e;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=i[(l-1)%r]:(Yo.subVectors(i[0],i[1]).add(i[0]),a=Yo);const u=i[l%r],h=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(Yo.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Yo),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(u),e),n=Math.pow(u.distanceToSquared(h),e),i=Math.pow(h.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),i<1e-4&&(i=n),Ko.initNonuniformCatmullRom(a.x,u.x,h.x,o.x,t,n,i),Qo.initNonuniformCatmullRom(a.y,u.y,h.y,o.y,t,n,i),Zo.initNonuniformCatmullRom(a.z,u.z,h.z,o.z,t,n,i)}else"catmullrom"===this.curveType&&(Ko.initCatmullRom(a.x,u.x,h.x,o.x,this.tension),Qo.initCatmullRom(a.y,u.y,h.y,o.y,this.tension),Zo.initCatmullRom(a.z,u.z,h.z,o.z,this.tension));return n.set(Ko.calc(c),Qo.calc(c),Zo.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new En).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function el(e,t,n,i,r){const s=.5*(i-t),a=.5*(r-n),o=e*e;return(2*n-2*i+s+a)*(e*o)+(-3*n+3*i-2*s-a)*o+s*e+n}function tl(e,t,n,i){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,i)}function nl(e,t,n,i,r){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,i)+function(e,t){return e*e*e*t}(e,r)}class il extends jo{constructor(e=new wn,t=new wn,n=new wn,i=new wn){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new wn){const n=t,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(nl(e,i.x,r.x,s.x,a.x),nl(e,i.y,r.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class rl extends jo{constructor(e=new En,t=new En,n=new En,i=new En){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new En){const n=t,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(nl(e,i.x,r.x,s.x,a.x),nl(e,i.y,r.y,s.y,a.y),nl(e,i.z,r.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class sl extends jo{constructor(e=new wn,t=new wn){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new wn){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new wn){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class al extends jo{constructor(e=new En,t=new En){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new En){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new En){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ol extends jo{constructor(e=new wn,t=new wn,n=new wn){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new wn){const n=t,i=this.v0,r=this.v1,s=this.v2;return n.set(tl(e,i.x,r.x,s.x),tl(e,i.y,r.y,s.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ll extends jo{constructor(e=new En,t=new En,n=new En){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new En){const n=t,i=this.v0,r=this.v1,s=this.v2;return n.set(tl(e,i.x,r.x,s.x),tl(e,i.y,r.y,s.y),tl(e,i.z,r.z,s.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cl extends jo{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new wn){const n=t,i=this.points,r=(i.length-1)*e,s=Math.floor(r),a=r-s,o=i[0===s?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],u=i[s>i.length-3?i.length-1:s+2];return n.set(el(a,o.x,l.x,c.x,u.x),el(a,o.y,l.y,c.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new wn).fromArray(n))}return this}}var ul=Object.freeze({__proto__:null,ArcCurve:qo,CatmullRomCurve3:Jo,CubicBezierCurve:il,CubicBezierCurve3:rl,EllipseCurve:Xo,LineCurve:sl,LineCurve3:al,QuadraticBezierCurve:ol,QuadraticBezierCurve3:ll,SplineCurve:cl});class hl extends jo{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ul[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const e=i[r]-n,s=this.curves[r],a=s.getLength(),o=0===a?0:1-e/a;return s.getPointAt(o,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],a=s.isEllipseCurve?2*e:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,o=s.getPoints(a);for(let e=0;e<o.length;e++){const i=o[e];n&&n.equals(i)||(t.push(i),n=i)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new ul[n.type]).fromJSON(n))}return this}}class dl extends hl{constructor(e){super(),this.type="Path",this.currentPoint=new wn,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new sl(this.currentPoint.clone(),new wn(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new ol(this.currentPoint.clone(),new wn(e,t),new wn(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,s){const a=new il(this.currentPoint.clone(),new wn(e,t),new wn(n,i),new wn(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new cl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,n,i,r,s),this}absarc(e,t,n,i,r,s){return this.absellipse(e,t,n,n,i,r,s),this}ellipse(e,t,n,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,i,r,s,a,o),this}absellipse(e,t,n,i,r,s,a,o){const l=new Xo(e,t,n,i,r,s,a,o);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class pl extends dl{constructor(e){super(e),this.uuid=vn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new dl).fromJSON(n))}return this}}function ml(e,t,n=2){const i=t&&t.length,r=i?t[0]*n:e.length;let s=fl(e,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c;if(i&&(s=function(e,t,n,i){const r=[];for(let s=0,a=t.length;s<a;s++){const n=fl(e,t[s]*i,s<a-1?t[s+1]*i:e.length,i,!1);n===n.next&&(n.steiner=!0),r.push(El(n))}r.sort(Tl);for(let s=0;s<r.length;s++)n=Sl(r[s],n);return n}(e,t,s,n)),e.length>80*n){o=1/0,l=1/0;let t=-1/0,i=-1/0;for(let s=n;s<r;s+=n){const n=e[s],r=e[s+1];n<o&&(o=n),r<l&&(l=r),n>t&&(t=n),r>i&&(i=r)}c=Math.max(t-o,i-l),c=0!==c?32767/c:0}return vl(s,a,n,o,l,c,0),a}function fl(e,t,n,i,r){let s;if(r===function(e,t,n,i){let r=0;for(let s=t,a=n-i;s<n;s+=i)r+=(e[a]-e[s])*(e[s+1]+e[a+1]),a=s;return r}(e,t,n,i)>0)for(let a=t;a<n;a+=i)s=Ol(a/i|0,e[a],e[a+1],s);else for(let a=n-i;a>=t;a-=i)s=Ol(a/i|0,e[a],e[a+1],s);return s&&Pl(s,s.next)&&(Bl(s),s=s.next),s}function gl(e,t){if(!e)return e;t||(t=e);let n,i=e;do{if(n=!1,i.steiner||!Pl(i,i.next)&&0!==Nl(i.prev,i,i.next))i=i.next;else{if(Bl(i),i=t=i.prev,i===i.next)break;n=!0}}while(n||i!==t);return t}function vl(e,t,n,i,r,s,a){if(!e)return;!a&&s&&function(e,t,n,i){let r=e;do{0===r.z&&(r.z=Ml(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,n=1;do{let i,r=e;e=null;let s=null;for(t=0;r;){t++;let a=r,o=0;for(let e=0;e<n&&(o++,a=a.nextZ,a);e++);let l=n;for(;o>0||l>0&&a;)0!==o&&(0===l||!a||r.z<=a.z)?(i=r,r=r.nextZ,o--):(i=a,a=a.nextZ,l--),s?s.nextZ=i:e=i,i.prevZ=s,s=i;r=a}s.nextZ=null,n*=2}while(t>1)}(r)}(e,i,r,s);let o=e;for(;e.prev!==e.next;){const l=e.prev,c=e.next;if(s?yl(e,i,r,s):bl(e))t.push(l.i,e.i,c.i),Bl(e),e=c.next,o=c.next;else if((e=c)===o){a?1===a?vl(e=xl(gl(e),t),t,n,i,r,s,2):2===a&&_l(e,t,n,i,r,s):vl(gl(e),t,n,i,r,s,1);break}}}function bl(e){const t=e.prev,n=e,i=e.next;if(Nl(t,n,i)>=0)return!1;const r=t.x,s=n.x,a=i.x,o=t.y,l=n.y,c=i.y,u=Math.min(r,s,a),h=Math.min(o,l,c),d=Math.max(r,s,a),p=Math.max(o,l,c);let m=i.next;for(;m!==t;){if(m.x>=u&&m.x<=d&&m.y>=h&&m.y<=p&&Rl(r,o,s,l,a,c,m.x,m.y)&&Nl(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function yl(e,t,n,i){const r=e.prev,s=e,a=e.next;if(Nl(r,s,a)>=0)return!1;const o=r.x,l=s.x,c=a.x,u=r.y,h=s.y,d=a.y,p=Math.min(o,l,c),m=Math.min(u,h,d),f=Math.max(o,l,c),g=Math.max(u,h,d),v=Ml(p,m,t,n,i),b=Ml(f,g,t,n,i);let y=e.prevZ,x=e.nextZ;for(;y&&y.z>=v&&x&&x.z<=b;){if(y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==a&&Rl(o,u,l,h,c,d,y.x,y.y)&&Nl(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==a&&Rl(o,u,l,h,c,d,x.x,x.y)&&Nl(x.prev,x,x.next)>=0)return!1;x=x.nextZ}for(;y&&y.z>=v;){if(y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==a&&Rl(o,u,l,h,c,d,y.x,y.y)&&Nl(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;x&&x.z<=b;){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==a&&Rl(o,u,l,h,c,d,x.x,x.y)&&Nl(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function xl(e,t){let n=e;do{const i=n.prev,r=n.next.next;!Pl(i,r)&&Ll(i,n,n.next,r)&&Fl(i,r)&&Fl(r,i)&&(t.push(i.i,n.i,r.i),Bl(n),Bl(n.next),n=e=r),n=n.next}while(n!==e);return gl(n)}function _l(e,t,n,i,r,s){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&Cl(a,e)){let o=Ul(a,e);return a=gl(a,a.next),o=gl(o,o.next),vl(a,t,n,i,r,s,0),void vl(o,t,n,i,r,s,0)}e=e.next}a=a.next}while(a!==e)}function Tl(e,t){let n=e.x-t.x;if(0===n&&(n=e.y-t.y,0===n)){n=(e.next.y-e.y)/(e.next.x-e.x)-(t.next.y-t.y)/(t.next.x-t.x)}return n}function Sl(e,t){const n=function(e,t){let n=t;const i=e.x,r=e.y;let s,a=-1/0;if(Pl(e,n))return n;do{if(Pl(e,n.next))return n.next;if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const e=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=i&&e>a&&(a=e,s=n.x<n.next.x?n:n.next,e===i))return s}n=n.next}while(n!==t);if(!s)return null;const o=s,l=s.x,c=s.y;let u=1/0;n=s;do{if(i>=n.x&&n.x>=l&&i!==n.x&&Al(r<c?i:a,r,l,c,r<c?a:i,r,n.x,n.y)){const t=Math.abs(r-n.y)/(i-n.x);Fl(n,e)&&(t<u||t===u&&(n.x>s.x||n.x===s.x&&wl(s,n)))&&(s=n,u=t)}n=n.next}while(n!==o);return s}(e,t);if(!n)return t;const i=Ul(n,e);return gl(i,i.next),gl(n,n.next)}function wl(e,t){return Nl(e.prev,e,t.prev)<0&&Nl(t.next,e,e.next)<0}function Ml(e,t,n,i,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-i)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function El(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Al(e,t,n,i,r,s,a,o){return(r-a)*(t-o)>=(e-a)*(s-o)&&(e-a)*(i-o)>=(n-a)*(t-o)&&(n-a)*(s-o)>=(r-a)*(i-o)}function Rl(e,t,n,i,r,s,a,o){return!(e===a&&t===o)&&Al(e,t,n,i,r,s,a,o)}function Cl(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Ll(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(Fl(e,t)&&Fl(t,e)&&function(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(Nl(e.prev,e,t.prev)||Nl(e,t.prev,t))||Pl(e,t)&&Nl(e.prev,e,e.next)>0&&Nl(t.prev,t,t.next)>0)}function Nl(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Pl(e,t){return e.x===t.x&&e.y===t.y}function Ll(e,t,n,i){const r=Dl(Nl(e,t,n)),s=Dl(Nl(e,t,i)),a=Dl(Nl(n,i,e)),o=Dl(Nl(n,i,t));return r!==s&&a!==o||(!(0!==r||!Il(e,n,t))||(!(0!==s||!Il(e,i,t))||(!(0!==a||!Il(n,e,i))||!(0!==o||!Il(n,t,i)))))}function Il(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Dl(e){return e>0?1:e<0?-1:0}function Fl(e,t){return Nl(e.prev,e,e.next)<0?Nl(e,t,e.next)>=0&&Nl(e,e.prev,t)>=0:Nl(e,t,e.prev)<0||Nl(e,e.next,t)<0}function Ul(e,t){const n=kl(e.i,e.x,e.y),i=kl(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Ol(e,t,n,i){const r=kl(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Bl(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function kl(e,t,n){return{i:e,x:t,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class Vl{static triangulate(e,t,n=2){return ml(e,t,n)}}class zl{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return.5*n}static isClockWise(e){return zl.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Gl(e),Hl(n,e);let s=e.length;t.forEach(Gl);for(let o=0;o<t.length;o++)i.push(s),s+=t[o].length,Hl(n,t[o]);const a=Vl.triangulate(n,i);for(let o=0;o<a.length;o+=3)r.push(a.slice(o,o+3));return r}}function Gl(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Hl(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Wl extends es{constructor(e=new pl([new wn(.5,.5),new wn(-.5,.5),new wn(-.5,-.5),new wn(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,o=e.length;a<o;a++){s(e[a])}function s(e){const s=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1;let c=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:.2,h=void 0!==t.bevelSize?t.bevelSize:u-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:jl;let g,v,b,y,x,_=!1;m&&(g=m.getSpacedPoints(o),_=!0,c=!1,v=m.computeFrenetFrames(o,!1),b=new En,y=new En,x=new En),c||(p=0,u=0,h=0,d=0);const T=e.extractPoints(a);let S=T.shape;const w=T.holes;if(!zl.isClockWise(S)){S=S.reverse();for(let e=0,t=w.length;e<t;e++){const t=w[e];zl.isClockWise(t)&&(w[e]=t.reverse())}}function M(e){const t=1e-10*1e-10;let n=e[0];for(let i=1;i<=e.length;i++){const r=i%e.length,s=e[r],a=s.x-n.x,o=s.y-n.y,l=a*a+o*o,c=Math.max(Math.abs(s.x),Math.abs(s.y),Math.abs(n.x),Math.abs(n.y));l<=t*c*c?(e.splice(r,1),i--):n=s}}M(S),w.forEach(M);const E=w.length,A=S;for(let t=0;t<E;t++){const e=w[t];S=S.concat(e)}function R(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,n)}const C=S.length;function N(e,t,n){let i,r,s;const a=e.x-t.x,o=e.y-t.y,l=n.x-e.x,c=n.y-e.y,u=a*a+o*o,h=a*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u),d=Math.sqrt(l*l+c*c),p=t.x-o/h,m=t.y+a/h,f=((n.x-c/d-p)*c-(n.y+l/d-m)*l)/(a*c-o*l);i=p+a*f-e.x,r=m+o*f-e.y;const g=i*i+r*r;if(g<=2)return new wn(i,r);s=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),e?(i=-o,r=a,s=Math.sqrt(u)):(i=a,r=o,s=Math.sqrt(u/2))}return new wn(i/s,r/s)}const P=[];for(let t=0,n=A.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),P[t]=N(A[t],A[i],A[r]);const L=[];let I,D,F=P.concat();for(let t=0,n=E;t<n;t++){const e=w[t];I=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),I[t]=N(e[t],e[i],e[r]);L.push(I),F=F.concat(I)}if(0===p)D=zl.triangulateShape(A,w);else{const e=[],t=[];for(let n=0;n<p;n++){const i=n/p,r=u*Math.cos(i*Math.PI/2),s=h*Math.sin(i*Math.PI/2)+d;for(let t=0,n=A.length;t<n;t++){const n=R(A[t],P[t],s);k(n.x,n.y,-r),0===i&&e.push(n)}for(let e=0,n=E;e<n;e++){const n=w[e];I=L[e];const a=[];for(let e=0,t=n.length;e<t;e++){const t=R(n[e],I[e],s);k(t.x,t.y,-r),0===i&&a.push(t)}0===i&&t.push(a)}}D=zl.triangulateShape(e,t)}const U=D.length,O=h+d;for(let t=0;t<C;t++){const e=c?R(S[t],F[t],O):S[t];_?(y.copy(v.normals[0]).multiplyScalar(e.x),b.copy(v.binormals[0]).multiplyScalar(e.y),x.copy(g[0]).add(y).add(b),k(x.x,x.y,x.z)):k(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<C;e++){const n=c?R(S[e],F[e],O):S[e];_?(y.copy(v.normals[t]).multiplyScalar(n.x),b.copy(v.binormals[t]).multiplyScalar(n.y),x.copy(g[t]).add(y).add(b),k(x.x,x.y,x.z)):k(n.x,n.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,n=u*Math.cos(e*Math.PI/2),i=h*Math.sin(e*Math.PI/2)+d;for(let t=0,r=A.length;t<r;t++){const e=R(A[t],P[t],i);k(e.x,e.y,l+n)}for(let t=0,r=w.length;t<r;t++){const e=w[t];I=L[t];for(let t=0,r=e.length;t<r;t++){const r=R(e[t],I[t],i);_?k(r.x,r.y+g[o-1].y,g[o-1].x+n):k(r.x,r.y,l+n)}}}function B(e,t){let n=e.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=e.length-1);for(let e=0,n=o+2*p;e<n;e++){const n=C*e,s=C*(e+1);z(t+i+n,t+r+n,t+r+s,t+i+s)}}}function k(e,t,n){s.push(e),s.push(t),s.push(n)}function V(e,t,r){G(e),G(t),G(r);const s=i.length/3,a=f.generateTopUV(n,i,s-3,s-2,s-1);H(a[0]),H(a[1]),H(a[2])}function z(e,t,r,s){G(e),G(t),G(s),G(t),G(r),G(s);const a=i.length/3,o=f.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function G(e){i.push(s[3*e+0]),i.push(s[3*e+1]),i.push(s[3*e+2])}function H(e){r.push(e.x),r.push(e.y)}!function(){const e=i.length/3;if(c){let e=0,t=C*e;for(let n=0;n<U;n++){const e=D[n];V(e[2]+t,e[1]+t,e[0]+t)}e=o+2*p,t=C*e;for(let n=0;n<U;n++){const e=D[n];V(e[0]+t,e[1]+t,e[2]+t)}}else{for(let e=0;e<U;e++){const t=D[e];V(t[2],t[1],t[0])}for(let e=0;e<U;e++){const t=D[e];V(t[0]+C*o,t[1]+C*o,t[2]+C*o)}}n.addGroup(e,i.length/3-e,0)}(),function(){const e=i.length/3;let t=0;B(A,t),t+=A.length;for(let n=0,i=w.length;n<i;n++){const e=w[n];B(e,t),t+=e.length}n.addGroup(e,i.length/3-e,1)}()}this.setAttribute("position",new Xr(i,3)),this.setAttribute("uv",new Xr(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const t=e[i];n.shapes.push(t.uuid)}else n.shapes.push(e.uuid);n.options=Object.assign({},t),void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const i=t[e.shapes[r]];n.push(i)}const i=e.options.extrudePath;return void 0!==i&&(e.options.extrudePath=(new ul[i.type]).fromJSON(i)),new Wl(n,e.options)}}const jl={generateTopUV:function(e,t,n,i,r){const s=t[3*n],a=t[3*n+1],o=t[3*i],l=t[3*i+1],c=t[3*r],u=t[3*r+1];return[new wn(s,a),new wn(o,l),new wn(c,u)]},generateSideWallUV:function(e,t,n,i,r,s){const a=t[3*n],o=t[3*n+1],l=t[3*n+2],c=t[3*i],u=t[3*i+1],h=t[3*i+2],d=t[3*r],p=t[3*r+1],m=t[3*r+2],f=t[3*s],g=t[3*s+1],v=t[3*s+2];return Math.abs(o-u)<Math.abs(a-c)?[new wn(a,1-l),new wn(c,1-h),new wn(d,1-m),new wn(f,1-v)]:[new wn(o,1-l),new wn(u,1-h),new wn(p,1-m),new wn(g,1-v)]}};class Xl extends Bo{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xl(e.radius,e.detail)}}class ql extends es{constructor(e=[new wn(0,-.5),new wn(.5,0),new wn(0,.5)],t=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=bn(i,0,2*Math.PI);const r=[],s=[],a=[],o=[],l=[],c=1/t,u=new En,h=new wn,d=new En,p=new En,m=new En;let f=0,g=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:f=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-f,d.z=0*g,m.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(m.x,m.y,m.z);break;default:f=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-f,d.z=0*g,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),o.push(d.x,d.y,d.z),m.copy(p)}for(let v=0;v<=t;v++){const r=n+v*c*i,d=Math.sin(r),p=Math.cos(r);for(let n=0;n<=e.length-1;n++){u.x=e[n].x*d,u.y=e[n].y,u.z=e[n].x*p,s.push(u.x,u.y,u.z),h.x=v/t,h.y=n/(e.length-1),a.push(h.x,h.y);const i=o[3*n+0]*d,r=o[3*n+1],c=o[3*n+0]*p;l.push(i,r,c)}}for(let v=0;v<t;v++)for(let t=0;t<e.length-1;t++){const n=t+v*e.length,i=n,s=n+e.length,a=n+e.length+1,o=n+1;r.push(i,s,o),r.push(a,o,s)}this.setIndex(r),this.setAttribute("position",new Xr(s,3)),this.setAttribute("uv",new Xr(a,2)),this.setAttribute("normal",new Xr(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ql(e.points,e.segments,e.phiStart,e.phiLength)}}class $l extends Bo{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new $l(e.radius,e.detail)}}class Yl extends es{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,s=t/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,u=e/a,h=t/o,d=[],p=[],m=[],f=[];for(let g=0;g<c;g++){const e=g*h-s;for(let t=0;t<l;t++){const n=t*u-r;p.push(n,-e,0),m.push(0,0,1),f.push(t/a),f.push(1-g/o)}}for(let g=0;g<o;g++)for(let e=0;e<a;e++){const t=e+l*g,n=e+l*(g+1),i=e+1+l*(g+1),r=e+1+l*g;d.push(t,n,r),d.push(n,i,r)}this.setIndex(d),this.setAttribute("position",new Xr(p,3)),this.setAttribute("normal",new Xr(m,3)),this.setAttribute("uv",new Xr(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yl(e.width,e.height,e.widthSegments,e.heightSegments)}}class Kl extends es{constructor(e=.5,t=1,n=32,i=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let u=e;const h=(t-e)/(i=Math.max(1,i)),d=new En,p=new wn;for(let m=0;m<=i;m++){for(let e=0;e<=n;e++){const i=r+e/n*s;d.x=u*Math.cos(i),d.y=u*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}u+=h}for(let m=0;m<i;m++){const e=m*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,s=i+n+1,o=i+n+2,l=i+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Xr(o,3)),this.setAttribute("normal",new Xr(l,3)),this.setAttribute("uv",new Xr(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Kl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ql extends es{constructor(e=new pl([new wn(0,.5),new wn(-.5,-.5),new wn(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(e))l(e);else for(let c=0;c<e.length;c++)l(e[c]),this.addGroup(a,o,c),a+=o,o=0;function l(e){const a=i.length/3,l=e.extractPoints(t);let c=l.shape;const u=l.holes;!1===zl.isClockWise(c)&&(c=c.reverse());for(let t=0,n=u.length;t<n;t++){const e=u[t];!0===zl.isClockWise(e)&&(u[t]=e.reverse())}const h=zl.triangulateShape(c,u);for(let t=0,n=u.length;t<n;t++){const e=u[t];c=c.concat(e)}for(let t=0,n=c.length;t<n;t++){const e=c[t];i.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,i=h.length;t<i;t++){const e=h[t],i=e[0]+a,r=e[1]+a,s=e[2]+a;n.push(i,r,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Xr(i,3)),this.setAttribute("normal",new Xr(r,3)),this.setAttribute("uv",new Xr(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const r=t[e.shapes[i]];n.push(r)}return new Ql(n,e.curveSegments)}}class Zl extends es{constructor(e=1,t=32,n=16,i=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const c=[],u=new En,h=new En,d=[],p=[],m=[],f=[];for(let g=0;g<=n;g++){const d=[],v=g/n;let b=0;0===g&&0===s?b=.5/t:g===n&&o===Math.PI&&(b=-.5/t);for(let n=0;n<=t;n++){const o=n/t;u.x=-e*Math.cos(i+o*r)*Math.sin(s+v*a),u.y=e*Math.cos(s+v*a),u.z=e*Math.sin(i+o*r)*Math.sin(s+v*a),p.push(u.x,u.y,u.z),h.copy(u).normalize(),m.push(h.x,h.y,h.z),f.push(o+b,1-v),d.push(l++)}c.push(d)}for(let g=0;g<n;g++)for(let e=0;e<t;e++){const t=c[g][e+1],i=c[g][e],r=c[g+1][e],a=c[g+1][e+1];(0!==g||s>0)&&d.push(t,i,a),(g!==n-1||o<Math.PI)&&d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new Xr(p,3)),this.setAttribute("normal",new Xr(m,3)),this.setAttribute("uv",new Xr(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Jl extends Bo{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Jl(e.radius,e.detail)}}class ec extends es{constructor(e=1,t=.4,n=12,i=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const s=[],a=[],o=[],l=[],c=new En,u=new En,h=new En;for(let d=0;d<=n;d++)for(let s=0;s<=i;s++){const p=s/i*r,m=d/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(p),u.y=(e+t*Math.cos(m))*Math.sin(p),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),h.subVectors(u,c).normalize(),o.push(h.x,h.y,h.z),l.push(s/i),l.push(d/n)}for(let d=1;d<=n;d++)for(let e=1;e<=i;e++){const t=(i+1)*d+e-1,n=(i+1)*(d-1)+e-1,r=(i+1)*(d-1)+e,a=(i+1)*d+e;s.push(t,n,a),s.push(n,r,a)}this.setIndex(s),this.setAttribute("position",new Xr(a,3)),this.setAttribute("normal",new Xr(o,3)),this.setAttribute("uv",new Xr(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ec(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class tc extends es{constructor(e=1,t=.4,n=64,i=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],u=new En,h=new En,d=new En,p=new En,m=new En,f=new En,g=new En;for(let b=0;b<=n;++b){const a=b/n*r*Math.PI*2;v(a,r,s,e,d),v(a+.01,r,s,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=i;++e){const r=e/i*Math.PI*2,s=-t*Math.cos(r),a=t*Math.sin(r);u.x=d.x+(s*g.x+a*m.x),u.y=d.y+(s*g.y+a*m.y),u.z=d.z+(s*g.z+a*m.z),o.push(u.x,u.y,u.z),h.subVectors(u,d).normalize(),l.push(h.x,h.y,h.z),c.push(b/n),c.push(e/i)}}for(let b=1;b<=n;b++)for(let e=1;e<=i;e++){const t=(i+1)*(b-1)+(e-1),n=(i+1)*b+(e-1),r=(i+1)*b+e,s=(i+1)*(b-1)+e;a.push(t,n,s),a.push(n,r,s)}function v(e,t,n,i,r){const s=Math.cos(e),a=Math.sin(e),o=n/t*e,l=Math.cos(o);r.x=i*(2+l)*.5*s,r.y=i*(2+l)*a*.5,r.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Xr(o,3)),this.setAttribute("normal",new Xr(l,3)),this.setAttribute("uv",new Xr(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tc(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class nc extends es{constructor(e=new ll(new En(-1,-1,0),new En(-1,1,0),new En(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new En,o=new En,l=new wn;let c=new En;const u=[],h=[],d=[],p=[];function m(r){c=e.getPointAt(r/t,c);const l=s.normals[r],d=s.binormals[r];for(let e=0;e<=i;e++){const t=e/i*Math.PI*2,r=Math.sin(t),s=-Math.cos(t);o.x=s*l.x+r*d.x,o.y=s*l.y+r*d.y,o.z=s*l.z+r*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,u.push(a.x,a.y,a.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=i;n++)l.x=e/t,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1),r=(i+1)*e+(t-1),s=(i+1)*e+t,a=(i+1)*(e-1)+t;p.push(n,r,a),p.push(r,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Xr(u,3)),this.setAttribute("normal",new Xr(h,3)),this.setAttribute("uv",new Xr(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new nc((new ul[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ic extends es{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],n=new Set,i=new En,r=new En;if(null!==e.index){const s=e.attributes.position,a=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let e=0,l=o.length;e<l;++e){const l=o[e],c=l.start;for(let e=c,o=c+l.count;e<o;e+=3)for(let l=0;l<3;l++){const o=a.getX(e+l),c=a.getX(e+(l+1)%3);i.fromBufferAttribute(s,o),r.fromBufferAttribute(s,c),!0===rc(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const s=e.attributes.position;for(let e=0,a=s.count/3;e<a;e++)for(let o=0;o<3;o++){const a=3*e+o,l=3*e+(o+1)%3;i.fromBufferAttribute(s,a),r.fromBufferAttribute(s,l),!0===rc(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Xr(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function rc(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}var sc=Object.freeze({__proto__:null,BoxGeometry:ms,CapsuleGeometry:Do,CircleGeometry:Fo,ConeGeometry:Oo,CylinderGeometry:Uo,DodecahedronGeometry:ko,EdgesGeometry:Wo,ExtrudeGeometry:Wl,IcosahedronGeometry:Xl,LatheGeometry:ql,OctahedronGeometry:$l,PlaneGeometry:Yl,PolyhedronGeometry:Bo,RingGeometry:Kl,ShapeGeometry:Ql,SphereGeometry:Zl,TetrahedronGeometry:Jl,TorusGeometry:ec,TorusKnotGeometry:tc,TubeGeometry:nc,WireframeGeometry:ic});class ac extends Ar{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new wr(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class oc extends ys{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class lc extends Ar{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new wr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class cc extends lc{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new wn(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return bn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new wr(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new wr(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new wr(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class uc extends Ar{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new wr(16777215),this.specular=new wr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gi,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class hc extends Ar{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new wr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class dc extends Ar{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class pc extends Ar{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new wr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new wr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Gi,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class mc extends Ar{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Lt,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class fc extends Ar{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class gc extends Ar{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new wr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new wn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vc extends io{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function bc(e,t){return e&&e.constructor!==t?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function yc(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function xc(e){const t=e.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function(t,n){return e[t]-e[n]}),n}function _c(e,t,n){const i=e.length,r=new e.constructor(i);for(let s=0,a=0;a!==i;++s){const i=n[s]*t;for(let n=0;n!==t;++n)r[a++]=e[i+n]}return r}function Tc(e,t,n,i){let r=1,s=e[0];for(;void 0!==s&&void 0===s[i];)s=e[r++];if(void 0===s)return;let a=s[i];if(void 0!==a)if(Array.isArray(a))do{a=s[i],void 0!==a&&(t.push(s.time),n.push(...a)),s=e[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[i],void 0!==a&&(t.push(s.time),a.toArray(n,n.length)),s=e[r++]}while(void 0!==s);else do{a=s[i],void 0!==a&&(t.push(s.time),n.push(a)),s=e[r++]}while(void 0!==s)}class Sc{static convertArray(e,t){return bc(e,t)}static isTypedArray(e){return yc(e)}static getKeyframeOrder(e){return xc(e)}static sortedArray(e,t,n){return _c(e,t,n)}static flattenJSON(e,t,n,i){Tc(e,t,n,i)}static subclip(e,t,n,i,r=30){return function(e,t,n,i,r=30){const s=e.clone();s.name=t;const a=[];for(let l=0;l<s.tracks.length;++l){const e=s.tracks[l],t=e.getValueSize(),o=[],c=[];for(let s=0;s<e.times.length;++s){const a=e.times[s]*r;if(!(a<n||a>=i)){o.push(e.times[s]);for(let n=0;n<t;++n)c.push(e.values[s*t+n])}}0!==o.length&&(e.times=bc(o,e.times.constructor),e.values=bc(c,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s}(e,t,n,i,r)}static makeClipAdditive(e,t=0,n=e,i=30){return function(e,t=0,n=e,i=30){i<=0&&(i=30);const r=n.tracks.length,s=t/i;for(let a=0;a<r;++a){const t=n.tracks[a],i=t.ValueTypeName;if("bool"===i||"string"===i)continue;const r=e.tracks.find(function(e){return e.name===t.name&&e.ValueTypeName===i});if(void 0===r)continue;let o=0;const l=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const u=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const h=t.times.length-1;let d;if(s<=t.times[0]){const e=o,n=l-o;d=t.values.slice(e,n)}else if(s>=t.times[h]){const e=h*l+o,n=e+l-o;d=t.values.slice(e,n)}else{const e=t.createInterpolant(),n=o,i=l-o;e.evaluate(s),d=e.resultBuffer.slice(n,i)}"quaternion"===i&&(new Mn).fromArray(d).normalize().conjugate().toArray(d);const p=r.times.length;for(let e=0;e<p;++e){const t=e*u+c;if("quaternion"===i)Mn.multiplyQuaternionsFlat(r.values,t,d,0,r.values,t);else{const e=u-2*c;for(let n=0;n<e;++n)r.values[t+n]-=d[n]}}}return e.blendMode=Rt,e}(e,t,n,i)}}class wc{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let s=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(r=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(i=r,r=t[--n-1],e>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const i=n+s>>>1;e<t[i]?s=i:n=i+1}if(i=t[n],r=t[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let s=0;s!==i;++s)t[s]=n[r+s];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Mc extends wc{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:wt,endingEnd:wt}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,a=i[r],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case Mt:r=e,a=2*t-n;break;case Et:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Mt:s=e,o=2*n-t;break;case Et:s=1,o=n+i[1]-i[0];break;default:s=e-1,o=t}const l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,v=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,b=(-1-d)*f+(1.5+d)*m+.5*p,y=d*f-d*m;for(let x=0;x!==a;++x)r[x]=g*s[c+x]+v*s[l+x]+b*s[o+x]+y*s[u+x];return r}}class Ec extends wc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=(n-t)/(i-t),u=1-c;for(let h=0;h!==a;++h)r[h]=s[l+h]*u+s[o+h]*c;return r}}class Ac extends wc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Rc{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=bc(t,this.TimeBufferType),this.values=bc(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:bc(e.times,Array),values:bc(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ac(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ec(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Mc(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case _t:t=this.InterpolantFactoryMethodDiscrete;break;case Tt:t=this.InterpolantFactoryMethodLinear;break;case St:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return _t;case this.InterpolantFactoryMethodLinear:return Tt;case this.InterpolantFactoryMethodSmooth:return St}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==s&&n[s]>t;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const e=this.getValueSize();this.times=n.slice(r,s),this.values=this.values.slice(r*e,s*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let a=0;a!==r;a++){const t=n[a];if("number"==typeof t&&isNaN(t)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,t),e=!1;break}if(null!==s&&s>t){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,t,s),e=!1;break}s=t}if(void 0!==i&&yc(i))for(let a=0,o=i.length;a!==o;++a){const t=i[a];if(isNaN(t)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,t),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===St,r=e.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0]))if(i)r=!0;else{const e=a*n,i=e-n,s=e+n;for(let a=0;a!==n;++a){const n=t[e+a];if(n!==t[i+a]||n!==t[s+a]){r=!0;break}}}if(r){if(a!==s){e[s]=e[a];const i=a*n,r=s*n;for(let e=0;e!==n;++e)t[r+e]=t[i+e]}++s}}if(r>0){e[s]=e[r];for(let e=r*n,i=s*n,a=0;a!==n;++a)t[i+a]=t[e+a];++s}return s!==e.length?(this.times=e.slice(0,s),this.values=t.slice(0,s*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Rc.prototype.ValueTypeName="",Rc.prototype.TimeBufferType=Float32Array,Rc.prototype.ValueBufferType=Float32Array,Rc.prototype.DefaultInterpolation=Tt;class Cc extends Rc{constructor(e,t,n){super(e,t,n)}}Cc.prototype.ValueTypeName="bool",Cc.prototype.ValueBufferType=Array,Cc.prototype.DefaultInterpolation=_t,Cc.prototype.InterpolantFactoryMethodLinear=void 0,Cc.prototype.InterpolantFactoryMethodSmooth=void 0;class Nc extends Rc{constructor(e,t,n,i){super(e,t,n,i)}}Nc.prototype.ValueTypeName="color";class Pc extends Rc{constructor(e,t,n,i){super(e,t,n,i)}}Pc.prototype.ValueTypeName="number";class Lc extends wc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-t)/(i-t);let l=e*a;for(let c=l+a;l!==c;l+=4)Mn.slerpFlat(r,0,s,l-a,s,l,o);return r}}class Ic extends Rc{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new Lc(this.times,this.values,this.getValueSize(),e)}}Ic.prototype.ValueTypeName="quaternion",Ic.prototype.InterpolantFactoryMethodSmooth=void 0;class Dc extends Rc{constructor(e,t,n){super(e,t,n)}}Dc.prototype.ValueTypeName="string",Dc.prototype.ValueBufferType=Array,Dc.prototype.DefaultInterpolation=_t,Dc.prototype.InterpolantFactoryMethodLinear=void 0,Dc.prototype.InterpolantFactoryMethodSmooth=void 0;class Fc extends Rc{constructor(e,t,n,i){super(e,t,n,i)}}Fc.prototype.ValueTypeName="vector";class Uc{constructor(e="",t=-1,n=[],i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=vn(),this.userData={},this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let s=0,a=n.length;s!==a;++s)t.push(Oc(n[s]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r.userData=JSON.parse(e.userData||"{}"),r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode,userData:JSON.stringify(e.userData)};for(let r=0,s=n.length;r!==s;++r)t.push(Rc.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,s=[];for(let a=0;a<r;a++){let e=[],o=[];e.push((a+r-1)%r,a,(a+1)%r),o.push(0,1,0);const l=xc(e);e=_c(e,1,l),o=_c(o,1,l),i||0!==e[0]||(e.push(r),o.push(o[0])),s.push(new Pc(".morphTargetInfluences["+t[a].name+"]",e,o).scale(1/n))}return new this(e,-1,s)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,o=e.length;a<o;a++){const t=e[a],n=t.name.match(r);if(n&&n.length>1){const e=n[1];let r=i[e];r||(i[e]=r=[]),r.push(t)}}const s=[];for(const a in i)s.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return s}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,i,r){if(0!==n.length){const s=[],a=[];Tc(n,s,a,i),0!==s.length&&r.push(new e(t,s,a))}},i=[],r=e.name||"default",s=e.fps||30,a=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let c=0;c<l.length;c++){const e=l[c].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let n;for(n=0;n<e.length;n++)if(e[n].morphTargets)for(let i=0;i<e[n].morphTargets.length;i++)t[e[n].morphTargets[i]]=-1;for(const r in t){const t=[],s=[];for(let i=0;i!==e[n].morphTargets.length;++i){const i=e[n];t.push(i.time),s.push(i.morphTarget===r?1:0)}i.push(new Pc(".morphTargetInfluence["+r+"]",t,s))}o=t.length*s}else{const r=".bones["+t[c].name+"]";n(Fc,r+".position",e,"pos",i),n(Ic,r+".quaternion",e,"rot",i),n(Fc,r+".scale",e,"scl",i)}}if(0===i.length)return null;return new this(r,o,i,a)}resetDuration(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());const t=new this.constructor(this.name,this.duration,e,this.blendMode);return t.userData=JSON.parse(JSON.stringify(this.userData)),t}toJSON(){return this.constructor.toJSON(this)}}function Oc(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Pc;case"vector":case"vector2":case"vector3":case"vector4":return Fc;case"color":return Nc;case"quaternion":return Ic;case"bool":case"boolean":return Cc;case"string":return Dc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];Tc(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Bc={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class kc{constructor(e,t,n){const i=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.abortController=new AbortController,this.itemStart=function(e){o++,!1===s&&void 0!==i.onStart&&i.onStart(e,a,o),s=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,o),a===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],i=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const Vc=new kc;class zc{constructor(e){this.manager=void 0!==e?e:Vc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}zc.DEFAULT_MATERIAL_NAME="__DEFAULT";const Gc={};class Hc extends Error{constructor(e,t){super(e),this.response=t}}class Wc extends zc{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Bc.get(`file:${e}`);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==Gc[e])return void Gc[e].push({onLoad:t,onProgress:n,onError:i});Gc[e]=[],Gc[e].push({onLoad:t,onProgress:n,onError:i});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:"function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,o=this.responseType;fetch(s).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=Gc[e],i=t.body.getReader(),r=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),s=r?parseInt(r):0,a=0!==s;let o=0;const l=new ReadableStream({start(e){!function t(){i.read().then(({done:i,value:r})=>{if(i)e.close();else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(i)}e.enqueue(r),t()}},t=>{e.error(t)})}()}});return new Response(l)}throw new Hc(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>(new DOMParser).parseFromString(e,a));case"json":return e.json();default:if(""===a)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(a),n=t&&t[1]?t[1].toLowerCase():void 0,i=new TextDecoder(n);return e.arrayBuffer().then(e=>i.decode(e))}}}).then(t=>{Bc.add(`file:${e}`,t);const n=Gc[e];delete Gc[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onLoad&&i.onLoad(t)}}).catch(t=>{const n=Gc[e];if(void 0===n)throw this.manager.itemError(e),t;delete Gc[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class jc extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new Wc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Uc.parse(e[n]);t.push(i)}return t}}class Xc extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=[],a=new Ro,o=new Wc(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(e[c],function(e){const n=r.parse(e,!0);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=de),a.image=s,a.format=n.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let u=0,h=e.length;u<h;++u)c(u);else o.load(e,function(e){const n=r.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)s[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),s[t].format=n.format,s[t].width=n.width,s[t].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=de),a.format=n.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}const qc=new WeakMap;class $c extends zc{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Bc.get(`image:${e}`);if(void 0!==s){if(!0===s.complete)r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0);else{let e=qc.get(s);void 0===e&&(e=[],qc.set(s,e)),e.push({onLoad:t,onError:i})}return s}const a=Dn("img");function o(){c(),t&&t(this);const n=qc.get(this)||[];for(let e=0;e<n.length;e++){const t=n[e];t.onLoad&&t.onLoad(this)}qc.delete(this),r.manager.itemEnd(e)}function l(t){c(),i&&i(t),Bc.remove(`image:${e}`);const n=qc.get(this)||[];for(let e=0;e<n.length;e++){const i=n[e];i.onError&&i.onError(t)}qc.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),Bc.add(`image:${e}`,a),r.manager.itemStart(e),a.src=e,a}}class Yc extends zc{constructor(e){super(e)}load(e,t,n,i){const r=new As;r.colorSpace=Ut;const s=new $c(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(e[n],function(e){r.images[n]=e,a++,6===a&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let l=0;l<e.length;++l)o(l);return r}}class Kc extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new ma,a=new Wc(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(e){let n;try{n=r.parse(e)}catch(a){if(void 0===i)return void console.error(a);i(a)}void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:oe,s.wrapT=void 0!==n.wrapT?n.wrapT:oe,s.magFilter=void 0!==n.magFilter?n.magFilter:de,s.minFilter=void 0!==n.minFilter?n.minFilter:de,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(s.colorSpace=n.colorSpace),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=me),1===n.mipmapCount&&(s.minFilter=de),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,t&&t(s,n)},n,i),s}}class Qc extends zc{constructor(e){super(e)}load(e,t,n,i){const r=new Qn,s=new $c(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},n,i),r}}class Zc extends sr{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new wr(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(t.object.target=this.target.uuid),t}}class Jc extends Zc{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(sr.DEFAULT_UP),this.updateMatrix(),this.groundColor=new wr(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const eu=new Li,tu=new En,nu=new En;class iu{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new wn(512,512),this.mapType=ge,this.map=null,this.mapPass=null,this.matrix=new Li,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Da,this._frameExtents=new wn(1,1),this._viewportCount=1,this._viewports=[new Zn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;tu.setFromMatrixPosition(e.matrixWorld),t.position.copy(tu),nu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(nu),t.updateMatrixWorld(),eu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(eu,t.coordinateSystem,t.reversedDepth),t.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(eu)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 1!==this.intensity&&(e.intensity=this.intensity),0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ru extends iu{constructor(){super(new ws(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=2*gn*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;n===t.fov&&i===t.aspect&&r===t.far||(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class su extends Zc{constructor(e,t,n=0,i=Math.PI/3,r=0,s=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(sr.DEFAULT_UP),this.updateMatrix(),this.target=new sr,this.distance=n,this.angle=i,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new ru}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const au=new Li,ou=new En,lu=new En;class cu extends iu{constructor(){super(new ws(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new wn(4,2),this._viewportCount=6,this._viewports=[new Zn(2,1,1,1),new Zn(0,1,1,1),new Zn(3,1,1,1),new Zn(1,1,1,1),new Zn(3,0,1,1),new Zn(1,0,1,1)],this._cubeDirections=[new En(1,0,0),new En(-1,0,0),new En(0,0,1),new En(0,0,-1),new En(0,1,0),new En(0,-1,0)],this._cubeUps=[new En(0,1,0),new En(0,1,0),new En(0,1,0),new En(0,1,0),new En(0,0,1),new En(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),ou.setFromMatrixPosition(e.matrixWorld),n.position.copy(ou),lu.copy(n.position),lu.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(lu),n.updateMatrixWorld(),i.makeTranslation(-ou.x,-ou.y,-ou.z),au.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(au,n.coordinateSystem,n.reversedDepth)}}class uu extends Zc{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new cu}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class hu extends xs{constructor(e=-1,t=1,n=1,i=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,a=i+t,o=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,s=r+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}class du extends iu{constructor(){super(new hu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class pu extends Zc{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(sr.DEFAULT_UP),this.updateMatrix(),this.target=new sr,this.shadow=new du}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class mu extends Zc{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class fu extends Zc{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class gu{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new En)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*i),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*n),t.addScaledVector(s[4],n*i*1.092548),t.addScaledVector(s[5],i*r*1.092548),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],n*r*1.092548),t.addScaledVector(s[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*i),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*n),t.addScaledVector(s[4],.858086*n*i),t.addScaledVector(s[5],.858086*i*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*n*r),t.addScaledVector(s[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class vu extends Zc{constructor(e=new gu,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class bu extends zc{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,s=new Wc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const i=this.createMaterialFromType(e.type);if(void 0!==e.uuid&&(i.uuid=e.uuid),void 0!==e.name&&(i.name=e.name),void 0!==e.color&&void 0!==i.color&&i.color.setHex(e.color),void 0!==e.roughness&&(i.roughness=e.roughness),void 0!==e.metalness&&(i.metalness=e.metalness),void 0!==e.sheen&&(i.sheen=e.sheen),void 0!==e.sheenColor&&(i.sheenColor=(new wr).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(i.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==i.emissive&&i.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==i.specular&&i.specular.setHex(e.specular),void 0!==e.specularIntensity&&(i.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(i.shininess=e.shininess),void 0!==e.clearcoat&&(i.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(i.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.dispersion&&(i.dispersion=e.dispersion),void 0!==e.iridescence&&(i.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(i.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(i.transmission=e.transmission),void 0!==e.thickness&&(i.thickness=e.thickness),void 0!==e.attenuationDistance&&(i.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(e.attenuationColor),void 0!==e.anisotropy&&(i.anisotropy=e.anisotropy),void 0!==e.anisotropyRotation&&(i.anisotropyRotation=e.anisotropyRotation),void 0!==e.fog&&(i.fog=e.fog),void 0!==e.flatShading&&(i.flatShading=e.flatShading),void 0!==e.blending&&(i.blending=e.blending),void 0!==e.combine&&(i.combine=e.combine),void 0!==e.side&&(i.side=e.side),void 0!==e.shadowSide&&(i.shadowSide=e.shadowSide),void 0!==e.opacity&&(i.opacity=e.opacity),void 0!==e.transparent&&(i.transparent=e.transparent),void 0!==e.alphaTest&&(i.alphaTest=e.alphaTest),void 0!==e.alphaHash&&(i.alphaHash=e.alphaHash),void 0!==e.depthFunc&&(i.depthFunc=e.depthFunc),void 0!==e.depthTest&&(i.depthTest=e.depthTest),void 0!==e.depthWrite&&(i.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(i.colorWrite=e.colorWrite),void 0!==e.blendSrc&&(i.blendSrc=e.blendSrc),void 0!==e.blendDst&&(i.blendDst=e.blendDst),void 0!==e.blendEquation&&(i.blendEquation=e.blendEquation),void 0!==e.blendSrcAlpha&&(i.blendSrcAlpha=e.blendSrcAlpha),void 0!==e.blendDstAlpha&&(i.blendDstAlpha=e.blendDstAlpha),void 0!==e.blendEquationAlpha&&(i.blendEquationAlpha=e.blendEquationAlpha),void 0!==e.blendColor&&void 0!==i.blendColor&&i.blendColor.setHex(e.blendColor),void 0!==e.blendAlpha&&(i.blendAlpha=e.blendAlpha),void 0!==e.stencilWriteMask&&(i.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(i.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(i.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(i.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(i.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(i.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(i.stencilZPass=e.stencilZPass),void 0!==e.stencilWrite&&(i.stencilWrite=e.stencilWrite),void 0!==e.wireframe&&(i.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(i.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(i.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(i.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(i.rotation=e.rotation),void 0!==e.linewidth&&(i.linewidth=e.linewidth),void 0!==e.dashSize&&(i.dashSize=e.dashSize),void 0!==e.gapSize&&(i.gapSize=e.gapSize),void 0!==e.scale&&(i.scale=e.scale),void 0!==e.polygonOffset&&(i.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(i.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(i.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(i.dithering=e.dithering),void 0!==e.alphaToCoverage&&(i.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(i.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.forceSinglePass&&(i.forceSinglePass=e.forceSinglePass),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.toneMapped&&(i.toneMapped=e.toneMapped),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const r in e.uniforms){const t=e.uniforms[r];switch(i.uniforms[r]={},t.type){case"t":i.uniforms[r].value=n(t.value);break;case"c":i.uniforms[r].value=(new wr).setHex(t.value);break;case"v2":i.uniforms[r].value=(new wn).fromArray(t.value);break;case"v3":i.uniforms[r].value=(new En).fromArray(t.value);break;case"v4":i.uniforms[r].value=(new Zn).fromArray(t.value);break;case"m3":i.uniforms[r].value=(new Cn).fromArray(t.value);break;case"m4":i.uniforms[r].value=(new Li).fromArray(t.value);break;default:i.uniforms[r].value=t.value}}if(void 0!==e.defines&&(i.defines=e.defines),void 0!==e.vertexShader&&(i.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(i.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(i.glslVersion=e.glslVersion),void 0!==e.extensions)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(void 0!==e.lights&&(i.lights=e.lights),void 0!==e.clipping&&(i.clipping=e.clipping),void 0!==e.size&&(i.size=e.size),void 0!==e.sizeAttenuation&&(i.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(i.map=n(e.map)),void 0!==e.matcap&&(i.matcap=n(e.matcap)),void 0!==e.alphaMap&&(i.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(i.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(i.bumpScale=e.bumpScale),void 0!==e.normalMap&&(i.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(i.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),i.normalScale=(new wn).fromArray(t)}return void 0!==e.displacementMap&&(i.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(i.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(i.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(i.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(i.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(i.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(i.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(i.specularMap=n(e.specularMap)),void 0!==e.specularIntensityMap&&(i.specularIntensityMap=n(e.specularIntensityMap)),void 0!==e.specularColorMap&&(i.specularColorMap=n(e.specularColorMap)),void 0!==e.envMap&&(i.envMap=n(e.envMap)),void 0!==e.envMapRotation&&i.envMapRotation.fromArray(e.envMapRotation),void 0!==e.envMapIntensity&&(i.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(i.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(i.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(i.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(i.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(i.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(i.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(i.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(i.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(i.clearcoatNormalScale=(new wn).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(i.iridescenceMap=n(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(i.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(i.thicknessMap=n(e.thicknessMap)),void 0!==e.anisotropyMap&&(i.anisotropyMap=n(e.anisotropyMap)),void 0!==e.sheenColorMap&&(i.sheenColorMap=n(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return bu.createMaterialFromType(e)}static createMaterialFromType(e){return new{ShadowMaterial:ac,SpriteMaterial:Bs,RawShaderMaterial:oc,ShaderMaterial:ys,PointsMaterial:bo,MeshPhysicalMaterial:cc,MeshStandardMaterial:lc,MeshPhongMaterial:uc,MeshToonMaterial:hc,MeshNormalMaterial:dc,MeshLambertMaterial:pc,MeshDepthMaterial:mc,MeshDistanceMaterial:fc,MeshBasicMaterial:Rr,MeshMatcapMaterial:gc,LineDashedMaterial:vc,LineBasicMaterial:io,Material:Ar}[e]}}class yu{static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class xu extends es{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class _u extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new Wc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(e,i){if(void 0!==t[i])return t[i];const r=e.interleavedBuffers[i],s=function(e,t){if(void 0!==n[t])return n[t];const i=e.arrayBuffers,r=i[t],s=new Uint32Array(r).buffer;return n[t]=s,s}(e,r.buffer),a=In(r.type,s),o=new Fs(a,r.stride);return o.uuid=r.uuid,t[i]=o,o}const r=e.isInstancedBufferGeometry?new xu:new es,s=e.data.index;if(void 0!==s){const e=In(s.type,s.array);r.setIndex(new Or(e,1))}const a=e.data.attributes;for(const u in a){const t=a[u];let n;if(t.isInterleavedBufferAttribute){const r=i(e.data,t.data);n=new Os(r,t.itemSize,t.offset,t.normalized)}else{const e=In(t.type,t.array);n=new(t.isInstancedBufferAttribute?ba:Or)(e,t.itemSize,t.normalized)}void 0!==t.name&&(n.name=t.name),void 0!==t.usage&&n.setUsage(t.usage),r.setAttribute(u,n)}const o=e.data.morphAttributes;if(o)for(const u in o){const t=o[u],n=[];for(let r=0,s=t.length;r<s;r++){const s=t[r];let a;if(s.isInterleavedBufferAttribute){const t=i(e.data,s.data);a=new Os(t,s.itemSize,s.offset,s.normalized)}else{const e=In(s.type,s.array);a=new Or(e,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),n.push(a)}r.morphAttributes[u]=n}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let u=0,h=l.length;u!==h;++u){const e=l[u];r.addGroup(e.start,e.count,e.materialIndex)}const c=e.data.boundingSphere;return void 0!==c&&(r.boundingSphere=(new Si).fromJSON(c)),e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class Tu extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=""===this.path?yu.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const a=new Wc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(n){let s=null;try{s=JSON.parse(n)}catch(o){return void 0!==i&&i(o),void console.error("THREE:ObjectLoader: Can't parse "+e+".",o.message)}const a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+e)),void console.error("THREE.ObjectLoader: Can't load "+e);r.parse(s,t)},n,i)}async loadAsync(e,t){const n=""===this.path?yu.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const i=new Wc(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const r=await i.loadAsync(e,t),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(s)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),s=this.parseImages(e.images,function(){void 0!==t&&t(l)}),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,r,o,a,n),c=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,c),this.bindLightTargets(l),void 0!==t){let e=!1;for(const t in s)if(s[t].data instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),s=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,s),o=this.parseObject(e.object,i,a,s,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),this.bindLightTargets(o),o}parseShapes(e){const t={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=(new pl).fromJSON(e[n]);t[i.uuid]=i}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==e)for(let r=0,s=e.length;r<s;r++){const t=(new va).fromJSON(e[r],i);n[t.uuid]=t}return n}parseGeometries(e,t){const n={};if(void 0!==e){const i=new _u;for(let r=0,s=e.length;r<s;r++){let s;const a=e[r];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(a);break;default:a.type in sc?s=sc[a.type].fromJSON(a,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(e,t){const n={},i={};if(void 0!==e){const r=new bu;r.setTextures(t);for(let t=0,s=e.length;t<s;t++){const s=e[t];void 0===n[s.uuid]&&(n[s.uuid]=r.parse(s)),i[s.uuid]=n[s.uuid]}}return i}parseAnimations(e){const t={};if(void 0!==e)for(let n=0;n<e.length;n++){const i=e[n],r=Uc.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function s(e){if("string"==typeof e){const t=e;return function(e){return n.manager.itemStart(e),r.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemError(e),n.manager.itemEnd(e)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return e.data?{data:In(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const n=new kc(t);r=new $c(n),r.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const n=e[t],r=n.url;if(Array.isArray(r)){const e=[];for(let t=0,n=r.length;t<n;t++){const n=s(r[t]);null!==n&&(n instanceof HTMLImageElement?e.push(n):e.push(new ma(n.data,n.width,n.height)))}i[n.uuid]=new qn(e)}else{const e=s(n.url);i[n.uuid]=new qn(e)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(e){if("string"==typeof e){const n=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:t.resourcePath+n;return await i.loadAsync(r)}return e.data?{data:In(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){i=new $c(this.manager),i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],s=i.url;if(Array.isArray(s)){const e=[];for(let t=0,n=s.length;t<n;t++){const n=s[t],i=await r(n);null!==i&&(i instanceof HTMLImageElement?e.push(i):e.push(new ma(i.data,i.width,i.height)))}n[i.uuid]=new qn(e)}else{const e=await r(i.url);n[i.uuid]=new qn(e)}}}return n}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const i={};if(void 0!==e)for(let r=0,s=e.length;r<s;r++){const s=e[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=t[s.image],o=a.data;let l;Array.isArray(o)?(l=new As,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new ma:new Qn,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=n(s.mapping,Su)),void 0!==s.channel&&(l.channel=s.channel),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=n(s.wrap[0],wu),l.wrapT=n(s.wrap[1],wu)),void 0!==s.format&&(l.format=s.format),void 0!==s.internalFormat&&(l.internalFormat=s.internalFormat),void 0!==s.type&&(l.type=s.type),void 0!==s.colorSpace&&(l.colorSpace=s.colorSpace),void 0!==s.minFilter&&(l.minFilter=n(s.minFilter,Mu)),void 0!==s.magFilter&&(l.magFilter=n(s.magFilter,Mu)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.generateMipmaps&&(l.generateMipmaps=s.generateMipmaps),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.compareFunction&&(l.compareFunction=s.compareFunction),void 0!==s.userData&&(l.userData=s.userData),i[s.uuid]=l}return i}parseObject(e,t,n,i,r){let s,a,o;function l(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function c(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];void 0===n[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),t.push(n[r])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function u(e){return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),i[e]}switch(e.type){case"Scene":s=new Ds,void 0!==e.background&&(Number.isInteger(e.background)?s.background=new wr(e.background):s.background=u(e.background)),void 0!==e.environment&&(s.environment=u(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?s.fog=new Is(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(s.fog=new Ls(e.fog.color,e.fog.density)),""!==e.fog.name&&(s.fog.name=e.fog.name)),void 0!==e.backgroundBlurriness&&(s.backgroundBlurriness=e.backgroundBlurriness),void 0!==e.backgroundIntensity&&(s.backgroundIntensity=e.backgroundIntensity),void 0!==e.backgroundRotation&&s.backgroundRotation.fromArray(e.backgroundRotation),void 0!==e.environmentIntensity&&(s.environmentIntensity=e.environmentIntensity),void 0!==e.environmentRotation&&s.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":s=new ws(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(s.focus=e.focus),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.filmGauge&&(s.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(s.filmOffset=e.filmOffset),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new hu(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new mu(e.color,e.intensity);break;case"DirectionalLight":s=new pu(e.color,e.intensity),s.target=e.target||"";break;case"PointLight":s=new uu(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new fu(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new su(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),s.target=e.target||"";break;case"HemisphereLight":s=new Jc(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=(new vu).fromJSON(e);break;case"SkinnedMesh":a=l(e.geometry),o=c(e.material),s=new da(a,o),void 0!==e.bindMode&&(s.bindMode=e.bindMode),void 0!==e.bindMatrix&&s.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(s.skeleton=e.skeleton);break;case"Mesh":a=l(e.geometry),o=c(e.material),s=new ds(a,o);break;case"InstancedMesh":a=l(e.geometry),o=c(e.material);const t=e.count,n=e.instanceMatrix,i=e.instanceColor;s=new Ea(a,o,t),s.instanceMatrix=new ba(new Float32Array(n.array),16),void 0!==i&&(s.instanceColor=new ba(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":a=l(e.geometry),o=c(e.material),s=new no(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,o),s.geometry=a,s.perObjectFrustumCulled=e.perObjectFrustumCulled,s.sortObjects=e.sortObjects,s._drawRanges=e.drawRanges,s._reservedRanges=e.reservedRanges,s._geometryInfo=e.geometryInfo.map(e=>{let t=null,n=null;return void 0!==e.boundingBox&&(t=(new si).fromJSON(e.boundingBox)),void 0!==e.boundingSphere&&(n=(new Si).fromJSON(e.boundingSphere)),{...e,boundingBox:t,boundingSphere:n}}),s._instanceInfo=e.instanceInfo,s._availableInstanceIds=e._availableInstanceIds,s._availableGeometryIds=e._availableGeometryIds,s._nextIndexStart=e.nextIndexStart,s._nextVertexStart=e.nextVertexStart,s._geometryCount=e.geometryCount,s._maxInstanceCount=e.maxInstanceCount,s._maxVertexCount=e.maxVertexCount,s._maxIndexCount=e.maxIndexCount,s._geometryInitialized=e.geometryInitialized,s._matricesTexture=u(e.matricesTexture.uuid),s._indirectTexture=u(e.indirectTexture.uuid),void 0!==e.colorsTexture&&(s._colorsTexture=u(e.colorsTexture.uuid)),void 0!==e.boundingSphere&&(s.boundingSphere=(new Si).fromJSON(e.boundingSphere)),void 0!==e.boundingBox&&(s.boundingBox=(new si).fromJSON(e.boundingBox));break;case"LOD":s=new na;break;case"Line":s=new ho(l(e.geometry),c(e.material));break;case"LineLoop":s=new vo(l(e.geometry),c(e.material));break;case"LineSegments":s=new go(l(e.geometry),c(e.material));break;case"PointCloud":case"Points":s=new So(l(e.geometry),c(e.material));break;case"Sprite":s=new Zs(c(e.material));break;case"Group":s=new Cs;break;case"Bone":s=new pa;break;default:s=new sr}if(s.uuid=e.uuid,void 0!==e.name&&(s.name=e.name),void 0!==e.matrix?(s.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==e.position&&s.position.fromArray(e.position),void 0!==e.rotation&&s.rotation.fromArray(e.rotation),void 0!==e.quaternion&&s.quaternion.fromArray(e.quaternion),void 0!==e.scale&&s.scale.fromArray(e.scale)),void 0!==e.up&&s.up.fromArray(e.up),void 0!==e.castShadow&&(s.castShadow=e.castShadow),void 0!==e.receiveShadow&&(s.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.intensity&&(s.shadow.intensity=e.shadow.intensity),void 0!==e.shadow.bias&&(s.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(s.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(s.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&s.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(s.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.frustumCulled&&(s.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(s.renderOrder=e.renderOrder),void 0!==e.userData&&(s.userData=e.userData),void 0!==e.layers&&(s.layers.mask=e.layers),void 0!==e.children){const a=e.children;for(let e=0;e<a.length;e++)s.add(this.parseObject(a[e],t,n,i,r))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];s.animations.push(r[n])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(s.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e],i=s.getObjectByProperty("uuid",n.object);void 0!==i&&s.addLevel(i,n.distance,n.hysteresis)}}return s}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);t.target=void 0!==i?i:new sr}})}}const Su={UVMapping:ee,CubeReflectionMapping:te,CubeRefractionMapping:ne,EquirectangularReflectionMapping:ie,EquirectangularRefractionMapping:re,CubeUVReflectionMapping:se},wu={RepeatWrapping:ae,ClampToEdgeWrapping:oe,MirroredRepeatWrapping:le},Mu={NearestFilter:ce,NearestMipmapNearestFilter:ue,NearestMipmapLinearFilter:he,LinearFilter:de,LinearMipmapNearestFilter:pe,LinearMipmapLinearFilter:me},Eu=new WeakMap;class Au extends zc{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Bc.get(`image-bitmap:${e}`);if(void 0!==s)return r.manager.itemStart(e),s.then?void s.then(n=>{if(!0!==Eu.has(s))return t&&t(n),r.manager.itemEnd(e),n;i&&i(Eu.get(s)),r.manager.itemError(e),r.manager.itemEnd(e)}):(setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,a.signal="function"==typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const o=fetch(e,a).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){return Bc.add(`image-bitmap:${e}`,n),t&&t(n),r.manager.itemEnd(e),n}).catch(function(t){i&&i(t),Eu.set(o,t),Bc.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});Bc.add(`image-bitmap:${e}`,o),r.manager.itemStart(e)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Ru;class Cu{static getContext(){return void 0===Ru&&(Ru=new(window.AudioContext||window.webkitAudioContext)),Ru}static setContext(e){Ru=e}}class Nu extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new Wc(this.manager);function a(t){i?i(t):console.error(t),r.manager.itemError(e)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(e){try{const n=e.slice(0);Cu.getContext().decodeAudioData(n,function(e){t(e)}).catch(a)}catch(p3){a(p3)}},n,i)}}const Pu=new Li,Lu=new Li,Iu=new Li;class Du{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ws,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ws,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Iu.copy(e.projectionMatrix);const n=t.eyeSep/2,i=n*t.near/t.focus,r=t.near*Math.tan(fn*t.fov*.5)/t.zoom;let s,a;Lu.elements[12]=-n,Pu.elements[12]=n,s=-r*t.aspect+i,a=r*t.aspect+i,Iu.elements[0]=2*t.near/(a-s),Iu.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(Iu),s=-r*t.aspect-i,a=r*t.aspect-i,Iu.elements[0]=2*t.near/(a-s),Iu.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(Iu)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Lu),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Pu)}}class Fu extends ws{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Uu{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Ou=new En,Bu=new Mn,ku=new En,Vu=new En,zu=new En;class Gu extends sr{constructor(){super(),this.type="AudioListener",this.context=Cu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Uu}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ou,Bu,ku),Vu.set(0,0,-1).applyQuaternion(Bu),zu.set(0,1,0).applyQuaternion(Bu),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ou.x,e),t.positionY.linearRampToValueAtTime(Ou.y,e),t.positionZ.linearRampToValueAtTime(Ou.z,e),t.forwardX.linearRampToValueAtTime(Vu.x,e),t.forwardY.linearRampToValueAtTime(Vu.y,e),t.forwardZ.linearRampToValueAtTime(Vu.z,e),t.upX.linearRampToValueAtTime(zu.x,e),t.upY.linearRampToValueAtTime(zu.y,e),t.upZ.linearRampToValueAtTime(zu.z,e)}else t.setPosition(Ou.x,Ou.y,Ou.z),t.setOrientation(Vu.x,Vu.y,Vu.z,zu.x,zu.y,zu.z)}}class Hu extends sr{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(e=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),"buffer"!==e.sourceType?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Wu=new En,ju=new Mn,Xu=new En,qu=new En;class $u extends Hu{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Wu,ju,Xu),qu.set(0,0,1).applyQuaternion(ju);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Wu.x,e),t.positionY.linearRampToValueAtTime(Wu.y,e),t.positionZ.linearRampToValueAtTime(Wu.z,e),t.orientationX.linearRampToValueAtTime(qu.x,e),t.orientationY.linearRampToValueAtTime(qu.y,e),t.orientationZ.linearRampToValueAtTime(qu.z,e)}else t.setPosition(Wu.x,Wu.y,Wu.z),t.setOrientation(qu.x,qu.y,qu.z)}}class Yu{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Ku{constructor(e,t,n){let i,r,s;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(0===s){for(let e=0;e!==i;++e)n[r+e]=n[e];s=t}else{s+=t;const e=t/s;this._mixBufferRegion(n,r,0,e,i)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const e=t*this._origIndex;this._mixBufferRegion(n,i,e,1-r,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let o=t,l=t+t;o!==l;++o)if(n[o]!==n[o+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,s=i;r!==s;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)e[t+s]=e[n+s]}_slerp(e,t,n,i){Mn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const s=this._workIndex*r;Mn.multiplyQuaternionsFlat(e,s,e,t,e,n),Mn.slerpFlat(e,t,e,t,e,s,i)}_lerp(e,t,n,i,r){const s=1-i;for(let a=0;a!==r;++a){const r=t+a;e[r]=e[r]*s+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let s=0;s!==r;++s){const r=t+s;e[r]=e[r]+e[n+s]*i}}}const Qu="\\[\\]\\.:\\/",Zu=new RegExp("["+Qu+"]","g"),Ju="[^"+Qu+"]",eh="[^"+Qu.replace("\\.","")+"]",th=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Ju)+/(WCOD+)?/.source.replace("WCOD",eh)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ju)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ju)+"$"),nh=["material","materials","bones","map"];class ih{constructor(e,t,n){this.path=t,this.parsedPath=n||ih.parseTrackName(t),this.node=ih.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new ih.Composite(e,t,n):new ih(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Zu,"")}static parseTrackName(e){const t=th.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==nh.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t)return r;const s=n(r.children);if(s)return s}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=ih.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const s=e[i];if(void 0===s){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,!0===e.isMaterial?a=this.Versioning.NeedsUpdate:!0===e.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ih.Composite=class{constructor(e,t,n){const i=n||ih.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},ih.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ih.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ih.prototype.GetterByBindingType=[ih.prototype._getValue_direct,ih.prototype._getValue_array,ih.prototype._getValue_arrayElement,ih.prototype._getValue_toArray],ih.prototype.SetterByBindingTypeAndVersioning=[[ih.prototype._setValue_direct,ih.prototype._setValue_direct_setNeedsUpdate,ih.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ih.prototype._setValue_array,ih.prototype._setValue_array_setNeedsUpdate,ih.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ih.prototype._setValue_arrayElement,ih.prototype._setValue_arrayElement_setNeedsUpdate,ih.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ih.prototype._setValue_fromArray,ih.prototype._setValue_fromArray_setNeedsUpdate,ih.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class rh{constructor(){this.isAnimationObjectGroup=!0,this.uuid=vn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a,o=e.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],h=u.uuid;let d=t[h];if(void 0===d){d=o++,t[h]=d,e.push(u);for(let e=0,t=s;e!==t;++e)r[e].push(new ih(u,n[e],i[e]))}else if(d<l){a=e[d];const o=--l,c=e[o];t[c.uuid]=d,e[d]=c,t[h]=o,e[o]=u;for(let e=0,t=s;e!==t;++e){const t=r[e],s=t[o];let a=t[d];t[d]=s,void 0===a&&(a=new ih(u,n[e],i[e])),t[o]=a}}else e[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=t[o];if(void 0!==l&&l>=r){const s=r++,c=e[s];t[c.uuid]=l,e[l]=c,t[o]=s,e[s]=a;for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[s],r=t[l];t[l]=i,t[s]=r}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=t[o];if(void 0!==l)if(delete t[o],l<r){const a=--r,o=e[a],c=--s,u=e[c];t[o.uuid]=l,e[l]=o,t[u.uuid]=a,e[a]=u,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[a],r=t[c];t[l]=i,t[a]=r,t.pop()}}else{const r=--s,a=e[r];r>0&&(t[a.uuid]=l),e[l]=a,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e];t[l]=t[r],t.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(void 0!==i)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,u=new Array(l);i=r.length,n[e]=i,s.push(e),a.push(t),r.push(u);for(let h=c,d=o.length;h!==d;++h){const n=o[h];u[h]=new ih(n,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];t[e[a]]=n,s[n]=o,s.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class sh{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,s=r.length,a=new Array(s),o={endingStart:wt,endingEnd:wt};for(let l=0;l!==s;++l){const e=r[l].createInterpolant(null);a[l]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=yt,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),!0===n){const n=this._clip.duration,i=e._clip.duration,r=i/n,s=n/i;e.warp(1,r,t),this.warp(s,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=e/s,l[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled)return void this._updateWeight(e);const r=this._startTime;if(null!==r){const i=(e-r)*n;i<0||0===n?t=0:(this._startTime=null,t=n*i)}t*=this._updateTimeScale(e);const s=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;if(this.blendMode===Rt)for(let n=0,i=e.length;n!==i;++n)e[n].evaluate(s),t[n].accumulateAdditive(a);else for(let n=0,r=e.length;n!==r;++n)e[n].evaluate(s),t[n].accumulate(i,a)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const s=n===xt;if(0===e)return-1===r||!s||1&~r?i:t-i;if(n===bt){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=t||i<0){const n=Math.floor(i/t);i-=t*n,r+=Math.abs(n);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(s&&!(1&~r))return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Mt,i.endingEnd=Mt):(i.endingStart=e?this.zeroSlopeAtStart?Mt:wt:Et,i.endingEnd=t?this.zeroSlopeAtEnd?Mt:wt:Et)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=t,a[1]=r+e,o[1]=n,this}}const ah=new Float32Array(1);class oh extends dn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,a=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let u=0;u!==r;++u){const e=i[u],r=e.name;let l=c[r];if(void 0!==l)++l.referenceCount,s[u]=l;else{if(l=s[u],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,r));continue}const i=t&&t._propertyBindings[u].binding.parsedPath;l=new Ku(ih.create(n,r,i),e.ValueTypeName,e.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,r),s[u]=l}a[u].resultBuffer=l.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const t=s.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),e._byClipCacheIndex=null;delete a.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const e=t[n];0===--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];void 0===s&&(s={},i[t]=s),s[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[r],0===Object.keys(a).length&&delete s[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new Ec(new Float32Array(2),new Float32Array(2),1,ah),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let s="string"==typeof e?Uc.findByName(i,e):e;const a=null!==s?s.uuid:e,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:At),void 0!==o){const e=o.actionByRoot[r];if(void 0!==e&&e.blendMode===n)return e;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new sh(this,s,t,n);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(e,t){const n=t||this._root,i=n.uuid,r="string"==typeof e?Uc.findByName(n,e):e,s=r?r.uuid:e,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let l=0;l!==n;++l){t[l]._update(i,e,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const e=r.knownActions;for(let n=0,i=e.length;n!==i;++n){const i=e[n];this._deactivateAction(i);const r=i._cacheIndex,s=t[t.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=r,t[r]=s,t.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const r in n){const e=n[r].actionByRoot[t];void 0!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}const i=this._bindingsByRootAndName[t];if(void 0!==i)for(const r in i){const e=i[r];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class lh extends Jn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new ii(null,e,t,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}let ch=class e{constructor(e){this.value=e}clone(){return new e(void 0===this.value.clone?this.value:this.value.clone())}},uh=0,hh=class extends dn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:uh++}),this.name="",this.usage=rn,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const e=Array.isArray(t[n])?t[n]:[t[n]];for(let t=0;t<e.length;t++)this.uniforms.push(e[t].clone())}return this}clone(){return(new this.constructor).copy(this)}};class dh extends Fs{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class ph{constructor(e,t,n,i,r,s=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=s,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const mh=new Li;class fh{constructor(e,t,n=0,i=1/0){this.ray=new Pi(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Hi,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return mh.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(mh),this}intersectObject(e,t=!0,n=[]){return vh(e,this,n,t),n.sort(gh),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)vh(e[i],this,n,t);return n.sort(gh),n}}function gh(e,t){return e.distance-t.distance}function vh(e,t,n,i){let r=!0;if(e.layers.test(t.layers)){!1===e.raycast(t,n)&&(r=!1)}if(!0===r&&!0===i){const i=e.children;for(let e=0,r=i.length;e<r;e++)vh(i[e],t,n,!0)}}class bh{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(e){this._document=e,void 0!==e.hidden&&(this._pageVisibilityHandler=yh.bind(this),e.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){null!==this._pageVisibilityHandler&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(e){return this._timescale=e,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(e){return null!==this._pageVisibilityHandler&&!0===this._document.hidden?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(void 0!==e?e:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function yh(){!1===this._document.hidden&&this.reset()}class xh{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=bn(this.phi,e,Math.PI-e),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(bn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class _h{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}}class Th{constructor(e,t,n,i){Th.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==e&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const Sh=new wn;class wh{constructor(e=new wn(1/0,1/0),t=new wn(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Sh.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Sh).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mh=new En,Eh=new En,Ah=new En,Rh=new En,Ch=new En,Nh=new En,Ph=new En;class Lh{constructor(e=new En,t=new En){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Mh.subVectors(e,this.start),Eh.subVectors(this.end,this.start);const n=Eh.dot(Eh);let i=Eh.dot(Mh)/n;return t&&(i=bn(i,0,1)),i}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(e,t=Nh,n=Ph){const i=1e-8*1e-8;let r,s;const a=this.start,o=e.start,l=this.end,c=e.end;Ah.subVectors(l,a),Rh.subVectors(c,o),Ch.subVectors(a,o);const u=Ah.dot(Ah),h=Rh.dot(Rh),d=Rh.dot(Ch);if(u<=i&&h<=i)return t.copy(a),n.copy(o),t.sub(n),t.dot(t);if(u<=i)r=0,s=d/h,s=bn(s,0,1);else{const e=Ah.dot(Ch);if(h<=i)s=0,r=bn(-e/u,0,1);else{const t=Ah.dot(Rh),n=u*h-t*t;r=0!==n?bn((t*d-e*h)/n,0,1):0,s=(t*r+d)/h,s<0?(s=0,r=bn(-e/u,0,1)):s>1&&(s=1,r=bn((t-e)/u,0,1))}}return t.copy(a).add(Ah.multiplyScalar(r)),n.copy(o).add(Rh.multiplyScalar(s)),t.sub(n),t.dot(t)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Ih=new En;class Dh extends sr{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new es,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let s=0,a=1,o=32;s<o;s++,a++){const e=s/o*Math.PI*2,t=a/o*Math.PI*2;i.push(Math.cos(e),Math.sin(e),1,Math.cos(t),Math.sin(t),1)}n.setAttribute("position",new Xr(i,3));const r=new io({fog:!1,toneMapped:!1});this.cone=new go(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Ih.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ih),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Fh=new En,Uh=new Li,Oh=new Li;class Bh extends go{constructor(e){const t=kh(e),n=new es,i=[],r=[];for(let o=0;o<t.length;o++){const e=t[o];e.parent&&e.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(0,0,0),r.push(0,0,0))}n.setAttribute("position",new Xr(i,3)),n.setAttribute("color",new Xr(r,3));super(n,new io({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;const s=new wr(255),a=new wr(65280);this.setColors(s,a)}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Oh.copy(this.root.matrixWorld).invert();for(let r=0,s=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(Uh.multiplyMatrices(Oh,e.matrixWorld),Fh.setFromMatrixPosition(Uh),i.setXYZ(s,Fh.x,Fh.y,Fh.z),Uh.multiplyMatrices(Oh,e.parent.matrixWorld),Fh.setFromMatrixPosition(Uh),i.setXYZ(s+1,Fh.x,Fh.y,Fh.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}setColors(e,t){const n=this.geometry.getAttribute("color");for(let i=0;i<n.count;i+=2)n.setXYZ(i,e.r,e.g,e.b),n.setXYZ(i+1,t.r,t.g,t.b);return n.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function kh(e){const t=[];!0===e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push(...kh(e.children[n]));return t}class Vh extends ds{constructor(e,t,n){super(new Zl(t,4,2),new Rr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const zh=new En,Gh=new wr,Hh=new wr;class Wh extends sr{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new $l(t);i.rotateY(.5*Math.PI),this.material=new Rr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),s=new Float32Array(3*r.count);i.setAttribute("color",new Or(s,3)),this.add(new ds(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Gh.copy(this.light.color),Hh.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const i=e<n/2?Gh:Hh;t.setXYZ(e,i.r,i.g,i.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(zh.setFromMatrixPosition(this.light.matrixWorld).negate())}}class jh extends go{constructor(e=10,t=10,n=4473924,i=8947848){n=new wr(n),i=new wr(i);const r=t/2,s=e/t,a=e/2,o=[],l=[];for(let u=0,h=0,d=-a;u<=t;u++,d+=s){o.push(-a,0,d,a,0,d),o.push(d,0,-a,d,0,a);const e=u===r?n:i;e.toArray(l,h),h+=3,e.toArray(l,h),h+=3,e.toArray(l,h),h+=3,e.toArray(l,h),h+=3}const c=new es;c.setAttribute("position",new Xr(o,3)),c.setAttribute("color",new Xr(l,3));super(c,new io({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Xh extends go{constructor(e=10,t=16,n=8,i=64,r=4473924,s=8947848){r=new wr(r),s=new wr(s);const a=[],o=[];if(t>1)for(let c=0;c<t;c++){const n=c/t*(2*Math.PI),i=Math.sin(n)*e,l=Math.cos(n)*e;a.push(0,0,0),a.push(i,0,l);const u=1&c?r:s;o.push(u.r,u.g,u.b),o.push(u.r,u.g,u.b)}for(let c=0;c<n;c++){const t=1&c?r:s,l=e-e/n*c;for(let e=0;e<i;e++){let n=e/i*(2*Math.PI),r=Math.sin(n)*l,s=Math.cos(n)*l;a.push(r,0,s),o.push(t.r,t.g,t.b),n=(e+1)/i*(2*Math.PI),r=Math.sin(n)*l,s=Math.cos(n)*l,a.push(r,0,s),o.push(t.r,t.g,t.b)}}const l=new es;l.setAttribute("position",new Xr(a,3)),l.setAttribute("color",new Xr(o,3));super(l,new io({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const qh=new En,$h=new En,Yh=new En;class Kh extends sr{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===t&&(t=1);let i=new es;i.setAttribute("position",new Xr([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new io({fog:!1,toneMapped:!1});this.lightPlane=new ho(i,r),this.add(this.lightPlane),i=new es,i.setAttribute("position",new Xr([0,0,0,0,0,1],3)),this.targetLine=new ho(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),qh.setFromMatrixPosition(this.light.matrixWorld),$h.setFromMatrixPosition(this.light.target.matrixWorld),Yh.subVectors($h,qh),this.lightPlane.lookAt($h),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt($h),this.targetLine.scale.z=Yh.length()}}const Qh=new En,Zh=new xs;class Jh extends go{constructor(e){const t=new es,n=new io({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={};function a(e,t){o(e),o(t)}function o(e){i.push(0,0,0),r.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),t.setAttribute("position",new Xr(i,3)),t.setAttribute("color",new Xr(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new wr(16755200),c=new wr(16711680),u=new wr(43775),h=new wr(16777215),d=new wr(3355443);this.setColors(l,c,u,h,d)}setColors(e,t,n,i,r){const s=this.geometry.getAttribute("color");return s.setXYZ(0,e.r,e.g,e.b),s.setXYZ(1,e.r,e.g,e.b),s.setXYZ(2,e.r,e.g,e.b),s.setXYZ(3,e.r,e.g,e.b),s.setXYZ(4,e.r,e.g,e.b),s.setXYZ(5,e.r,e.g,e.b),s.setXYZ(6,e.r,e.g,e.b),s.setXYZ(7,e.r,e.g,e.b),s.setXYZ(8,e.r,e.g,e.b),s.setXYZ(9,e.r,e.g,e.b),s.setXYZ(10,e.r,e.g,e.b),s.setXYZ(11,e.r,e.g,e.b),s.setXYZ(12,e.r,e.g,e.b),s.setXYZ(13,e.r,e.g,e.b),s.setXYZ(14,e.r,e.g,e.b),s.setXYZ(15,e.r,e.g,e.b),s.setXYZ(16,e.r,e.g,e.b),s.setXYZ(17,e.r,e.g,e.b),s.setXYZ(18,e.r,e.g,e.b),s.setXYZ(19,e.r,e.g,e.b),s.setXYZ(20,e.r,e.g,e.b),s.setXYZ(21,e.r,e.g,e.b),s.setXYZ(22,e.r,e.g,e.b),s.setXYZ(23,e.r,e.g,e.b),s.setXYZ(24,t.r,t.g,t.b),s.setXYZ(25,t.r,t.g,t.b),s.setXYZ(26,t.r,t.g,t.b),s.setXYZ(27,t.r,t.g,t.b),s.setXYZ(28,t.r,t.g,t.b),s.setXYZ(29,t.r,t.g,t.b),s.setXYZ(30,t.r,t.g,t.b),s.setXYZ(31,t.r,t.g,t.b),s.setXYZ(32,n.r,n.g,n.b),s.setXYZ(33,n.r,n.g,n.b),s.setXYZ(34,n.r,n.g,n.b),s.setXYZ(35,n.r,n.g,n.b),s.setXYZ(36,n.r,n.g,n.b),s.setXYZ(37,n.r,n.g,n.b),s.setXYZ(38,i.r,i.g,i.b),s.setXYZ(39,i.r,i.g,i.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0,this}update(){const e=this.geometry,t=this.pointMap;let n,i;if(Zh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),!0===this.camera.reversedDepth)n=1,i=0;else if(this.camera.coordinateSystem===on)n=-1,i=1;else{if(this.camera.coordinateSystem!==ln)throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);n=0,i=1}ed("c",t,e,Zh,0,0,n),ed("t",t,e,Zh,0,0,i),ed("n1",t,e,Zh,-1,-1,n),ed("n2",t,e,Zh,1,-1,n),ed("n3",t,e,Zh,-1,1,n),ed("n4",t,e,Zh,1,1,n),ed("f1",t,e,Zh,-1,-1,i),ed("f2",t,e,Zh,1,-1,i),ed("f3",t,e,Zh,-1,1,i),ed("f4",t,e,Zh,1,1,i),ed("u1",t,e,Zh,.7,1.1,n),ed("u2",t,e,Zh,-.7,1.1,n),ed("u3",t,e,Zh,0,2,n),ed("cf1",t,e,Zh,-1,0,i),ed("cf2",t,e,Zh,1,0,i),ed("cf3",t,e,Zh,0,-1,i),ed("cf4",t,e,Zh,0,1,i),ed("cn1",t,e,Zh,-1,0,n),ed("cn2",t,e,Zh,1,0,n),ed("cn3",t,e,Zh,0,-1,n),ed("cn4",t,e,Zh,0,1,n),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ed(e,t,n,i,r,s,a){Qh.set(r,s,a).unproject(i);const o=t[e];if(void 0!==o){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++)e.setXYZ(o[t],Qh.x,Qh.y,Qh.z)}}const td=new si;class nd extends go{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new es;r.setIndex(new Or(n,1)),r.setAttribute("position",new Or(i,3)),super(r,new io({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(void 0!==this.object&&td.setFromObject(this.object),td.isEmpty())return;const e=td.min,t=td.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class id extends go{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new es;i.setIndex(new Or(n,1)),i.setAttribute("position",new Xr([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new io({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class rd extends ho{constructor(e,t=1,n=16776960){const i=n,r=new es;r.setAttribute("position",new Xr([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new io({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const s=new es;s.setAttribute("position",new Xr([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new ds(s,new Rr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const sd=new En;let ad,od;class ld extends sr{constructor(e=new En(0,0,1),t=new En(0,0,0),n=1,i=16776960,r=.2*n,s=.2*r){super(),this.type="ArrowHelper",void 0===ad&&(ad=new es,ad.setAttribute("position",new Xr([0,0,0,0,1,0],3)),od=new Oo(.5,1,5,1),od.translate(0,-.5,0)),this.position.copy(t),this.line=new ho(ad,new io({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ds(od,new Rr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{sd.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(sd,t)}}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class cd extends go{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new es;n.setAttribute("position",new Xr(t,3)),n.setAttribute("color",new Xr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new io({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const i=new wr,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ud{constructor(){this.type="ShapePath",this.color=new wr,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new dl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,s){return this.currentPath.bezierCurveTo(e,t,n,i,r,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){const n=t.length;let i=!1;for(let r=n-1,s=0;s<n;r=s++){let n=t[r],a=t[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=t[s],o=-o,a=t[r],l=-l),e.y<n.y||e.y>a.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=l*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;i=!i}}else{if(e.y!==n.y)continue;if(a.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=a.x)return!0}}return i}const n=zl.isClockWise,i=this.subPaths;if(0===i.length)return[];let r,s,a;const o=[];if(1===i.length)return s=i[0],a=new pl,a.curves=s.curves,o.push(a),o;let l=!n(i[0].getPoints());l=e?!l:l;const c=[],u=[];let h,d,p=[],m=0;u[m]=void 0,p[m]=[];for(let f=0,g=i.length;f<g;f++)s=i[f],h=s.getPoints(),r=n(h),r=e?!r:r,r?(!l&&u[m]&&m++,u[m]={s:new pl,p:h},u[m].s.curves=s.curves,l&&m++,p[m]=[]):p[m].push({h:s,p:h[0]});if(!u[0])return function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n],r=new pl;r.curves=i.curves,t.push(r)}return t}(i);if(u.length>1){let e=!1,n=0;for(let t=0,i=u.length;t<i;t++)c[t]=[];for(let i=0,r=u.length;i<r;i++){const r=p[i];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<u.length;r++)t(a.p,u[r].p)&&(i!==r&&n++,o?(o=!1,c[r].push(a)):e=!0);o&&c[i].push(a)}}n>0&&!1===e&&(p=c)}for(let f=0,g=u.length;f<g;f++){a=u[f].s,o.push(a),d=p[f];for(let e=0,t=d.length;e<t;e++)a.holes.push(d[e].h)}return o}}class hd extends dn{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){void 0!==e?(null!==this.domElement&&this.disconnect(),this.domElement=e):console.warn("THREE.Controls: connect() now requires an element.")}disconnect(){}dispose(){}update(){}}function dd(e,t,n,i){const r=function(e){switch(e){case ge:case ve:return{byteLength:1,components:1};case ye:case be:case Se:return{byteLength:2,components:1};case we:case Me:return{byteLength:2,components:4};case _e:case xe:case Te:return{byteLength:4,components:1};case Ae:case Re:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${e}.`)}(i);switch(n){case Ce:return e*t;case De:case Fe:return e*t/r.components*r.byteLength;case Ue:case Oe:return e*t*2/r.components*r.byteLength;case Ne:return e*t*3/r.components*r.byteLength;case Pe:case ke:return e*t*4/r.components*r.byteLength;case Ve:case ze:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case Ge:case He:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case je:case qe:return Math.max(e,16)*Math.max(t,8)/4;case We:case Xe:return Math.max(e,8)*Math.max(t,8)/2;case $e:case Ye:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case Ke:case Qe:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case Ze:return Math.floor((e+4)/5)*Math.floor((t+3)/4)*16;case Je:return Math.floor((e+4)/5)*Math.floor((t+4)/5)*16;case et:return Math.floor((e+5)/6)*Math.floor((t+4)/5)*16;case tt:return Math.floor((e+5)/6)*Math.floor((t+5)/6)*16;case nt:return Math.floor((e+7)/8)*Math.floor((t+4)/5)*16;case it:return Math.floor((e+7)/8)*Math.floor((t+5)/6)*16;case rt:return Math.floor((e+7)/8)*Math.floor((t+7)/8)*16;case st:return Math.floor((e+9)/10)*Math.floor((t+4)/5)*16;case at:return Math.floor((e+9)/10)*Math.floor((t+5)/6)*16;case ot:return Math.floor((e+9)/10)*Math.floor((t+7)/8)*16;case lt:return Math.floor((e+9)/10)*Math.floor((t+9)/10)*16;case ct:return Math.floor((e+11)/12)*Math.floor((t+9)/10)*16;case ut:return Math.floor((e+11)/12)*Math.floor((t+11)/12)*16;case ht:case dt:case pt:return Math.ceil(e/4)*Math.ceil(t/4)*16;case mt:case ft:return Math.ceil(e/4)*Math.ceil(t/4)*8;case gt:case vt:return Math.ceil(e/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}class pd{static contain(e,t){return function(e,t){const n=e.image&&e.image.width?e.image.width/e.image.height:1;return n>t?(e.repeat.x=1,e.repeat.y=n/t,e.offset.x=0,e.offset.y=(1-e.repeat.y)/2):(e.repeat.x=t/n,e.repeat.y=1,e.offset.x=(1-e.repeat.x)/2,e.offset.y=0),e}(e,t)}static cover(e,t){return function(e,t){const n=e.image&&e.image.width?e.image.width/e.image.height:1;return n>t?(e.repeat.x=t/n,e.repeat.y=1,e.offset.x=(1-e.repeat.x)/2,e.offset.y=0):(e.repeat.x=1,e.repeat.y=n/t,e.offset.x=0,e.offset.y=(1-e.repeat.y)/2),e}(e,t)}static fill(e){return function(e){return e.repeat.x=1,e.repeat.y=1,e.offset.x=0,e.offset.y=0,e}(e)}static getByteLength(e,t,n,i){return dd(e,t,n,i)}}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
function md(){let e=null,t=!1,n=null,i=null;function r(t,s){n(t,s),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function fd(e){const t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=t.get(n);i&&(e.deleteBuffer(i.buffer),t.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const e=t.get(n);return void((!e||e.version<n.version)&&t.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const r=t.get(n);if(void 0===r)t.set(n,function(t,n){const i=t.array,r=t.usage,s=i.byteLength,a=e.createBuffer();let o;if(e.bindBuffer(n,a),e.bufferData(n,i,r),t.onUploadCallback(),i instanceof Float32Array)o=e.FLOAT;else if("undefined"!=typeof Float16Array&&i instanceof Float16Array)o=e.HALF_FLOAT;else if(i instanceof Uint16Array)o=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=e.SHORT;else if(i instanceof Uint32Array)o=e.UNSIGNED_INT;else if(i instanceof Int32Array)o=e.INT;else if(i instanceof Int8Array)o=e.BYTE;else if(i instanceof Uint8Array)o=e.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=e.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version,size:s}}(n,i));else if(r.version<n.version){if(r.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,n,i){const r=n.array,s=n.updateRanges;if(e.bindBuffer(i,t),0===s.length)e.bufferSubData(i,0,r);else{s.sort((e,t)=>e.start-t.start);let t=0;for(let e=1;e<s.length;e++){const n=s[t],i=s[e];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):(++t,s[t]=i)}s.length=t+1;for(let n=0,a=s.length;n<a;n++){const t=s[n];e.bufferSubData(i,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}n.clearUpdateRanges()}n.onUploadCallback()}(r.buffer,n,i),r.version=n.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n);const gd={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\tfloat depth = unpackRGBAToDepth( texture2D( depths, uv ) );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\treturn step( depth, compare );\n\t\t#else\n\t\t\treturn step( compare, depth );\n\t\t#endif\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow( sampler2D shadow, vec2 uv, float compare ) {\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\tfloat hard_shadow = step( distribution.x, compare );\n\t\t#else\n\t\t\tfloat hard_shadow = step( compare, distribution.x );\n\t\t#endif\n\t\tif ( hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\tfloat fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\n\t#else\n\t\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\n\t#endif\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},vd={common:{diffuse:{value:new wr(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Cn},alphaMap:{value:null},alphaMapTransform:{value:new Cn},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Cn}},envmap:{envMap:{value:null},envMapRotation:{value:new Cn},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Cn}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Cn}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Cn},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Cn},normalScale:{value:new wn(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Cn},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Cn}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Cn}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Cn}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new wr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new wr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Cn},alphaTest:{value:0},uvTransform:{value:new Cn}},sprite:{diffuse:{value:new wr(16777215)},opacity:{value:1},center:{value:new wn(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Cn},alphaMap:{value:null},alphaMapTransform:{value:new Cn},alphaTest:{value:0}}},bd={basic:{uniforms:gs([vd.common,vd.specularmap,vd.envmap,vd.aomap,vd.lightmap,vd.fog]),vertexShader:gd.meshbasic_vert,fragmentShader:gd.meshbasic_frag},lambert:{uniforms:gs([vd.common,vd.specularmap,vd.envmap,vd.aomap,vd.lightmap,vd.emissivemap,vd.bumpmap,vd.normalmap,vd.displacementmap,vd.fog,vd.lights,{emissive:{value:new wr(0)}}]),vertexShader:gd.meshlambert_vert,fragmentShader:gd.meshlambert_frag},phong:{uniforms:gs([vd.common,vd.specularmap,vd.envmap,vd.aomap,vd.lightmap,vd.emissivemap,vd.bumpmap,vd.normalmap,vd.displacementmap,vd.fog,vd.lights,{emissive:{value:new wr(0)},specular:{value:new wr(1118481)},shininess:{value:30}}]),vertexShader:gd.meshphong_vert,fragmentShader:gd.meshphong_frag},standard:{uniforms:gs([vd.common,vd.envmap,vd.aomap,vd.lightmap,vd.emissivemap,vd.bumpmap,vd.normalmap,vd.displacementmap,vd.roughnessmap,vd.metalnessmap,vd.fog,vd.lights,{emissive:{value:new wr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gd.meshphysical_vert,fragmentShader:gd.meshphysical_frag},toon:{uniforms:gs([vd.common,vd.aomap,vd.lightmap,vd.emissivemap,vd.bumpmap,vd.normalmap,vd.displacementmap,vd.gradientmap,vd.fog,vd.lights,{emissive:{value:new wr(0)}}]),vertexShader:gd.meshtoon_vert,fragmentShader:gd.meshtoon_frag},matcap:{uniforms:gs([vd.common,vd.bumpmap,vd.normalmap,vd.displacementmap,vd.fog,{matcap:{value:null}}]),vertexShader:gd.meshmatcap_vert,fragmentShader:gd.meshmatcap_frag},points:{uniforms:gs([vd.points,vd.fog]),vertexShader:gd.points_vert,fragmentShader:gd.points_frag},dashed:{uniforms:gs([vd.common,vd.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gd.linedashed_vert,fragmentShader:gd.linedashed_frag},depth:{uniforms:gs([vd.common,vd.displacementmap]),vertexShader:gd.depth_vert,fragmentShader:gd.depth_frag},normal:{uniforms:gs([vd.common,vd.bumpmap,vd.normalmap,vd.displacementmap,{opacity:{value:1}}]),vertexShader:gd.meshnormal_vert,fragmentShader:gd.meshnormal_frag},sprite:{uniforms:gs([vd.sprite,vd.fog]),vertexShader:gd.sprite_vert,fragmentShader:gd.sprite_frag},background:{uniforms:{uvTransform:{value:new Cn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gd.background_vert,fragmentShader:gd.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Cn}},vertexShader:gd.backgroundCube_vert,fragmentShader:gd.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gd.cube_vert,fragmentShader:gd.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gd.equirect_vert,fragmentShader:gd.equirect_frag},distanceRGBA:{uniforms:gs([vd.common,vd.displacementmap,{referencePosition:{value:new En},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gd.distanceRGBA_vert,fragmentShader:gd.distanceRGBA_frag},shadow:{uniforms:gs([vd.lights,vd.fog,{color:{value:new wr(0)},opacity:{value:1}}]),vertexShader:gd.shadow_vert,fragmentShader:gd.shadow_frag}};bd.physical={uniforms:gs([bd.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Cn},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Cn},clearcoatNormalScale:{value:new wn(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Cn},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Cn},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Cn},sheen:{value:0},sheenColor:{value:new wr(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Cn},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Cn},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Cn},transmissionSamplerSize:{value:new wn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Cn},attenuationDistance:{value:0},attenuationColor:{value:new wr(0)},specularColor:{value:new wr(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Cn},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Cn},anisotropyVector:{value:new wn},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Cn}}]),vertexShader:gd.meshphysical_vert,fragmentShader:gd.meshphysical_frag};const yd={r:0,b:0,g:0},xd=new Gi,_d=new Li;function Td(e,t,n,i,r,s,a){const o=new wr(0);let l,c,u=!0===s?0:1,h=null,d=0,p=null;function m(e){let i=!0===e.isScene?e.background:null;if(i&&i.isTexture){i=(e.backgroundBlurriness>0?n:t).get(i)}return i}function f(t,n){t.getRGB(yd,vs(e)),i.buffers.color.setClear(yd.r,yd.g,yd.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),u=t,f(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(e){u=e,f(o,u)},render:function(t){let n=!1;const r=m(t);null===r?f(o,u):r&&r.isColor&&(f(r,1),n=!0);const s=e.xr.getEnvironmentBlendMode();"additive"===s?i.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===s&&i.buffers.color.setClear(0,0,0,0,a),(e.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil))},addToRenderList:function(t,n){const i=m(n);i&&(i.isCubeTexture||i.mapping===se)?(void 0===c&&(c=new ds(new ms(1,1,1),new ys({name:"BackgroundCubeMaterial",uniforms:fs(bd.backgroundCube.uniforms),vertexShader:bd.backgroundCube.vertexShader,fragmentShader:bd.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),xd.copy(n.backgroundRotation),xd.x*=-1,xd.y*=-1,xd.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(xd.y*=-1,xd.z*=-1),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(_d.makeRotationFromEuler(xd)),c.material.toneMapped=zn.getTransfer(i.colorSpace)!==kt,h===i&&d===i.version&&p===e.toneMapping||(c.material.needsUpdate=!0,h=i,d=i.version,p=e.toneMapping),c.layers.enableAll(),t.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new ds(new Yl(2,2),new ys({name:"BackgroundMaterial",uniforms:fs(bd.background.uniforms),vertexShader:bd.background.vertexShader,fragmentShader:bd.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=zn.getTransfer(i.colorSpace)!==kt,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),h===i&&d===i.version&&p===e.toneMapping||(l.material.needsUpdate=!0,h=i,d=i.version,p=e.toneMapping),l.layers.enableAll(),t.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==c&&(c.geometry.dispose(),c.material.dispose(),c=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function Sd(e,t){const n=e.getParameter(e.MAX_VERTEX_ATTRIBS),i={},r=c(null);let s=r,a=!1;function o(t){return e.bindVertexArray(t)}function l(t){return e.deleteVertexArray(t)}function c(e){const t=[],i=[],r=[];for(let s=0;s<n;s++)t[s]=0,i[s]=0,r[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function u(){const e=s.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function h(e){d(e,0)}function d(t,n){const i=s.newAttributes,r=s.enabledAttributes,a=s.attributeDivisors;i[t]=1,0===r[t]&&(e.enableVertexAttribArray(t),r[t]=1),a[t]!==n&&(e.vertexAttribDivisor(t,n),a[t]=n)}function p(){const t=s.newAttributes,n=s.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function m(t,n,i,r,s,a,o){!0===o?e.vertexAttribIPointer(t,n,i,s,a):e.vertexAttribPointer(t,n,i,r,s,a)}function f(){g(),a=!0,s!==r&&(s=r,o(s.object))}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(n,r,l,f,g){let v=!1;const b=function(t,n,r){const s=!0===r.wireframe;let a=i[t.id];void 0===a&&(a={},i[t.id]=a);let o=a[n.id];void 0===o&&(o={},a[n.id]=o);let l=o[s];void 0===l&&(l=c(e.createVertexArray()),o[s]=l);return l}(f,l,r);s!==b&&(s=b,o(s.object)),v=function(e,t,n,i){const r=s.attributes,a=t.attributes;let o=0;const l=n.getAttributes();for(const s in l){if(l[s].location>=0){const t=r[s];let n=a[s];if(void 0===n&&("instanceMatrix"===s&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(n=e.instanceColor)),void 0===t)return!0;if(t.attribute!==n)return!0;if(n&&t.data!==n.data)return!0;o++}}return s.attributesNum!==o||s.index!==i}(n,f,l,g),v&&function(e,t,n,i){const r={},a=t.attributes;let o=0;const l=n.getAttributes();for(const s in l){if(l[s].location>=0){let t=a[s];void 0===t&&("instanceMatrix"===s&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(t=e.instanceColor));const n={};n.attribute=t,t&&t.data&&(n.data=t.data),r[s]=n,o++}}s.attributes=r,s.attributesNum=o,s.index=i}(n,f,l,g),null!==g&&t.update(g,e.ELEMENT_ARRAY_BUFFER),(v||a)&&(a=!1,function(n,i,r,s){u();const a=s.attributes,o=r.getAttributes(),l=i.defaultAttributeValues;for(const c in o){const i=o[c];if(i.location>=0){let r=a[c];if(void 0===r&&("instanceMatrix"===c&&n.instanceMatrix&&(r=n.instanceMatrix),"instanceColor"===c&&n.instanceColor&&(r=n.instanceColor)),void 0!==r){const a=r.normalized,o=r.itemSize,l=t.get(r);if(void 0===l)continue;const c=l.buffer,u=l.type,p=l.bytesPerElement,f=u===e.INT||u===e.UNSIGNED_INT||r.gpuType===xe;if(r.isInterleavedBufferAttribute){const t=r.data,l=t.stride,g=r.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)d(i.location+e,t.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<i.locationSize;e++)h(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<i.locationSize;e++)m(i.location+e,o/i.locationSize,u,a,l*p,(g+o/i.locationSize*e)*p,f)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)d(i.location+e,r.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<i.locationSize;e++)h(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<i.locationSize;e++)m(i.location+e,o/i.locationSize,u,a,o*p,o/i.locationSize*e*p,f)}}else if(void 0!==l){const t=l[c];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(i.location,t);break;case 3:e.vertexAttrib3fv(i.location,t);break;case 4:e.vertexAttrib4fv(i.location,t);break;default:e.vertexAttrib1fv(i.location,t)}}}}p()}(n,r,l,f),null!==g&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(g).buffer))},reset:f,resetDefaultState:g,dispose:function(){f();for(const e in i){const t=i[e];for(const e in t){const n=t[e];for(const e in n)l(n[e].object),delete n[e];delete t[e]}delete i[e]}},releaseStatesOfGeometry:function(e){if(void 0===i[e.id])return;const t=i[e.id];for(const n in t){const e=t[n];for(const t in e)l(e[t].object),delete e[t];delete t[n]}delete i[e.id]},releaseStatesOfProgram:function(e){for(const t in i){const n=i[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)l(r[e].object),delete r[e];delete n[e.id]}},initAttributes:u,enableAttribute:h,disableUnusedAttributes:p}}function wd(e,t,n){let i;function r(t,r,s){0!==s&&(e.drawArraysInstanced(i,t,r,s),n.update(r,i,s))}this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=r,this.renderMultiDraw=function(e,r,s){if(0===s)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,e,0,r,0,s);let a=0;for(let t=0;t<s;t++)a+=r[t];n.update(a,i,1)},this.renderMultiDrawInstances=function(e,s,a,o){if(0===a)return;const l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<e.length;t++)r(e[t],s[t],o[t]);else{l.multiDrawArraysInstancedWEBGL(i,e,0,s,0,o,0,a);let t=0;for(let e=0;e<a;e++)t+=s[e]*o[e];n.update(t,i,1)}}}function Md(e,t,n,i){let r;function s(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==n.precision?n.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=!0===n.logarithmicDepthBuffer,c=!0===n.reversedDepthBuffer&&t.has("EXT_clip_control"),u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,textureFormatReadable:function(t){return t===Pe||i.convert(t)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const r=n===Se&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(n!==ge&&i.convert(n)!==e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==Te&&!r)},precision:a,logarithmicDepthBuffer:l,reversedDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:e.getParameter(e.MAX_TEXTURE_SIZE),maxCubemapSize:e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:e.getParameter(e.MAX_VERTEX_ATTRIBS),maxVertexUniforms:e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:e.getParameter(e.MAX_VARYING_VECTORS),maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function Ed(e){const t=this;let n=null,i=0,r=!1,s=!1;const a=new Na,o=new Cn,l={value:null,needsUpdate:!1};function c(e,n,i,r){const s=null!==e?e.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const t=i+4*s,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<t)&&(c=new Float32Array(t));for(let n=0,l=i;n!==s;++n,l+=4)a.copy(e[n]).applyMatrix4(r,o),a.normal.toArray(c,l),c[l+3]=a.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(e,t){n=c(e,t,0)},this.setState=function(a,o,u){const h=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,m=e.get(a);if(!r||null===h||0===h.length||s&&!p)s?c(null):function(){l.value!==n&&(l.value=n,l.needsUpdate=i>0);t.numPlanes=i,t.numIntersection=0}();else{const e=s?0:i,t=4*e;let r=m.clippingState||null;l.value=r,r=c(h,o,t,u);for(let i=0;i!==t;++i)r[i]=n[i];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Ad(e){let t=new WeakMap;function n(e,t){return t===ie?e.mapping=te:t===re&&(e.mapping=ne),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping;if(s===ie||s===re){if(t.has(r)){return n(t.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=new Rs(s.height);return a.fromEquirectangularTexture(e,r),t.set(r,a),r.addEventListener("dispose",i),n(a.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}const Rd=[.125,.215,.35,.446,.526,.582],Cd=20,Nd=new hu,Pd=new wr;let Ld=null,Id=0,Dd=0,Fd=!1;const Ud=(1+Math.sqrt(5))/2,Od=1/Ud,Bd=[new En(-Ud,Od,0),new En(Ud,Od,0),new En(-Od,0,Ud),new En(Od,0,Ud),new En(0,Ud,-Od),new En(0,Ud,Od),new En(-1,1,-1),new En(1,1,-1),new En(-1,1,1),new En(1,1,1)],kd=new En;let Vd=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:s=256,position:a=kd}=r;Ld=this._renderer.getRenderTarget(),Id=this._renderer.getActiveCubeFace(),Dd=this._renderer.getActiveMipmapLevel(),Fd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(s);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(e,n,i,o,a),t>0&&this._blur(o,0,0,t),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Wd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Hd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ld,Id,Dd),this._renderer.xr.enabled=Fd,e.scissorTest=!1,Gd(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===te||e.mapping===ne?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ld=this._renderer.getRenderTarget(),Id=this._renderer.getActiveCubeFace(),Dd=this._renderer.getActiveMipmapLevel(),Fd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:de,minFilter:de,generateMipmaps:!1,type:Se,format:Pe,colorSpace:Ot,depthBuffer:!1},i=zd(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=zd(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let r=e;const s=e-4+1+Rd.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);n.push(s);let o=1/s;a>e-4?o=Rd[a-e+4-1]:0===a&&(o=0),i.push(o);const l=1/(s-2),c=-l,u=1+l,h=[c,c,u,c,u,u,c,c,u,u,c,u],d=6,p=6,m=3,f=2,g=1,v=new Float32Array(m*p*d),b=new Float32Array(f*p*d),y=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];v.set(i,m*p*e),b.set(h,f*p*e);const r=[e,e,e,e,e,e];y.set(r,g*p*e)}const x=new es;x.setAttribute("position",new Or(v,m)),x.setAttribute("uv",new Or(b,f)),x.setAttribute("faceIndex",new Or(y,g)),t.push(x),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(Cd),r=new En(0,1,0),s=new ys({name:"SphericalGaussianBlur",defines:{n:Cd,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:jd(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return s}(i,e,t)}return i}_compileMaterial(e){const t=new ds(this._lodPlanes[0],e);this._renderer.compile(t,Nd)}_sceneToCubeUV(e,t,n,i,r){const s=new ws(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,u=l.toneMapping;l.getClearColor(Pd),l.toneMapping=0,l.autoClear=!1;l.state.buffers.depth.getReversed()&&(l.setRenderTarget(i),l.clearDepth(),l.setRenderTarget(null));const h=new Rr({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new ds(new ms,h);let p=!1;const m=e.background;m?m.isColor&&(h.color.copy(m),e.background=null,p=!0):(h.color.copy(Pd),p=!0);for(let f=0;f<6;f++){const t=f%3;0===t?(s.up.set(0,a[f],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x+o[f],r.y,r.z)):1===t?(s.up.set(0,0,a[f]),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y+o[f],r.z)):(s.up.set(0,a[f],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y,r.z+o[f]));const n=this._cubeSize;Gd(i,t*n,f>2?n:0,n,n),l.setRenderTarget(i),p&&l.render(d,s),l.render(e,s)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=u,l.autoClear=c,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===te||e.mapping===ne;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Wd()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Hd());const r=i?this._cubemapMaterial:this._equirectMaterial,s=new ds(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const a=this._cubeSize;Gd(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(s,Nd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const t=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),n=Bd[(i-r-1)%Bd.length];this._blur(e,r-1,r,t,n)}t.autoClear=n}_blur(e,t,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",r),this._halfBlur(s,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new ds(this._lodPlanes[i],l),u=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):Cd;m>Cd&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let y=0;y<Cd;++y){const e=y/p,t=Math.exp(-e*e/2);f.push(t),0===y?g+=t:y<m&&(g+=2*t)}for(let y=0;y<f.length;y++)f[y]=f[y]/g;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===s,a&&(u.poleAxis.value=a);const{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-n;const b=this._sizeLods[i];Gd(t,3*b*(i>v-4?i-v+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(c,Nd)}};function zd(e,t,n){const i=new ei(e,t,n);return i.texture.mapping=se,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Gd(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Hd(){return new ys({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:jd(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Wd(){return new ys({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:jd(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function jd(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Xd(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping,a=s===ie||s===re,o=s===te||s===ne;if(a||o){let s=t.get(r);const l=void 0!==s?s.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===n&&(n=new Vd(e)),s=a?n.fromEquirectangular(r,s):n.fromCubemap(r,s),s.texture.pmremVersion=r.pmremVersion,t.set(r,s),s.texture;if(void 0!==s)return s.texture;{const l=r.image;return a&&l&&l.height>0||o&&l&&function(e){let t=0;const n=6;for(let i=0;i<n;i++)void 0!==e[i]&&t++;return t===n}(l)?(null===n&&(n=new Vd(e)),s=a?n.fromEquirectangular(r):n.fromCubemap(r),s.texture.pmremVersion=r.pmremVersion,t.set(r,s),r.addEventListener("dispose",i),s.texture):null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function qd(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(e){const t=n(e);return null===t&&On("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function $d(e,t,n,i){const r={},s=new WeakMap;function a(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const n in o.attributes)t.remove(o.attributes[n]);o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(t.remove(l),s.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],i=e.index,r=e.attributes.position;let a=0;if(null!==i){const e=i.array;a=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],s=e[t+2];n.push(i,r,r,s,s,i)}}else{if(void 0===r)return;{const e=r.array;a=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}}const o=new(Pn(n)?Wr:Gr)(n,1);o.version=a;const l=s.get(e);l&&t.remove(l),s.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",a),r[t.id]=!0,n.memory.geometries++),t},update:function(n){const i=n.attributes;for(const r in i)t.update(i[r],e.ARRAY_BUFFER)},getWireframeAttribute:function(e){const t=s.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return s.get(e)}}}function Yd(e,t,n){let i,r,s;function a(t,a,o){0!==o&&(e.drawElementsInstanced(i,a,r,t*s,o),n.update(a,i,o))}this.setMode=function(e){i=e},this.setIndex=function(e){r=e.type,s=e.bytesPerElement},this.render=function(t,a){e.drawElements(i,a,r,t*s),n.update(a,i,1)},this.renderInstances=a,this.renderMultiDraw=function(e,s,a){if(0===a)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,s,0,r,e,0,a);let o=0;for(let t=0;t<a;t++)o+=s[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(e,o,l,c){if(0===l)return;const u=t.get("WEBGL_multi_draw");if(null===u)for(let t=0;t<e.length;t++)a(e[t]/s,o[t],c[t]);else{u.multiDrawElementsInstancedWEBGL(i,o,0,r,e,0,c,0,l);let t=0;for(let e=0;e<l;e++)t+=o[e]*c[e];n.update(t,i,1)}}}function Kd(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,i,r){switch(t.calls++,i){case e.TRIANGLES:t.triangles+=r*(n/3);break;case e.LINES:t.lines+=r*(n/2);break;case e.LINE_STRIP:t.lines+=r*(n-1);break;case e.LINE_LOOP:t.lines+=r*n;break;case e.POINTS:t.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Qd(e,t,n){const i=new WeakMap,r=new Zn;return{update:function(s,a,o){const l=s.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=void 0!==c?c.length:0;let h=i.get(a);if(void 0===h||h.count!==u){void 0!==h&&h.texture.dispose();const d=void 0!==a.morphAttributes.position,p=void 0!==a.morphAttributes.normal,m=void 0!==a.morphAttributes.color,f=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],v=a.morphAttributes.color||[];let b=0;!0===d&&(b=1),!0===p&&(b=2),!0===m&&(b=3);let y=a.attributes.position.count*b,x=1;y>t.maxTextureSize&&(x=Math.ceil(y/t.maxTextureSize),y=t.maxTextureSize);const _=new Float32Array(y*x*4*u),T=new ti(_,y,x,u);T.type=Te,T.needsUpdate=!0;const S=4*b;for(let M=0;M<u;M++){const E=f[M],A=g[M],R=v[M],C=y*x*4*M;for(let N=0;N<E.count;N++){const P=N*S;!0===d&&(r.fromBufferAttribute(E,N),_[C+P+0]=r.x,_[C+P+1]=r.y,_[C+P+2]=r.z,_[C+P+3]=0),!0===p&&(r.fromBufferAttribute(A,N),_[C+P+4]=r.x,_[C+P+5]=r.y,_[C+P+6]=r.z,_[C+P+7]=0),!0===m&&(r.fromBufferAttribute(R,N),_[C+P+8]=r.x,_[C+P+9]=r.y,_[C+P+10]=r.z,_[C+P+11]=4===R.itemSize?r.w:1)}}function w(){T.dispose(),i.delete(a),a.removeEventListener("dispose",w)}h={count:u,texture:T,size:new wn(y,x)},i.set(a,h),a.addEventListener("dispose",w)}if(!0===s.isInstancedMesh&&null!==s.morphTexture)o.getUniforms().setValue(e,"morphTexture",s.morphTexture,n);else{let L=0;for(let D=0;D<l.length;D++)L+=l[D];const I=a.morphTargetsRelative?1:1-L;o.getUniforms().setValue(e,"morphTargetBaseInfluence",I),o.getUniforms().setValue(e,"morphTargetInfluences",l)}o.getUniforms().setValue(e,"morphTargetsTexture",h.texture,n),o.getUniforms().setValue(e,"morphTargetsTextureSize",h.size)}}}function Zd(e,t,n,i){let r=new WeakMap;function s(e){const t=e.target;t.removeEventListener("dispose",s),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=t.get(a,l);if(r.get(c)!==o&&(t.update(c),r.set(c,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),r.get(a)!==o&&(n.update(a.instanceMatrix,e.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,e.ARRAY_BUFFER),r.set(a,o))),a.isSkinnedMesh){const e=a.skeleton;r.get(e)!==o&&(e.update(),r.set(e,o))}return c},dispose:function(){r=new WeakMap}}}const Jd=new Qn,ep=new Lo(1,1),tp=new ti,np=new ii,ip=new As,rp=[],sp=[],ap=new Float32Array(16),op=new Float32Array(9),lp=new Float32Array(4);function cp(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=rp[r];if(void 0===s&&(s=new Float32Array(r),rp[r]=s),0!==t){i.toArray(s,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(s,r)}return s}function up(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function hp(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function dp(e,t){let n=sp[t];void 0===n&&(n=new Int32Array(t),sp[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function pp(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function mp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(up(n,t))return;e.uniform2fv(this.addr,t),hp(n,t)}}function fp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(up(n,t))return;e.uniform3fv(this.addr,t),hp(n,t)}}function gp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(up(n,t))return;e.uniform4fv(this.addr,t),hp(n,t)}}function vp(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(up(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),hp(n,t)}else{if(up(n,i))return;lp.set(i),e.uniformMatrix2fv(this.addr,!1,lp),hp(n,i)}}function bp(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(up(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),hp(n,t)}else{if(up(n,i))return;op.set(i),e.uniformMatrix3fv(this.addr,!1,op),hp(n,i)}}function yp(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(up(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),hp(n,t)}else{if(up(n,i))return;ap.set(i),e.uniformMatrix4fv(this.addr,!1,ap),hp(n,i)}}function xp(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function _p(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(up(n,t))return;e.uniform2iv(this.addr,t),hp(n,t)}}function Tp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(up(n,t))return;e.uniform3iv(this.addr,t),hp(n,t)}}function Sp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(up(n,t))return;e.uniform4iv(this.addr,t),hp(n,t)}}function wp(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Mp(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(up(n,t))return;e.uniform2uiv(this.addr,t),hp(n,t)}}function Ep(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(up(n,t))return;e.uniform3uiv(this.addr,t),hp(n,t)}}function Ap(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(up(n,t))return;e.uniform4uiv(this.addr,t),hp(n,t)}}function Rp(e,t,n){const i=this.cache,r=n.allocateTextureUnit();let s;i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),this.type===e.SAMPLER_2D_SHADOW?(ep.compareFunction=Zt,s=ep):s=Jd,n.setTexture2D(t||s,r)}function Cp(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||np,r)}function Np(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||ip,r)}function Pp(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||tp,r)}function Lp(e,t){e.uniform1fv(this.addr,t)}function Ip(e,t){const n=cp(t,this.size,2);e.uniform2fv(this.addr,n)}function Dp(e,t){const n=cp(t,this.size,3);e.uniform3fv(this.addr,n)}function Fp(e,t){const n=cp(t,this.size,4);e.uniform4fv(this.addr,n)}function Up(e,t){const n=cp(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Op(e,t){const n=cp(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Bp(e,t){const n=cp(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function kp(e,t){e.uniform1iv(this.addr,t)}function Vp(e,t){e.uniform2iv(this.addr,t)}function zp(e,t){e.uniform3iv(this.addr,t)}function Gp(e,t){e.uniform4iv(this.addr,t)}function Hp(e,t){e.uniform1uiv(this.addr,t)}function Wp(e,t){e.uniform2uiv(this.addr,t)}function jp(e,t){e.uniform3uiv(this.addr,t)}function Xp(e,t){e.uniform4uiv(this.addr,t)}function qp(e,t,n){const i=this.cache,r=t.length,s=dp(n,r);up(i,s)||(e.uniform1iv(this.addr,s),hp(i,s));for(let a=0;a!==r;++a)n.setTexture2D(t[a]||Jd,s[a])}function $p(e,t,n){const i=this.cache,r=t.length,s=dp(n,r);up(i,s)||(e.uniform1iv(this.addr,s),hp(i,s));for(let a=0;a!==r;++a)n.setTexture3D(t[a]||np,s[a])}function Yp(e,t,n){const i=this.cache,r=t.length,s=dp(n,r);up(i,s)||(e.uniform1iv(this.addr,s),hp(i,s));for(let a=0;a!==r;++a)n.setTextureCube(t[a]||ip,s[a])}function Kp(e,t,n){const i=this.cache,r=t.length,s=dp(n,r);up(i,s)||(e.uniform1iv(this.addr,s),hp(i,s));for(let a=0;a!==r;++a)n.setTexture2DArray(t[a]||tp,s[a])}class Qp{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return pp;case 35664:return mp;case 35665:return fp;case 35666:return gp;case 35674:return vp;case 35675:return bp;case 35676:return yp;case 5124:case 35670:return xp;case 35667:case 35671:return _p;case 35668:case 35672:return Tp;case 35669:case 35673:return Sp;case 5125:return wp;case 36294:return Mp;case 36295:return Ep;case 36296:return Ap;case 35678:case 36198:case 36298:case 36306:case 35682:return Rp;case 35679:case 36299:case 36307:return Cp;case 35680:case 36300:case 36308:case 36293:return Np;case 36289:case 36303:case 36311:case 36292:return Pp}}(t.type)}}class Zp{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Lp;case 35664:return Ip;case 35665:return Dp;case 35666:return Fp;case 35674:return Up;case 35675:return Op;case 35676:return Bp;case 5124:case 35670:return kp;case 35667:case 35671:return Vp;case 35668:case 35672:return zp;case 35669:case 35673:return Gp;case 5125:return Hp;case 36294:return Wp;case 36295:return jp;case 36296:return Xp;case 35678:case 36198:case 36298:case 36306:case 35682:return qp;case 35679:case 36299:case 36307:return $p;case 35680:case 36300:case 36308:case 36293:return Yp;case 36289:case 36303:case 36311:case 36292:return Kp}}(t.type)}}class Jp{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(e,t[s.id],n)}}}const em=/(\w+)(\])?(\[|\.)?/g;function tm(e,t){e.seq.push(t),e.map[t.id]=t}function nm(e,t,n){const i=e.name,r=i.length;for(em.lastIndex=0;;){const s=em.exec(i),a=em.lastIndex;let o=s[1];const l="]"===s[2],c=s[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===r){tm(n,void 0===c?new Qp(o,e,t):new Zp(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new Jp(o),tm(n,e)),n=e}}}class im{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);nm(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const s=t[r],a=n[s.id];!1!==a.needsUpdate&&s.setValue(e,a.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function rm(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let sm=0;const am=new Cn;function om(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=(e.getShaderInfoLog(t)||"").trim();if(i&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const i=parseInt(s[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),s=Math.min(t+6,n.length);for(let a=r;a<s;a++){const e=a+1;i.push(`${e===t?">":" "} ${e}: ${n[a]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return r}function lm(e,t){const n=function(e){zn._getMatrix(am,zn.workingColorSpace,e);const t=`mat3( ${am.elements.map(e=>e.toFixed(4))} )`;switch(zn.getTransfer(e)){case Bt:return[t,"LinearTransferOETF"];case kt:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",e),[t,"LinearTransferOETF"]}}(t);return[`vec4 ${e}( vec4 value ) {`,`\treturn ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,"}"].join("\n")}function cm(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="Cineon";break;case 4:n="ACESFilmic";break;case 6:n="AgX";break;case 7:n="Neutral";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const um=new En;function hm(){zn.getLuminanceCoefficients(um);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${um.x.toFixed(4)}, ${um.y.toFixed(4)}, ${um.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function dm(e){return""!==e}function pm(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function mm(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const fm=/^[ \t]*#include +<([\w\d./]+)>/gm;function gm(e){return e.replace(fm,bm)}const vm=new Map;function bm(e,t){let n=gd[t];if(void 0===n){const e=vm.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=gd[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return gm(n)}const ym=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function xm(e){return e.replace(ym,_m)}function _m(e,t,n,i){let r="";for(let s=parseInt(t);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Tm(e){let t=`precision ${e.precision} float;\n\tprecision ${e.precision} int;\n\tprecision ${e.precision} sampler2D;\n\tprecision ${e.precision} samplerCube;\n\tprecision ${e.precision} sampler3D;\n\tprecision ${e.precision} sampler2DArray;\n\tprecision ${e.precision} sampler2DShadow;\n\tprecision ${e.precision} samplerCubeShadow;\n\tprecision ${e.precision} sampler2DArrayShadow;\n\tprecision ${e.precision} isampler2D;\n\tprecision ${e.precision} isampler3D;\n\tprecision ${e.precision} isamplerCube;\n\tprecision ${e.precision} isampler2DArray;\n\tprecision ${e.precision} usampler2D;\n\tprecision ${e.precision} usampler3D;\n\tprecision ${e.precision} usamplerCube;\n\tprecision ${e.precision} usampler2DArray;\n\t`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Sm(e,t,n,i){const r=e.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case te:case ne:t="ENVMAP_TYPE_CUBE";break;case se:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),u=function(e){let t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===ne&&(t="ENVMAP_MODE_REFRACTION");return t}(n),h=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=function(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",e.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(dm).join("\n")}(n),m=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(s),f=r.createProgram();let g,v,b=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(dm).join("\n"),g.length>0&&(g+="\n"),v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(dm).join("\n"),v.length>0&&(v+="\n")):(g=[Tm(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(dm).join("\n"),v=[Tm(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",n.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?gd.tonemapping_pars_fragment:"",0!==n.toneMapping?cm("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",gd.colorspace_pars_fragment,lm("linearToOutputTexel",n.outputColorSpace),hm(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(dm).join("\n")),a=gm(a),a=pm(a,n),a=mm(a,n),o=gm(o),o=pm(o,n),o=mm(o,n),a=xm(a),o=xm(o),!0!==n.isRawShaderMaterial&&(b="#version 300 es\n",g=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===an?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===an?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const y=b+g+a,x=b+v+o,_=rm(r,r.VERTEX_SHADER,y),T=rm(r,r.FRAGMENT_SHADER,x);function S(t){if(e.debug.checkShaderErrors){const n=r.getProgramInfoLog(f)||"",i=r.getShaderInfoLog(_)||"",s=r.getShaderInfoLog(T)||"",a=n.trim(),o=i.trim(),l=s.trim();let c=!0,u=!0;if(!1===r.getProgramParameter(f,r.LINK_STATUS))if(c=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(r,f,_,T);else{const e=om(r,_,"vertex"),n=om(r,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,r.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+a+"\n"+e+"\n"+n)}else""!==a?console.warn("THREE.WebGLProgram: Program Info Log:",a):""!==o&&""!==l||(u=!1);u&&(t.diagnostics={runnable:c,programLog:a,vertexShader:{log:o,prefix:g},fragmentShader:{log:l,prefix:v}})}r.deleteShader(_),r.deleteShader(T),w=new im(r,f),M=function(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r),s=i.name;let a=1;i.type===e.FLOAT_MAT2&&(a=2),i.type===e.FLOAT_MAT3&&(a=3),i.type===e.FLOAT_MAT4&&(a=4),n[s]={type:i.type,location:e.getAttribLocation(t,s),locationSize:a}}return n}(r,f)}let w,M;r.attachShader(f,_),r.attachShader(f,T),void 0!==n.index0AttributeName?r.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),this.getUniforms=function(){return void 0===w&&S(this),w},this.getAttributes=function(){return void 0===M&&S(this),M};let E=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===E&&(E=r.getProgramParameter(f,37297)),E},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=sm++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=_,this.fragmentShader=T,this}let wm=0;class Mm{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return!1===s.has(i)&&(s.add(i),i.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new Em(e),t.set(e,n)),n}}class Em{constructor(e){this.id=wm++,this.code=e,this.usedTimes=0}}function Am(e,t,n,i,r,s,a){const o=new Hi,l=new Mm,c=new Set,u=[],h=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(e){return c.add(e),0===e?"uv":`uv${e}`}return{getParameters:function(s,o,u,g,v){const b=g.fog,y=v.geometry,x=s.isMeshStandardMaterial?g.environment:null,_=(s.isMeshStandardMaterial?n:t).get(s.envMap||x),T=_&&_.mapping===se?_.image.height:null,S=m[s.type];null!==s.precision&&(p=r.getMaxPrecision(s.precision),p!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead."));const w=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color,M=void 0!==w?w.length:0;let E,A,R,C,N=0;if(void 0!==y.morphAttributes.position&&(N=1),void 0!==y.morphAttributes.normal&&(N=2),void 0!==y.morphAttributes.color&&(N=3),S){const e=bd[S];E=e.vertexShader,A=e.fragmentShader}else E=s.vertexShader,A=s.fragmentShader,l.update(s),R=l.getVertexShaderID(s),C=l.getFragmentShaderID(s);const P=e.getRenderTarget(),L=e.state.buffers.depth.getReversed(),I=!0===v.isInstancedMesh,D=!0===v.isBatchedMesh,F=!!s.map,U=!!s.matcap,O=!!_,B=!!s.aoMap,k=!!s.lightMap,V=!!s.bumpMap,z=!!s.normalMap,G=!!s.displacementMap,H=!!s.emissiveMap,W=!!s.metalnessMap,j=!!s.roughnessMap,X=s.anisotropy>0,q=s.clearcoat>0,$=s.dispersion>0,Y=s.iridescence>0,K=s.sheen>0,Q=s.transmission>0,Z=X&&!!s.anisotropyMap,J=q&&!!s.clearcoatMap,ee=q&&!!s.clearcoatNormalMap,te=q&&!!s.clearcoatRoughnessMap,ne=Y&&!!s.iridescenceMap,ie=Y&&!!s.iridescenceThicknessMap,re=K&&!!s.sheenColorMap,ae=K&&!!s.sheenRoughnessMap,oe=!!s.specularMap,le=!!s.specularColorMap,ce=!!s.specularIntensityMap,ue=Q&&!!s.transmissionMap,he=Q&&!!s.thicknessMap,de=!!s.gradientMap,pe=!!s.alphaMap,me=s.alphaTest>0,fe=!!s.alphaHash,ge=!!s.extensions;let ve=0;s.toneMapped&&(null!==P&&!0!==P.isXRRenderTarget||(ve=e.toneMapping));const be={shaderID:S,shaderType:s.type,shaderName:s.name,vertexShader:E,fragmentShader:A,defines:s.defines,customVertexShaderID:R,customFragmentShaderID:C,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,batching:D,batchingColor:D&&null!==v._colorsTexture,instancing:I,instancingColor:I&&null!==v.instanceColor,instancingMorph:I&&null!==v.morphTexture,supportsVertexTextures:d,outputColorSpace:null===P?e.outputColorSpace:!0===P.isXRRenderTarget?P.texture.colorSpace:Ot,alphaToCoverage:!!s.alphaToCoverage,map:F,matcap:U,envMap:O,envMapMode:O&&_.mapping,envMapCubeUVHeight:T,aoMap:B,lightMap:k,bumpMap:V,normalMap:z,displacementMap:d&&G,emissiveMap:H,normalMapObjectSpace:z&&1===s.normalMapType,normalMapTangentSpace:z&&0===s.normalMapType,metalnessMap:W,roughnessMap:j,anisotropy:X,anisotropyMap:Z,clearcoat:q,clearcoatMap:J,clearcoatNormalMap:ee,clearcoatRoughnessMap:te,dispersion:$,iridescence:Y,iridescenceMap:ne,iridescenceThicknessMap:ie,sheen:K,sheenColorMap:re,sheenRoughnessMap:ae,specularMap:oe,specularColorMap:le,specularIntensityMap:ce,transmission:Q,transmissionMap:ue,thicknessMap:he,gradientMap:de,opaque:!1===s.transparent&&1===s.blending&&!1===s.alphaToCoverage,alphaMap:pe,alphaTest:me,alphaHash:fe,combine:s.combine,mapUv:F&&f(s.map.channel),aoMapUv:B&&f(s.aoMap.channel),lightMapUv:k&&f(s.lightMap.channel),bumpMapUv:V&&f(s.bumpMap.channel),normalMapUv:z&&f(s.normalMap.channel),displacementMapUv:G&&f(s.displacementMap.channel),emissiveMapUv:H&&f(s.emissiveMap.channel),metalnessMapUv:W&&f(s.metalnessMap.channel),roughnessMapUv:j&&f(s.roughnessMap.channel),anisotropyMapUv:Z&&f(s.anisotropyMap.channel),clearcoatMapUv:J&&f(s.clearcoatMap.channel),clearcoatNormalMapUv:ee&&f(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:te&&f(s.clearcoatRoughnessMap.channel),iridescenceMapUv:ne&&f(s.iridescenceMap.channel),iridescenceThicknessMapUv:ie&&f(s.iridescenceThicknessMap.channel),sheenColorMapUv:re&&f(s.sheenColorMap.channel),sheenRoughnessMapUv:ae&&f(s.sheenRoughnessMap.channel),specularMapUv:oe&&f(s.specularMap.channel),specularColorMapUv:le&&f(s.specularColorMap.channel),specularIntensityMapUv:ce&&f(s.specularIntensityMap.channel),transmissionMapUv:ue&&f(s.transmissionMap.channel),thicknessMapUv:he&&f(s.thicknessMap.channel),alphaMapUv:pe&&f(s.alphaMap.channel),vertexTangents:!!y.attributes.tangent&&(z||X),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,pointsUvs:!0===v.isPoints&&!!y.attributes.uv&&(F||pe),fog:!!b,useFog:!0===s.fog,fogExp2:!!b&&b.isFogExp2,flatShading:!0===s.flatShading&&!1===s.wireframe,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:h,reversedDepthBuffer:L,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:M,morphTextureStride:N,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:ve,decodeVideoTexture:F&&!0===s.map.isVideoTexture&&zn.getTransfer(s.map.colorSpace)===kt,decodeVideoTextureEmissive:H&&!0===s.emissiveMap.isVideoTexture&&zn.getTransfer(s.emissiveMap.colorSpace)===kt,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionClipCullDistance:ge&&!0===s.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ge&&!0===s.extensions.multiDraw||D)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return be.vertexUv1s=c.has(1),be.vertexUv2s=c.has(2),be.vertexUv3s=c.has(3),c.clear(),be},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(!function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.supportsVertexTextures&&o.enable(0);t.instancing&&o.enable(1);t.instancingColor&&o.enable(2);t.instancingMorph&&o.enable(3);t.matcap&&o.enable(4);t.envMap&&o.enable(5);t.normalMapObjectSpace&&o.enable(6);t.normalMapTangentSpace&&o.enable(7);t.clearcoat&&o.enable(8);t.iridescence&&o.enable(9);t.alphaTest&&o.enable(10);t.vertexColors&&o.enable(11);t.vertexAlphas&&o.enable(12);t.vertexUv1s&&o.enable(13);t.vertexUv2s&&o.enable(14);t.vertexUv3s&&o.enable(15);t.vertexTangents&&o.enable(16);t.anisotropy&&o.enable(17);t.alphaHash&&o.enable(18);t.batching&&o.enable(19);t.dispersion&&o.enable(20);t.batchingColor&&o.enable(21);t.gradientMap&&o.enable(22);e.push(o.mask),o.disableAll(),t.fog&&o.enable(0);t.useFog&&o.enable(1);t.flatShading&&o.enable(2);t.logarithmicDepthBuffer&&o.enable(3);t.reversedDepthBuffer&&o.enable(4);t.skinning&&o.enable(5);t.morphTargets&&o.enable(6);t.morphNormals&&o.enable(7);t.morphColors&&o.enable(8);t.premultipliedAlpha&&o.enable(9);t.shadowMapEnabled&&o.enable(10);t.doubleSided&&o.enable(11);t.flipSided&&o.enable(12);t.useDepthPacking&&o.enable(13);t.dithering&&o.enable(14);t.transmission&&o.enable(15);t.sheen&&o.enable(16);t.opaque&&o.enable(17);t.pointsUvs&&o.enable(18);t.decodeVideoTexture&&o.enable(19);t.decodeVideoTextureEmissive&&o.enable(20);t.alphaToCoverage&&o.enable(21);e.push(o.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=bd[t];n=bs.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,r=u.length;e<r;e++){const t=u[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new Sm(e,n,t,s),u.push(i)),i},releaseProgram:function(e){if(0===--e.usedTimes){const t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function Rm(){let e=new WeakMap;return{has:function(t){return e.has(t)},get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function Cm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Nm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Pm(){const e=[];let t=0;const n=[],i=[],r=[];function s(n,i,r,s,a,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,a,o,l,c){const u=s(e,t,a,o,l,c);a.transmission>0?i.push(u):!0===a.transparent?r.push(u):n.push(u)},unshift:function(e,t,a,o,l,c){const u=s(e,t,a,o,l,c);a.transmission>0?i.unshift(u):!0===a.transparent?r.unshift(u):n.unshift(u)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||Cm),i.length>1&&i.sort(t||Nm),r.length>1&&r.sort(t||Nm)}}}function Lm(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let r;return void 0===i?(r=new Pm,e.set(t,[r])):n>=i.length?(r=new Pm,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function Im(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new En,color:new wr};break;case"SpotLight":n={position:new En,direction:new En,color:new wr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new En,color:new wr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new En,skyColor:new wr,groundColor:new wr};break;case"RectAreaLight":n={color:new wr,position:new En,halfWidth:new En,halfHeight:new En}}return e[t.id]=n,n}}}let Dm=0;function Fm(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function Um(e){const t=new Im,n=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new wn};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new wn,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let o=0;o<9;o++)i.probe.push(new En);const r=new En,s=new Li,a=new Li;return{setup:function(r){let s=0,a=0,o=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let l=0,c=0,u=0,h=0,d=0,p=0,m=0,f=0,g=0,v=0,b=0;r.sort(Fm);for(let e=0,x=r.length;e<x;e++){const y=r[e],x=y.color,_=y.intensity,T=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)s+=x.r*_,a+=x.g*_,o+=x.b*_;else if(y.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(y.sh.coefficients[e],_);b++}else if(y.isDirectionalLight){const e=t.get(y);if(e.color.copy(y.color).multiplyScalar(y.intensity),y.castShadow){const e=y.shadow,t=n.get(y);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,i.directionalShadow[l]=t,i.directionalShadowMap[l]=S,i.directionalShadowMatrix[l]=y.shadow.matrix,p++}i.directional[l]=e,l++}else if(y.isSpotLight){const e=t.get(y);e.position.setFromMatrixPosition(y.matrixWorld),e.color.copy(x).multiplyScalar(_),e.distance=T,e.coneCos=Math.cos(y.angle),e.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),e.decay=y.decay,i.spot[u]=e;const r=y.shadow;if(y.map&&(i.spotLightMap[g]=y.map,g++,r.updateMatrices(y),y.castShadow&&v++),i.spotLightMatrix[u]=r.matrix,y.castShadow){const e=n.get(y);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,i.spotShadow[u]=e,i.spotShadowMap[u]=S,f++}u++}else if(y.isRectAreaLight){const e=t.get(y);e.color.copy(x).multiplyScalar(_),e.halfWidth.set(.5*y.width,0,0),e.halfHeight.set(0,.5*y.height,0),i.rectArea[h]=e,h++}else if(y.isPointLight){const e=t.get(y);if(e.color.copy(y.color).multiplyScalar(y.intensity),e.distance=y.distance,e.decay=y.decay,y.castShadow){const e=y.shadow,t=n.get(y);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,i.pointShadow[c]=t,i.pointShadowMap[c]=S,i.pointShadowMatrix[c]=y.shadow.matrix,m++}i.point[c]=e,c++}else if(y.isHemisphereLight){const e=t.get(y);e.skyColor.copy(y.color).multiplyScalar(_),e.groundColor.copy(y.groundColor).multiplyScalar(_),i.hemi[d]=e,d++}}h>0&&(!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=vd.LTC_FLOAT_1,i.rectAreaLTC2=vd.LTC_FLOAT_2):(i.rectAreaLTC1=vd.LTC_HALF_1,i.rectAreaLTC2=vd.LTC_HALF_2)),i.ambient[0]=s,i.ambient[1]=a,i.ambient[2]=o;const y=i.hash;y.directionalLength===l&&y.pointLength===c&&y.spotLength===u&&y.rectAreaLength===h&&y.hemiLength===d&&y.numDirectionalShadows===p&&y.numPointShadows===m&&y.numSpotShadows===f&&y.numSpotMaps===g&&y.numLightProbes===b||(i.directional.length=l,i.spot.length=u,i.rectArea.length=h,i.point.length=c,i.hemi.length=d,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=f,i.spotShadowMap.length=f,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=m,i.spotLightMatrix.length=f+g-v,i.spotLightMap.length=g,i.numSpotLightShadowsWithMaps=v,i.numLightProbes=b,y.directionalLength=l,y.pointLength=c,y.spotLength=u,y.rectAreaLength=h,y.hemiLength=d,y.numDirectionalShadows=p,y.numPointShadows=m,y.numSpotShadows=f,y.numSpotMaps=g,y.numLightProbes=b,i.version=Dm++)},setupView:function(e,t){let n=0,o=0,l=0,c=0,u=0;const h=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){const t=e[d];if(t.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(h),n++}else if(t.isSpotLight){const e=i.spot[l];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(h),l++}else if(t.isRectAreaLight){const e=i.rectArea[c];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),a.identity(),s.copy(t.matrixWorld),s.premultiply(h),a.extractRotation(s),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(a),e.halfHeight.applyMatrix4(a),c++}else if(t.isPointLight){const e=i.point[o];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),o++}else if(t.isHemisphereLight){const e=i.hemi[u];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(h),u++}}},state:i}}function Om(e){const t=new Um(e),n=[],i=[];const r={lightsArray:n,shadowsArray:i,camera:null,lights:t,transmissionRenderTarget:{}};return{init:function(e){r.camera=e,n.length=0,i.length=0},state:r,setupLights:function(){t.setup(n)},setupLightsView:function(e){t.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function Bm(e){let t=new WeakMap;return{get:function(n,i=0){const r=t.get(n);let s;return void 0===r?(s=new Om(e),t.set(n,[s])):i>=r.length?(s=new Om(e),r.push(s)):s=r[i],s},dispose:function(){t=new WeakMap}}}function km(e,t,n){let i=new Da;const r=new wn,s=new wn,a=new Zn,u=new mc({depthPacking:It}),h=new fc,d={},p=n.maxTextureSize,m={[o]:1,[l]:0,[c]:2},f=new ys({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new wn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=f.clone();g.defines.HORIZONTAL_PASS=1;const v=new es;v.setAttribute("position",new Or(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new ds(v,f),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let x=this.type;function _(n,i){const s=t.update(b);f.defines.VSM_SAMPLES!==n.blurSamples&&(f.defines.VSM_SAMPLES=n.blurSamples,g.defines.VSM_SAMPLES=n.blurSamples,f.needsUpdate=!0,g.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new ei(r.x,r.y)),f.uniforms.shadow_pass.value=n.map.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,s,f,b,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,s,g,b,null)}function T(t,n,i,r){let s=null;const a=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===i.isPointLight?h:u,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0||!0===n.alphaToCoverage){const e=s.uuid,t=n.uuid;let i=d[e];void 0===i&&(i={},d[e]=i);let r=i[t];void 0===r&&(r=s.clone(),i[t]=r,n.addEventListener("dispose",w)),s=r}if(s.visible=n.visible,s.wireframe=n.wireframe,s.side=3===r?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:m[n.side],s.alphaMap=n.alphaMap,s.alphaTest=!0===n.alphaToCoverage?.5:n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===i.isPointLight&&!0===s.isMeshDistanceMaterial){e.properties.get(s).light=i}return s}function S(n,r,s,a,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=t.update(n),l=n.material;if(Array.isArray(l)){const t=i.groups;for(let c=0,u=t.length;c<u;c++){const u=t[c],h=l[u.materialIndex];if(h&&h.visible){const t=T(n,h,a,o);n.onBeforeShadow(e,n,r,s,i,t,u),e.renderBufferDirect(s,null,i,t,n,u),n.onAfterShadow(e,n,r,s,i,t,u)}}}else if(l.visible){const t=T(n,l,a,o);n.onBeforeShadow(e,n,r,s,i,t,null),e.renderBufferDirect(s,null,i,t,n,null),n.onAfterShadow(e,n,r,s,i,t,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)S(l[e],r,s,a,o)}function w(e){e.target.removeEventListener("dispose",w);for(const t in d){const n=d[t],i=e.target.uuid;if(i in n){n[i].dispose(),delete n[i]}}}this.render=function(t,n,o){if(!1===y.enabled)return;if(!1===y.autoUpdate&&!1===y.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),h=e.state;h.setBlending(0),!0===h.buffers.depth.getReversed()?h.buffers.color.setClear(0,0,0,0):h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);const d=3!==x&&3===this.type,m=3===x&&3!==this.type;for(let f=0,g=t.length;f<g;f++){const l=t[f],c=l.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;r.copy(c.mapSize);const u=c.getFrameExtents();if(r.multiply(u),s.copy(c.mapSize),(r.x>p||r.y>p)&&(r.x>p&&(s.x=Math.floor(p/u.x),r.x=s.x*u.x,c.mapSize.x=s.x),r.y>p&&(s.y=Math.floor(p/u.y),r.y=s.y*u.y,c.mapSize.y=s.y)),null===c.map||!0===d||!0===m){const e=3!==this.type?{minFilter:ce,magFilter:ce}:{};null!==c.map&&c.map.dispose(),c.map=new ei(r.x,r.y,e),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}e.setRenderTarget(c.map),e.clear();const g=c.getViewportCount();for(let e=0;e<g;e++){const t=c.getViewport(e);a.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),h.viewport(a),c.updateMatrices(l,e),i=c.getFrustum(),S(n,o,c.camera,l,this.type)}!0!==c.isPointLightShadow&&3===this.type&&_(c,o),c.needsUpdate=!1}x=this.type,y.needsUpdate=!1,e.setRenderTarget(l,c,u)}}const Vm={[U]:1,[B]:6,[V]:7,[k]:5,[O]:0,[G]:2,[H]:4,[z]:3};function zm(e,t){const n=new function(){let t=!1;const n=new Zn;let i=null;const r=new Zn(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,s,a,o){!0===o&&(t*=a,i*=a,s*=a),n.set(t,i,s,a),!1===r.equals(n)&&(e.clearColor(t,i,s,a),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},i=new function(){let n=!1,i=!1,r=null,s=null,a=null;return{setReversed:function(e){if(i!==e){const n=t.get("EXT_clip_control");e?n.clipControlEXT(n.LOWER_LEFT_EXT,n.ZERO_TO_ONE_EXT):n.clipControlEXT(n.LOWER_LEFT_EXT,n.NEGATIVE_ONE_TO_ONE_EXT),i=e;const r=a;a=null,this.setClear(r)}},getReversed:function(){return i},setTest:function(t){t?re(e.DEPTH_TEST):se(e.DEPTH_TEST)},setMask:function(t){r===t||n||(e.depthMask(t),r=t)},setFunc:function(t){if(i&&(t=Vm[t]),s!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}s=t}},setLocked:function(e){n=e},setClear:function(t){a!==t&&(i&&(t=1-t),e.clearDepth(t),a=t)},reset:function(){n=!1,r=null,s=null,a=null,i=!1}}},r=new function(){let t=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(n){t||(n?re(e.STENCIL_TEST):se(e.STENCIL_TEST))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,a){i===t&&r===n&&s===a||(e.stencilFunc(t,n,a),i=t,r=n,s=a)},setOp:function(t,n,i){a===t&&o===n&&l===i||(e.stencilOp(t,n,i),a=t,o=n,l=i)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null}}},s=new WeakMap,a=new WeakMap;let o={},l={},c=new WeakMap,u=[],h=null,d=!1,p=null,m=null,f=null,y=null,x=null,U=null,O=null,B=new wr(0,0,0),k=0,V=!1,z=null,G=null,H=null,W=null,j=null;const X=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,$=0;const Y=e.getParameter(e.VERSION);-1!==Y.indexOf("WebGL")?($=parseFloat(/^WebGL (\d)/.exec(Y)[1]),q=$>=1):-1!==Y.indexOf("OpenGL ES")&&($=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),q=$>=2);let K=null,Q={};const Z=e.getParameter(e.SCISSOR_BOX),J=e.getParameter(e.VIEWPORT),ee=(new Zn).fromArray(Z),te=(new Zn).fromArray(J);function ne(t,n,i,r){const s=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<i;o++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(n,0,e.RGBA,1,1,r,0,e.RGBA,e.UNSIGNED_BYTE,s):e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,s);return a}const ie={};function re(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function se(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}ie[e.TEXTURE_2D]=ne(e.TEXTURE_2D,e.TEXTURE_2D,1),ie[e.TEXTURE_CUBE_MAP]=ne(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),ie[e.TEXTURE_2D_ARRAY]=ne(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),ie[e.TEXTURE_3D]=ne(e.TEXTURE_3D,e.TEXTURE_3D,1,1),n.setClear(0,0,0,1),i.setClear(1),r.setClear(0),re(e.DEPTH_TEST),i.setFunc(3),ce(!1),ue(1),re(e.CULL_FACE),le(0);const ae={[g]:e.FUNC_ADD,[v]:e.FUNC_SUBTRACT,[b]:e.FUNC_REVERSE_SUBTRACT};ae[103]=e.MIN,ae[104]=e.MAX;const oe={[_]:e.ZERO,[T]:e.ONE,[S]:e.SRC_COLOR,[M]:e.SRC_ALPHA,[P]:e.SRC_ALPHA_SATURATE,[C]:e.DST_COLOR,[A]:e.DST_ALPHA,[w]:e.ONE_MINUS_SRC_COLOR,[E]:e.ONE_MINUS_SRC_ALPHA,[N]:e.ONE_MINUS_DST_COLOR,[R]:e.ONE_MINUS_DST_ALPHA,[L]:e.CONSTANT_COLOR,[I]:e.ONE_MINUS_CONSTANT_COLOR,[D]:e.CONSTANT_ALPHA,[F]:e.ONE_MINUS_CONSTANT_ALPHA};function le(t,n,i,r,s,a,o,l,c,u){if(0!==t){if(!1===d&&(re(e.BLEND),d=!0),5===t)s=s||n,a=a||i,o=o||r,n===m&&s===x||(e.blendEquationSeparate(ae[n],ae[s]),m=n,x=s),i===f&&r===y&&a===U&&o===O||(e.blendFuncSeparate(oe[i],oe[r],oe[a],oe[o]),f=i,y=r,U=a,O=o),!1!==l.equals(B)&&c===k||(e.blendColor(l.r,l.g,l.b,c),B.copy(l),k=c),p=t,V=!1;else if(t!==p||u!==V){if(m===g&&x===g||(e.blendEquation(e.FUNC_ADD),m=g,x=g),u)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.DST_COLOR,e.ONE_MINUS_SRC_ALPHA,e.ZERO,e.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case 3:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case 4:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,y=null,U=null,O=null,B.set(0,0,0),k=0,p=t,V=u}}else!0===d&&(se(e.BLEND),d=!1)}function ce(t){z!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),z=t)}function ue(t){0!==t?(re(e.CULL_FACE),t!==G&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):se(e.CULL_FACE),G=t}function he(t,n,i){t?(re(e.POLYGON_OFFSET_FILL),W===n&&j===i||(e.polygonOffset(n,i),W=n,j=i)):se(e.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:i,stencil:r},enable:re,disable:se,bindFramebuffer:function(t,n){return l[t]!==n&&(e.bindFramebuffer(t,n),l[t]=n,t===e.DRAW_FRAMEBUFFER&&(l[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(l[e.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(t,n){let i=u,r=!1;if(t){i=c.get(n),void 0===i&&(i=[],c.set(n,i));const s=t.textures;if(i.length!==s.length||i[0]!==e.COLOR_ATTACHMENT0){for(let t=0,n=s.length;t<n;t++)i[t]=e.COLOR_ATTACHMENT0+t;i.length=s.length,r=!0}}else i[0]!==e.BACK&&(i[0]=e.BACK,r=!0);r&&e.drawBuffers(i)},useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:le,setMaterial:function(t,s){2===t.side?se(e.CULL_FACE):re(e.CULL_FACE);let a=1===t.side;s&&(a=!a),ce(a),1===t.blending&&!1===t.transparent?le(0):le(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),i.setFunc(t.depthFunc),i.setTest(t.depthTest),i.setMask(t.depthWrite),n.setMask(t.colorWrite);const o=t.stencilWrite;r.setTest(o),o&&(r.setMask(t.stencilWriteMask),r.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),r.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),he(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?re(e.SAMPLE_ALPHA_TO_COVERAGE):se(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:ce,setCullFace:ue,setLineWidth:function(t){t!==H&&(q&&e.lineWidth(t),H=t)},setPolygonOffset:he,setScissorTest:function(t){t?re(e.SCISSOR_TEST):se(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+X-1),K!==t&&(e.activeTexture(t),K=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===K?e.TEXTURE0+X-1:K);let r=Q[i];void 0===r&&(r={type:void 0,texture:void 0},Q[i]=r),r.type===t&&r.texture===n||(K!==i&&(e.activeTexture(i),K=i),e.bindTexture(t,n||ie[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=Q[K];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{e.compressedTexImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(t,n){let i=a.get(n);void 0===i&&(i=new WeakMap,a.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){const i=a.get(n).get(t);s.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),s.set(n,i))},texStorage2D:function(){try{e.texStorage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{e.texStorage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{e.texSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D(...arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===ee.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ee.copy(t))},viewport:function(t){!1===te.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),te.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),i.setReversed(!1),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},K=null,Q={},l={},c=new WeakMap,u=[],h=null,d=!1,p=null,m=null,f=null,y=null,x=null,U=null,O=null,B=new wr(0,0,0),k=0,V=!1,z=null,G=null,H=null,W=null,j=null,ee.set(0,0,e.canvas.width,e.canvas.height),te.set(0,0,e.canvas.width,e.canvas.height),n.reset(),i.reset(),r.reset()}}}function Gm(e,t,n,i,r,s,a){const o=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new wn,u=new WeakMap;let h;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(cg){}function m(e,t){return p?new OffscreenCanvas(e,t):Dn("canvas")}function f(e,t,n){let i=1;const r=H(e);if((r.width>n||r.height>n)&&(i=n/Math.max(r.width,r.height)),i<1){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){const n=Math.floor(i*r.width),s=Math.floor(i*r.height);void 0===h&&(h=m(n,s));const a=t?m(n,s):h;a.width=n,a.height=s;return a.getContext("2d").drawImage(e,0,0,n,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+n+"x"+s+")."),a}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+")."),e}return e}function g(e){return e.generateMipmaps}function v(t){e.generateMipmap(t)}function b(t){return t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:t.isWebGL3DRenderTarget?e.TEXTURE_3D:t.isWebGLArrayRenderTarget||t.isCompressedArrayTexture?e.TEXTURE_2D_ARRAY:e.TEXTURE_2D}function y(n,i,r,s,a=!1){if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===e.RED&&(r===e.FLOAT&&(o=e.R32F),r===e.HALF_FLOAT&&(o=e.R16F),r===e.UNSIGNED_BYTE&&(o=e.R8)),i===e.RED_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.R8UI),r===e.UNSIGNED_SHORT&&(o=e.R16UI),r===e.UNSIGNED_INT&&(o=e.R32UI),r===e.BYTE&&(o=e.R8I),r===e.SHORT&&(o=e.R16I),r===e.INT&&(o=e.R32I)),i===e.RG&&(r===e.FLOAT&&(o=e.RG32F),r===e.HALF_FLOAT&&(o=e.RG16F),r===e.UNSIGNED_BYTE&&(o=e.RG8)),i===e.RG_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RG8UI),r===e.UNSIGNED_SHORT&&(o=e.RG16UI),r===e.UNSIGNED_INT&&(o=e.RG32UI),r===e.BYTE&&(o=e.RG8I),r===e.SHORT&&(o=e.RG16I),r===e.INT&&(o=e.RG32I)),i===e.RGB_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGB8UI),r===e.UNSIGNED_SHORT&&(o=e.RGB16UI),r===e.UNSIGNED_INT&&(o=e.RGB32UI),r===e.BYTE&&(o=e.RGB8I),r===e.SHORT&&(o=e.RGB16I),r===e.INT&&(o=e.RGB32I)),i===e.RGBA_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGBA8UI),r===e.UNSIGNED_SHORT&&(o=e.RGBA16UI),r===e.UNSIGNED_INT&&(o=e.RGBA32UI),r===e.BYTE&&(o=e.RGBA8I),r===e.SHORT&&(o=e.RGBA16I),r===e.INT&&(o=e.RGBA32I)),i===e.RGB&&(r===e.UNSIGNED_INT_5_9_9_9_REV&&(o=e.RGB9_E5),r===e.UNSIGNED_INT_10F_11F_11F_REV&&(o=e.R11F_G11F_B10F)),i===e.RGBA){const t=a?Bt:zn.getTransfer(s);r===e.FLOAT&&(o=e.RGBA32F),r===e.HALF_FLOAT&&(o=e.RGBA16F),r===e.UNSIGNED_BYTE&&(o=t===kt?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return o!==e.R16F&&o!==e.R32F&&o!==e.RG16F&&o!==e.RG32F&&o!==e.RGBA16F&&o!==e.RGBA32F||t.get("EXT_color_buffer_float"),o}function x(t,n){let i;return t?null===n||n===_e||n===Ee?i=e.DEPTH24_STENCIL8:n===Te?i=e.DEPTH32F_STENCIL8:n===ye&&(i=e.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===_e||n===Ee?i=e.DEPTH_COMPONENT24:n===Te?i=e.DEPTH_COMPONENT32F:n===ye&&(i=e.DEPTH_COMPONENT16),i}function _(e,t){return!0===g(e)||e.isFramebufferTexture&&e.minFilter!==ce&&e.minFilter!==de?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){const t=e.target;t.removeEventListener("dispose",T),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,r=d.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&w(e),0===Object.keys(r).length&&d.delete(n)}i.remove(e)}(t),t.isVideoTexture&&u.delete(t)}function S(t){const n=t.target;n.removeEventListener("dispose",S),function(t){const n=i.get(t);t.depthTexture&&(t.depthTexture.dispose(),i.remove(t.depthTexture));if(t.isWebGLCubeRenderTarget)for(let i=0;i<6;i++){if(Array.isArray(n.__webglFramebuffer[i]))for(let t=0;t<n.__webglFramebuffer[i].length;t++)e.deleteFramebuffer(n.__webglFramebuffer[i][t]);else e.deleteFramebuffer(n.__webglFramebuffer[i]);n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[i])}else{if(Array.isArray(n.__webglFramebuffer))for(let t=0;t<n.__webglFramebuffer.length;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let t=0;t<n.__webglColorRenderbuffer.length;t++)n.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(n.__webglColorRenderbuffer[t]);n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const r=t.textures;for(let s=0,o=r.length;s<o;s++){const t=i.get(r[s]);t.__webglTexture&&(e.deleteTexture(t.__webglTexture),a.memory.textures--),i.remove(r[s])}i.remove(t)}(n)}function w(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;delete d.get(r)[n.__cacheKey],a.memory.textures--}let M=0;function E(t,r){const s=i.get(t);if(t.isVideoTexture&&function(e){const t=a.render.frame;u.get(e)!==t&&(u.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&!0!==t.isExternalTexture&&t.version>0&&s.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void I(s,t,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}else t.isExternalTexture&&(s.__webglTexture=t.sourceTexture?t.sourceTexture:null);n.bindTexture(e.TEXTURE_2D,s.__webglTexture,e.TEXTURE0+r)}const A={[ae]:e.REPEAT,[oe]:e.CLAMP_TO_EDGE,[le]:e.MIRRORED_REPEAT},R={[ce]:e.NEAREST,[ue]:e.NEAREST_MIPMAP_NEAREST,[he]:e.NEAREST_MIPMAP_LINEAR,[de]:e.LINEAR,[pe]:e.LINEAR_MIPMAP_NEAREST,[me]:e.LINEAR_MIPMAP_LINEAR},C={[Yt]:e.NEVER,[nn]:e.ALWAYS,[Kt]:e.LESS,[Zt]:e.LEQUAL,[Qt]:e.EQUAL,[tn]:e.GEQUAL,[Jt]:e.GREATER,[en]:e.NOTEQUAL};function N(n,s){if(s.type!==Te||!1!==t.has("OES_texture_float_linear")||s.magFilter!==de&&s.magFilter!==pe&&s.magFilter!==he&&s.magFilter!==me&&s.minFilter!==de&&s.minFilter!==pe&&s.minFilter!==he&&s.minFilter!==me||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(n,e.TEXTURE_WRAP_S,A[s.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,A[s.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,A[s.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,R[s.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,R[s.minFilter]),s.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,C[s.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){if(s.magFilter===ce)return;if(s.minFilter!==he&&s.minFilter!==me)return;if(s.type===Te&&!1===t.has("OES_texture_float_linear"))return;if(s.anisotropy>1||i.get(s).__currentAnisotropy){const a=t.get("EXT_texture_filter_anisotropic");e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),i.get(s).__currentAnisotropy=s.anisotropy}}}function P(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",T));const r=n.source;let s=d.get(r);void 0===s&&(s={},d.set(r,s));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(o!==t.__cacheKey){void 0===s[o]&&(s[o]={texture:e.createTexture(),usedTimes:0},a.memory.textures++,i=!0),s[o].usedTimes++;const r=s[t.__cacheKey];void 0!==r&&(s[t.__cacheKey].usedTimes--,0===r.usedTimes&&w(n)),t.__cacheKey=o,t.__webglTexture=s[o].texture}return i}function L(e,t,n){return Math.floor(Math.floor(e/n)/t)}function I(t,a,o){let l=e.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=e.TEXTURE_3D);const c=P(t,a),u=a.source;n.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);const h=i.get(u);if(u.version!==h.__version||!0===c){n.activeTexture(e.TEXTURE0+o);const t=zn.getPrimaries(zn.workingColorSpace),i=a.colorSpace===Ft?null:zn.getPrimaries(a.colorSpace),d=a.colorSpace===Ft||t===i?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,a.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,a.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=f(a.image,!1,r.maxTextureSize);p=G(a,p);const m=s.convert(a.format,a.colorSpace),b=s.convert(a.type);let T,S=y(a.internalFormat,m,b,a.colorSpace,a.isVideoTexture);N(l,a);const w=a.mipmaps,M=!0!==a.isVideoTexture,E=void 0===h.__version||!0===c,A=u.dataReady,R=_(a,p);if(a.isDepthTexture)S=x(a.format===Ie,a.type),E&&(M?n.texStorage2D(e.TEXTURE_2D,1,S,p.width,p.height):n.texImage2D(e.TEXTURE_2D,0,S,p.width,p.height,0,m,b,null));else if(a.isDataTexture)if(w.length>0){M&&E&&n.texStorage2D(e.TEXTURE_2D,R,S,w[0].width,w[0].height);for(let t=0,i=w.length;t<i;t++)T=w[t],M?A&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,b,T.data):n.texImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,m,b,T.data);a.generateMipmaps=!1}else M?(E&&n.texStorage2D(e.TEXTURE_2D,R,S,p.width,p.height),A&&function(t,i,r,s){const a=t.updateRanges;if(0===a.length)n.texSubImage2D(e.TEXTURE_2D,0,0,0,i.width,i.height,r,s,i.data);else{a.sort((e,t)=>e.start-t.start);let o=0;for(let e=1;e<a.length;e++){const t=a[o],n=a[e],r=t.start+t.count,s=L(n.start,i.width,4),l=L(t.start,i.width,4);n.start<=r+1&&s===l&&L(n.start+n.count-1,i.width,4)===s?t.count=Math.max(t.count,n.start+n.count-t.start):(++o,a[o]=n)}a.length=o+1;const l=e.getParameter(e.UNPACK_ROW_LENGTH),c=e.getParameter(e.UNPACK_SKIP_PIXELS),u=e.getParameter(e.UNPACK_SKIP_ROWS);e.pixelStorei(e.UNPACK_ROW_LENGTH,i.width);for(let t=0,h=a.length;t<h;t++){const o=a[t],l=Math.floor(o.start/4),c=Math.ceil(o.count/4),u=l%i.width,h=Math.floor(l/i.width),d=c,p=1;e.pixelStorei(e.UNPACK_SKIP_PIXELS,u),e.pixelStorei(e.UNPACK_SKIP_ROWS,h),n.texSubImage2D(e.TEXTURE_2D,0,u,h,d,p,r,s,i.data)}t.clearUpdateRanges(),e.pixelStorei(e.UNPACK_ROW_LENGTH,l),e.pixelStorei(e.UNPACK_SKIP_PIXELS,c),e.pixelStorei(e.UNPACK_SKIP_ROWS,u)}}(a,p,m,b)):n.texImage2D(e.TEXTURE_2D,0,S,p.width,p.height,0,m,b,p.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){M&&E&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,S,w[0].width,w[0].height,p.depth);for(let t=0,i=w.length;t<i;t++)if(T=w[t],a.format!==Pe)if(null!==m)if(M){if(A)if(a.layerUpdates.size>0){const i=dd(T.width,T.height,a.format,a.type);for(const r of a.layerUpdates){const s=T.data.subarray(r*i/T.data.BYTES_PER_ELEMENT,(r+1)*i/T.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,r,T.width,T.height,1,m,s)}a.clearLayerUpdates()}else n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,p.depth,m,T.data)}else n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,S,T.width,T.height,p.depth,0,T.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else M?A&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,p.depth,m,b,T.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,S,T.width,T.height,p.depth,0,m,b,T.data)}else{M&&E&&n.texStorage2D(e.TEXTURE_2D,R,S,w[0].width,w[0].height);for(let t=0,i=w.length;t<i;t++)T=w[t],a.format!==Pe?null!==m?M?A&&n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,T.data):n.compressedTexImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,T.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):M?A&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,b,T.data):n.texImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,m,b,T.data)}else if(a.isDataArrayTexture)if(M){if(E&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,S,p.width,p.height,p.depth),A)if(a.layerUpdates.size>0){const t=dd(p.width,p.height,a.format,a.type);for(const i of a.layerUpdates){const r=p.data.subarray(i*t/p.data.BYTES_PER_ELEMENT,(i+1)*t/p.data.BYTES_PER_ELEMENT);n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,i,p.width,p.height,1,m,b,r)}a.clearLayerUpdates()}else n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,m,b,p.data)}else n.texImage3D(e.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,m,b,p.data);else if(a.isData3DTexture)M?(E&&n.texStorage3D(e.TEXTURE_3D,R,S,p.width,p.height,p.depth),A&&n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,m,b,p.data)):n.texImage3D(e.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,m,b,p.data);else if(a.isFramebufferTexture){if(E)if(M)n.texStorage2D(e.TEXTURE_2D,R,S,p.width,p.height);else{let t=p.width,i=p.height;for(let r=0;r<R;r++)n.texImage2D(e.TEXTURE_2D,r,S,t,i,0,m,b,null),t>>=1,i>>=1}}else if(w.length>0){if(M&&E){const t=H(w[0]);n.texStorage2D(e.TEXTURE_2D,R,S,t.width,t.height)}for(let t=0,i=w.length;t<i;t++)T=w[t],M?A&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,m,b,T):n.texImage2D(e.TEXTURE_2D,t,S,m,b,T);a.generateMipmaps=!1}else if(M){if(E){const t=H(p);n.texStorage2D(e.TEXTURE_2D,R,S,t.width,t.height)}A&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,m,b,p)}else n.texImage2D(e.TEXTURE_2D,0,S,m,b,p);g(a)&&v(l),h.__version=u.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}function D(t,r,a,l,c,u){const h=s.convert(a.format,a.colorSpace),d=s.convert(a.type),p=y(a.internalFormat,h,d,a.colorSpace),m=i.get(r),f=i.get(a);if(f.__renderTarget=r,!m.__hasExternalTextures){const t=Math.max(1,r.width>>u),i=Math.max(1,r.height>>u);c===e.TEXTURE_3D||c===e.TEXTURE_2D_ARRAY?n.texImage3D(c,u,p,t,i,r.depth,0,h,d,null):n.texImage2D(c,u,p,t,i,0,h,d,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,l,c,f.__webglTexture,0,V(r)):(c===e.TEXTURE_2D||c>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,l,c,f.__webglTexture,u),n.bindFramebuffer(e.FRAMEBUFFER,null)}function F(t,n,i){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer){const r=n.depthTexture,s=r&&r.isDepthTexture?r.type:null,a=x(n.stencilBuffer,s),l=n.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,c=V(n);z(n)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,c,a,n.width,n.height):i?e.renderbufferStorageMultisample(e.RENDERBUFFER,c,a,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,a,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,l,e.RENDERBUFFER,t)}else{const t=n.textures;for(let r=0;r<t.length;r++){const a=t[r],l=s.convert(a.format,a.colorSpace),c=s.convert(a.type),u=y(a.internalFormat,l,c,a.colorSpace),h=V(n);i&&!1===z(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,h,u,n.width,n.height):z(n)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,h,u,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,u,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function U(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const s=i.get(r.depthTexture);s.__renderTarget=r,s.__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),E(r.depthTexture,0);const a=s.__webglTexture,l=V(r);if(r.depthTexture.format===Le)z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==Ie)throw new Error("Unknown depthTexture format");z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}function O(t){const r=i.get(t),s=!0===t.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==t.depthTexture){const e=t.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),e){const t=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,e.removeEventListener("dispose",t)};e.addEventListener("dispose",t),r.__depthDisposeCallback=t}r.__boundDepthTexture=e}if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");const e=t.texture.mipmaps;e&&e.length>0?U(r.__webglFramebuffer[0],t):U(r.__webglFramebuffer,t)}else if(s){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]),void 0===r.__webglDepthbuffer[i])r.__webglDepthbuffer[i]=e.createRenderbuffer(),F(r.__webglDepthbuffer[i],t,!1);else{const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,s=r.__webglDepthbuffer[i];e.bindRenderbuffer(e.RENDERBUFFER,s),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,s)}}else{const i=t.texture.mipmaps;if(i&&i.length>0?n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[0]):n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=e.createRenderbuffer(),F(r.__webglDepthbuffer,t,!1);else{const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,i=r.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,i),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,i)}}n.bindFramebuffer(e.FRAMEBUFFER,null)}const B=[],k=[];function V(e){return Math.min(r.maxSamples,e.samples)}function z(e){const n=i.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function G(e,t){const n=e.colorSpace,i=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||n!==Ot&&n!==Ft&&(zn.getTransfer(n)===kt?i===Pe&&r===ge||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),t}function H(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(c.width=e.naturalWidth||e.width,c.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(c.width=e.displayWidth,c.height=e.displayHeight):(c.width=e.width,c.height=e.height),c}this.allocateTextureUnit=function(){const e=M;return e>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+r.maxTextures),M+=1,e},this.resetTextureUnits=function(){M=0},this.setTexture2D=E,this.setTexture2DArray=function(t,r){const s=i.get(t);!1===t.isRenderTargetTexture&&t.version>0&&s.__version!==t.version?I(s,t,r):n.bindTexture(e.TEXTURE_2D_ARRAY,s.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){const s=i.get(t);!1===t.isRenderTargetTexture&&t.version>0&&s.__version!==t.version?I(s,t,r):n.bindTexture(e.TEXTURE_3D,s.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,a){const o=i.get(t);t.version>0&&o.__version!==t.version?function(t,a,o){if(6!==a.image.length)return;const l=P(t,a),c=a.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);const u=i.get(c);if(c.version!==u.__version||!0===l){n.activeTexture(e.TEXTURE0+o);const t=zn.getPrimaries(zn.workingColorSpace),i=a.colorSpace===Ft?null:zn.getPrimaries(a.colorSpace),h=a.colorSpace===Ft||t===i?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,a.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,a.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);const d=a.isCompressedTexture||a.image[0].isCompressedTexture,p=a.image[0]&&a.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)m[e]=d||p?p?a.image[e].image:a.image[e]:f(a.image[e],!0,r.maxCubemapSize),m[e]=G(a,m[e]);const b=m[0],x=s.convert(a.format,a.colorSpace),T=s.convert(a.type),S=y(a.internalFormat,x,T,a.colorSpace),w=!0!==a.isVideoTexture,M=void 0===u.__version||!0===l,E=c.dataReady;let A,R=_(a,b);if(N(e.TEXTURE_CUBE_MAP,a),d){w&&M&&n.texStorage2D(e.TEXTURE_CUBE_MAP,R,S,b.width,b.height);for(let t=0;t<6;t++){A=m[t].mipmaps;for(let i=0;i<A.length;i++){const r=A[i];a.format!==Pe?null!==x?w?E&&n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,r.width,r.height,x,r.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,S,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,r.width,r.height,x,T,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,S,r.width,r.height,0,x,T,r.data)}}}else{if(A=a.mipmaps,w&&M){A.length>0&&R++;const t=H(m[0]);n.texStorage2D(e.TEXTURE_CUBE_MAP,R,S,t.width,t.height)}for(let t=0;t<6;t++)if(p){w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m[t].width,m[t].height,x,T,m[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,S,m[t].width,m[t].height,0,x,T,m[t].data);for(let i=0;i<A.length;i++){const r=A[i].image[t].image;w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,r.width,r.height,x,T,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,S,r.width,r.height,0,x,T,r.data)}}else{w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,x,T,m[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,S,x,T,m[t]);for(let i=0;i<A.length;i++){const r=A[i];w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,x,T,r.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,S,x,T,r.image[t])}}}g(a)&&v(e.TEXTURE_CUBE_MAP),u.__version=c.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}(o,t,a):n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+a)},this.rebindTextures=function(t,n,r){const s=i.get(t);void 0!==n&&D(s.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==r&&O(t)},this.setupRenderTarget=function(t){const r=t.texture,o=i.get(t),l=i.get(r);t.addEventListener("dispose",S);const c=t.textures,u=!0===t.isWebGLCubeRenderTarget,h=c.length>1;if(h||(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=r.version,a.memory.textures++),u){o.__webglFramebuffer=[];for(let t=0;t<6;t++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[t]=[];for(let n=0;n<r.mipmaps.length;n++)o.__webglFramebuffer[t][n]=e.createFramebuffer()}else o.__webglFramebuffer[t]=e.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let t=0;t<r.mipmaps.length;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else o.__webglFramebuffer=e.createFramebuffer();if(h)for(let t=0,n=c.length;t<n;t++){const n=i.get(c[t]);void 0===n.__webglTexture&&(n.__webglTexture=e.createTexture(),a.memory.textures++)}if(t.samples>0&&!1===z(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<c.length;n++){const i=c[n];o.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const r=s.convert(i.format,i.colorSpace),a=s.convert(i.type),l=y(i.internalFormat,r,a,i.colorSpace,!0===t.isXRRenderTarget),u=V(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,o.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),F(o.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(u){n.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture),N(e.TEXTURE_CUBE_MAP,r);for(let n=0;n<6;n++)if(r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)D(o.__webglFramebuffer[n][i],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else D(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(r)&&v(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){for(let r=0,s=c.length;r<s;r++){const s=c[r],a=i.get(s);let l=e.TEXTURE_2D;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(l=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),n.bindTexture(l,a.__webglTexture),N(l,s),D(o.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0+r,l,0),g(s)&&v(l)}n.unbindTexture()}else{let i=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),N(i,r),r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)D(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,i,n);else D(o.__webglFramebuffer,t,r,e.COLOR_ATTACHMENT0,i,0);g(r)&&v(i),n.unbindTexture()}t.depthBuffer&&O(t)},this.updateRenderTargetMipmap=function(e){const t=e.textures;for(let r=0,s=t.length;r<s;r++){const s=t[r];if(g(s)){const t=b(e),r=i.get(s).__webglTexture;n.bindTexture(t,r),v(t),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0)if(!1===z(t)){const r=t.textures,s=t.width,a=t.height;let o=e.COLOR_BUFFER_BIT;const c=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=i.get(t),h=r.length>1;if(h)for(let t=0;t<r.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer);const d=t.texture.mipmaps;d&&d.length>0?n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer[0]):n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<r.length;n++){if(t.resolveDepthBuffer&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&t.resolveStencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),h){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]);const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,s,a,0,0,s,a,o,e.NEAREST),!0===l&&(B.length=0,k.length=0,B.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&!1===t.resolveDepthBuffer&&(B.push(c),k.push(c),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,k)),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,B))}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),h)for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const s=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,s,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}else if(t.depthBuffer&&!1===t.resolveDepthBuffer&&l){const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=O,this.setupFrameBufferTexture=D,this.useMultisampledRTT=z}function Hm(e,t){return{convert:function(n,i=""){let r;const s=zn.getTransfer(i);if(n===ge)return e.UNSIGNED_BYTE;if(n===we)return e.UNSIGNED_SHORT_4_4_4_4;if(n===Me)return e.UNSIGNED_SHORT_5_5_5_1;if(n===Ae)return e.UNSIGNED_INT_5_9_9_9_REV;if(n===Re)return e.UNSIGNED_INT_10F_11F_11F_REV;if(n===ve)return e.BYTE;if(n===be)return e.SHORT;if(n===ye)return e.UNSIGNED_SHORT;if(n===xe)return e.INT;if(n===_e)return e.UNSIGNED_INT;if(n===Te)return e.FLOAT;if(n===Se)return e.HALF_FLOAT;if(n===Ce)return e.ALPHA;if(n===Ne)return e.RGB;if(n===Pe)return e.RGBA;if(n===Le)return e.DEPTH_COMPONENT;if(n===Ie)return e.DEPTH_STENCIL;if(n===De)return e.RED;if(n===Fe)return e.RED_INTEGER;if(n===Ue)return e.RG;if(n===Oe)return e.RG_INTEGER;if(n===ke)return e.RGBA_INTEGER;if(n===Ve||n===ze||n===Ge||n===He)if(s===kt){if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(n===Ve)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ze)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ge)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===He)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=t.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(n===Ve)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ze)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ge)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===He)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===We||n===je||n===Xe||n===qe){if(r=t.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(n===We)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===je)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Xe)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===qe)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===$e||n===Ye||n===Ke){if(r=t.get("WEBGL_compressed_texture_etc"),null===r)return null;if(n===$e||n===Ye)return s===kt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Ke)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(n===Qe||n===Ze||n===Je||n===et||n===tt||n===nt||n===it||n===rt||n===st||n===at||n===ot||n===lt||n===ct||n===ut){if(r=t.get("WEBGL_compressed_texture_astc"),null===r)return null;if(n===Qe)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Ze)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Je)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===et)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===tt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===nt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===it)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===rt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===st)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===at)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ot)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===lt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===ct)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ut)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===ht||n===dt||n===pt){if(r=t.get("EXT_texture_compression_bptc"),null===r)return null;if(n===ht)return s===kt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===dt)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===pt)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===mt||n===ft||n===gt||n===vt){if(r=t.get("EXT_texture_compression_rgtc"),null===r)return null;if(n===mt)return r.COMPRESSED_RED_RGTC1_EXT;if(n===ft)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===gt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===vt)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===Ee?e.UNSIGNED_INT_24_8:void 0!==e[n]?e[n]:null}}}class Wm{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(null===this.texture){const n=new Io(e.texture);e.depthNear===t.depthNear&&e.depthFar===t.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(e){if(null!==this.texture&&null===this.mesh){const t=e.cameras[0].viewport,n=new ys({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new ds(new Yl(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class jm extends dn{constructor(e,t){super();const n=this;let i=null,r=1,s=null,a="local-floor",o=1,l=null,c=null,u=null,h=null,d=null,p=null;const m="undefined"!=typeof XRWebGLBinding,f=new Wm,g={},v=t.getContextAttributes();let b=null,y=null;const x=[],_=[],T=new wn;let S=null;const w=new ws;w.viewport=new Zn;const M=new ws;M.viewport=new Zn;const E=[w,M],A=new Fu;let R=null,C=null;function N(e){const t=_.indexOf(e.inputSource);if(-1===t)return;const n=x[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||s),n.dispatchEvent({type:e.type,data:e.inputSource}))}function P(){i.removeEventListener("select",N),i.removeEventListener("selectstart",N),i.removeEventListener("selectend",N),i.removeEventListener("squeeze",N),i.removeEventListener("squeezestart",N),i.removeEventListener("squeezeend",N),i.removeEventListener("end",P),i.removeEventListener("inputsourceschange",L);for(let e=0;e<x.length;e++){const t=_[e];null!==t&&(_[e]=null,x[e].disconnect(t))}R=null,C=null,f.reset();for(const e in g)delete g[e];e.setRenderTarget(b),d=null,h=null,u=null,i=null,y=null,O.stop(),n.isPresenting=!1,e.setPixelRatio(S),e.setSize(T.width,T.height,!1),n.dispatchEvent({type:"sessionend"})}function L(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=_.indexOf(n);i>=0&&(_[i]=null,x[i].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=_.indexOf(n);if(-1===i){for(let e=0;e<x.length;e++){if(e>=_.length){_.push(n),i=e;break}if(null===_[e]){_[e]=n,i=e;break}}if(-1===i)break}const r=x[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=x[e];return void 0===t&&(t=new Ps,x[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=x[e];return void 0===t&&(t=new Ps,x[e]=t),t.getGripSpace()},this.getHand=function(e){let t=x[e];return void 0===t&&(t=new Ps,x[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return null===u&&m&&(u=new XRWebGLBinding(i,t)),u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){b=e.getRenderTarget(),i.addEventListener("select",N),i.addEventListener("selectstart",N),i.addEventListener("selectend",N),i.addEventListener("squeeze",N),i.addEventListener("squeezestart",N),i.addEventListener("squeezeend",N),i.addEventListener("end",P),i.addEventListener("inputsourceschange",L),!0!==v.xrCompatible&&await t.makeXRCompatible(),S=e.getPixelRatio(),e.getSize(T);if(m&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,s=null,a=null;v.depth&&(a=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=v.stencil?Ie:Le,s=v.stencil?Ee:_e);const o={colorFormat:t.RGBA8,depthFormat:a,scaleFactor:r};u=this.getBinding(),h=u.createProjectionLayer(o),i.updateRenderState({layers:[h]}),e.setPixelRatio(1),e.setSize(h.textureWidth,h.textureHeight,!1),y=new ei(h.textureWidth,h.textureHeight,{format:Pe,type:ge,depthTexture:new Lo(h.textureWidth,h.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0,resolveDepthBuffer:!1===h.ignoreDepthValues,resolveStencilBuffer:!1===h.ignoreDepthValues})}else{const n={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),y=new ei(d.framebufferWidth,d.framebufferHeight,{format:Pe,type:ge,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}y.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await i.requestReferenceSpace(a),O.setContext(i),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};const I=new En,D=new En;function F(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;let t=e.near,n=e.far;null!==f.texture&&(f.depthNear>0&&(t=f.depthNear),f.depthFar>0&&(n=f.depthFar)),A.near=M.near=w.near=t,A.far=M.far=w.far=n,R===A.near&&C===A.far||(i.updateRenderState({depthNear:A.near,depthFar:A.far}),R=A.near,C=A.far),A.layers.mask=6|e.layers.mask,w.layers.mask=3&A.layers.mask,M.layers.mask=5&A.layers.mask;const r=e.parent,s=A.cameras;F(A,r);for(let i=0;i<s.length;i++)F(s[i],r);2===s.length?function(e,t,n){I.setFromMatrixPosition(t.matrixWorld),D.setFromMatrixPosition(n.matrixWorld);const i=I.distanceTo(D),r=t.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(s[8]+1)/s[0],d=a*u,p=a*h,m=i/(-u+h),f=m*-u;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+m,n=o+m,r=d-f,s=p+(i-f),u=l*o/n*t,h=c*o/n*t;e.projectionMatrix.makePerspective(r,s,u,h,t,n),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(A,w,M):A.projectionMatrix.copy(w.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*gn*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,A,r)},this.getCamera=function(){return A},this.getFoveation=function(){if(null!==h||null!==d)return o},this.setFoveation=function(e){o=e,null!==h&&(h.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(A)},this.getCameraTexture=function(e){return g[e]};let U=null;const O=new md;O.setAnimationLoop(function(t,r){if(c=r.getViewerPose(l||s),p=r,null!==c){const t=c.views;null!==d&&(e.setRenderTargetFramebuffer(y,d.framebuffer),e.setRenderTarget(y));let r=!1;t.length!==A.cameras.length&&(A.cameras.length=0,r=!0);for(let n=0;n<t.length;n++){const i=t[n];let s=null;if(null!==d)s=d.getViewport(i);else{const t=u.getViewSubImage(h,i);s=t.viewport,0===n&&(e.setRenderTargetTextures(y,t.colorTexture,t.depthStencilTexture),e.setRenderTarget(y))}let a=E[n];void 0===a&&(a=new ws,a.layers.enable(n),a.viewport=new Zn,E[n]=a),a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(i.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===n&&(A.matrix.copy(a.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),!0===r&&A.cameras.push(a)}const s=i.enabledFeatures;if(s&&s.includes("depth-sensing")&&"gpu-optimized"==i.depthUsage&&m){u=n.getBinding();const e=u.getDepthInformation(t[0]);e&&e.isValid&&e.texture&&f.init(e,i.renderState)}if(s&&s.includes("camera-access")&&m){e.state.unbindTexture(),u=n.getBinding();for(let e=0;e<t.length;e++){const n=t[e].camera;if(n){let e=g[n];e||(e=new Io,g[n]=e);const t=u.getCameraImage(n);e.sourceTexture=t}}}}for(let e=0;e<x.length;e++){const t=_[e],n=x[e];null!==t&&void 0!==n&&n.update(t,r,l||s)}U&&U(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),p=null}),this.setAnimationLoop=function(e){U=e},this.dispose=function(){}}}const Xm=new Gi,qm=new Li;function $m(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function i(e,i){e.opacity.value=i.opacity,i.color&&e.diffuse.value.copy(i.color),i.emissive&&e.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(e.map.value=i.map,n(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,n(i.alphaMap,e.alphaMapTransform)),i.bumpMap&&(e.bumpMap.value=i.bumpMap,n(i.bumpMap,e.bumpMapTransform),e.bumpScale.value=i.bumpScale,1===i.side&&(e.bumpScale.value*=-1)),i.normalMap&&(e.normalMap.value=i.normalMap,n(i.normalMap,e.normalMapTransform),e.normalScale.value.copy(i.normalScale),1===i.side&&e.normalScale.value.negate()),i.displacementMap&&(e.displacementMap.value=i.displacementMap,n(i.displacementMap,e.displacementMapTransform),e.displacementScale.value=i.displacementScale,e.displacementBias.value=i.displacementBias),i.emissiveMap&&(e.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,e.emissiveMapTransform)),i.specularMap&&(e.specularMap.value=i.specularMap,n(i.specularMap,e.specularMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest);const r=t.get(i),s=r.envMap,a=r.envMapRotation;s&&(e.envMap.value=s,Xm.copy(a),Xm.x*=-1,Xm.y*=-1,Xm.z*=-1,s.isCubeTexture&&!1===s.isRenderTargetTexture&&(Xm.y*=-1,Xm.z*=-1),e.envMapRotation.value.setFromMatrix4(qm.makeRotationFromEuler(Xm)),e.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,e.reflectivity.value=i.reflectivity,e.ior.value=i.ior,e.refractionRatio.value=i.refractionRatio),i.lightMap&&(e.lightMap.value=i.lightMap,e.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,e.lightMapTransform)),i.aoMap&&(e.aoMap.value=i.aoMap,e.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,e.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,vs(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,s,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(i(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(i(e,r),function(e,t){e.metalness.value=t.metalness,t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap,n(t.metalnessMap,e.metalnessMapTransform));e.roughness.value=t.roughness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap,n(t.roughnessMap,e.roughnessMapTransform));t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,i){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform)));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate()));t.dispersion>0&&(e.dispersion.value=t.dispersion);t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform)));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform)));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform));t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,r,o)):r.isMeshMatcapMaterial?(i(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,n){const i=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(i.matrixWorld),e.nearDistance.value=i.shadow.camera.near,e.farDistance.value=i.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,i,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*r,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r,s,a):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Ym(e,t,n,i){let r={},s={},a=[];const o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(e,t,n,i){const r=e.value,s=t+"_"+n;if(void 0===i[s])return i[s]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const e=i[s];if("number"==typeof r||"boolean"==typeof r){if(e!==r)return i[s]=r,!0}else if(!1===e.equals(r))return e.copy(r),!0}return!1}function c(e){const t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function u(t){const n=t.target;n.removeEventListener("dispose",u);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete s[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,h){let d=r[n.id];void 0===d&&(!function(e){const t=e.uniforms;let n=0;const i=16;for(let s=0,a=t.length;s<a;s++){const e=Array.isArray(t[s])?t[s]:[t[s]];for(let t=0,r=e.length;t<r;t++){const r=e[t],s=Array.isArray(r.value)?r.value:[r.value];for(let e=0,t=s.length;e<t;e++){const t=c(s[e]),a=n%i,o=a%t.boundary,l=a+o;n+=o,0!==l&&i-l<t.storage&&(n+=i-l),r.__data=new Float32Array(t.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=n,n+=t.storage}}}const r=n%i;r>0&&(n+=i-r);e.__size=n,e.__cache={}}(n),d=function(t){const n=function(){for(let e=0;e<o;e++)if(-1===a.indexOf(e))return a.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),r=t.__size,s=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,s),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=d,n.addEventListener("dispose",u));const p=h.program;i.updateUBOMapping(n,p);const m=t.render.frame;s[n.id]!==m&&(!function(t){const n=r[t.id],i=t.uniforms,s=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let r=0,a=i.length;r<a;r++){const t=Array.isArray(i[r])?i[r]:[i[r]];for(let n=0,i=t.length;n<i;n++){const i=t[n];if(!0===l(i,r,n,s)){const t=i.__offset,n=Array.isArray(i.value)?i.value:[i.value];let r=0;for(let s=0;s<n.length;s++){const a=n[s],o=c(a);"number"==typeof a||"boolean"==typeof a?(i.__data[0]=a,e.bufferSubData(e.UNIFORM_BUFFER,t+r,i.__data)):a.isMatrix3?(i.__data[0]=a.elements[0],i.__data[1]=a.elements[1],i.__data[2]=a.elements[2],i.__data[3]=0,i.__data[4]=a.elements[3],i.__data[5]=a.elements[4],i.__data[6]=a.elements[5],i.__data[7]=0,i.__data[8]=a.elements[6],i.__data[9]=a.elements[7],i.__data[10]=a.elements[8],i.__data[11]=0):(a.toArray(i.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,i.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),s[n.id]=m)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);a=[],r={},s={}}}}class Km{constructor(e={}){const{canvas:t=Fn(),context:i=null,depth:r=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:d=!1}=e;let p;if(this.isWebGLRenderer=!0,null!==i){if("undefined"!=typeof WebGLRenderingContext&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=a;const m=new Uint32Array(4),f=new Int32Array(4);let g=null,v=null;const b=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let _=!1;this._outputColorSpace=Ut;let T=0,S=0,w=null,M=-1,E=null;const A=new Zn,R=new Zn;let C=null;const N=new wr(0);let P=0,L=t.width,I=t.height,D=1,F=null,U=null;const O=new Zn(0,0,L,I),B=new Zn(0,0,L,I);let k=!1;const V=new Da;let z=!1,G=!1;const H=new Li,W=new En,j=new Zn,X={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let q=!1;function $(){return null===w?D:1}let Y,K,Q,Z,J,ee,te,ne,ie,re,se,ae,oe,le,ce,ue,he,de,pe,fe,ve,be,xe,Te,Ae=i;function Re(e,n){return t.getContext(e,n)}try{const e={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${n}`),t.addEventListener("webglcontextlost",Pe,!1),t.addEventListener("webglcontextrestored",Le,!1),t.addEventListener("webglcontextcreationerror",Ie,!1),null===Ae){const t="webgl2";if(Ae=Re(t,e),null===Ae)throw Re(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(et){throw console.error("THREE.WebGLRenderer: "+et.message),et}function Ce(){Y=new qd(Ae),Y.init(),be=new Hm(Ae,Y),K=new Md(Ae,Y,e,be),Q=new zm(Ae,Y),K.reversedDepthBuffer&&d&&Q.buffers.depth.setReversed(!0),Z=new Kd(Ae),J=new Rm,ee=new Gm(Ae,Y,Q,J,K,be,Z),te=new Ad(x),ne=new Xd(x),ie=new fd(Ae),xe=new Sd(Ae,ie),re=new $d(Ae,ie,Z,xe),se=new Zd(Ae,re,ie,Z),pe=new Qd(Ae,K,ee),ue=new Ed(J),ae=new Am(x,te,ne,Y,K,xe,ue),oe=new $m(x,J),le=new Lm,ce=new Bm(Y),de=new Td(x,te,ne,Q,se,p,l),he=new km(x,se,K),Te=new Ym(Ae,Z,K,Q),fe=new wd(Ae,Y,Z),ve=new Yd(Ae,Y,Z),Z.programs=ae.programs,x.capabilities=K,x.extensions=Y,x.properties=J,x.renderLists=le,x.shadowMap=he,x.state=Q,x.info=Z}Ce();const Ne=new jm(x,Ae);function Pe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function Le(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const e=Z.autoReset,t=he.enabled,n=he.autoUpdate,i=he.needsUpdate,r=he.type;Ce(),Z.autoReset=e,he.enabled=t,he.autoUpdate=n,he.needsUpdate=i,he.type=r}function Ie(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function De(e){const t=e.target;t.removeEventListener("dispose",De),function(e){(function(e){const t=J.get(e).programs;void 0!==t&&(t.forEach(function(e){ae.releaseProgram(e)}),e.isShaderMaterial&&ae.releaseShaderCache(e))})(e),J.remove(e)}(t)}function Ue(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,$e(e,t,n),e.side=0,e.needsUpdate=!0,$e(e,t,n),e.side=2):$e(e,t,n)}this.xr=Ne,this.getContext=function(){return Ae},this.getContextAttributes=function(){return Ae.getContextAttributes()},this.forceContextLoss=function(){const e=Y.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=Y.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(e){void 0!==e&&(D=e,this.setSize(L,I,!1))},this.getSize=function(e){return e.set(L,I)},this.setSize=function(e,n,i=!0){Ne.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(L=e,I=n,t.width=Math.floor(e*D),t.height=Math.floor(n*D),!0===i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(L*D,I*D).floor()},this.setDrawingBufferSize=function(e,n,i){L=e,I=n,D=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(A)},this.getViewport=function(e){return e.copy(O)},this.setViewport=function(e,t,n,i){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,n,i),Q.viewport(A.copy(O).multiplyScalar(D).round())},this.getScissor=function(e){return e.copy(B)},this.setScissor=function(e,t,n,i){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,n,i),Q.scissor(R.copy(B).multiplyScalar(D).round())},this.getScissorTest=function(){return k},this.setScissorTest=function(e){Q.setScissorTest(k=e)},this.setOpaqueSort=function(e){F=e},this.setTransparentSort=function(e){U=e},this.getClearColor=function(e){return e.copy(de.getClearColor())},this.setClearColor=function(){de.setClearColor(...arguments)},this.getClearAlpha=function(){return de.getClearAlpha()},this.setClearAlpha=function(){de.setClearAlpha(...arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;if(e){let e=!1;if(null!==w){const t=w.texture.format;e=t===ke||t===Oe||t===Fe}if(e){const e=w.texture.type,t=e===ge||e===_e||e===ye||e===Ee||e===we||e===Me,n=de.getClearColor(),i=de.getClearAlpha(),r=n.r,s=n.g,a=n.b;t?(m[0]=r,m[1]=s,m[2]=a,m[3]=i,Ae.clearBufferuiv(Ae.COLOR,0,m)):(f[0]=r,f[1]=s,f[2]=a,f[3]=i,Ae.clearBufferiv(Ae.COLOR,0,f))}else i|=Ae.COLOR_BUFFER_BIT}t&&(i|=Ae.DEPTH_BUFFER_BIT),n&&(i|=Ae.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Ae.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pe,!1),t.removeEventListener("webglcontextrestored",Le,!1),t.removeEventListener("webglcontextcreationerror",Ie,!1),de.dispose(),le.dispose(),ce.dispose(),J.dispose(),te.dispose(),ne.dispose(),se.dispose(),xe.dispose(),Te.dispose(),ae.dispose(),Ne.dispose(),Ne.removeEventListener("sessionstart",Ve),Ne.removeEventListener("sessionend",ze),Ge.stop()},this.renderBufferDirect=function(e,t,n,i,r,s){null===t&&(t=X);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(e,t,n,i,r){!0!==t.isScene&&(t=X);ee.resetTextureUnits();const s=t.fog,a=i.isMeshStandardMaterial?t.environment:null,o=null===w?x.outputColorSpace:!0===w.isXRRenderTarget?w.texture.colorSpace:Ot,l=(i.isMeshStandardMaterial?ne:te).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let m=0;i.toneMapped&&(null!==w&&!0!==w.isXRRenderTarget||(m=x.toneMapping));const f=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==f?f.length:0,b=J.get(i),y=v.state.lights;if(!0===z&&(!0===G||e!==E)){const t=e===E&&i.id===M;ue.setState(i,e,t)}let _=!1;i.version===b.__version?b.needsLights&&b.lightsStateVersion!==y.state.version||b.outputColorSpace!==o||r.isBatchedMesh&&!1===b.batching?_=!0:r.isBatchedMesh||!0!==b.batching?r.isBatchedMesh&&!0===b.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===b.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===b.instancing?_=!0:r.isInstancedMesh||!0!==b.instancing?r.isSkinnedMesh&&!1===b.skinning?_=!0:r.isSkinnedMesh||!0!==b.skinning?r.isInstancedMesh&&!0===b.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===b.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===b.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===b.instancingMorph&&null!==r.morphTexture||b.envMap!==l||!0===i.fog&&b.fog!==s?_=!0:void 0===b.numClippingPlanes||b.numClippingPlanes===ue.numPlanes&&b.numIntersection===ue.numIntersection?(b.vertexAlphas!==c||b.vertexTangents!==u||b.morphTargets!==h||b.morphNormals!==d||b.morphColors!==p||b.toneMapping!==m||b.morphTargetsCount!==g)&&(_=!0):_=!0:_=!0:_=!0:_=!0:(_=!0,b.__version=i.version);let T=b.currentProgram;!0===_&&(T=$e(i,t,r));let S=!1,A=!1,R=!1;const C=T.getUniforms(),N=b.uniforms;Q.useProgram(T.program)&&(S=!0,A=!0,R=!0);i.id!==M&&(M=i.id,A=!0);if(S||E!==e){Q.buffers.depth.getReversed()&&!0!==e.reversedDepth&&(e._reversedDepth=!0,e.updateProjectionMatrix()),C.setValue(Ae,"projectionMatrix",e.projectionMatrix),C.setValue(Ae,"viewMatrix",e.matrixWorldInverse);const t=C.map.cameraPosition;void 0!==t&&t.setValue(Ae,W.setFromMatrixPosition(e.matrixWorld)),K.logarithmicDepthBuffer&&C.setValue(Ae,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&C.setValue(Ae,"isOrthographic",!0===e.isOrthographicCamera),E!==e&&(E=e,A=!0,R=!0)}if(r.isSkinnedMesh){C.setOptional(Ae,r,"bindMatrix"),C.setOptional(Ae,r,"bindMatrixInverse");const e=r.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),C.setValue(Ae,"boneTexture",e.boneTexture,ee))}r.isBatchedMesh&&(C.setOptional(Ae,r,"batchingTexture"),C.setValue(Ae,"batchingTexture",r._matricesTexture,ee),C.setOptional(Ae,r,"batchingIdTexture"),C.setValue(Ae,"batchingIdTexture",r._indirectTexture,ee),C.setOptional(Ae,r,"batchingColorTexture"),null!==r._colorsTexture&&C.setValue(Ae,"batchingColorTexture",r._colorsTexture,ee));const P=n.morphAttributes;void 0===P.position&&void 0===P.normal&&void 0===P.color||pe.update(r,n,T);(A||b.receiveShadow!==r.receiveShadow)&&(b.receiveShadow=r.receiveShadow,C.setValue(Ae,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(N.envMap.value=l,N.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);i.isMeshStandardMaterial&&null===i.envMap&&null!==t.environment&&(N.envMapIntensity.value=t.environmentIntensity);A&&(C.setValue(Ae,"toneMappingExposure",x.toneMappingExposure),b.needsLights&&(F=R,(L=N).ambientLightColor.needsUpdate=F,L.lightProbe.needsUpdate=F,L.directionalLights.needsUpdate=F,L.directionalLightShadows.needsUpdate=F,L.pointLights.needsUpdate=F,L.pointLightShadows.needsUpdate=F,L.spotLights.needsUpdate=F,L.spotLightShadows.needsUpdate=F,L.rectAreaLights.needsUpdate=F,L.hemisphereLights.needsUpdate=F),s&&!0===i.fog&&oe.refreshFogUniforms(N,s),oe.refreshMaterialUniforms(N,i,D,I,v.state.transmissionRenderTarget[e.id]),im.upload(Ae,Ye(b),N,ee));var L,F;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(im.upload(Ae,Ye(b),N,ee),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&C.setValue(Ae,"center",r.center);if(C.setValue(Ae,"modelViewMatrix",r.modelViewMatrix),C.setValue(Ae,"normalMatrix",r.normalMatrix),C.setValue(Ae,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++){const n=e[t];Te.update(n,T),Te.bind(n,T)}}return T}(e,t,n,i,r);Q.setMaterial(i,a);let l=n.index,c=1;if(!0===i.wireframe){if(l=re.getWireframeAttribute(n),void 0===l)return;c=2}const u=n.drawRange,h=n.attributes.position;let d=u.start*c,p=(u.start+u.count)*c;null!==s&&(d=Math.max(d,s.start*c),p=Math.min(p,(s.start+s.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=h&&(d=Math.max(d,0),p=Math.min(p,h.count));const m=p-d;if(m<0||m===1/0)return;let f;xe.setup(r,i,o,n,l);let g=fe;if(null!==l&&(f=ie.get(l),g=ve,g.setIndex(f)),r.isMesh)!0===i.wireframe?(Q.setLineWidth(i.wireframeLinewidth*$()),g.setMode(Ae.LINES)):g.setMode(Ae.TRIANGLES);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),Q.setLineWidth(e*$()),r.isLineSegments?g.setMode(Ae.LINES):r.isLineLoop?g.setMode(Ae.LINE_LOOP):g.setMode(Ae.LINE_STRIP)}else r.isPoints?g.setMode(Ae.POINTS):r.isSprite&&g.setMode(Ae.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)On("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),g.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(Y.get("WEBGL_multi_draw"))g.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const e=r._multiDrawStarts,t=r._multiDrawCounts,n=r._multiDrawCount,s=l?ie.get(l).bytesPerElement:1,a=J.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)a.setValue(Ae,"_gl_DrawID",i),g.render(e[i]/s,t[i])}else if(r.isInstancedMesh)g.renderInstances(d,m,r.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);g.renderInstances(d,m,t)}else g.render(d,m)},this.compile=function(e,t,n=null){null===n&&(n=e),v=ce.get(n),v.init(t),y.push(v),n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(v.pushLight(e),e.castShadow&&v.pushShadow(e))}),e!==n&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(v.pushLight(e),e.castShadow&&v.pushShadow(e))}),v.setupLights();const i=new Set;return e.traverse(function(e){if(!(e.isMesh||e.isPoints||e.isLine||e.isSprite))return;const t=e.material;if(t)if(Array.isArray(t))for(let r=0;r<t.length;r++){const s=t[r];Ue(s,n,e),i.add(s)}else Ue(t,n,e),i.add(t)}),v=y.pop(),i},this.compileAsync=function(e,t,n=null){const i=this.compile(e,t,n);return new Promise(t=>{function n(){i.forEach(function(e){J.get(e).currentProgram.isReady()&&i.delete(e)}),0!==i.size?setTimeout(n,10):t(e)}null!==Y.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let Be=null;function Ve(){Ge.stop()}function ze(){Ge.start()}const Ge=new md;function He(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)v.pushLight(e),e.castShadow&&v.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||V.intersectsSprite(e)){i&&j.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);const t=se.update(e),r=e.material;r.visible&&g.push(e,t,r,n,j.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||V.intersectsObject(e))){const t=se.update(e),r=e.material;if(i&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),j.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),j.copy(t.boundingSphere.center)),j.applyMatrix4(e.matrixWorld).applyMatrix4(H)),Array.isArray(r)){const i=t.groups;for(let s=0,a=i.length;s<a;s++){const a=i[s],o=r[a.materialIndex];o&&o.visible&&g.push(e,t,o,n,j.z,a)}}else r.visible&&g.push(e,t,r,n,j.z,null)}const r=e.children;for(let s=0,a=r.length;s<a;s++)He(r[s],t,n,i)}function We(e,t,n,i){const r=e.opaque,s=e.transmissive,a=e.transparent;v.setupLightsView(n),!0===z&&ue.setGlobalState(x.clippingPlanes,n),i&&Q.viewport(A.copy(i)),r.length>0&&Xe(r,t,n),s.length>0&&Xe(s,t,n),a.length>0&&Xe(a,t,n),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function je(e,t,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===v.state.transmissionRenderTarget[i.id]&&(v.state.transmissionRenderTarget[i.id]=new ei(1,1,{generateMipmaps:!0,type:Y.has("EXT_color_buffer_half_float")||Y.has("EXT_color_buffer_float")?Se:ge,minFilter:me,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:zn.workingColorSpace}));const r=v.state.transmissionRenderTarget[i.id],a=i.viewport||A;r.setSize(a.z*x.transmissionResolutionScale,a.w*x.transmissionResolutionScale);const o=x.getRenderTarget(),l=x.getActiveCubeFace(),c=x.getActiveMipmapLevel();x.setRenderTarget(r),x.getClearColor(N),P=x.getClearAlpha(),P<1&&x.setClearColor(16777215,.5),x.clear(),q&&de.render(n);const u=x.toneMapping;x.toneMapping=0;const h=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),v.setupLightsView(i),!0===z&&ue.setGlobalState(x.clippingPlanes,i),Xe(e,n,i),ee.updateMultisampleRenderTarget(r),ee.updateRenderTargetMipmap(r),!1===Y.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=s.material,c=s.group;if(2===l.side&&a.layers.test(i.layers)){const t=l.side;l.side=1,l.needsUpdate=!0,qe(a,n,i,o,l,c),l.side=t,l.needsUpdate=!0,e=!0}}!0===e&&(ee.updateMultisampleRenderTarget(r),ee.updateRenderTargetMipmap(r))}x.setRenderTarget(o,l,c),x.setClearColor(N,P),void 0!==h&&(i.viewport=h),x.toneMapping=u}function Xe(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){const s=e[r],a=s.object,o=s.geometry,l=s.group;let c=s.material;!0===c.allowOverride&&null!==i&&(c=i),a.layers.test(n.layers)&&qe(a,t,n,o,c,l)}}function qe(e,t,n,i,r,s){e.onBeforeRender(x,t,n,i,r,s),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(x,t,n,i,e,s),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,x.renderBufferDirect(n,t,i,r,e,s),r.side=0,r.needsUpdate=!0,x.renderBufferDirect(n,t,i,r,e,s),r.side=2):x.renderBufferDirect(n,t,i,r,e,s),e.onAfterRender(x,t,n,i,r,s)}function $e(e,t,n){!0!==t.isScene&&(t=X);const i=J.get(e),r=v.state.lights,s=v.state.shadowsArray,a=r.state.version,o=ae.getParameters(e,r.state,s,t,n),l=ae.getProgramCacheKey(o);let c=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?ne:te).get(e.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===c&&(e.addEventListener("dispose",De),c=new Map,i.programs=c);let u=c.get(l);if(void 0!==u){if(i.currentProgram===u&&i.lightsStateVersion===a)return Ke(e,o),u}else o.uniforms=ae.getUniforms(e),e.onBeforeCompile(o,x),u=ae.acquireProgram(o,l),c.set(l,u),i.uniforms=o.uniforms;const h=i.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=ue.uniform),Ke(e,o),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=a,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix),i.currentProgram=u,i.uniformsList=null,u}function Ye(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=im.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function Ke(e,t){const n=J.get(e);n.outputColorSpace=t.outputColorSpace,n.batching=t.batching,n.batchingColor=t.batchingColor,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.instancingMorph=t.instancingMorph,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Ge.setAnimationLoop(function(e){Be&&Be(e)}),"undefined"!=typeof self&&Ge.setContext(self),this.setAnimationLoop=function(e){Be=e,Ne.setAnimationLoop(e),null===e?Ge.stop():Ge.start()},Ne.addEventListener("sessionstart",Ve),Ne.addEventListener("sessionend",ze),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===_)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Ne.enabled&&!0===Ne.isPresenting&&(!0===Ne.cameraAutoUpdate&&Ne.updateCamera(t),t=Ne.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,w),v=ce.get(e,y.length),v.init(t),y.push(v),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),V.setFromProjectionMatrix(H,on,t.reversedDepth),G=this.localClippingEnabled,z=ue.init(this.clippingPlanes,G),g=le.get(e,b.length),g.init(),b.push(g),!0===Ne.enabled&&!0===Ne.isPresenting){const e=x.xr.getDepthSensingMesh();null!==e&&He(e,t,-1/0,x.sortObjects)}He(e,t,0,x.sortObjects),g.finish(),!0===x.sortObjects&&g.sort(F,U),q=!1===Ne.enabled||!1===Ne.isPresenting||!1===Ne.hasDepthSensing(),q&&de.addToRenderList(g,e),this.info.render.frame++,!0===z&&ue.beginShadows();const n=v.state.shadowsArray;he.render(n,e,t),!0===z&&ue.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=g.opaque,r=g.transmissive;if(v.setupLights(),t.isArrayCamera){const n=t.cameras;if(r.length>0)for(let t=0,s=n.length;t<s;t++){je(i,r,e,n[t])}q&&de.render(e);for(let t=0,i=n.length;t<i;t++){const i=n[t];We(g,e,i,i.viewport)}}else r.length>0&&je(i,r,e,t),q&&de.render(e),We(g,e,t);null!==w&&0===S&&(ee.updateMultisampleRenderTarget(w),ee.updateRenderTargetMipmap(w)),!0===e.isScene&&e.onAfterRender(x,e,t),xe.resetDefaultState(),M=-1,E=null,y.pop(),y.length>0?(v=y[y.length-1],!0===z&&ue.setGlobalState(x.clippingPlanes,v.state.camera)):v=null,b.pop(),g=b.length>0?b[b.length-1]:null},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(e,t,n){const i=J.get(e);i.__autoAllocateDepthBuffer=!1===e.resolveDepthBuffer,!1===i.__autoAllocateDepthBuffer&&(i.__useRenderToTexture=!1),J.get(e.texture).__webglTexture=t,J.get(e.depthTexture).__webglTexture=i.__autoAllocateDepthBuffer?void 0:n,i.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(e,t){const n=J.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t};const Qe=Ae.createFramebuffer();this.setRenderTarget=function(e,t=0,n=0){w=e,T=t,S=n;let i=!0,r=null,s=!1,a=!1;if(e){const o=J.get(e);if(void 0!==o.__useDefaultFramebuffer)Q.bindFramebuffer(Ae.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)ee.setupRenderTarget(e);else if(o.__hasExternalTextures)ee.rebindTextures(e,J.get(e.texture).__webglTexture,J.get(e.depthTexture).__webglTexture);else if(e.depthBuffer){const t=e.depthTexture;if(o.__boundDepthTexture!==t){if(null!==t&&J.has(t)&&(e.width!==t.image.width||e.height!==t.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ee.setupDepthRenderbuffer(e)}}const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const c=J.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=Array.isArray(c[t])?c[t][n]:c[t],s=!0):r=e.samples>0&&!1===ee.useMultisampledRTT(e)?J.get(e).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,A.copy(e.viewport),R.copy(e.scissor),C=e.scissorTest}else A.copy(O).multiplyScalar(D).floor(),R.copy(B).multiplyScalar(D).floor(),C=k;0!==n&&(r=Qe);if(Q.bindFramebuffer(Ae.FRAMEBUFFER,r)&&i&&Q.drawBuffers(e,r),Q.viewport(A),Q.scissor(R),Q.setScissorTest(C),s){const i=J.get(e.texture);Ae.framebufferTexture2D(Ae.FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,Ae.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(a){const i=t;for(let t=0;t<e.textures.length;t++){const r=J.get(e.textures[t]);Ae.framebufferTextureLayer(Ae.FRAMEBUFFER,Ae.COLOR_ATTACHMENT0+t,r.__webglTexture,n,i)}}else if(null!==e&&0!==n){const t=J.get(e.texture);Ae.framebufferTexture2D(Ae.FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,Ae.TEXTURE_2D,t.__webglTexture,n)}M=-1},this.readRenderTargetPixels=function(e,t,n,i,r,s,a,o=0){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=J.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){Q.bindFramebuffer(Ae.FRAMEBUFFER,l);try{const a=e.textures[o],l=a.format,c=a.type;if(!K.textureFormatReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!K.textureTypeReadable(c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&(e.textures.length>1&&Ae.readBuffer(Ae.COLOR_ATTACHMENT0+o),Ae.readPixels(t,n,i,r,be.convert(l),be.convert(c),s))}finally{const e=null!==w?J.get(w).__webglFramebuffer:null;Q.bindFramebuffer(Ae.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,n,i,r,s,a,o=0){if(!e||!e.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=J.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(l=l[a]),l){if(t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r){Q.bindFramebuffer(Ae.FRAMEBUFFER,l);const a=e.textures[o],c=a.format,u=a.type;if(!K.textureFormatReadable(c))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!K.textureTypeReadable(u))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const h=Ae.createBuffer();Ae.bindBuffer(Ae.PIXEL_PACK_BUFFER,h),Ae.bufferData(Ae.PIXEL_PACK_BUFFER,s.byteLength,Ae.STREAM_READ),e.textures.length>1&&Ae.readBuffer(Ae.COLOR_ATTACHMENT0+o),Ae.readPixels(t,n,i,r,be.convert(c),be.convert(u),0);const d=null!==w?J.get(w).__webglFramebuffer:null;Q.bindFramebuffer(Ae.FRAMEBUFFER,d);const p=Ae.fenceSync(Ae.SYNC_GPU_COMMANDS_COMPLETE,0);return Ae.flush(),await function(e,t,n){return new Promise(function(i,r){setTimeout(function s(){switch(e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0)){case e.WAIT_FAILED:r();break;case e.TIMEOUT_EXPIRED:setTimeout(s,n);break;default:i()}},n)})}(Ae,p,4),Ae.bindBuffer(Ae.PIXEL_PACK_BUFFER,h),Ae.getBufferSubData(Ae.PIXEL_PACK_BUFFER,0,s),Ae.deleteBuffer(h),Ae.deleteSync(p),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(e,t=null,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i),a=null!==t?t.x:0,o=null!==t?t.y:0;ee.setTexture2D(e,0),Ae.copyTexSubImage2D(Ae.TEXTURE_2D,n,0,0,a,o,r,s),Q.unbindTexture()};const Ze=Ae.createFramebuffer(),Je=Ae.createFramebuffer();this.copyTextureToTexture=function(e,t,n=null,i=null,r=0,s=null){let a,o,l,c,u,h,d,p,m;null===s&&(0!==r?(On("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),s=r,r=0):s=0);const f=e.isCompressedTexture?e.mipmaps[s]:e.image;if(null!==n)a=n.max.x-n.min.x,o=n.max.y-n.min.y,l=n.isBox3?n.max.z-n.min.z:1,c=n.min.x,u=n.min.y,h=n.isBox3?n.min.z:0;else{const t=Math.pow(2,-r);a=Math.floor(f.width*t),o=Math.floor(f.height*t),l=e.isDataArrayTexture?f.depth:e.isData3DTexture?Math.floor(f.depth*t):1,c=0,u=0,h=0}null!==i?(d=i.x,p=i.y,m=i.z):(d=0,p=0,m=0);const g=be.convert(t.format),v=be.convert(t.type);let b;t.isData3DTexture?(ee.setTexture3D(t,0),b=Ae.TEXTURE_3D):t.isDataArrayTexture||t.isCompressedArrayTexture?(ee.setTexture2DArray(t,0),b=Ae.TEXTURE_2D_ARRAY):(ee.setTexture2D(t,0),b=Ae.TEXTURE_2D),Ae.pixelStorei(Ae.UNPACK_FLIP_Y_WEBGL,t.flipY),Ae.pixelStorei(Ae.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Ae.pixelStorei(Ae.UNPACK_ALIGNMENT,t.unpackAlignment);const y=Ae.getParameter(Ae.UNPACK_ROW_LENGTH),x=Ae.getParameter(Ae.UNPACK_IMAGE_HEIGHT),_=Ae.getParameter(Ae.UNPACK_SKIP_PIXELS),T=Ae.getParameter(Ae.UNPACK_SKIP_ROWS),S=Ae.getParameter(Ae.UNPACK_SKIP_IMAGES);Ae.pixelStorei(Ae.UNPACK_ROW_LENGTH,f.width),Ae.pixelStorei(Ae.UNPACK_IMAGE_HEIGHT,f.height),Ae.pixelStorei(Ae.UNPACK_SKIP_PIXELS,c),Ae.pixelStorei(Ae.UNPACK_SKIP_ROWS,u),Ae.pixelStorei(Ae.UNPACK_SKIP_IMAGES,h);const w=e.isDataArrayTexture||e.isData3DTexture,M=t.isDataArrayTexture||t.isData3DTexture;if(e.isDepthTexture){const n=J.get(e),i=J.get(t),f=J.get(n.__renderTarget),g=J.get(i.__renderTarget);Q.bindFramebuffer(Ae.READ_FRAMEBUFFER,f.__webglFramebuffer),Q.bindFramebuffer(Ae.DRAW_FRAMEBUFFER,g.__webglFramebuffer);for(let v=0;v<l;v++)w&&(Ae.framebufferTextureLayer(Ae.READ_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,J.get(e).__webglTexture,r,h+v),Ae.framebufferTextureLayer(Ae.DRAW_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,J.get(t).__webglTexture,s,m+v)),Ae.blitFramebuffer(c,u,a,o,d,p,a,o,Ae.DEPTH_BUFFER_BIT,Ae.NEAREST);Q.bindFramebuffer(Ae.READ_FRAMEBUFFER,null),Q.bindFramebuffer(Ae.DRAW_FRAMEBUFFER,null)}else if(0!==r||e.isRenderTargetTexture||J.has(e)){const n=J.get(e),i=J.get(t);Q.bindFramebuffer(Ae.READ_FRAMEBUFFER,Ze),Q.bindFramebuffer(Ae.DRAW_FRAMEBUFFER,Je);for(let e=0;e<l;e++)w?Ae.framebufferTextureLayer(Ae.READ_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,n.__webglTexture,r,h+e):Ae.framebufferTexture2D(Ae.READ_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,Ae.TEXTURE_2D,n.__webglTexture,r),M?Ae.framebufferTextureLayer(Ae.DRAW_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,i.__webglTexture,s,m+e):Ae.framebufferTexture2D(Ae.DRAW_FRAMEBUFFER,Ae.COLOR_ATTACHMENT0,Ae.TEXTURE_2D,i.__webglTexture,s),0!==r?Ae.blitFramebuffer(c,u,a,o,d,p,a,o,Ae.COLOR_BUFFER_BIT,Ae.NEAREST):M?Ae.copyTexSubImage3D(b,s,d,p,m+e,c,u,a,o):Ae.copyTexSubImage2D(b,s,d,p,c,u,a,o);Q.bindFramebuffer(Ae.READ_FRAMEBUFFER,null),Q.bindFramebuffer(Ae.DRAW_FRAMEBUFFER,null)}else M?e.isDataTexture||e.isData3DTexture?Ae.texSubImage3D(b,s,d,p,m,a,o,l,g,v,f.data):t.isCompressedArrayTexture?Ae.compressedTexSubImage3D(b,s,d,p,m,a,o,l,g,f.data):Ae.texSubImage3D(b,s,d,p,m,a,o,l,g,v,f):e.isDataTexture?Ae.texSubImage2D(Ae.TEXTURE_2D,s,d,p,a,o,g,v,f.data):e.isCompressedTexture?Ae.compressedTexSubImage2D(Ae.TEXTURE_2D,s,d,p,f.width,f.height,g,f.data):Ae.texSubImage2D(Ae.TEXTURE_2D,s,d,p,a,o,g,v,f);Ae.pixelStorei(Ae.UNPACK_ROW_LENGTH,y),Ae.pixelStorei(Ae.UNPACK_IMAGE_HEIGHT,x),Ae.pixelStorei(Ae.UNPACK_SKIP_PIXELS,_),Ae.pixelStorei(Ae.UNPACK_SKIP_ROWS,T),Ae.pixelStorei(Ae.UNPACK_SKIP_IMAGES,S),0===s&&t.generateMipmaps&&Ae.generateMipmap(b),Q.unbindTexture()},this.initRenderTarget=function(e){void 0===J.get(e).__webglFramebuffer&&ee.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?ee.setTextureCube(e,0):e.isData3DTexture?ee.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ee.setTexture2DArray(e,0):ee.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){T=0,S=0,w=null,Q.reset(),xe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return on}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=zn._getDrawingBufferColorSpace(e),t.unpackColorSpace=zn._getUnpackColorSpace()}}const Qm=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:4,AddEquation:g,AddOperation:2,AdditiveAnimationBlendMode:Rt,AdditiveBlending:2,AgXToneMapping:6,AlphaFormat:Ce,AlwaysCompare:nn,AlwaysDepth:1,AlwaysStencilFunc:$t,AmbientLight:mu,AnimationAction:sh,AnimationClip:Uc,AnimationLoader:jc,AnimationMixer:oh,AnimationObjectGroup:rh,AnimationUtils:Sc,ArcCurve:qo,ArrayCamera:Fu,ArrowHelper:ld,AttachedBindMode:Z,Audio:Hu,AudioAnalyser:Yu,AudioContext:Cu,AudioListener:Gu,AudioLoader:Nu,AxesHelper:cd,BackSide:1,BasicDepthPacking:Lt,BasicShadowMap:0,BatchedMesh:no,Bone:pa,BooleanKeyframeTrack:Cc,Box2:wh,Box3:si,Box3Helper:id,BoxGeometry:ms,BoxHelper:nd,BufferAttribute:Or,BufferGeometry:es,BufferGeometryLoader:_u,ByteType:ve,Cache:Bc,Camera:xs,CameraHelper:Jh,CanvasTexture:Po,CapsuleGeometry:Do,CatmullRomCurve3:Jo,CineonToneMapping:3,CircleGeometry:Fo,ClampToEdgeWrapping:oe,Clock:Uu,Color:wr,ColorKeyframeTrack:Nc,ColorManagement:zn,CompressedArrayTexture:Co,CompressedCubeTexture:No,CompressedTexture:Ro,CompressedTextureLoader:Xc,ConeGeometry:Oo,ConstantAlphaFactor:213,ConstantColorFactor:211,Controls:hd,CubeCamera:Es,CubeReflectionMapping:te,CubeRefractionMapping:ne,CubeTexture:As,CubeTextureLoader:Yc,CubeUVReflectionMapping:se,CubicBezierCurve:il,CubicBezierCurve3:rl,CubicInterpolant:Mc,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,CullFaceNone:0,Curve:jo,CurvePath:hl,CustomBlending:5,CustomToneMapping:5,CylinderGeometry:Uo,Cylindrical:_h,Data3DTexture:ii,DataArrayTexture:ti,DataTexture:ma,DataTextureLoader:Kc,DataUtils:Ir,DecrementStencilOp:Ht,DecrementWrapStencilOp:jt,DefaultLoadingManager:Vc,DepthFormat:Le,DepthStencilFormat:Ie,DepthTexture:Lo,DetachedBindMode:J,DirectionalLight:pu,DirectionalLightHelper:Kh,DiscreteInterpolant:Ac,DodecahedronGeometry:ko,DoubleSide:2,DstAlphaFactor:A,DstColorFactor:C,DynamicCopyUsage:35050,DynamicDrawUsage:sn,DynamicReadUsage:35049,EdgesGeometry:Wo,EllipseCurve:Xo,EqualCompare:Qt,EqualDepth:4,EqualStencilFunc:qt,EquirectangularReflectionMapping:ie,EquirectangularRefractionMapping:re,Euler:Gi,EventDispatcher:dn,ExternalTexture:Io,ExtrudeGeometry:Wl,FileLoader:Wc,Float16BufferAttribute:jr,Float32BufferAttribute:Xr,FloatType:Te,Fog:Is,FogExp2:Ls,FramebufferTexture:Ao,FrontSide:0,Frustum:Da,FrustumArray:Oa,GLBufferAttribute:ph,GLSL1:"100",GLSL3:an,GreaterCompare:Jt,GreaterDepth:6,GreaterEqualCompare:tn,GreaterEqualDepth:5,GreaterEqualStencilFunc:518,GreaterStencilFunc:516,GridHelper:jh,Group:Cs,HalfFloatType:Se,HemisphereLight:Jc,HemisphereLightHelper:Wh,IcosahedronGeometry:Xl,ImageBitmapLoader:Au,ImageLoader:$c,ImageUtils:jn,IncrementStencilOp:Gt,IncrementWrapStencilOp:Wt,InstancedBufferAttribute:ba,InstancedBufferGeometry:xu,InstancedInterleavedBuffer:dh,InstancedMesh:Ea,Int16BufferAttribute:zr,Int32BufferAttribute:Hr,Int8BufferAttribute:Br,IntType:xe,InterleavedBuffer:Fs,InterleavedBufferAttribute:Os,Interpolant:wc,InterpolateDiscrete:_t,InterpolateLinear:Tt,InterpolateSmooth:St,InterpolationSamplingMode:hn,InterpolationSamplingType:un,InvertStencilOp:Xt,KeepStencilOp:Vt,KeyframeTrack:Rc,LOD:na,LatheGeometry:ql,Layers:Hi,LessCompare:Kt,LessDepth:2,LessEqualCompare:Zt,LessEqualDepth:3,LessEqualStencilFunc:515,LessStencilFunc:513,Light:Zc,LightProbe:vu,Line:ho,Line3:Lh,LineBasicMaterial:io,LineCurve:sl,LineCurve3:al,LineDashedMaterial:vc,LineLoop:vo,LineSegments:go,LinearFilter:de,LinearInterpolant:Ec,LinearMipMapLinearFilter:fe,LinearMipMapNearestFilter:1007,LinearMipmapLinearFilter:me,LinearMipmapNearestFilter:pe,LinearSRGBColorSpace:Ot,LinearToneMapping:1,LinearTransfer:Bt,Loader:zc,LoaderUtils:yu,LoadingManager:kc,LoopOnce:bt,LoopPingPong:xt,LoopRepeat:yt,MOUSE:i,Material:Ar,MaterialLoader:bu,MathUtils:Sn,Matrix2:Th,Matrix3:Cn,Matrix4:Li,MaxEquation:x,Mesh:ds,MeshBasicMaterial:Rr,MeshDepthMaterial:mc,MeshDistanceMaterial:fc,MeshLambertMaterial:pc,MeshMatcapMaterial:gc,MeshNormalMaterial:dc,MeshPhongMaterial:uc,MeshPhysicalMaterial:cc,MeshStandardMaterial:lc,MeshToonMaterial:hc,MinEquation:y,MirroredRepeatWrapping:le,MixOperation:1,MultiplyBlending:4,MultiplyOperation:0,NearestFilter:ce,NearestMipMapLinearFilter:1005,NearestMipMapNearestFilter:1004,NearestMipmapLinearFilter:he,NearestMipmapNearestFilter:ue,NeutralToneMapping:7,NeverCompare:Yt,NeverDepth:0,NeverStencilFunc:512,NoBlending:0,NoColorSpace:Ft,NoToneMapping:0,NormalAnimationBlendMode:At,NormalBlending:1,NotEqualCompare:en,NotEqualDepth:7,NotEqualStencilFunc:517,NumberKeyframeTrack:Pc,Object3D:sr,ObjectLoader:Tu,ObjectSpaceNormalMap:1,OctahedronGeometry:$l,OneFactor:T,OneMinusConstantAlphaFactor:214,OneMinusConstantColorFactor:212,OneMinusDstAlphaFactor:R,OneMinusDstColorFactor:N,OneMinusSrcAlphaFactor:E,OneMinusSrcColorFactor:w,OrthographicCamera:hu,PCFShadowMap:1,PCFSoftShadowMap:2,PMREMGenerator:Vd,Path:dl,PerspectiveCamera:ws,Plane:Na,PlaneGeometry:Yl,PlaneHelper:rd,PointLight:uu,PointLightHelper:Vh,Points:So,PointsMaterial:bo,PolarGridHelper:Xh,PolyhedronGeometry:Bo,PositionalAudio:$u,PropertyBinding:ih,PropertyMixer:Ku,QuadraticBezierCurve:ol,QuadraticBezierCurve3:ll,Quaternion:Mn,QuaternionKeyframeTrack:Ic,QuaternionLinearInterpolant:Lc,RED_GREEN_RGTC2_Format:gt,RED_RGTC1_Format:mt,REVISION:n,RGBADepthPacking:It,RGBAFormat:Pe,RGBAIntegerFormat:ke,RGBA_ASTC_10x10_Format:lt,RGBA_ASTC_10x5_Format:st,RGBA_ASTC_10x6_Format:at,RGBA_ASTC_10x8_Format:ot,RGBA_ASTC_12x10_Format:ct,RGBA_ASTC_12x12_Format:ut,RGBA_ASTC_4x4_Format:Qe,RGBA_ASTC_5x4_Format:Ze,RGBA_ASTC_5x5_Format:Je,RGBA_ASTC_6x5_Format:et,RGBA_ASTC_6x6_Format:tt,RGBA_ASTC_8x5_Format:nt,RGBA_ASTC_8x6_Format:it,RGBA_ASTC_8x8_Format:rt,RGBA_BPTC_Format:ht,RGBA_ETC2_EAC_Format:Ke,RGBA_PVRTC_2BPPV1_Format:qe,RGBA_PVRTC_4BPPV1_Format:Xe,RGBA_S3TC_DXT1_Format:ze,RGBA_S3TC_DXT3_Format:Ge,RGBA_S3TC_DXT5_Format:He,RGBDepthPacking:3202,RGBFormat:Ne,RGBIntegerFormat:Be,RGB_BPTC_SIGNED_Format:dt,RGB_BPTC_UNSIGNED_Format:pt,RGB_ETC1_Format:$e,RGB_ETC2_Format:Ye,RGB_PVRTC_2BPPV1_Format:je,RGB_PVRTC_4BPPV1_Format:We,RGB_S3TC_DXT1_Format:Ve,RGDepthPacking:3203,RGFormat:Ue,RGIntegerFormat:Oe,RawShaderMaterial:oc,Ray:Pi,Raycaster:fh,RectAreaLight:fu,RedFormat:De,RedIntegerFormat:Fe,ReinhardToneMapping:2,RenderTarget:Jn,RenderTarget3D:lh,RepeatWrapping:ae,ReplaceStencilOp:zt,ReverseSubtractEquation:b,RingGeometry:Kl,SIGNED_RED_GREEN_RGTC2_Format:vt,SIGNED_RED_RGTC1_Format:ft,SRGBColorSpace:Ut,SRGBTransfer:kt,Scene:Ds,ShaderChunk:gd,ShaderLib:bd,ShaderMaterial:ys,ShadowMaterial:ac,Shape:pl,ShapeGeometry:Ql,ShapePath:ud,ShapeUtils:zl,ShortType:be,Skeleton:va,SkeletonHelper:Bh,SkinnedMesh:da,Source:qn,Sphere:Si,SphereGeometry:Zl,Spherical:xh,SphericalHarmonics3:gu,SplineCurve:cl,SpotLight:su,SpotLightHelper:Dh,Sprite:Zs,SpriteMaterial:Bs,SrcAlphaFactor:M,SrcAlphaSaturateFactor:P,SrcColorFactor:S,StaticCopyUsage:35046,StaticDrawUsage:rn,StaticReadUsage:35045,StereoCamera:Du,StreamCopyUsage:35042,StreamDrawUsage:35040,StreamReadUsage:35041,StringKeyframeTrack:Dc,SubtractEquation:v,SubtractiveBlending:3,TOUCH:r,TangentSpaceNormalMap:0,TetrahedronGeometry:Jl,Texture:Qn,TextureLoader:Qc,TextureUtils:pd,Timer:bh,TimestampQuery:cn,TorusGeometry:ec,TorusKnotGeometry:tc,Triangle:yr,TriangleFanDrawMode:2,TriangleStripDrawMode:1,TrianglesDrawMode:0,TubeGeometry:nc,UVMapping:ee,Uint16BufferAttribute:Gr,Uint32BufferAttribute:Wr,Uint8BufferAttribute:kr,Uint8ClampedBufferAttribute:Vr,Uniform:ch,UniformsGroup:hh,UniformsLib:vd,UniformsUtils:bs,UnsignedByteType:ge,UnsignedInt101111Type:Re,UnsignedInt248Type:Ee,UnsignedInt5999Type:Ae,UnsignedIntType:_e,UnsignedShort4444Type:we,UnsignedShort5551Type:Me,UnsignedShortType:ye,VSMShadowMap:3,Vector2:wn,Vector3:En,Vector4:Zn,VectorKeyframeTrack:Fc,VideoFrameTexture:Eo,VideoTexture:Mo,WebGL3DRenderTarget:ri,WebGLArrayRenderTarget:ni,WebGLCoordinateSystem:on,WebGLCubeRenderTarget:Rs,WebGLRenderTarget:ei,WebGLRenderer:Km,WebGLUtils:Hm,WebGPUCoordinateSystem:ln,WebXRController:Ps,WireframeGeometry:ic,WrapAroundEnding:Et,ZeroCurvatureEnding:wt,ZeroFactor:_,ZeroSlopeEnding:Mt,ZeroStencilOp:0,createCanvasElement:Fn},Symbol.toStringTag,{value:"Module"}));class Zm{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Jm=new hu(-1,1,1,-1,0,1);const ef=new class extends es{constructor(){super(),this.setAttribute("position",new Xr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Xr([0,2,0,0,2,0],2))}};class tf{constructor(e){this._mesh=new ds(ef,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Jm)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}const nf={type:"change"},rf={type:"start"},sf={type:"end"},af=new Pi,of=new Na,lf=Math.cos(70*Sn.DEG2RAD),cf=new En,uf=2*Math.PI,hf=-1,df=0,pf=1,mf=2,ff=3,gf=4,vf=5,bf=6,yf=1e-6;class xf extends hd{constructor(e,t=null){super(e,t),this.state=hf,this.target=new En,this.cursor=new En,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:i.ROTATE,MIDDLE:i.DOLLY,RIGHT:i.PAN},this.touches={ONE:r.ROTATE,TWO:r.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new En,this._lastQuaternion=new Mn,this._lastTargetPosition=new En,this._quat=(new Mn).setFromUnitVectors(e.up,new En(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new xh,this._sphericalDelta=new xh,this._scale=1,this._panOffset=new En,this._rotateStart=new wn,this._rotateEnd=new wn,this._rotateDelta=new wn,this._panStart=new wn,this._panEnd=new wn,this._panDelta=new wn,this._dollyStart=new wn,this._dollyEnd=new wn,this._dollyDelta=new wn,this._dollyDirection=new En,this._mouse=new wn,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Tf.bind(this),this._onPointerDown=_f.bind(this),this._onPointerUp=Sf.bind(this),this._onContextMenu=Nf.bind(this),this._onMouseWheel=Ef.bind(this),this._onKeyDown=Af.bind(this),this._onTouchStart=Rf.bind(this),this._onTouchMove=Cf.bind(this),this._onMouseDown=wf.bind(this),this._onMouseMove=Mf.bind(this),this._interceptControlDown=Pf.bind(this),this._interceptControlUp=Lf.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(nf),this.update(),this.state=hf}update(e=null){const t=this.object.position;cf.copy(t).sub(this.target),cf.applyQuaternion(this._quat),this._spherical.setFromVector3(cf),this.autoRotate&&this.state===hf&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=uf:n>Math.PI&&(n-=uf),i<-Math.PI?i+=uf:i>Math.PI&&(i-=uf),this._spherical.theta=n<=i?Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const e=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=e!=this._spherical.radius}if(cf.setFromSpherical(this._spherical),cf.applyQuaternion(this._quatInverse),t.copy(this.target).add(cf),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let e=null;if(this.object.isPerspectiveCamera){const t=cf.length();e=this._clampDistance(t*this._scale);const n=t-e;this.object.position.addScaledVector(this._dollyDirection,n),this.object.updateMatrixWorld(),r=!!n}else if(this.object.isOrthographicCamera){const t=new En(this._mouse.x,this._mouse.y,0);t.unproject(this.object);const n=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=n!==this.object.zoom;const i=new En(this._mouse.x,this._mouse.y,0);i.unproject(this.object),this.object.position.sub(i).add(t),this.object.updateMatrixWorld(),e=cf.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==e&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(e).add(this.object.position):(af.origin.copy(this.object.position),af.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(af.direction))<lf?this.object.lookAt(this.target):(of.setFromNormalAndCoplanarPoint(this.object.up,this.target),af.intersectPlane(of,this.target))))}else if(this.object.isOrthographicCamera){const e=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),e!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,!!(r||this._lastPosition.distanceToSquared(this.object.position)>yf||8*(1-this._lastQuaternion.dot(this.object.quaternion))>yf||this._lastTargetPosition.distanceToSquared(this.target)>yf)&&(this.dispatchEvent(nf),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(e){return null!==e?uf/60*this.autoRotateSpeed*e:uf/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(.01*e);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){cf.setFromMatrixColumn(t,0),cf.multiplyScalar(-e),this._panOffset.add(cf)}_panUp(e,t){!0===this.screenSpacePanning?cf.setFromMatrixColumn(t,1):(cf.setFromMatrixColumn(t,0),cf.crossVectors(this.object.up,cf)),cf.multiplyScalar(e),this._panOffset.add(cf)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;cf.copy(i).sub(this.target);let r=cf.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=e-n.left,r=t-n.top,s=n.width,a=n.height;this._mouse.x=i/s*2-1,this._mouse.y=-r/a*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(uf*this._rotateDelta.x/t.clientHeight),this._rotateUp(uf*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(uf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-uf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(uf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-uf*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(1===this._pointers.length)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(1===this._pointers.length)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(1==this._pointers.length)this._rotateEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateEnd.set(n,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(uf*this._rotateDelta.x/t.clientHeight),this._rotateUp(uf*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(1===this._pointers.length)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const s=.5*(e.pageX+t.x),a=.5*(e.pageY+t.y);this._updateZoomParameters(s,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return void this._pointers.splice(t,1)}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];void 0===t&&(t=new wn,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function _f(e){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(e)||(this._addPointer(e),"touch"===e.pointerType?this._onTouchStart(e):this._onMouseDown(e)))}function Tf(e){!1!==this.enabled&&("touch"===e.pointerType?this._onTouchMove(e):this._onMouseMove(e))}function Sf(e){switch(this._removePointer(e),this._pointers.length){case 0:this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(sf),this.state=hf;break;case 1:const t=this._pointers[0],n=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:n.x,pageY:n.y})}}function wf(e){let t;switch(e.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case i.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(e),this.state=pf;break;case i.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=mf}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=df}break;case i.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=df}else{if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=mf}break;default:this.state=hf}this.state!==hf&&this.dispatchEvent(rf)}function Mf(e){switch(this.state){case df:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(e);break;case pf:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(e);break;case mf:if(!1===this.enablePan)return;this._handleMouseMovePan(e)}}function Ef(e){!1!==this.enabled&&!1!==this.enableZoom&&this.state===hf&&(e.preventDefault(),this.dispatchEvent(rf),this._handleMouseWheel(this._customWheelEvent(e)),this.dispatchEvent(sf))}function Af(e){!1!==this.enabled&&this._handleKeyDown(e)}function Rf(e){switch(this._trackPointer(e),this._pointers.length){case 1:switch(this.touches.ONE){case r.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(e),this.state=ff;break;case r.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(e),this.state=gf;break;default:this.state=hf}break;case 2:switch(this.touches.TWO){case r.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(e),this.state=vf;break;case r.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(e),this.state=bf;break;default:this.state=hf}break;default:this.state=hf}this.state!==hf&&this.dispatchEvent(rf)}function Cf(e){switch(this._trackPointer(e),this.state){case ff:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(e),this.update();break;case gf:if(!1===this.enablePan)return;this._handleTouchMovePan(e),this.update();break;case vf:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(e),this.update();break;case bf:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(e),this.update();break;default:this.state=hf}}function Nf(e){!1!==this.enabled&&e.preventDefault()}function Pf(e){if("Control"===e.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function Lf(e){if("Control"===e.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function If(e,t,n){const i=n.length-e-1;if(t>=n[i])return i-1;if(t<=n[e])return e;let r=e,s=i,a=Math.floor((r+s)/2);for(;t<n[a]||t>=n[a+1];)t<n[a]?s=a:r=a,a=Math.floor((r+s)/2);return a}function Df(e,t){let n=1;for(let r=2;r<=e;++r)n*=r;let i=1;for(let r=2;r<=t;++r)i*=r;for(let r=2;r<=e-t;++r)i*=r;return n/i}function Ff(e,t,n,i,r){const s=function(e,t,n,i,r){const s=r<e?r:e,a=[],o=If(e,i,t),l=function(e,t,n,i,r){const s=[];for(let h=0;h<=n;++h)s[h]=0;const a=[];for(let h=0;h<=i;++h)a[h]=s.slice(0);const o=[];for(let h=0;h<=n;++h)o[h]=s.slice(0);o[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let h=1;h<=n;++h){l[h]=t-r[e+1-h],c[h]=r[e+h]-t;let n=0;for(let e=0;e<h;++e){const t=c[e+1],i=l[h-e];o[h][e]=t+i;const r=o[e][h-1]/o[h][e];o[e][h]=n+t*r,n=i*r}o[h][h]=n}for(let h=0;h<=n;++h)a[0][h]=o[h][n];for(let h=0;h<=n;++h){let e=0,t=1;const r=[];for(let i=0;i<=n;++i)r[i]=s.slice(0);r[0][0]=1;for(let s=1;s<=i;++s){let i=0;const l=h-s,c=n-s;h>=s&&(r[t][0]=r[e][0]/o[c+1][l],i=r[t][0]*o[l][c]);const u=h-1<=c?s-1:n-h;for(let n=l>=-1?1:-l;n<=u;++n)r[t][n]=(r[e][n]-r[e][n-1])/o[c+1][l+n],i+=r[t][n]*o[l+n][c];h<=c&&(r[t][s]=-r[e][s-1]/o[c+1][h],i+=r[t][s]*o[h][c]),a[s][h]=i;const d=e;e=t,t=d}}let u=n;for(let h=1;h<=i;++h){for(let e=0;e<=n;++e)a[h][e]*=u;u*=n-h}return a}(o,i,e,s,t),c=[];for(let u=0;u<n.length;++u){const e=n[u].clone(),t=e.w;e.x*=t,e.y*=t,e.z*=t,c[u]=e}for(let u=0;u<=s;++u){const t=c[o-e].clone().multiplyScalar(l[u][0]);for(let n=1;n<=e;++n)t.add(c[o-e+n].clone().multiplyScalar(l[u][n]));a[u]=t}for(let u=s+1;u<=r+1;++u)a[u]=new Zn(0,0,0);return a}(e,t,n,i,r);return function(e){const t=e.length,n=[],i=[];for(let s=0;s<t;++s){const t=e[s];n[s]=new En(t.x,t.y,t.z),i[s]=t.w}const r=[];for(let s=0;s<t;++s){const e=n[s].clone();for(let t=1;t<=s;++t)e.sub(r[s-t].clone().multiplyScalar(Df(s,t)*i[t]));r[s]=e.divideScalar(i[0])}return r}(s)}class Uf extends jo{constructor(e,t,n,i,r){super();const s=t?t.length-1:0,a=n?n.length:0;this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=r||s;for(let o=0;o<a;++o){const e=n[o];this.controlPoints[o]=new Zn(e.x,e.y,e.z,e.w)}}getPoint(e,t=new En){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=function(e,t,n,i){const r=If(e,i,t),s=function(e,t,n,i){const r=[],s=[],a=[];r[0]=1;for(let o=1;o<=n;++o){s[o]=t-i[e+1-o],a[o]=i[e+o]-t;let n=0;for(let e=0;e<o;++e){const t=a[e+1],i=s[o-e],l=r[e]/(t+i);r[e]=n+t*l,n=i*l}r[o]=n}return r}(r,i,e,t),a=new Zn(0,0,0,0);for(let o=0;o<=e;++o){const t=n[r-e+o],i=s[o],l=t.w*i;a.x+=t.x*l,a.y+=t.y*l,a.z+=t.z*l,a.w+=t.w*i}return a}(this.degree,this.knots,this.controlPoints,i);return 1!==r.w&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)}getTangent(e,t=new En){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),r=Ff(this.degree,this.knots,this.controlPoints,i,1);return n.copy(r[1]).normalize(),n}toJSON(){const e=super.toJSON();return e.degree=this.degree,e.knots=[...this.knots],e.controlPoints=this.controlPoints.map(e=>e.toArray()),e.startKnot=this.startKnot,e.endKnot=this.endKnot,e}fromJSON(e){return super.fromJSON(e),this.degree=e.degree,this.knots=[...e.knots],this.controlPoints=e.controlPoints.map(e=>new Zn(e[0],e[1],e[2],e[3])),this.startKnot=e.startKnot,this.endKnot=e.endKnot,this}}class Of extends Ds{constructor(){super();const e=new ms;e.deleteAttribute("uv");const t=new lc({side:1}),n=new lc,i=new uu(16777215,900,28,2);i.position.set(.418,16.199,.3),this.add(i);const r=new ds(e,t);r.position.set(-.757,13.219,.717),r.scale.set(31.713,28.305,28.591),this.add(r);const s=new Ea(e,n,6),a=new sr;a.position.set(-10.906,2.009,1.846),a.rotation.set(0,-.195,0),a.scale.set(2.328,7.905,4.651),a.updateMatrix(),s.setMatrixAt(0,a.matrix),a.position.set(-5.607,-.754,-.758),a.rotation.set(0,.994,0),a.scale.set(1.97,1.534,3.955),a.updateMatrix(),s.setMatrixAt(1,a.matrix),a.position.set(6.167,.857,7.803),a.rotation.set(0,.561,0),a.scale.set(3.927,6.285,3.687),a.updateMatrix(),s.setMatrixAt(2,a.matrix),a.position.set(-2.017,.018,6.124),a.rotation.set(0,.333,0),a.scale.set(2.002,4.566,2.064),a.updateMatrix(),s.setMatrixAt(3,a.matrix),a.position.set(2.291,-.756,-2.621),a.rotation.set(0,-.286,0),a.scale.set(1.546,1.552,1.496),a.updateMatrix(),s.setMatrixAt(4,a.matrix),a.position.set(-2.193,-.369,-5.547),a.rotation.set(0,.516,0),a.scale.set(3.875,3.487,2.986),a.updateMatrix(),s.setMatrixAt(5,a.matrix),this.add(s);const o=new ds(e,Bf(50));o.position.set(-16.116,14.37,8.208),o.scale.set(.1,2.428,2.739),this.add(o);const l=new ds(e,Bf(50));l.position.set(-16.109,18.021,-8.207),l.scale.set(.1,2.425,2.751),this.add(l);const c=new ds(e,Bf(17));c.position.set(14.904,12.198,-1.832),c.scale.set(.15,4.265,6.331),this.add(c);const u=new ds(e,Bf(43));u.position.set(-.462,8.89,14.52),u.scale.set(4.38,5.441,.088),this.add(u);const h=new ds(e,Bf(20));h.position.set(3.235,11.486,-12.541),h.scale.set(2.5,2,.1),this.add(h);const d=new ds(e,Bf(100));d.position.set(0,20,0),d.scale.set(1,.1,1),this.add(d)}dispose(){const e=new Set;this.traverse(t=>{t.isMesh&&(e.add(t.geometry),e.add(t.material))});for(const t of e)t.dispose()}}function Bf(e){return new pc({color:0,emissive:16777215,emissiveIntensity:e})}
/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.8.2
*/var kf=Uint8Array,Vf=Uint16Array,zf=Int32Array,Gf=new kf([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Hf=new kf([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Wf=new kf([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),jf=function(e,t){for(var n=new Vf(31),i=0;i<31;++i)n[i]=t+=1<<e[i-1];var r=new zf(n[30]);for(i=1;i<30;++i)for(var s=n[i];s<n[i+1];++s)r[s]=s-n[i]<<5|i;return{b:n,r:r}},Xf=jf(Gf,2),qf=Xf.b,$f=Xf.r;qf[28]=258,$f[258]=28;for(var Yf=jf(Hf,0).b,Kf=new Vf(32768),Qf=0;Qf<32768;++Qf){var Zf=(43690&Qf)>>1|(21845&Qf)<<1;Zf=(61680&(Zf=(52428&Zf)>>2|(13107&Zf)<<2))>>4|(3855&Zf)<<4,Kf[Qf]=((65280&Zf)>>8|(255&Zf)<<8)>>1}var Jf=function(e,t,n){for(var i=e.length,r=0,s=new Vf(t);r<i;++r)e[r]&&++s[e[r]-1];var a,o=new Vf(t);for(r=1;r<t;++r)o[r]=o[r-1]+s[r-1]<<1;if(n){a=new Vf(1<<t);var l=15-t;for(r=0;r<i;++r)if(e[r])for(var c=r<<4|e[r],u=t-e[r],h=o[e[r]-1]++<<u,d=h|(1<<u)-1;h<=d;++h)a[Kf[h]>>l]=c}else for(a=new Vf(i),r=0;r<i;++r)e[r]&&(a[r]=Kf[o[e[r]-1]++]>>15-e[r]);return a},eg=new kf(288);for(Qf=0;Qf<144;++Qf)eg[Qf]=8;for(Qf=144;Qf<256;++Qf)eg[Qf]=9;for(Qf=256;Qf<280;++Qf)eg[Qf]=7;for(Qf=280;Qf<288;++Qf)eg[Qf]=8;var tg=new kf(32);for(Qf=0;Qf<32;++Qf)tg[Qf]=5;var ng=Jf(eg,9,1),ig=Jf(tg,5,1),rg=function(e){for(var t=e[0],n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t},sg=function(e,t,n){var i=t/8|0;return(e[i]|e[i+1]<<8)>>(7&t)&n},ag=function(e,t){var n=t/8|0;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>(7&t)},og=function(e){return(e+7)/8|0},lg=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],cg=function(e,t,n){var i=new Error(t||lg[e]);if(i.code=e,Error.captureStackTrace&&Error.captureStackTrace(i,cg),!n)throw i;return i},ug=function(e,t,n,i){var r=e.length;if(!r||t.f&&!t.l)return n||new kf(0);var s=!n,a=s||2!=t.i,o=t.i;s&&(n=new kf(3*r));var l=function(e){var t=n.length;if(e>t){var i=new kf(Math.max(2*t,e));i.set(n),n=i}},c=t.f||0,u=t.p||0,h=t.b||0,d=t.l,p=t.d,m=t.m,f=t.n,g=8*r;do{if(!d){c=sg(e,u,1);var v=sg(e,u+1,3);if(u+=3,!v){var b=e[(C=og(u)+4)-4]|e[C-3]<<8,y=C+b;if(y>r){o&&cg(0);break}a&&l(h+b),n.set(e.subarray(C,y),h),t.b=h+=b,t.p=u=8*y,t.f=c;continue}if(1==v)d=ng,p=ig,m=9,f=5;else if(2==v){var x=sg(e,u,31)+257,_=sg(e,u+10,15)+4,T=x+sg(e,u+5,31)+1;u+=14;for(var S=new kf(T),w=new kf(19),M=0;M<_;++M)w[Wf[M]]=sg(e,u+3*M,7);u+=3*_;var E=rg(w),A=(1<<E)-1,R=Jf(w,E,1);for(M=0;M<T;){var C,N=R[sg(e,u,A)];if(u+=15&N,(C=N>>4)<16)S[M++]=C;else{var P=0,L=0;for(16==C?(L=3+sg(e,u,3),u+=2,P=S[M-1]):17==C?(L=3+sg(e,u,7),u+=3):18==C&&(L=11+sg(e,u,127),u+=7);L--;)S[M++]=P}}var I=S.subarray(0,x),D=S.subarray(x);m=rg(I),f=rg(D),d=Jf(I,m,1),p=Jf(D,f,1)}else cg(1);if(u>g){o&&cg(0);break}}a&&l(h+131072);for(var F=(1<<m)-1,U=(1<<f)-1,O=u;;O=u){var B=(P=d[ag(e,u)&F])>>4;if((u+=15&P)>g){o&&cg(0);break}if(P||cg(2),B<256)n[h++]=B;else{if(256==B){O=u,d=null;break}var k=B-254;if(B>264){var V=Gf[M=B-257];k=sg(e,u,(1<<V)-1)+qf[M],u+=V}var z=p[ag(e,u)&U],G=z>>4;z||cg(3),u+=15&z;D=Yf[G];if(G>3){V=Hf[G];D+=ag(e,u)&(1<<V)-1,u+=V}if(u>g){o&&cg(0);break}a&&l(h+131072);var H=h+k;if(h<D){var W=0-D,j=Math.min(D,H);for(W+h<0&&cg(3);h<j;++h)n[h]=i[W+h]}for(;h<H;++h)n[h]=n[h-D]}}t.l=d,t.p=O,t.b=h,t.f=c,d&&(c=1,t.m=m,t.d=p,t.n=f)}while(!c);return h!=n.length&&s?function(e,t,n){return(null==n||n>e.length)&&(n=e.length),new kf(e.subarray(t,n))}(n,0,h):n.subarray(0,h)},hg=new kf(0);function dg(e,t){return ug(e.subarray(function(e){return(8!=(15&e[0])||e[0]>>4>7||(e[0]<<8|e[1])%31)&&cg(6,"invalid zlib data"),1==(e[1]>>5&1)&&cg(6,"invalid zlib data: "+(32&e[1]?"need":"unexpected")+" dictionary"),2+(e[1]>>3&4)}(e),-4),{i:2},t,t)}var pg="undefined"!=typeof TextDecoder&&new TextDecoder;try{pg.decode(hg,{stream:!0})}catch(p3){}class mg extends es{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super();const a=e/2,o=t/2,l=n/2,c=e/(i=Math.floor(i)),u=t/(r=Math.floor(r)),h=n/(s=Math.floor(s)),d=[];let p=-a,m=-o,f=-l;for(let g=0;g<=i;g++)d.push(p,-o,-l,p,o,-l),d.push(p,o,-l,p,o,l),d.push(p,o,l,p,-o,l),d.push(p,-o,l,p,-o,-l),p+=c;for(let g=0;g<=r;g++)d.push(-a,m,-l,a,m,-l),d.push(a,m,-l,a,m,l),d.push(a,m,l,-a,m,l),d.push(-a,m,l,-a,m,-l),m+=u;for(let g=0;g<=s;g++)d.push(-a,-o,f,-a,o,f),d.push(-a,o,f,a,o,f),d.push(a,o,f,a,-o,f),d.push(a,-o,f,-a,-o,f),f+=h;this.setAttribute("position",new Xr(d,3))}}const fg=new En;function gg(e,t,n,i,r,s){const a=2*Math.PI*r/4,o=Math.max(s-2*r,0),l=Math.PI/4;fg.copy(t),fg[i]=0,fg.normalize();const c=.5*a/(a+o),u=1-fg.angleTo(e)/l;if(1===Math.sign(fg[n]))return u*c;return o/(a+o)+c+c*(1-u)}class vg extends ms{constructor(e=1,t=1,n=1,i=2,r=.1){const s=2*i+1;if(r=Math.min(e/2,t/2,n/2,r),super(1,1,1,s,s,s),this.type="RoundedBoxGeometry",this.parameters={width:e,height:t,depth:n,segments:i,radius:r},1===s)return;const a=this.toNonIndexed();this.index=null,this.attributes.position=a.attributes.position,this.attributes.normal=a.attributes.normal,this.attributes.uv=a.attributes.uv;const o=new En,l=new En,c=new En(e,t,n).divideScalar(2).subScalar(r),u=this.attributes.position.array,h=this.attributes.normal.array,d=this.attributes.uv.array,p=u.length/6,m=new En,f=.5/s;for(let g=0,v=0;g<u.length;g+=3,v+=2){o.fromArray(u,g),l.copy(o),l.x-=Math.sign(l.x)*f,l.y-=Math.sign(l.y)*f,l.z-=Math.sign(l.z)*f,l.normalize(),u[g+0]=c.x*Math.sign(o.x)+l.x*r,u[g+1]=c.y*Math.sign(o.y)+l.y*r,u[g+2]=c.z*Math.sign(o.z)+l.z*r,h[g+0]=l.x,h[g+1]=l.y,h[g+2]=l.z;switch(Math.floor(g/p)){case 0:m.set(1,0,0),d[v+0]=gg(m,l,"z","y",r,n),d[v+1]=1-gg(m,l,"y","z",r,t);break;case 1:m.set(-1,0,0),d[v+0]=1-gg(m,l,"z","y",r,n),d[v+1]=1-gg(m,l,"y","z",r,t);break;case 2:m.set(0,1,0),d[v+0]=1-gg(m,l,"x","z",r,e),d[v+1]=gg(m,l,"z","x",r,n);break;case 3:m.set(0,-1,0),d[v+0]=1-gg(m,l,"x","z",r,e),d[v+1]=1-gg(m,l,"z","x",r,n);break;case 4:m.set(0,0,1),d[v+0]=1-gg(m,l,"x","y",r,e),d[v+1]=1-gg(m,l,"y","x",r,t);break;case 5:m.set(0,0,-1),d[v+0]=gg(m,l,"x","y",r,e),d[v+1]=1-gg(m,l,"y","x",r,t)}}}static fromJSON(e){return new vg(e.width,e.height,e.depth,e.segments,e.radius)}}class bg extends Wl{constructor(e,t={}){const n=t.font;if(void 0===n)super();else{const i=n.generateShapes(e,t.size);void 0===t.depth&&(t.depth=50),void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(i,t)}this.type="TextGeometry"}}function yg(e,t=!1){const n=null!==e[0].index,i=new Set(Object.keys(e[0].attributes)),r=new Set(Object.keys(e[0].morphAttributes)),s={},a={},o=e[0].morphTargetsRelative,l=new es;let c=0;for(let u=0;u<e.length;++u){const h=e[u];let d=0;if(n!==(null!==h.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const e in h.attributes){if(!i.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+e+'" attribute exists among all geometries, or in none of them.'),null;void 0===s[e]&&(s[e]=[]),s[e].push(h.attributes[e]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(o!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const e in h.morphAttributes){if(!r.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===a[e]&&(a[e]=[]),a[e].push(h.morphAttributes[e])}if(t){let e;if(n)e=h.index.count;else{if(void 0===h.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;e=h.attributes.position.count}l.addGroup(c,e,u),c+=e}}if(n){let t=0;const n=[];for(let i=0;i<e.length;++i){const r=e[i].index;for(let e=0;e<r.count;++e)n.push(r.getX(e)+t);t+=e[i].attributes.position.count}l.setIndex(n)}for(const u in s){const e=xg(s[u]);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" attribute."),null;l.setAttribute(u,e)}for(const u in a){const e=a[u][0].length;if(0===e)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[u]=[];for(let t=0;t<e;++t){const e=[];for(let i=0;i<a[u].length;++i)e.push(a[u][i][t]);const n=xg(e);if(!n)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" morphAttribute."),null;l.morphAttributes[u].push(n)}}return l}function xg(e){let t,n,i,r=-1,s=0;for(let c=0;c<e.length;++c){const a=e[c];if(void 0===t&&(t=a.array.constructor),t!==a.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===n&&(n=a.itemSize),n!==a.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===i&&(i=a.normalized),i!==a.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(-1===r&&(r=a.gpuType),r!==a.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;s+=a.count*n}const a=new t(s),o=new Or(a,n,i);let l=0;for(let c=0;c<e.length;++c){const t=e[c];if(t.isInterleavedBufferAttribute){const e=l/n;for(let i=0,r=t.count;i<r;i++)for(let s=0;s<n;s++){const n=t.getComponent(i,s);o.setComponent(i+e,s,n)}}else a.set(t.array,l);l+=t.count*n}return void 0!==r&&(o.gpuType=r),o}function _g(e){let t=0;for(const i in e.attributes){const n=e.getAttribute(i);t+=n.count*n.itemSize*n.array.BYTES_PER_ELEMENT}const n=e.getIndex();return t+=n?n.count*n.itemSize*n.array.BYTES_PER_ELEMENT:0,t}function Tg(e,t){if(0===t)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(2===t||1===t){let n=e.getIndex();if(null===n){const t=[],i=e.getAttribute("position");if(void 0===i)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(let e=0;e<i.count;e++)t.push(e);e.setIndex(t),n=e.getIndex()}const i=n.count-2,r=[];if(2===t)for(let e=1;e<=i;e++)r.push(n.getX(0)),r.push(n.getX(e)),r.push(n.getX(e+1));else for(let e=0;e<i;e++)e%2==0?(r.push(n.getX(e)),r.push(n.getX(e+1)),r.push(n.getX(e+2))):(r.push(n.getX(e+2)),r.push(n.getX(e+1)),r.push(n.getX(e)));r.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=e.clone();return s.setIndex(r),s.clearGroups(),s}return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e}function Sg(e,t=Math.PI/3){const n=Math.cos(t),i=100*(1+1e-10),r=[new En,new En,new En],s=new En,a=new En,o=new En,l=new En;function c(e){return`${~~(e.x*i)},${~~(e.y*i)},${~~(e.z*i)}`}const u=e.index?e.toNonIndexed():e,h=u.attributes.position,d={};for(let f=0,g=h.count/3;f<g;f++){const e=3*f,t=r[0].fromBufferAttribute(h,e+0),n=r[1].fromBufferAttribute(h,e+1),i=r[2].fromBufferAttribute(h,e+2);s.subVectors(i,n),a.subVectors(t,n);const o=(new En).crossVectors(s,a).normalize();for(let s=0;s<3;s++){const e=c(r[s]);e in d||(d[e]=[]),d[e].push(o)}}const p=new Float32Array(3*h.count),m=new Or(p,3,!1);for(let f=0,g=h.count/3;f<g;f++){const e=3*f,t=r[0].fromBufferAttribute(h,e+0),i=r[1].fromBufferAttribute(h,e+1),u=r[2].fromBufferAttribute(h,e+2);s.subVectors(u,i),a.subVectors(t,i),o.crossVectors(s,a).normalize();for(let s=0;s<3;s++){const t=d[c(r[s])];l.set(0,0,0);for(let e=0,i=t.length;e<i;e++){const i=t[e];o.dot(i)>n&&l.add(i)}l.normalize(),m.setXYZ(e+s,l.x,l.y,l.z)}}return u.setAttribute("normal",m),u}class wg extends ds{constructor(e){const t=new Mg(e),n=new Yl(.001*t.image.width,.001*t.image.height),i=new Rr({map:t,toneMapped:!1,transparent:!0});function r(e){i.map.dispatchDOMEvent(e)}super(n,i),this.addEventListener("mousedown",r),this.addEventListener("mousemove",r),this.addEventListener("mouseup",r),this.addEventListener("click",r),this.dispose=function(){n.dispose(),i.dispose(),i.map.dispose(),Eg.delete(e),this.removeEventListener("mousedown",r),this.removeEventListener("mousemove",r),this.removeEventListener("mouseup",r),this.removeEventListener("click",r)}}}class Mg extends Po{constructor(e){super(Ag(e)),this.dom=e,this.anisotropy=16,this.colorSpace=Ut,this.minFilter=de,this.magFilter=de,this.generateMipmaps=!1;const t=new MutationObserver(()=>{this.scheduleUpdate||(this.scheduleUpdate=setTimeout(()=>this.update(),16))});t.observe(e,{attributes:!0,childList:!0,subtree:!0,characterData:!0}),this.observer=t}dispatchDOMEvent(e){e.data&&function(e,t,n,i){const r={clientX:n*e.offsetWidth+e.offsetLeft,clientY:i*e.offsetHeight+e.offsetTop,view:e.ownerDocument.defaultView};window.dispatchEvent(new MouseEvent(t,r));const s=e.getBoundingClientRect();function a(e){if(e.nodeType!==Node.TEXT_NODE&&e.nodeType!==Node.COMMENT_NODE){const s=e.getBoundingClientRect();if(n>s.left&&n<s.right&&i>s.top&&i<s.bottom){if(e.dispatchEvent(new MouseEvent(t,r)),e instanceof HTMLInputElement&&"range"===e.type&&("mousedown"===t||"click"===t)){const[t,i]=["min","max"].map(t=>parseFloat(e[t])),r=s.width,a=(n-s.x)/r;e.value=t+(i-t)*a,e.dispatchEvent(new InputEvent("input",{bubbles:!0}))}!(e instanceof HTMLInputElement)||"text"!==e.type&&"number"!==e.type&&"email"!==e.type&&"password"!==e.type||"mousedown"!==t&&"click"!==t||e.focus()}for(let t=0;t<e.childNodes.length;t++)a(e.childNodes[t])}}n=n*s.width+s.left,i=i*s.height+s.top,a(e)}(this.dom,e.type,e.data.x,e.data.y)}update(){this.image=Ag(this.dom),this.needsUpdate=!0,this.scheduleUpdate=null}dispose(){this.observer&&this.observer.disconnect(),this.scheduleUpdate=clearTimeout(this.scheduleUpdate),super.dispose()}}const Eg=new WeakMap;function Ag(e){const t=document.createRange(),n=new wr;function i(e,t,n,i){""!==i&&("uppercase"===e.textTransform&&(i=i.toUpperCase()),l.font=e.fontWeight+" "+e.fontSize+" "+e.fontFamily,l.textBaseline="top",l.fillStyle=e.color,l.fillText(i,t,n+.1*parseFloat(e.fontSize)))}function r(e,t,n,i,r){n<2*r&&(r=n/2),i<2*r&&(r=i/2),l.beginPath(),l.moveTo(e+r,t),l.arcTo(e+n,t,e+n,t+i,r),l.arcTo(e+n,t+i,e,t+i,r),l.arcTo(e,t+i,e,t,r),l.arcTo(e,t,e+n,t,r),l.closePath()}function s(e,t,n,i,r,s){const a=e[t+"Width"],o=e[t+"Style"],c=e[t+"Color"];"0px"!==a&&"none"!==o&&"transparent"!==c&&"rgba(0, 0, 0, 0)"!==c&&(l.strokeStyle=c,l.lineWidth=parseFloat(a),l.beginPath(),l.moveTo(n,i),l.lineTo(n+r,i+s),l.stroke())}const a=e.getBoundingClientRect();let o=Eg.get(e);void 0===o&&(o=document.createElement("canvas"),o.width=a.width,o.height=a.height,Eg.set(e,o));const l=o.getContext("2d"),c=new function(e){const t=[];let n=!1;function i(){if(n&&(n=!1,e.restore()),0===t.length)return;let i=-1/0,r=-1/0,s=1/0,a=1/0;for(let e=0;e<t.length;e++){const n=t[e];i=Math.max(i,n.x),r=Math.max(r,n.y),s=Math.min(s,n.x+n.width),a=Math.min(a,n.y+n.height)}e.save(),e.beginPath(),e.rect(i,r,s-i,a-r),e.clip(),n=!0}return{add:function(e){t.push(e),i()},remove:function(){t.pop(),i()}}}(l);return l.clearRect(0,0,o.width,o.height),function e(o,u){if(o.nodeType===Node.COMMENT_NODE||"SCRIPT"===o.nodeName||o.style&&"none"===o.style.display)return;let h=0,d=0,p=0,m=0;if(o.nodeType===Node.TEXT_NODE){t.selectNode(o);const e=t.getBoundingClientRect();h=e.left-a.left-.5,d=e.top-a.top-.5,p=e.width,m=e.height,i(u,h,d,o.nodeValue.trim())}else if(o instanceof HTMLCanvasElement){const e=o.getBoundingClientRect();h=e.left-a.left-.5,d=e.top-a.top-.5,l.save();const t=window.devicePixelRatio;l.scale(1/t,1/t),l.drawImage(o,h,d),l.restore()}else if(o instanceof HTMLImageElement){const e=o.getBoundingClientRect();h=e.left-a.left-.5,d=e.top-a.top-.5,p=e.width,m=e.height,l.drawImage(o,h,d,p,m)}else{const e=o.getBoundingClientRect();h=e.left-a.left-.5,d=e.top-a.top-.5,p=e.width,m=e.height,u=window.getComputedStyle(o),r(h,d,p,m,parseFloat(u.borderRadius));const t=u.backgroundColor;"transparent"!==t&&"rgba(0, 0, 0, 0)"!==t&&(l.fillStyle=t,l.fill());const f=["borderTop","borderLeft","borderBottom","borderRight"];let g=!0,v=null;for(const n of f){if(null!==v&&(g=u[n+"Width"]===u[v+"Width"]&&u[n+"Color"]===u[v+"Color"]&&u[n+"Style"]===u[v+"Style"]),!1===g)break;v=n}if(!0===g){const e=parseFloat(u.borderTopWidth);"0px"!==u.borderTopWidth&&"none"!==u.borderTopStyle&&"transparent"!==u.borderTopColor&&"rgba(0, 0, 0, 0)"!==u.borderTopColor&&(l.strokeStyle=u.borderTopColor,l.lineWidth=e,l.stroke())}else s(u,"borderTop",h,d,p,0),s(u,"borderLeft",h,d,0,m),s(u,"borderBottom",h,d+m,p,0),s(u,"borderRight",h+p,d,0,m);if(o instanceof HTMLInputElement){let e=u.accentColor;void 0!==e&&"auto"!==e||(e=u.color),n.set(e);const t=Math.sqrt(.299*n.r**2+.587*n.g**2+.114*n.b**2)<.5?"white":"#111111";if("radio"===o.type&&(r(h,d,p,m,m),l.fillStyle="white",l.strokeStyle=e,l.lineWidth=1,l.fill(),l.stroke(),o.checked&&(r(h+2,d+2,p-4,m-4,m),l.fillStyle=e,l.strokeStyle=t,l.lineWidth=2,l.fill(),l.stroke())),"checkbox"===o.type&&(r(h,d,p,m,2),l.fillStyle=o.checked?e:"white",l.strokeStyle=o.checked?t:e,l.lineWidth=1,l.stroke(),l.fill(),o.checked)){const e=l.textAlign;l.textAlign="center";i({color:t,fontFamily:u.fontFamily,fontSize:m+"px",fontWeight:"bold"},h+p/2,d,"✔"),l.textAlign=e}if("range"===o.type){const[n,i,s]=["min","max","value"].map(e=>parseFloat(o[e])),a=(s-n)/(i-n)*(p-m);r(h,d+m/4,p,m/2,m/4),l.fillStyle=t,l.strokeStyle=e,l.lineWidth=1,l.fill(),l.stroke(),r(h,d+m/4,a+m/2,m/2,m/4),l.fillStyle=e,l.fill(),r(h+a,d,m,m,m/2),l.fillStyle=e,l.fill()}if("color"===o.type||"text"===o.type||"number"===o.type||"email"===o.type||"password"===o.type){c.add({x:h,y:d,width:p,height:m});const e="password"===o.type?"*".repeat(o.value.length):o.value;i(u,h+parseInt(u.paddingLeft),d+parseInt(u.paddingTop),e),c.remove()}}}const f="auto"===u.overflow||"hidden"===u.overflow;f&&c.add({x:h,y:d,width:p,height:m});for(let t=0;t<o.childNodes.length;t++)e(o.childNodes[t],u);f&&c.remove()}(e),o}const Rg=new wn,Cg={type:"",data:Rg},Ng={move:"mousemove",select:"click",selectstart:"mousedown",selectend:"mouseup"},Pg=new fh;class Lg extends Cs{constructor(){super(),this.raycaster=new fh,this.element=null,this.camera=null,this.controllers=[],this._onPointerEvent=this.onPointerEvent.bind(this),this._onXRControllerEvent=this.onXRControllerEvent.bind(this)}onPointerEvent(e){e.stopPropagation();const t=this.element.getBoundingClientRect();Rg.x=(e.clientX-t.left)/t.width*2-1,Rg.y=-(e.clientY-t.top)/t.height*2+1,this.raycaster.setFromCamera(Rg,this.camera);const n=this.raycaster.intersectObjects(this.children,!1);if(n.length>0){const t=n[0],i=t.object,r=t.uv;Cg.type=e.type,Cg.data.set(r.x,1-r.y),i.dispatchEvent(Cg)}}onXRControllerEvent(e){const t=e.target;Pg.setFromXRController(t);const n=Pg.intersectObjects(this.children,!1);if(n.length>0){const t=n[0],i=t.object,r=t.uv;Cg.type=Ng[e.type],Cg.data.set(r.x,1-r.y),i.dispatchEvent(Cg)}}listenToPointerEvents(e,t){this.camera=t,this.element=e.domElement,this.element.addEventListener("pointerdown",this._onPointerEvent),this.element.addEventListener("pointerup",this._onPointerEvent),this.element.addEventListener("pointermove",this._onPointerEvent),this.element.addEventListener("mousedown",this._onPointerEvent),this.element.addEventListener("mouseup",this._onPointerEvent),this.element.addEventListener("mousemove",this._onPointerEvent),this.element.addEventListener("click",this._onPointerEvent)}disconnectionPointerEvents(){null!==this.element&&(this.element.removeEventListener("pointerdown",this._onPointerEvent),this.element.removeEventListener("pointerup",this._onPointerEvent),this.element.removeEventListener("pointermove",this._onPointerEvent),this.element.removeEventListener("mousedown",this._onPointerEvent),this.element.removeEventListener("mouseup",this._onPointerEvent),this.element.removeEventListener("mousemove",this._onPointerEvent),this.element.removeEventListener("click",this._onPointerEvent))}listenToXRControllerEvents(e){this.controllers.push(e),e.addEventListener("move",this._onXRControllerEvent),e.addEventListener("select",this._onXRControllerEvent),e.addEventListener("selectstart",this._onXRControllerEvent),e.addEventListener("selectend",this._onXRControllerEvent)}disconnectXrControllerEvents(){for(const e of this.controllers)e.removeEventListener("move",this._onXRControllerEvent),e.removeEventListener("select",this._onXRControllerEvent),e.removeEventListener("selectstart",this._onXRControllerEvent),e.removeEventListener("selectend",this._onXRControllerEvent)}disconnect(){this.disconnectionPointerEvents(),this.disconnectXrControllerEvents(),this.camera=null,this.element=null,this.controllers=[]}}const Ig=new Da,Dg=new En,Fg=new En,Ug=new En,Og=new En,Bg=new En,kg=new En,Vg=new En,zg=new En,Gg=new En,Hg=new En,Wg=new En,jg=new En,Xg=new En,qg=new En,$g=new Li,Yg=new Mn,Kg=new En;class Qg{constructor(e,t,n=Number.MAX_VALUE){this.camera=e,this.scene=t,this.startPoint=new En,this.endPoint=new En,this.collection=[],this.instances={},this.deep=n}select(e,t){return this.startPoint=e||this.startPoint,this.endPoint=t||this.endPoint,this.collection=[],this._updateFrustum(this.startPoint,this.endPoint),this._searchChildInFrustum(Ig,this.scene),this.collection}_updateFrustum(e,t){if(e=e||this.startPoint,t=t||this.endPoint,e.x===t.x&&(t.x+=Number.EPSILON),e.y===t.y&&(t.y+=Number.EPSILON),this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld(),this.camera.isPerspectiveCamera){Fg.copy(e),Fg.x=Math.min(e.x,t.x),Fg.y=Math.max(e.y,t.y),t.x=Math.max(e.x,t.x),t.y=Math.min(e.y,t.y),Ug.setFromMatrixPosition(this.camera.matrixWorld),Og.copy(Fg),Bg.set(t.x,Fg.y,0),kg.copy(t),Vg.set(Fg.x,t.y,0),Og.unproject(this.camera),Bg.unproject(this.camera),kg.unproject(this.camera),Vg.unproject(this.camera),jg.copy(Og).sub(Ug),Xg.copy(Bg).sub(Ug),qg.copy(kg).sub(Ug),jg.normalize(),Xg.normalize(),qg.normalize(),jg.multiplyScalar(this.deep),Xg.multiplyScalar(this.deep),qg.multiplyScalar(this.deep),jg.add(Ug),Xg.add(Ug),qg.add(Ug);const n=Ig.planes;n[0].setFromCoplanarPoints(Ug,Og,Bg),n[1].setFromCoplanarPoints(Ug,Bg,kg),n[2].setFromCoplanarPoints(kg,Vg,Ug),n[3].setFromCoplanarPoints(Vg,Og,Ug),n[4].setFromCoplanarPoints(Bg,kg,Vg),n[5].setFromCoplanarPoints(qg,Xg,jg),n[5].normal.multiplyScalar(-1)}else if(this.camera.isOrthographicCamera){const n=Math.min(e.x,t.x),i=Math.max(e.y,t.y),r=Math.max(e.x,t.x),s=Math.min(e.y,t.y);Og.set(n,i,-1),Bg.set(r,i,-1),kg.set(r,s,-1),Vg.set(n,s,-1),zg.set(n,i,1),Gg.set(r,i,1),Hg.set(r,s,1),Wg.set(n,s,1),Og.unproject(this.camera),Bg.unproject(this.camera),kg.unproject(this.camera),Vg.unproject(this.camera),zg.unproject(this.camera),Gg.unproject(this.camera),Hg.unproject(this.camera),Wg.unproject(this.camera);const a=Ig.planes;a[0].setFromCoplanarPoints(Og,zg,Gg),a[1].setFromCoplanarPoints(Bg,Gg,Hg),a[2].setFromCoplanarPoints(Hg,Wg,Vg),a[3].setFromCoplanarPoints(Wg,zg,Og),a[4].setFromCoplanarPoints(Bg,kg,Vg),a[5].setFromCoplanarPoints(Hg,Gg,zg),a[5].normal.multiplyScalar(-1)}else console.error("THREE.SelectionBox: Unsupported camera type.")}_searchChildInFrustum(e,t){if(t.isMesh||t.isLine||t.isPoints)if(t.isInstancedMesh){this.instances[t.uuid]=[];for(let n=0;n<t.count;n++)t.getMatrixAt(n,$g),$g.decompose(Dg,Yg,Kg),Dg.applyMatrix4(t.matrixWorld),e.containsPoint(Dg)&&this.instances[t.uuid].push(n)}else null===t.geometry.boundingSphere&&t.geometry.computeBoundingSphere(),Dg.copy(t.geometry.boundingSphere.center),Dg.applyMatrix4(t.matrixWorld),e.containsPoint(Dg)&&this.collection.push(t);if(t.children.length>0)for(let n=0;n<t.children.length;n++)this._searchChildInFrustum(e,t.children[n])}}class Zg{constructor(e,t){this.element=document.createElement("div"),this.element.classList.add(t),this.element.style.pointerEvents="none",this.renderer=e,this.isDown=!1,this.enabled=!0,this._startPoint=new wn,this._pointTopLeft=new wn,this._pointBottomRight=new wn,this._onPointerDown=function(e){!1!==this.enabled&&(this.isDown=!0,this._onSelectStart(e))}.bind(this),this._onPointerMove=function(e){!1!==this.enabled&&this.isDown&&this._onSelectMove(e)}.bind(this),this._onPointerUp=function(){!1!==this.enabled&&(this.isDown=!1,this._onSelectOver())}.bind(this),this.renderer.domElement.addEventListener("pointerdown",this._onPointerDown),this.renderer.domElement.addEventListener("pointermove",this._onPointerMove),this.renderer.domElement.addEventListener("pointerup",this._onPointerUp)}dispose(){this.renderer.domElement.removeEventListener("pointerdown",this._onPointerDown),this.renderer.domElement.removeEventListener("pointermove",this._onPointerMove),this.renderer.domElement.removeEventListener("pointerup",this._onPointerUp),this.element.remove()}_onSelectStart(e){this.element.style.display="none",this.renderer.domElement.parentElement.appendChild(this.element),this.element.style.left=e.clientX+"px",this.element.style.top=e.clientY+"px",this.element.style.width="0px",this.element.style.height="0px",this._startPoint.x=e.clientX,this._startPoint.y=e.clientY}_onSelectMove(e){this.element.style.display="block",this._pointBottomRight.x=Math.max(this._startPoint.x,e.clientX),this._pointBottomRight.y=Math.max(this._startPoint.y,e.clientY),this._pointTopLeft.x=Math.min(this._startPoint.x,e.clientX),this._pointTopLeft.y=Math.min(this._startPoint.y,e.clientY),this.element.style.left=this._pointTopLeft.x+"px",this.element.style.top=this._pointTopLeft.y+"px",this.element.style.width=this._pointBottomRight.x-this._pointTopLeft.x+"px",this.element.style.height=this._pointBottomRight.y-this._pointTopLeft.y+"px"}_onSelectOver(){this.element.remove()}}const Jg=new si,ev=new En;class tv extends xu{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new Xr([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new Xr([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new dh(t,6,1);return this.setAttribute("instanceStart",new Os(n,3,0)),this.setAttribute("instanceEnd",new Os(n,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new dh(t,6,1);return this.setAttribute("instanceColorStart",new Os(n,3,0)),this.setAttribute("instanceColorEnd",new Os(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new ic(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new si);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),Jg.setFromBufferAttribute(t),this.boundingBox.union(Jg))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Si),null===this.boundingBox&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)ev.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(ev)),ev.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(ev));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}}vd.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new wn(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},bd.line={uniforms:bs.merge([vd.common,vd.fog,vd.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );\n\t\t\t\tvec3 worldUp = normalize( cross( worldDir, tmpFwd ) );\n\t\t\t\tvec3 worldFwd = cross( worldDir, worldUp );\n\t\t\t\tworldPos = position.y < 0.5 ? start: end;\n\n\t\t\t\t// height offset\n\t\t\t\tfloat hw = linewidth * 0.5;\n\t\t\t\tworldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// cap extension\n\t\t\t\t\tworldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;\n\n\t\t\t\t\t// add width to the box\n\t\t\t\t\tworldPos.xyz += worldFwd * hw;\n\n\t\t\t\t\t// endcaps\n\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\tworldPos.xyz -= worldFwd * 2.0 * hw;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat alpha = opacity;\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class nv extends ys{constructor(e){super({type:"LineMaterial",uniforms:bs.clone(bd.line.uniforms),vertexShader:bd.line.vertexShader,fragmentShader:bd.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){!0===e!==this.dashed&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(!0===e!==this.alphaToCoverage&&(this.needsUpdate=!0),!0===e?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const iv=new Zn,rv=new En,sv=new En,av=new Zn,ov=new Zn,lv=new Zn,cv=new En,uv=new Li,hv=new Lh,dv=new En,pv=new si,mv=new Si,fv=new Zn;let gv,vv;function bv(e,t,n){return fv.set(0,0,-t,1).applyMatrix4(e.projectionMatrix),fv.multiplyScalar(1/fv.w),fv.x=vv/n.width,fv.y=vv/n.height,fv.applyMatrix4(e.projectionMatrixInverse),fv.multiplyScalar(1/fv.w),Math.abs(Math.max(fv.x,fv.y))}class yv extends ds{constructor(e=new tv,t=new nv({color:16777215*Math.random()})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,i=new Float32Array(2*t.count);for(let s=0,a=0,o=t.count;s<o;s++,a+=2)rv.fromBufferAttribute(t,s),sv.fromBufferAttribute(n,s),i[a]=0===a?0:i[a-1],i[a+1]=i[a]+rv.distanceTo(sv);const r=new dh(i,2,1);return e.setAttribute("instanceDistanceStart",new Os(r,1,0)),e.setAttribute("instanceDistanceEnd",new Os(r,1,1)),this}raycast(e,t){const n=this.material.worldUnits,i=e.camera;null!==i||n||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=void 0!==e.params.Line2&&e.params.Line2.threshold||0;gv=e.ray;const s=this.matrixWorld,a=this.geometry,o=this.material;let l,c;if(vv=o.linewidth+r,null===a.boundingSphere&&a.computeBoundingSphere(),mv.copy(a.boundingSphere).applyMatrix4(s),n)l=.5*vv;else{l=bv(i,Math.max(i.near,mv.distanceToPoint(gv.origin)),o.resolution)}if(mv.radius+=l,!1!==gv.intersectsSphere(mv)){if(null===a.boundingBox&&a.computeBoundingBox(),pv.copy(a.boundingBox).applyMatrix4(s),n)c=.5*vv;else{c=bv(i,Math.max(i.near,pv.distanceToPoint(gv.origin)),o.resolution)}pv.expandByScalar(c),!1!==gv.intersectsBox(pv)&&(n?function(e,t){const n=e.matrixWorld,i=e.geometry,r=i.attributes.instanceStart,s=i.attributes.instanceEnd;for(let a=0,o=Math.min(i.instanceCount,r.count);a<o;a++){hv.start.fromBufferAttribute(r,a),hv.end.fromBufferAttribute(s,a),hv.applyMatrix4(n);const i=new En,o=new En;gv.distanceSqToSegment(hv.start,hv.end,o,i),o.distanceTo(i)<.5*vv&&t.push({point:o,pointOnLine:i,distance:gv.origin.distanceTo(o),object:e,face:null,faceIndex:a,uv:null,uv1:null})}}(this,t):function(e,t,n){const i=t.projectionMatrix,r=e.material.resolution,s=e.matrixWorld,a=e.geometry,o=a.attributes.instanceStart,l=a.attributes.instanceEnd,c=Math.min(a.instanceCount,o.count),u=-t.near;gv.at(1,lv),lv.w=1,lv.applyMatrix4(t.matrixWorldInverse),lv.applyMatrix4(i),lv.multiplyScalar(1/lv.w),lv.x*=r.x/2,lv.y*=r.y/2,lv.z=0,cv.copy(lv),uv.multiplyMatrices(t.matrixWorldInverse,s);for(let h=0,d=c;h<d;h++){if(av.fromBufferAttribute(o,h),ov.fromBufferAttribute(l,h),av.w=1,ov.w=1,av.applyMatrix4(uv),ov.applyMatrix4(uv),av.z>u&&ov.z>u)continue;if(av.z>u){const e=av.z-ov.z,t=(av.z-u)/e;av.lerp(ov,t)}else if(ov.z>u){const e=ov.z-av.z,t=(ov.z-u)/e;ov.lerp(av,t)}av.applyMatrix4(i),ov.applyMatrix4(i),av.multiplyScalar(1/av.w),ov.multiplyScalar(1/ov.w),av.x*=r.x/2,av.y*=r.y/2,ov.x*=r.x/2,ov.y*=r.y/2,hv.start.copy(av),hv.start.z=0,hv.end.copy(ov),hv.end.z=0;const t=hv.closestPointToPointParameter(cv,!0);hv.at(t,dv);const a=Sn.lerp(av.z,ov.z,t),c=a>=-1&&a<=1,d=cv.distanceTo(dv)<.5*vv;if(c&&d){hv.start.fromBufferAttribute(o,h),hv.end.fromBufferAttribute(l,h),hv.start.applyMatrix4(s),hv.end.applyMatrix4(s);const t=new En,i=new En;gv.distanceSqToSegment(hv.start,hv.end,i,t),n.push({point:i,pointOnLine:t,distance:gv.origin.distanceTo(i),object:e,face:null,faceIndex:h,uv:null,uv1:null})}}}(this,i,t))}}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(iv),this.material.uniforms.resolution.value.set(iv.z,iv.w))}}class xv extends tv{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}setFromPoints(e){const t=e.length-1,n=new Float32Array(6*t);for(let i=0;i<t;i++)n[6*i]=e[i].x,n[6*i+1]=e[i].y,n[6*i+2]=e[i].z||0,n[6*i+3]=e[i+1].x,n[6*i+4]=e[i+1].y,n[6*i+5]=e[i+1].z||0;return super.setPositions(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class _v extends yv{constructor(e=new xv,t=new nv({color:16777215*Math.random()})){super(e,t),this.isLine2=!0,this.type="Line2"}}class Tv extends Kc{constructor(e){super(e),this.type=Se,this.outputFormat=Pe}parse(e){const t=65536,n=14,i=65537,r=16384,s=Math.pow(2.7182818,2.2);const a={l:0,c:0,lc:0};function o(e,t,n,i,r){for(;n<e;)t=t<<8|G(i,r),n+=8;n-=e,a.l=t>>n&(1<<e)-1,a.c=t,a.lc=n}const l=new Array(59);function c(e,t,n,r,s,c){const u=t;let h=0,d=0;for(;r<=s;r++){if(u.value-t.value>n)return!1;o(6,h,d,e,u);const i=a.l;if(h=a.c,d=a.lc,c[r]=i,63==i){if(u.value-t.value>n)throw new Error("Something wrong with hufUnpackEncTable");o(8,h,d,e,u);let i=a.l+6;if(h=a.c,d=a.lc,r+i>s+1)throw new Error("Something wrong with hufUnpackEncTable");for(;i--;)c[r++]=0;r--}else if(i>=59){let e=i-59+2;if(r+e>s+1)throw new Error("Something wrong with hufUnpackEncTable");for(;e--;)c[r++]=0;r--}}!function(e){for(let n=0;n<=58;++n)l[n]=0;for(let n=0;n<i;++n)l[e[n]]+=1;let t=0;for(let n=58;n>0;--n){const e=t+l[n]>>1;l[n]=t,t=e}for(let n=0;n<i;++n){const t=e[n];t>0&&(e[n]=t|l[t]++<<6)}}(c)}function u(e){return 63&e}function h(e){return e>>6}const d={c:0,lc:0};function p(e,t,n,i){e=e<<8|G(n,i),t+=8,d.c=e,d.lc=t}const m={c:0,lc:0};function f(e,t,n,i,r,s,a,o,l){if(e==t){i<8&&(p(n,i,r,s),n=d.c,i=d.lc);let e=n>>(i-=8);if(e=new Uint8Array([e])[0],o.value+e>l)return!1;const t=a[o.value-1];for(;e-- >0;)a[o.value++]=t}else{if(!(o.value<l))return!1;a[o.value++]=e}m.c=n,m.lc=i}function g(e){return 65535&e}function v(e){const t=g(e);return t>32767?t-65536:t}const b={a:0,b:0};function y(e,t){const n=v(e),i=v(t),r=n+(1&i)+(i>>1),s=r,a=r-i;b.a=s,b.b=a}function x(e,t){const n=g(e),i=g(t),r=n-(i>>1)&65535,s=i+r-32768&65535;b.a=s,b.b=r}function _(e,t,n,i,r,s,a){const o=a<16384,l=n>r?r:n;let c,u,h=1;for(;h<=l;)h<<=1;for(h>>=1,c=h,h>>=1;h>=1;){u=0;const a=u+s*(r-c),l=s*h,d=s*c,p=i*h,m=i*c;let f,g,v,_;for(;u<=a;u+=d){let r=u;const s=u+i*(n-c);for(;r<=s;r+=m){const n=r+p,i=r+l,s=i+p;o?(y(e[r+t],e[i+t]),f=b.a,v=b.b,y(e[n+t],e[s+t]),g=b.a,_=b.b,y(f,g),e[r+t]=b.a,e[n+t]=b.b,y(v,_),e[i+t]=b.a,e[s+t]=b.b):(x(e[r+t],e[i+t]),f=b.a,v=b.b,x(e[n+t],e[s+t]),g=b.a,_=b.b,x(f,g),e[r+t]=b.a,e[n+t]=b.b,x(v,_),e[i+t]=b.a,e[s+t]=b.b)}if(n&h){const n=r+l;o?y(e[r+t],e[n+t]):x(e[r+t],e[n+t]),f=b.a,e[n+t]=b.b,e[r+t]=f}}if(r&h){let r=u;const s=u+i*(n-c);for(;r<=s;r+=m){const n=r+p;o?y(e[r+t],e[n+t]):x(e[r+t],e[n+t]),f=b.a,e[n+t]=b.b,e[r+t]=f}}c=h,h>>=1}return u}function T(e,t,s,a,o,l){const g=s.value,v=z(t,s),b=z(t,s);s.value+=4;const y=z(t,s);if(s.value+=4,v<0||v>=i||b<0||b>=i)throw new Error("Something wrong with HUF_ENCSIZE");const x=new Array(i),_=new Array(r);!function(e){for(let t=0;t<r;t++)e[t]={},e[t].len=0,e[t].lit=0,e[t].p=null}(_);if(c(e,s,a-(s.value-g),v,b,x),y>8*(a-(s.value-g)))throw new Error("Something wrong with hufUncompress");!function(e,t,i,r){for(;t<=i;t++){const i=h(e[t]),s=u(e[t]);if(i>>s)throw new Error("Invalid table entry");if(s>n){const e=r[i>>s-n];if(e.len)throw new Error("Invalid table entry");if(e.lit++,e.p){const t=e.p;e.p=new Array(e.lit);for(let n=0;n<e.lit-1;++n)e.p[n]=t[n]}else e.p=new Array(1);e.p[e.lit-1]=t}else if(s){let e=0;for(let a=1<<n-s;a>0;a--){const a=r[(i<<n-s)+e];if(a.len||a.p)throw new Error("Invalid table entry");a.len=s,a.lit=t,e++}}}}(x,v,b,_),function(e,t,i,r,s,a,o,l,c){let g=0,v=0;const b=o,y=Math.trunc(r.value+(s+7)/8);for(;r.value<y;)for(p(g,v,i,r),g=d.c,v=d.lc;v>=n;){const s=t[g>>v-n&16383];if(s.len)v-=s.len,f(s.lit,a,g,v,i,r,l,c,b),g=m.c,v=m.lc;else{if(!s.p)throw new Error("hufDecode issues");let t;for(t=0;t<s.lit;t++){const n=u(e[s.p[t]]);for(;v<n&&r.value<y;)p(g,v,i,r),g=d.c,v=d.lc;if(v>=n&&h(e[s.p[t]])==(g>>v-n&(1<<n)-1)){v-=n,f(s.p[t],a,g,v,i,r,l,c,b),g=m.c,v=m.lc;break}}if(t==s.lit)throw new Error("hufDecode issues")}}const x=8-s&7;for(g>>=x,v-=x;v>0;){const e=t[g<<n-v&16383];if(!e.len)throw new Error("hufDecode issues");v-=e.len,f(e.lit,a,g,v,i,r,l,c,b),g=m.c,v=m.lc}}(x,_,e,s,y,b,l,o,{value:0})}function S(e){for(let t=1;t<e.length;t++){const n=e[t-1]+e[t]-128;e[t]=n}}function w(e,t){let n=0,i=Math.floor((e.length+1)/2),r=0;const s=e.length-1;for(;!(r>s||(t[r++]=e[n++],r>s));)t[r++]=e[i++]}function M(e){let t=e.byteLength;const n=new Array;let i=0;const r=new DataView(e);for(;t>0;){const e=r.getInt8(i++);if(e<0){const s=-e;t-=s+1;for(let e=0;e<s;e++)n.push(r.getUint8(i++))}else{const s=e;t-=2;const a=r.getUint8(i++);for(let e=0;e<s+1;e++)n.push(a)}}return n}function E(e,t,n,i,r,s){const a=new DataView(s.buffer),o=n[e],l=o.width,c=o.height,u=Math.ceil(l/8),h=Math.ceil(c/8),d=Math.floor(l/8),p=l-8*(u-1),m=c-8*(h-1),f={value:0};let g=0;const v=new Float32Array(64),b=new Uint16Array(64),y=new Uint16Array(64*u);for(let x=0;x<h;++x){let n=8;x==h-1&&(n=m);for(let e=0;e<u;++e)b.fill(0),b[0]=r[g++],A(f,i,b),R(b,v),C(v),P(v,y,64*e);for(let i=8*x;i<8*x+n;++i){let n=t[e][i];for(let e=0;e<d;++e){const t=64*e+8*(7&i);for(let e=0;e<8;++e)a.setUint16(n+2*e*o.type,y[t+e],!0);n+=16*o.type}if(u!=d){const e=64*d+8*(7&i);for(let t=0;t<p;++t)a.setUint16(n+2*t*o.type,y[e+t],!0)}}}o.decoded=!0}function A(e,t,n){let i,r=1;for(;r<64;)i=t[e.value],65280==i?r=64:i>>8==255?r+=255&i:(n[r]=i,r++),e.value++}function R(e,t){t[0]=q(e[0]),t[1]=q(e[1]),t[2]=q(e[5]),t[3]=q(e[6]),t[4]=q(e[14]),t[5]=q(e[15]),t[6]=q(e[27]),t[7]=q(e[28]),t[8]=q(e[2]),t[9]=q(e[4]),t[10]=q(e[7]),t[11]=q(e[13]),t[12]=q(e[16]),t[13]=q(e[26]),t[14]=q(e[29]),t[15]=q(e[42]),t[16]=q(e[3]),t[17]=q(e[8]),t[18]=q(e[12]),t[19]=q(e[17]),t[20]=q(e[25]),t[21]=q(e[30]),t[22]=q(e[41]),t[23]=q(e[43]),t[24]=q(e[9]),t[25]=q(e[11]),t[26]=q(e[18]),t[27]=q(e[24]),t[28]=q(e[31]),t[29]=q(e[40]),t[30]=q(e[44]),t[31]=q(e[53]),t[32]=q(e[10]),t[33]=q(e[19]),t[34]=q(e[23]),t[35]=q(e[32]),t[36]=q(e[39]),t[37]=q(e[45]),t[38]=q(e[52]),t[39]=q(e[54]),t[40]=q(e[20]),t[41]=q(e[22]),t[42]=q(e[33]),t[43]=q(e[38]),t[44]=q(e[46]),t[45]=q(e[51]),t[46]=q(e[55]),t[47]=q(e[60]),t[48]=q(e[21]),t[49]=q(e[34]),t[50]=q(e[37]),t[51]=q(e[47]),t[52]=q(e[50]),t[53]=q(e[56]),t[54]=q(e[59]),t[55]=q(e[61]),t[56]=q(e[35]),t[57]=q(e[36]),t[58]=q(e[48]),t[59]=q(e[49]),t[60]=q(e[57]),t[61]=q(e[58]),t[62]=q(e[62]),t[63]=q(e[63])}function C(e){const t=.5*Math.cos(.7853975),n=.5*Math.cos(3.14159/16),i=.5*Math.cos(3.14159/8),r=.5*Math.cos(3*3.14159/16),s=.5*Math.cos(.981746875),a=.5*Math.cos(3*3.14159/8),o=.5*Math.cos(1.374445625),l=new Array(4),c=new Array(4),u=new Array(4),h=new Array(4);for(let d=0;d<8;++d){const p=8*d;l[0]=i*e[p+2],l[1]=a*e[p+2],l[2]=i*e[p+6],l[3]=a*e[p+6],c[0]=n*e[p+1]+r*e[p+3]+s*e[p+5]+o*e[p+7],c[1]=r*e[p+1]-o*e[p+3]-n*e[p+5]-s*e[p+7],c[2]=s*e[p+1]-n*e[p+3]+o*e[p+5]+r*e[p+7],c[3]=o*e[p+1]-s*e[p+3]+r*e[p+5]-n*e[p+7],u[0]=t*(e[p+0]+e[p+4]),u[3]=t*(e[p+0]-e[p+4]),u[1]=l[0]+l[3],u[2]=l[1]-l[2],h[0]=u[0]+u[1],h[1]=u[3]+u[2],h[2]=u[3]-u[2],h[3]=u[0]-u[1],e[p+0]=h[0]+c[0],e[p+1]=h[1]+c[1],e[p+2]=h[2]+c[2],e[p+3]=h[3]+c[3],e[p+4]=h[3]-c[3],e[p+5]=h[2]-c[2],e[p+6]=h[1]-c[1],e[p+7]=h[0]-c[0]}for(let d=0;d<8;++d)l[0]=i*e[16+d],l[1]=a*e[16+d],l[2]=i*e[48+d],l[3]=a*e[48+d],c[0]=n*e[8+d]+r*e[24+d]+s*e[40+d]+o*e[56+d],c[1]=r*e[8+d]-o*e[24+d]-n*e[40+d]-s*e[56+d],c[2]=s*e[8+d]-n*e[24+d]+o*e[40+d]+r*e[56+d],c[3]=o*e[8+d]-s*e[24+d]+r*e[40+d]-n*e[56+d],u[0]=t*(e[d]+e[32+d]),u[3]=t*(e[d]-e[32+d]),u[1]=l[0]+l[3],u[2]=l[1]-l[2],h[0]=u[0]+u[1],h[1]=u[3]+u[2],h[2]=u[3]-u[2],h[3]=u[0]-u[1],e[0+d]=h[0]+c[0],e[8+d]=h[1]+c[1],e[16+d]=h[2]+c[2],e[24+d]=h[3]+c[3],e[32+d]=h[3]-c[3],e[40+d]=h[2]-c[2],e[48+d]=h[1]-c[1],e[56+d]=h[0]-c[0]}function N(e){for(let t=0;t<64;++t){const n=e[0][t],i=e[1][t],r=e[2][t];e[0][t]=n+1.5747*r,e[1][t]=n-.1873*i-.4682*r,e[2][t]=n+1.8556*i}}function P(e,t,n){for(let i=0;i<64;++i)t[n+i]=Ir.toHalfFloat(L(e[i]))}function L(e){return e<=1?Math.sign(e)*Math.pow(Math.abs(e),2.2):Math.sign(e)*Math.pow(s,Math.abs(e)-1)}function I(e){return new DataView(e.array.buffer,e.offset.value,e.size)}function D(e){const t=e.viewer.buffer.slice(e.offset.value,e.offset.value+e.size),n=new Uint8Array(M(t)),i=new Uint8Array(n.length);return S(n),w(n,i),new DataView(i.buffer)}function F(e){const t=dg(e.array.slice(e.offset.value,e.offset.value+e.size)),n=new Uint8Array(t.length);return S(t),w(t,n),new DataView(n.buffer)}function U(e){const n=e.viewer,i={value:e.offset.value},r=new Uint16Array(e.columns*e.lines*(e.inputChannels.length*e.type)),s=new Uint8Array(8192);let a=0;const o=new Array(e.inputChannels.length);for(let t=0,f=e.inputChannels.length;t<f;t++)o[t]={},o[t].start=a,o[t].end=o[t].start,o[t].nx=e.columns,o[t].ny=e.lines,o[t].size=e.type,a+=o[t].nx*o[t].ny*o[t].size;const l=$(n,i),c=$(n,i);if(c>=8192)throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");if(l<=c)for(let t=0;t<c-l+1;t++)s[t+l]=H(n,i);const u=new Uint16Array(t),h=function(e,n){let i=0;for(let s=0;s<t;++s)(0==s||e[s>>3]&1<<(7&s))&&(n[i++]=s);const r=i-1;for(;i<t;)n[i++]=0;return r}(s,u),d=z(n,i);T(e.array,n,i,d,r,a);for(let t=0;t<e.inputChannels.length;++t){const e=o[t];for(let n=0;n<o[t].size;++n)_(r,e.start+n,e.nx,e.size,e.ny,e.nx*e.size,h)}!function(e,t,n){for(let i=0;i<n;++i)t[i]=e[t[i]]}(u,r,a);let p=0;const m=new Uint8Array(r.buffer.byteLength);for(let t=0;t<e.lines;t++)for(let n=0;n<e.inputChannels.length;n++){const e=o[n],t=e.nx*e.size,i=new Uint8Array(r.buffer,2*e.end,2*t);m.set(i,p),p+=2*t,e.end+=t}return new DataView(m.buffer)}function O(e){const t=dg(e.array.slice(e.offset.value,e.offset.value+e.size)),n=e.inputChannels.length*e.lines*e.columns*e.totalBytes,i=new ArrayBuffer(n),r=new DataView(i);let s=0,a=0;const o=new Array(4);for(let l=0;l<e.lines;l++)for(let n=0;n<e.inputChannels.length;n++){let i=0;switch(e.inputChannels[n].pixelType){case 1:o[0]=s,o[1]=o[0]+e.columns,s=o[1]+e.columns;for(let n=0;n<e.columns;++n){i+=t[o[0]++]<<8|t[o[1]++],r.setUint16(a,i,!0),a+=2}break;case 2:o[0]=s,o[1]=o[0]+e.columns,o[2]=o[1]+e.columns,s=o[2]+e.columns;for(let n=0;n<e.columns;++n){i+=t[o[0]++]<<24|t[o[1]++]<<16|t[o[2]++]<<8,r.setUint32(a,i,!0),a+=4}}}return r}function B(e){const t=e.viewer,n={value:e.offset.value},i=new Uint8Array(e.columns*e.lines*(e.inputChannels.length*e.type*2)),r={version:W(t,n),unknownUncompressedSize:W(t,n),unknownCompressedSize:W(t,n),acCompressedSize:W(t,n),dcCompressedSize:W(t,n),rleCompressedSize:W(t,n),rleUncompressedSize:W(t,n),rleRawSize:W(t,n),totalAcUncompressedCount:W(t,n),totalDcUncompressedCount:W(t,n),acCompression:W(t,n)};if(r.version<2)throw new Error("EXRLoader.parse: "+re.compression+" version "+r.version+" is unsupported");const s=new Array;let a=$(t,n)-2;for(;a>0;){const e=k(t.buffer,n),i=H(t,n),r=i>>2&3,o=new Int8Array([(i>>4)-1])[0],l=H(t,n);s.push({name:e,index:o,type:l,compression:r}),a-=e.length+3}const o=re.channels,l=new Array(e.inputChannels.length);for(let f=0;f<e.inputChannels.length;++f){const t=l[f]={},n=o[f];t.name=n.name,t.compression=0,t.decoded=!1,t.type=n.pixelType,t.pLinear=n.pLinear,t.width=e.columns,t.height=e.lines}const c={idx:new Array(3)};for(let f=0;f<e.inputChannels.length;++f){const e=l[f];for(let t=0;t<s.length;++t){const n=s[t];e.name==n.name&&(e.compression=n.compression,n.index>=0&&(c.idx[n.index]=f),e.offset=f)}}let u,h,d;if(r.acCompressedSize>0)switch(r.acCompression){case 0:u=new Uint16Array(r.totalAcUncompressedCount),T(e.array,t,n,r.acCompressedSize,u,r.totalAcUncompressedCount);break;case 1:const i=dg(e.array.slice(n.value,n.value+r.totalAcUncompressedCount));u=new Uint16Array(i.buffer),n.value+=r.totalAcUncompressedCount}if(r.dcCompressedSize>0){const t={array:e.array,offset:n,size:r.dcCompressedSize};h=new Uint16Array(F(t).buffer),n.value+=r.dcCompressedSize}if(r.rleRawSize>0){d=M(dg(e.array.slice(n.value,n.value+r.rleCompressedSize)).buffer),n.value+=r.rleCompressedSize}let p=0;const m=new Array(l.length);for(let f=0;f<m.length;++f)m[f]=new Array;for(let f=0;f<e.lines;++f)for(let t=0;t<l.length;++t)m[t].push(p),p+=l[t].width*e.type*2;void 0!==c.idx[0]&&l[c.idx[0]]&&function(e,t,n,i,r,s){let a=new DataView(s.buffer);const o=n[e.idx[0]].width,l=n[e.idx[0]].height,c=Math.floor(o/8),u=Math.ceil(o/8),h=Math.ceil(l/8),d=o-8*(u-1),p=l-8*(h-1),m={value:0},f=new Array(3),g=new Array(3),v=new Array(3),b=new Array(3),y=new Array(3);for(let _=0;_<3;++_)y[_]=t[e.idx[_]],f[_]=_<1?0:f[_-1]+u*h,g[_]=new Float32Array(64),v[_]=new Uint16Array(64),b[_]=new Uint16Array(64*u);for(let _=0;_<h;++_){let t=8;_==h-1&&(t=p);let s=8;for(let e=0;e<u;++e){e==u-1&&(s=d);for(let e=0;e<3;++e)v[e].fill(0),v[e][0]=r[f[e]++],A(m,i,v[e]),R(v[e],g[e]),C(g[e]);N(g);for(let t=0;t<3;++t)P(g[t],b[t],64*e)}let o=0;for(let i=0;i<3;++i){const r=n[e.idx[i]].type;for(let e=8*_;e<8*_+t;++e){o=y[i][e];for(let t=0;t<c;++t){const n=64*t+8*(7&e);a.setUint16(o+0*r,b[i][n+0],!0),a.setUint16(o+2*r,b[i][n+1],!0),a.setUint16(o+4*r,b[i][n+2],!0),a.setUint16(o+6*r,b[i][n+3],!0),a.setUint16(o+8*r,b[i][n+4],!0),a.setUint16(o+10*r,b[i][n+5],!0),a.setUint16(o+12*r,b[i][n+6],!0),a.setUint16(o+14*r,b[i][n+7],!0),o+=16*r}}if(c!=u)for(let e=8*_;e<8*_+t;++e){const t=y[i][e]+8*c*2*r,n=64*c+8*(7&e);for(let e=0;e<s;++e)a.setUint16(t+2*e*r,b[i][n+e],!0)}}}const x=new Uint16Array(o);a=new DataView(s.buffer);for(let _=0;_<3;++_){n[e.idx[_]].decoded=!0;const t=n[e.idx[_]].type;if(2==n[_].type)for(let e=0;e<l;++e){const n=y[_][e];for(let e=0;e<o;++e)x[e]=a.getUint16(n+2*e*t,!0);for(let e=0;e<o;++e)a.setFloat32(n+2*e*t,q(x[e]),!0)}}}(c,m,l,u,h,i);for(let f=0;f<l.length;++f){const t=l[f];if(!t.decoded)switch(t.compression){case 2:let n=0,r=0;for(let s=0;s<e.lines;++s){let e=m[f][n];for(let n=0;n<t.width;++n){for(let n=0;n<2*t.type;++n)i[e++]=d[r+n*t.width*t.height];r++}n++}break;case 1:E(f,m,l,u,h,i);break;default:throw new Error("EXRLoader.parse: unsupported channel compression")}}return new DataView(i.buffer)}function k(e,t){const n=new Uint8Array(e);let i=0;for(;0!=n[t.value+i];)i+=1;const r=(new TextDecoder).decode(n.slice(t.value,t.value+i));return t.value=t.value+i+1,r}function V(e,t){const n=e.getInt32(t.value,!0);return t.value=t.value+4,n}function z(e,t){const n=e.getUint32(t.value,!0);return t.value=t.value+4,n}function G(e,t){const n=e[t.value];return t.value=t.value+1,n}function H(e,t){const n=e.getUint8(t.value);return t.value=t.value+1,n}const W=function(e,t){let n;return n="getBigInt64"in DataView.prototype?Number(e.getBigInt64(t.value,!0)):e.getUint32(t.value+4,!0)+Number(e.getUint32(t.value,!0)<<32),t.value+=8,n};function j(e,t){const n=e.getFloat32(t.value,!0);return t.value+=4,n}function X(e,t){return Ir.toHalfFloat(j(e,t))}function q(e){const t=(31744&e)>>10,n=1023&e;return(e>>15?-1:1)*(t?31===t?n?NaN:1/0:Math.pow(2,t-15)*(1+n/1024):n/1024*6103515625e-14)}function $(e,t){const n=e.getUint16(t.value,!0);return t.value+=2,n}function Y(e,t){return q($(e,t))}function K(e,t,n,i,r){return"string"===i||"stringvector"===i||"iccProfile"===i?function(e,t,n){const i=(new TextDecoder).decode(new Uint8Array(e).slice(t.value,t.value+n));return t.value=t.value+n,i}(t,n,r):"chlist"===i?function(e,t,n,i){const r=n.value,s=[];for(;n.value<r+i-1;){const i=k(t,n),r=V(e,n),a=H(e,n);n.value+=3;const o=V(e,n),l=V(e,n);s.push({name:i,pixelType:r,pLinear:a,xSampling:o,ySampling:l})}return n.value+=1,s}(e,t,n,r):"chromaticities"===i?function(e,t){return{redX:j(e,t),redY:j(e,t),greenX:j(e,t),greenY:j(e,t),blueX:j(e,t),blueY:j(e,t),whiteX:j(e,t),whiteY:j(e,t)}}(e,n):"compression"===i?function(e,t){return["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"][H(e,t)]}(e,n):"box2i"===i?function(e,t){return{xMin:V(e,t),yMin:V(e,t),xMax:V(e,t),yMax:V(e,t)}}(e,n):"envmap"===i?function(e,t){return["ENVMAP_LATLONG","ENVMAP_CUBE"][H(e,t)]}(e,n):"tiledesc"===i?function(e,t){const n=z(e,t),i=z(e,t),r=H(e,t);return{xSize:n,ySize:i,levelMode:["ONE_LEVEL","MIPMAP_LEVELS","RIPMAP_LEVELS"][15&r],roundingMode:["ROUND_DOWN","ROUND_UP"][r>>4]}}(e,n):"lineOrder"===i?function(e,t){return["INCREASING_Y","DECREASING_Y","RANDOM_Y"][H(e,t)]}(e,n):"float"===i?j(e,n):"v2f"===i?function(e,t){return[j(e,t),j(e,t)]}(e,n):"v3f"===i?function(e,t){return[j(e,t),j(e,t),j(e,t)]}(e,n):"int"===i?V(e,n):"rational"===i?function(e,t){return[V(e,t),z(e,t)]}(e,n):"timecode"===i?function(e,t){return[z(e,t),z(e,t)]}(e,n):"preview"===i?(n.value+=r,"skipped"):void(n.value+=r)}function Q(e,t,n){let i=0;switch(e.levelMode){case"ONE_LEVEL":i=1;break;case"MIPMAP_LEVELS":i=function(e,t){const n=Math.log2(e);return"ROUND_DOWN"==t?Math.floor(n):Math.ceil(n)}(Math.max(t,n),e.roundingMode)+1;break;case"RIPMAP_LEVELS":throw new Error("THREE.EXRLoader: RIPMAP_LEVELS tiles currently unsupported.")}return i}function Z(e,t,n,i){const r=new Array(e);for(let s=0;s<e;s++){const e=1<<s;let a=t/e|0;"ROUND_UP"==i&&a*e<t&&(a+=1);const o=Math.max(a,1);r[s]=(o+n-1)/n|0}return r}function J(){const e=this,t=e.offset,n={value:0};for(let i=0;i<e.tileCount;i++){const i=V(e.viewer,t),r=V(e.viewer,t);t.value+=8,e.size=z(e.viewer,t);const s=i*e.blockWidth,a=r*e.blockHeight;e.columns=s+e.blockWidth>e.width?e.width-s:e.blockWidth,e.lines=a+e.blockHeight>e.height?e.height-a:e.blockHeight;const o=e.columns*e.totalBytes,l=e.size<e.lines*o?e.uncompress(e):I(e);t.value+=e.size;for(let t=0;t<e.lines;t++){const i=t*e.columns*e.totalBytes;for(let r=0;r<e.inputChannels.length;r++){const o=re.channels[r].name,c=e.channelByteOffsets[o]*e.columns,u=e.decodeChannels[o];if(void 0===u)continue;n.value=i+c;const h=(e.height-(1+a+t))*e.outLineWidth;for(let t=0;t<e.columns;t++){const i=h+(t+s)*e.outputChannels+u;e.byteArray[i]=e.getter(l,n)}}}}}function ee(){const e=this,t=e.offset,n={value:0};for(let i=0;i<e.height/e.blockHeight;i++){const r=V(e.viewer,t)-re.dataWindow.yMin;e.size=z(e.viewer,t),e.lines=r+e.blockHeight>e.height?e.height-r:e.blockHeight;const s=e.columns*e.totalBytes,a=e.size<e.lines*s?e.uncompress(e):I(e);t.value+=e.size;for(let t=0;t<e.blockHeight;t++){const r=i*e.blockHeight,o=t+e.scanOrder(r);if(o>=e.height)continue;const l=t*s,c=(e.height-1-o)*e.outLineWidth;for(let t=0;t<e.inputChannels.length;t++){const i=re.channels[t].name,r=e.channelByteOffsets[i]*e.columns,s=e.decodeChannels[i];if(void 0!==s){n.value=l+r;for(let t=0;t<e.columns;t++){const i=c+t*e.outputChannels+s;e.byteArray[i]=e.getter(a,n)}}}}}}const te={value:0},ne=new DataView(e),ie=new Uint8Array(e),re=function(e,t,n){const i={};if(20000630!=e.getUint32(0,!0))throw new Error("THREE.EXRLoader: Provided file doesn't appear to be in OpenEXR format.");i.version=e.getUint8(4);const r=e.getUint8(5);i.spec={singleTile:!!(2&r),longName:!!(4&r),deepFormat:!!(8&r),multiPart:!!(16&r)},n.value=8;let s=!0;for(;s;){const r=k(t,n);if(""===r)s=!1;else{const s=k(t,n),a=K(e,t,n,s,z(e,n));void 0===a?console.warn(`THREE.EXRLoader: Skipped unknown header attribute type '${s}'.`):i[r]=a}}if(-7&r)throw console.error("THREE.EXRHeader:",i),new Error("THREE.EXRLoader: Provided file is currently unsupported.");return i}(ne,e,te),se=function(e,t,n,i,r,s){const a={size:0,viewer:t,array:n,offset:i,width:e.dataWindow.xMax-e.dataWindow.xMin+1,height:e.dataWindow.yMax-e.dataWindow.yMin+1,inputChannels:e.channels,channelByteOffsets:{},shouldExpand:!1,scanOrder:null,totalBytes:null,columns:null,lines:null,type:null,uncompress:null,getter:null,format:null,colorSpace:Ot};switch(e.compression){case"NO_COMPRESSION":a.blockHeight=1,a.uncompress=I;break;case"RLE_COMPRESSION":a.blockHeight=1,a.uncompress=D;break;case"ZIPS_COMPRESSION":a.blockHeight=1,a.uncompress=F;break;case"ZIP_COMPRESSION":a.blockHeight=16,a.uncompress=F;break;case"PIZ_COMPRESSION":a.blockHeight=32,a.uncompress=U;break;case"PXR24_COMPRESSION":a.blockHeight=16,a.uncompress=O;break;case"DWAA_COMPRESSION":a.blockHeight=32,a.uncompress=B;break;case"DWAB_COMPRESSION":a.blockHeight=256,a.uncompress=B;break;default:throw new Error("EXRLoader.parse: "+e.compression+" is unsupported")}const o={};for(const d of e.channels)switch(d.name){case"Y":case"R":case"G":case"B":case"A":o[d.name]=!0,a.type=d.pixelType}let l=!1,c=!1;if(o.R&&o.G&&o.B)a.outputChannels=4;else{if(!o.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");a.outputChannels=1}switch(a.outputChannels){case 4:s==Pe?(l=!o.A,a.format=Pe,a.colorSpace=Ot,a.outputChannels=4,a.decodeChannels={R:0,G:1,B:2,A:3}):s==Ue?(a.format=Ue,a.colorSpace=Ot,a.outputChannels=2,a.decodeChannels={R:0,G:1}):s==De?(a.format=De,a.colorSpace=Ot,a.outputChannels=1,a.decodeChannels={R:0}):c=!0;break;case 1:s==Pe?(l=!0,a.format=Pe,a.colorSpace=Ot,a.outputChannels=4,a.shouldExpand=!0,a.decodeChannels={Y:0}):s==Ue?(a.format=Ue,a.colorSpace=Ot,a.outputChannels=2,a.shouldExpand=!0,a.decodeChannels={Y:0}):s==De?(a.format=De,a.colorSpace=Ot,a.outputChannels=1,a.decodeChannels={Y:0}):c=!0;break;default:c=!0}if(c)throw new Error("EXRLoader.parse: invalid output format for specified file.");if(1==a.type)switch(r){case Te:a.getter=Y;break;case Se:a.getter=$}else{if(2!=a.type)throw new Error("EXRLoader.parse: unsupported pixelType "+a.type+" for "+e.compression+".");switch(r){case Te:a.getter=j;break;case Se:a.getter=X}}a.columns=a.width;const u=a.width*a.height*a.outputChannels;switch(r){case Te:a.byteArray=new Float32Array(u),l&&a.byteArray.fill(1,0,u);break;case Se:a.byteArray=new Uint16Array(u),l&&a.byteArray.fill(15360,0,u);break;default:console.error("THREE.EXRLoader: unsupported type: ",r)}let h=0;for(const d of e.channels)void 0!==a.decodeChannels[d.name]&&(a.channelByteOffsets[d.name]=h),h+=2*d.pixelType;if(a.totalBytes=h,a.outLineWidth=a.width*a.outputChannels,"INCREASING_Y"===e.lineOrder?a.scanOrder=e=>e:a.scanOrder=e=>a.height-1-e,e.spec.singleTile){a.blockHeight=e.tiles.ySize,a.blockWidth=e.tiles.xSize;const n=Q(e.tiles,a.width,a.height),r=Z(n,a.width,e.tiles.xSize,e.tiles.roundingMode),s=Z(n,a.height,e.tiles.ySize,e.tiles.roundingMode);a.tileCount=r[0]*s[0];for(let e=0;e<n;e++)for(let n=0;n<s[e];n++)for(let s=0;s<r[e];s++)W(t,i);a.decode=J.bind(a)}else{a.blockWidth=a.width;const e=Math.ceil(a.height/a.blockHeight);for(let n=0;n<e;n++)W(t,i);a.decode=ee.bind(a)}return a}(re,ne,ie,te,this.type,this.outputFormat);if(se.decode(),se.shouldExpand){const e=se.byteArray;if(this.outputFormat==Pe)for(let t=0;t<e.length;t+=4)e[t+2]=e[t+1]=e[t];else if(this.outputFormat==Ue)for(let t=0;t<e.length;t+=2)e[t+1]=e[t]}return{header:re,width:se.width,height:se.height,data:se.byteArray,format:se.format,colorSpace:se.colorSpace,type:this.type}}setDataType(e){return this.type=e,this}setOutputFormat(e){return this.outputFormat=e,this}load(e,t,n,i){return super.load(e,function(e,n){e.colorSpace=n.colorSpace,e.minFilter=de,e.magFilter=de,e.generateMipmaps=!1,e.flipY=!1,t&&t(e,n)},n,i)}}const Sv=new WeakMap;class wv extends zc{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,n,i){const r=new Wc(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,e=>{this.parse(e,t,i)},n,i)}parse(e,t,n=()=>{}){this.decodeDracoFile(e,t,null,null,Ut,n).catch(n)}decodeDracoFile(e,t,n,i,r=Ot,s=()=>{}){const a={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:r};return this.decodeGeometry(e,a).then(t).catch(s)}decodeGeometry(e,t){const n=JSON.stringify(t);if(Sv.has(e)){const t=Sv.get(e);if(t.key===n)return t.promise;if(0===e.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const r=this.workerNextTaskID++,s=e.byteLength,a=this._getWorker(r,s).then(n=>(i=n,new Promise((n,s)=>{i._callbacks[r]={resolve:n,reject:s},i.postMessage({type:"decode",id:r,taskConfig:t,buffer:e},[e])}))).then(e=>this._createGeometry(e.geometry));return a.catch(()=>!0).then(()=>{i&&r&&this._releaseTask(i,r)}),Sv.set(e,{key:n,promise:a}),a}_createGeometry(e){const t=new es;e.index&&t.setIndex(new Or(e.index.array,1));for(let n=0;n<e.attributes.length;n++){const i=e.attributes[n],r=i.name,s=i.array,a=i.itemSize,o=new Or(s,a);"color"===r&&(this._assignVertexColorSpace(o,i.vertexColorSpace),o.normalized=s instanceof Float32Array==!1),t.setAttribute(r,o)}return t}_assignVertexColorSpace(e,t){if(t!==Ut)return;const n=new wr;for(let i=0,r=e.count;i<r;i++)n.fromBufferAttribute(e,i),zn.colorSpaceToWorking(n,Ut),e.setXYZ(i,n.r,n.g,n.b)}_loadLibrary(e,t){const n=new Wc(this.manager);return n.setPath(this.decoderPath),n.setResponseType(t),n.setWithCredentials(this.withCredentials),new Promise((t,i)=>{n.load(e,t,void 0,i)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(t=>{const n=t[0];e||(this.decoderConfig.wasmBinary=t[1]);const i=Mv.toString(),r=["/* draco decoder */",n,"","/* worker */",i.substring(i.indexOf("{")+1,i.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([r]))}),this.decoderPending}_getWorker(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const e=new Worker(this.workerSourceURL);e._callbacks={},e._taskCosts={},e._taskLoad=0,e.postMessage({type:"init",decoderConfig:this.decoderConfig}),e.onmessage=function(t){const n=t.data;switch(n.type){case"decode":e._callbacks[n.id].resolve(n);break;case"error":e._callbacks[n.id].reject(n);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+n.type+'"')}},this.workerPool.push(e)}else this.workerPool.sort(function(e,t){return e._taskLoad>t._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[e]=t,n._taskLoad+=t,n})}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,""!==this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),this}}function Mv(){let e,t;function n(e,t,n,i,r,s){const a=s.num_components(),o=n.num_points()*a,l=o*r.BYTES_PER_ELEMENT,c=function(e,t){switch(t){case Float32Array:return e.DT_FLOAT32;case Int8Array:return e.DT_INT8;case Int16Array:return e.DT_INT16;case Int32Array:return e.DT_INT32;case Uint8Array:return e.DT_UINT8;case Uint16Array:return e.DT_UINT16;case Uint32Array:return e.DT_UINT32}}(e,r),u=e._malloc(l);t.GetAttributeDataArrayForAllPoints(n,s,c,l,u);const h=new r(e.HEAPF32.buffer,u,o).slice();return e._free(u),{name:i,array:h,itemSize:a}}onmessage=function(i){const r=i.data;switch(r.type){case"init":e=r.decoderConfig,t=new Promise(function(t){e.onModuleLoaded=function(e){t({draco:e})},DracoDecoderModule(e)});break;case"decode":const i=r.buffer,s=r.taskConfig;t.then(e=>{const t=e.draco,a=new t.Decoder;try{const e=function(e,t,i,r){const s=r.attributeIDs,a=r.attributeTypes;let o,l;const c=t.GetEncodedGeometryType(i);if(c===e.TRIANGULAR_MESH)o=new e.Mesh,l=t.DecodeArrayToMesh(i,i.byteLength,o);else{if(c!==e.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");o=new e.PointCloud,l=t.DecodeArrayToPointCloud(i,i.byteLength,o)}if(!l.ok()||0===o.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+l.error_msg());const u={index:null,attributes:[]};for(const h in s){const i=self[a[h]];let l,c;if(r.useUniqueIDs)c=s[h],l=t.GetAttributeByUniqueId(o,c);else{if(c=t.GetAttributeId(o,e[s[h]]),-1===c)continue;l=t.GetAttribute(o,c)}const d=n(e,t,o,h,i,l);"color"===h&&(d.vertexColorSpace=r.vertexColorSpace),u.attributes.push(d)}c===e.TRIANGULAR_MESH&&(u.index=function(e,t,n){const i=n.num_faces(),r=3*i,s=4*r,a=e._malloc(s);t.GetTrianglesUInt32Array(n,s,a);const o=new Uint32Array(e.HEAPF32.buffer,a,r).slice();return e._free(a),{array:o,itemSize:1}}(e,t,o));return e.destroy(o),u}(t,a,new Int8Array(i),s),o=e.attributes.map(e=>e.array.buffer);e.index&&o.push(e.index.array.buffer),self.postMessage({type:"decode",id:r.id,geometry:e},o)}catch(o){console.error(o),self.postMessage({type:"error",id:r.id,error:o.message})}finally{t.destroy(a)}})}}}let Ev,Av,Rv;class Cv extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=""===r.path?yu.extractUrlBase(e):r.path,a=new Wc(this.manager);a.setPath(r.path),a.setResponseType("arraybuffer"),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(n){try{t(r.parse(n,s))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}parse(e,t){if(function(e){const t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===Xv(e,0,t.length)}(e))Ev=(new Dv).parse(e);else{const t=Xv(e);if(!function(e){const t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let n=0;function i(t){const i=e[t-1];return e=e.slice(n+t),n++,i}for(let r=0;r<t.length;++r){if(i(1)===t[r])return!1}return!0}(t))throw new Error("THREE.FBXLoader: Unknown format.");if(Ov(t)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+Ov(t));Ev=(new Iv).parse(t)}const n=new Qc(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new Nv(n,this.manager).parse(Ev)}}class Nv{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){Av=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),r=(new Pv).parse(i);return this.parseScene(i,r,n),Rv}parseConnections(){const e=new Map;if("Connections"in Ev){Ev.Connections.connections.forEach(function(t){const n=t[0],i=t[1],r=t[2];e.has(n)||e.set(n,{parents:[],children:[]});const s={ID:i,relationship:r};e.get(n).parents.push(s),e.has(i)||e.set(i,{parents:[],children:[]});const a={ID:n,relationship:r};e.get(i).children.push(a)})}return e}parseImages(){const e={},t={};if("Video"in Ev.Objects){const n=Ev.Objects.Video;for(const i in n){const r=n[i];if(e[parseInt(i)]=r.RelativeFilename||r.Filename,"Content"in r){const e=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,s="string"==typeof r.Content&&""!==r.Content;if(e||s){const e=this.parseImage(n[i]);t[r.RelativeFilename||r.Filename]=e}}}}for(const n in e){const i=e[n];void 0!==t[i]?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let r;switch(i){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",n),r="image/tga";break;case"webp":r="image/webp";break;default:return void console.warn('FBXLoader: Image type "'+i+'" is not supported.')}if("string"==typeof t)return"data:"+r+";base64,"+t;{const e=new Uint8Array(t);return window.URL.createObjectURL(new Blob([e],{type:r}))}}parseTextures(e){const t=new Map;if("Texture"in Ev.Objects){const n=Ev.Objects.Texture;for(const i in n){const r=this.parseTexture(n[i],e);t.set(parseInt(i),r)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,r=e.WrapModeV,s=void 0!==i?i.value:0,a=void 0!==r?r.value:0;if(n.wrapS=0===s?ae:oe,n.wrapT=0===a?ae:oe,"Scaling"in e){const t=e.Scaling.value;n.repeat.x=t[0],n.repeat.y=t[1]}if("Translation"in e){const t=e.Translation.value;n.offset.x=t[0],n.offset.y=t[1]}return n}loadTexture(e,t){const n=e.FileName.split(".").pop().toLowerCase();let i=this.manager.getHandler(`.${n}`);null===i&&(i=this.textureLoader);const r=i.path;r||i.setPath(this.textureLoader.path);const s=Av.get(e.id).children;let a;if(void 0!==s&&s.length>0&&void 0!==t[s[0].ID]&&(a=t[s[0].ID],0!==a.indexOf("blob:")&&0!==a.indexOf("data:")||i.setPath(void 0)),void 0===a)return console.warn("FBXLoader: Undefined filename, creating placeholder texture."),new Qn;const o=i.load(a);return i.setPath(r),o}parseMaterials(e){const t=new Map;if("Material"in Ev.Objects){const n=Ev.Objects.Material;for(const i in n){const r=this.parseMaterial(n[i],e);null!==r&&t.set(parseInt(i),r)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let r=e.ShadingModel;if("object"==typeof r&&(r=r.value),!Av.has(n))return null;const s=this.parseParameters(e,t,n);let a;switch(r.toLowerCase()){case"phong":a=new uc;break;case"lambert":a=new pc;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),a=new uc}return a.setValues(s),a.name=i,a}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=zn.colorSpaceToWorking((new wr).fromArray(e.Diffuse.value),Ut):!e.DiffuseColor||"Color"!==e.DiffuseColor.type&&"ColorRGB"!==e.DiffuseColor.type||(i.color=zn.colorSpaceToWorking((new wr).fromArray(e.DiffuseColor.value),Ut)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=zn.colorSpaceToWorking((new wr).fromArray(e.Emissive.value),Ut):!e.EmissiveColor||"Color"!==e.EmissiveColor.type&&"ColorRGB"!==e.EmissiveColor.type||(i.emissive=zn.colorSpaceToWorking((new wr).fromArray(e.EmissiveColor.value),Ut)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),i.opacity=1-(e.TransparencyFactor?parseFloat(e.TransparencyFactor.value):0),1!==i.opacity&&0!==i.opacity||(i.opacity=e.Opacity?parseFloat(e.Opacity.value):null,null===i.opacity&&(i.opacity=1-(e.TransparentColor?parseFloat(e.TransparentColor.value[0]):0))),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=zn.colorSpaceToWorking((new wr).fromArray(e.Specular.value),Ut):e.SpecularColor&&"Color"===e.SpecularColor.type&&(i.specular=zn.colorSpaceToWorking((new wr).fromArray(e.SpecularColor.value),Ut));const r=this;return Av.get(n).children.forEach(function(e){const n=e.relationship;switch(n){case"Bump":i.bumpMap=r.getTexture(t,e.ID);break;case"Maya|TEX_ao_map":i.aoMap=r.getTexture(t,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=r.getTexture(t,e.ID),void 0!==i.map&&(i.map.colorSpace=Ut);break;case"DisplacementColor":i.displacementMap=r.getTexture(t,e.ID);break;case"EmissiveColor":i.emissiveMap=r.getTexture(t,e.ID),void 0!==i.emissiveMap&&(i.emissiveMap.colorSpace=Ut);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=r.getTexture(t,e.ID);break;case"ReflectionColor":i.envMap=r.getTexture(t,e.ID),void 0!==i.envMap&&(i.envMap.mapping=ie,i.envMap.colorSpace=Ut);break;case"SpecularColor":i.specularMap=r.getTexture(t,e.ID),void 0!==i.specularMap&&(i.specularMap.colorSpace=Ut);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=r.getTexture(t,e.ID),i.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",n)}}),i}getTexture(e,t){return"LayeredTexture"in Ev.Objects&&t in Ev.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=Av.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in Ev.Objects){const n=Ev.Objects.Deformer;for(const i in n){const r=n[i],s=Av.get(parseInt(i));if("Skin"===r.attrType){const t=this.parseSkeleton(s,n);t.ID=i,s.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),t.geometryID=s.parents[0].ID,e[i]=t}else if("BlendShape"===r.attrType){const e={id:i};e.rawTargets=this.parseMorphTargets(s,n),e.id=i,s.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=e}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(e){const i=t[e.ID];if("Cluster"!==i.attrType)return;const r={ID:e.ID,indices:[],weights:[],transformLink:(new Li).fromArray(i.TransformLink.a)};"Indexes"in i&&(r.indices=i.Indexes.a,r.weights=i.Weights.a),n.push(r)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const r=e.children[i],s=t[r.ID],a={name:s.attrName,initialWeight:s.DeformPercent,id:s.id,fullWeights:s.FullWeights.a};if("BlendShapeChannel"!==s.attrType)return;a.geoID=Av.get(parseInt(r.ID)).children.filter(function(e){return void 0===e.relationship})[0].ID,n.push(a)}return n}parseScene(e,t,n){Rv=new Cs;const i=this.parseModels(e.skeletons,t,n),r=Ev.Objects.Model,s=this;i.forEach(function(e){const t=r[e.ID];s.setLookAtProperties(e,t);Av.get(e.ID).parents.forEach(function(t){const n=i.get(t.ID);void 0!==n&&n.add(e)}),null===e.parent&&Rv.add(e)}),this.bindSkeleton(e.skeletons,t,i),this.addGlobalSceneSettings(),Rv.traverse(function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrix=e.parent.matrix,e.userData.transformData.parentMatrixWorld=e.parent.matrixWorld);const t=Hv(e.userData.transformData);e.applyMatrix4(t),e.updateWorldMatrix()}});const a=(new Lv).parse();1===Rv.children.length&&Rv.children[0].isGroup&&(Rv.children[0].animations=a,Rv=Rv.children[0]),Rv.animations=a}parseModels(e,t,n){const i=new Map,r=Ev.Objects.Model;for(const s in r){const a=parseInt(s),o=r[s],l=Av.get(a);let c=this.buildSkeleton(l,e,a,o.attrName);if(!c){switch(o.attrType){case"Camera":c=this.createCamera(l);break;case"Light":c=this.createLight(l);break;case"Mesh":c=this.createMesh(l,t,n);break;case"NurbsCurve":c=this.createCurve(l,t);break;case"LimbNode":case"Root":c=new pa;break;default:c=new Cs}c.name=o.attrName?ih.sanitizeNodeName(o.attrName):"",c.userData.originalName=o.attrName,c.ID=a}this.getTransformData(c,o),i.set(a,c)}return i}buildSkeleton(e,t,n,i){let r=null;return e.parents.forEach(function(e){for(const s in t){const a=t[s];a.rawBones.forEach(function(t,s){if(t.ID===e.ID){const e=r;r=new pa,r.matrixWorld.copy(t.transformLink),r.name=i?ih.sanitizeNodeName(i):"",r.userData.originalName=i,r.ID=n,a.bones[s]=r,null!==e&&r.add(e)}})}}),r}createCamera(e){let t,n;if(e.children.forEach(function(e){const t=Ev.Objects.NodeAttribute[e.ID];void 0!==t&&(n=t)}),void 0===n)t=new sr;else{let e=0;void 0!==n.CameraProjectionType&&1===n.CameraProjectionType.value&&(e=1);let i=1;void 0!==n.NearPlane&&(i=n.NearPlane.value/1e3);let r=1e3;void 0!==n.FarPlane&&(r=n.FarPlane.value/1e3);let s=window.innerWidth,a=window.innerHeight;void 0!==n.AspectWidth&&void 0!==n.AspectHeight&&(s=n.AspectWidth.value,a=n.AspectHeight.value);const o=s/a;let l=45;void 0!==n.FieldOfView&&(l=n.FieldOfView.value);const c=n.FocalLength?n.FocalLength.value:null;switch(e){case 0:t=new ws(l,o,i,r),null!==c&&t.setFocalLength(c);break;case 1:console.warn("THREE.FBXLoader: Orthographic cameras not supported yet."),t=new sr;break;default:console.warn("THREE.FBXLoader: Unknown camera type "+e+"."),t=new sr}}return t}createLight(e){let t,n;if(e.children.forEach(function(e){const t=Ev.Objects.NodeAttribute[e.ID];void 0!==t&&(n=t)}),void 0===n)t=new sr;else{let e;e=void 0===n.LightType?0:n.LightType.value;let i=16777215;void 0!==n.Color&&(i=zn.colorSpaceToWorking((new wr).fromArray(n.Color.value),Ut));let r=void 0===n.Intensity?1:n.Intensity.value/100;void 0!==n.CastLightOnObject&&0===n.CastLightOnObject.value&&(r=0);let s=0;void 0!==n.FarAttenuationEnd&&(s=void 0!==n.EnableFarAttenuation&&0===n.EnableFarAttenuation.value?0:n.FarAttenuationEnd.value);const a=1;switch(e){case 0:t=new uu(i,r,s,a);break;case 1:t=new pu(i,r);break;case 2:let e=Math.PI/3;void 0!==n.InnerAngle&&(e=Sn.degToRad(n.InnerAngle.value));let o=0;void 0!==n.OuterAngle&&(o=Sn.degToRad(n.OuterAngle.value),o=Math.max(o,1)),t=new su(i,r,s,e,o,a);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new uu(i,r)}void 0!==n.CastShadows&&1===n.CastShadows.value&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,r=null,s=null;const a=[];if(e.children.forEach(function(e){t.has(e.ID)&&(r=t.get(e.ID)),n.has(e.ID)&&a.push(n.get(e.ID))}),a.length>1?s=a:a.length>0?s=a[0]:(s=new uc({name:zc.DEFAULT_MATERIAL_NAME,color:13421772}),a.push(s)),"color"in r.attributes&&a.forEach(function(e){e.vertexColors=!0}),r.groups.length>0){let e=!1;for(let t=0,n=r.groups.length;t<n;t++){const n=r.groups[t];(n.materialIndex<0||n.materialIndex>=a.length)&&(n.materialIndex=a.length,e=!0)}if(e){const e=new uc;a.push(e)}}return r.FBX_Deformer?(i=new da(r,s),i.normalizeSkinWeights()):i=new ds(r,s),i}createCurve(e,t){const n=e.children.reduce(function(e,n){return t.has(n.ID)&&(e=t.get(n.ID)),e},null),i=new io({name:zc.DEFAULT_MATERIAL_NAME,color:3342591,linewidth:1});return new ho(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),n.eulerOrder=Wv("RotationOrder"in t?t.RotationOrder.value:0),"Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){if("LookAtProperty"in t){Av.get(e.ID).children.forEach(function(t){if("LookAtProperty"===t.relationship){const n=Ev.Objects.Model[t.ID];if("Lcl_Translation"in n){const t=n.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(t),Rv.add(e.target)):e.lookAt((new En).fromArray(t))}}})}}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const r in e){const s=e[r];Av.get(parseInt(s.ID)).parents.forEach(function(e){if(t.has(e.ID)){const t=e.ID;Av.get(t).parents.forEach(function(e){if(n.has(e.ID)){n.get(e.ID).bind(new va(s.bones),i[e.ID])}})}})}}parsePoseNodes(){const e={};if("Pose"in Ev.Objects){const t=Ev.Objects.Pose;for(const n in t)if("BindPose"===t[n].attrType&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(t){e[t.Node]=(new Li).fromArray(t.Matrix.a)}):e[i.Node]=(new Li).fromArray(i.Matrix.a)}}return e}addGlobalSceneSettings(){if("GlobalSettings"in Ev){if("AmbientColor"in Ev.GlobalSettings){const e=Ev.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(0!==t||0!==n||0!==i){const e=(new wr).setRGB(t,n,i,Ut);Rv.add(new mu(e,1))}}"UnitScaleFactor"in Ev.GlobalSettings&&(Rv.userData.unitScaleFactor=Ev.GlobalSettings.UnitScaleFactor.value)}}}class Pv{constructor(){this.negativeMaterialIndices=!1}parse(e){const t=new Map;if("Geometry"in Ev.Objects){const n=Ev.Objects.Geometry;for(const i in n){const r=Av.get(parseInt(i)),s=this.parseGeometry(r,n[i],e);t.set(parseInt(i),s)}}return!0===this.negativeMaterialIndices&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,r=[],s=e.parents.map(function(e){return Ev.Objects.Model[e.ID]});if(0===s.length)return;const a=e.children.reduce(function(e,t){return void 0!==i[t.ID]&&(e=i[t.ID]),e},null);e.children.forEach(function(e){void 0!==n.morphTargets[e.ID]&&r.push(n.morphTargets[e.ID])});const o=s[0],l={};"RotationOrder"in o&&(l.eulerOrder=Wv(o.RotationOrder.value)),"InheritType"in o&&(l.inheritType=parseInt(o.InheritType.value)),"GeometricTranslation"in o&&(l.translation=o.GeometricTranslation.value),"GeometricRotation"in o&&(l.rotation=o.GeometricRotation.value),"GeometricScaling"in o&&(l.scale=o.GeometricScaling.value);const c=Hv(l);return this.genGeometry(t,a,r,c)}genGeometry(e,t,n,i){const r=new es;e.attrName&&(r.name=e.attrName);const s=this.parseGeoNode(e,t),a=this.genBuffers(s),o=new Xr(a.vertex,3);if(o.applyMatrix4(i),r.setAttribute("position",o),a.colors.length>0&&r.setAttribute("color",new Xr(a.colors,3)),t&&(r.setAttribute("skinIndex",new Gr(a.weightsIndices,4)),r.setAttribute("skinWeight",new Xr(a.vertexWeights,4)),r.FBX_Deformer=t),a.normal.length>0){const e=(new Cn).getNormalMatrix(i),t=new Xr(a.normal,3);t.applyNormalMatrix(e),r.setAttribute("normal",t)}if(a.uvs.forEach(function(e,t){const n=0===t?"uv":`uv${t}`;r.setAttribute(n,new Xr(a.uvs[t],2))}),s.material&&"AllSame"!==s.material.mappingType){let e=a.materialIndex[0],t=0;if(a.materialIndex.forEach(function(n,i){n!==e&&(r.addGroup(t,i-t,e),e=n,t=i)}),r.groups.length>0){const t=r.groups[r.groups.length-1],n=t.start+t.count;n!==a.materialIndex.length&&r.addGroup(n,a.materialIndex.length-n,e)}0===r.groups.length&&r.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(r,e,n,i),r}parseGeoNode(e,t){const n={};if(n.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],n.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&e.LayerElementColor[0].Colors&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let t=0;for(;e.LayerElementUV[t];)e.LayerElementUV[t].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[t])),t++}return n.weightTable={},null!==t&&(n.skeleton=t,t.rawBones.forEach(function(e,t){e.indices.forEach(function(i,r){void 0===n.weightTable[i]&&(n.weightTable[i]=[]),n.weightTable[i].push({id:t,weight:e.weights[r]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,r=!1,s=[],a=[],o=[],l=[],c=[],u=[];const h=this;return e.vertexIndices.forEach(function(d,p){let m,f=!1;d<0&&(d^=-1,f=!0);let g=[],v=[];if(s.push(3*d,3*d+1,3*d+2),e.color){const t=Vv(p,n,d,e.color);o.push(t[0],t[1],t[2])}if(e.skeleton){if(void 0!==e.weightTable[d]&&e.weightTable[d].forEach(function(e){v.push(e.weight),g.push(e.id)}),v.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);const e=[0,0,0,0],t=[0,0,0,0];v.forEach(function(n,i){let r=n,s=g[i];t.forEach(function(t,n,i){if(r>t){i[n]=r,r=t;const a=e[n];e[n]=s,s=a}})}),g=e,v=t}for(;v.length<4;)v.push(0),g.push(0);for(let e=0;e<4;++e)c.push(v[e]),u.push(g[e])}if(e.normal){const t=Vv(p,n,d,e.normal);a.push(t[0],t[1],t[2])}e.material&&"AllSame"!==e.material.mappingType&&(m=Vv(p,n,d,e.material)[0],m<0&&(h.negativeMaterialIndices=!0,m=0)),e.uv&&e.uv.forEach(function(e,t){const i=Vv(p,n,d,e);void 0===l[t]&&(l[t]=[]),l[t].push(i[0]),l[t].push(i[1])}),i++,f&&(h.genFace(t,e,s,m,a,o,l,c,u,i),n++,i=0,s=[],a=[],o=[],l=[],c=[],u=[])}),t}getNormalNewell(e){const t=new En(0,0,0);for(let n=0;n<e.length;n++){const i=e[n],r=e[(n+1)%e.length];t.x+=(i.y-r.y)*(i.z+r.z),t.y+=(i.z-r.z)*(i.x+r.x),t.z+=(i.x-r.x)*(i.y+r.y)}return t.normalize(),t}getNormalTangentAndBitangent(e){const t=this.getNormalNewell(e),n=(Math.abs(t.z)>.5?new En(0,1,0):new En(0,0,1)).cross(t).normalize(),i=t.clone().cross(n).normalize();return{normal:t,tangent:n,bitangent:i}}flattenVertex(e,t,n){return new wn(e.dot(t),e.dot(n))}genFace(e,t,n,i,r,s,a,o,l,c){let u;if(c>3){const e=[],i=t.baseVertexPositions||t.vertexPositions;for(let t=0;t<n.length;t+=3)e.push(new En(i[n[t]],i[n[t+1]],i[n[t+2]]));const{tangent:r,bitangent:s}=this.getNormalTangentAndBitangent(e),a=[];for(const t of e)a.push(this.flattenVertex(t,r,s));u=zl.triangulateShape(a,[])}else u=[[0,1,2]];for(const[h,d,p]of u)e.vertex.push(t.vertexPositions[n[3*h]]),e.vertex.push(t.vertexPositions[n[3*h+1]]),e.vertex.push(t.vertexPositions[n[3*h+2]]),e.vertex.push(t.vertexPositions[n[3*d]]),e.vertex.push(t.vertexPositions[n[3*d+1]]),e.vertex.push(t.vertexPositions[n[3*d+2]]),e.vertex.push(t.vertexPositions[n[3*p]]),e.vertex.push(t.vertexPositions[n[3*p+1]]),e.vertex.push(t.vertexPositions[n[3*p+2]]),t.skeleton&&(e.vertexWeights.push(o[4*h]),e.vertexWeights.push(o[4*h+1]),e.vertexWeights.push(o[4*h+2]),e.vertexWeights.push(o[4*h+3]),e.vertexWeights.push(o[4*d]),e.vertexWeights.push(o[4*d+1]),e.vertexWeights.push(o[4*d+2]),e.vertexWeights.push(o[4*d+3]),e.vertexWeights.push(o[4*p]),e.vertexWeights.push(o[4*p+1]),e.vertexWeights.push(o[4*p+2]),e.vertexWeights.push(o[4*p+3]),e.weightsIndices.push(l[4*h]),e.weightsIndices.push(l[4*h+1]),e.weightsIndices.push(l[4*h+2]),e.weightsIndices.push(l[4*h+3]),e.weightsIndices.push(l[4*d]),e.weightsIndices.push(l[4*d+1]),e.weightsIndices.push(l[4*d+2]),e.weightsIndices.push(l[4*d+3]),e.weightsIndices.push(l[4*p]),e.weightsIndices.push(l[4*p+1]),e.weightsIndices.push(l[4*p+2]),e.weightsIndices.push(l[4*p+3])),t.color&&(e.colors.push(s[3*h]),e.colors.push(s[3*h+1]),e.colors.push(s[3*h+2]),e.colors.push(s[3*d]),e.colors.push(s[3*d+1]),e.colors.push(s[3*d+2]),e.colors.push(s[3*p]),e.colors.push(s[3*p+1]),e.colors.push(s[3*p+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(r[3*h]),e.normal.push(r[3*h+1]),e.normal.push(r[3*h+2]),e.normal.push(r[3*d]),e.normal.push(r[3*d+1]),e.normal.push(r[3*d+2]),e.normal.push(r[3*p]),e.normal.push(r[3*p+1]),e.normal.push(r[3*p+2])),t.uv&&t.uv.forEach(function(t,n){void 0===e.uvs[n]&&(e.uvs[n]=[]),e.uvs[n].push(a[n][2*h]),e.uvs[n].push(a[n][2*h+1]),e.uvs[n].push(a[n][2*d]),e.uvs[n].push(a[n][2*d+1]),e.uvs[n].push(a[n][2*p]),e.uvs[n].push(a[n][2*p+1])})}addMorphTargets(e,t,n,i){if(0===n.length)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const r=this;n.forEach(function(n){n.rawTargets.forEach(function(n){const s=Ev.Objects.Geometry[n.geoID];void 0!==s&&r.genMorphGeometry(e,t,s,i,n.name)})})}genMorphGeometry(e,t,n,i,r){const s=void 0!==t.Vertices?t.Vertices.a:[],a=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],o=void 0!==n.Vertices?n.Vertices.a:[],l=void 0!==n.Indexes?n.Indexes.a:[],c=3*e.attributes.position.count,u=new Float32Array(c);for(let m=0;m<l.length;m++){const e=3*l[m];u[e]=o[3*m],u[e+1]=o[3*m+1],u[e+2]=o[3*m+2]}const h={vertexIndices:a,vertexPositions:u,baseVertexPositions:s},d=this.genBuffers(h),p=new Xr(d.vertex,3);p.name=r||n.attrName,p.applyMatrix4(i),e.morphAttributes.position.push(p)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let r=[];return"IndexToDirect"===n&&("NormalIndex"in e?r=e.NormalIndex.a:"NormalsIndex"in e&&(r=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:r,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let r=[];return"IndexToDirect"===n&&(r=e.UVIndex.a),{dataSize:2,buffer:i,indices:r,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let r=[];"IndexToDirect"===n&&(r=e.ColorIndex.a);for(let s=0,a=new wr;s<i.length;s+=4)a.fromArray(i,s),zn.colorSpaceToWorking(a,Ut),a.toArray(i,s);return{dataSize:4,buffer:i,indices:r,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,r=[];for(let s=0;s<i.length;++s)r.push(s);return{dataSize:1,buffer:i,indices:r,mappingType:t,referenceType:n}}parseNurbsGeometry(e){const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new es;const n=t-1,i=e.KnotVector.a,r=[],s=e.Points.a;for(let c=0,u=s.length;c<u;c+=4)r.push((new Zn).fromArray(s,c));let a,o;if("Closed"===e.Form)r.push(r[0]);else if("Periodic"===e.Form){a=n,o=i.length-1-a;for(let e=0;e<n;++e)r.push(r[e])}const l=new Uf(n,i,r,a,o).getPoints(12*r.length);return(new es).setFromPoints(l)}}class Lv{parse(){const e=[],t=this.parseClips();if(void 0!==t)for(const n in t){const i=t[n],r=this.addClip(i);e.push(r)}return e}parseClips(){if(void 0===Ev.Objects.AnimationCurve)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=Ev.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(null!==i.attrName.match(/S|R|T|DeformPercent/)){const e={id:i.id,attr:i.attrName,curves:{}};t.set(e.id,e)}}return t}parseAnimationCurves(e){const t=Ev.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(Bv),values:t[n].KeyValueFloat.a},r=Av.get(i.id);if(void 0!==r){const t=r.parents[0].ID,n=r.parents[0].relationship;n.match(/X/)?e.get(t).curves.x=i:n.match(/Y/)?e.get(t).curves.y=i:n.match(/Z/)?e.get(t).curves.z=i:n.match(/DeformPercent/)&&e.has(t)&&(e.get(t).curves.morph=i)}}}parseAnimationLayers(e){const t=Ev.Objects.AnimationLayer,n=new Map;for(const i in t){const t=[],r=Av.get(parseInt(i));if(void 0!==r){r.children.forEach(function(n,i){if(e.has(n.ID)){const r=e.get(n.ID);if(void 0!==r.curves.x||void 0!==r.curves.y||void 0!==r.curves.z){if(void 0===t[i]){const e=Av.get(n.ID).parents.filter(function(e){return void 0!==e.relationship})[0].ID;if(void 0!==e){const r=Ev.Objects.Model[e.toString()];if(void 0===r)return void console.warn("THREE.FBXLoader: Encountered a unused curve.",n);const s={modelName:r.attrName?ih.sanitizeNodeName(r.attrName):"",ID:r.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Rv.traverse(function(e){e.ID===r.id&&(s.transform=e.matrix,e.userData.transformData&&(s.eulerOrder=e.userData.transformData.eulerOrder))}),s.transform||(s.transform=new Li),"PreRotation"in r&&(s.preRotation=r.PreRotation.value),"PostRotation"in r&&(s.postRotation=r.PostRotation.value),t[i]=s}}t[i]&&(t[i][r.attr]=r)}else if(void 0!==r.curves.morph){if(void 0===t[i]){const e=Av.get(n.ID).parents.filter(function(e){return void 0!==e.relationship})[0].ID,r=Av.get(e).parents[0].ID,s=Av.get(r).parents[0].ID,a=Av.get(s).parents[0].ID,o=Ev.Objects.Model[a],l={modelName:o.attrName?ih.sanitizeNodeName(o.attrName):"",morphName:Ev.Objects.Deformer[e].attrName};t[i]=l}t[i][r.attr]=r}}}),n.set(parseInt(i),t)}}return n}parseAnimStacks(e){const t=Ev.Objects.AnimationStack,n={};for(const i in t){const r=Av.get(parseInt(i)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const s=e.get(r[0].ID);n[i]={name:t[i].attrName,layer:s}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(e){t=t.concat(n.generateTracks(e))}),new Uc(e.name,-1,t)}generateTracks(e){const t=[];let n=new En,i=new En;if(e.transform&&e.transform.decompose(n,new Mn,i),n=n.toArray(),i=i.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){const i=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");void 0!==i&&t.push(i)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){const n=this.generateRotationTrack(e.modelName,e.R.curves,e.preRotation,e.postRotation,e.eulerOrder);void 0!==n&&t.push(n)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){const n=this.generateVectorTrack(e.modelName,e.S.curves,i,"scale");void 0!==n&&t.push(n)}if(void 0!==e.DeformPercent){const n=this.generateMorphTrack(e);void 0!==n&&t.push(n)}return t}generateVectorTrack(e,t,n,i){const r=this.getTimesForAllAxes(t),s=this.getKeyframeTrackValues(r,t,n);return new Fc(e+"."+i,r,s)}generateRotationTrack(e,t,n,i,r){let s,a;if(void 0!==t.x&&void 0!==t.y&&void 0!==t.z){const e=this.interpolateRotations(t.x,t.y,t.z,r);s=e[0],a=e[1]}const o=Wv(0);void 0!==n&&((n=n.map(Sn.degToRad)).push(o),n=(new Gi).fromArray(n),n=(new Mn).setFromEuler(n)),void 0!==i&&((i=i.map(Sn.degToRad)).push(o),i=(new Gi).fromArray(i),i=(new Mn).setFromEuler(i).invert());const l=new Mn,c=new Gi,u=[];if(!a||!s)return new Ic(e+".quaternion",[0],[0]);for(let h=0;h<a.length;h+=3){if(c.set(a[h],a[h+1],a[h+2],r),l.setFromEuler(c),void 0!==n&&l.premultiply(n),void 0!==i&&l.multiply(i),h>2){(new Mn).fromArray(u,(h-3)/3*4).dot(l)<0&&l.set(-l.x,-l.y,-l.z,-l.w)}l.toArray(u,h/3*4)}return new Ic(e+".quaternion",s,u)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(e){return e/100}),i=Rv.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Pc(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t=t.sort(function(e,t){return e-t}),t.length>1){let e=1,n=t[0];for(let i=1;i<t.length;i++){const r=t[i];r!==n&&(t[e]=r,n=r,e++)}t=t.slice(0,e)}return t}getKeyframeTrackValues(e,t,n){const i=n,r=[];let s=-1,a=-1,o=-1;return e.forEach(function(e){if(t.x&&(s=t.x.times.indexOf(e)),t.y&&(a=t.y.times.indexOf(e)),t.z&&(o=t.z.times.indexOf(e)),-1!==s){const e=t.x.values[s];r.push(e),i[0]=e}else r.push(i[0]);if(-1!==a){const e=t.y.values[a];r.push(e),i[1]=e}else r.push(i[1]);if(-1!==o){const e=t.z.values[o];r.push(e),i[2]=e}else r.push(i[2])}),r}interpolateRotations(e,t,n,i){const r=[],s=[];r.push(e.times[0]),s.push(Sn.degToRad(e.values[0])),s.push(Sn.degToRad(t.values[0])),s.push(Sn.degToRad(n.values[0]));for(let a=1;a<e.values.length;a++){const o=[e.values[a-1],t.values[a-1],n.values[a-1]];if(isNaN(o[0])||isNaN(o[1])||isNaN(o[2]))continue;const l=o.map(Sn.degToRad),c=[e.values[a],t.values[a],n.values[a]];if(isNaN(c[0])||isNaN(c[1])||isNaN(c[2]))continue;const u=c.map(Sn.degToRad),h=[c[0]-o[0],c[1]-o[1],c[2]-o[2]],d=[Math.abs(h[0]),Math.abs(h[1]),Math.abs(h[2])];if(d[0]>=180||d[1]>=180||d[2]>=180){const t=Math.max(...d)/180,n=new Gi(...l,i),o=new Gi(...u,i),c=(new Mn).setFromEuler(n),h=(new Mn).setFromEuler(o);c.dot(h)&&h.set(-h.x,-h.y,-h.z,-h.w);const p=e.times[a-1],m=e.times[a]-p,f=new Mn,g=new Gi;for(let e=0;e<1;e+=1/t)f.copy(c.clone().slerp(h.clone(),e)),r.push(p+e*m),g.setFromQuaternion(f,i),s.push(g.x),s.push(g.y),s.push(g.z)}else r.push(e.times[a]),s.push(Sn.degToRad(e.values[a])),s.push(Sn.degToRad(t.values[a])),s.push(Sn.degToRad(n.values[a]))}return[r,s]}}class Iv{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new Uv,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(e,i){const r=e.match(/^[\s\t]*;/),s=e.match(/^[\s\t]*$/);if(r||s)return;const a=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),o=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),l=e.match("^\\t{"+(t.currentIndent-1)+"}}");a?t.parseNodeBegin(e,a):o?t.parseNodeProperty(e,o,n[++i]):l?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},s=this.parseNodeAttr(i),a=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(n,r):n in a?("PoseNode"===n?a.PoseNode.push(r):void 0!==a[n].id&&(a[n]={},a[n][a[n].id]=a[n]),""!==s.id&&(a[n][s.id]=r)):"number"==typeof s.id?(a[n]={},a[n][s.id]=r):"Properties70"!==n&&(a[n]="PoseNode"===n?[r]:r),"number"==typeof s.id&&(r.id=s.id),""!==s.name&&(r.attrName=s.name),""!==s.type&&(r.attrType=s.type),this.pushStack(r)}parseNodeAttr(e){let t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),r=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===i&&","===r&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());const s=this.getCurrentNode();if("Properties70"!==s.name){if("C"===i){const e=r.split(",").slice(1),t=parseInt(e[0]),n=parseInt(e[1]);let a=r.split(",").slice(3);a=a.map(function(e){return e.trim().replace(/^"/,"")}),i="connections",r=[t,n],function(e,t){for(let n=0,i=e.length,r=t.length;n<r;n++,i++)e[i]=t[n]}(r,a),void 0===s[i]&&(s[i]=[])}"Node"===i&&(s.id=r),i in s&&Array.isArray(s[i])?s[i].push(r):"a"!==i?s[i]=r:s.a=r,this.setCurrentProp(s,i),"a"===i&&","!==r.slice(-1)&&(s.a=jv(r))}else this.parseNodeSpecialProperty(e,i,r)}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=jv(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=i[0],s=i[1],a=i[2],o=i[3];let l=i[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":l=parseFloat(l);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":l=jv(l)}this.getPrevNode()[r]={type:s,type2:a,flag:o,value:l},this.setCurrentProp(this.getPrevNode(),r)}}class Dv{parse(e){const t=new Fv(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new Uv;for(;!this.endOfContent(t);){const e=this.parseNode(t,n);null!==e&&i.add(e.name,e)}return i}endOfContent(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const s=e.getUint8(),a=e.getString(s);if(0===i)return null;const o=[];for(let h=0;h<r;h++)o.push(this.parseProperty(e));const l=o.length>0?o[0]:"",c=o.length>1?o[1]:"",u=o.length>2?o[2]:"";for(n.singleProperty=1===r&&e.getOffset()===i;i>e.getOffset();){const i=this.parseNode(e,t);null!==i&&this.parseSubNode(a,n,i)}return n.propertyList=o,"number"==typeof l&&(n.id=l),""!==c&&(n.attrName=c),""!==u&&(n.attrType=u),""!==a&&(n.name=a),n}parseSubNode(e,t,n){if(!0===n.singleProperty){const e=n.propertyList[0];Array.isArray(e)?(t[n.name]=n,n.a=e):t[n.name]=e}else if("Connections"===e&&"C"===n.name){const e=[];n.propertyList.forEach(function(t,n){0!==n&&e.push(t)}),void 0===t.connections&&(t.connections=[]),t.connections.push(e)}else if("Properties70"===n.name){Object.keys(n).forEach(function(e){t[e]=n[e]})}else if("Properties70"===e&&"P"===n.name){let e=n.propertyList[0],i=n.propertyList[1];const r=n.propertyList[2],s=n.propertyList[3];let a;0===e.indexOf("Lcl ")&&(e=e.replace("Lcl ","Lcl_")),0===i.indexOf("Lcl ")&&(i=i.replace("Lcl ","Lcl_")),a="Color"===i||"ColorRGB"===i||"Vector"===i||"Vector3D"===i||0===i.indexOf("Lcl_")?[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:n.propertyList[4],t[e]={type:i,type2:r,flag:s,value:a}}else void 0===t[n.name]?"number"==typeof n.id?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:"PoseNode"===n.name?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):void 0===t[n.name][n.id]&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),r=e.getUint32(),s=e.getUint32();if(0===r)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}const a=dg(new Uint8Array(e.getArrayBuffer(s))),o=new Fv(a.buffer);switch(t){case"b":case"c":return o.getBooleanArray(i);case"d":return o.getFloat64Array(i);case"f":return o.getFloat32Array(i);case"i":return o.getInt32Array(i);case"l":return o.getInt64Array(i)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class Fv{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t,this._textDecoder=new TextDecoder}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return!(1&~this.getUint8())}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){const t=this.offset;let n=new Uint8Array(this.dv.buffer,t,e);this.skip(e);const i=n.indexOf(0);return i>=0&&(n=new Uint8Array(this.dv.buffer,t,i)),this._textDecoder.decode(n)}}class Uv{add(e,t){this[e]=t}}function Ov(e){const t=e.match(/FBXVersion: (\d+)/);if(t){return parseInt(t[1])}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function Bv(e){return e/46186158e3}const kv=[];function Vv(e,t,n,i){let r;switch(i.mappingType){case"ByPolygonVertex":r=e;break;case"ByPolygon":r=t;break;case"ByVertice":r=n;break;case"AllSame":r=i.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+i.mappingType)}"IndexToDirect"===i.referenceType&&(r=i.indices[r]);const s=r*i.dataSize,a=s+i.dataSize;return function(e,t,n,i){for(let r=n,s=0;r<i;r++,s++)e[s]=t[r];return e}(kv,i.buffer,s,a)}const zv=new Gi,Gv=new En;function Hv(e){const t=new Li,n=new Li,i=new Li,r=new Li,s=new Li,a=new Li,o=new Li,l=new Li,c=new Li,u=new Li,h=new Li,d=new Li,p=e.inheritType?e.inheritType:0;e.translation&&t.setPosition(Gv.fromArray(e.translation));const m=Wv(0);if(e.preRotation){const t=e.preRotation.map(Sn.degToRad);t.push(m),n.makeRotationFromEuler(zv.fromArray(t))}if(e.rotation){const t=e.rotation.map(Sn.degToRad);t.push(e.eulerOrder||m),i.makeRotationFromEuler(zv.fromArray(t))}if(e.postRotation){const t=e.postRotation.map(Sn.degToRad);t.push(m),r.makeRotationFromEuler(zv.fromArray(t)),r.invert()}e.scale&&s.scale(Gv.fromArray(e.scale)),e.scalingOffset&&o.setPosition(Gv.fromArray(e.scalingOffset)),e.scalingPivot&&a.setPosition(Gv.fromArray(e.scalingPivot)),e.rotationOffset&&l.setPosition(Gv.fromArray(e.rotationOffset)),e.rotationPivot&&c.setPosition(Gv.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(h.copy(e.parentMatrix),u.copy(e.parentMatrixWorld));const f=n.clone().multiply(i).multiply(r),g=new Li;g.extractRotation(u);const v=new Li;v.copyPosition(u);const b=v.clone().invert().multiply(u),y=g.clone().invert().multiply(b),x=s,_=new Li;if(0===p)_.copy(g).multiply(f).multiply(y).multiply(x);else if(1===p)_.copy(g).multiply(y).multiply(f).multiply(x);else{const e=(new Li).scale((new En).setFromMatrixScale(h)).clone().invert(),t=y.clone().multiply(e);_.copy(g).multiply(f).multiply(t).multiply(x)}const T=c.clone().invert(),S=a.clone().invert();let w=t.clone().multiply(l).multiply(c).multiply(n).multiply(i).multiply(r).multiply(T).multiply(o).multiply(a).multiply(s).multiply(S);const M=(new Li).copyPosition(w),E=u.clone().multiply(M);return d.copyPosition(E),w=d.clone().multiply(_),w.premultiply(u.invert()),w}function Wv(e){const t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function jv(e){return e.split(",").map(function(e){return parseFloat(e)})}function Xv(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=e.byteLength),(new TextDecoder).decode(new Uint8Array(e,t,n))}class qv extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new Wc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(e){const n=r.parse(JSON.parse(e));t&&t(n)},n,i)}parse(e){return new $v(e)}}class $v{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],i=function(e,t,n){const i=Array.from(e),r=t/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,a=[];let o=0,l=0;for(let c=0;c<i.length;c++){const e=i[c];if("\n"===e)o=0,l-=s;else{const t=Yv(e,r,o,l,n);o+=t.offsetX,a.push(t.path)}}return a}(e,t,this.data);for(let r=0,s=i.length;r<s;r++)n.push(...i[r].toShapes());return n}}function Yv(e,t,n,i,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const a=new ud;let o,l,c,u,h,d,p,m;if(s.o){const e=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=e.length;r<s;){switch(e[r++]){case"m":o=e[r++]*t+n,l=e[r++]*t+i,a.moveTo(o,l);break;case"l":o=e[r++]*t+n,l=e[r++]*t+i,a.lineTo(o,l);break;case"q":c=e[r++]*t+n,u=e[r++]*t+i,h=e[r++]*t+n,d=e[r++]*t+i,a.quadraticCurveTo(h,d,c,u);break;case"b":c=e[r++]*t+n,u=e[r++]*t+i,h=e[r++]*t+n,d=e[r++]*t+i,p=e[r++]*t+n,m=e[r++]*t+i,a.bezierCurveTo(h,d,p,m,c,u)}}}return{offsetX:s.ha*t,path:a}}class Kv extends zc{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(e){return new nb(e)}),this.register(function(e){return new ib(e)}),this.register(function(e){return new db(e)}),this.register(function(e){return new pb(e)}),this.register(function(e){return new mb(e)}),this.register(function(e){return new sb(e)}),this.register(function(e){return new ab(e)}),this.register(function(e){return new ob(e)}),this.register(function(e){return new lb(e)}),this.register(function(e){return new tb(e)}),this.register(function(e){return new cb(e)}),this.register(function(e){return new rb(e)}),this.register(function(e){return new hb(e)}),this.register(function(e){return new ub(e)}),this.register(function(e){return new Jv(e)}),this.register(function(e){return new fb(e)}),this.register(function(e){return new gb(e)})}load(e,t,n,i){const r=this;let s;if(""!==this.resourcePath)s=this.resourcePath;else if(""!==this.path){const t=yu.extractUrlBase(e);s=yu.resolveURL(t,this.path)}else s=yu.extractUrlBase(e);this.manager.itemStart(e);const a=function(t){i?i(t):console.error(t),r.manager.itemError(e),r.manager.itemEnd(e)},o=new Wc(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(n){try{r.parse(n,s,function(n){t(n),r.manager.itemEnd(e)},a)}catch(p3){a(p3)}},n,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return-1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return-1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r;const s={},a={},o=new TextDecoder;if("string"==typeof e)r=JSON.parse(e);else if(e instanceof ArrayBuffer){if(o.decode(new Uint8Array(e,0,4))===vb){try{s[Zv.KHR_BINARY_GLTF]=new xb(e)}catch(c){return void(i&&i(c))}r=JSON.parse(s[Zv.KHR_BINARY_GLTF].content)}else r=JSON.parse(o.decode(e))}else r=e;if(void 0===r.asset||r.asset.version[0]<2)return void(i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.")));const l=new Xb(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let u=0;u<this.pluginCallbacks.length;u++){const e=this.pluginCallbacks[u](l);e.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[e.name]=e,s[e.name]=!0}if(r.extensionsUsed)for(let u=0;u<r.extensionsUsed.length;++u){const e=r.extensionsUsed[u],t=r.extensionsRequired||[];switch(e){case Zv.KHR_MATERIALS_UNLIT:s[e]=new eb;break;case Zv.KHR_DRACO_MESH_COMPRESSION:s[e]=new _b(r,this.dracoLoader);break;case Zv.KHR_TEXTURE_TRANSFORM:s[e]=new Tb;break;case Zv.KHR_MESH_QUANTIZATION:s[e]=new Sb;break;default:t.indexOf(e)>=0&&void 0===a[e]&&console.warn('THREE.GLTFLoader: Unknown extension "'+e+'".')}}l.setExtensions(s),l.setPlugins(a),l.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function Qv(){let e={};return{get:function(t){return e[t]},add:function(t,n){e[t]=n},remove:function(t){delete e[t]},removeAll:function(){e={}}}}const Zv={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class Jv{constructor(e){this.parser=e,this.name=Zv.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const i=t[n];i.extensions&&i.extensions[this.name]&&void 0!==i.extensions[this.name].light&&e._addNodeRef(this.cache,i.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const r=t.json,s=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let a;const o=new wr(16777215);void 0!==s.color&&o.setRGB(s.color[0],s.color[1],s.color[2],Ot);const l=void 0!==s.range?s.range:0;switch(s.type){case"directional":a=new pu(o),a.target.position.set(0,0,-1),a.add(a.target);break;case"point":a=new uu(o),a.distance=l;break;case"spot":a=new su(o),a.distance=l,s.spot=s.spot||{},s.spot.innerConeAngle=void 0!==s.spot.innerConeAngle?s.spot.innerConeAngle:0,s.spot.outerConeAngle=void 0!==s.spot.outerConeAngle?s.spot.outerConeAngle:Math.PI/4,a.angle=s.spot.outerConeAngle,a.penumbra=1-s.spot.innerConeAngle/s.spot.outerConeAngle,a.target.position.set(0,0,-1),a.add(a.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+s.type)}return a.position.set(0,0,0),Vb(a,s),void 0!==s.intensity&&(a.intensity=s.intensity),a.name=t.createUniqueName(s.name||"light_"+e),i=Promise.resolve(a),t.cache.add(n,i),i}getDependency(e,t){if("light"===e)return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,i=n.json.nodes[e],r=(i.extensions&&i.extensions[this.name]||{}).light;return void 0===r?null:this._loadLight(r).then(function(e){return n._getNodeRef(t.cache,r,e)})}}class eb{constructor(){this.name=Zv.KHR_MATERIALS_UNLIT}getMaterialType(){return Rr}extendParams(e,t,n){const i=[];e.color=new wr(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const t=r.baseColorFactor;e.color.setRGB(t[0],t[1],t[2],Ot),e.opacity=t[3]}void 0!==r.baseColorTexture&&i.push(n.assignTexture(e,"map",r.baseColorTexture,Ut))}return Promise.all(i)}}class tb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name].emissiveStrength;return void 0!==i&&(t.emissiveIntensity=i),Promise.resolve()}}class nb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];if(void 0!==s.clearcoatFactor&&(t.clearcoat=s.clearcoatFactor),void 0!==s.clearcoatTexture&&r.push(n.assignTexture(t,"clearcoatMap",s.clearcoatTexture)),void 0!==s.clearcoatRoughnessFactor&&(t.clearcoatRoughness=s.clearcoatRoughnessFactor),void 0!==s.clearcoatRoughnessTexture&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",s.clearcoatRoughnessTexture)),void 0!==s.clearcoatNormalTexture&&(r.push(n.assignTexture(t,"clearcoatNormalMap",s.clearcoatNormalTexture)),void 0!==s.clearcoatNormalTexture.scale)){const e=s.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new wn(e,e)}return Promise.all(r)}}class ib{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_DISPERSION}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return t.dispersion=void 0!==i.dispersion?i.dispersion:0,Promise.resolve()}}class rb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.iridescenceFactor&&(t.iridescence=s.iridescenceFactor),void 0!==s.iridescenceTexture&&r.push(n.assignTexture(t,"iridescenceMap",s.iridescenceTexture)),void 0!==s.iridescenceIor&&(t.iridescenceIOR=s.iridescenceIor),void 0===t.iridescenceThicknessRange&&(t.iridescenceThicknessRange=[100,400]),void 0!==s.iridescenceThicknessMinimum&&(t.iridescenceThicknessRange[0]=s.iridescenceThicknessMinimum),void 0!==s.iridescenceThicknessMaximum&&(t.iridescenceThicknessRange[1]=s.iridescenceThicknessMaximum),void 0!==s.iridescenceThicknessTexture&&r.push(n.assignTexture(t,"iridescenceThicknessMap",s.iridescenceThicknessTexture)),Promise.all(r)}}class sb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_SHEEN}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new wr(0,0,0),t.sheenRoughness=0,t.sheen=1;const s=i.extensions[this.name];if(void 0!==s.sheenColorFactor){const e=s.sheenColorFactor;t.sheenColor.setRGB(e[0],e[1],e[2],Ot)}return void 0!==s.sheenRoughnessFactor&&(t.sheenRoughness=s.sheenRoughnessFactor),void 0!==s.sheenColorTexture&&r.push(n.assignTexture(t,"sheenColorMap",s.sheenColorTexture,Ut)),void 0!==s.sheenRoughnessTexture&&r.push(n.assignTexture(t,"sheenRoughnessMap",s.sheenRoughnessTexture)),Promise.all(r)}}class ab{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.transmissionFactor&&(t.transmission=s.transmissionFactor),void 0!==s.transmissionTexture&&r.push(n.assignTexture(t,"transmissionMap",s.transmissionTexture)),Promise.all(r)}}class ob{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_VOLUME}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];t.thickness=void 0!==s.thicknessFactor?s.thicknessFactor:0,void 0!==s.thicknessTexture&&r.push(n.assignTexture(t,"thicknessMap",s.thicknessTexture)),t.attenuationDistance=s.attenuationDistance||1/0;const a=s.attenuationColor||[1,1,1];return t.attenuationColor=(new wr).setRGB(a[0],a[1],a[2],Ot),Promise.all(r)}}class lb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_IOR}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const i=n.extensions[this.name];return t.ior=void 0!==i.ior?i.ior:1.5,Promise.resolve()}}class cb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_SPECULAR}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];t.specularIntensity=void 0!==s.specularFactor?s.specularFactor:1,void 0!==s.specularTexture&&r.push(n.assignTexture(t,"specularIntensityMap",s.specularTexture));const a=s.specularColorFactor||[1,1,1];return t.specularColor=(new wr).setRGB(a[0],a[1],a[2],Ot),void 0!==s.specularColorTexture&&r.push(n.assignTexture(t,"specularColorMap",s.specularColorTexture,Ut)),Promise.all(r)}}class ub{constructor(e){this.parser=e,this.name=Zv.EXT_MATERIALS_BUMP}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return t.bumpScale=void 0!==s.bumpFactor?s.bumpFactor:1,void 0!==s.bumpTexture&&r.push(n.assignTexture(t,"bumpMap",s.bumpTexture)),Promise.all(r)}}class hb{constructor(e){this.parser=e,this.name=Zv.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?cc:null}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],s=i.extensions[this.name];return void 0!==s.anisotropyStrength&&(t.anisotropy=s.anisotropyStrength),void 0!==s.anisotropyRotation&&(t.anisotropyRotation=s.anisotropyRotation),void 0!==s.anisotropyTexture&&r.push(n.assignTexture(t,"anisotropyMap",s.anisotropyTexture)),Promise.all(r)}}class db{constructor(e){this.parser=e,this.name=Zv.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],s=t.options.ktx2Loader;if(!s){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,s)}}class pb{constructor(e){this.parser=e,this.name=Zv.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const s=r.extensions[t],a=i.images[s.source];let o=n.textureLoader;if(a.uri){const e=n.options.manager.getHandler(a.uri);null!==e&&(o=e)}return n.loadTextureImage(e,s.source,o)}}class mb{constructor(e){this.parser=e,this.name=Zv.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const s=r.extensions[t],a=i.images[s.source];let o=n.textureLoader;if(a.uri){const e=n.options.manager.getHandler(a.uri);null!==e&&(o=e)}return n.loadTextureImage(e,s.source,o)}}class fb{constructor(e){this.name=Zv.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const e=n.extensions[this.name],i=this.parser.getDependency("buffer",e.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return i.then(function(t){const n=e.byteOffset||0,i=e.byteLength||0,s=e.count,a=e.byteStride,o=new Uint8Array(t,n,i);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(s,a,o,e.mode,e.filter).then(function(e){return e.buffer}):r.ready.then(function(){const t=new ArrayBuffer(s*a);return r.decodeGltfBuffer(new Uint8Array(t),s,a,o,e.mode,e.filter),t})})}return null}}class gb{constructor(e){this.name=Zv.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||void 0===n.mesh)return null;const i=t.meshes[n.mesh];for(const o of i.primitives)if(o.mode!==Ab.TRIANGLES&&o.mode!==Ab.TRIANGLE_STRIP&&o.mode!==Ab.TRIANGLE_FAN&&void 0!==o.mode)return null;const r=n.extensions[this.name].attributes,s=[],a={};for(const o in r)s.push(this.parser.getDependency("accessor",r[o]).then(e=>(a[o]=e,a[o])));return s.length<1?null:(s.push(this.parser.createNodeMesh(e)),Promise.all(s).then(e=>{const t=e.pop(),n=t.isGroup?t.children:[t],i=e[0].count,r=[];for(const s of n){const e=new Li,t=new En,n=new Mn,o=new En(1,1,1),l=new Ea(s.geometry,s.material,i);for(let r=0;r<i;r++)a.TRANSLATION&&t.fromBufferAttribute(a.TRANSLATION,r),a.ROTATION&&n.fromBufferAttribute(a.ROTATION,r),a.SCALE&&o.fromBufferAttribute(a.SCALE,r),l.setMatrixAt(r,e.compose(t,n,o));for(const i in a)if("_COLOR_0"===i){const e=a[i];l.instanceColor=new ba(e.array,e.itemSize,e.normalized)}else"TRANSLATION"!==i&&"ROTATION"!==i&&"SCALE"!==i&&s.geometry.setAttribute(i,a[i]);sr.prototype.copy.call(l,s),this.parser.assignFinalMaterial(l),r.push(l)}return t.isGroup?(t.clear(),t.add(...r),t):r[0]}))}}const vb="glTF",bb=1313821514,yb=5130562;class xb{constructor(e){this.name=Zv.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,12),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==vb)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-12,r=new DataView(e,12);let s=0;for(;s<i;){const t=r.getUint32(s,!0);s+=4;const i=r.getUint32(s,!0);if(s+=4,i===bb){const i=new Uint8Array(e,12+s,t);this.content=n.decode(i)}else if(i===yb){const n=12+s;this.body=e.slice(n,n+t)}s+=t}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class _b{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Zv.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,s=e.extensions[this.name].attributes,a={},o={},l={};for(const c in s){const e=Lb[c]||c.toLowerCase();a[e]=s[c]}for(const c in e.attributes){const t=Lb[c]||c.toLowerCase();if(void 0!==s[c]){const i=n.accessors[e.attributes[c]],r=Rb[i.componentType];l[t]=r.name,o[t]=!0===i.normalized}}return t.getDependency("bufferView",r).then(function(e){return new Promise(function(t,n){i.decodeDracoFile(e,function(e){for(const t in e.attributes){const n=e.attributes[t],i=o[t];void 0!==i&&(n.normalized=i)}t(e)},a,l,Ot,n)})})}}class Tb{constructor(){this.name=Zv.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return void 0!==t.texCoord&&t.texCoord!==e.channel||void 0!==t.offset||void 0!==t.rotation||void 0!==t.scale?(e=e.clone(),void 0!==t.texCoord&&(e.channel=t.texCoord),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.scale&&e.repeat.fromArray(t.scale),e.needsUpdate=!0,e):e}}class Sb{constructor(){this.name=Zv.KHR_MESH_QUANTIZATION}}class wb extends wc{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let s=0;s!==i;s++)t[s]=n[r+s];return t}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=2*a,l=3*a,c=i-t,u=(n-t)/c,h=u*u,d=h*u,p=e*l,m=p-l,f=-2*d+3*h,g=d-h,v=1-f,b=g-h+u;for(let y=0;y!==a;y++){const e=s[m+y+a],t=s[m+y+o]*c,n=s[p+y+a],i=s[p+y]*c;r[y]=v*e+b*t+f*n+g*i}return r}}const Mb=new Mn;class Eb extends wb{interpolate_(e,t,n,i){const r=super.interpolate_(e,t,n,i);return Mb.fromArray(r).normalize().toArray(r),r}}const Ab={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},Rb={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Cb={9728:ce,9729:de,9984:ue,9985:pe,9986:he,9987:me},Nb={33071:oe,33648:le,10497:ae},Pb={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Lb={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Ib={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},Db={CUBICSPLINE:void 0,LINEAR:Tt,STEP:_t},Fb="OPAQUE",Ub="MASK",Ob="BLEND";function Bb(e){return void 0===e.DefaultMaterial&&(e.DefaultMaterial=new lc({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:0})),e.DefaultMaterial}function kb(e,t,n){for(const i in n.extensions)void 0===e[i]&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[i]=n.extensions[i])}function Vb(e,t){void 0!==t.extras&&("object"==typeof t.extras?Object.assign(e.userData,t.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+t.extras))}function zb(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(let n=0,i=t.weights.length;n<i;n++)e.morphTargetInfluences[n]=t.weights[n];if(t.extras&&Array.isArray(t.extras.targetNames)){const n=t.extras.targetNames;if(e.morphTargetInfluences.length===n.length){e.morphTargetDictionary={};for(let t=0,i=n.length;t<i;t++)e.morphTargetDictionary[n[t]]=t}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function Gb(e){let t;const n=e.extensions&&e.extensions[Zv.KHR_DRACO_MESH_COMPRESSION];if(t=n?"draco:"+n.bufferView+":"+n.indices+":"+Hb(n.attributes):e.indices+":"+Hb(e.attributes)+":"+e.mode,void 0!==e.targets)for(let i=0,r=e.targets.length;i<r;i++)t+=":"+Hb(e.targets[i]);return t}function Hb(e){let t="";const n=Object.keys(e).sort();for(let i=0,r=n.length;i<r;i++)t+=n[i]+":"+e[n[i]]+";";return t}function Wb(e){switch(e){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}const jb=new Li;class Xb{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new Qv,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,s=-1;if("undefined"!=typeof navigator){const e=navigator.userAgent;n=!0===/^((?!chrome|android).)*safari/i.test(e);const t=e.match(/Version\/(\d+)/);i=n&&t?parseInt(t[1],10):-1,r=e.indexOf("Firefox")>-1,s=r?e.match(/Firefox\/([0-9]+)\./)[1]:-1}"undefined"==typeof createImageBitmap||n&&i<17||r&&s<98?this.textureLoader=new Qc(this.options.manager):this.textureLoader=new Au(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new Wc(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(e){return e._markDefs&&e._markDefs()}),Promise.all(this._invokeAll(function(e){return e.beforeRoot&&e.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(t){const s={scene:t[0][i.scene||0],scenes:t[0],animations:t[1],cameras:t[2],asset:i.asset,parser:n,userData:{}};return kb(r,s,i),Vb(s,i),Promise.all(n._invokeAll(function(e){return e.afterRoot&&e.afterRoot(s)})).then(function(){for(const e of s.scenes)e.updateMatrixWorld();e(s)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,r=t.length;i<r;i++){const n=t[i].joints;for(let t=0,i=n.length;t<i;t++)e[n[t]].isBone=!0}for(let i=0,r=e.length;i<r;i++){const t=e[i];void 0!==t.mesh&&(this._addNodeRef(this.meshCache,t.mesh),void 0!==t.skin&&(n[t.mesh].isSkinnedMesh=!0)),void 0!==t.camera&&this._addNodeRef(this.cameraCache,t.camera)}}_addNodeRef(e,t){void 0!==t&&(void 0===e.refs[t]&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),r=(e,t)=>{const n=this.associations.get(e);null!=n&&this.associations.set(t,n);for(const[i,s]of e.children.entries())r(s,t.children[i])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(e){return e.loadNode&&e.loadNode(t)});break;case"mesh":i=this._invokeOne(function(e){return e.loadMesh&&e.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(e){return e.loadBufferView&&e.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(e){return e.loadMaterial&&e.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(e){return e.loadTexture&&e.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(e){return e.loadAnimation&&e.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(n){return n!=this&&n.getDependency&&n.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e)}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(i.map(function(t,i){return n.getDependency(e,i)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[Zv.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(e,r){n.load(yu.resolveURL(t.uri,i.path),e,void 0,function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(e){const n=t.byteLength||0,i=t.byteOffset||0;return e.slice(i,i+n)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(void 0===i.bufferView&&void 0===i.sparse){const e=Pb[i.type],t=Rb[i.componentType],n=!0===i.normalized,r=new t(i.count*e);return Promise.resolve(new Or(r,e,n))}const r=[];return void 0!==i.bufferView?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),void 0!==i.sparse&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(e){const r=e[0],s=Pb[i.type],a=Rb[i.componentType],o=a.BYTES_PER_ELEMENT,l=o*s,c=i.byteOffset||0,u=void 0!==i.bufferView?n.bufferViews[i.bufferView].byteStride:void 0,h=!0===i.normalized;let d,p;if(u&&u!==l){const e=Math.floor(c/u),n="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+e+":"+i.count;let l=t.cache.get(n);l||(d=new a(r,e*u,i.count*u/o),l=new Fs(d,u/o),t.cache.add(n,l)),p=new Os(l,s,c%u/o,h)}else d=null===r?new a(i.count*s):new a(r,c,i.count*s),p=new Or(d,s,h);if(void 0!==i.sparse){const t=Pb.SCALAR,n=Rb[i.sparse.indices.componentType],o=i.sparse.indices.byteOffset||0,l=i.sparse.values.byteOffset||0,c=new n(e[1],o,i.sparse.count*t),u=new a(e[2],l,i.sparse.count*s);null!==r&&(p=new Or(p.array.slice(),p.itemSize,p.normalized)),p.normalized=!1;for(let e=0,i=c.length;e<i;e++){const t=c[e];if(p.setX(t,u[e*s]),s>=2&&p.setY(t,u[e*s+1]),s>=3&&p.setZ(t,u[e*s+2]),s>=4&&p.setW(t,u[e*s+3]),s>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}p.normalized=h}return p})}loadTexture(e){const t=this.json,n=this.options,i=t.textures[e].source,r=t.images[i];let s=this.textureLoader;if(r.uri){const e=n.manager.getHandler(r.uri);null!==e&&(s=e)}return this.loadTextureImage(e,i,s)}loadTextureImage(e,t,n){const i=this,r=this.json,s=r.textures[e],a=r.images[t],o=(a.uri||a.bufferView)+":"+s.sampler;if(this.textureCache[o])return this.textureCache[o];const l=this.loadImageSource(t,n).then(function(t){t.flipY=!1,t.name=s.name||a.name||"",""===t.name&&"string"==typeof a.uri&&!1===a.uri.startsWith("data:image/")&&(t.name=a.uri);const n=(r.samplers||{})[s.sampler]||{};return t.magFilter=Cb[n.magFilter]||de,t.minFilter=Cb[n.minFilter]||me,t.wrapS=Nb[n.wrapS]||ae,t.wrapT=Nb[n.wrapT]||ae,t.generateMipmaps=!t.isCompressedTexture&&t.minFilter!==ce&&t.minFilter!==de,i.associations.set(t,{textures:e}),t}).catch(function(){return null});return this.textureCache[o]=l,l}loadImageSource(e,t){const n=this,i=this.json,r=this.options;if(void 0!==this.sourceCache[e])return this.sourceCache[e].then(e=>e.clone());const s=i.images[e],a=self.URL||self.webkitURL;let o=s.uri||"",l=!1;if(void 0!==s.bufferView)o=n.getDependency("bufferView",s.bufferView).then(function(e){l=!0;const t=new Blob([e],{type:s.mimeType});return o=a.createObjectURL(t),o});else if(void 0===s.uri)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const c=Promise.resolve(o).then(function(e){return new Promise(function(n,i){let s=n;!0===t.isImageBitmapLoader&&(s=function(e){const t=new Qn(e);t.needsUpdate=!0,n(t)}),t.load(yu.resolveURL(e,r.path),s,void 0,i)})}).then(function(e){var t;return!0===l&&a.revokeObjectURL(o),Vb(e,s),e.userData.mimeType=s.mimeType||((t=s.uri).search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/)?"image/jpeg":t.search(/\.webp($|\?)/i)>0||0===t.search(/^data\:image\/webp/)?"image/webp":t.search(/\.ktx2($|\?)/i)>0||0===t.search(/^data\:image\/ktx2/)?"image/ktx2":"image/png"),e}).catch(function(e){throw console.error("THREE.GLTFLoader: Couldn't load texture",o),e});return this.sourceCache[e]=c,c}assignTexture(e,t,n,i){const r=this;return this.getDependency("texture",n.index).then(function(s){if(!s)return null;if(void 0!==n.texCoord&&n.texCoord>0&&((s=s.clone()).channel=n.texCoord),r.extensions[Zv.KHR_TEXTURE_TRANSFORM]){const e=void 0!==n.extensions?n.extensions[Zv.KHR_TEXTURE_TRANSFORM]:void 0;if(e){const t=r.associations.get(s);s=r.extensions[Zv.KHR_TEXTURE_TRANSFORM].extendTexture(s,e),r.associations.set(s,t)}}return void 0!==i&&(s.colorSpace=i),e[t]=s,s})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=void 0===t.attributes.tangent,r=void 0!==t.attributes.color,s=void 0===t.attributes.normal;if(e.isPoints){const e="PointsMaterial:"+n.uuid;let t=this.cache.get(e);t||(t=new bo,Ar.prototype.copy.call(t,n),t.color.copy(n.color),t.map=n.map,t.sizeAttenuation=!1,this.cache.add(e,t)),n=t}else if(e.isLine){const e="LineBasicMaterial:"+n.uuid;let t=this.cache.get(e);t||(t=new io,Ar.prototype.copy.call(t,n),t.color.copy(n.color),t.map=n.map,this.cache.add(e,t)),n=t}if(i||r||s){let e="ClonedMaterial:"+n.uuid+":";i&&(e+="derivative-tangents:"),r&&(e+="vertex-colors:"),s&&(e+="flat-shading:");let t=this.cache.get(e);t||(t=n.clone(),r&&(t.vertexColors=!0),s&&(t.flatShading=!0),i&&(t.normalScale&&(t.normalScale.y*=-1),t.clearcoatNormalScale&&(t.clearcoatNormalScale.y*=-1)),this.cache.add(e,t),this.associations.set(t,this.associations.get(n))),n=t}e.material=n}getMaterialType(){return lc}loadMaterial(e){const t=this,n=this.json,i=this.extensions,r=n.materials[e];let s;const a={},o=[];if((r.extensions||{})[Zv.KHR_MATERIALS_UNLIT]){const e=i[Zv.KHR_MATERIALS_UNLIT];s=e.getMaterialType(),o.push(e.extendParams(a,r,t))}else{const n=r.pbrMetallicRoughness||{};if(a.color=new wr(1,1,1),a.opacity=1,Array.isArray(n.baseColorFactor)){const e=n.baseColorFactor;a.color.setRGB(e[0],e[1],e[2],Ot),a.opacity=e[3]}void 0!==n.baseColorTexture&&o.push(t.assignTexture(a,"map",n.baseColorTexture,Ut)),a.metalness=void 0!==n.metallicFactor?n.metallicFactor:1,a.roughness=void 0!==n.roughnessFactor?n.roughnessFactor:1,void 0!==n.metallicRoughnessTexture&&(o.push(t.assignTexture(a,"metalnessMap",n.metallicRoughnessTexture)),o.push(t.assignTexture(a,"roughnessMap",n.metallicRoughnessTexture))),s=this._invokeOne(function(t){return t.getMaterialType&&t.getMaterialType(e)}),o.push(Promise.all(this._invokeAll(function(t){return t.extendMaterialParams&&t.extendMaterialParams(e,a)})))}!0===r.doubleSided&&(a.side=2);const l=r.alphaMode||Fb;if(l===Ob?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,l===Ub&&(a.alphaTest=void 0!==r.alphaCutoff?r.alphaCutoff:.5)),void 0!==r.normalTexture&&s!==Rr&&(o.push(t.assignTexture(a,"normalMap",r.normalTexture)),a.normalScale=new wn(1,1),void 0!==r.normalTexture.scale)){const e=r.normalTexture.scale;a.normalScale.set(e,e)}if(void 0!==r.occlusionTexture&&s!==Rr&&(o.push(t.assignTexture(a,"aoMap",r.occlusionTexture)),void 0!==r.occlusionTexture.strength&&(a.aoMapIntensity=r.occlusionTexture.strength)),void 0!==r.emissiveFactor&&s!==Rr){const e=r.emissiveFactor;a.emissive=(new wr).setRGB(e[0],e[1],e[2],Ot)}return void 0!==r.emissiveTexture&&s!==Rr&&o.push(t.assignTexture(a,"emissiveMap",r.emissiveTexture,Ut)),Promise.all(o).then(function(){const n=new s(a);return r.name&&(n.name=r.name),Vb(n,r),t.associations.set(n,{materials:e}),r.extensions&&kb(i,n,r),n})}createUniqueName(e){const t=ih.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function r(e){return n[Zv.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e,t).then(function(n){return qb(n,e,t)})}const s=[];for(let a=0,o=e.length;a<o;a++){const n=e[a],o=Gb(n),l=i[o];if(l)s.push(l.promise);else{let e;e=n.extensions&&n.extensions[Zv.KHR_DRACO_MESH_COMPRESSION]?r(n):qb(new es,n,t),i[o]={primitive:n,promise:e},s.push(e)}}return Promise.all(s)}loadMesh(e){const t=this,n=this.json,i=this.extensions,r=n.meshes[e],s=r.primitives,a=[];for(let o=0,l=s.length;o<l;o++){const e=void 0===s[o].material?Bb(this.cache):this.getDependency("material",s[o].material);a.push(e)}return a.push(t.loadGeometries(s)),Promise.all(a).then(function(n){const a=n.slice(0,n.length-1),o=n[n.length-1],l=[];for(let u=0,h=o.length;u<h;u++){const n=o[u],c=s[u];let h;const d=a[u];if(c.mode===Ab.TRIANGLES||c.mode===Ab.TRIANGLE_STRIP||c.mode===Ab.TRIANGLE_FAN||void 0===c.mode)h=!0===r.isSkinnedMesh?new da(n,d):new ds(n,d),!0===h.isSkinnedMesh&&h.normalizeSkinWeights(),c.mode===Ab.TRIANGLE_STRIP?h.geometry=Tg(h.geometry,1):c.mode===Ab.TRIANGLE_FAN&&(h.geometry=Tg(h.geometry,2));else if(c.mode===Ab.LINES)h=new go(n,d);else if(c.mode===Ab.LINE_STRIP)h=new ho(n,d);else if(c.mode===Ab.LINE_LOOP)h=new vo(n,d);else{if(c.mode!==Ab.POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+c.mode);h=new So(n,d)}Object.keys(h.geometry.morphAttributes).length>0&&zb(h,r),h.name=t.createUniqueName(r.name||"mesh_"+e),Vb(h,r),c.extensions&&kb(i,h,c),t.assignFinalMaterial(h),l.push(h)}for(let i=0,r=l.length;i<r;i++)t.associations.set(l[i],{meshes:e,primitives:i});if(1===l.length)return r.extensions&&kb(i,l[0],r),l[0];const c=new Cs;r.extensions&&kb(i,c,r),t.associations.set(c,{meshes:e});for(let e=0,t=l.length;e<t;e++)c.add(l[e]);return c})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(i)return"perspective"===n.type?t=new ws(Sn.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):"orthographic"===n.type&&(t=new hu(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),Vb(t,n),Promise.resolve(t);console.warn("THREE.GLTFLoader: Missing camera parameters.")}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,r=t.joints.length;i<r;i++)n.push(this._loadNodeShallow(t.joints[i]));return void 0!==t.inverseBindMatrices?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(e){const n=e.pop(),i=e,r=[],s=[];for(let a=0,o=i.length;a<o;a++){const e=i[a];if(e){r.push(e);const t=new Li;null!==n&&t.fromArray(n.array,16*a),s.push(t)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[a])}return new va(r,s)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,s=[],a=[],o=[],l=[],c=[];for(let u=0,h=i.channels.length;u<h;u++){const e=i.channels[u],t=i.samplers[e.sampler],n=e.target,r=n.node,h=void 0!==i.parameters?i.parameters[t.input]:t.input,d=void 0!==i.parameters?i.parameters[t.output]:t.output;void 0!==n.node&&(s.push(this.getDependency("node",r)),a.push(this.getDependency("accessor",h)),o.push(this.getDependency("accessor",d)),l.push(t),c.push(n))}return Promise.all([Promise.all(s),Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(c)]).then(function(e){const t=e[0],s=e[1],a=e[2],o=e[3],l=e[4],c=[];for(let i=0,r=t.length;i<r;i++){const e=t[i],r=s[i],u=a[i],h=o[i],d=l[i];if(void 0===e)continue;e.updateMatrix&&e.updateMatrix();const p=n._createAnimationTracks(e,r,u,h,d);if(p)for(let t=0;t<p.length;t++)c.push(p[t])}const u=new Uc(r,void 0,c);return Vb(u,i),u})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return void 0===i.mesh?null:n.getDependency("mesh",i.mesh).then(function(e){const t=n._getNodeRef(n.meshCache,i.mesh,e);return void 0!==i.weights&&t.traverse(function(e){if(e.isMesh)for(let t=0,n=i.weights.length;t<n;t++)e.morphTargetInfluences[t]=i.weights[t]}),t})}loadNode(e){const t=this,n=this.json.nodes[e],i=t._loadNodeShallow(e),r=[],s=n.children||[];for(let o=0,l=s.length;o<l;o++)r.push(t.getDependency("node",s[o]));const a=void 0===n.skin?Promise.resolve(null):t.getDependency("skin",n.skin);return Promise.all([i,Promise.all(r),a]).then(function(e){const t=e[0],n=e[1],i=e[2];null!==i&&t.traverse(function(e){e.isSkinnedMesh&&e.bind(i,jb)});for(let r=0,s=n.length;r<s;r++)t.add(n[r]);return t})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(void 0!==this.nodeCache[e])return this.nodeCache[e];const r=t.nodes[e],s=r.name?i.createUniqueName(r.name):"",a=[],o=i._invokeOne(function(t){return t.createNodeMesh&&t.createNodeMesh(e)});return o&&a.push(o),void 0!==r.camera&&a.push(i.getDependency("camera",r.camera).then(function(e){return i._getNodeRef(i.cameraCache,r.camera,e)})),i._invokeAll(function(t){return t.createNodeAttachment&&t.createNodeAttachment(e)}).forEach(function(e){a.push(e)}),this.nodeCache[e]=Promise.all(a).then(function(t){let a;if(a=!0===r.isBone?new pa:t.length>1?new Cs:1===t.length?t[0]:new sr,a!==t[0])for(let e=0,n=t.length;e<n;e++)a.add(t[e]);if(r.name&&(a.userData.name=r.name,a.name=s),Vb(a,r),r.extensions&&kb(n,a,r),void 0!==r.matrix){const e=new Li;e.fromArray(r.matrix),a.applyMatrix4(e)}else void 0!==r.translation&&a.position.fromArray(r.translation),void 0!==r.rotation&&a.quaternion.fromArray(r.rotation),void 0!==r.scale&&a.scale.fromArray(r.scale);if(i.associations.has(a)){if(void 0!==r.mesh&&i.meshCache.refs[r.mesh]>1){const e=i.associations.get(a);i.associations.set(a,{...e})}}else i.associations.set(a,{});return i.associations.get(a).nodes=e,a}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,r=new Cs;n.name&&(r.name=i.createUniqueName(n.name)),Vb(r,n),n.extensions&&kb(t,r,n);const s=n.nodes||[],a=[];for(let o=0,l=s.length;o<l;o++)a.push(i.getDependency("node",s[o]));return Promise.all(a).then(function(e){for(let t=0,n=e.length;t<n;t++)r.add(e[t]);return i.associations=(e=>{const t=new Map;for(const[n,r]of i.associations)(n instanceof Ar||n instanceof Qn)&&t.set(n,r);return e.traverse(e=>{const n=i.associations.get(e);null!=n&&t.set(e,n)}),t})(r),r})}_createAnimationTracks(e,t,n,i,r){const s=[],a=e.name?e.name:e.uuid,o=[];let l;switch(Ib[r.path]===Ib.weights?e.traverse(function(e){e.morphTargetInfluences&&o.push(e.name?e.name:e.uuid)}):o.push(a),Ib[r.path]){case Ib.weights:l=Pc;break;case Ib.rotation:l=Ic;break;case Ib.translation:case Ib.scale:l=Fc;break;default:if(1===n.itemSize)l=Pc;else l=Fc}const c=void 0!==i.interpolation?Db[i.interpolation]:Tt,u=this._getArrayFromAccessor(n);for(let h=0,d=o.length;h<d;h++){const e=new l(o[h]+"."+Ib[r.path],t.array,u,c);"CUBICSPLINE"===i.interpolation&&this._createCubicSplineTrackInterpolant(e),s.push(e)}return s}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const e=Wb(t.constructor),n=new Float32Array(t.length);for(let i=0,r=t.length;i<r;i++)n[i]=t[i]*e;t=n}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(e){return new(this instanceof Ic?Eb:wb)(this.times,this.values,this.getValueSize()/3,e)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function qb(e,t,n){const i=t.attributes,r=[];function s(t,i){return n.getDependency("accessor",t).then(function(t){e.setAttribute(i,t)})}for(const a in i){const t=Lb[a]||a.toLowerCase();t in e.attributes||r.push(s(i[a],t))}if(void 0!==t.indices&&!e.index){const i=n.getDependency("accessor",t.indices).then(function(t){e.setIndex(t)});r.push(i)}return zn.workingColorSpace!==Ot&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${zn.workingColorSpace}" not supported.`),Vb(e,t),function(e,t,n){const i=t.attributes,r=new si;if(void 0===i.POSITION)return;{const e=n.json.accessors[i.POSITION],t=e.min,s=e.max;if(void 0===t||void 0===s)return void console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");if(r.set(new En(t[0],t[1],t[2]),new En(s[0],s[1],s[2])),e.normalized){const t=Wb(Rb[e.componentType]);r.min.multiplyScalar(t),r.max.multiplyScalar(t)}}const s=t.targets;if(void 0!==s){const e=new En,t=new En;for(let i=0,r=s.length;i<r;i++){const r=s[i];if(void 0!==r.POSITION){const i=n.json.accessors[r.POSITION],s=i.min,a=i.max;if(void 0!==s&&void 0!==a){if(t.setX(Math.max(Math.abs(s[0]),Math.abs(a[0]))),t.setY(Math.max(Math.abs(s[1]),Math.abs(a[1]))),t.setZ(Math.max(Math.abs(s[2]),Math.abs(a[2]))),i.normalized){const e=Wb(Rb[i.componentType]);t.multiplyScalar(e)}e.max(t)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}r.expandByVector(e)}e.boundingBox=r;const a=new Si;r.getCenter(a.center),a.radius=r.min.distanceTo(r.max)/2,e.boundingSphere=a}(e,t,n),Promise.all(r).then(function(){return void 0!==t.targets?function(e,t,n){let i=!1,r=!1,s=!1;for(let c=0,u=t.length;c<u;c++){const e=t[c];if(void 0!==e.POSITION&&(i=!0),void 0!==e.NORMAL&&(r=!0),void 0!==e.COLOR_0&&(s=!0),i&&r&&s)break}if(!i&&!r&&!s)return Promise.resolve(e);const a=[],o=[],l=[];for(let c=0,u=t.length;c<u;c++){const u=t[c];if(i){const t=void 0!==u.POSITION?n.getDependency("accessor",u.POSITION):e.attributes.position;a.push(t)}if(r){const t=void 0!==u.NORMAL?n.getDependency("accessor",u.NORMAL):e.attributes.normal;o.push(t)}if(s){const t=void 0!==u.COLOR_0?n.getDependency("accessor",u.COLOR_0):e.attributes.color;l.push(t)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then(function(t){const n=t[0],a=t[1],o=t[2];return i&&(e.morphAttributes.position=n),r&&(e.morphAttributes.normal=a),s&&(e.morphAttributes.color=o),e.morphTargetsRelative=!0,e})}(e,t.targets,n):e})}class $b extends Kc{constructor(e){super(e),this.type=Se}parse(e){const t=function(e,t){switch(e){case 1:throw new Error("THREE.HDRLoader: Read Error: "+(t||""));case 2:throw new Error("THREE.HDRLoader: Write Error: "+(t||""));case 3:throw new Error("THREE.HDRLoader: Bad File Format: "+(t||""));default:throw new Error("THREE.HDRLoader: Memory Error: "+(t||""))}},n=function(e,t,n){t=t||1024;let i=e.pos,r=-1,s=0,a="",o=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));for(;0>(r=o.indexOf("\n"))&&s<t&&i<e.byteLength;)a+=o,s+=o.length,i+=128,o+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));return-1<r&&(e.pos+=s+r+1,a+o.slice(0,r))},i=function(e,t,n,i){const r=e[t+3],s=Math.pow(2,r-128)/255;n[i+0]=e[t+0]*s,n[i+1]=e[t+1]*s,n[i+2]=e[t+2]*s,n[i+3]=1},r=function(e,t,n,i){const r=e[t+3],s=Math.pow(2,r-128)/255;n[i+0]=Ir.toHalfFloat(Math.min(e[t+0]*s,65504)),n[i+1]=Ir.toHalfFloat(Math.min(e[t+1]*s,65504)),n[i+2]=Ir.toHalfFloat(Math.min(e[t+2]*s,65504)),n[i+3]=Ir.toHalfFloat(1)},s=new Uint8Array(e);s.pos=0;const a=function(e){const i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,a=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,c;for((e.pos>=e.byteLength||!(l=n(e)))&&t(1,"no header found"),(c=l.match(/^#\?(\S+)/))||t(3,"bad initial token"),o.valid|=1,o.programtype=c[1],o.string+=l+"\n";l=n(e),!1!==l;)if(o.string+=l+"\n","#"!==l.charAt(0)){if((c=l.match(i))&&(o.gamma=parseFloat(c[1])),(c=l.match(r))&&(o.exposure=parseFloat(c[1])),(c=l.match(s))&&(o.valid|=2,o.format=c[1]),(c=l.match(a))&&(o.valid|=4,o.height=parseInt(c[1],10),o.width=parseInt(c[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=l+"\n";return 2&o.valid||t(3,"missing format specifier"),4&o.valid||t(3,"missing image size specifier"),o}(s),o=a.width,l=a.height,c=function(e,n,i){const r=n;if(r<8||r>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);r!==(e[2]<<8|e[3])&&t(3,"wrong scanline width");const s=new Uint8Array(4*n*i);s.length||t(4,"unable to allocate buffer space");let a=0,o=0;const l=4*r,c=new Uint8Array(4),u=new Uint8Array(l);let h=i;for(;h>0&&o<e.byteLength;){o+4>e.byteLength&&t(1),c[0]=e[o++],c[1]=e[o++],c[2]=e[o++],c[3]=e[o++],2==c[0]&&2==c[1]&&(c[2]<<8|c[3])==r||t(3,"bad rgbe scanline format");let n,i=0;for(;i<l&&o<e.byteLength;){n=e[o++];const r=n>128;if(r&&(n-=128),(0===n||i+n>l)&&t(3,"bad scanline data"),r){const t=e[o++];for(let e=0;e<n;e++)u[i++]=t}else u.set(e.subarray(o,o+n),i),i+=n,o+=n}const d=r;for(let e=0;e<d;e++){let t=0;s[a]=u[e+t],t+=r,s[a+1]=u[e+t],t+=r,s[a+2]=u[e+t],t+=r,s[a+3]=u[e+t],a+=4}h--}return s}(s.subarray(s.pos),o,l);let u,h,d;switch(this.type){case Te:d=c.length/4;const e=new Float32Array(4*d);for(let n=0;n<d;n++)i(c,4*n,e,4*n);u=e,h=Te;break;case Se:d=c.length/4;const t=new Uint16Array(4*d);for(let n=0;n<d;n++)r(c,4*n,t,4*n);u=t,h=Se;break;default:throw new Error("THREE.HDRLoader: Unsupported type: "+this.type)}return{width:o,height:l,data:u,header:a.string,gamma:a.gamma,exposure:a.exposure,type:h}}setDataType(e){return this.type=e,this}load(e,t,n,i){return super.load(e,function(e,n){switch(e.type){case Te:case Se:e.colorSpace=Ot,e.minFilter=de,e.magFilter=de,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,n)},n,i)}}class Yb extends zc{constructor(e){super(e),this.hdrLoader=new $b,this.type=Se}load(e,t,n,i){const r=new As;switch(r.type=this.type,r.type){case Te:case Se:r.colorSpace=Ot,r.minFilter=de,r.magFilter=de,r.generateMipmaps=!1}const s=this;let a=0;function o(t,n,i,o){new Wc(s.manager).setPath(s.path).setResponseType("arraybuffer").setWithCredentials(s.withCredentials).load(e[t],function(e){a++;const i=s.hdrLoader.parse(e);if(i){if(void 0!==i.data){const e=new ma(i.data,i.width,i.height);e.type=r.type,e.colorSpace=r.colorSpace,e.format=r.format,e.minFilter=r.minFilter,e.magFilter=r.magFilter,e.generateMipmaps=r.generateMipmaps,r.images[t]=e}6===a&&(r.needsUpdate=!0,n&&n(r))}},i,o)}for(let l=0;l<e.length;l++)o(l,t,n,i);return r}setDataType(e){return this.type=e,this.hdrLoader.setDataType(e),this}}class Kb extends zc{constructor(e){super(e),this.type=ge}setType(e){return this.type=e,this}load(e,t,n,i){const r=new Wc(this.manager);r.setPath(this.path),r.setResponseType("text"),r.load(e,n=>{try{t(this.parse(n))}catch(p3){i?i(p3):console.error(p3),this.manager.itemError(e)}},n,i)}parse(e){const t=/^([\d.e+-]+) +([\d.e+-]+) +([\d.e+-]+) *$/gm;let n=/TITLE +"([^"]*)"/.exec(e);const i=null!==n?n[1]:null;if(n=/LUT_3D_SIZE +(\d+)/.exec(e),null===n)throw new Error("LUTCubeLoader: Missing LUT_3D_SIZE information");const r=Number(n[1]),s=r**3*4,a=this.type===ge?new Uint8Array(s):new Float32Array(s),o=new En(0,0,0),l=new En(1,1,1);if(n=/DOMAIN_MIN +([\d.]+) +([\d.]+) +([\d.]+)/.exec(e),null!==n&&o.set(Number(n[1]),Number(n[2]),Number(n[3])),n=/DOMAIN_MAX +([\d.]+) +([\d.]+) +([\d.]+)/.exec(e),null!==n&&l.set(Number(n[1]),Number(n[2]),Number(n[3])),o.x>l.x||o.y>l.y||o.z>l.z)throw new Error("LUTCubeLoader: Invalid input domain");const c=this.type===ge?255:1;let u=0;for(;null!==(n=t.exec(e));)a[u++]=Number(n[1])*c,a[u++]=Number(n[2])*c,a[u++]=Number(n[3])*c,a[u++]=c;const h=new ii;return h.image.data=a,h.image.width=r,h.image.height=r,h.image.depth=r,h.type=this.type,h.magFilter=de,h.minFilter=de,h.wrapS=oe,h.wrapT=oe,h.wrapR=oe,h.generateMipmaps=!1,h.needsUpdate=!0,{title:i,size:r,domainMin:o,domainMax:l,texture3D:h}}}const Qb=/^[og]\s*(.+)?/,Zb=/^mtllib /,Jb=/^usemtl /,ey=/^usemap /,ty=/\s+/,ny=new En,iy=new En,ry=new En,sy=new En,ay=new En,oy=new wr;function ly(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const i={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let n=this.materials.length-1;n>=0;n--)this.materials[n].groupCount<=0&&this.materials.splice(n,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},n&&n.name&&"function"==typeof n.clone){const e=n.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseNormalIndex:function(e,t){const n=parseInt(e,10);return 3*(n>=0?n-1:n+t/3)},parseUVIndex:function(e,t){const n=parseInt(e,10);return 2*(n>=0?n-1:n+t/2)},addVertex:function(e,t,n){const i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,r=this.object.geometry.normals;ny.fromArray(i,e),iy.fromArray(i,t),ry.fromArray(i,n),ay.subVectors(ry,iy),sy.subVectors(ny,iy),ay.cross(sy),ay.normalize(),r.push(ay.x,ay.y,ay.z),r.push(ay.x,ay.y,ay.z),r.push(ay.x,ay.y,ay.z)},addColor:function(e,t,n){const i=this.colors,r=this.object.geometry.colors;void 0!==i[e]&&r.push(i[e+0],i[e+1],i[e+2]),void 0!==i[t]&&r.push(i[t+0],i[t+1],i[t+2]),void 0!==i[n]&&r.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,r,s,a,o,l){const c=this.vertices.length;let u=this.parseVertexIndex(e,c),h=this.parseVertexIndex(t,c),d=this.parseVertexIndex(n,c);if(this.addVertex(u,h,d),this.addColor(u,h,d),void 0!==a&&""!==a){const e=this.normals.length;u=this.parseNormalIndex(a,e),h=this.parseNormalIndex(o,e),d=this.parseNormalIndex(l,e),this.addNormal(u,h,d)}else this.addFaceNormal(u,h,d);if(void 0!==i&&""!==i){const e=this.uvs.length;u=this.parseUVIndex(i,e),h=this.parseUVIndex(r,e),d=this.parseUVIndex(s,e),this.addUV(u,h,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const i=this.parseVertexIndex(e[n],t);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let r=0,s=e.length;r<s;r++)this.addVertexLine(this.parseVertexIndex(e[r],n));for(let r=0,s=t.length;r<s;r++)this.addUVLine(this.parseUVIndex(t[r],i))}};return e.startObject("",!1),e}class cy extends zc{constructor(e){super(e),this.materials=null}load(e,t,n,i){const r=this,s=new Wc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){try{t(r.parse(n))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new ly;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const n=e.split("\n");let i=[];for(let s=0,a=n.length;s<a;s++){const e=n[s].trimStart();if(0===e.length)continue;const r=e.charAt(0);if("#"!==r)if("v"===r){const n=e.split(ty);switch(n[0]){case"v":t.vertices.push(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3])),n.length>=7?(oy.setRGB(parseFloat(n[4]),parseFloat(n[5]),parseFloat(n[6]),Ut),t.colors.push(oy.r,oy.g,oy.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3]));break;case"vt":t.uvs.push(parseFloat(n[1]),parseFloat(n[2]))}}else if("f"===r){const n=e.slice(1).trim().split(ty),i=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];if(t.length>0){const e=t.split("/");i.push(e)}}const r=i[0];for(let e=1,s=i.length-1;e<s;e++){const n=i[e],s=i[e+1];t.addFace(r[0],n[0],s[0],r[1],n[1],s[1],r[2],n[2],s[2])}}else if("l"===r){const n=e.substring(1).trim().split(" ");let i=[];const r=[];if(-1===e.indexOf("/"))i=n;else for(let e=0,t=n.length;e<t;e++){const t=n[e].split("/");""!==t[0]&&i.push(t[0]),""!==t[1]&&r.push(t[1])}t.addLineGeometry(i,r)}else if("p"===r){const n=e.slice(1).trim().split(" ");t.addPointGeometry(n)}else if(null!==(i=Qb.exec(e))){const e=(" "+i[0].slice(1).trim()).slice(1);t.startObject(e)}else if(Jb.test(e))t.object.startMaterial(e.substring(7).trim(),t.materialLibraries);else if(Zb.test(e))t.materialLibraries.push(e.substring(7).trim());else if(ey.test(e))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===r){if(i=e.split(" "),i.length>1){const e=i[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const n=t.object.currentMaterial();n&&(n.smooth=t.object.smooth)}else{if("\0"===e)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+e+'"')}}t.finalize();const r=new Cs;r.materialLibraries=[].concat(t.materialLibraries);if(!0===!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let s=0,a=t.objects.length;s<a;s++){const e=t.objects[s],n=e.geometry,i=e.materials,a="Line"===n.type,o="Points"===n.type;let l=!1;if(0===n.vertices.length)continue;const c=new es;c.setAttribute("position",new Xr(n.vertices,3)),n.normals.length>0&&c.setAttribute("normal",new Xr(n.normals,3)),n.colors.length>0&&(l=!0,c.setAttribute("color",new Xr(n.colors,3))),!0===n.hasUVIndices&&c.setAttribute("uv",new Xr(n.uvs,2));const u=[];for(let r=0,s=i.length;r<s;r++){const e=i[r],n=e.name+"_"+e.smooth+"_"+l;let s=t.materials[n];if(null!==this.materials)if(s=this.materials.create(e.name),!a||!s||s instanceof io){if(o&&s&&!(s instanceof bo)){const e=new bo({size:10,sizeAttenuation:!1});Ar.prototype.copy.call(e,s),e.color.copy(s.color),e.map=s.map,s=e}}else{const e=new io;Ar.prototype.copy.call(e,s),e.color.copy(s.color),s=e}void 0===s&&(s=a?new io:o?new bo({size:1,sizeAttenuation:!1}):new uc,s.name=e.name,s.flatShading=!e.smooth,s.vertexColors=l,t.materials[n]=s),u.push(s)}let h;if(u.length>1){for(let e=0,t=i.length;e<t;e++){const t=i[e];c.addGroup(t.groupStart,t.groupCount,e)}h=a?new go(c,u):o?new So(c,u):new ds(c,u)}else h=a?new go(c,u[0]):o?new So(c,u[0]):new ds(c,u[0]);h.name=e.name,r.add(h)}else if(t.vertices.length>0){const e=new bo({size:1,sizeAttenuation:!1}),n=new es;n.setAttribute("position",new Xr(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(n.setAttribute("color",new Xr(t.colors,3)),e.vertexColors=!0);const i=new So(n,e);r.add(i)}return r}}const uy=new wr;class hy extends zc{constructor(e){super(e),this.propertyNameMapping={},this.customPropertyMapping={}}load(e,t,n,i){const r=this,s=new Wc(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){try{t(r.parse(n))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}setPropertyNameMapping(e){this.propertyNameMapping=e}setCustomPropertyNameMapping(e){this.customPropertyMapping=e}parse(e){function t(e,t=0){let n="";const i=/^ply([\s\S]*)end_header(\r\n|\r|\n)/.exec(e);null!==i&&(n=i[1]);const r={comments:[],elements:[],headerLength:t,objInfo:""},s=n.split(/\r\n|\r|\n/);let a;function o(e,t){const n={type:e[0]};return"list"===n.type?(n.name=e[3],n.countType=e[1],n.itemType=e[2]):n.name=e[1],n.name in t&&(n.name=t[n.name]),n}for(let l=0;l<s.length;l++){let e=s[l];if(e=e.trim(),""===e)continue;const t=e.split(/\s+/),n=t.shift();switch(e=t.join(" "),n){case"format":r.format=t[0],r.version=t[1];break;case"comment":r.comments.push(e);break;case"element":void 0!==a&&r.elements.push(a),a={},a.name=t[0],a.count=parseInt(t[1]),a.properties=[];break;case"property":a.properties.push(o(t,d.propertyNameMapping));break;case"obj_info":r.objInfo=e;break;default:console.log("unhandled",n,t)}}return void 0!==a&&r.elements.push(a),r}function n(e,t){switch(t){case"char":case"uchar":case"short":case"ushort":case"int":case"uint":case"int8":case"uint8":case"int16":case"uint16":case"int32":case"uint32":return parseInt(e);case"float":case"double":case"float32":case"float64":return parseFloat(e)}}function i(e,t){const i={};for(let r=0;r<e.length;r++){if(t.empty())return null;if("list"===e[r].type){const s=[],a=n(t.next(),e[r].countType);for(let i=0;i<a;i++){if(t.empty())return null;s.push(n(t.next(),e[r].itemType))}i[e[r].name]=s}else i[e[r].name]=n(t.next(),e[r].type)}return i}function r(){const e={indices:[],vertices:[],normals:[],uvs:[],faceVertexUvs:[],colors:[],faceVertexColors:[]};for(const t of Object.keys(d.customPropertyMapping))e[t]=[];return e}function s(e){const t=e.map(e=>e.name);function n(e){for(let n=0,i=e.length;n<i;n++){const i=e[n];if(t.includes(i))return i}return null}return{attrX:n(["x","px","posx"])||"x",attrY:n(["y","py","posy"])||"y",attrZ:n(["z","pz","posz"])||"z",attrNX:n(["nx","normalx"]),attrNY:n(["ny","normaly"]),attrNZ:n(["nz","normalz"]),attrS:n(["s","u","texture_u","tx"]),attrT:n(["t","v","texture_v","ty"]),attrR:n(["red","diffuse_red","r","diffuse_r"]),attrG:n(["green","diffuse_green","g","diffuse_g"]),attrB:n(["blue","diffuse_blue","b","diffuse_b"])}}function a(e,t){const n=r();let a,c;a=null!==(c=/end_header\s+(\S[\s\S]*\S|\S)\s*$/.exec(e))?c[1].split(/\s+/):[];const u=new dy(a);e:for(let r=0;r<t.elements.length;r++){const e=t.elements[r],a=s(e.properties);for(let t=0;t<e.count;t++){const t=i(e.properties,u);if(!t)break e;l(n,e.name,t,a)}}return o(n)}function o(e){let t=new es;e.indices.length>0&&t.setIndex(e.indices),t.setAttribute("position",new Xr(e.vertices,3)),e.normals.length>0&&t.setAttribute("normal",new Xr(e.normals,3)),e.uvs.length>0&&t.setAttribute("uv",new Xr(e.uvs,2)),e.colors.length>0&&t.setAttribute("color",new Xr(e.colors,3)),(e.faceVertexUvs.length>0||e.faceVertexColors.length>0)&&(t=t.toNonIndexed(),e.faceVertexUvs.length>0&&t.setAttribute("uv",new Xr(e.faceVertexUvs,2)),e.faceVertexColors.length>0&&t.setAttribute("color",new Xr(e.faceVertexColors,3)));for(const n of Object.keys(d.customPropertyMapping))e[n].length>0&&t.setAttribute(n,new Xr(e[n],d.customPropertyMapping[n].length));return t.computeBoundingSphere(),t}function l(e,t,n,i){if("vertex"===t){e.vertices.push(n[i.attrX],n[i.attrY],n[i.attrZ]),null!==i.attrNX&&null!==i.attrNY&&null!==i.attrNZ&&e.normals.push(n[i.attrNX],n[i.attrNY],n[i.attrNZ]),null!==i.attrS&&null!==i.attrT&&e.uvs.push(n[i.attrS],n[i.attrT]),null!==i.attrR&&null!==i.attrG&&null!==i.attrB&&(uy.setRGB(n[i.attrR]/255,n[i.attrG]/255,n[i.attrB]/255,Ut),e.colors.push(uy.r,uy.g,uy.b));for(const t of Object.keys(d.customPropertyMapping))for(const i of d.customPropertyMapping[t])e[t].push(n[i])}else if("face"===t){const t=n.vertex_indices||n.vertex_index,r=n.texcoord;3===t.length?(e.indices.push(t[0],t[1],t[2]),r&&6===r.length&&(e.faceVertexUvs.push(r[0],r[1]),e.faceVertexUvs.push(r[2],r[3]),e.faceVertexUvs.push(r[4],r[5]))):4===t.length&&(e.indices.push(t[0],t[1],t[3]),e.indices.push(t[1],t[2],t[3])),null!==i.attrR&&null!==i.attrG&&null!==i.attrB&&(uy.setRGB(n[i.attrR]/255,n[i.attrG]/255,n[i.attrB]/255,Ut),e.faceVertexColors.push(uy.r,uy.g,uy.b),e.faceVertexColors.push(uy.r,uy.g,uy.b),e.faceVertexColors.push(uy.r,uy.g,uy.b))}}function c(e,t){const n={};let i=0;for(let r=0;r<t.length;r++){const s=t[r],a=s.valueReader;if("list"===s.type){const t=[],r=s.countReader.read(e+i);i+=s.countReader.size;for(let n=0;n<r;n++)t.push(a.read(e+i)),i+=a.size;n[s.name]=t}else n[s.name]=a.read(e+i),i+=a.size}return[n,i]}function u(e,t,n){function i(e,t,n){switch(t){case"int8":case"char":return{read:t=>e.getInt8(t),size:1};case"uint8":case"uchar":return{read:t=>e.getUint8(t),size:1};case"int16":case"short":return{read:t=>e.getInt16(t,n),size:2};case"uint16":case"ushort":return{read:t=>e.getUint16(t,n),size:2};case"int32":case"int":return{read:t=>e.getInt32(t,n),size:4};case"uint32":case"uint":return{read:t=>e.getUint32(t,n),size:4};case"float32":case"float":return{read:t=>e.getFloat32(t,n),size:4};case"float64":case"double":return{read:t=>e.getFloat64(t,n),size:8}}}for(let r=0,s=e.length;r<s;r++){const s=e[r];"list"===s.type?(s.countReader=i(t,s.countType,n),s.valueReader=i(t,s.itemType,n)):s.valueReader=i(t,s.type,n)}}let h;const d=this;if(e instanceof ArrayBuffer){const n=new Uint8Array(e),{headerText:i,headerLength:d}=function(e){let t=0,n=!0,i="";const r=[],s=(new TextDecoder).decode(e.subarray(0,5)),a=/^ply\r\n/.test(s);do{const s=String.fromCharCode(e[t++]);"\n"!==s&&"\r"!==s?i+=s:("end_header"===i&&(n=!1),""!==i&&(r.push(i),i=""))}while(n&&t<e.length);return!0===a&&t++,{headerText:r.join("\r")+"\r",headerLength:t}}(n),p=t(i,d);if("ascii"===p.format){h=a((new TextDecoder).decode(n),p)}else h=function(e,t){const n=r(),i="binary_little_endian"===t.format,a=new DataView(e,t.headerLength);let h,d=0;for(let r=0;r<t.elements.length;r++){const e=t.elements[r],o=e.properties,p=s(o);u(o,a,i);for(let t=0;t<e.count;t++){h=c(d,o),d+=h[1];const t=h[0];l(n,e.name,t,p)}}return o(n)}(e,p)}else h=a(e,t(e));return h}}class dy{constructor(e){this.arr=e,this.i=0}empty(){return this.i>=this.arr.length}next(){return this.arr[this.i++]}}class py extends $b{constructor(e){console.warn("RGBELoader has been deprecated. Please use HDRLoader instead."),super(e)}}class my extends zc{constructor(e){super(e)}load(e,t,n,i){const r=this,s=new Wc(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(n){try{t(r.parse(n))}catch(p3){i?i(p3):console.error(p3),r.manager.itemError(e)}},n,i)}parse(e){function t(e,t,n){for(let i=0,r=e.length;i<r;i++)if(e[i]!==t.getUint8(n+i))return!1;return!0}const n=function(e){if("string"==typeof e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer||t}return e}(e);return function(e){const n=new DataView(e);if(84+50*n.getUint32(80,!0)===n.byteLength)return!0;const i=[115,111,108,105,100];for(let r=0;r<5;r++)if(t(i,n,r))return!1;return!0}(n)?function(e){const t=new DataView(e),n=t.getUint32(80,!0);let i,r,s,a,o,l,c,u,h=!1;for(let g=0;g<70;g++)1129270351==t.getUint32(g,!1)&&82==t.getUint8(g+4)&&61==t.getUint8(g+5)&&(h=!0,a=new Float32Array(3*n*3),o=t.getUint8(g+6)/255,l=t.getUint8(g+7)/255,c=t.getUint8(g+8)/255,u=t.getUint8(g+9)/255);const d=new es,p=new Float32Array(3*n*3),m=new Float32Array(3*n*3),f=new wr;for(let g=0;g<n;g++){const e=84+50*g,n=t.getFloat32(e,!0),u=t.getFloat32(e+4,!0),d=t.getFloat32(e+8,!0);if(h){const n=t.getUint16(e+48,!0);32768&n?(i=o,r=l,s=c):(i=(31&n)/31,r=(n>>5&31)/31,s=(n>>10&31)/31)}for(let o=1;o<=3;o++){const l=e+12*o,c=3*g*3+3*(o-1);p[c]=t.getFloat32(l,!0),p[c+1]=t.getFloat32(l+4,!0),p[c+2]=t.getFloat32(l+8,!0),m[c]=n,m[c+1]=u,m[c+2]=d,h&&(f.setRGB(i,r,s,Ut),a[c]=f.r,a[c+1]=f.g,a[c+2]=f.b)}}return d.setAttribute("position",new Or(p,3)),d.setAttribute("normal",new Or(m,3)),h&&(d.setAttribute("color",new Or(a,3)),d.hasColors=!0,d.alpha=u),d}(n):function(e){const t=new es,n=/solid([\s\S]*?)endsolid/g,i=/facet([\s\S]*?)endfacet/g,r=/solid\s(.+)/;let s=0;const a=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,o=new RegExp("vertex"+a+a+a,"g"),l=new RegExp("normal"+a+a+a,"g"),c=[],u=[],h=[],d=new En;let p,m=0,f=0,g=0;for(;null!==(p=n.exec(e));){f=g;const e=p[0],n=null!==(p=r.exec(e))?p[1]:"";for(h.push(n);null!==(p=i.exec(e));){let e=0,t=0;const n=p[0];for(;null!==(p=l.exec(n));)d.x=parseFloat(p[1]),d.y=parseFloat(p[2]),d.z=parseFloat(p[3]),t++;for(;null!==(p=o.exec(n));)c.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),u.push(d.x,d.y,d.z),e++,g++;1!==t&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+s),3!==e&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+s),s++}const a=f,v=g-f;t.userData.groupNames=h,t.addGroup(a,v,m),m++}return t.setAttribute("position",new Xr(c,3)),t.setAttribute("normal",new Xr(u,3)),t}(function(e){return"string"!=typeof e?(new TextDecoder).decode(e):e}(e))}}const fy=new En,gy=new En;class vy{modify(e,t){delete(e=e.clone()).morphAttributes.position,delete e.morphAttributes.normal;const n=e.attributes;for(const S in n)"position"!==S&&"uv"!==S&&"normal"!==S&&"tangent"!==S&&"color"!==S&&e.deleteAttribute(S);e=function(e,t=1e-4){t=Math.max(t,Number.EPSILON);const n={},i=e.getIndex(),r=e.getAttribute("position"),s=i?i.count:r.count;let a=0;const o=Object.keys(e.attributes),l={},c={},u=[],h=["getX","getY","getZ","getW"],d=["setX","setY","setZ","setW"];for(let b=0,y=o.length;b<y;b++){const t=o[b],n=e.attributes[t];l[t]=new n.constructor(new n.array.constructor(n.count*n.itemSize),n.itemSize,n.normalized);const i=e.morphAttributes[t];i&&(c[t]||(c[t]=[]),i.forEach((e,n)=>{const i=new e.array.constructor(e.count*e.itemSize);c[t][n]=new e.constructor(i,e.itemSize,e.normalized)}))}const p=.5*t,m=Math.log10(1/t),f=Math.pow(10,m),g=p*f;for(let b=0;b<s;b++){const t=i?i.getX(b):b;let r="";for(let n=0,i=o.length;n<i;n++){const i=o[n],s=e.getAttribute(i),a=s.itemSize;for(let e=0;e<a;e++)r+=~~(s[h[e]](t)*f+g)+","}if(r in n)u.push(n[r]);else{for(let n=0,i=o.length;n<i;n++){const i=o[n],r=e.getAttribute(i),s=e.morphAttributes[i],u=r.itemSize,p=l[i],m=c[i];for(let e=0;e<u;e++){const n=h[e],i=d[e];if(p[i](a,r[n](t)),s)for(let e=0,r=s.length;e<r;e++)m[e][i](a,s[e][n](t))}}n[r]=a,u.push(a),a++}}const v=e.clone();for(const b in e.attributes){const e=l[b];if(v.setAttribute(b,new e.constructor(e.array.slice(0,a*e.itemSize),e.itemSize,e.normalized)),b in c)for(let t=0;t<c[b].length;t++){const e=c[b][t];v.morphAttributes[b][t]=new e.constructor(e.array.slice(0,a*e.itemSize),e.itemSize,e.normalized)}}return v.setIndex(u),v}(e);const i=[],r=[],s=e.getAttribute("position"),a=e.getAttribute("uv"),o=e.getAttribute("normal"),l=e.getAttribute("tangent"),c=e.getAttribute("color");let u=null,h=null,d=null,p=null;for(let S=0;S<s.count;S++){const e=(new En).fromBufferAttribute(s,S);a&&(h=(new wn).fromBufferAttribute(a,S)),o&&(d=(new En).fromBufferAttribute(o,S)),l&&(u=(new Zn).fromBufferAttribute(l,S)),c&&(p=(new wr).fromBufferAttribute(c,S));const t=new Ey(e,h,d,u,p);i.push(t)}let m,f=e.getIndex();if(null!==f)for(let S=0;S<f.count;S+=3){const e=f.getX(S),t=f.getX(S+1),n=f.getX(S+2),s=new My(i[e],i[t],i[n],e,t,n);r.push(s)}else for(let S=0;S<s.count;S+=3){const e=S,t=S+1,n=S+2,s=new My(i[e],i[t],i[n],e,t,n);r.push(s)}for(let S=0,w=i.length;S<w;S++)xy(i[S]);let g=t;for(;g--;){if(m=wy(i),!m){console.log("THREE.SimplifyModifier: No next vertex");break}Sy(i,r,m,m.collapseNeighbor)}const v=new es,b=[],y=[],x=[],_=[],T=[];f=[];for(let S=0;S<i.length;S++){const e=i[S];b.push(e.position.x,e.position.y,e.position.z),e.uv&&y.push(e.uv.x,e.uv.y),e.normal&&x.push(e.normal.x,e.normal.y,e.normal.z),e.tangent&&_.push(e.tangent.x,e.tangent.y,e.tangent.z,e.tangent.w),e.color&&T.push(e.color.r,e.color.g,e.color.b),e.id=S}for(let S=0;S<r.length;S++){const e=r[S];f.push(e.v1.id,e.v2.id,e.v3.id)}return v.setAttribute("position",new Xr(b,3)),y.length>0&&v.setAttribute("uv",new Xr(y,2)),x.length>0&&v.setAttribute("normal",new Xr(x,3)),_.length>0&&v.setAttribute("tangent",new Xr(_,4)),T.length>0&&v.setAttribute("color",new Xr(T,3)),v.setIndex(f),v}}function by(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}function yy(e,t){const n=t.position.distanceTo(e.position);let i=0;const r=[];for(let s=0,a=e.faces.length;s<a;s++){const n=e.faces[s];n.hasVertex(t)&&r.push(n)}for(let s=0,a=e.faces.length;s<a;s++){let t=1;const n=e.faces[s];for(let e=0;e<r.length;e++){const i=r[e],s=n.normal.dot(i.normal);t=Math.min(t,(1.001-s)/2)}i=Math.max(i,t)}r.length<2&&(i=1);return n*i+0}function xy(e){if(0===e.neighbors.length)return e.collapseNeighbor=null,void(e.collapseCost=-.01);e.collapseCost=1e5,e.collapseNeighbor=null;for(let t=0;t<e.neighbors.length;t++){const n=yy(e,e.neighbors[t]);e.collapseNeighbor||(e.collapseNeighbor=e.neighbors[t],e.collapseCost=n,e.minCost=n,e.totalCost=0,e.costCount=0),e.costCount++,e.totalCost+=n,n<e.minCost&&(e.collapseNeighbor=e.neighbors[t],e.minCost=n)}e.collapseCost=e.totalCost/e.costCount}function _y(e,t){for(console.assert(0===e.faces.length);e.neighbors.length;){by(e.neighbors.pop().neighbors,e)}by(t,e)}function Ty(e,t){by(t,e),e.v1&&by(e.v1.faces,e),e.v2&&by(e.v2.faces,e),e.v3&&by(e.v3.faces,e);const n=[e.v1,e.v2,e.v3];for(let i=0;i<3;i++){const e=n[i],t=n[(i+1)%3];e&&t&&(e.removeIfNonNeighbor(t),t.removeIfNonNeighbor(e))}}function Sy(e,t,n,i){if(!i)return void _y(n,e);i.uv&&n.uv.copy(i.uv),i.normal&&i.normal.add(n.normal).normalize(),i.tangent&&i.tangent.add(n.tangent).normalize();const r=[];for(let s=0;s<n.neighbors.length;s++)r.push(n.neighbors[s]);for(let s=n.faces.length-1;s>=0;s--)n.faces[s]&&n.faces[s].hasVertex(i)&&Ty(n.faces[s],t);for(let s=n.faces.length-1;s>=0;s--)n.faces[s].replaceVertex(n,i);_y(n,e);for(let s=0;s<r.length;s++)xy(r[s])}function wy(e){let t=e[0];for(let n=0;n<e.length;n++)e[n].collapseCost<t.collapseCost&&(t=e[n]);return t}class My{constructor(e,t,n,i,r,s){this.a=i,this.b=r,this.c=s,this.v1=e,this.v2=t,this.v3=n,this.normal=new En,this.computeNormal(),e.faces.push(this),e.addUniqueNeighbor(t),e.addUniqueNeighbor(n),t.faces.push(this),t.addUniqueNeighbor(e),t.addUniqueNeighbor(n),n.faces.push(this),n.addUniqueNeighbor(e),n.addUniqueNeighbor(t)}computeNormal(){const e=this.v1.position,t=this.v2.position,n=this.v3.position;fy.subVectors(n,t),gy.subVectors(e,t),fy.cross(gy).normalize(),this.normal.copy(fy)}hasVertex(e){return e===this.v1||e===this.v2||e===this.v3}replaceVertex(e,t){e===this.v1?this.v1=t:e===this.v2?this.v2=t:e===this.v3&&(this.v3=t),by(e.faces,this),t.faces.push(this),e.removeIfNonNeighbor(this.v1),this.v1.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v2),this.v2.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v3),this.v3.removeIfNonNeighbor(e),this.v1.addUniqueNeighbor(this.v2),this.v1.addUniqueNeighbor(this.v3),this.v2.addUniqueNeighbor(this.v1),this.v2.addUniqueNeighbor(this.v3),this.v3.addUniqueNeighbor(this.v1),this.v3.addUniqueNeighbor(this.v2),this.computeNormal()}}class Ey{constructor(e,t,n,i,r){this.position=e,this.uv=t,this.normal=n,this.tangent=i,this.color=r,this.id=-1,this.faces=[],this.neighbors=[],this.collapseCost=0,this.collapseNeighbor=null}addUniqueNeighbor(e){!function(e,t){-1===e.indexOf(t)&&e.push(t)}(this.neighbors,e)}removeIfNonNeighbor(e){const t=this.neighbors,n=this.faces,i=t.indexOf(e);if(-1!==i){for(let t=0;t<n.length;t++)if(n[t].hasVertex(e))return;t.splice(i,1)}}}class Ay extends ds{constructor(e,t={}){super(e),this.isReflector=!0,this.type="Reflector",this.forceUpdate=!1,this.camera=new ws;const n=this,i=void 0!==t.color?new wr(t.color):new wr(8355711),r=t.textureWidth||512,s=t.textureHeight||512,a=t.clipBias||0,o=t.shader||Ay.ReflectorShader,l=void 0!==t.multisample?t.multisample:4,c=new Na,u=new En,h=new En,d=new En,p=new Li,m=new En(0,0,-1),f=new Zn,g=new En,v=new En,b=new Zn,y=new Li,x=this.camera,_=new ei(r,s,{samples:l,type:Se}),T=new ys({name:void 0!==o.name?o.name:"unspecified",uniforms:bs.clone(o.uniforms),fragmentShader:o.fragmentShader,vertexShader:o.vertexShader});T.uniforms.tDiffuse.value=_.texture,T.uniforms.color.value=i,T.uniforms.textureMatrix.value=y,this.material=T,this.onBeforeRender=function(e,t,i){h.setFromMatrixPosition(n.matrixWorld),d.setFromMatrixPosition(i.matrixWorld),p.extractRotation(n.matrixWorld),u.set(0,0,1),u.applyMatrix4(p),g.subVectors(h,d);if(!0===g.dot(u)>0&&!1===this.forceUpdate)return;g.reflect(u).negate(),g.add(h),p.extractRotation(i.matrixWorld),m.set(0,0,-1),m.applyMatrix4(p),m.add(d),v.subVectors(h,m),v.reflect(u).negate(),v.add(h),x.position.copy(g),x.up.set(0,1,0),x.up.applyMatrix4(p),x.up.reflect(u),x.lookAt(v),x.far=i.far,x.updateMatrixWorld(),x.projectionMatrix.copy(i.projectionMatrix),y.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),y.multiply(x.projectionMatrix),y.multiply(x.matrixWorldInverse),y.multiply(n.matrixWorld),c.setFromNormalAndCoplanarPoint(u,h),c.applyMatrix4(x.matrixWorldInverse),f.set(c.normal.x,c.normal.y,c.normal.z,c.constant);const r=x.projectionMatrix;b.x=(Math.sign(f.x)+r.elements[8])/r.elements[0],b.y=(Math.sign(f.y)+r.elements[9])/r.elements[5],b.z=-1,b.w=(1+r.elements[10])/r.elements[14],f.multiplyScalar(2/f.dot(b)),r.elements[2]=f.x,r.elements[6]=f.y,r.elements[10]=f.z+1-a,r.elements[14]=f.w,n.visible=!1;const s=e.getRenderTarget(),o=e.xr.enabled,l=e.shadowMap.autoUpdate;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(_),e.state.buffers.depth.setMask(!0),!1===e.autoClear&&e.clear(),e.render(t,x),e.xr.enabled=o,e.shadowMap.autoUpdate=l,e.setRenderTarget(s);const T=i.viewport;void 0!==T&&e.state.viewport(T),n.visible=!0,this.forceUpdate=!1},this.getRenderTarget=function(){return _},this.dispose=function(){_.dispose(),n.material.dispose()}}}Ay.ReflectorShader={name:"ReflectorShader",uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:"\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\t#include <common>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t}",fragmentShader:"\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec4 vUv;\n\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"};class Ry extends ds{constructor(e,t={}){super(e),this.isRefractor=!0,this.type="Refractor",this.camera=new ws;const n=this,i=void 0!==t.color?new wr(t.color):new wr(8355711),r=t.textureWidth||512,s=t.textureHeight||512,a=t.clipBias||0,o=t.shader||Ry.RefractorShader,l=void 0!==t.multisample?t.multisample:4,c=this.camera;c.matrixAutoUpdate=!1,c.userData.refractor=!0;const u=new Na,h=new Li,d=new ei(r,s,{samples:l,type:Se});this.material=new ys({name:void 0!==o.name?o.name:"unspecified",uniforms:bs.clone(o.uniforms),vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,transparent:!0}),this.material.uniforms.color.value=i,this.material.uniforms.tDiffuse.value=d.texture,this.material.uniforms.textureMatrix.value=h;const p=function(){const e=new En,t=new En,i=new Li,r=new En,s=new En;return function(a){return e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(a.matrixWorld),r.subVectors(e,t),i.extractRotation(n.matrixWorld),s.set(0,0,1),s.applyMatrix4(i),r.dot(s)<0}}(),m=function(){const e=new En,t=new En,i=new Mn,r=new En;return function(){n.matrixWorld.decompose(t,i,r),e.set(0,0,1).applyQuaternion(i).normalize(),e.negate(),u.setFromNormalAndCoplanarPoint(e,t)}}(),f=function(){const e=new Na,t=new Zn,n=new Zn;return function(i){c.matrixWorld.copy(i.matrixWorld),c.matrixWorldInverse.copy(c.matrixWorld).invert(),c.projectionMatrix.copy(i.projectionMatrix),c.far=i.far,e.copy(u),e.applyMatrix4(c.matrixWorldInverse),t.set(e.normal.x,e.normal.y,e.normal.z,e.constant);const r=c.projectionMatrix;n.x=(Math.sign(t.x)+r.elements[8])/r.elements[0],n.y=(Math.sign(t.y)+r.elements[9])/r.elements[5],n.z=-1,n.w=(1+r.elements[10])/r.elements[14],t.multiplyScalar(2/t.dot(n)),r.elements[2]=t.x,r.elements[6]=t.y,r.elements[10]=t.z+1-a,r.elements[14]=t.w}}();this.onBeforeRender=function(e,t,i){!0!==i.userData.refractor&&!0!=!p(i)&&(m(),function(e){h.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),h.multiply(e.projectionMatrix),h.multiply(e.matrixWorldInverse),h.multiply(n.matrixWorld)}(i),f(i),function(e,t,i){n.visible=!1;const r=e.getRenderTarget(),s=e.xr.enabled,a=e.shadowMap.autoUpdate;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(d),!1===e.autoClear&&e.clear(),e.render(t,c),e.xr.enabled=s,e.shadowMap.autoUpdate=a,e.setRenderTarget(r);const o=i.viewport;void 0!==o&&e.state.viewport(o),n.visible=!0}(e,t,i))},this.getRenderTarget=function(){return d},this.dispose=function(){d.dispose(),n.material.dispose()}}}Ry.RefractorShader={name:"RefractorShader",uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:"\n\n\t\tuniform mat4 textureMatrix;\n\n\t\tvarying vec4 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec4 vUv;\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"};class Cy extends ds{constructor(){const e=Cy.SkyShader,t=new ys({name:e.name,uniforms:bs.clone(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,side:1,depthWrite:!1});super(new ms(1,1,1),t),this.isSky=!0}}Cy.SkyShader={name:"SkyShader",uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new En},up:{value:new En(0,1,0)}},vertexShader:"\n\t\tuniform vec3 sunPosition;\n\t\tuniform float rayleigh;\n\t\tuniform float turbidity;\n\t\tuniform float mieCoefficient;\n\t\tuniform vec3 up;\n\n\t\tvarying vec3 vWorldPosition;\n\t\tvarying vec3 vSunDirection;\n\t\tvarying float vSunfade;\n\t\tvarying vec3 vBetaR;\n\t\tvarying vec3 vBetaM;\n\t\tvarying float vSunE;\n\n\t\t// constants for atmospheric scattering\n\t\tconst float e = 2.71828182845904523536028747135266249775724709369995957;\n\t\tconst float pi = 3.141592653589793238462643383279502884197169;\n\n\t\t// wavelength of used primaries, according to preetham\n\t\tconst vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );\n\t\t// this pre-calculation replaces older TotalRayleigh(vec3 lambda) function:\n\t\t// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\n\t\tconst vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );\n\n\t\t// mie stuff\n\t\t// K coefficient for the primaries\n\t\tconst float v = 4.0;\n\t\tconst vec3 K = vec3( 0.686, 0.678, 0.666 );\n\t\t// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\n\t\tconst vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );\n\n\t\t// earth shadow hack\n\t\t// cutoffAngle = pi / 1.95;\n\t\tconst float cutoffAngle = 1.6110731556870734;\n\t\tconst float steepness = 1.5;\n\t\tconst float EE = 1000.0;\n\n\t\tfloat sunIntensity( float zenithAngleCos ) {\n\t\t\tzenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );\n\t\t\treturn EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );\n\t\t}\n\n\t\tvec3 totalMie( float T ) {\n\t\t\tfloat c = ( 0.2 * T ) * 10E-18;\n\t\t\treturn 0.434 * c * MieConst;\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\tvWorldPosition = worldPosition.xyz;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n\t\t\tvSunDirection = normalize( sunPosition );\n\n\t\t\tvSunE = sunIntensity( dot( vSunDirection, up ) );\n\n\t\t\tvSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );\n\n\t\t\tfloat rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );\n\n\t\t\t// extinction (absorption + out scattering)\n\t\t\t// rayleigh coefficients\n\t\t\tvBetaR = totalRayleigh * rayleighCoefficient;\n\n\t\t\t// mie coefficients\n\t\t\tvBetaM = totalMie( turbidity ) * mieCoefficient;\n\n\t\t}",fragmentShader:"\n\t\tvarying vec3 vWorldPosition;\n\t\tvarying vec3 vSunDirection;\n\t\tvarying float vSunfade;\n\t\tvarying vec3 vBetaR;\n\t\tvarying vec3 vBetaM;\n\t\tvarying float vSunE;\n\n\t\tuniform float mieDirectionalG;\n\t\tuniform vec3 up;\n\n\t\t// constants for atmospheric scattering\n\t\tconst float pi = 3.141592653589793238462643383279502884197169;\n\n\t\tconst float n = 1.0003; // refractive index of air\n\t\tconst float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)\n\n\t\t// optical length at zenith for molecules\n\t\tconst float rayleighZenithLength = 8.4E3;\n\t\tconst float mieZenithLength = 1.25E3;\n\t\t// 66 arc seconds -> degrees, and the cosine of that\n\t\tconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n\n\t\t// 3.0 / ( 16.0 * pi )\n\t\tconst float THREE_OVER_SIXTEENPI = 0.05968310365946075;\n\t\t// 1.0 / ( 4.0 * pi )\n\t\tconst float ONE_OVER_FOURPI = 0.07957747154594767;\n\n\t\tfloat rayleighPhase( float cosTheta ) {\n\t\t\treturn THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );\n\t\t}\n\n\t\tfloat hgPhase( float cosTheta, float g ) {\n\t\t\tfloat g2 = pow( g, 2.0 );\n\t\t\tfloat inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );\n\t\t\treturn ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec3 direction = normalize( vWorldPosition - cameraPosition );\n\n\t\t\t// optical length\n\t\t\t// cutoff angle at 90 to avoid singularity in next formula.\n\t\t\tfloat zenithAngle = acos( max( 0.0, dot( up, direction ) ) );\n\t\t\tfloat inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );\n\t\t\tfloat sR = rayleighZenithLength * inverse;\n\t\t\tfloat sM = mieZenithLength * inverse;\n\n\t\t\t// combined extinction factor\n\t\t\tvec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );\n\n\t\t\t// in scattering\n\t\t\tfloat cosTheta = dot( direction, vSunDirection );\n\n\t\t\tfloat rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );\n\t\t\tvec3 betaRTheta = vBetaR * rPhase;\n\n\t\t\tfloat mPhase = hgPhase( cosTheta, mieDirectionalG );\n\t\t\tvec3 betaMTheta = vBetaM * mPhase;\n\n\t\t\tvec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );\n\t\t\tLin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );\n\n\t\t\t// nightsky\n\t\t\tfloat theta = acos( direction.y ); // elevation --\x3e y-axis, [-pi/2, pi/2]\n\t\t\tfloat phi = atan( direction.z, direction.x ); // azimuth --\x3e x-axis [-pi/2, pi/2]\n\t\t\tvec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );\n\t\t\tvec3 L0 = vec3( 0.1 ) * Fex;\n\n\t\t\t// composition + solar disc\n\t\t\tfloat sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );\n\t\t\tL0 += ( vSunE * 19000.0 * Fex ) * sundisk;\n\n\t\t\tvec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );\n\n\t\t\tvec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );\n\n\t\t\tgl_FragColor = vec4( retColor, 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}"};let Ny=class extends ds{constructor(e,t={}){super(e),this.isWater=!0;const n=this,i=void 0!==t.textureWidth?t.textureWidth:512,r=void 0!==t.textureHeight?t.textureHeight:512,s=void 0!==t.clipBias?t.clipBias:0,a=void 0!==t.alpha?t.alpha:1,o=void 0!==t.time?t.time:0,l=void 0!==t.waterNormals?t.waterNormals:null,c=void 0!==t.sunDirection?t.sunDirection:new En(.70707,.70707,0),u=new wr(void 0!==t.sunColor?t.sunColor:16777215),h=new wr(void 0!==t.waterColor?t.waterColor:8355711),d=void 0!==t.eye?t.eye:new En(0,0,0),p=void 0!==t.distortionScale?t.distortionScale:20,m=void 0!==t.side?t.side:0,f=void 0!==t.fog&&t.fog,g=new Na,v=new En,b=new En,y=new En,x=new Li,_=new En(0,0,-1),T=new Zn,S=new En,w=new En,M=new Zn,E=new Li,A=new ws,R=new ei(i,r),C={name:"MirrorShader",uniforms:bs.merge([vd.fog,vd.lights,{normalSampler:{value:null},mirrorSampler:{value:null},alpha:{value:1},time:{value:0},size:{value:1},distortionScale:{value:20},textureMatrix:{value:new Li},sunColor:{value:new wr(8355711)},sunDirection:{value:new En(.70707,.70707,0)},eye:{value:new En},waterColor:{value:new wr(5592405)}}]),vertexShader:"\n\t\t\t\tuniform mat4 textureMatrix;\n\t\t\t\tuniform float time;\n\n\t\t\t\tvarying vec4 mirrorCoord;\n\t\t\t\tvarying vec4 worldPosition;\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <shadowmap_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tmirrorCoord = modelMatrix * vec4( position, 1.0 );\n\t\t\t\t\tworldPosition = mirrorCoord.xyzw;\n\t\t\t\t\tmirrorCoord = textureMatrix * mirrorCoord;\n\t\t\t\t\tvec4 mvPosition =  modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\t#include <beginnormal_vertex>\n\t\t\t\t#include <defaultnormal_vertex>\n\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t#include <fog_vertex>\n\t\t\t\t#include <shadowmap_vertex>\n\t\t\t}",fragmentShader:"\n\t\t\t\tuniform sampler2D mirrorSampler;\n\t\t\t\tuniform float alpha;\n\t\t\t\tuniform float time;\n\t\t\t\tuniform float size;\n\t\t\t\tuniform float distortionScale;\n\t\t\t\tuniform sampler2D normalSampler;\n\t\t\t\tuniform vec3 sunColor;\n\t\t\t\tuniform vec3 sunDirection;\n\t\t\t\tuniform vec3 eye;\n\t\t\t\tuniform vec3 waterColor;\n\n\t\t\t\tvarying vec4 mirrorCoord;\n\t\t\t\tvarying vec4 worldPosition;\n\n\t\t\t\tvec4 getNoise( vec2 uv ) {\n\t\t\t\t\tvec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);\n\t\t\t\t\tvec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );\n\t\t\t\t\tvec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );\n\t\t\t\t\tvec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );\n\t\t\t\t\tvec4 noise = texture2D( normalSampler, uv0 ) +\n\t\t\t\t\t\ttexture2D( normalSampler, uv1 ) +\n\t\t\t\t\t\ttexture2D( normalSampler, uv2 ) +\n\t\t\t\t\t\ttexture2D( normalSampler, uv3 );\n\t\t\t\t\treturn noise * 0.5 - 1.0;\n\t\t\t\t}\n\n\t\t\t\tvoid sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {\n\t\t\t\t\tvec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );\n\t\t\t\t\tfloat direction = max( 0.0, dot( eyeDirection, reflection ) );\n\t\t\t\t\tspecularColor += pow( direction, shiny ) * sunColor * spec;\n\t\t\t\t\tdiffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;\n\t\t\t\t}\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <packing>\n\t\t\t\t#include <bsdfs>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <lights_pars_begin>\n\t\t\t\t#include <shadowmap_pars_fragment>\n\t\t\t\t#include <shadowmask_pars_fragment>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\t\t\t\t\tvec4 noise = getNoise( worldPosition.xz * size );\n\t\t\t\t\tvec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\n\n\t\t\t\t\tvec3 diffuseLight = vec3(0.0);\n\t\t\t\t\tvec3 specularLight = vec3(0.0);\n\n\t\t\t\t\tvec3 worldToEye = eye-worldPosition.xyz;\n\t\t\t\t\tvec3 eyeDirection = normalize( worldToEye );\n\t\t\t\t\tsunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\n\n\t\t\t\t\tfloat distance = length(worldToEye);\n\n\t\t\t\t\tvec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;\n\t\t\t\t\tvec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );\n\n\t\t\t\t\tfloat theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\n\t\t\t\t\tfloat rf0 = 0.3;\n\t\t\t\t\tfloat reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\n\t\t\t\t\tvec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;\n\t\t\t\t\tvec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\n\t\t\t\t\tvec3 outgoingLight = albedo;\n\t\t\t\t\tgl_FragColor = vec4( outgoingLight, alpha );\n\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <colorspace_fragment>\n\t\t\t\t\t#include <fog_fragment>\t\n\t\t\t\t}"},N=new ys({name:C.name,uniforms:bs.clone(C.uniforms),vertexShader:C.vertexShader,fragmentShader:C.fragmentShader,lights:!0,side:m,fog:f});N.uniforms.mirrorSampler.value=R.texture,N.uniforms.textureMatrix.value=E,N.uniforms.alpha.value=a,N.uniforms.time.value=o,N.uniforms.normalSampler.value=l,N.uniforms.sunColor.value=u,N.uniforms.waterColor.value=h,N.uniforms.sunDirection.value=c,N.uniforms.distortionScale.value=p,N.uniforms.eye.value=d,n.material=N,n.onBeforeRender=function(e,t,i){if(b.setFromMatrixPosition(n.matrixWorld),y.setFromMatrixPosition(i.matrixWorld),x.extractRotation(n.matrixWorld),v.set(0,0,1),v.applyMatrix4(x),S.subVectors(b,y),S.dot(v)>0)return;S.reflect(v).negate(),S.add(b),x.extractRotation(i.matrixWorld),_.set(0,0,-1),_.applyMatrix4(x),_.add(y),w.subVectors(b,_),w.reflect(v).negate(),w.add(b),A.position.copy(S),A.up.set(0,1,0),A.up.applyMatrix4(x),A.up.reflect(v),A.lookAt(w),A.far=i.far,A.updateMatrixWorld(),A.projectionMatrix.copy(i.projectionMatrix),E.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),E.multiply(A.projectionMatrix),E.multiply(A.matrixWorldInverse),g.setFromNormalAndCoplanarPoint(v,b),g.applyMatrix4(A.matrixWorldInverse),T.set(g.normal.x,g.normal.y,g.normal.z,g.constant);const r=A.projectionMatrix;M.x=(Math.sign(T.x)+r.elements[8])/r.elements[0],M.y=(Math.sign(T.y)+r.elements[9])/r.elements[5],M.z=-1,M.w=(1+r.elements[10])/r.elements[14],T.multiplyScalar(2/T.dot(M)),r.elements[2]=T.x,r.elements[6]=T.y,r.elements[10]=T.z+1-s,r.elements[14]=T.w,d.setFromMatrixPosition(i.matrixWorld);const a=e.getRenderTarget(),o=e.xr.enabled,l=e.shadowMap.autoUpdate;n.visible=!1,e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.setRenderTarget(R),e.state.buffers.depth.setMask(!0),!1===e.autoClear&&e.clear(),e.render(t,A),n.visible=!0,e.xr.enabled=o,e.shadowMap.autoUpdate=l,e.setRenderTarget(a);const c=i.viewport;void 0!==c&&e.state.viewport(c)}}};class Py extends ds{constructor(e,t={}){super(e),this.isWater=!0,this.type="Water";const n=this,i=void 0!==t.color?new wr(t.color):new wr(16777215),r=void 0!==t.textureWidth?t.textureWidth:512,s=void 0!==t.textureHeight?t.textureHeight:512,a=void 0!==t.clipBias?t.clipBias:0,o=void 0!==t.flowDirection?t.flowDirection:new wn(1,0),l=void 0!==t.flowSpeed?t.flowSpeed:.03,c=void 0!==t.reflectivity?t.reflectivity:.02,u=void 0!==t.scale?t.scale:1,h=void 0!==t.shader?t.shader:Py.WaterShader,d=new Qc,p=t.flowMap||void 0,m=t.normalMap0||d.load("textures/water/Water_1_M_Normal.jpg"),f=t.normalMap1||d.load("textures/water/Water_2_M_Normal.jpg"),g=.15,v=.075,b=new Li,y=new Uu;if(void 0===Ay)return void console.error("THREE.Water: Required component Reflector not found.");if(void 0===Ry)return void console.error("THREE.Water: Required component Refractor not found.");const x=new Ay(e,{textureWidth:r,textureHeight:s,clipBias:a}),_=new Ry(e,{textureWidth:r,textureHeight:s,clipBias:a});x.matrixAutoUpdate=!1,_.matrixAutoUpdate=!1,this.material=new ys({name:h.name,uniforms:bs.merge([vd.fog,h.uniforms]),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,transparent:!0,fog:!0}),void 0!==p?(this.material.defines.USE_FLOWMAP="",this.material.uniforms.tFlowMap={type:"t",value:p}):this.material.uniforms.flowDirection={type:"v2",value:o},m.wrapS=m.wrapT=ae,f.wrapS=f.wrapT=ae,this.material.uniforms.tReflectionMap.value=x.getRenderTarget().texture,this.material.uniforms.tRefractionMap.value=_.getRenderTarget().texture,this.material.uniforms.tNormalMap0.value=m,this.material.uniforms.tNormalMap1.value=f,this.material.uniforms.color.value=i,this.material.uniforms.reflectivity.value=c,this.material.uniforms.textureMatrix.value=b,this.material.uniforms.config.value.x=0,this.material.uniforms.config.value.y=v,this.material.uniforms.config.value.z=v,this.material.uniforms.config.value.w=u,this.onBeforeRender=function(e,t,i){!function(e){b.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),b.multiply(e.projectionMatrix),b.multiply(e.matrixWorldInverse),b.multiply(n.matrixWorld)}(i),function(){const e=y.getDelta(),t=n.material.uniforms.config;t.value.x+=l*e,t.value.y=t.value.x+v,t.value.x>=g?(t.value.x=0,t.value.y=v):t.value.y>=g&&(t.value.y=t.value.y-g)}(),n.visible=!1,x.matrixWorld.copy(n.matrixWorld),_.matrixWorld.copy(n.matrixWorld),x.onBeforeRender(e,t,i),_.onBeforeRender(e,t,i),n.visible=!0}}}Py.WaterShader={name:"WaterShader",uniforms:{color:{type:"c",value:null},reflectivity:{type:"f",value:0},tReflectionMap:{type:"t",value:null},tRefractionMap:{type:"t",value:null},tNormalMap0:{type:"t",value:null},tNormalMap1:{type:"t",value:null},textureMatrix:{type:"m4",value:null},config:{type:"v4",value:new Zn}},vertexShader:"\n\n\t\t#include <common>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tuniform mat4 textureMatrix;\n\n\t\tvarying vec4 vCoord;\n\t\tvarying vec2 vUv;\n\t\tvarying vec3 vToEye;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tvCoord = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\tvToEye = cameraPosition - worldPosition.xyz;\n\n\t\t\tvec4 mvPosition =  viewMatrix * worldPosition; // used in fog_vertex\n\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}",fragmentShader:"\n\n\t\t#include <common>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tuniform sampler2D tReflectionMap;\n\t\tuniform sampler2D tRefractionMap;\n\t\tuniform sampler2D tNormalMap0;\n\t\tuniform sampler2D tNormalMap1;\n\n\t\t#ifdef USE_FLOWMAP\n\t\t\tuniform sampler2D tFlowMap;\n\t\t#else\n\t\t\tuniform vec2 flowDirection;\n\t\t#endif\n\n\t\tuniform vec3 color;\n\t\tuniform float reflectivity;\n\t\tuniform vec4 config;\n\n\t\tvarying vec4 vCoord;\n\t\tvarying vec2 vUv;\n\t\tvarying vec3 vToEye;\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tfloat flowMapOffset0 = config.x;\n\t\t\tfloat flowMapOffset1 = config.y;\n\t\t\tfloat halfCycle = config.z;\n\t\t\tfloat scale = config.w;\n\n\t\t\tvec3 toEye = normalize( vToEye );\n\n\t\t\t// determine flow direction\n\t\t\tvec2 flow;\n\t\t\t#ifdef USE_FLOWMAP\n\t\t\t\tflow = texture2D( tFlowMap, vUv ).rg * 2.0 - 1.0;\n\t\t\t#else\n\t\t\t\tflow = flowDirection;\n\t\t\t#endif\n\t\t\tflow.x *= - 1.0;\n\n\t\t\t// sample normal maps (distort uvs with flowdata)\n\t\t\tvec4 normalColor0 = texture2D( tNormalMap0, ( vUv * scale ) + flow * flowMapOffset0 );\n\t\t\tvec4 normalColor1 = texture2D( tNormalMap1, ( vUv * scale ) + flow * flowMapOffset1 );\n\n\t\t\t// linear interpolate to get the final normal color\n\t\t\tfloat flowLerp = abs( halfCycle - flowMapOffset0 ) / halfCycle;\n\t\t\tvec4 normalColor = mix( normalColor0, normalColor1, flowLerp );\n\n\t\t\t// calculate normal vector\n\t\t\tvec3 normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n\n\t\t\t// calculate the fresnel term to blend reflection and refraction maps\n\t\t\tfloat theta = max( dot( toEye, normal ), 0.0 );\n\t\t\tfloat reflectance = reflectivity + ( 1.0 - reflectivity ) * pow( ( 1.0 - theta ), 5.0 );\n\n\t\t\t// calculate final uv coords\n\t\t\tvec3 coord = vCoord.xyz / vCoord.w;\n\t\t\tvec2 uv = coord.xy + coord.z * normal.xz * 0.05;\n\n\t\t\tvec4 reflectColor = texture2D( tReflectionMap, vec2( 1.0 - uv.x, uv.y ) );\n\t\t\tvec4 refractColor = texture2D( tRefractionMap, uv );\n\n\t\t\t// multiply water color with the mix of both textures\n\t\t\tgl_FragColor = vec4( color, 1.0 ) * mix( refractColor, reflectColor, reflectance );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}"};const Ly={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"},Iy={uniforms:{damp:{value:.96},tOld:{value:null},tNew:{value:null}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float damp;\n\n\t\tuniform sampler2D tOld;\n\t\tuniform sampler2D tNew;\n\n\t\tvarying vec2 vUv;\n\n\t\tvec4 when_gt( vec4 x, float y ) {\n\n\t\t\treturn max( sign( x - y ), 0.0 );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 texelOld = texture2D( tOld, vUv );\n\t\t\tvec4 texelNew = texture2D( tNew, vUv );\n\n\t\t\ttexelOld *= damp * when_gt( texelOld, 0.1 );\n\n\t\t\tgl_FragColor = max(texelNew, texelOld);\n\n\t\t}"};class Dy extends Zm{constructor(e=.96){super(),this.uniforms=bs.clone(Iy.uniforms),this.damp=e,this.compFsMaterial=new ys({uniforms:this.uniforms,vertexShader:Iy.vertexShader,fragmentShader:Iy.fragmentShader}),this.copyFsMaterial=new ys({uniforms:bs.clone(Ly.uniforms),vertexShader:Ly.vertexShader,fragmentShader:Ly.fragmentShader,blending:0,depthTest:!1,depthWrite:!1}),this._textureComp=new ei(window.innerWidth,window.innerHeight,{magFilter:ce,type:Se}),this._textureOld=new ei(window.innerWidth,window.innerHeight,{magFilter:ce,type:Se}),this._compFsQuad=new tf(this.compFsMaterial),this._copyFsQuad=new tf(this.copyFsMaterial)}get damp(){return this.uniforms.damp.value}set damp(e){this.uniforms.damp.value=e}render(e,t,n){this.uniforms.tOld.value=this._textureOld.texture,this.uniforms.tNew.value=n.texture,e.setRenderTarget(this._textureComp),this._compFsQuad.render(e),this._copyFsQuad.material.uniforms.tDiffuse.value=this._textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this._copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this._copyFsQuad.render(e));const i=this._textureOld;this._textureOld=this._textureComp,this._textureComp=i}setSize(e,t){this._textureComp.setSize(e,t),this._textureOld.setSize(e,t)}dispose(){this._textureComp.dispose(),this._textureOld.dispose(),this.compFsMaterial.dispose(),this.copyFsMaterial.dispose(),this._compFsQuad.dispose(),this._copyFsQuad.dispose()}}class Fy extends Zm{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof ys?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=bs.clone(e.uniforms),this.material=new ys({name:void 0!==e.name?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new tf(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Uy extends Zm{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),r=e.state;let s,a;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0),this.inverse?(s=0,a=1):(s=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,s,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class Oy extends Zm{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class By{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),void 0===t){const n=e.getSize(new wn);this._width=n.width,this._height=n.height,(t=new ei(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Se})).texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Fy(Ly),this.copyPass.material.blending=0,this.clock=new Uu}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,r=this.passes.length;i<r;i++){const t=this.passes[i];if(!1!==t.enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),t.needsSwap){if(n){const t=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.setFunc(t.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Uy&&(t instanceof Uy?n=!0:t instanceof Oy&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){const t=this.renderer.getSize(new wn);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}const ky={name:"FilmShader",uniforms:{tDiffuse:{value:null},time:{value:0},intensity:{value:.5},grayscale:{value:!1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\t#include <common>\n\n\t\tuniform float intensity;\n\t\tuniform bool grayscale;\n\t\tuniform float time;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 base = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat noise = rand( fract( vUv + time ) );\n\n\t\t\tvec3 color = base.rgb + base.rgb * clamp( 0.1 + noise, 0.0, 1.0 );\n\n\t\t\tcolor = mix( base.rgb, color, intensity );\n\n\t\t\tif ( grayscale ) {\n\n\t\t\t\tcolor = vec3( luminance( color ) ); // assuming linear-srgb\n\n\t\t\t}\n\n\t\t\tgl_FragColor = vec4( color, base.a );\n\n\t\t}"};class Vy extends Zm{constructor(e=.5,t=!1){super();const n=ky;this.uniforms=bs.clone(n.uniforms),this.material=new ys({name:n.name,uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),this.uniforms.intensity.value=e,this.uniforms.grayscale.value=t,this._fsQuad=new tf(this.material)}render(e,t,n,i){this.uniforms.tDiffuse.value=n.texture,this.uniforms.time.value+=i,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}const zy={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",fragmentShader:"\n\n\t\tuniform int byp; //should we apply the glitch ?\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDisp;\n\n\t\tuniform float amount;\n\t\tuniform float angle;\n\t\tuniform float seed;\n\t\tuniform float seed_x;\n\t\tuniform float seed_y;\n\t\tuniform float distortion_x;\n\t\tuniform float distortion_y;\n\t\tuniform float col_s;\n\n\t\tvarying vec2 vUv;\n\n\n\t\tfloat rand(vec2 co){\n\t\t\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\t\t}\n\n\t\tvoid main() {\n\t\t\tif(byp<1) {\n\t\t\t\tvec2 p = vUv;\n\t\t\t\tfloat xs = floor(gl_FragCoord.x / 0.5);\n\t\t\t\tfloat ys = floor(gl_FragCoord.y / 0.5);\n\t\t\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t\t\t\tfloat disp = texture2D(tDisp, p*seed*seed).r;\n\t\t\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n\t\t\t\t\tif(seed_x>0.){\n\t\t\t\t\t\tp.y = 1. - (p.y + distortion_y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.y = distortion_y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\n\t\t\t\t\tif(seed_y>0.){\n\t\t\t\t\t\tp.x=distortion_x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.x = 1. - (p.x + distortion_x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tp.x+=disp*seed_x*(seed/5.);\n\t\t\t\tp.y+=disp*seed_y*(seed/5.);\n\t\t\t\t//base from RGB shift shader\n\t\t\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\n\t\t\t\tvec4 cr = texture2D(tDiffuse, p + offset);\n\t\t\t\tvec4 cga = texture2D(tDiffuse, p);\n\t\t\t\tvec4 cb = texture2D(tDiffuse, p - offset);\n\t\t\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n\t\t\t\t//add noise\n\t\t\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\n\t\t\t\tgl_FragColor = gl_FragColor+ snow;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgl_FragColor=texture2D (tDiffuse, vUv);\n\t\t\t}\n\t\t}"};class Gy extends Zm{constructor(e=64){super(),this.uniforms=bs.clone(zy.uniforms),this.material=new ys({uniforms:this.uniforms,vertexShader:zy.vertexShader,fragmentShader:zy.fragmentShader}),this.goWild=!1,this._heightMap=this._generateHeightmap(e),this.uniforms.tDisp.value=this.heightMap,this._fsQuad=new tf(this.material),this._curF=0,this._randX=0,this._generateTrigger()}render(e,t,n){this.uniforms.tDiffuse.value=n.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this._curF%this._randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=Sn.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=Sn.randFloat(-1,1),this.uniforms.seed_y.value=Sn.randFloat(-1,1),this.uniforms.distortion_x.value=Sn.randFloat(0,1),this.uniforms.distortion_y.value=Sn.randFloat(0,1),this._curF=0,this._generateTrigger()):this._curF%this._randX<this._randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=Sn.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=Sn.randFloat(0,1),this.uniforms.distortion_y.value=Sn.randFloat(0,1),this.uniforms.seed_x.value=Sn.randFloat(-.3,.3),this.uniforms.seed_y.value=Sn.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this._curF++,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this._fsQuad.render(e))}dispose(){this.material.dispose(),this.heightMap.dispose(),this._fsQuad.dispose()}_generateTrigger(){this._randX=Sn.randInt(120,240)}_generateHeightmap(e){const t=new Float32Array(e*e),n=e*e;for(let r=0;r<n;r++){const e=Sn.randFloat(0,1);t[r]=e}const i=new ma(t,e,e,De,Te);return i.needsUpdate=!0,i}}const Hy={name:"LUTShader",uniforms:{lut:{value:null},lutSize:{value:0},tDiffuse:{value:null},intensity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform float lutSize;\n\t\tuniform sampler3D lut;\n\n\t\tvarying vec2 vUv;\n\t\tuniform float intensity;\n\t\tuniform sampler2D tDiffuse;\n\t\tvoid main() {\n\n\t\t\tvec4 val = texture2D( tDiffuse, vUv );\n\t\t\tvec4 lutVal;\n\n\t\t\t// pull the sample in by half a pixel so the sample begins\n\t\t\t// at the center of the edge pixels.\n\t\t\tfloat pixelWidth = 1.0 / lutSize;\n\t\t\tfloat halfPixelWidth = 0.5 / lutSize;\n\t\t\tvec3 uvw = vec3( halfPixelWidth ) + val.rgb * ( 1.0 - pixelWidth );\n\n\n\t\t\tlutVal = vec4( texture( lut, uvw ).rgb, val.a );\n\n\t\t\tgl_FragColor = vec4( mix( val, lutVal, intensity ) );\n\n\t\t}\n\n\t"};class Wy extends Fy{constructor(e={}){super(Hy),this.lut=e.lut||null,this.intensity="intensity"in e?e.intensity:1}set lut(e){const t=this.material;e!==this.lut&&(t.uniforms.lut.value=null,e&&(t.uniforms.lutSize.value=e.image.width,t.uniforms.lut.value=e))}get lut(){return this.material.uniforms.lut.value}set intensity(e){this.material.uniforms.intensity.value=e}get intensity(){return this.material.uniforms.intensity.value}}const jy={name:"OutputShader",uniforms:{tDiffuse:{value:null},toneMappingExposure:{value:1}},vertexShader:"\n\t\tprecision highp float;\n\n\t\tuniform mat4 modelViewMatrix;\n\t\tuniform mat4 projectionMatrix;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\t#include <tonemapping_pars_fragment>\n\t\t#include <colorspace_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t// tone mapping\n\n\t\t\t#ifdef LINEAR_TONE_MAPPING\n\n\t\t\t\tgl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( REINHARD_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CINEON_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CineonToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( ACES_FILMIC_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( AGX_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = AgXToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( NEUTRAL_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = NeutralToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CUSTOM_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CustomToneMapping( gl_FragColor.rgb );\n\n\t\t\t#endif\n\n\t\t\t// color space\n\n\t\t\t#ifdef SRGB_TRANSFER\n\n\t\t\t\tgl_FragColor = sRGBTransferOETF( gl_FragColor );\n\n\t\t\t#endif\n\n\t\t}"};class Xy extends Zm{constructor(){super(),this.uniforms=bs.clone(jy.uniforms),this.material=new oc({name:jy.name,uniforms:this.uniforms,vertexShader:jy.vertexShader,fragmentShader:jy.fragmentShader}),this._fsQuad=new tf(this.material),this._outputColorSpace=null,this._toneMapping=null}render(e,t,n){this.uniforms.tDiffuse.value=n.texture,this.uniforms.toneMappingExposure.value=e.toneMappingExposure,this._outputColorSpace===e.outputColorSpace&&this._toneMapping===e.toneMapping||(this._outputColorSpace=e.outputColorSpace,this._toneMapping=e.toneMapping,this.material.defines={},zn.getTransfer(this._outputColorSpace)===kt&&(this.material.defines.SRGB_TRANSFER=""),1===this._toneMapping?this.material.defines.LINEAR_TONE_MAPPING="":2===this._toneMapping?this.material.defines.REINHARD_TONE_MAPPING="":3===this._toneMapping?this.material.defines.CINEON_TONE_MAPPING="":4===this._toneMapping?this.material.defines.ACES_FILMIC_TONE_MAPPING="":6===this._toneMapping?this.material.defines.AGX_TONE_MAPPING="":7===this._toneMapping?this.material.defines.NEUTRAL_TONE_MAPPING="":5===this._toneMapping&&(this.material.defines.CUSTOM_TONE_MAPPING=""),this.material.needsUpdate=!0),!0===this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class qy extends Zm{constructor(e,t,n=null,i=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new wr}render(e,t,n){const i=e.autoClear;let r,s;e.autoClear=!1,null!==this.overrideMaterial&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),null!==this.clearAlpha&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),!0===this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),null!==this.clearColor&&e.setClearColor(this._oldClearColor),null!==this.clearAlpha&&e.setClearAlpha(r),null!==this.overrideMaterial&&(this.scene.overrideMaterial=s),e.autoClear=i}}const $y={uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new wr(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class Yy extends Zm{constructor(e,t=1,n,i){super(),this.strength=t,this.radius=n,this.threshold=i,this.resolution=void 0!==e?new wn(e.x,e.y):new wn(256,256),this.clearColor=new wr(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);this.renderTargetBright=new ei(r,s,{type:Se}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let l=0;l<this.nMips;l++){const e=new ei(r,s,{type:Se});e.texture.name="UnrealBloomPass.h"+l,e.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(e);const t=new ei(r,s,{type:Se});t.texture.name="UnrealBloomPass.v"+l,t.texture.generateMipmaps=!1,this.renderTargetsVertical.push(t),r=Math.round(r/2),s=Math.round(s/2)}const a=$y;this.highPassUniforms=bs.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new ys({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.separableBlurMaterials=[];const o=[3,5,7,9,11];r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);for(let l=0;l<this.nMips;l++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(o[l])),this.separableBlurMaterials[l].uniforms.invSize.value=new wn(1/r,1/s),r=Math.round(r/2),s=Math.round(s/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new En(1,1,1),new En(1,1,1),new En(1,1,1),new En(1,1,1),new En(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=bs.clone(Ly.uniforms),this.blendMaterial=new ys({uniforms:this.copyUniforms,vertexShader:Ly.vertexShader,fragmentShader:Ly.fragmentShader,blending:2,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new wr,this._oldClearAlpha=1,this._basic=new Rr,this._fsQuad=new tf(null)}dispose(){for(let e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(let e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose();for(let e=0;e<this.separableBlurMaterials.length;e++)this.separableBlurMaterials[e].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(e,t){let n=Math.round(e/2),i=Math.round(t/2);this.renderTargetBright.setSize(n,i);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(n,i),this.renderTargetsVertical[r].setSize(n,i),this.separableBlurMaterials[r].uniforms.invSize.value=new wn(1/n,1/i),n=Math.round(n/2),i=Math.round(i/2)}render(e,t,n,i,r){e.getClearColor(this._oldClearColor),this._oldClearAlpha=e.getClearAlpha();const s=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),r&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=n.texture,e.setRenderTarget(null),e.clear(),this._fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=n.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this._fsQuad.render(e);let a=this.renderTargetBright;for(let o=0;o<this.nMips;o++)this._fsQuad.material=this.separableBlurMaterials[o],this.separableBlurMaterials[o].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[o].uniforms.direction.value=Yy.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[o]),e.clear(),this._fsQuad.render(e),this.separableBlurMaterials[o].uniforms.colorTexture.value=this.renderTargetsHorizontal[o].texture,this.separableBlurMaterials[o].uniforms.direction.value=Yy.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[o]),e.clear(),this._fsQuad.render(e),a=this.renderTargetsVertical[o];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(n),this._fsQuad.render(e)),e.setClearColor(this._oldClearColor,this._oldClearAlpha),e.autoClear=s}_getSeparableBlurMaterial(e){const t=[];for(let n=0;n<e;n++)t.push(.39894*Math.exp(-.5*n*n/(e*e))/e);return new ys({defines:{KERNEL_RADIUS:e},uniforms:{colorTexture:{value:null},invSize:{value:new wn(.5,.5)},direction:{value:new wn(.5,.5)},gaussianCoefficients:{value:t}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}_getCompositeMaterial(e){return new ys({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}Yy.BlurDirectionX=new wn(1,0),Yy.BlurDirectionY=new wn(0,1);const Ky={name:"FXAAShader",uniforms:{tDiffuse:{value:null},resolution:{value:new wn(1/1024,1/512)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\n\t\t#define EDGE_STEP_COUNT 6\n\t\t#define EDGE_GUESS 8.0\n\t\t#define EDGE_STEPS 1.0, 1.5, 2.0, 2.0, 2.0, 4.0\n\t\tconst float edgeSteps[EDGE_STEP_COUNT] = float[EDGE_STEP_COUNT]( EDGE_STEPS );\n\n\t\tfloat _ContrastThreshold = 0.0312;\n\t\tfloat _RelativeThreshold = 0.063;\n\t\tfloat _SubpixelBlending = 1.0;\n\n\t\tvec4 Sample( sampler2D  tex2D, vec2 uv ) {\n\n\t\t\treturn texture( tex2D, uv );\n\n\t\t}\n\n\t\tfloat SampleLuminance( sampler2D tex2D, vec2 uv ) {\n\n\t\t\treturn dot( Sample( tex2D, uv ).rgb, vec3( 0.3, 0.59, 0.11 ) );\n\n\t\t}\n\n\t\tfloat SampleLuminance( sampler2D tex2D, vec2 texSize, vec2 uv, float uOffset, float vOffset ) {\n\n\t\t\tuv += texSize * vec2(uOffset, vOffset);\n\t\t\treturn SampleLuminance(tex2D, uv);\n\n\t\t}\n\n\t\tstruct LuminanceData {\n\n\t\t\tfloat m, n, e, s, w;\n\t\t\tfloat ne, nw, se, sw;\n\t\t\tfloat highest, lowest, contrast;\n\n\t\t};\n\n\t\tLuminanceData SampleLuminanceNeighborhood( sampler2D tex2D, vec2 texSize, vec2 uv ) {\n\n\t\t\tLuminanceData l;\n\t\t\tl.m = SampleLuminance( tex2D, uv );\n\t\t\tl.n = SampleLuminance( tex2D, texSize, uv,  0.0,  1.0 );\n\t\t\tl.e = SampleLuminance( tex2D, texSize, uv,  1.0,  0.0 );\n\t\t\tl.s = SampleLuminance( tex2D, texSize, uv,  0.0, -1.0 );\n\t\t\tl.w = SampleLuminance( tex2D, texSize, uv, -1.0,  0.0 );\n\n\t\t\tl.ne = SampleLuminance( tex2D, texSize, uv,  1.0,  1.0 );\n\t\t\tl.nw = SampleLuminance( tex2D, texSize, uv, -1.0,  1.0 );\n\t\t\tl.se = SampleLuminance( tex2D, texSize, uv,  1.0, -1.0 );\n\t\t\tl.sw = SampleLuminance( tex2D, texSize, uv, -1.0, -1.0 );\n\n\t\t\tl.highest = max( max( max( max( l.n, l.e ), l.s ), l.w ), l.m );\n\t\t\tl.lowest = min( min( min( min( l.n, l.e ), l.s ), l.w ), l.m );\n\t\t\tl.contrast = l.highest - l.lowest;\n\t\t\treturn l;\n\n\t\t}\n\n\t\tbool ShouldSkipPixel( LuminanceData l ) {\n\n\t\t\tfloat threshold = max( _ContrastThreshold, _RelativeThreshold * l.highest );\n\t\t\treturn l.contrast < threshold;\n\n\t\t}\n\n\t\tfloat DeterminePixelBlendFactor( LuminanceData l ) {\n\n\t\t\tfloat f = 2.0 * ( l.n + l.e + l.s + l.w );\n\t\t\tf += l.ne + l.nw + l.se + l.sw;\n\t\t\tf *= 1.0 / 12.0;\n\t\t\tf = abs( f - l.m );\n\t\t\tf = clamp( f / l.contrast, 0.0, 1.0 );\n\n\t\t\tfloat blendFactor = smoothstep( 0.0, 1.0, f );\n\t\t\treturn blendFactor * blendFactor * _SubpixelBlending;\n\n\t\t}\n\n\t\tstruct EdgeData {\n\n\t\t\tbool isHorizontal;\n\t\t\tfloat pixelStep;\n\t\t\tfloat oppositeLuminance, gradient;\n\n\t\t};\n\n\t\tEdgeData DetermineEdge( vec2 texSize, LuminanceData l ) {\n\n\t\t\tEdgeData e;\n\t\t\tfloat horizontal =\n\t\t\t\tabs( l.n + l.s - 2.0 * l.m ) * 2.0 +\n\t\t\t\tabs( l.ne + l.se - 2.0 * l.e ) +\n\t\t\t\tabs( l.nw + l.sw - 2.0 * l.w );\n\t\t\tfloat vertical =\n\t\t\t\tabs( l.e + l.w - 2.0 * l.m ) * 2.0 +\n\t\t\t\tabs( l.ne + l.nw - 2.0 * l.n ) +\n\t\t\t\tabs( l.se + l.sw - 2.0 * l.s );\n\t\t\te.isHorizontal = horizontal >= vertical;\n\n\t\t\tfloat pLuminance = e.isHorizontal ? l.n : l.e;\n\t\t\tfloat nLuminance = e.isHorizontal ? l.s : l.w;\n\t\t\tfloat pGradient = abs( pLuminance - l.m );\n\t\t\tfloat nGradient = abs( nLuminance - l.m );\n\n\t\t\te.pixelStep = e.isHorizontal ? texSize.y : texSize.x;\n\n\t\t\tif (pGradient < nGradient) {\n\n\t\t\t\te.pixelStep = -e.pixelStep;\n\t\t\t\te.oppositeLuminance = nLuminance;\n\t\t\t\te.gradient = nGradient;\n\n\t\t\t} else {\n\n\t\t\t\te.oppositeLuminance = pLuminance;\n\t\t\t\te.gradient = pGradient;\n\n\t\t\t}\n\n\t\t\treturn e;\n\n\t\t}\n\n\t\tfloat DetermineEdgeBlendFactor( sampler2D  tex2D, vec2 texSize, LuminanceData l, EdgeData e, vec2 uv ) {\n\n\t\t\tvec2 uvEdge = uv;\n\t\t\tvec2 edgeStep;\n\t\t\tif (e.isHorizontal) {\n\n\t\t\t\tuvEdge.y += e.pixelStep * 0.5;\n\t\t\t\tedgeStep = vec2( texSize.x, 0.0 );\n\n\t\t\t} else {\n\n\t\t\t\tuvEdge.x += e.pixelStep * 0.5;\n\t\t\t\tedgeStep = vec2( 0.0, texSize.y );\n\n\t\t\t}\n\n\t\t\tfloat edgeLuminance = ( l.m + e.oppositeLuminance ) * 0.5;\n\t\t\tfloat gradientThreshold = e.gradient * 0.25;\n\n\t\t\tvec2 puv = uvEdge + edgeStep * edgeSteps[0];\n\t\t\tfloat pLuminanceDelta = SampleLuminance( tex2D, puv ) - edgeLuminance;\n\t\t\tbool pAtEnd = abs( pLuminanceDelta ) >= gradientThreshold;\n\n\t\t\tfor ( int i = 1; i < EDGE_STEP_COUNT && !pAtEnd; i++ ) {\n\n\t\t\t\tpuv += edgeStep * edgeSteps[i];\n\t\t\t\tpLuminanceDelta = SampleLuminance( tex2D, puv ) - edgeLuminance;\n\t\t\t\tpAtEnd = abs( pLuminanceDelta ) >= gradientThreshold;\n\n\t\t\t}\n\n\t\t\tif ( !pAtEnd ) {\n\n\t\t\t\tpuv += edgeStep * EDGE_GUESS;\n\n\t\t\t}\n\n\t\t\tvec2 nuv = uvEdge - edgeStep * edgeSteps[0];\n\t\t\tfloat nLuminanceDelta = SampleLuminance( tex2D, nuv ) - edgeLuminance;\n\t\t\tbool nAtEnd = abs( nLuminanceDelta ) >= gradientThreshold;\n\n\t\t\tfor ( int i = 1; i < EDGE_STEP_COUNT && !nAtEnd; i++ ) {\n\n\t\t\t\tnuv -= edgeStep * edgeSteps[i];\n\t\t\t\tnLuminanceDelta = SampleLuminance( tex2D, nuv ) - edgeLuminance;\n\t\t\t\tnAtEnd = abs( nLuminanceDelta ) >= gradientThreshold;\n\n\t\t\t}\n\n\t\t\tif ( !nAtEnd ) {\n\n\t\t\t\tnuv -= edgeStep * EDGE_GUESS;\n\n\t\t\t}\n\n\t\t\tfloat pDistance, nDistance;\n\t\t\tif ( e.isHorizontal ) {\n\n\t\t\t\tpDistance = puv.x - uv.x;\n\t\t\t\tnDistance = uv.x - nuv.x;\n\n\t\t\t} else {\n\n\t\t\t\tpDistance = puv.y - uv.y;\n\t\t\t\tnDistance = uv.y - nuv.y;\n\n\t\t\t}\n\n\t\t\tfloat shortestDistance;\n\t\t\tbool deltaSign;\n\t\t\tif ( pDistance <= nDistance ) {\n\n\t\t\t\tshortestDistance = pDistance;\n\t\t\t\tdeltaSign = pLuminanceDelta >= 0.0;\n\n\t\t\t} else {\n\n\t\t\t\tshortestDistance = nDistance;\n\t\t\t\tdeltaSign = nLuminanceDelta >= 0.0;\n\n\t\t\t}\n\n\t\t\tif ( deltaSign == ( l.m - edgeLuminance >= 0.0 ) ) {\n\n\t\t\t\treturn 0.0;\n\n\t\t\t}\n\n\t\t\treturn 0.5 - shortestDistance / ( pDistance + nDistance );\n\n\t\t}\n\n\t\tvec4 ApplyFXAA( sampler2D  tex2D, vec2 texSize, vec2 uv ) {\n\n\t\t\tLuminanceData luminance = SampleLuminanceNeighborhood( tex2D, texSize, uv );\n\t\t\tif ( ShouldSkipPixel( luminance ) ) {\n\n\t\t\t\treturn Sample( tex2D, uv );\n\n\t\t\t}\n\n\t\t\tfloat pixelBlend = DeterminePixelBlendFactor( luminance );\n\t\t\tEdgeData edge = DetermineEdge( texSize, luminance );\n\t\t\tfloat edgeBlend = DetermineEdgeBlendFactor( tex2D, texSize, luminance, edge, uv );\n\t\t\tfloat finalBlend = max( pixelBlend, edgeBlend );\n\n\t\t\tif (edge.isHorizontal) {\n\n\t\t\t\tuv.y += edge.pixelStep * finalBlend;\n\n\t\t\t} else {\n\n\t\t\t\tuv.x += edge.pixelStep * finalBlend;\n\n\t\t\t}\n\n\t\t\treturn Sample( tex2D, uv );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = ApplyFXAA( tDiffuse, resolution.xy, vUv );\n\n\t\t}"},Qy={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor = sRGBTransferOETF( tex );\n\n\t\t}"};function Zy(e){const t=new Map,n=new Map,i=e.clone();return Jy(e,i,function(e,i){t.set(i,e),n.set(e,i)}),i.traverse(function(e){if(!e.isSkinnedMesh)return;const i=e,r=t.get(e),s=r.skeleton.bones;i.skeleton=r.skeleton.clone(),i.bindMatrix.copy(r.bindMatrix),i.skeleton.bones=s.map(function(e){return n.get(e)}),i.bind(i.skeleton,i.bindMatrix)}),i}function Jy(e,t,n){n(e,t);for(let i=0;i<e.children.length;i++)Jy(e.children[i],t.children[i],n)}class ex{constructor(e,t,n,i,r=null,s=null){this.controller=t,this.handModel=e,this.bones=[],null===r&&(r=new Kv).setPath(n||"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/"),r.load(`${i}.glb`,e=>{const t=e.scene.children[0];this.handModel.add(t);const n=t.getObjectByProperty("type","SkinnedMesh");n.frustumCulled=!1,n.castShadow=!0,n.receiveShadow=!0;["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"].forEach(e=>{const n=t.getObjectByName(e);void 0!==n?n.jointName=e:console.warn(`Couldn't find ${e} in ${i} hand mesh`),this.bones.push(n)}),s&&s(t)})}updateMesh(){const e=this.controller.joints;for(let t=0;t<this.bones.length;t++){const n=this.bones[t];if(n){const t=e[n.jointName];if(t.visible){const e=t.position;n.position.copy(e),n.quaternion.copy(t.quaternion)}}}}}class tx{static createButton(e,t={}){const n=document.createElement("button");function i(){n.style.display="",n.style.cursor="auto",n.style.left="calc(50% - 75px)",n.style.width="150px",n.onmouseenter=null,n.onmouseleave=null,n.onclick=null}function r(e){e.style.position="absolute",e.style.bottom="20px",e.style.padding="12px 6px",e.style.border="1px solid #fff",e.style.borderRadius="4px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 13px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return n.id="VRButton",n.style.display="none",r(n),navigator.xr.isSessionSupported("immersive-vr").then(function(r){r?function(){let i=null;async function r(t){t.addEventListener("end",s),await e.xr.setSession(t),n.textContent="EXIT VR",i=t}function s(){i.removeEventListener("end",s),n.textContent="ENTER VR",i=null}n.style.display="",n.style.cursor="pointer",n.style.left="calc(50% - 50px)",n.style.width="100px",n.textContent="ENTER VR";const a={...t,optionalFeatures:["local-floor","bounded-floor","layers",...t.optionalFeatures||[]]};n.onmouseenter=function(){n.style.opacity="1.0"},n.onmouseleave=function(){n.style.opacity="0.5"},n.onclick=function(){null===i?navigator.xr.requestSession("immersive-vr",a).then(r):(i.end(),void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch(e=>{console.warn(e)}))},void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch(e=>{console.warn(e)})}():(i(),n.textContent="VR NOT SUPPORTED"),r&&tx.xrSessionIsGranted&&n.click()}).catch(function(e){i(),console.warn("Exception when trying to call xr.isSessionSupported",e),n.textContent="VR NOT ALLOWED"}),n;{const e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",r(e),e}}static registerSessionGrantedListener(){if("undefined"!=typeof navigator&&"xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",()=>{tx.xrSessionIsGranted=!0})}}}tx.xrSessionIsGranted=!1,tx.registerSessionGrantedListener();const nx={ComponentState:Object.freeze({DEFAULT:"default",TOUCHED:"touched",PRESSED:"pressed"}),ComponentProperty:Object.freeze({BUTTON:"button",X_AXIS:"xAxis",Y_AXIS:"yAxis",STATE:"state"}),ComponentType:Object.freeze({TRIGGER:"trigger",SQUEEZE:"squeeze",TOUCHPAD:"touchpad",THUMBSTICK:"thumbstick",BUTTON:"button"}),ButtonTouchThreshold:.05,AxisTouchThreshold:.1,VisualResponseProperty:Object.freeze({TRANSFORM:"transform",VISIBILITY:"visibility"})};async function ix(e){const t=await fetch(e);if(t.ok)return t.json();throw new Error(t.statusText)}async function rx(e,t,n=null,i=!0){if(!e)throw new Error("No xrInputSource supplied");if(!t)throw new Error("No basePath supplied");const r=await async function(e){if(!e)throw new Error("No basePath supplied");return await ix(`${e}/profilesList.json`)}(t);let s;if(e.profiles.some(e=>{const n=r[e];return n&&(s={profileId:e,profilePath:`${t}/${n.path}`,deprecated:!!n.deprecated}),!!s}),!s){if(!n)throw new Error("No matching profile name found");const e=r[n];if(!e)throw new Error(`No matching profile name found and default profile "${n}" missing.`);s={profileId:n,profilePath:`${t}/${e.path}`,deprecated:!!e.deprecated}}const a=await ix(s.profilePath);let o;if(i){let t;if(t="any"===e.handedness?a.layouts[Object.keys(a.layouts)[0]]:a.layouts[e.handedness],!t)throw new Error(`No matching handedness, ${e.handedness}, in profile ${s.profileId}`);t.assetPath&&(o=s.profilePath.replace("profile.json",t.assetPath))}return{profile:a,assetPath:o}}const sx={xAxis:0,yAxis:0,button:0,state:nx.ComponentState.DEFAULT};class ax{constructor(e){this.componentProperty=e.componentProperty,this.states=e.states,this.valueNodeName=e.valueNodeName,this.valueNodeProperty=e.valueNodeProperty,this.valueNodeProperty===nx.VisualResponseProperty.TRANSFORM&&(this.minNodeName=e.minNodeName,this.maxNodeName=e.maxNodeName),this.value=0,this.updateFromComponent(sx)}updateFromComponent({xAxis:e,yAxis:t,button:n,state:i}){const{normalizedXAxis:r,normalizedYAxis:s}=function(e=0,t=0){let n=e,i=t;if(Math.sqrt(e*e+t*t)>1){const r=Math.atan2(t,e);n=Math.cos(r),i=Math.sin(r)}return{normalizedXAxis:.5*n+.5,normalizedYAxis:.5*i+.5}}(e,t);switch(this.componentProperty){case nx.ComponentProperty.X_AXIS:this.value=this.states.includes(i)?r:.5;break;case nx.ComponentProperty.Y_AXIS:this.value=this.states.includes(i)?s:.5;break;case nx.ComponentProperty.BUTTON:this.value=this.states.includes(i)?n:0;break;case nx.ComponentProperty.STATE:this.valueNodeProperty===nx.VisualResponseProperty.VISIBILITY?this.value=this.states.includes(i):this.value=this.states.includes(i)?1:0;break;default:throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`)}}}class ox{constructor(e,t){if(!(e&&t&&t.visualResponses&&t.gamepadIndices&&0!==Object.keys(t.gamepadIndices).length))throw new Error("Invalid arguments supplied");this.id=e,this.type=t.type,this.rootNodeName=t.rootNodeName,this.touchPointNodeName=t.touchPointNodeName,this.visualResponses={},Object.keys(t.visualResponses).forEach(e=>{const n=new ax(t.visualResponses[e]);this.visualResponses[e]=n}),this.gamepadIndices=Object.assign({},t.gamepadIndices),this.values={state:nx.ComponentState.DEFAULT,button:void 0!==this.gamepadIndices.button?0:void 0,xAxis:void 0!==this.gamepadIndices.xAxis?0:void 0,yAxis:void 0!==this.gamepadIndices.yAxis?0:void 0}}get data(){return{id:this.id,...this.values}}updateFromGamepad(e){if(this.values.state=nx.ComponentState.DEFAULT,void 0!==this.gamepadIndices.button&&e.buttons.length>this.gamepadIndices.button){const t=e.buttons[this.gamepadIndices.button];this.values.button=t.value,this.values.button=this.values.button<0?0:this.values.button,this.values.button=this.values.button>1?1:this.values.button,t.pressed||1===this.values.button?this.values.state=nx.ComponentState.PRESSED:(t.touched||this.values.button>nx.ButtonTouchThreshold)&&(this.values.state=nx.ComponentState.TOUCHED)}void 0!==this.gamepadIndices.xAxis&&e.axes.length>this.gamepadIndices.xAxis&&(this.values.xAxis=e.axes[this.gamepadIndices.xAxis],this.values.xAxis=this.values.xAxis<-1?-1:this.values.xAxis,this.values.xAxis=this.values.xAxis>1?1:this.values.xAxis,this.values.state===nx.ComponentState.DEFAULT&&Math.abs(this.values.xAxis)>nx.AxisTouchThreshold&&(this.values.state=nx.ComponentState.TOUCHED)),void 0!==this.gamepadIndices.yAxis&&e.axes.length>this.gamepadIndices.yAxis&&(this.values.yAxis=e.axes[this.gamepadIndices.yAxis],this.values.yAxis=this.values.yAxis<-1?-1:this.values.yAxis,this.values.yAxis=this.values.yAxis>1?1:this.values.yAxis,this.values.state===nx.ComponentState.DEFAULT&&Math.abs(this.values.yAxis)>nx.AxisTouchThreshold&&(this.values.state=nx.ComponentState.TOUCHED)),Object.values(this.visualResponses).forEach(e=>{e.updateFromComponent(this.values)})}}class lx{constructor(e,t,n){if(!e)throw new Error("No xrInputSource supplied");if(!t)throw new Error("No profile supplied");this.xrInputSource=e,this.assetUrl=n,this.id=t.profileId,this.layoutDescription=t.layouts[e.handedness],this.components={},Object.keys(this.layoutDescription.components).forEach(e=>{const t=this.layoutDescription.components[e];this.components[e]=new ox(e,t)}),this.updateFromGamepad()}get gripSpace(){return this.xrInputSource.gripSpace}get targetRaySpace(){return this.xrInputSource.targetRaySpace}get data(){const e=[];return Object.values(this.components).forEach(t=>{e.push(t.data)}),e}updateFromGamepad(){Object.values(this.components).forEach(e=>{e.updateFromGamepad(this.xrInputSource.gamepad)})}}class cx extends sr{constructor(){super(),this.motionController=null,this.envMap=null}setEnvironmentMap(e){return this.envMap==e||(this.envMap=e,this.traverse(e=>{e.isMesh&&(e.material.envMap=this.envMap,e.material.needsUpdate=!0)})),this}updateMatrixWorld(e){super.updateMatrixWorld(e),this.motionController&&(this.motionController.updateFromGamepad(),Object.values(this.motionController.components).forEach(e=>{Object.values(e.visualResponses).forEach(e=>{const{valueNode:t,minNode:n,maxNode:i,value:r,valueNodeProperty:s}=e;t&&(s===nx.VisualResponseProperty.VISIBILITY?t.visible=r:s===nx.VisualResponseProperty.TRANSFORM&&(t.quaternion.slerpQuaternions(n.quaternion,i.quaternion,r),t.position.lerpVectors(n.position,i.position,r)))})}))}}function ux(e,t){!function(e,t){Object.values(e.components).forEach(e=>{const{type:n,touchPointNodeName:i,visualResponses:r}=e;if(n===nx.ComponentType.TOUCHPAD)if(e.touchPointNode=t.getObjectByName(i),e.touchPointNode){const t=new Zl(.001),n=new Rr({color:255}),i=new ds(t,n);e.touchPointNode.add(i)}else console.warn(`Could not find touch dot, ${e.touchPointNodeName}, in touchpad component ${e.id}`);Object.values(r).forEach(e=>{const{valueNodeName:n,minNodeName:i,maxNodeName:r,valueNodeProperty:s}=e;if(s===nx.VisualResponseProperty.TRANSFORM){if(e.minNode=t.getObjectByName(i),e.maxNode=t.getObjectByName(r),!e.minNode)return void console.warn(`Could not find ${i} in the model`);if(!e.maxNode)return void console.warn(`Could not find ${r} in the model`)}e.valueNode=t.getObjectByName(n),e.valueNode||console.warn(`Could not find ${n} in the model`)})})}(e.motionController,t),e.envMap&&t.traverse(t=>{t.isMesh&&(t.material.envMap=e.envMap,t.material.needsUpdate=!0)}),e.add(t)}class hx{constructor(e=null,t=null){this.gltfLoader=e,this.path="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles",this._assetCache={},this.onLoad=t,this.gltfLoader||(this.gltfLoader=new Kv)}setPath(e){return this.path=e,this}createControllerModel(e){const t=new cx;let n=null;return e.addEventListener("connected",e=>{const i=e.data;"tracked-pointer"===i.targetRayMode&&i.gamepad&&!i.hand&&rx(i,this.path,"generic-trigger").then(({profile:e,assetPath:r})=>{t.motionController=new lx(i,e,r);const s=this._assetCache[t.motionController.assetUrl];if(s)n=s.scene.clone(),ux(t,n),this.onLoad&&this.onLoad(n);else{if(!this.gltfLoader)throw new Error("GLTFLoader not set.");this.gltfLoader.setPath(""),this.gltfLoader.load(t.motionController.assetUrl,e=>{this._assetCache[t.motionController.assetUrl]=e,n=e.scene.clone(),ux(t,n),this.onLoad&&this.onLoad(n)},null,()=>{throw new Error(`Asset ${t.motionController.assetUrl} missing or malformed.`)})}}).catch(e=>{console.warn(e)})}),e.addEventListener("disconnected",()=>{t.motionController=null,t.remove(n),n=null}),t}}const dx=new Li,px=new En;class mx{constructor(e,t,n,i,r){let s;this.controller=t,this.handModel=e,this.envMap=null,r&&r.primitive&&"sphere"!==r.primitive?"box"===r.primitive&&(s=new ms(1,1,1)):s=new Zl(1,10,10);const a=new lc;this.handMesh=new Ea(s,a,30),this.handMesh.frustumCulled=!1,this.handMesh.instanceMatrix.setUsage(sn),this.handMesh.castShadow=!0,this.handMesh.receiveShadow=!0,this.handModel.add(this.handMesh),this.joints=["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]}updateMesh(){const e=this.controller.joints;let t=0;for(let n=0;n<this.joints.length;n++){const i=e[this.joints[n]];i.visible&&(px.setScalar(i.jointRadius||.008),dx.compose(i.position,i.quaternion,px),this.handMesh.setMatrixAt(n,dx),t++)}this.handMesh.count=t,this.handMesh.instanceMatrix.needsUpdate=!0}}class fx extends sr{constructor(e){super(),this.controller=e,this.motionController=null,this.envMap=null,this.mesh=null}updateMatrixWorld(e){super.updateMatrixWorld(e),this.motionController&&this.motionController.updateMesh()}}class gx{constructor(e=null,t=null){this.gltfLoader=e,this.path=null,this.onLoad=t}setPath(e){return this.path=e,this}createHandModel(e,t){const n=new fx(e);return e.addEventListener("connected",i=>{const r=i.data;r.hand&&!n.motionController&&(n.xrInputSource=r,void 0===t||"spheres"===t?n.motionController=new mx(n,e,this.path,r.handedness,{primitive:"sphere"}):"boxes"===t?n.motionController=new mx(n,e,this.path,r.handedness,{primitive:"box"}):"mesh"===t&&(n.motionController=new ex(n,e,this.path,r.handedness,this.gltfLoader,this.onLoad))),e.visible=!0}),e.addEventListener("disconnected",()=>{e.visible=!1}),n}}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const vx=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],bx=new WeakMap;class yx{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=!0===e.object.isSkinnedMesh,this.refreshUniforms=vx,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}needsVelocity(e){const t=e.getMRT();return null!==t&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(void 0===t){const{geometry:n,material:i,object:r}=e;if(t={material:this.getMaterialData(i),geometry:{id:n.id,attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),null!==e.bundle&&(t.version=e.bundle.version),t.material.transmission>0){const{width:n,height:i}=e.context;t.bufferWidth=n,t.bufferHeight=i}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const i=e[n];t[n]={version:i.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return null!==e.renderer.overrideNodes.modelViewMatrix||null!==e.renderer.overrideNodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const i=e[n];null!=i&&("object"==typeof i&&void 0!==i.clone?!0===i.isTexture?t[n]={id:i.id,version:i.version}:t[n]=i.clone():t[n]=i)}return t}equals(e,t){const{object:n,material:i,geometry:r}=e,s=this.getRenderObjectData(e);if(!0!==s.worldMatrix.equals(n.matrixWorld))return s.worldMatrix.copy(n.matrixWorld),!1;const a=s.material;for(const f in a){const e=a[f],t=i[f];if(void 0!==e.equals){if(!1===e.equals(t))return e.copy(t),!1}else if(!0===t.isTexture){if(e.id!==t.id||e.version!==t.version)return e.id=t.id,e.version=t.version,!1}else if(e!==t)return a[f]=t,!1}if(a.transmission>0){const{width:t,height:n}=e.context;if(s.bufferWidth!==t||s.bufferHeight!==n)return s.bufferWidth=t,s.bufferHeight=n,!1}const o=s.geometry,l=r.attributes,c=o.attributes,u=Object.keys(c),h=Object.keys(l);if(o.id!==r.id)return o.id=r.id,!1;if(u.length!==h.length)return s.geometry.attributes=this.getAttributesData(l),!1;for(const f of u){const e=c[f],t=l[f];if(void 0===t)return delete c[f],!1;if(e.version!==t.version)return e.version=t.version,!1}const d=r.index,p=o.indexVersion,m=d?d.version:null;if(p!==m)return o.indexVersion=m,!1;if(o.drawRange.start!==r.drawRange.start||o.drawRange.count!==r.drawRange.count)return o.drawRange.start=r.drawRange.start,o.drawRange.count=r.drawRange.count,!1;if(s.morphTargetInfluences){let e=!1;for(let t=0;t<s.morphTargetInfluences.length;t++)s.morphTargetInfluences[t]!==n.morphTargetInfluences[t]&&(e=!0);if(e)return!0}if(s.lights)for(let f=0;f<t.length;f++)if(s.lights[f].map!==t[f].map)return!1;return s.center&&!1===s.center.equals(n.center)?(s.center.copy(n.center),!0):(null!==e.bundle&&(s.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const n of e)!0===n.isSpotLight&&null!==n.map&&t.push({map:n.map.version});return t}getLights(e,t){if(bx.has(e)){const n=bx.get(e);if(n.renderId===t)return n.lightsData}const n=this.getLightsData(e.getLights());return bx.set(e,{renderId:t,lightsData:n}),n}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const i=!0===e.object.static,r=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(i||r)return!1;const s=this.getLights(e.lightsNode,n);return!0!==this.equals(e,s)}}function xx(e,t=0){let n=3735928559^t,i=1103547991^t;if(e instanceof Array)for(let r,s=0;s<e.length;s++)r=e[s],n=Math.imul(n^r,2654435761),i=Math.imul(i^r,1597334677);else for(let r,s=0;s<e.length;s++)r=e.charCodeAt(s),n=Math.imul(n^r,2654435761),i=Math.imul(i^r,1597334677);return n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),4294967296*(2097151&i)+(n>>>0)}const _x=e=>xx(e),Tx=e=>xx(e),Sx=(...e)=>xx(e);function wx(e,t=!1){const n=[];!0===e.isNode&&n.push(e.id);for(const{property:i,childNode:r}of Mx(e))n.push(xx(i.slice(0,-4)),r.getCacheKey(t));return xx(n)}function*Mx(e,t=!1){for(const n of Object.getOwnPropertyNames(e)){if(!0===n.startsWith("_"))continue;const i=e[n];if(!0===Array.isArray(i))for(let e=0;e<i.length;e++){const r=i[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:n,index:e,childNode:r})}else if(i&&!0===i.isNode)yield{property:n,childNode:i};else if(i&&Object.getPrototypeOf(i)===Object.prototype)for(const e in i){if(!0===e.startsWith("_"))continue;const r=i[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:n,index:e,childNode:r})}}}const Ex=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Ax=new WeakMap;function Rx(e){return Ex.get(e)}function Cx(e){if(/[iu]?vec\d/.test(e))return e.startsWith("ivec")?Int32Array:e.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(e))return Float32Array;if(/float/.test(e))return Float32Array;if(/uint/.test(e))return Uint32Array;if(/int/.test(e))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${e}`)}function Nx(e){return/float|int|uint/.test(e)?1:/vec2/.test(e)?2:/vec3/.test(e)?3:/vec4/.test(e)||/mat2/.test(e)?4:/mat3/.test(e)?9:/mat4/.test(e)?16:void console.error("THREE.TSL: Unsupported type:",e)}function Px(e){return/float|int|uint/.test(e)?1:/vec2/.test(e)?2:/vec3/.test(e)?3:/vec4/.test(e)||/mat2/.test(e)?4:/mat3/.test(e)?12:/mat4/.test(e)?16:void console.error("THREE.TSL: Unsupported type:",e)}function Lx(e){return/float|int|uint/.test(e)?4:/vec2/.test(e)?8:/vec3/.test(e)||/vec4/.test(e)?16:/mat2/.test(e)?8:/mat3/.test(e)?48:/mat4/.test(e)?64:void console.error("THREE.TSL: Unsupported type:",e)}function Ix(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix2?"mat2":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function Dx(e,...t){const n=e?e.slice(-4):void 0;return 1===t.length&&("vec2"===n?t=[t[0],t[0]]:"vec3"===n?t=[t[0],t[0],t[0]]:"vec4"===n&&(t=[t[0],t[0],t[0],t[0]])),"color"===e?new wr(...t):"vec2"===n?new wn(...t):"vec3"===n?new En(...t):"vec4"===n?new Zn(...t):"mat2"===n?new Th(...t):"mat3"===n?new Cn(...t):"mat4"===n?new Li(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?Ox(t[0]):null}function Fx(e){let t=Ax.get(e);return void 0===t&&(t={},Ax.set(e,t)),t}function Ux(e){let t="";const n=new Uint8Array(e);for(let i=0;i<n.length;i++)t+=String.fromCharCode(n[i]);return btoa(t)}function Ox(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0)).buffer}var Bx=Object.freeze({__proto__:null,arrayBufferToBase64:Ux,base64ToArrayBuffer:Ox,getByteBoundaryFromType:Lx,getCacheKey:wx,getDataFromObject:Fx,getLengthFromType:Nx,getMemoryLengthFromType:Px,getNodeChildren:Mx,getTypeFromLength:Rx,getTypedArrayFromType:Cx,getValueFromType:Dx,getValueType:Ix,hash:Sx,hashArray:Tx,hashString:_x});const kx={VERTEX:"vertex",FRAGMENT:"fragment"},Vx={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},zx={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Gx={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},Hx=["fragment","vertex"],Wx=["setup","analyze","generate"],jx=[...Hx,"compute"],Xx=["x","y","z","w"],qx={analyze:"setup",generate:"analyze"};let $x=0,Yx=class extends dn{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Vx.NONE,this.updateBeforeType=Vx.NONE,this.updateAfterType=Vx.NONE,this.uuid=Sn.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:$x++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this),this}onFrameUpdate(e){return this.onUpdate(e,Vx.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Vx.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Vx.OBJECT)}onReference(e){return this.updateReference=e.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Mx(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=Sx(wx(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}getArrayCount(){return null}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren())t["node"+n++]=i;return t.outputNode||null}analyze(e,t=null){const n=e.increaseUsage(this);if(!0===this.parents){const n=e.getDataFromNode(this,"any");n.stages=n.stages||{},n.stages[e.shaderStage]=n.stages[e.shaderStage]||[],n.stages[e.shaderStage].push(t)}if(1===n){const t=e.getNodeProperties(this);for(const n of Object.values(t))n&&!0===n.isNode&&n.build(e,this)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&!0===n.isNode)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);const i=e.getDataFromNode(this);i.buildStages=i.buildStages||{},i.buildStages[e.buildStage]=!0;const r=qx[e.buildStage];if(r&&!0!==i.buildStages[r]){const t=e.getBuildStage();e.setBuildStage(r),this.build(e),e.setBuildStage(t)}e.addNode(this),e.addChain(this);let s=null;const a=e.getBuildStage();if("setup"===a){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){t.initialized=!0,t.outputNode=this.setup(e)||t.outputNode||null;for(const n of Object.values(t))if(n&&!0===n.isNode){if(!0===n.parents){const t=e.getNodeProperties(n);t.parents=t.parents||[],t.parents.push(this)}n.build(e)}}s=t.outputNode}else if("analyze"===a)this.analyze(e,t);else if("generate"===a){if(1===this.generate.length){const n=this.getNodeType(e),i=e.getDataFromNode(this);s=i.snippet,void 0===s?void 0===i.generated?(i.generated=!0,s=this.generate(e)||"",i.snippet=s):(console.warn("THREE.Node: Recursion detected.",this),s="/* Recursion detected. */"):void 0!==i.flowCodes&&void 0!==e.context.nodeBlock&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),s=e.format(s,n,t)}else s=this.generate(e,t)||"";""===s&&null!==t&&"void"!==t&&"OutputType"!==t&&(console.error(`THREE.TSL: Invalid generated code, expected a "${t}".`),s=e.generateConst(t))}return e.removeChain(this),e.addSequentialNode(this),s}getSerializeChildren(){return Mx(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:i,index:r,childNode:s}of t)void 0!==r?(void 0===n[i]&&(n[i]=Number.isInteger(r)?[]:{}),n[i][r]=s.toJSON(e.meta).uuid):n[i]=s.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const i=[];for(const r of e.inputNodes[n])i.push(t[r]);this[n]=i}else if("object"==typeof e.inputNodes[n]){const i={};for(const r in e.inputNodes[n]){const s=e.inputNodes[n][r];i[r]=t[s]}this[n]=i}else{const i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){const{uuid:t,type:n}=this,i=void 0===e||"string"==typeof e;i&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];function s(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(void 0===r&&(r={uuid:t,type:n,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},!0!==i&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta),i){const t=s(e.textures),n=s(e.images),i=s(e.nodes);t.length>0&&(r.textures=t),n.length>0&&(r.images=n),i.length>0&&(r.nodes=i)}return r}};class Kx extends Yx{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e);return`${this.node.build(e)}[ ${this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint")} ]`}}class Qx extends Yx{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const i of this.convertTo.split("|"))null!==n&&e.getTypeLength(t)!==e.getTypeLength(i)||(n=i);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,i=this.getNodeType(e),r=n.build(e,i);return e.format(r,i,t)}}class Zx extends Yx{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const n=e.getVectorType(this.getNodeType(e,t)),i=e.getDataFromNode(this);if(void 0!==i.propertyName)return e.format(i.propertyName,n,t);if("void"!==n&&"void"!==t&&this.hasDependencies(e)){const r=super.build(e,n),s=e.getVarFromNode(this,null,n),a=e.getPropertyName(s);return e.addLineFlowCode(`${a} = ${r}`,this),i.snippet=r,i.propertyName=a,e.format(i.propertyName,n,t)}}return super.build(e,t)}}class Jx extends Zx{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),i=e.getTypeLength(n),r=this.nodes,s=e.getComponentType(n),a=[];let o=0;for(const c of r){if(o>=i){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${n}()' type.`);break}let t,r=c.getNodeType(e),l=e.getTypeLength(r);o+l>i&&(console.error(`THREE.TSL: Length of '${n}()' data exceeds maximum length of output type.`),l=i-o,r=e.getTypeFromLength(l)),o+=l,t=c.build(e,r);if(e.getComponentType(r)!==s){const n=e.getTypeFromLength(l,s);t=e.format(t,r,n)}a.push(t)}const l=`${e.getType(n)}( ${a.join(", ")} )`;return e.format(l,n,t)}}const e_=Xx.join("");class t_ extends Yx{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Xx.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}getScope(){return this.node.getScope()}generate(e,t){const n=this.node,i=e.getTypeLength(n.getNodeType(e));let r=null;if(i>1){let s=null;this.getVectorLength()>=i&&(s=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const a=n.build(e,s);r=this.components.length===i&&this.components===e_.slice(0,this.components.length)?e.format(a,s,t):e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else r=n.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class n_ extends Zx{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:i}=this,r=this.getNodeType(e),s=e.getComponentType(i.getNodeType(e)),a=e.getTypeFromLength(n.length,s),o=i.build(e,a),l=t.build(e,r),c=e.getTypeLength(r),u=[];for(let h=0;h<c;h++){const e=Xx[h];e===n[0]?(u.push(o),h+=n.length-1):u.push(l+"."+e)}return`${e.getType(r)}( ${u.join(", ")} )`}}class i_ extends Zx{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,i=this.getNodeType(e),r=n.build(e),s=e.getVarFromNode(this),a=e.getPropertyName(s);e.addLineFlowCode(a+" = "+r,this);const o=e.getTypeLength(i),l=[];let c=0;for(let u=0;u<o;u++){const e=Xx[u];e===t[c]?(l.push("1.0 - "+a+"."+e),c++):l.push(a+"."+e)}return`${e.getType(i)}( ${l.join(", ")} )`}}class r_ extends Yx{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?Ix(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Ix(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=Ux(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Dx(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const s_=/float|u?int/;class a_ extends r_{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return s_.test(n)&&s_.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),n,t)}}class o_ extends Yx{static get type(){return"MemberNode"}constructor(e,t){super(),this.structNode=e,this.property=t,this.isMemberNode=!0}hasMember(e){return(!this.structNode.isMemberNode||!1!==this.structNode.hasMember(e))&&"void"!==this.structNode.getMemberType(e,this.property)}getNodeType(e){return!1===this.hasMember(e)?"float":this.structNode.getMemberType(e,this.property)}getMemberType(e,t){if(!1===this.hasMember(e))return"float";const n=this.getNodeType(e);return e.getStructTypeNode(n).getMemberType(e,t)}generate(e){if(!1===this.hasMember(e)){console.warn(`THREE.TSL: Member "${this.property}" does not exist in struct.`);const t=this.getNodeType(e);return e.generateConst(t)}return this.structNode.build(e)+"."+this.property}}let l_=null;const c_=new Map;function u_(e,t){if(c_.has(e))console.warn(`THREE.TSL: Redefinition of method chaining '${e}'.`);else{if("function"!=typeof t)throw new Error(`THREE.TSL: Node element ${e} is not a function`);c_.set(e,t),"assign"!==e&&(Yx.prototype[e]=function(...e){return this.isStackNode?this.add(t(...e)):t(this,...e)},Yx.prototype[e+"Assign"]=function(...e){return this.isStackNode?this.assign(e[0],t(...e)):this.assign(t(this,...e))})}}const h_=e=>(e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"))(e).split("").sort().join("");Yx.prototype.assign=function(...e){if(!0!==this.isStackNode)return null!==l_?l_.assign(this,...e):console.error("THREE.TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const t=c_.get("assign");return this.add(t(...e))}},Yx.prototype.toVarIntent=function(){return this},Yx.prototype.get=function(e){return new o_(this,e)};const d_={};function p_(e,t,n){d_[e]=d_[t]=d_[n]={get(){this._cache=this._cache||{};let t=this._cache[e];return void 0===t&&(t=new t_(this,e),this._cache[e]=t),t},set(t){this[e].assign(k_(t))}};const i=e.toUpperCase(),r=t.toUpperCase(),s=n.toUpperCase();Yx.prototype["set"+i]=Yx.prototype["set"+r]=Yx.prototype["set"+s]=function(t){const n=h_(e);return new n_(this,n,k_(t))},Yx.prototype["flip"+i]=Yx.prototype["flip"+r]=Yx.prototype["flip"+s]=function(){const t=h_(e);return new i_(this,t)}}const m_=["x","y","z","w"],f_=["r","g","b","a"],g_=["s","t","p","q"];for(let E3=0;E3<4;E3++){let e=m_[E3],t=f_[E3],n=g_[E3];p_(e,t,n);for(let i=0;i<4;i++){e=m_[E3]+m_[i],t=f_[E3]+f_[i],n=g_[E3]+g_[i],p_(e,t,n);for(let r=0;r<4;r++){e=m_[E3]+m_[i]+m_[r],t=f_[E3]+f_[i]+f_[r],n=g_[E3]+g_[i]+g_[r],p_(e,t,n);for(let s=0;s<4;s++)e=m_[E3]+m_[i]+m_[r]+m_[s],t=f_[E3]+f_[i]+f_[r]+f_[s],n=g_[E3]+g_[i]+g_[r]+g_[s],p_(e,t,n)}}}for(let E3=0;E3<32;E3++)d_[E3]={get(){this._cache=this._cache||{};let e=this._cache[E3];return void 0===e&&(e=new Kx(this,new a_(E3,"uint")),this._cache[E3]=e),e},set(e){this[E3].assign(k_(e))}};Object.defineProperties(Yx.prototype,d_);const v_=new WeakMap,b_=function(e,t=null){for(const n in e)e[n]=k_(e[n],t);return e},y_=function(e,t=null){const n=e.length;for(let i=0;i<n;i++)e[i]=k_(e[i],t);return e},x_=function(e,t=null,n=null,i=null){function r(e){return null!==i?(e=k_(Object.assign(e,i)),!0===i.intent&&(e=e.toVarIntent())):e=k_(e),e}let s,a,o,l=t;function c(t){let n;return n=l?/[a-z]/i.test(l)?l+"()":l:e.type,void 0!==a&&t.length<a?(console.error(`THREE.TSL: "${n}" parameter length is less than minimum required.`),t.concat(new Array(a-t.length).fill(0))):void 0!==o&&t.length>o?(console.error(`THREE.TSL: "${n}" parameter length exceeds limit.`),t.slice(0,o)):t}return null===t?s=(...t)=>r(new e(...G_(c(t)))):null!==n?(n=k_(n),s=(...i)=>r(new e(t,...G_(c(i)),n))):s=(...n)=>r(new e(t,...G_(c(n)))),s.setParameterLength=(...e)=>(1===e.length?a=o=e[0]:2===e.length&&([a,o]=e),s),s.setName=e=>(l=e,s),s},__=function(e,...t){return k_(new e(...G_(t)))};class T_ extends Yx{constructor(e,t){super(),this.shaderNode=e,this.rawInputs=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,rawInputs:n}=this,i=e.getNodeProperties(t),r=e.getClosestSubBuild(t.subBuilds)||"",s=r||"default";if(i[s])return i[s];const a=e.subBuildFn;e.subBuildFn=r;let o=null;if(t.layout){let i=v_.get(e.constructor);void 0===i&&(i=new WeakMap,v_.set(e.constructor,i));let r=i.get(t);void 0===r&&(r=k_(e.buildFunctionNode(t)),i.set(t,r)),e.addInclude(r);const s=n?function(e){let t;z_(e);t=e[0]&&(e[0].isNode||Object.getPrototypeOf(e[0])!==Object.prototype)?[...e]:e[0];return t}(n):null;o=k_(r.call(s))}else{const i=new Proxy(e,{get:(e,t,n)=>{let i;return i=Symbol.iterator===t?function*(){yield}:Reflect.get(e,t,n),i}}),r=n?function(e){let t=0;return z_(e),new Proxy(e,{get:(n,i,r)=>{let s;if("length"===i)return s=e.length,s;if(Symbol.iterator===i)s=function*(){for(const t of e)yield k_(t)};else{if(e.length>0)if(Object.getPrototypeOf(e[0])===Object.prototype){const n=e[0];s=void 0===n[i]?n[t++]:Reflect.get(n,i,r)}else e[0]instanceof Yx&&(s=void 0===e[i]?e[t++]:Reflect.get(e,i,r));else s=Reflect.get(n,i,r);s=k_(s)}return s}})}(n):null,s=Array.isArray(n)?n.length>0:null!==n,a=t.jsFunc,l=s||a.length>1?a(r,i):a(i);o=k_(l)}return e.subBuildFn=a,t.once&&(i[s]=o),o}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),n=e.getSubBuildOutput(this);return t[n]=t[n]||this.setupOutput(e),t[n].subBuild=e.getClosestSubBuild(this),t[n]}build(e,t=null){let n=null;const i=e.getBuildStage(),r=e.getNodeProperties(this),s=e.getSubBuildOutput(this),a=this.getOutputNode(e);if("setup"===i){const t=e.getSubBuildProperty("initialized",this);if(!0!==r[t]&&(r[t]=!0,r[s]=this.getOutputNode(e),r[s].build(e),this.shaderNode.subBuilds))for(const n of e.chaining){const t=e.getDataFromNode(n,"any");t.subBuilds=t.subBuilds||new Set;for(const e of this.shaderNode.subBuilds)t.subBuilds.add(e)}n=r[s]}else"analyze"===i?a.build(e,t):"generate"===i&&(n=a.build(e,t)||"");return n}}class S_ extends Yx{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return k_(new T_(this,e))}setup(){return this.call()}}const w_=[!1,!0],M_=[0,1,2,3],E_=[-1,-2],A_=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],R_=new Map;for(const E3 of w_)R_.set(E3,new a_(E3));const C_=new Map;for(const E3 of M_)C_.set(E3,new a_(E3,"uint"));const N_=new Map([...C_].map(e=>new a_(e.value,"int")));for(const E3 of E_)N_.set(E3,new a_(E3,"int"));const P_=new Map([...N_].map(e=>new a_(e.value)));for(const E3 of A_)P_.set(E3,new a_(E3));for(const E3 of A_)P_.set(-E3,new a_(-E3));const L_={bool:R_,uint:C_,ints:N_,float:P_},I_=new Map([...R_,...P_]),D_=(e,t)=>I_.has(e)?I_.get(e):!0===e.isNode?e:new a_(e,t),F_=function(e,t=null){return(...n)=>{for(const t of n)if(void 0===t)return console.error(`THREE.TSL: Invalid parameter for the type "${e}".`),k_(new a_(0,e));if((0===n.length||!["bool","float","int","uint"].includes(e)&&n.every(e=>{const t=typeof e;return"object"!==t&&"function"!==t}))&&(n=[Dx(e,...n)]),1===n.length&&null!==t&&t.has(n[0]))return V_(t.get(n[0]));if(1===n.length){const t=D_(n[0],e);return t.nodeType===e?V_(t):V_(new Qx(t,e))}const i=n.map(e=>D_(e));return V_(new Jx(i,e))}},U_=e=>"object"==typeof e&&null!==e?e.value:e,O_=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function B_(e,t){return new S_(e,t)}const k_=(e,t=null)=>function(e,t=null){const n=Ix(e);return"node"===n?e:null===t&&("float"===n||"boolean"===n)||n&&"shader"!==n&&"string"!==n?k_(D_(e,t)):"shader"===n?e.isFn?e:$_(e):e}(e,t),V_=(e,t=null)=>k_(e,t).toVarIntent(),z_=(e,t=null)=>new b_(e,t),G_=(e,t=null)=>new y_(e,t),H_=(e,t=null,n=null,i=null)=>new x_(e,t,n,i),W_=(e,...t)=>new __(e,...t),j_=(e,t=null,n=null,i={})=>new x_(e,t,n,{intent:!0,...i});let X_=0;class q_ extends Yx{constructor(e,t=null){super();let n=null;null!==t&&("object"==typeof t?n=t.return:("string"==typeof t?n=t:console.error("THREE.TSL: Invalid layout type."),t=null)),this.shaderNode=new B_(e,n),null!==t&&this.setLayout(t),this.isFn=!0}setLayout(e){const t=this.shaderNode.nodeType;if("object"!=typeof e.inputs){const n={name:"fn"+X_++,type:t,inputs:[]};for(const t in e)"return"!==t&&n.inputs.push({name:t,type:e[t]});e=n}return this.shaderNode.setLayout(e),this}getNodeType(e){return this.shaderNode.getNodeType(e)||"float"}call(...e){const t=this.shaderNode.call(e);return"void"===this.shaderNode.nodeType&&t.toStack(),t.toVarIntent()}once(e=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=e,this}generate(e){const t=this.getNodeType(e);return console.error('THREE.TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),e.generateConst(t)}}function $_(e,t=null){const n=new q_(e,t);return new Proxy(()=>{},{apply:(e,t,i)=>n.call(...i),get:(e,t,i)=>Reflect.get(n,t,i),set:(e,t,i,r)=>Reflect.set(n,t,i,r)})}const Y_=e=>{l_=e},K_=()=>l_,Q_=(...e)=>l_.If(...e);function Z_(e){return l_&&l_.add(e),e}u_("toStack",Z_);const J_=new F_("color"),eT=new F_("float",L_.float),tT=new F_("int",L_.ints),nT=new F_("uint",L_.uint),iT=new F_("bool",L_.bool),rT=new F_("vec2"),sT=new F_("ivec2"),aT=new F_("uvec2"),oT=new F_("bvec2"),lT=new F_("vec3"),cT=new F_("ivec3"),uT=new F_("uvec3"),hT=new F_("bvec3"),dT=new F_("vec4"),pT=new F_("ivec4"),mT=new F_("uvec4"),fT=new F_("bvec4"),gT=new F_("mat2"),vT=new F_("mat3"),bT=new F_("mat4");u_("toColor",J_),u_("toFloat",eT),u_("toInt",tT),u_("toUint",nT),u_("toBool",iT),u_("toVec2",rT),u_("toIVec2",sT),u_("toUVec2",aT),u_("toBVec2",oT),u_("toVec3",lT),u_("toIVec3",cT),u_("toUVec3",uT),u_("toBVec3",hT),u_("toVec4",dT),u_("toIVec4",pT),u_("toUVec4",mT),u_("toBVec4",fT),u_("toMat2",gT),u_("toMat3",vT),u_("toMat4",bT);const yT=H_(Kx).setParameterLength(2),xT=(e,t)=>k_(new Qx(k_(e),t));u_("element",yT),u_("convert",xT);u_("append",e=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),Z_(e)));class _T extends Yx{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const TT=(e,t)=>k_(new _T(e,t)),ST=(e,t)=>k_(new _T(e,t,!0)),wT=W_(_T,"vec4","DiffuseColor"),MT=W_(_T,"vec3","EmissiveColor"),ET=W_(_T,"float","Roughness"),AT=W_(_T,"float","Metalness"),RT=W_(_T,"float","Clearcoat"),CT=W_(_T,"float","ClearcoatRoughness"),NT=W_(_T,"vec3","Sheen"),PT=W_(_T,"float","SheenRoughness"),LT=W_(_T,"float","Iridescence"),IT=W_(_T,"float","IridescenceIOR"),DT=W_(_T,"float","IridescenceThickness"),FT=W_(_T,"float","AlphaT"),UT=W_(_T,"float","Anisotropy"),OT=W_(_T,"vec3","AnisotropyT"),BT=W_(_T,"vec3","AnisotropyB"),kT=W_(_T,"color","SpecularColor"),VT=W_(_T,"float","SpecularF90"),zT=W_(_T,"float","Shininess"),GT=W_(_T,"vec4","Output"),HT=W_(_T,"float","dashSize"),WT=W_(_T,"float","gapSize"),jT=W_(_T,"float","pointWidth"),XT=W_(_T,"float","IOR"),qT=W_(_T,"float","Transmission"),$T=W_(_T,"float","Thickness"),YT=W_(_T,"float","AttenuationDistance"),KT=W_(_T,"color","AttenuationColor"),QT=W_(_T,"float","Dispersion");class ZT extends Yx{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.shared=t,this.order=n,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const JT=e=>new ZT(e),eS=(e,t=0)=>new ZT(e,!0,t),tS=eS("frame"),nS=eS("render"),iS=JT("object");class rS extends r_{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=iS}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){return e=e.bind(this),super.onUpdate(t=>{const n=e(t,this);void 0!==n&&(this.value=n)},t)}getInputType(e){let t=super.getInputType(e);return"bool"===t&&(t="uint"),t}generate(e,t){const n=this.getNodeType(e),i=this.getUniformHash(e);let r=e.getNodeFromHash(i);void 0===r&&(e.setHashNode(this,i),r=this);const s=r.getInputType(e),a=e.getUniformFromNode(r,s,e.shaderStage,this.name||e.context.nodeName),o=e.getPropertyName(a);void 0!==e.context.nodeName&&delete e.context.nodeName;let l=o;if("bool"===n){const t=e.getDataFromNode(this);let i=t.propertyName;if(void 0===i){const r=e.getVarFromNode(this,null,"bool");i=e.getPropertyName(r),t.propertyName=i,l=e.format(o,s,n),e.addLineFlowCode(`${i} = ${l}`,this)}l=i}return e.format(l,n,t)}}const sS=(e,t)=>{const n=O_(t||e);return n===e&&(e=Dx(n)),e=e&&!0===e.isNode?e.node&&e.node.value||e.value:e,k_(new rS(e,n))};class aS extends Zx{static get type(){return"ArrayNode"}constructor(e,t,n=null){super(e),this.count=t,this.values=n,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return null===this.nodeType&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const oS=(...e)=>{let t;if(1===e.length){const n=e[0];t=new aS(null,n.length,n)}else{const n=e[0],i=e[1];t=new aS(n,i)}return k_(t)};u_("toArray",(e,t)=>oS(Array(t).fill(e)));class lS extends Zx{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return Xx.join("").slice(0,n)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:n}=this,i=t.getScope();e.getNodeProperties(i).assign=!0;const r=e.getNodeProperties(this);r.sourceNode=n,r.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:n,sourceNode:i}=e.getNodeProperties(this),r=this.needsSplitAssign(e),s=n.build(e),a=n.getNodeType(e),o=i.build(e,a),l=i.getNodeType(e),c=e.getDataFromNode(this);let u;if(!0===c.initialized)"void"!==t&&(u=s);else if(r){const i=e.getVarFromNode(this,null,a),r=e.getPropertyName(i);e.addLineFlowCode(`${r} = ${o}`,this);const l=n.node,c=l.node.context({assign:!0}).build(e);for(let t=0;t<l.components.length;t++){const n=l.components[t];e.addLineFlowCode(`${c}.${n} = ${r}[ ${t} ]`,this)}"void"!==t&&(u=s)}else u=`${s} = ${o}`,"void"!==t&&"void"!==l||(e.addLineFlowCode(u,this),"void"!==t&&(u=s));return c.initialized=!0,e.format(u,a,t)}}const cS=H_(lS).setParameterLength(2);u_("assign",cS);class uS extends Zx{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}getMemberType(e,t){return this.functionNode.getMemberType(e,t)}generate(e){const t=[],n=this.functionNode,i=n.getInputs(e),r=this.parameters,s=(t,n)=>{const i=n.type;let r;return r="pointer"===i?"&"+t.build(e):t.build(e,i),r};if(Array.isArray(r)){if(r.length>i.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),r.length=i.length;else if(r.length<i.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");r.length<i.length;)r.push(eT(0));for(let e=0;e<r.length;e++)t.push(s(r[e],i[e]))}else for(const a of i){const e=r[a.name];void 0!==e?t.push(s(e,a)):(console.error(`THREE.TSL: Input '${a.name}' not found in 'Fn()'.`),t.push(s(eT(0),a)))}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const hS=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?G_(t):z_(t[0]),k_(new uS(k_(e),t)));u_("call",hS);const dS={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class pS extends Zx{static get type(){return"OperatorNode"}constructor(e,t,n,...i){if(super(),i.length>0){let r=new pS(e,t,n);for(let t=0;t<i.length-1;t++)r=new pS(e,r,i[t]);t=r,n=i[i.length-1]}this.op=e,this.aNode=t,this.bNode=n,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(dS[this.op],t)}getNodeType(e,t=null){const n=this.op,i=this.aNode,r=this.bNode,s=i.getNodeType(e),a=r?r.getNodeType(e):null;if("void"===s||"void"===a)return t||"void";if("%"===n)return s;if("~"===n||"&"===n||"|"===n||"^"===n||">>"===n||"<<"===n)return e.getIntegerType(s);if("!"===n||"&&"===n||"||"===n||"^^"===n)return"bool";if("=="===n||"!="===n||"<"===n||">"===n||"<="===n||">="===n){const t=Math.max(e.getTypeLength(s),e.getTypeLength(a));return t>1?`bvec${t}`:"bool"}if(e.isMatrix(s)){if("float"===a)return s;if(e.isVector(a))return e.getVectorFromMatrix(s);if(e.isMatrix(a))return s}else if(e.isMatrix(a)){if("float"===s)return a;if(e.isVector(s))return e.getVectorFromMatrix(a)}return e.getTypeLength(a)>e.getTypeLength(s)?a:s}generate(e,t){const n=this.op,{aNode:i,bNode:r}=this,s=this.getNodeType(e,t);let a=null,o=null;"void"!==s?(a=i.getNodeType(e),o=r?r.getNodeType(e):null,"<"===n||">"===n||"<="===n||">="===n||"=="===n||"!="===n?e.isVector(a)?o=a:e.isVector(o)?a=o:a!==o&&(a=o="float"):">>"===n||"<<"===n?(a=s,o=e.changeComponentType(o,"uint")):"%"===n?(a=s,o=e.isInteger(a)&&e.isInteger(o)?o:a):e.isMatrix(a)?"float"===o?o="float":e.isVector(o)?o=e.getVectorFromMatrix(a):e.isMatrix(o)||(a=o=s):a=e.isMatrix(o)?"float"===a?"float":e.isVector(a)?e.getVectorFromMatrix(o):o=s:o=s):a=o=s;const l=i.build(e,a),c=r?r.build(e,o):null,u=e.getFunctionOperator(n);if("void"!==t){const i=e.renderer.coordinateSystem===on;if("=="===n||"!="===n||"<"===n||">"===n||"<="===n||">="===n)return i&&e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${l}, ${c} )`,s,t):e.format(`( ${l} ${n} ${c} )`,s,t);if("%"===n)return e.isInteger(o)?e.format(`( ${l} % ${c} )`,s,t):e.format(`${this.getOperatorMethod(e,s)}( ${l}, ${c} )`,s,t);if("!"===n||"~"===n)return e.format(`(${n}${l})`,a,t);if(u)return e.format(`${u}( ${l}, ${c} )`,s,t);if(e.isMatrix(a)&&"float"===o)return e.format(`( ${c} ${n} ${l} )`,s,t);if("float"===a&&e.isMatrix(o))return e.format(`${l} ${n} ${c}`,s,t);{let r=`( ${l} ${n} ${c} )`;return!i&&"bool"===s&&e.isVector(a)&&e.isVector(o)&&(r=`all${r}`),e.format(r,s,t)}}if("void"!==a)return u?e.format(`${u}( ${l}, ${c} )`,s,t):e.isMatrix(a)&&"float"===o?e.format(`${c} ${n} ${l}`,s,t):e.format(`${l} ${n} ${c}`,s,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const mS=j_(pS,"+").setParameterLength(2,1/0).setName("add"),fS=j_(pS,"-").setParameterLength(2,1/0).setName("sub"),gS=j_(pS,"*").setParameterLength(2,1/0).setName("mul"),vS=j_(pS,"/").setParameterLength(2,1/0).setName("div"),bS=j_(pS,"%").setParameterLength(2).setName("mod"),yS=j_(pS,"==").setParameterLength(2).setName("equal"),xS=j_(pS,"!=").setParameterLength(2).setName("notEqual"),_S=j_(pS,"<").setParameterLength(2).setName("lessThan"),TS=j_(pS,">").setParameterLength(2).setName("greaterThan"),SS=j_(pS,"<=").setParameterLength(2).setName("lessThanEqual"),wS=j_(pS,">=").setParameterLength(2).setName("greaterThanEqual"),MS=j_(pS,"&&").setParameterLength(2,1/0).setName("and"),ES=j_(pS,"||").setParameterLength(2,1/0).setName("or"),AS=j_(pS,"!").setParameterLength(1).setName("not"),RS=j_(pS,"^^").setParameterLength(2).setName("xor"),CS=j_(pS,"&").setParameterLength(2).setName("bitAnd"),NS=j_(pS,"~").setParameterLength(2).setName("bitNot"),PS=j_(pS,"|").setParameterLength(2).setName("bitOr"),LS=j_(pS,"^").setParameterLength(2).setName("bitXor"),IS=j_(pS,"<<").setParameterLength(2).setName("shiftLeft"),DS=j_(pS,">>").setParameterLength(2).setName("shiftRight"),FS=$_(([e])=>(e.addAssign(1),e)),US=$_(([e])=>(e.subAssign(1),e)),OS=$_(([e])=>{const t=tT(e).toConst();return e.addAssign(1),t}),BS=$_(([e])=>{const t=tT(e).toConst();return e.subAssign(1),t});u_("add",mS),u_("sub",fS),u_("mul",gS),u_("div",vS),u_("mod",bS),u_("equal",yS),u_("notEqual",xS),u_("lessThan",_S),u_("greaterThan",TS),u_("lessThanEqual",SS),u_("greaterThanEqual",wS),u_("and",MS),u_("or",ES),u_("not",AS),u_("xor",RS),u_("bitAnd",CS),u_("bitNot",NS),u_("bitOr",PS),u_("bitXor",LS),u_("shiftLeft",IS),u_("shiftRight",DS),u_("incrementBefore",FS),u_("decrementBefore",US),u_("increment",OS),u_("decrement",BS);const kS=(e,t)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),bS(tT(e),tT(t)));u_("modInt",kS);class VS extends Zx{static get type(){return"MathNode"}constructor(e,t,n=null,i=null){if(super(),(e===VS.MAX||e===VS.MIN)&&arguments.length>3){let r=new VS(e,t,n);for(let t=2;t<arguments.length-1;t++)r=new VS(e,r,arguments[t]);t=r,n=arguments[arguments.length-1],i=null}this.method=e,this.aNode=t,this.bNode=n,this.cNode=i,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),s=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i);return r>s&&r>a?t:s>a?n:a>r?i:t}getNodeType(e){const t=this.method;return t===VS.LENGTH||t===VS.DISTANCE||t===VS.DOT?"float":t===VS.CROSS?"vec3":t===VS.ALL||t===VS.ANY?"bool":t===VS.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:n,method:i}=this;let r=null;if(i===VS.ONE_MINUS)r=fS(1,t);else if(i===VS.RECIPROCAL)r=vS(1,t);else if(i===VS.DIFFERENCE)r=hw(fS(t,n));else if(i===VS.TRANSFORM_DIRECTION){let i=t,s=n;e.isMatrix(i.getNodeType(e))?s=dT(lT(s),0):i=dT(lT(i),0);const a=gS(i,s).xyz;r=iw(a)}return null!==r?r:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let n=this.method;const i=this.getNodeType(e),r=this.getInputType(e),s=this.aNode,a=this.bNode,o=this.cNode,l=e.renderer.coordinateSystem;if(n===VS.NEGATE)return e.format("( - "+s.build(e,r)+" )",i,t);{const c=[];return n===VS.CROSS?c.push(s.build(e,i),a.build(e,i)):l===on&&n===VS.STEP?c.push(s.build(e,1===e.getTypeLength(s.getNodeType(e))?"float":r),a.build(e,r)):l!==on||n!==VS.MIN&&n!==VS.MAX?n===VS.REFRACT?c.push(s.build(e,r),a.build(e,r),o.build(e,"float")):n===VS.MIX?c.push(s.build(e,r),a.build(e,r),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":r)):(l===ln&&n===VS.ATAN&&null!==a&&(n="atan2"),"fragment"===e.shaderStage||n!==VS.DFDX&&n!==VS.DFDY||(console.warn(`THREE.TSL: '${n}' is not supported in the ${e.shaderStage} stage.`),n="/*"+n+"*/"),c.push(s.build(e,r)),null!==a&&c.push(a.build(e,r)),null!==o&&c.push(o.build(e,r))):c.push(s.build(e,r),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":r)),e.format(`${e.getMethod(n,i)}( ${c.join(", ")} )`,i,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}VS.ALL="all",VS.ANY="any",VS.RADIANS="radians",VS.DEGREES="degrees",VS.EXP="exp",VS.EXP2="exp2",VS.LOG="log",VS.LOG2="log2",VS.SQRT="sqrt",VS.INVERSE_SQRT="inversesqrt",VS.FLOOR="floor",VS.CEIL="ceil",VS.NORMALIZE="normalize",VS.FRACT="fract",VS.SIN="sin",VS.COS="cos",VS.TAN="tan",VS.ASIN="asin",VS.ACOS="acos",VS.ATAN="atan",VS.ABS="abs",VS.SIGN="sign",VS.LENGTH="length",VS.NEGATE="negate",VS.ONE_MINUS="oneMinus",VS.DFDX="dFdx",VS.DFDY="dFdy",VS.ROUND="round",VS.RECIPROCAL="reciprocal",VS.TRUNC="trunc",VS.FWIDTH="fwidth",VS.TRANSPOSE="transpose",VS.DETERMINANT="determinant",VS.INVERSE="inverse",VS.EQUALS="equals",VS.MIN="min",VS.MAX="max",VS.STEP="step",VS.REFLECT="reflect",VS.DISTANCE="distance",VS.DIFFERENCE="difference",VS.DOT="dot",VS.CROSS="cross",VS.POW="pow",VS.TRANSFORM_DIRECTION="transformDirection",VS.MIX="mix",VS.CLAMP="clamp",VS.REFRACT="refract",VS.SMOOTHSTEP="smoothstep",VS.FACEFORWARD="faceforward";const zS=eT(1e-6),GS=eT(1e6),HS=eT(Math.PI),WS=eT(2*Math.PI),jS=j_(VS,VS.ALL).setParameterLength(1),XS=j_(VS,VS.ANY).setParameterLength(1),qS=j_(VS,VS.RADIANS).setParameterLength(1),$S=j_(VS,VS.DEGREES).setParameterLength(1),YS=j_(VS,VS.EXP).setParameterLength(1),KS=j_(VS,VS.EXP2).setParameterLength(1),QS=j_(VS,VS.LOG).setParameterLength(1),ZS=j_(VS,VS.LOG2).setParameterLength(1),JS=j_(VS,VS.SQRT).setParameterLength(1),ew=j_(VS,VS.INVERSE_SQRT).setParameterLength(1),tw=j_(VS,VS.FLOOR).setParameterLength(1),nw=j_(VS,VS.CEIL).setParameterLength(1),iw=j_(VS,VS.NORMALIZE).setParameterLength(1),rw=j_(VS,VS.FRACT).setParameterLength(1),sw=j_(VS,VS.SIN).setParameterLength(1),aw=j_(VS,VS.COS).setParameterLength(1),ow=j_(VS,VS.TAN).setParameterLength(1),lw=j_(VS,VS.ASIN).setParameterLength(1),cw=j_(VS,VS.ACOS).setParameterLength(1),uw=j_(VS,VS.ATAN).setParameterLength(1,2),hw=j_(VS,VS.ABS).setParameterLength(1),dw=j_(VS,VS.SIGN).setParameterLength(1),pw=j_(VS,VS.LENGTH).setParameterLength(1),mw=j_(VS,VS.NEGATE).setParameterLength(1),fw=j_(VS,VS.ONE_MINUS).setParameterLength(1),gw=j_(VS,VS.DFDX).setParameterLength(1),vw=j_(VS,VS.DFDY).setParameterLength(1),bw=j_(VS,VS.ROUND).setParameterLength(1),yw=j_(VS,VS.RECIPROCAL).setParameterLength(1),xw=j_(VS,VS.TRUNC).setParameterLength(1),_w=j_(VS,VS.FWIDTH).setParameterLength(1),Tw=j_(VS,VS.TRANSPOSE).setParameterLength(1),Sw=j_(VS,VS.DETERMINANT).setParameterLength(1),ww=j_(VS,VS.INVERSE).setParameterLength(1),Mw=(e,t)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),yS(e,t)),Ew=j_(VS,VS.MIN).setParameterLength(2,1/0),Aw=j_(VS,VS.MAX).setParameterLength(2,1/0),Rw=j_(VS,VS.STEP).setParameterLength(2),Cw=j_(VS,VS.REFLECT).setParameterLength(2),Nw=j_(VS,VS.DISTANCE).setParameterLength(2),Pw=j_(VS,VS.DIFFERENCE).setParameterLength(2),Lw=j_(VS,VS.DOT).setParameterLength(2),Iw=j_(VS,VS.CROSS).setParameterLength(2),Dw=j_(VS,VS.POW).setParameterLength(2),Fw=e=>gS(e,e),Uw=e=>gS(e,e,e),Ow=e=>gS(e,e,e,e),Bw=j_(VS,VS.TRANSFORM_DIRECTION).setParameterLength(2),kw=e=>gS(dw(e),Dw(hw(e),1/3)),Vw=e=>Lw(e,e),zw=j_(VS,VS.MIX).setParameterLength(3),Gw=(e,t=0,n=1)=>k_(new VS(VS.CLAMP,k_(e),k_(t),k_(n))),Hw=e=>Gw(e),Ww=j_(VS,VS.REFRACT).setParameterLength(3),jw=j_(VS,VS.SMOOTHSTEP).setParameterLength(3),Xw=j_(VS,VS.FACEFORWARD).setParameterLength(3),qw=$_(([e])=>{const t=Lw(e.xy,rT(12.9898,78.233)),n=bS(t,HS);return rw(sw(n).mul(43758.5453))}),$w=(e,t,n)=>zw(t,n,e),Yw=(e,t,n)=>jw(t,n,e),Kw=(e,t)=>Rw(t,e),Qw=(e,t)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),uw(e,t)),Zw=Xw,Jw=ew;u_("all",jS),u_("any",XS),u_("equals",Mw),u_("radians",qS),u_("degrees",$S),u_("exp",YS),u_("exp2",KS),u_("log",QS),u_("log2",ZS),u_("sqrt",JS),u_("inverseSqrt",ew),u_("floor",tw),u_("ceil",nw),u_("normalize",iw),u_("fract",rw),u_("sin",sw),u_("cos",aw),u_("tan",ow),u_("asin",lw),u_("acos",cw),u_("atan",uw),u_("abs",hw),u_("sign",dw),u_("length",pw),u_("lengthSq",Vw),u_("negate",mw),u_("oneMinus",fw),u_("dFdx",gw),u_("dFdy",vw),u_("round",bw),u_("reciprocal",yw),u_("trunc",xw),u_("fwidth",_w),u_("atan2",Qw),u_("min",Ew),u_("max",Aw),u_("step",Kw),u_("reflect",Cw),u_("distance",Nw),u_("dot",Lw),u_("cross",Iw),u_("pow",Dw),u_("pow2",Fw),u_("pow3",Uw),u_("pow4",Ow),u_("transformDirection",Bw),u_("mix",$w),u_("clamp",Gw),u_("refract",Ww),u_("smoothstep",Yw),u_("faceForward",Xw),u_("difference",Pw),u_("saturate",Hw),u_("cbrt",kw),u_("transpose",Tw),u_("determinant",Sw),u_("inverse",ww),u_("rand",qw);class eM extends Yx{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const{ifNode:t,elseNode:n}=e.getNodeProperties(this);if(void 0===t)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const i=t.getNodeType(e);if(null!==n){const t=n.getNodeType(e);if(e.getTypeLength(t)>e.getTypeLength(i))return t}return i}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=r,null!==i&&(e.getDataFromNode(i).parentNodeBlock=r);const s=e.context.uniformFlow,a=e.getNodeProperties(this);a.condNode=t,a.ifNode=s?n:n.context({nodeBlock:n}),a.elseNode=i?s?i:i.context({nodeBlock:i}):null}generate(e,t){const n=this.getNodeType(e),i=e.getDataFromNode(this);if(void 0!==i.nodeProperty)return i.nodeProperty;const{condNode:r,ifNode:s,elseNode:a}=e.getNodeProperties(this),o=e.currentFunctionNode,l="void"!==t,c=l?TT(n).build(e):"";i.nodeProperty=c;const u=r.build(e,"bool");if(e.context.uniformFlow&&null!==a){const i=s.build(e,n),r=a.build(e,n),o=e.getTernary(u,i,r);return e.format(o,n,t)}e.addFlowCode(`\n${e.tab}if ( ${u} ) {\n\n`).addFlowTab();let h=s.build(e,n);if(h&&(l?h=c+" = "+h+";":(h="return "+h+";",null===o&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),h="// "+h))),e.removeFlowTab().addFlowCode(e.tab+"\t"+h+"\n\n"+e.tab+"}"),null!==a){e.addFlowCode(" else {\n\n").addFlowTab();let t=a.build(e,n);t&&(l?t=c+" = "+t+";":(t="return "+t+";",null===o&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),t="// "+t))),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(c,n,t)}}const tM=H_(eM).setParameterLength(2,3);u_("select",tM);class nM extends Yx{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}getMemberType(e,t){return this.node.getMemberType(e,t)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e,t);return e.setContext(n),i}}const iM=H_(nM).setParameterLength(1,2),rM=e=>iM(e,{uniformFlow:!0}),sM=(e,t)=>iM(e,{nodeName:t});function aM(e,t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),sM(e,t)}u_("context",iM),u_("label",aM),u_("uniformFlow",rM),u_("setName",sM);class oM extends Yx{static get type(){return"VarNode"}constructor(e,t=null,n=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=n,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){if(!0===this.intent){if(!0!==e[0].getNodeProperties(this).assign)return this.node.build(...e)}return super.build(...e)}generate(e){const{node:t,name:n,readOnly:i}=this,{renderer:r}=e,s=!0===r.backend.isWebGPUBackend;let a=!1,o=!1;i&&(a=e.isDeterministic(t),o=s?i:a);const l=e.getVectorType(this.getNodeType(e)),c=t.build(e,l),u=e.getVarFromNode(this,n,l,void 0,o),h=e.getPropertyName(u);let d=h;if(o)if(s)d=a?`const ${h}`:`let ${h}`;else{const n=t.getArrayCount(e);d=`const ${e.getVar(u.type,h,n)}`}return e.addLineFlowCode(`${d} = ${c}`,this),h}}const lM=H_(oM),cM=(e,t=null)=>lM(e,t).toStack(),uM=(e,t=null)=>lM(e,t,!0).toStack(),hM=e=>null===K_()?e:lM(e).setIntent(!0).toStack();u_("toVar",cM),u_("toConst",uM),u_("toVarIntent",hM);class dM extends Yx{static get type(){return"SubBuild"}constructor(e,t,n=null){super(n),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(null!==this.nodeType)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const n=this.node.build(e,...t);return e.removeSubBuild(),n}}const pM=(e,t,n=null)=>k_(new dM(k_(e),t,n));class mM extends Yx{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(void 0===n){const i=this.name,r=this.getNodeType(e),s=this.interpolationType,a=this.interpolationSampling;t.varying=n=e.getVaryingFromNode(this,i,r,s,a),t.node=pM(this.node,"VERTEX")}return n.needsInterpolation||(n.needsInterpolation="fragment"===e.shaderStage),n}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(kx.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(kx.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),n=e.getNodeProperties(this),i=this.setupVarying(e);if(void 0===n[t]){const r=this.getNodeType(e),s=e.getPropertyName(i,kx.VERTEX);e.flowNodeFromShaderStage(kx.VERTEX,n.node,r,s),n[t]=s}return e.getPropertyName(i)}}const fM=H_(mM).setParameterLength(1,2),gM=e=>fM(e);u_("toVarying",fM),u_("toVertexStage",gM),u_("varying",(...e)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),fM(...e))),u_("vertexStage",(...e)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),fM(...e)));const vM=$_(([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),n=e.mul(.0773993808),i=e.lessThanEqual(.04045);return zw(t,n,i)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),bM=$_(([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),n=e.mul(12.92),i=e.lessThanEqual(.0031308);return zw(t,n,i)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),yM="WorkingColorSpace";class xM extends Zx{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===yM?zn.workingColorSpace:"OutputColorSpace"===t?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),i=this.resolveColorSpace(e,this.target);let r=t;return!1!==zn.enabled&&n!==i&&n&&i?(zn.getTransfer(n)===kt&&(r=dT(vM(r.rgb),r.a)),zn.getPrimaries(n)!==zn.getPrimaries(i)&&(r=dT(vT(zn._getMatrix(new Cn,n,i)).mul(r.rgb),r.a)),zn.getTransfer(i)===kt&&(r=dT(bM(r.rgb),r.a)),r):r}}const _M=(e,t)=>k_(new xM(k_(e),yM,t)),TM=(e,t)=>k_(new xM(k_(e),t,yM));u_("workingToColorSpace",_M),u_("colorSpaceToWorking",TM);let SM=class extends Kx{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}};class wM extends Yx{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=Vx.OBJECT}setGroup(e){return this.group=e,this}element(e){return k_(new SM(this,k_(e)))}setNodeType(e){const t=sS(null,e);null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class MM extends wM{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(nS)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const EM=(e,t,n=null)=>k_(new MM(e,t,n));class AM extends Zx{static get type(){return"ToneMappingNode"}constructor(e,t=CM,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}customCacheKey(){return Sx(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(0===n)return t;let i=null;const r=e.renderer.library.getToneMappingFunction(n);return null!==r?i=dT(r(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=t),i}}const RM=(e,t,n)=>k_(new AM(e,k_(t),k_(n))),CM=EM("toneMappingExposure","float");u_("toneMapping",(e,t,n)=>RM(t,n,e));class NM extends r_{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=i,this.usage=rn,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),n=this.value,i=e.getTypeLength(t),r=this.bufferStride||i,s=this.bufferOffset,a=!0===n.isInterleavedBuffer?n:new Fs(n,r),o=new Os(a,i,s);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),i=e.getPropertyName(n);let r=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=i,r=i;else{r=fM(this).build(e,t)}return r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const PM=(e,t=null,n=0,i=0)=>k_(new NM(e,t,n,i)),LM=(e,t=null,n=0,i=0)=>PM(e,t,n,i).setUsage(sn),IM=(e,t=null,n=0,i=0)=>PM(e,t,n,i).setInstanced(!0),DM=(e,t=null,n=0,i=0)=>LM(e,t,n,i).setInstanced(!0);u_("toAttribute",e=>PM(e.value));class FM extends Yx{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=Vx.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){e.getNodeProperties(this).outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:n}=e;if("compute"===n){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t,this)}else{const n=e.getNodeProperties(this).outputComputeNode;if(n)return n.build(e,t)}}}const UM=(e,t=[64])=>{(0===t.length||t.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let n=0;n<t.length;n++){const e=t[n];("number"!=typeof e||e<=0||!Number.isInteger(e))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${n} ] must be a positive integer`)}for(;t.length<3;)t.push(1);return k_(new FM(k_(e),t))},OM=(e,t,n)=>UM(e,n).setCount(t);u_("compute",OM),u_("computeKernel",UM);class BM extends Yx{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const i=this.node.getNodeType(e);return e.setCache(t),i}build(e,...t){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const r=this.node.build(e,...t);return e.setCache(n),r}}const kM=(e,t)=>k_(new BM(k_(e),t));u_("cache",kM);class VM extends Yx{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const zM=H_(VM).setParameterLength(2);u_("bypass",zM);class GM extends Yx{static get type(){return"RemapNode"}constructor(e,t,n,i=eT(0),r=eT(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:r,doClamp:s}=this;let a=e.sub(t).div(n.sub(t));return!0===s&&(a=a.clamp()),a.mul(r.sub(i)).add(i)}}const HM=H_(GM,null,null,{doClamp:!1}).setParameterLength(3,5),WM=H_(GM).setParameterLength(3,5);u_("remap",HM),u_("remapClamp",WM);class jM extends Yx{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),i=this.snippet;if("void"!==n)return e.format(i,n,t);e.addLineFlowCode(i,this)}}const XM=H_(jM).setParameterLength(1,2),qM=e=>(e?tM(e,XM("discard")):XM("discard")).toStack();u_("discard",qM);class $M extends Zx{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||0,i=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||Ft;return 0!==n&&(t=t.toneMapping(n)),i!==Ft&&i!==zn.workingColorSpace&&(t=t.workingToColorSpace(i)),t}}const YM=(e,t=null,n=null)=>k_(new $M(k_(e),t,n));u_("renderOutput",YM);class KM extends Zx{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,n=this.node.build(e),i="--- TSL debug - "+e.shaderStage+" shader ---",r="-".repeat(i.length);let s="";return s+="// #"+i+"#\n",s+=e.flow.code.replace(/^\t/gm,"")+"\n",s+="/* ... */ "+n+" /* ... */\n",s+="// #"+r+"#\n",null!==t?t(e,s):console.log(s),n}}const QM=(e,t=null)=>k_(new KM(k_(e),t)).toStack();u_("debug",QM);class ZM extends Yx{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const i=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(i)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const i=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(i),s=e.getAttribute(t,r);if("vertex"===e.shaderStage)return e.format(s.name,r,n);return fM(this).build(e,n)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const JM=(e,t=null)=>k_(new ZM(e,t)),eE=(e=0)=>JM("uv"+(e>0?e:""),"vec2");class tE extends Yx{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),i=null===this.levelNode?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(e),t)}}const nE=H_(tE).setParameterLength(1,2);class iE extends rS{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Vx.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&void 0!==n.width){const{width:e,height:t}=n;this.value=Math.log2(Math.max(e,t))}}}const rE=H_(iE).setParameterLength(1),sE=new Qn;class aE extends rS{static get type(){return"TextureNode"}constructor(e=sE,t=null,n=null,i=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Vx.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===_e?"uvec4":this.value.type===xe?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return eE(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=sS(this.value.matrix)),this._matrixUniform.mul(lT(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Vx.OBJECT:Vx.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&!0===n.flipY||!0===n.isRenderTargetTexture||!0===n.isFramebufferTexture||!0===n.isDepthTexture)&&(t=this.sampler?t.flipY():t.setY(tT(nE(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const n=this.value;if(!n||!0!==n.isTexture)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let i=this.uvNode;null!==i&&!0!==e.context.forceUVContext||!e.context.getUV||(i=e.context.getUV(this,e)),i||(i=this.getDefaultUV()),!0===this.updateMatrix&&(i=this.getTransformedUV(i)),i=this.setupUV(e,i);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=i,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode,t.offsetNode=this.offsetNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateOffset(e,t){return t.build(e,"ivec2")}generateSnippet(e,t,n,i,r,s,a,o,l){const c=this.value;let u;return u=i?e.generateTextureLevel(c,t,n,i,s,l):r?e.generateTextureBias(c,t,n,r,s,l):o?e.generateTextureGrad(c,t,n,o,s,l):a?e.generateTextureCompare(c,t,n,a,s,l):!1===this.sampler?e.generateTextureLoad(c,t,n,s,l):e.generateTexture(c,t,n,s,l),u}generate(e,t){const n=this.value,i=e.getNodeProperties(this),r=super.generate(e,"property");if(/^sampler/.test(t))return r+"_sampler";if(e.isReference(t))return r;{const s=e.getDataFromNode(this);let a=s.propertyName;if(void 0===a){const{uvNode:t,levelNode:n,biasNode:o,compareNode:l,depthNode:c,gradNode:u,offsetNode:h}=i,d=this.generateUV(e,t),p=n?n.build(e,"float"):null,m=o?o.build(e,"float"):null,f=c?c.build(e,"int"):null,g=l?l.build(e,"float"):null,v=u?[u[0].build(e,"vec2"),u[1].build(e,"vec2")]:null,b=h?this.generateOffset(e,h):null,y=e.getVarFromNode(this);a=e.getPropertyName(y);const x=this.generateSnippet(e,r,d,p,m,f,g,v,b);e.addLineFlowCode(`${a} = ${x}`,this),s.snippet=x,s.propertyName=a}let o=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(o=TM(XM(o,l),n.colorSpace).setup(e).build(e,l)),e.format(o,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=k_(e),t.referenceNode=this.getBase(),k_(t)}load(e){return this.sample(e).setSampler(!1)}blur(e){const t=this.clone();t.biasNode=k_(e).mul(rE(t)),t.referenceNode=this.getBase();const n=t.value;return!1===t.generateMipmaps&&(n&&!1===n.generateMipmaps||n.minFilter===ce||n.magFilter===ce)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),k_(t)}level(e){const t=this.clone();return t.levelNode=k_(e),t.referenceNode=this.getBase(),k_(t)}size(e){return nE(this,e)}bias(e){const t=this.clone();return t.biasNode=k_(e),t.referenceNode=this.getBase(),k_(t)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(e){const t=this.clone();return t.compareNode=k_(e),t.referenceNode=this.getBase(),k_(t)}grad(e,t){const n=this.clone();return n.gradNode=[k_(e),k_(t)],n.referenceNode=this.getBase(),k_(n)}depth(e){const t=this.clone();return t.depthNode=k_(e),t.referenceNode=this.getBase(),k_(t)}offset(e){const t=this.clone();return t.offsetNode=k_(e),t.referenceNode=this.getBase(),k_(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}const oE=H_(aE).setParameterLength(1,4).setName("texture"),lE=(e=sE,t=null,n=null,i=null)=>{let r;return e&&!0===e.isTextureNode?(r=k_(e.clone()),r.referenceNode=e.getBase(),null!==t&&(r.uvNode=k_(t)),null!==n&&(r.levelNode=k_(n)),null!==i&&(r.biasNode=k_(i))):r=oE(e,t,n,i),r},cE=(...e)=>lE(...e).setSampler(!1);class uE extends rS{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const hE=(e,t,n)=>k_(new uE(e,t,n));class dE extends Kx{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType(),i=this.node.getPaddedType();return e.format(t,i,n)}}class pE extends uE{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=null===t?Ix(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=Vx.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return"mat2"===e?t="mat2":!0===/mat/.test(e)?t="mat4":"i"===e.charAt(0)?t="ivec4":"u"===e.charAt(0)&&(t="uvec4"),t}update(){const{array:e,value:t}=this,n=this.elementType;if("float"===n||"int"===n||"uint"===n)for(let i=0;i<e.length;i++){t[4*i]=e[i]}else if("color"===n)for(let i=0;i<e.length;i++){const n=4*i,r=e[i];t[n]=r.r,t[n+1]=r.g,t[n+2]=r.b||0}else if("mat2"===n)for(let i=0;i<e.length;i++){const n=4*i,r=e[i];t[n]=r.elements[0],t[n+1]=r.elements[1],t[n+2]=r.elements[2],t[n+3]=r.elements[3]}else if("mat3"===n)for(let i=0;i<e.length;i++){const n=16*i,r=e[i];t[n]=r.elements[0],t[n+1]=r.elements[1],t[n+2]=r.elements[2],t[n+4]=r.elements[3],t[n+5]=r.elements[4],t[n+6]=r.elements[5],t[n+8]=r.elements[6],t[n+9]=r.elements[7],t[n+10]=r.elements[8],t[n+15]=1}else if("mat4"===n)for(let i=0;i<e.length;i++){const n=16*i,r=e[i];for(let e=0;e<r.elements.length;e++)t[n+e]=r.elements[e]}else for(let i=0;i<e.length;i++){const n=4*i,r=e[i];t[n]=r.x,t[n+1]=r.y,t[n+2]=r.z||0,t[n+3]=r.w||0}}setup(e){const t=this.array.length,n=this.elementType;let i=Float32Array;const r=this.paddedType,s=e.getTypeLength(r);return"i"===n.charAt(0)&&(i=Int32Array),"u"===n.charAt(0)&&(i=Uint32Array),this.value=new i(t*s),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return k_(new dE(this,k_(e)))}}const mE=(e,t)=>k_(new pE(e,t));const fE=H_(class extends Yx{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}).setParameterLength(1);let gE,vE;class bE extends Yx{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===bE.DPR?"float":this.scope===bE.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Vx.NONE;return this.scope!==bE.SIZE&&this.scope!==bE.VIEWPORT&&this.scope!==bE.DPR||(e=Vx.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===bE.VIEWPORT?null!==t?vE.copy(t.viewport):(e.getViewport(vE),vE.multiplyScalar(e.getPixelRatio())):this.scope===bE.DPR?this._output.value=e.getPixelRatio():null!==t?(gE.width=t.width,gE.height=t.height):e.getDrawingBufferSize(gE)}setup(){const e=this.scope;let t=null;return t=e===bE.SIZE?sS(gE||(gE=new wn)):e===bE.VIEWPORT?sS(vE||(vE=new Zn)):e===bE.DPR?sS(1):rT(TE.div(_E)),this._output=t,t}generate(e){if(this.scope===bE.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(_E).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}bE.COORDINATE="coordinate",bE.VIEWPORT="viewport",bE.SIZE="size",bE.UV="uv",bE.DPR="dpr";const yE=W_(bE,bE.DPR),xE=W_(bE,bE.UV),_E=W_(bE,bE.SIZE),TE=W_(bE,bE.COORDINATE),SE=W_(bE,bE.VIEWPORT),wE=SE.zw,ME=TE.sub(SE.xy),EE=ME.div(wE),AE=$_(()=>(console.warn('THREE.TSL: "viewportResolution" is deprecated. Use "screenSize" instead.'),_E),"vec2").once()(),RE=sS(0,"uint").setName("u_cameraIndex").setGroup(eS("cameraIndex")).toVarying("v_cameraIndex"),CE=sS("float").setName("cameraNear").setGroup(nS).onRenderUpdate(({camera:e})=>e.near),NE=sS("float").setName("cameraFar").setGroup(nS).onRenderUpdate(({camera:e})=>e.far),PE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.projectionMatrix);t=mE(n).setGroup(nS).setName("cameraProjectionMatrices").element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraProjectionMatrix")}else t=sS("mat4").setName("cameraProjectionMatrix").setGroup(nS).onRenderUpdate(({camera:e})=>e.projectionMatrix);return t}).once()(),LE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.projectionMatrixInverse);t=mE(n).setGroup(nS).setName("cameraProjectionMatricesInverse").element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraProjectionMatrixInverse")}else t=sS("mat4").setName("cameraProjectionMatrixInverse").setGroup(nS).onRenderUpdate(({camera:e})=>e.projectionMatrixInverse);return t}).once()(),IE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.matrixWorldInverse);t=mE(n).setGroup(nS).setName("cameraViewMatrices").element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraViewMatrix")}else t=sS("mat4").setName("cameraViewMatrix").setGroup(nS).onRenderUpdate(({camera:e})=>e.matrixWorldInverse);return t}).once()(),DE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.matrixWorld);t=mE(n).setGroup(nS).setName("cameraWorldMatrices").element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraWorldMatrix")}else t=sS("mat4").setName("cameraWorldMatrix").setGroup(nS).onRenderUpdate(({camera:e})=>e.matrixWorld);return t}).once()(),FE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.normalMatrix);t=mE(n).setGroup(nS).setName("cameraNormalMatrices").element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraNormalMatrix")}else t=sS("mat3").setName("cameraNormalMatrix").setGroup(nS).onRenderUpdate(({camera:e})=>e.normalMatrix);return t}).once()(),UE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(let t=0,r=e.cameras.length;t<r;t++)n.push(new En);const i=mE(n).setGroup(nS).setName("cameraPositions").onRenderUpdate(({camera:e},t)=>{const n=e.cameras,i=t.array;for(let r=0,s=n.length;r<s;r++)i[r].setFromMatrixPosition(n[r].matrixWorld)});t=i.element(e.isMultiViewCamera?fE("gl_ViewID_OVR"):RE).toConst("cameraPosition")}else t=sS(new En).setName("cameraPosition").setGroup(nS).onRenderUpdate(({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld));return t}).once()(),OE=$_(({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const n=[];for(const t of e.cameras)n.push(t.viewport);t=mE(n,"vec4").setGroup(nS).setName("cameraViewports").element(RE).toConst("cameraViewport")}else t=dT(0,0,_E.x,_E.y).toConst("cameraViewport");return t}).once()(),BE=new Si;class kE extends Yx{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Vx.OBJECT,this.uniformNode=new rS(null)}getNodeType(){const e=this.scope;return e===kE.WORLD_MATRIX?"mat4":e===kE.POSITION||e===kE.VIEW_POSITION||e===kE.DIRECTION||e===kE.SCALE?"vec3":e===kE.RADIUS?"float":void 0}update(e){const t=this.object3d,n=this.uniformNode,i=this.scope;if(i===kE.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===kE.POSITION)n.value=n.value||new En,n.value.setFromMatrixPosition(t.matrixWorld);else if(i===kE.SCALE)n.value=n.value||new En,n.value.setFromMatrixScale(t.matrixWorld);else if(i===kE.DIRECTION)n.value=n.value||new En,t.getWorldDirection(n.value);else if(i===kE.VIEW_POSITION){const i=e.camera;n.value=n.value||new En,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(i.matrixWorldInverse)}else if(i===kE.RADIUS){const i=e.object.geometry;null===i.boundingSphere&&i.computeBoundingSphere(),BE.copy(i.boundingSphere).applyMatrix4(t.matrixWorld),n.value=BE.radius}}generate(e){const t=this.scope;return t===kE.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===kE.POSITION||t===kE.VIEW_POSITION||t===kE.DIRECTION||t===kE.SCALE?this.uniformNode.nodeType="vec3":t===kE.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}kE.WORLD_MATRIX="worldMatrix",kE.POSITION="position",kE.SCALE="scale",kE.VIEW_POSITION="viewPosition",kE.DIRECTION="direction",kE.RADIUS="radius";const VE=H_(kE,kE.DIRECTION).setParameterLength(1),zE=H_(kE,kE.WORLD_MATRIX).setParameterLength(1),GE=H_(kE,kE.POSITION).setParameterLength(1),HE=H_(kE,kE.SCALE).setParameterLength(1),WE=H_(kE,kE.VIEW_POSITION).setParameterLength(1),jE=H_(kE,kE.RADIUS).setParameterLength(1);class XE extends kE{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const qE=W_(XE,XE.DIRECTION),$E=W_(XE,XE.WORLD_MATRIX),YE=W_(XE,XE.POSITION),KE=W_(XE,XE.SCALE),QE=W_(XE,XE.VIEW_POSITION),ZE=W_(XE,XE.RADIUS),JE=sS(new Cn).onObjectUpdate(({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld)),eA=sS(new Li).onObjectUpdate(({object:e},t)=>t.value.copy(e.matrixWorld).invert()),tA=$_(e=>e.renderer.overrideNodes.modelViewMatrix||nA).once()().toVar("modelViewMatrix"),nA=IE.mul($E),iA=$_(e=>(e.context.isHighPrecisionModelViewMatrix=!0,sS("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),rA=$_(e=>{const t=e.context.isHighPrecisionModelViewMatrix;return sS("mat3").onObjectUpdate(({object:e,camera:n})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),sA=JM("position","vec3"),aA=sA.toVarying("positionLocal"),oA=sA.toVarying("positionPrevious"),lA=$_(e=>$E.mul(aA).xyz.toVarying(e.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),cA=$_(()=>aA.transformDirection($E).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),uA=$_(e=>e.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),hA=uA.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class dA extends Yx{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if("fragment"!==e.shaderStage)return"true";const{material:t}=e;return 1===t.side?"false":e.getFrontFacing()}}const pA=W_(dA),mA=eT(pA).mul(2).sub(1),fA=$_(([e],{material:t})=>{const n=t.side;return 1===n?e=e.mul(-1):2===n&&(e=e.mul(mA)),e}),gA=JM("normal","vec3"),vA=$_(e=>!1===e.geometry.hasAttribute("normal")?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),lT(0,1,0)):gA,"vec3").once()().toVar("normalLocal"),bA=uA.dFdx().cross(uA.dFdy()).normalize().toVar("normalFlat"),yA=$_(e=>{let t;return t=!0===e.material.flatShading?bA:MA(vA).toVarying("v_normalViewGeometry").normalize(),t},"vec3").once()().toVar("normalViewGeometry"),xA=$_(e=>{let t=yA.transformDirection(IE);return!0!==e.material.flatShading&&(t=t.toVarying("v_normalWorldGeometry")),t.normalize().toVar("normalWorldGeometry")},"vec3").once()(),_A=$_(({subBuildFn:e,material:t,context:n})=>{let i;return"NORMAL"===e||"VERTEX"===e?(i=yA,!0!==t.flatShading&&(i=fA(i))):i=n.setupNormal().context({getUV:null}),i},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),TA=_A.transformDirection(IE).toVar("normalWorld"),SA=$_(({subBuildFn:e,context:t})=>{let n;return n="NORMAL"===e||"VERTEX"===e?_A:t.setupClearcoatNormal().context({getUV:null}),n},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),wA=$_(([e,t=$E])=>{const n=vT(t),i=e.div(lT(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2])));return n.mul(i).xyz}),MA=$_(([e],t)=>{const n=t.renderer.overrideNodes.modelNormalViewMatrix;if(null!==n)return n.transformDirection(e);const i=JE.mul(e);return IE.transformDirection(i)}),EA=$_(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),_A)).once(["NORMAL","VERTEX"])(),AA=$_(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),TA)).once(["NORMAL","VERTEX"])(),RA=$_(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),SA)).once(["NORMAL","VERTEX"])(),CA=new Gi,NA=new Li,PA=sS(0).onReference(({material:e})=>e).onObjectUpdate(({material:e})=>e.refractionRatio),LA=sS(1).onReference(({material:e})=>e).onObjectUpdate(function({material:e,scene:t}){return e.envMap?e.envMapIntensity:t.environmentIntensity}),IA=sS(new Li).onReference(function(e){return e.material}).onObjectUpdate(function({material:e,scene:t}){const n=null!==t.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation;return n?(CA.copy(n),NA.makeRotationFromEuler(CA)):NA.identity(),NA}),DA=hA.negate().reflect(_A),FA=hA.negate().refract(_A,PA),UA=DA.transformDirection(IE).toVar("reflectVector"),OA=FA.transformDirection(IE).toVar("reflectVector"),BA=new As;class kA extends aE{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,i=null){super(e,t,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===te?UA:e.mapping===ne?OA:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),lT(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.renderer.coordinateSystem!==ln&&n.isRenderTargetTexture||(t=lT(t.x.negate(),t.yz)),IA.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const VA=H_(kA).setParameterLength(1,4).setName("cubeTexture"),zA=(e=BA,t=null,n=null,i=null)=>{let r;return e&&!0===e.isCubeTextureNode?(r=k_(e.clone()),r.referenceNode=e,null!==t&&(r.uvNode=k_(t)),null!==n&&(r.levelNode=k_(n)),null!==i&&(r.biasNode=k_(i))):r=VA(e,t,n,i),r};class GA extends Kx{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}}class HA extends Yx{static get type(){return"ReferenceNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=Vx.OBJECT}element(e){return k_(new GA(this,k_(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let t=null;t=null!==this.count?hE(null,e,this.count):Array.isArray(this.getValueFromReference())?mE(null,e):"texture"===e?lE(null):"cubeTexture"===e?zA(null):sS(null,e),null!==this.group&&t.setGroup(this.group),null!==this.name&&t.setName(this.name),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const WA=(e,t,n)=>k_(new HA(e,t,n)),jA=(e,t,n,i)=>k_(new HA(e,t,i,n));class XA extends HA{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const qA=(e,t,n=null)=>k_(new XA(e,t,n)),$A=eE(),YA=uA.dFdx(),KA=uA.dFdy(),QA=$A.dFdx(),ZA=$A.dFdy(),JA=_A,eR=KA.cross(JA),tR=JA.cross(YA),nR=eR.mul(QA.x).add(tR.mul(ZA.x)),iR=eR.mul(QA.y).add(tR.mul(ZA.y)),rR=nR.dot(nR).max(iR.dot(iR)),sR=rR.equal(0).select(0,rR.inverseSqrt()),aR=nR.mul(sR).toVar("tangentViewFrame"),oR=iR.mul(sR).toVar("bitangentViewFrame"),lR=$_(e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),JM("tangent","vec4")))(),cR=lR.xyz.toVar("tangentLocal"),uR=$_(({subBuildFn:e,geometry:t,material:n})=>{let i;return i="VERTEX"===e||t.hasAttribute("tangent")?tA.mul(dT(cR,0)).xyz.toVarying("v_tangentView").normalize():aR,!0!==n.flatShading&&(i=fA(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),hR=uR.transformDirection(IE).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),dR=$_(([e,t],{subBuildFn:n,material:i})=>{let r=e.mul(lR.w).xyz;return"NORMAL"===n&&!0!==i.flatShading&&(r=r.toVarying(t)),r}).once(["NORMAL"]),pR=dR(gA.cross(lR),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),mR=dR(vA.cross(cR),"v_bitangentLocal").normalize().toVar("bitangentLocal"),fR=$_(({subBuildFn:e,geometry:t,material:n})=>{let i;return i="VERTEX"===e||t.hasAttribute("tangent")?dR(_A.cross(uR),"v_bitangentView").normalize():oR,!0!==n.flatShading&&(i=fA(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),gR=dR(TA.cross(hR),"v_bitangentWorld").normalize().toVar("bitangentWorld"),vR=vT(uR,fR,_A).toVar("TBNViewMatrix"),bR=hA.mul(vR),yR=$_(()=>{let e=BT.cross(hA);return e=e.cross(BT).normalize(),e=zw(e,_A,UT.mul(ET.oneMinus()).oneMinus().pow2().pow2()).normalize(),e}).once()();class xR extends Zx{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=0}setup({material:e}){const{normalMapType:t,scaleNode:n}=this;let i=this.node.mul(2).sub(1);if(null!==n){let t=n;!0===e.flatShading&&(t=fA(t)),i=lT(i.xy.mul(t),i.z)}let r=null;return 1===t?r=MA(i):0===t?r=vR.mul(i).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${t}`),r=_A),r}}const _R=H_(xR).setParameterLength(1,2),TR=$_(({textureNode:e,bumpScale:t})=>{const n=t=>e.cache().context({getUV:e=>t(e.uvNode||eE()),forceUVContext:!0}),i=eT(n(e=>e));return rT(eT(n(e=>e.add(e.dFdx()))).sub(i),eT(n(e=>e.add(e.dFdy()))).sub(i)).mul(t)}),SR=$_(e=>{const{surf_pos:t,surf_norm:n,dHdxy:i}=e,r=t.dFdx().normalize(),s=n,a=t.dFdy().normalize().cross(s),o=s.cross(r),l=r.dot(a).mul(mA),c=l.sign().mul(i.x.mul(a).add(i.y.mul(o)));return l.abs().mul(n).sub(c).normalize()});class wR extends Zx{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=TR({textureNode:this.textureNode,bumpScale:e});return SR({surf_pos:uA,surf_norm:_A,dHdxy:t})}}const MR=H_(wR).setParameterLength(1,2),ER=new Map;class AR extends Yx{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=ER.get(e);return void 0===n&&(n=qA(e,t),ER.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let i=null;if(n===AR.COLOR){const e=void 0!==t.color?this.getColor(n):lT();i=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(n===AR.OPACITY){const e=this.getFloat(n);i=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(n===AR.SPECULAR_STRENGTH)i=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:eT(1);else if(n===AR.SPECULAR_INTENSITY){const e=this.getFloat(n);i=t.specularIntensityMap&&!0===t.specularIntensityMap.isTexture?e.mul(this.getTexture(n).a):e}else if(n===AR.SPECULAR_COLOR){const e=this.getColor(n);i=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(n).rgb):e}else if(n===AR.ROUGHNESS){const e=this.getFloat(n);i=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(n).g):e}else if(n===AR.METALNESS){const e=this.getFloat(n);i=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(n).b):e}else if(n===AR.EMISSIVE){const e=this.getFloat("emissiveIntensity"),r=this.getColor(n).mul(e);i=t.emissiveMap&&!0===t.emissiveMap.isTexture?r.mul(this.getTexture(n)):r}else if(n===AR.NORMAL)t.normalMap?(i=_R(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=t.normalMapType):i=t.bumpMap?MR(this.getTexture("bump").r,this.getFloat("bumpScale")):_A;else if(n===AR.CLEARCOAT){const e=this.getFloat(n);i=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(n).r):e}else if(n===AR.CLEARCOAT_ROUGHNESS){const e=this.getFloat(n);i=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(n).r):e}else if(n===AR.CLEARCOAT_NORMAL)i=t.clearcoatNormalMap?_R(this.getTexture(n),this.getCache(n+"Scale","vec2")):_A;else if(n===AR.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));i=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(n===AR.SHEEN_ROUGHNESS){const e=this.getFloat(n);i=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(n).a):e,i=i.clamp(.07,1)}else if(n===AR.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(n);i=gT(hC.x,hC.y,hC.y.negate(),hC.x).mul(e.rg.mul(2).sub(rT(1)).normalize().mul(e.b))}else i=hC;else if(n===AR.IRIDESCENCE_THICKNESS){const e=WA("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=WA("0","float",t.iridescenceThicknessRange);i=e.sub(r).mul(this.getTexture(n).g).add(r)}else i=e}else if(n===AR.TRANSMISSION){const e=this.getFloat(n);i=t.transmissionMap?e.mul(this.getTexture(n).r):e}else if(n===AR.THICKNESS){const e=this.getFloat(n);i=t.thicknessMap?e.mul(this.getTexture(n).g):e}else if(n===AR.IOR)i=this.getFloat(n);else if(n===AR.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===AR.AO)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(n===AR.LINE_DASH_OFFSET)i=t.dashOffset?this.getFloat(n):eT(0);else{const t=this.getNodeType(e);i=this.getCache(n,t)}return i}}AR.ALPHA_TEST="alphaTest",AR.COLOR="color",AR.OPACITY="opacity",AR.SHININESS="shininess",AR.SPECULAR="specular",AR.SPECULAR_STRENGTH="specularStrength",AR.SPECULAR_INTENSITY="specularIntensity",AR.SPECULAR_COLOR="specularColor",AR.REFLECTIVITY="reflectivity",AR.ROUGHNESS="roughness",AR.METALNESS="metalness",AR.NORMAL="normal",AR.CLEARCOAT="clearcoat",AR.CLEARCOAT_ROUGHNESS="clearcoatRoughness",AR.CLEARCOAT_NORMAL="clearcoatNormal",AR.EMISSIVE="emissive",AR.ROTATION="rotation",AR.SHEEN="sheen",AR.SHEEN_ROUGHNESS="sheenRoughness",AR.ANISOTROPY="anisotropy",AR.IRIDESCENCE="iridescence",AR.IRIDESCENCE_IOR="iridescenceIOR",AR.IRIDESCENCE_THICKNESS="iridescenceThickness",AR.IOR="ior",AR.TRANSMISSION="transmission",AR.THICKNESS="thickness",AR.ATTENUATION_DISTANCE="attenuationDistance",AR.ATTENUATION_COLOR="attenuationColor",AR.LINE_SCALE="scale",AR.LINE_DASH_SIZE="dashSize",AR.LINE_GAP_SIZE="gapSize",AR.LINE_WIDTH="linewidth",AR.LINE_DASH_OFFSET="dashOffset",AR.POINT_SIZE="size",AR.DISPERSION="dispersion",AR.LIGHT_MAP="light",AR.AO="ao";const RR=W_(AR,AR.ALPHA_TEST),CR=W_(AR,AR.COLOR),NR=W_(AR,AR.SHININESS),PR=W_(AR,AR.EMISSIVE),LR=W_(AR,AR.OPACITY),IR=W_(AR,AR.SPECULAR),DR=W_(AR,AR.SPECULAR_INTENSITY),FR=W_(AR,AR.SPECULAR_COLOR),UR=W_(AR,AR.SPECULAR_STRENGTH),OR=W_(AR,AR.REFLECTIVITY),BR=W_(AR,AR.ROUGHNESS),kR=W_(AR,AR.METALNESS),VR=W_(AR,AR.NORMAL),zR=W_(AR,AR.CLEARCOAT),GR=W_(AR,AR.CLEARCOAT_ROUGHNESS),HR=W_(AR,AR.CLEARCOAT_NORMAL),WR=W_(AR,AR.ROTATION),jR=W_(AR,AR.SHEEN),XR=W_(AR,AR.SHEEN_ROUGHNESS),qR=W_(AR,AR.ANISOTROPY),$R=W_(AR,AR.IRIDESCENCE),YR=W_(AR,AR.IRIDESCENCE_IOR),KR=W_(AR,AR.IRIDESCENCE_THICKNESS),QR=W_(AR,AR.TRANSMISSION),ZR=W_(AR,AR.THICKNESS),JR=W_(AR,AR.IOR),eC=W_(AR,AR.ATTENUATION_DISTANCE),tC=W_(AR,AR.ATTENUATION_COLOR),nC=W_(AR,AR.LINE_SCALE),iC=W_(AR,AR.LINE_DASH_SIZE),rC=W_(AR,AR.LINE_GAP_SIZE),sC=W_(AR,AR.LINE_WIDTH),aC=W_(AR,AR.LINE_DASH_OFFSET),oC=W_(AR,AR.POINT_SIZE),lC=W_(AR,AR.DISPERSION),cC=W_(AR,AR.LIGHT_MAP),uC=W_(AR,AR.AO),hC=sS(new wn).onReference(function(e){return e.material}).onRenderUpdate(function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}),dC=$_(e=>e.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class pC extends Yx{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let i,r;if(n===pC.VERTEX)i=e.getVertexIndex();else if(n===pC.INSTANCE)i=e.getInstanceIndex();else if(n===pC.DRAW)i=e.getDrawIndex();else if(n===pC.INVOCATION_LOCAL)i=e.getInvocationLocalIndex();else if(n===pC.INVOCATION_SUBGROUP)i=e.getInvocationSubgroupIndex();else{if(n!==pC.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+n);i=e.getSubgroupIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)r=i;else{r=fM(this).build(e,t)}return r}}pC.VERTEX="vertex",pC.INSTANCE="instance",pC.SUBGROUP="subgroup",pC.INVOCATION_LOCAL="invocationLocal",pC.INVOCATION_SUBGROUP="invocationSubgroup",pC.DRAW="draw";const mC=W_(pC,pC.VERTEX),fC=W_(pC,pC.INSTANCE),gC=W_(pC,pC.SUBGROUP),vC=W_(pC,pC.INVOCATION_SUBGROUP),bC=W_(pC,pC.INVOCATION_LOCAL),yC=W_(pC,pC.DRAW);class xC extends Yx{static get type(){return"InstanceNode"}constructor(e,t,n=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Vx.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{instanceMatrix:t,instanceColor:n}=this,{count:i}=t;let{instanceMatrixNode:r,instanceColorNode:s}=this;if(null===r){if(i<=1e3)r=hE(t.array,"mat4",Math.max(i,1)).element(fC);else{const e=new dh(t.array,16,1);this.buffer=e;const n=t.usage===sn?DM:IM,i=[n(e,"vec4",16,0),n(e,"vec4",16,4),n(e,"vec4",16,8),n(e,"vec4",16,12)];r=bT(...i)}this.instanceMatrixNode=r}if(n&&null===s){const e=new ba(n.array,3),t=n.usage===sn?DM:IM;this.bufferColor=e,s=lT(t(e,"vec3",3,0)),this.instanceColorNode=s}const a=r.mul(aA).xyz;if(aA.assign(a),e.hasGeometryAttribute("normal")){const e=wA(vA,r);vA.assign(e)}null!==this.instanceColorNode&&ST("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==sn&&null!==this.buffer&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==sn&&null!==this.bufferColor&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const _C=H_(xC).setParameterLength(2,3);class TC extends xC{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:n,instanceColor:i}=e;super(t,n,i),this.instancedMesh=e}}const SC=H_(TC).setParameterLength(1);class wC extends Yx{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=fC:this.batchingIdNode=yC);const t=$_(([e])=>{const t=tT(nE(cE(this.batchMesh._indirectTexture),0).x),n=tT(e).mod(t),i=tT(e).div(t);return cE(this.batchMesh._indirectTexture,sT(n,i)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),n=t(tT(this.batchingIdNode)),i=this.batchMesh._matricesTexture,r=tT(nE(cE(i),0).x),s=eT(n).mul(4).toInt().toVar(),a=s.mod(r),o=s.div(r),l=bT(cE(i,sT(a,o)),cE(i,sT(a.add(1),o)),cE(i,sT(a.add(2),o)),cE(i,sT(a.add(3),o))),c=this.batchMesh._colorsTexture;if(null!==c){const e=$_(([e])=>{const t=tT(nE(cE(c),0).x),n=e,i=n.mod(t),r=n.div(t);return cE(c,sT(i,r)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(n);ST("vec3","vBatchColor").assign(t)}const u=vT(l);aA.assign(l.mul(aA));const h=vA.div(lT(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),d=u.mul(h).xyz;vA.assign(d),e.hasGeometryAttribute("tangent")&&cR.mulAssign(u)}}const MC=H_(wC).setParameterLength(1);class EC extends Kx{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const n=this.storageBufferNode.structTypeNode;return n?n.getMemberType(e,t):"void"}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.isPBO&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let n;const i=e.context.assign;if(n=!1===e.isAvailable("storageBuffer")?!0!==this.node.isPBO||!0===i||!this.node.value.isInstancedBufferAttribute&&"compute"===e.shaderStage?this.node.build(e):e.generatePBO(this):super.generate(e),!0!==i){const i=this.getNodeType(e);n=e.format(n,i,t)}return n}}const AC=H_(EC).setParameterLength(2);class RC extends uE{static get type(){return"StorageBufferNode"}constructor(e,t=null,n=0){let i,r=null;t&&t.isStruct?(i="struct",r=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(n=e.count)):null===t&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(i=Rx(e.itemSize),n=e.count):i=t,super(e,i,n),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=Gx.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return AC(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(Gx.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=PM(this.value),this._varying=fM(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(null!==this.structTypeNode)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}getMemberType(e,t){return null!==this.structTypeNode?this.structTypeNode.getMemberType(e,t):"void"}generate(e){if(null!==this.structTypeNode&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:n}=this.getAttributeData(),i=n.build(e);return e.registerTransform(i,t),i}}const CC=(e,t=null,n=0)=>k_(new RC(e,t,n)),NC=new WeakMap;class PC extends Yx{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Vx.OBJECT,this.skinIndexNode=JM("skinIndex","uvec4"),this.skinWeightNode=JM("skinWeight","vec4"),this.bindMatrixNode=WA("bindMatrix","mat4"),this.bindMatrixInverseNode=WA("bindMatrixInverse","mat4"),this.boneMatricesNode=jA("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=aA,this.toPositionNode=aA,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=e.element(n.x),o=e.element(n.y),l=e.element(n.z),c=e.element(n.w),u=r.mul(t),h=mS(a.mul(i.x).mul(u),o.mul(i.y).mul(u),l.mul(i.z).mul(u),c.mul(i.w).mul(u));return s.mul(h).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=vA){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=e.element(n.x),o=e.element(n.y),l=e.element(n.z),c=e.element(n.w);let u=mS(i.x.mul(a),i.y.mul(o),i.z.mul(l),i.w.mul(c));return u=s.mul(u).mul(r),u.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=jA("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,oA)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||!0===Fx(e.object).useVelocity}setup(e){this.needsPreviousBoneMatrices(e)&&oA.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();vA.assign(t),e.hasGeometryAttribute("tangent")&&cR.assign(t)}return t}generate(e,t){if("void"!==t)return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;NC.get(t)!==e.frameId&&(NC.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const LC=e=>k_(new PC(e));class IC extends Yx{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt(0)+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const n={};for(let s=0,a=this.params.length-1;s<a;s++){const e=this.params[s],t=!0!==e.isNode&&e.name||this.getVarName(s),i=!0!==e.isNode&&e.type||"int";n[t]=XM(t,i)}const i=e.addStack();t.returnsNode=this.params[this.params.length-1](n,e),t.stackNode=i;const r=this.params[0];return!0!==r.isNode&&"function"==typeof r.update&&(t.updateNode=$_(this.params[0].update)(n)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,i=t.stackNode;for(let a=0,o=n.length-1;a<o;a++){const i=n[a];let r,s=!1,o=null,l=null,c=null,u=null,h=null,d=null;if(i.isNode?"bool"===i.getNodeType(e)?(s=!0,u="bool",l=i.build(e,u)):(u="int",c=this.getVarName(a),o="0",l=i.build(e,u),h="<"):(u=i.type||"int",c=i.name||this.getVarName(a),o=i.start,l=i.end,h=i.condition,d=i.update,"number"==typeof o?o=e.generateConst(u,o):o&&o.isNode&&(o=o.build(e,u)),"number"==typeof l?l=e.generateConst(u,l):l&&l.isNode&&(l=l.build(e,u)),void 0!==o&&void 0===l?(o+=" - 1",l="0",h=">="):void 0!==l&&void 0===o&&(o="0",h="<"),void 0===h&&(h=Number(o)>Number(l)?">=":"<")),s)r=`while ( ${l} )`;else{const n={start:o,end:l},i=n.start,s=n.end;let a;const p=()=>h.includes("<")?"+=":"-=";if(null!=d)switch(typeof d){case"function":a=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":a=c+" "+p()+" "+e.generateConst(u,d);break;case"string":a=c+" "+d;break;default:d.isNode?a=c+" "+p()+" "+d.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),a="break /* invalid update */")}else d="int"===u||"uint"===u?h.includes("<")?"++":"--":p()+" 1.",a=c+" "+d;r=`for ( ${e.getVar(u,c)+" = "+i}; ${c+" "+h+" "+s}; ${a} )`}e.addFlowCode((0===a?"\n":"")+e.tab+r+" {\n\n").addFlowTab()}const r=i.build(e,"void"),s=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+r);for(let a=0,o=this.params.length-1;a<o;a++)e.addFlowCode((0===a?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),s}}const DC=(...e)=>k_(new IC(G_(e,"int"))).toStack(),FC=()=>XM("break").toStack(),UC=new WeakMap,OC=new Zn,BC=$_(({bufferMap:e,influence:t,stride:n,width:i,depth:r,offset:s})=>{const a=tT(mC).mul(n).add(s),o=a.div(i),l=a.sub(o.mul(i));return cE(e,sT(l,o)).depth(r).xyz.mul(t)});class kC extends Yx{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=sS(1),this.updateType=Vx.OBJECT}setup(e){const{geometry:t}=e,n=void 0!==t.morphAttributes.position,i=t.hasAttribute("normal")&&void 0!==t.morphAttributes.normal,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,s=void 0!==r?r.length:0,{texture:a,stride:o,size:l}=function(e){const t=void 0!==e.morphAttributes.position,n=void 0!==e.morphAttributes.normal,i=void 0!==e.morphAttributes.color,r=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,s=void 0!==r?r.length:0;let a=UC.get(e);if(void 0===a||a.count!==s){void 0!==a&&a.texture.dispose();const o=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],c=e.morphAttributes.color||[];let u=0;!0===t&&(u=1),!0===n&&(u=2),!0===i&&(u=3);let h=e.attributes.position.count*u,d=1;const p=4096;h>p&&(d=Math.ceil(h/p),h=p);const m=new Float32Array(h*d*4*s),f=new ti(m,h,d,s);f.type=Te,f.needsUpdate=!0;const g=4*u;for(let b=0;b<s;b++){const y=o[b],x=l[b],_=c[b],T=h*d*4*b;for(let S=0;S<y.count;S++){const w=S*g;!0===t&&(OC.fromBufferAttribute(y,S),m[T+w+0]=OC.x,m[T+w+1]=OC.y,m[T+w+2]=OC.z,m[T+w+3]=0),!0===n&&(OC.fromBufferAttribute(x,S),m[T+w+4]=OC.x,m[T+w+5]=OC.y,m[T+w+6]=OC.z,m[T+w+7]=0),!0===i&&(OC.fromBufferAttribute(_,S),m[T+w+8]=OC.x,m[T+w+9]=OC.y,m[T+w+10]=OC.z,m[T+w+11]=4===_.itemSize?OC.w:1)}}function v(){f.dispose(),UC.delete(e),e.removeEventListener("dispose",v)}a={count:s,texture:f,stride:u,size:new wn(h,d)},UC.set(e,a),e.addEventListener("dispose",v)}return a}(t);!0===n&&aA.mulAssign(this.morphBaseInfluence),!0===i&&vA.mulAssign(this.morphBaseInfluence);const c=tT(l.width);DC(s,({i:e})=>{const t=eT(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(cE(this.mesh.morphTexture,sT(tT(e).add(1),tT(fC))).r):t.assign(WA("morphTargetInfluences","float").element(e).toVar()),Q_(t.notEqual(0),()=>{!0===n&&aA.addAssign(BC({bufferMap:a,influence:t,stride:o,width:c,depth:e,offset:tT(0)})),!0===i&&vA.addAssign(BC({bufferMap:a,influence:t,stride:o,width:c,depth:e,offset:tT(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((e,t)=>e+t,0)}}const VC=H_(kC).setParameterLength(1);class zC extends Yx{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class GC extends zC{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class HC extends nM{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,i=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n={directDiffuse:lT().toVar("directDiffuse"),directSpecular:lT().toVar("directSpecular"),indirectDiffuse:lT().toVar("indirectDiffuse"),indirectSpecular:lT().toVar("indirectSpecular")};return{radiance:lT().toVar("radiance"),irradiance:lT().toVar("irradiance"),iblIrradiance:lT().toVar("iblIrradiance"),ambientOcclusion:eT(1).toVar("ambientOcclusion"),reflectedLight:n,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const WC=H_(HC);class jC extends zC{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}const XC=new wn;class qC extends aE{static get type(){return"ViewportTextureNode"}constructor(e=xE,t=null,n=null){let i=null;null===n?(i=new Ao,i.minFilter=me,n=i):i=n,super(n,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=i,this.isOutputTextureNode=!0,this.updateBeforeType=Vx.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(e=null){let t,n;if(this.referenceNode?(t=this.referenceNode.defaultFramebuffer,n=this.referenceNode._cacheTextures):(t=this.defaultFramebuffer,n=this._cacheTextures),null===e)return t;if(!1===n.has(e)){const i=t.clone();n.set(e,i)}return n.get(e)}updateReference(e){const t=e.renderer.getRenderTarget();return this.value=this.getTextureForReference(t),this.value}updateBefore(e){const t=e.renderer,n=t.getRenderTarget();null===n?t.getDrawingBufferSize(XC):XC.set(n.width,n.height);const i=this.getTextureForReference(n);i.image.width===XC.width&&i.image.height===XC.height||(i.image.width=XC.width,i.image.height=XC.height,i.needsUpdate=!0);const r=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(i),i.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const $C=H_(qC).setParameterLength(0,3),YC=H_(qC,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let KC=null;class QC extends qC{static get type(){return"ViewportDepthTextureNode"}constructor(e=xE,t=null){null===KC&&(KC=new Lo),super(e,t,KC)}getTextureForReference(){return KC}}const ZC=H_(QC).setParameterLength(0,2);class JC extends Yx{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===JC.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let i=null;if(t===JC.DEPTH_BASE)null!==n&&(i=rN().assign(n));else if(t===JC.DEPTH)i=e.isPerspectiveCamera?tN(uA.z,CE,NE):eN(uA.z,CE,NE);else if(t===JC.LINEAR_DEPTH)if(null!==n)if(e.isPerspectiveCamera){const e=nN(n,CE,NE);i=eN(e,CE,NE)}else i=n;else i=eN(uA.z,CE,NE);return i}}JC.DEPTH_BASE="depthBase",JC.DEPTH="depth",JC.LINEAR_DEPTH="linearDepth";const eN=(e,t,n)=>e.add(t).div(t.sub(n)),tN=(e,t,n)=>t.add(e).mul(n).div(n.sub(t).mul(e)),nN=(e,t,n)=>t.mul(n).div(n.sub(t).mul(e).sub(n)),iN=(e,t,n)=>{t=t.max(1e-6).toVar();const i=ZS(e.negate().div(t)),r=ZS(n.div(t));return i.div(r)},rN=H_(JC,JC.DEPTH_BASE),sN=W_(JC,JC.DEPTH),aN=H_(JC,JC.LINEAR_DEPTH).setParameterLength(0,1),oN=aN(ZC());sN.assign=e=>rN(e);class lN extends Yx{static get type(){return"ClippingNode"}constructor(e=lN.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:i}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===lN.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===lN.HARDWARE?this.setupHardwareClipping(i,e):this.setupDefault(n,i)}setupAlphaToCoverage(e,t){return $_(()=>{const n=eT().toVar("distanceToPlane"),i=eT().toVar("distanceToGradient"),r=eT(1).toVar("clipOpacity"),s=t.length;if(!1===this.hardwareClipping&&s>0){const e=mE(t).setGroup(nS);DC(s,({i:t})=>{const s=e.element(t);n.assign(uA.dot(s.xyz).negate().add(s.w)),i.assign(n.fwidth().div(2)),r.mulAssign(jw(i.negate(),i,n))})}const a=e.length;if(a>0){const t=mE(e).setGroup(nS),s=eT(1).toVar("intersectionClipOpacity");DC(a,({i:e})=>{const r=t.element(e);n.assign(uA.dot(r.xyz).negate().add(r.w)),i.assign(n.fwidth().div(2)),s.mulAssign(jw(i.negate(),i,n).oneMinus())}),r.mulAssign(s.oneMinus())}wT.a.mulAssign(r),wT.a.equal(0).discard()})()}setupDefault(e,t){return $_(()=>{const n=t.length;if(!1===this.hardwareClipping&&n>0){const e=mE(t).setGroup(nS);DC(n,({i:t})=>{const n=e.element(t);uA.dot(n.xyz).greaterThan(n.w).discard()})}const i=e.length;if(i>0){const t=mE(e).setGroup(nS),n=iT(!0).toVar("clipped");DC(i,({i:e})=>{const i=t.element(e);n.assign(uA.dot(i.xyz).greaterThan(i.w).and(n))}),n.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),$_(()=>{const i=mE(e).setGroup(nS),r=fE(t.getClipDistance());DC(n,({i:e})=>{const t=i.element(e),n=uA.dot(t.xyz).sub(t.w).negate();r.element(e).assign(n)})})()}}lN.ALPHA_TO_COVERAGE="alphaToCoverage",lN.DEFAULT="default",lN.HARDWARE="hardware";const cN=$_(([e])=>rw(gS(1e4,sw(gS(17,e.x).add(gS(.1,e.y)))).mul(mS(.1,hw(sw(gS(13,e.y).add(e.x))))))),uN=$_(([e])=>cN(rT(cN(e.xy),e.z))),hN=$_(([e])=>{const t=Aw(pw(gw(e.xyz)),pw(vw(e.xyz))),n=eT(1).div(eT(.05).mul(t)).toVar("pixScale"),i=rT(KS(tw(ZS(n))),KS(nw(ZS(n)))),r=rT(uN(tw(i.x.mul(e.xyz))),uN(tw(i.y.mul(e.xyz)))),s=rw(ZS(n)),a=mS(gS(s.oneMinus(),r.x),gS(s,r.y)),o=Ew(s,s.oneMinus()),l=lT(a.mul(a).div(gS(2,o).mul(fS(1,o))),a.sub(gS(.5,o)).div(fS(1,o)),fS(1,fS(1,a).mul(fS(1,a)).div(gS(2,o).mul(fS(1,o))))),c=a.lessThan(o.oneMinus()).select(a.lessThan(o).select(l.x,l.y),l.z);return Gw(c,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class dN extends ZM{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let n;return n=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new Zn(1,1,1,1)),n}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const pN=(e=0)=>k_(new dN(e)),mN=$_(([e,t])=>Ew(1,e.oneMinus().div(t)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),fN=$_(([e,t])=>Ew(e.div(t.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),gN=$_(([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),vN=$_(([e,t])=>zw(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),Rw(.5,e))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),bN=$_(([e,t])=>{const n=t.a.add(e.a.mul(t.a.oneMinus()));return dT(t.rgb.mul(t.a).add(e.rgb.mul(e.a).mul(t.a.oneMinus())).div(n),n)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),yN=$_(([e])=>dT(e.rgb.mul(e.a),e.a),{color:"vec4",return:"vec4"}),xN=$_(([e])=>(Q_(e.a.equal(0),()=>dT(0)),dT(e.rgb.div(e.a),e.a)),{color:"vec4",return:"vec4"});class _N extends Ar{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+wx(this)}build(e){this.setup(e)}setupObserver(e){return new yx(e)}setup(e){e.context.setupNormal=()=>pM(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,n=t.getRenderTarget();e.addStack();const i=pM(this.setupVertex(e),"VERTEX"),r=this.vertexNode||i;let s;e.stack.outputNode=r,this.setupHardwareClipping(e),null!==this.geometryNode&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();const a=this.setupClipping(e);if(!0!==this.depthWrite&&!0!==this.depthTest||(null!==n?!0===n.depthBuffer&&this.setupDepth(e):!0===t.depth&&this.setupDepth(e)),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const i=this.setupLighting(e);null!==a&&e.stack.add(a);const r=dT(i,wT.a).max(0);s=this.setupOutput(e,r),GT.assign(s);const o=null!==this.outputNode;if(o&&(s=this.outputNode),null!==n){const e=t.getMRT(),n=this.mrtNode;null!==e?(o&&GT.assign(s),s=e,null!==n&&(s=e.merge(n))):null!==n&&(s=n)}}else{let t=this.fragmentNode;!0!==t.isOutputStructNode&&(t=dT(t)),s=this.setupOutput(e,t)}e.stack.outputNode=s,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{unionPlanes:t,intersectionPlanes:n}=e.clippingContext;let i=null;if(t.length>0||n.length>0){const t=e.renderer.samples;this.alphaToCoverage&&t>1?i=k_(new lN(lN.ALPHA_TO_COVERAGE)):e.stack.add(k_(new lN))}return i}setupHardwareClipping(e){if(this.hardwareClipping=!1,null===e.clippingContext)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(k_(new lN(lN.HARDWARE))),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:n}=e;let i=this.depthNode;if(null===i){const e=t.getMRT();e&&e.has("depth")?i=e.get("depth"):!0===t.logarithmicDepthBuffer&&(i=n.isPerspectiveCamera?iN(uA.z,CE,NE):eN(uA.z,CE,NE))}null!==i&&sN.assign(i).toStack()}setupPositionView(){return tA.mul(aA).xyz}setupModelViewProjection(){return PE.mul(uA)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),dC}setupPosition(e){const{object:t,geometry:n}=e;if((n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&VC(t).toStack(),!0===t.isSkinnedMesh&&LC(t).toStack(),this.displacementMap){const e=qA("displacementMap","texture"),t=qA("displacementScale","float"),n=qA("displacementBias","float");aA.addAssign(vA.normalize().mul(e.x.mul(t).add(n)))}return t.isBatchedMesh&&MC(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&SC(t).toStack(),null!==this.positionNode&&aA.assign(pM(this.positionNode,"POSITION","vec3")),aA}setupDiffuseColor({object:e,geometry:t}){null!==this.maskNode&&iT(this.maskNode).not().discard();let n=this.colorNode?dT(this.colorNode):CR;if(!0===this.vertexColors&&t.hasAttribute("color")&&(n=n.mul(pN())),e.instanceColor){n=ST("vec3","vInstanceColor").mul(n)}if(e.isBatchedMesh&&e._colorsTexture){n=ST("vec3","vBatchColor").mul(n)}wT.assign(n);const i=this.opacityNode?eT(this.opacityNode):LR;wT.a.assign(wT.a.mul(i));let r=null;(null!==this.alphaTestNode||this.alphaTest>0)&&(r=null!==this.alphaTestNode?eT(this.alphaTestNode):RR,wT.a.lessThanEqual(r).discard()),!0===this.alphaHash&&wT.a.lessThan(hN(aA)).discard();!1===this.transparent&&1===this.blending&&!1===this.alphaToCoverage?wT.a.assign(1):null===r&&wT.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return!0===this.lights?lT(0):wT.rgb}setupNormal(){return this.normalNode?lT(this.normalNode):VR}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?qA("envMap","cubeTexture"):qA("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new jC(cC)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const i=this.setupLightMap(e);if(i&&i.isLightingNode&&t.push(i),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:uC;t.push(new GC(e))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:i,emissiveNode:r}=this,s=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let a=this.setupOutgoingLight(e);if(s&&s.getScope().hasLights){const t=this.setupLightingModel(e)||null;a=WC(s,t,n,i)}else null!==n&&(a=lT(null!==i?zw(a,n,i):n));return(r&&!0===r.isNode||t.emissive&&!0===t.emissive.isColor)&&(MT.assign(lT(r||PR)),a=a.add(MT)),a}setupFog(e,t){const n=e.fogNode;return n&&(GT.assign(t),t=dT(n.toVar())),t}setupPremultipliedAlpha(e,t){return yN(t)}setupOutput(e,t){return!0===this.fog&&(t=this.setupFog(e,t)),!0===this.premultipliedAlpha&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const n in e){const t=e[n];void 0===this[n]&&(this[n]=t,t&&t.clone&&(this[n]=t.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,n)&&void 0!==t[n].get&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const n=Ar.prototype.toJSON.call(this,e),i=Mx(this);n.inputNodes={};for(const{property:s,childNode:a}of i)n.inputNodes[s]=a.toJSON(e).uuid;function r(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(t){const t=r(e.textures),i=r(e.images),s=r(e.nodes);t.length>0&&(n.textures=t),i.length>0&&(n.images=i),s.length>0&&(n.nodes=s)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const TN=new io;class SN extends _N{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(TN),this.setValues(e)}}const wN=new vc;class MN extends _N{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(wN),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?eT(this.offsetNode):aC,t=this.dashScaleNode?eT(this.dashScaleNode):nC,n=this.dashSizeNode?eT(this.dashSizeNode):iC,i=this.gapSizeNode?eT(this.gapSizeNode):rC;HT.assign(n),WT.assign(i);const r=fM(JM("lineDistance").mul(t));(e?r.add(e):r).mod(HT.add(WT)).greaterThan(HT).discard()}}let EN=null;class AN extends qC{static get type(){return"ViewportSharedTextureNode"}constructor(e=xE,t=null){null===EN&&(EN=new Ao),super(e,t,EN)}getTextureForReference(){return EN}updateReference(){return this}}const RN=H_(AN).setParameterLength(0,2),CN=new vc;const NN=e=>k_(e).mul(.5).add(.5),PN=new dc;class LN extends _N{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(PN),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?eT(this.opacityNode):LR;wT.assign(TM(dT(NN(_A),e),Ut))}}const IN=$_(([e=cA])=>{const t=e.z.atan(e.x).mul(1/(2*Math.PI)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return rT(t,n)});class DN extends Rs{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,i=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new ms(5,5,5),s=IN(cA),a=new _N;a.colorNode=lE(t,s,0),a.side=1,a.blending=0;const o=new ds(r,a),l=new Ds;l.add(o),t.minFilter===me&&(t.minFilter=de);const c=new Es(1,10,this),u=e.getMRT();return e.setMRT(null),c.update(e,l),e.setMRT(u),t.minFilter=n,t.currentGenerateMipmaps=i,o.geometry.dispose(),o.material.dispose(),this}}const FN=new WeakMap;class UN extends Zx{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=zA(null);const t=new As;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Vx.RENDER}updateBefore(e){const{renderer:t,material:n}=e,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const e=i.isTextureNode?i.value:n[i.property];if(e&&e.isTexture){const n=e.mapping;if(n===ie||n===re){if(FN.has(e)){const t=FN.get(e);BN(t,e.mapping),this._cubeTexture=t}else{const n=e.image;if(function(e){return null!=e&&e.height>0}(n)){const i=new DN(n.height);i.fromEquirectangularTexture(t,e),BN(i.texture,e.mapping),this._cubeTexture=i.texture,FN.set(e,i.texture),e.addEventListener("dispose",ON)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function ON(e){const t=e.target;t.removeEventListener("dispose",ON);const n=FN.get(t);void 0!==n&&(FN.delete(t),n.dispose())}function BN(e,t){t===ie?e.mapping=te:t===re&&(e.mapping=ne)}const kN=H_(UN).setParameterLength(1);class VN extends zC{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=kN(this.envNode)}}class zN extends zC{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=eT(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class GN{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class HN extends GN{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,n=e.reflectedLight,i=e.irradianceLightMap;n.indirectDiffuse.assign(dT(0)),i?n.indirectDiffuse.addAssign(i):n.indirectDiffuse.addAssign(dT(1,1,1,0)),n.indirectDiffuse.mulAssign(t),n.indirectDiffuse.mulAssign(wT.rgb)}finish(e){const{material:t,context:n}=e,i=n.outgoingLight,r=e.context.environment;if(r)switch(t.combine){case 0:i.rgb.assign(zw(i.rgb,i.rgb.mul(r.rgb),UR.mul(OR)));break;case 1:i.rgb.assign(zw(i.rgb,r.rgb,UR.mul(OR)));break;case 2:i.rgb.addAssign(r.rgb.mul(UR.mul(OR)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",t.combine)}}}const WN=new Rr;class jN extends _N{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(WN),this.setValues(e)}setupNormal(){return fA(yA)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new VN(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new zN(cC)),t}setupOutgoingLight(){return wT.rgb}setupLightingModel(){return new HN}}const XN=$_(({f0:e,f90:t,dotVH:n})=>{const i=n.mul(-5.55473).sub(6.98316).mul(n).exp2();return e.mul(i.oneMinus()).add(t.mul(i))}),qN=$_(e=>e.diffuseColor.mul(1/Math.PI)),$N=$_(({dotNH:e})=>zT.mul(eT(.5)).add(1).mul(eT(1/Math.PI)).mul(e.pow(zT))),YN=$_(({lightDirection:e})=>{const t=e.add(hA).normalize(),n=_A.dot(t).clamp(),i=hA.dot(t).clamp(),r=XN({f0:kT,f90:1,dotVH:i}),s=eT(.25),a=$N({dotNH:n});return r.mul(s).mul(a)});class KN extends HN{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const i=_A.dot(e).clamp().mul(t);n.directDiffuse.addAssign(i.mul(qN({diffuseColor:wT.rgb}))),!0===this.specular&&n.directSpecular.addAssign(i.mul(YN({lightDirection:e})).mul(UR))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(qN({diffuseColor:wT}))),i.indirectDiffuse.mulAssign(t)}}const QN=new pc;class ZN extends _N{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(QN),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new VN(t):null}setupLightingModel(){return new KN(!1)}}const JN=new uc;class eP extends _N{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(JN),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new VN(t):null}setupLightingModel(){return new KN}setupVariants(){const e=(this.shininessNode?eT(this.shininessNode):NR).max(1e-4);zT.assign(e);const t=this.specularNode||IR;kT.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const tP=$_(e=>{if(!1===e.geometry.hasAttribute("normal"))return eT(0);const t=yA.dFdx().abs().max(yA.dFdy().abs());return t.x.max(t.y).max(t.z)}),nP=$_(e=>{const{roughness:t}=e,n=tP();let i=t.max(.0525);return i=i.add(n),i=i.min(1),i}),iP=$_(({alpha:e,dotNL:t,dotNV:n})=>{const i=e.pow2(),r=t.mul(i.add(i.oneMinus().mul(n.pow2())).sqrt()),s=n.mul(i.add(i.oneMinus().mul(t.pow2())).sqrt());return vS(.5,r.add(s).max(zS))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),rP=$_(({alphaT:e,alphaB:t,dotTV:n,dotBV:i,dotTL:r,dotBL:s,dotNV:a,dotNL:o})=>{const l=o.mul(lT(e.mul(n),t.mul(i),a).length()),c=a.mul(lT(e.mul(r),t.mul(s),o).length());return vS(.5,l.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),sP=$_(({alpha:e,dotNH:t})=>{const n=e.pow2(),i=t.pow2().mul(n.oneMinus()).oneMinus();return n.div(i.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),aP=eT(1/Math.PI),oP=$_(({alphaT:e,alphaB:t,dotNH:n,dotTH:i,dotBH:r})=>{const s=e.mul(t),a=lT(t.mul(i),e.mul(r),s.mul(n)),o=a.dot(a),l=s.div(o);return aP.mul(s.mul(l.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),lP=$_(({lightDirection:e,f0:t,f90:n,roughness:i,f:r,normalView:s=_A,USE_IRIDESCENCE:a,USE_ANISOTROPY:o})=>{const l=i.pow2(),c=e.add(hA).normalize(),u=s.dot(e).clamp(),h=s.dot(hA).clamp(),d=s.dot(c).clamp(),p=hA.dot(c).clamp();let m,f,g=XN({f0:t,f90:n,dotVH:p});if(U_(a)&&(g=LT.mix(g,r)),U_(o)){const t=OT.dot(e),n=OT.dot(hA),i=OT.dot(c),r=BT.dot(e),s=BT.dot(hA),a=BT.dot(c);m=rP({alphaT:FT,alphaB:l,dotTV:n,dotBV:s,dotTL:t,dotBL:r,dotNV:h,dotNL:u}),f=oP({alphaT:FT,alphaB:l,dotNH:d,dotTH:i,dotBH:a})}else m=iP({alpha:l,dotNL:u,dotNV:h}),f=sP({alpha:l,dotNH:d});return g.mul(m).mul(f)}),cP=$_(({roughness:e,dotNV:t})=>{const n=dT(-1,-.0275,-.572,.022),i=dT(1,.0425,1.04,-.04),r=e.mul(n).add(i),s=r.x.mul(r.x).min(t.mul(-9.28).exp2()).mul(r.x).add(r.y);return rT(-1.04,1.04).mul(s).add(r.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),uP=$_(e=>{const{dotNV:t,specularColor:n,specularF90:i,roughness:r}=e,s=cP({dotNV:t,roughness:r});return n.mul(s.x).add(i.mul(s.y))}),hP=$_(({f:e,f90:t,dotVH:n})=>{const i=n.oneMinus().saturate(),r=i.mul(i),s=i.mul(r,r).clamp(0,.9999);return e.sub(lT(t).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),dP=$_(({roughness:e,dotNH:t})=>{const n=e.pow2(),i=eT(1).div(n),r=t.pow2().oneMinus().max(.0078125);return eT(2).add(i).mul(r.pow(i.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),pP=$_(({dotNV:e,dotNL:t})=>eT(1).div(eT(4).mul(t.add(e).sub(t.mul(e))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),mP=$_(({lightDirection:e})=>{const t=e.add(hA).normalize(),n=_A.dot(e).clamp(),i=_A.dot(hA).clamp(),r=_A.dot(t).clamp(),s=dP({roughness:PT,dotNH:r}),a=pP({dotNV:i,dotNL:n});return NT.mul(s).mul(a)}),fP=$_(({N:e,V:t,roughness:n})=>{const i=e.dot(t).saturate(),r=rT(n,i.oneMinus().sqrt());return r.assign(r.mul(.984375).add(.0078125)),r}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),gP=$_(({f:e})=>{const t=e.length();return Aw(t.mul(t).add(e.z).div(t.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),vP=$_(({v1:e,v2:t})=>{const n=e.dot(t),i=n.abs().toVar(),r=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),s=i.add(4.1616724).mul(i).add(3.417594).toVar(),a=r.div(s),o=n.greaterThan(0).select(a,Aw(n.mul(n).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return e.cross(t).mul(o)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),bP=$_(({N:e,V:t,P:n,mInv:i,p0:r,p1:s,p2:a,p3:o})=>{const l=s.sub(r).toVar(),c=o.sub(r).toVar(),u=l.cross(c),h=lT().toVar();return Q_(u.dot(n.sub(r)).greaterThanEqual(0),()=>{const l=t.sub(e.mul(t.dot(e))).normalize(),c=e.cross(l).negate(),u=i.mul(vT(l,c,e).transpose()).toVar(),d=u.mul(r.sub(n)).normalize().toVar(),p=u.mul(s.sub(n)).normalize().toVar(),m=u.mul(a.sub(n)).normalize().toVar(),f=u.mul(o.sub(n)).normalize().toVar(),g=lT(0).toVar();g.addAssign(vP({v1:d,v2:p})),g.addAssign(vP({v1:p,v2:m})),g.addAssign(vP({v1:m,v2:f})),g.addAssign(vP({v1:f,v2:d})),h.assign(lT(gP({f:g})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),yP=$_(({P:e,p0:t,p1:n,p2:i,p3:r})=>{const s=n.sub(t).toVar(),a=r.sub(t).toVar(),o=s.cross(a),l=lT().toVar();return Q_(o.dot(e.sub(t)).greaterThanEqual(0),()=>{const s=t.sub(e).normalize().toVar(),a=n.sub(e).normalize().toVar(),o=i.sub(e).normalize().toVar(),c=r.sub(e).normalize().toVar(),u=lT(0).toVar();u.addAssign(vP({v1:s,v2:a})),u.addAssign(vP({v1:a,v2:o})),u.addAssign(vP({v1:o,v2:c})),u.addAssign(vP({v1:c,v2:s})),l.assign(lT(gP({f:u.abs()})))}),l}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"P",type:"vec3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),xP=1/6,_P=e=>gS(xP,gS(e,gS(e,e.negate().add(3)).sub(3)).add(1)),TP=e=>gS(xP,gS(e,gS(e,gS(3,e).sub(6))).add(4)),SP=e=>gS(xP,gS(e,gS(e,gS(-3,e).add(3)).add(3)).add(1)),wP=e=>gS(xP,Dw(e,3)),MP=e=>_P(e).add(TP(e)),EP=e=>SP(e).add(wP(e)),AP=e=>mS(-1,TP(e).div(_P(e).add(TP(e)))),RP=e=>mS(1,wP(e).div(SP(e).add(wP(e)))),CP=(e,t,n)=>{const i=e.uvNode,r=gS(i,t.zw).add(.5),s=tw(r),a=rw(r),o=MP(a.x),l=EP(a.x),c=AP(a.x),u=RP(a.x),h=AP(a.y),d=RP(a.y),p=rT(s.x.add(c),s.y.add(h)).sub(.5).mul(t.xy),m=rT(s.x.add(u),s.y.add(h)).sub(.5).mul(t.xy),f=rT(s.x.add(c),s.y.add(d)).sub(.5).mul(t.xy),g=rT(s.x.add(u),s.y.add(d)).sub(.5).mul(t.xy),v=MP(a.y).mul(mS(o.mul(e.sample(p).level(n)),l.mul(e.sample(m).level(n)))),b=EP(a.y).mul(mS(o.mul(e.sample(f).level(n)),l.mul(e.sample(g).level(n))));return v.add(b)},NP=$_(([e,t])=>{const n=rT(e.size(tT(t))),i=rT(e.size(tT(t.add(1)))),r=vS(1,n),s=vS(1,i),a=CP(e,dT(r,n),tw(t)),o=CP(e,dT(s,i),nw(t));return rw(t).mix(a,o)}),PP=$_(([e,t])=>{const n=t.mul(rE(e));return NP(e,n)}),LP=$_(([e,t,n,i,r])=>{const s=lT(Ww(t.negate(),iw(e),vS(1,i))),a=lT(pw(r[0].xyz),pw(r[1].xyz),pw(r[2].xyz));return iw(s).mul(n.mul(a))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),IP=$_(([e,t])=>e.mul(Gw(t.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),DP=YC(),FP=YC(),UP=$_(([e,t,n],{material:i})=>{const r=(1===i.side?DP:FP).sample(e),s=ZS(_E.x).mul(IP(t,n));return NP(r,s)}),OP=$_(([e,t,n])=>(Q_(n.notEqual(0),()=>{const i=QS(t).negate().div(n);return YS(i.negate().mul(e))}),lT(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),BP=$_(([e,t,n,i,r,s,a,o,l,c,u,h,d,p,m])=>{let f,g;if(m){f=dT().toVar(),g=lT().toVar();const r=u.sub(1).mul(m.mul(.025)),s=lT(u.sub(r),u,u.add(r));DC({start:0,end:3},({i:r})=>{const u=s.element(r),m=LP(e,t,h,u,o),v=a.add(m),b=c.mul(l.mul(dT(v,1))),y=rT(b.xy.div(b.w)).toVar();y.addAssign(1),y.divAssign(2),y.assign(rT(y.x,y.y.oneMinus()));const x=UP(y,n,u);f.element(r).assign(x.element(r)),f.a.addAssign(x.a),g.element(r).assign(i.element(r).mul(OP(pw(m),d,p).element(r)))}),f.a.divAssign(3)}else{const r=LP(e,t,h,u,o),s=a.add(r),m=c.mul(l.mul(dT(s,1))),v=rT(m.xy.div(m.w)).toVar();v.addAssign(1),v.divAssign(2),v.assign(rT(v.x,v.y.oneMinus())),f=UP(v,n,u),g=i.mul(OP(pw(r),d,p))}const v=g.rgb.mul(f.rgb),b=e.dot(t).clamp(),y=lT(uP({dotNV:b,specularColor:r,specularF90:s,roughness:n})),x=g.r.add(g.g,g.b).div(3);return dT(y.oneMinus().mul(v),f.a.oneMinus().mul(x).oneMinus())}),kP=vT(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),VP=(e,t)=>e.sub(t).div(e.add(t)).pow2(),zP=$_(({outsideIOR:e,eta2:t,cosTheta1:n,thinFilmThickness:i,baseF0:r})=>{const s=zw(e,t,jw(0,.03,i)),a=e.div(s).pow2().mul(n.pow2().oneMinus()).oneMinus();Q_(a.lessThan(0),()=>lT(1));const o=a.sqrt(),l=VP(s,e),c=XN({f0:l,f90:1,dotVH:n}),u=c.oneMinus(),h=s.lessThan(e).select(Math.PI,0),d=eT(Math.PI).sub(h),p=(e=>{const t=e.sqrt();return lT(1).add(t).div(lT(1).sub(t))})(r.clamp(0,.9999)),m=VP(p,s.toVec3()),f=XN({f0:m,f90:1,dotVH:o}),g=lT(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),v=s.mul(i,o,2),b=lT(d).add(g),y=c.mul(f).clamp(1e-5,.9999),x=y.sqrt(),_=u.pow2().mul(f).div(lT(1).sub(y)),T=c.add(_).toVar(),S=_.sub(u).toVar();return DC({start:1,end:2,condition:"<=",name:"m"},({m:e})=>{S.mulAssign(x);const t=((e,t)=>{const n=e.mul(2*Math.PI*1e-9),i=lT(54856e-17,44201e-17,52481e-17),r=lT(1681e3,1795300,2208400),s=lT(43278e5,93046e5,66121e5),a=eT(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(n.mul(2239900).add(t.x).cos()).mul(n.pow2().mul(-45282e5).exp());let o=i.mul(s.mul(2*Math.PI).sqrt()).mul(r.mul(n).add(t).cos()).mul(n.pow2().negate().mul(s).exp());return o=lT(o.x.add(a),o.y,o.z).div(1.0685e-7),kP.mul(o)})(eT(e).mul(v),eT(e).mul(b)).mul(2);T.addAssign(S.mul(t))}),T.max(lT(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),GP=$_(({normal:e,viewDir:t,roughness:n})=>{const i=e.dot(t).saturate(),r=n.pow2(),s=tM(n.lessThan(.25),eT(-339.2).mul(r).add(eT(161.4).mul(n)).sub(25.9),eT(-8.48).mul(r).add(eT(14.3).mul(n)).sub(9.95)),a=tM(n.lessThan(.25),eT(44).mul(r).sub(eT(23.7).mul(n)).add(3.26),eT(1.97).mul(r).sub(eT(3.27).mul(n)).add(.72));return tM(n.lessThan(.25),0,eT(.1).mul(n).sub(.025)).add(s.mul(i).add(a).exp()).mul(1/Math.PI).saturate()}),HP=lT(.04),WP=eT(1);class jP extends GN{constructor(e=!1,t=!1,n=!1,i=!1,r=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=i,this.transmission=r,this.dispersion=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=lT().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=lT().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=lT().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=lT().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=lT().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=_A.dot(hA).clamp();this.iridescenceFresnel=zP({outsideIOR:eT(1),eta2:IT,cosTheta1:e,thinFilmThickness:DT,baseF0:kT}),this.iridescenceF0=hP({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=lA,n=UE.sub(lA).normalize(),i=TA,r=e.context;r.backdrop=BP(i,n,ET,wT,kT,VT,t,$E,IE,PE,XT,$T,KT,YT,this.dispersion?QT:null),r.backdropAlpha=qT,wT.a.mulAssign(zw(1,r.backdrop.a,qT))}super.start(e)}computeMultiscattering(e,t,n){const i=_A.dot(hA).clamp(),r=cP({roughness:ET,dotNV:i}),s=(this.iridescenceF0?LT.mix(kT,this.iridescenceF0):kT).mul(r.x).add(n.mul(r.y)),a=r.x.add(r.y).oneMinus(),o=kT.add(kT.oneMinus().mul(.047619)),l=s.mul(o).div(a.mul(o).oneMinus());e.addAssign(s),t.addAssign(l.mul(a))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const i=_A.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(i.mul(mP({lightDirection:e}))),!0===this.clearcoat){const n=SA.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(n.mul(lP({lightDirection:e,f0:HP,f90:WP,roughness:CT,normalView:SA})))}n.directDiffuse.addAssign(i.mul(qN({diffuseColor:wT.rgb}))),n.directSpecular.addAssign(i.mul(lP({lightDirection:e,f0:kT,f90:1,roughness:ET,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i,reflectedLight:r,ltc_1:s,ltc_2:a}){const o=t.add(n).sub(i),l=t.sub(n).sub(i),c=t.sub(n).add(i),u=t.add(n).add(i),h=_A,d=hA,p=uA.toVar(),m=fP({N:h,V:d,roughness:ET}),f=s.sample(m).toVar(),g=a.sample(m).toVar(),v=vT(lT(f.x,0,f.y),lT(0,1,0),lT(f.z,0,f.w)).toVar(),b=kT.mul(g.x).add(kT.oneMinus().mul(g.y)).toVar();r.directSpecular.addAssign(e.mul(b).mul(bP({N:h,V:d,P:p,mInv:v,p0:o,p1:l,p2:c,p3:u}))),r.directDiffuse.addAssign(e.mul(wT).mul(bP({N:h,V:d,P:p,mInv:vT(1,0,0,0,1,0,0,0,1),p0:o,p1:l,p2:c,p3:u})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(t.mul(qN({diffuseColor:wT})))}indirectSpecular(e){const{radiance:t,iblIrradiance:n,reflectedLight:i}=e.context;if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(n.mul(NT,GP({normal:_A,viewDir:hA,roughness:PT}))),!0===this.clearcoat){const e=SA.dot(hA).clamp(),t=uP({dotNV:e,specularColor:HP,specularF90:WP,roughness:CT});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=lT().toVar("singleScattering"),s=lT().toVar("multiScattering"),a=n.mul(1/Math.PI);this.computeMultiscattering(r,s,VT);const o=r.add(s),l=wT.mul(o.r.max(o.g).max(o.b).oneMinus());i.indirectSpecular.addAssign(t.mul(r)),i.indirectSpecular.addAssign(s.mul(a)),i.indirectDiffuse.addAssign(l.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:n}=e.context,i=_A.dot(hA).clamp().add(t),r=ET.mul(-16).oneMinus().negate().exp2(),s=t.sub(i.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(t),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(t),n.indirectDiffuse.mulAssign(t),n.indirectSpecular.mulAssign(s)}finish({context:e}){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=SA.dot(hA).clamp(),n=XN({dotVH:e,f0:HP,f90:WP}),i=t.mul(RT.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(RT));t.assign(i)}if(!0===this.sheen){const e=NT.r.max(NT.g).max(NT.b).mul(.157).oneMinus(),n=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const XP=eT(1),qP=eT(-2),$P=eT(.8),YP=eT(-1),KP=eT(.4),QP=eT(2),ZP=eT(.305),JP=eT(3),eL=eT(.21),tL=eT(4),nL=eT(4),iL=eT(16),rL=$_(([e])=>{const t=lT(hw(e)).toVar(),n=eT(-1).toVar();return Q_(t.x.greaterThan(t.z),()=>{Q_(t.x.greaterThan(t.y),()=>{n.assign(tM(e.x.greaterThan(0),0,3))}).Else(()=>{n.assign(tM(e.y.greaterThan(0),1,4))})}).Else(()=>{Q_(t.z.greaterThan(t.y),()=>{n.assign(tM(e.z.greaterThan(0),2,5))}).Else(()=>{n.assign(tM(e.y.greaterThan(0),1,4))})}),n}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),sL=$_(([e,t])=>{const n=rT().toVar();return Q_(t.equal(0),()=>{n.assign(rT(e.z,e.y).div(hw(e.x)))}).ElseIf(t.equal(1),()=>{n.assign(rT(e.x.negate(),e.z.negate()).div(hw(e.y)))}).ElseIf(t.equal(2),()=>{n.assign(rT(e.x.negate(),e.y).div(hw(e.z)))}).ElseIf(t.equal(3),()=>{n.assign(rT(e.z.negate(),e.y).div(hw(e.x)))}).ElseIf(t.equal(4),()=>{n.assign(rT(e.x.negate(),e.z).div(hw(e.y)))}).Else(()=>{n.assign(rT(e.x,e.y).div(hw(e.z)))}),gS(.5,n.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),aL=$_(([e])=>{const t=eT(0).toVar();return Q_(e.greaterThanEqual($P),()=>{t.assign(XP.sub(e).mul(YP.sub(qP)).div(XP.sub($P)).add(qP))}).ElseIf(e.greaterThanEqual(KP),()=>{t.assign($P.sub(e).mul(QP.sub(YP)).div($P.sub(KP)).add(YP))}).ElseIf(e.greaterThanEqual(ZP),()=>{t.assign(KP.sub(e).mul(JP.sub(QP)).div(KP.sub(ZP)).add(QP))}).ElseIf(e.greaterThanEqual(eL),()=>{t.assign(ZP.sub(e).mul(tL.sub(JP)).div(ZP.sub(eL)).add(JP))}).Else(()=>{t.assign(eT(-2).mul(ZS(gS(1.16,e))))}),t}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),oL=$_(([e,t])=>{const n=e.toVar();n.assign(gS(2,n).sub(1));const i=lT(n,1).toVar();return Q_(t.equal(0),()=>{i.assign(i.zyx)}).ElseIf(t.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(t.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(t.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(t.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(t.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),lL=$_(([e,t,n,i,r,s])=>{const a=eT(n),o=lT(t),l=Gw(aL(a),qP,s),c=rw(l),u=tw(l),h=lT(cL(e,o,u,i,r,s)).toVar();return Q_(c.notEqual(0),()=>{const t=lT(cL(e,o,u.add(1),i,r,s)).toVar();h.assign(zw(h,t,c))}),h}),cL=$_(([e,t,n,i,r,s])=>{const a=eT(n).toVar(),o=lT(t),l=eT(rL(o)).toVar(),c=eT(Aw(nL.sub(a),0)).toVar();a.assign(Aw(a,nL));const u=eT(KS(a)).toVar(),h=rT(sL(o,l).mul(u.sub(2)).add(1)).toVar();return Q_(l.greaterThan(2),()=>{h.y.addAssign(u),l.subAssign(3)}),h.x.addAssign(l.mul(u)),h.x.addAssign(c.mul(gS(3,iL))),h.y.addAssign(gS(4,KS(s).sub(u))),h.x.mulAssign(i),h.y.mulAssign(r),e.sample(h).grad(rT(),rT())}),uL=$_(({envMap:e,mipInt:t,outputDirection:n,theta:i,axis:r,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const l=aw(i),c=n.mul(l).add(r.cross(n).mul(sw(i))).add(r.mul(r.dot(n).mul(l.oneMinus())));return cL(e,c,t,s,a,o)}),hL=$_(({n:e,latitudinal:t,poleAxis:n,outputDirection:i,weights:r,samples:s,dTheta:a,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=lT(tM(t,n,Iw(n,i))).toVar();Q_(d.equal(lT(0)),()=>{d.assign(lT(i.z,0,i.x.negate()))}),d.assign(iw(d));const p=lT().toVar();return p.addAssign(r.element(0).mul(uL({theta:0,axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),DC({start:tT(1),end:e},({i:e})=>{Q_(e.greaterThanEqual(s),()=>{FC()});const t=eT(a.mul(eT(e))).toVar();p.addAssign(r.element(e).mul(uL({theta:t.mul(-1),axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),p.addAssign(r.element(e).mul(uL({theta:t,axis:d,outputDirection:i,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),dT(p,1)}),dL=[.125,.215,.35,.446,.526,.582],pL=20,mL=new hu(-1,1,1,-1,0,1),fL=new ws(90,1),gL=new wr;let vL=null,bL=0,yL=0;const xL=(1+Math.sqrt(5))/2,_L=1/xL,TL=[new En(-xL,_L,0),new En(xL,_L,0),new En(-_L,0,xL),new En(_L,0,xL),new En(0,xL,-_L),new En(0,xL,_L),new En(-1,1,-1),new En(1,1,-1),new En(-1,1,1),new En(1,1,1)],SL=new En,wL=new WeakMap,ML=[3,1,5,0,4,2],EL=oL(eE(),JM("faceIndex")).normalize(),AL=lT(EL.x,EL.y,EL.z);class RL{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,i=100,r={}){const{size:s=256,position:a=SL,renderTarget:o=null}=r;if(this._setSize(s),!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const s=o||this._allocateTarget();return r.renderTarget=s,this.fromSceneAsync(e,t,n,i,r),s}vL=this._renderer.getRenderTarget(),bL=this._renderer.getActiveCubeFace(),yL=this._renderer.getActiveMipmapLevel();const l=o||this._allocateTarget();return l.depthBuffer=!0,this._init(l),this._sceneToCubeUV(e,n,i,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}async fromSceneAsync(e,t=0,n=.1,i=100,r={}){return!1===this._hasInitialized&&await this._renderer.init(),this.fromScene(e,t,n,i,r)}fromEquirectangular(e,t=null){if(!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTarget();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(!1===this._hasInitialized){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTarget();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=LL(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=IL(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===te||e.mapping===ne?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(vL,bL,yL),e.scissorTest=!1,NL(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),vL=this._renderer.getRenderTarget(),bL=this._renderer.getActiveCubeFace(),yL=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTarget();return this._init(n),this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTarget(){return CL(3*Math.max(this._cubeSize,112),4*this._cubeSize)}_init(e){if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=CL(e.width,e.height);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],n=[],i=[],r=[];let s=e;const a=e-4+1+dL.length;for(let o=0;o<a;o++){const a=Math.pow(2,s);n.push(a);let l=1/a;o>e-4?l=dL[o-e+4-1]:0===o&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],p=6,m=6,f=3,g=2,v=1,b=new Float32Array(f*m*p),y=new Float32Array(g*m*p),x=new Float32Array(v*m*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0],r=ML[e];b.set(i,f*m*r),y.set(d,g*m*r);const s=[r,r,r,r,r,r];x.set(s,v*m*r)}const _=new es;_.setAttribute("position",new Or(b,f)),_.setAttribute("uv",new Or(y,g)),_.setAttribute("faceIndex",new Or(x,v)),t.push(_),r.push(new ds(_,null)),s>4&&s--}return{lodPlanes:t,sizeLods:n,sigmas:i,lodMeshes:r}}(t)),this._blurMaterial=function(e,t,n){const i=mE(new Array(pL).fill(0)),r=sS(new En(0,1,0)),s=sS(0),a=eT(pL),o=sS(0),l=sS(1),c=lE(null),u=sS(0),h=eT(1/t),d=eT(1/n),p=eT(e),m={n:a,latitudinal:o,weights:i,poleAxis:r,outputDirection:AL,dTheta:s,samples:l,envMap:c,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:p},f=PL("blur");return f.fragmentNode=hL({...m,latitudinal:o.equal(1)}),wL.set(f,m),f}(t,e.width,e.height)}}async _compileMaterial(e){const t=new ds(this._lodPlanes[0],e);await this._renderer.compile(t,mL)}_sceneToCubeUV(e,t,n,i,r){const s=fL;s.near=t,s.far=n;const a=[1,1,1,1,-1,1],o=[1,-1,1,-1,1,-1],l=this._renderer,c=l.autoClear;l.getClearColor(gL),l.autoClear=!1;let u=this._backgroundBox;if(null===u){const e=new Rr({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1});u=new ds(new ms,e)}let h=!1;const d=e.background;d?d.isColor&&(u.material.color.copy(d),e.background=null,h=!0):(u.material.color.copy(gL),h=!0),l.setRenderTarget(i),l.clear(),h&&l.render(u,s);for(let p=0;p<6;p++){const t=p%3;0===t?(s.up.set(0,a[p],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x+o[p],r.y,r.z)):1===t?(s.up.set(0,0,a[p]),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y+o[p],r.z)):(s.up.set(0,a[p],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y,r.z+o[p]));const n=this._cubeSize;NL(i,t*n,p>2?n:0,n,n),l.render(e,s)}l.autoClear=c,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===te||e.mapping===ne;i?null===this._cubemapMaterial&&(this._cubemapMaterial=LL(e)):null===this._equirectMaterial&&(this._equirectMaterial=IL(e));const r=i?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const s=this._lodMeshes[0];s.material=r;const a=this._cubeSize;NL(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(s,mL)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const t=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),n=TL[(i-r-1)%TL.length];this._blur(e,r-1,r,t,n)}t.autoClear=n}_blur(e,t,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",r),this._halfBlur(s,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=this._lodMeshes[i];c.material=l;const u=wL.get(l),h=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):pL;m>pL&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let y=0;y<pL;++y){const e=y/p,t=Math.exp(-e*e/2);f.push(t),0===y?g+=t:y<m&&(g+=2*t)}for(let y=0;y<f.length;y++)f[y]=f[y]/g;e.texture.frame=(e.texture.frame||0)+1,u.envMap.value=e.texture,u.samples.value=m,u.weights.array=f,u.latitudinal.value="latitudinal"===s?1:0,a&&(u.poleAxis.value=a);const{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-n;const b=this._sizeLods[i];NL(t,3*b*(i>v-4?i-v+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(c,mL)}}function CL(e,t){const n=new Jn(e,t,{magFilter:de,minFilter:de,generateMipmaps:!1,type:Se,format:Pe,colorSpace:Ot});return n.texture.mapping=se,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function NL(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function PL(e){const t=new _N;return t.depthTest=!1,t.depthWrite=!1,t.blending=0,t.name=`PMREM_${e}`,t}function LL(e){const t=PL("cubemap");return t.fragmentNode=zA(e,AL),t}function IL(e){const t=PL("equirect");return t.fragmentNode=lE(e,IN(AL),0),t}const DL=new WeakMap;function FL(e,t,n){const i=function(e){let t=DL.get(e);void 0===t&&(t=new WeakMap,DL.set(e,t));return t}(t);let r=i.get(e);if((void 0!==r?r.pmremVersion:-1)!==e.pmremVersion){const t=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const n=6;for(let i=0;i<n;i++)void 0!==e[i]&&t++;return t===n}(t))return null;r=n.fromCubemap(e,r)}else{if(!function(e){return null!=e&&e.height>0}(t))return null;r=n.fromEquirectangular(e,r)}r.pmremVersion=e.pmremVersion,i.set(e,r)}return r.texture}class UL extends Zx{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const i=new Qn;i.isRenderTargetTexture=!0,this._texture=lE(i),this._width=sS(0),this._height=sS(0),this._maxMip=sS(0),this.updateBeforeType=Vx.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const n=t?t.pmremVersion:-1,i=this._value;n!==i.pmremVersion&&(t=!0===i.isPMREMTexture?i:FL(i,e.renderer,this._generator),null!==t&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){null===this._generator&&(this._generator=new RL(e.renderer)),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this)),t=IA.mul(lT(t.x,t.y.negate(),t.z));let n=this.levelNode;return null===n&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),lL(this._texture,t,n,this._width,this._height,this._maxMip)}dispose(){super.dispose(),null!==this._generator&&this._generator.dispose()}}const OL=H_(UL).setParameterLength(1,3),BL=new WeakMap;class kL extends zC{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const e=n.isTextureNode?n.value:t[n.property];let i=BL.get(e);void 0===i&&(i=OL(e),BL.set(e,i)),n=i}const i=!0===t.useAnisotropy||t.anisotropy>0?yR:_A,r=n.context(VL(ET,i)).mul(LA),s=n.context(zL(TA)).mul(Math.PI).mul(LA),a=kM(r),o=kM(s);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(o);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=n.context(VL(CT,SA)).mul(LA),t=kM(e);l.addAssign(t)}}}const VL=(e,t)=>{let n=null;return{getUV:()=>(null===n&&(n=hA.negate().reflect(t),n=e.mul(e).mix(n,t).normalize(),n=n.transformDirection(IE)),n),getTextureLevel:()=>e}},zL=e=>({getUV:()=>e,getTextureLevel:()=>eT(1)}),GL=new lc;class HL extends _N{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(GL),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new kL(t):null}setupLightingModel(){return new jP}setupSpecular(){const e=zw(lT(.04),wT.rgb,AT);kT.assign(e),VT.assign(1)}setupVariants(){const e=this.metalnessNode?eT(this.metalnessNode):kR;AT.assign(e);let t=this.roughnessNode?eT(this.roughnessNode):BR;t=nP({roughness:t}),ET.assign(t),this.setupSpecular(),wT.assign(dT(wT.rgb.mul(e.oneMinus()),wT.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const WL=new cc;class jL extends HL{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(WL),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?eT(this.iorNode):JR;XT.assign(e),kT.assign(zw(Ew(Fw(XT.sub(1).div(XT.add(1))).mul(FR),lT(1)).mul(DR),wT.rgb,AT)),VT.assign(zw(DR,1,AT))}setupLightingModel(){return new jP(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?eT(this.clearcoatNode):zR,t=this.clearcoatRoughnessNode?eT(this.clearcoatRoughnessNode):GR;RT.assign(e),CT.assign(nP({roughness:t}))}if(this.useSheen){const e=this.sheenNode?lT(this.sheenNode):jR,t=this.sheenRoughnessNode?eT(this.sheenRoughnessNode):XR;NT.assign(e),PT.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?eT(this.iridescenceNode):$R,t=this.iridescenceIORNode?eT(this.iridescenceIORNode):YR,n=this.iridescenceThicknessNode?eT(this.iridescenceThicknessNode):KR;LT.assign(e),IT.assign(t),DT.assign(n)}if(this.useAnisotropy){const e=(this.anisotropyNode?rT(this.anisotropyNode):qR).toVar();UT.assign(e.length()),Q_(UT.equal(0),()=>{e.assign(rT(1,0))}).Else(()=>{e.divAssign(rT(UT)),UT.assign(UT.saturate())}),FT.assign(UT.pow2().mix(ET.pow2(),1)),OT.assign(vR[0].mul(e.x).add(vR[1].mul(e.y))),BT.assign(vR[1].mul(e.x).sub(vR[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?eT(this.transmissionNode):QR,t=this.thicknessNode?eT(this.thicknessNode):ZR,n=this.attenuationDistanceNode?eT(this.attenuationDistanceNode):eC,i=this.attenuationColorNode?lT(this.attenuationColorNode):tC;if(qT.assign(e),$T.assign(t),YT.assign(n),KT.assign(i),this.useDispersion){const e=this.dispersionNode?eT(this.dispersionNode):lC;QT.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?lT(this.clearcoatNormalNode):HR}setup(e){e.context.setupClearcoatNormal=()=>pM(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class XL extends jP{constructor(e=!1,t=!1,n=!1,i=!1,r=!1,s=!1,a=!1){super(e,t,n,i,r,s),this.useSSS=a}direct({lightDirection:e,lightColor:t,reflectedLight:n},i){if(!0===this.useSSS){const r=i.material,{thicknessColorNode:s,thicknessDistortionNode:a,thicknessAmbientNode:o,thicknessAttenuationNode:l,thicknessPowerNode:c,thicknessScaleNode:u}=r,h=e.add(_A.mul(a)).normalize(),d=eT(hA.dot(h.negate()).saturate().pow(c).mul(u)),p=lT(d.add(o).mul(s));n.directDiffuse.addAssign(p.mul(l.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:n},i)}}const qL=$_(({normal:e,lightDirection:t,builder:n})=>{const i=e.dot(t),r=rT(i.mul(.5).add(.5),0);if(n.material.gradientMap){const e=qA("gradientMap","texture").context({getUV:()=>r});return lT(e.r)}{const e=r.fwidth().mul(.5);return zw(lT(.7),lT(1),jw(eT(.7).sub(e.x),eT(.7).add(e.x),r.x))}});class $L extends GN{direct({lightDirection:e,lightColor:t,reflectedLight:n},i){const r=qL({normal:gA,lightDirection:e,builder:i}).mul(t);n.directDiffuse.addAssign(r.mul(qN({diffuseColor:wT.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:n,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(n.mul(qN({diffuseColor:wT}))),i.indirectDiffuse.mulAssign(t)}}const YL=new hc;class KL extends _N{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(YL),this.setValues(e)}setupLightingModel(){return new $L}}const QL=$_(()=>{const e=lT(hA.z,0,hA.x.negate()).normalize(),t=hA.cross(e);return rT(e.dot(_A),t.dot(_A)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),ZL=new gc;class JL extends _N{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(ZL),this.setValues(e)}setupVariants(e){const t=QL;let n;n=e.material.matcap?qA("matcap","texture").context({getUV:()=>t}):lT(zw(.2,.8,t.y)),wT.rgb.mulAssign(n.rgb)}}class eI extends Zx{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),i=t.sin();return gT(e,i,i.negate(),e).mul(n)}{const e=t,i=bT(dT(1,0,0,0),dT(0,aw(e.x),sw(e.x).negate(),0),dT(0,sw(e.x),aw(e.x),0),dT(0,0,0,1)),r=bT(dT(aw(e.y),0,sw(e.y),0),dT(0,1,0,0),dT(sw(e.y).negate(),0,aw(e.y),0),dT(0,0,0,1)),s=bT(dT(aw(e.z),sw(e.z).negate(),0,0),dT(sw(e.z),aw(e.z),0,0),dT(0,0,1,0),dT(0,0,0,1));return i.mul(r).mul(s).mul(dT(n,1)).xyz}}}const tI=H_(eI).setParameterLength(2),nI=new Bs;class iI extends _N{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(nI),this.setValues(e)}setupPositionView(e){const{object:t,camera:n}=e,{positionNode:i,rotationNode:r,scaleNode:s,sizeAttenuation:a}=this,o=tA.mul(lT(i||0));let l=rT($E[0].xyz.length(),$E[1].xyz.length());null!==s&&(l=l.mul(rT(s))),n.isPerspectiveCamera&&!1===a&&(l=l.mul(o.z.negate()));let c=sA.xy;if(t.center&&!0===t.center.isVector2){const e=((e,t,n)=>k_(new wM(e,t,n)))("center","vec2",t);c=c.sub(e.sub(.5))}c=c.mul(l);const u=eT(r||WR),h=tI(c,u);return dT(o.xy.add(h),o.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const rI=new bo,sI=new wn;class aI extends iI{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(rI),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return tA.mul(lT(e||aA)).xyz}setupVertexSprite(e){const{material:t,camera:n}=e,{rotationNode:i,scaleNode:r,sizeNode:s,sizeAttenuation:a}=this;let o=super.setupVertex(e);if(!0!==t.isNodeMaterial)return o;let l=null!==s?rT(s):oC;l=l.mul(yE),n.isPerspectiveCamera&&!0===a&&(l=l.mul(oI.div(uA.z.negate()))),r&&r.isNode&&(l=l.mul(rT(r)));let c=sA.xy;if(i&&i.isNode){const e=eT(i);c=tI(c,e)}return c=c.mul(l),c=c.div(wE.div(2)),c=c.mul(o.w),o=o.add(dT(c,0,0)),o}setupVertex(e){return e.object.isPoints?super.setupVertex(e):this.setupVertexSprite(e)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const oI=sS(1).onFrameUpdate(function({renderer:e}){const t=e.getSize(sI);this.value=.5*t.y});class lI extends GN{constructor(){super(),this.shadowNode=eT(1).toVar("shadowMask")}direct({lightNode:e}){null!==e.shadowNode&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){wT.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(wT.rgb)}}const cI=new ac;class uI extends _N{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(cI),this.setValues(e)}setupLightingModel(){return new lI}}const hI=TT("vec3"),dI=TT("vec3"),pI=TT("vec3");class mI extends GN{constructor(){super()}start(e){const{material:t,context:n}=e,i=TT("vec3"),r=TT("vec3");Q_(UE.sub(lA).length().greaterThan(ZE.mul(2)),()=>{i.assign(UE),r.assign(lA)}).Else(()=>{i.assign(lA),r.assign(UE)});const s=r.sub(i),a=sS("int").onRenderUpdate(({material:e})=>e.steps),o=s.length().div(a).toVar(),l=s.normalize().toVar(),c=eT(0).toVar(),u=lT(1).toVar();t.offsetNode&&c.addAssign(t.offsetNode.mul(o)),DC(a,()=>{const r=i.add(l.mul(c)),s=IE.mul(dT(r,1)).xyz;let a;null!==t.depthNode&&(dI.assign(aN(tN(s.z,CE,NE))),n.sceneDepthNode=aN(t.depthNode).toVar()),n.positionWorld=r,n.shadowPositionWorld=r,n.positionView=s,hI.assign(0),t.scatteringNode&&(a=t.scatteringNode({positionRay:r})),super.start(e),a&&hI.mulAssign(a);const h=hI.mul(.01).negate().mul(o).exp();u.mulAssign(h),c.addAssign(o)}),pI.addAssign(u.saturate().oneMinus())}scatteringLight(e,t){const n=t.context.sceneDepthNode;n?Q_(n.greaterThanEqual(dI),()=>{hI.addAssign(e)}):hI.addAssign(e)}direct({lightNode:e,lightColor:t},n){if(void 0===e.light.distance)return;const i=t.xyz.toVar();i.mulAssign(e.shadowNode),this.scatteringLight(i,n)}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i},r){const s=t.add(n).sub(i),a=t.sub(n).sub(i),o=t.sub(n).add(i),l=t.add(n).add(i),c=r.context.positionView,u=e.xyz.mul(yP({P:c,p0:s,p1:a,p2:o,p3:l})).pow(1.5);this.scatteringLight(u,r)}finish(e){e.context.outgoingLight.assign(pI)}}class fI{constructor(e,t){this.nodes=e,this.info=t,this._context="undefined"!=typeof self?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this._animationLoop&&this._animationLoop(t,n)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class gI{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let i=0;i<e.length-1;i++){const t=e[i];!1===n.has(t)&&n.set(t,new WeakMap),n=n.get(t)}return n.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),void 0===t)return!1;return t.delete(e[e.length-1])}}let vI=0;class bI{constructor(e,t,n,i,r,s,a,o,l,c){this.id=vI++,this._nodes=e,this._geometries=t,this.renderer=n,this.object=i,this.material=r,this.scene=s,this.camera=a,this.lightsNode=o,this.context=l,this.geometry=i.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=c,this.clippingContextCacheKey=null!==c?c.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return null!==this.clippingContext&&this.clippingContext.cacheKey!==this.clippingContextCacheKey&&(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return!0===this.material.hardwareClipping?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],i=new Set,r={};for(const s of e){let e;if(s.node&&s.node.attribute?e=s.node.attribute:(e=t.getAttribute(s.name),r[s.name]=e.version),void 0===e)continue;n.push(e);const a=e.isInterleavedBufferAttribute?e.data:e;i.add(a)}return this.attributes=n,this.attributesId=r,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:i,drawRange:r}=this,s=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),o=null!==a;let l=1;if(!0===n.isInstancedBufferGeometry?l=n.instanceCount:void 0!==e.count&&(l=Math.max(0,e.count)),0===l)return null;if(s.instanceCount=l,!0===e.isBatchedMesh)return s;let c=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(c=2);let u=r.start*c,h=(r.start+r.count)*c;null!==i&&(u=Math.max(u,i.start*c),h=Math.min(h,(i.start+i.count)*c));const d=n.attributes.position;let p=1/0;o?p=a.count:null!=d&&(p=d.count),u=Math.max(u,0),h=Math.min(h,p);const m=h-u;return m<0||m===1/0?null:(s.vertexCount=m,s.firstVertex=u,s)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const i=e.attributes[n];t+=n+",",i.data&&(t+=i.data.stride+","),i.offset&&(t+=i.offset+","),i.itemSize&&(t+=i.itemSize+","),i.normalized&&(t+="n,")}for(const n of Object.keys(e.morphAttributes).sort()){const i=e.morphAttributes[n];t+="morph-"+n+",";for(let e=0,n=i.length;e<n;e++){t+=i[e].id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t,renderer:n}=this;let i=t.customProgramCacheKey();for(const r of function(e){const t=Object.keys(e);let n=Object.getPrototypeOf(e);for(;n;){const e=Object.getOwnPropertyDescriptors(n);for(const n in e)if(void 0!==e[n]){const i=e[n];i&&"function"==typeof i.get&&t.push(n)}n=Object.getPrototypeOf(n)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(r))continue;const e=t[r];let s;if(null!==e){const t=typeof e;"number"===t?s=0!==e?"1":"0":"object"===t?(s="{",e.isTexture&&(s+=e.mapping,!0===n.backend.isWebGPUBackend&&(s+=e.magFilter,s+=e.minFilter,s+=e.wrapS,s+=e.wrapT,s+=e.wrapR)),s+="}"):s=String(e)}else s=String(e);i+=s+","}return i+=this.clippingContextCacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(i+=e._colorsTexture.uuid+",")),(e.isInstancedMesh||e.count>1)&&(i+=e.uuid+","),i+=e.receiveShadow+",",_x(i)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(null!==this.attributes){const e=this.attributesId;for(const t in e){const n=this.geometry.getAttribute(t);if(void 0===n||e[t]!==n.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return!0!==this.material.isShadowPassMaterial&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Sx(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Sx(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const yI=[];class xI{constructor(e,t,n,i,r,s){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=i,this.bindings=r,this.info=s,this.chainMaps={}}get(e,t,n,i,r,s,a,o){const l=this.getChainMap(o);yI[0]=e,yI[1]=t,yI[2]=s,yI[3]=r;let c=l.get(yI);return void 0===c?(c=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,i,r,s,a,o),l.set(yI,c)):(c.updateClipping(a),c.needsGeometryUpdate&&c.setGeometry(e.geometry),(c.version!==t.version||c.needsUpdate)&&(c.initialCacheKey!==c.getCacheKey()?(c.dispose(),c=this.get(e,t,n,i,r,s,a,o)):c.version=t.version)),yI.length=0,c}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new gI)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,i,r,s,a,o,l,c,u){const h=this.getChainMap(u),d=new bI(e,t,n,i,r,s,a,o,l,c);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),h.delete(d.getChainArray())},d}}class _I{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const TI=1,SI=2,wI=3,MI=4,EI=16;class AI extends _I{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return null!==t&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(void 0===n.version)t===TI?this.backend.createAttribute(e):t===SI?this.backend.createIndexAttribute(e):t===wI?this.backend.createStorageAttribute(e):t===MI&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(n.version<t.version||t.usage===sn)&&(this.backend.updateAttribute(e),n.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function RI(e){return null!==e.index?e.index.version:e.attributes.position.version}function CI(e){const t=[],n=e.index,i=e.attributes.position;if(null!==n){const e=n.array;for(let n=0,i=e.length;n<i;n+=3){const i=e[n+0],r=e[n+1],s=e[n+2];t.push(i,r,r,s,s,i)}}else{for(let e=0,n=i.array.length/3-1;e<n;e+=3){const n=e+0,i=e+1,r=e+2;t.push(n,i,i,r,r,n)}}const r=new(Pn(t)?Wr:Gr)(t,1);return r.version=RI(e),r}class NI extends _I{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const i=t.index,r=e.getAttributes();null!==i&&this.attributes.delete(i);for(const e of r)this.attributes.delete(e);const s=this.wireframes.get(t);void 0!==s&&this.attributes.delete(s),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,wI):this.updateAttribute(r,TI);const n=this.getIndex(e);null!==n&&this.updateAttribute(n,SI);const i=e.geometry.indirect;null!==i&&this.updateAttribute(i,MI)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let i=t.index;if(!0===n.wireframe){const e=this.wireframes;let n=e.get(t);void 0===n?(n=CI(t),e.set(t,n)):n.version!==RI(t)&&(this.attributes.delete(n),n=CI(t),e.set(t,n)),i=n}return i}}class PI{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class LI{constructor(e){this.cacheKey=e,this.usedTimes=0}}class II extends LI{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class DI extends LI{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let FI=0;class UI{constructor(e,t,n,i=null,r=null){this.id=FI++,this.code=e,this.stage=t,this.name=n,this.transforms=i,this.attributes=r,this.usedTimes=0}}class OI extends _I{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,i=this.get(e);if(this._needsComputeUpdate(e)){const r=i.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const s=this.nodes.getForCompute(e);let a=this.programs.compute.get(s.computeShader);void 0===a&&(r&&0===r.computeProgram.usedTimes&&this._releaseProgram(r.computeProgram),a=new UI(s.computeShader,"compute",e.name,s.transforms,s.nodeAttributes),this.programs.compute.set(s.computeShader,a),n.createProgram(a));const o=this._getComputeCacheKey(e,a);let l=this.caches.get(o);void 0===l&&(r&&0===r.usedTimes&&this._releasePipeline(r),l=this._getComputePipeline(e,a,o,t)),l.usedTimes++,a.usedTimes++,i.version=e.version,i.pipeline=l}return i.pipeline}getForRender(e,t=null){const{backend:n}=this,i=this.get(e);if(this._needsRenderUpdate(e)){const r=i.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const s=e.getNodeBuilderState(),a=e.material?e.material.name:"";let o=this.programs.vertex.get(s.vertexShader);void 0===o&&(r&&0===r.vertexProgram.usedTimes&&this._releaseProgram(r.vertexProgram),o=new UI(s.vertexShader,"vertex",a),this.programs.vertex.set(s.vertexShader,o),n.createProgram(o));let l=this.programs.fragment.get(s.fragmentShader);void 0===l&&(r&&0===r.fragmentProgram.usedTimes&&this._releaseProgram(r.fragmentProgram),l=new UI(s.fragmentShader,"fragment",a),this.programs.fragment.set(s.fragmentShader,l),n.createProgram(l));const c=this._getRenderCacheKey(e,o,l);let u=this.caches.get(c);void 0===u?(r&&0===r.usedTimes&&this._releasePipeline(r),u=this._getRenderPipeline(e,o,l,c,t)):e.pipeline=u,u.usedTimes++,o.usedTimes++,l.usedTimes++,i.pipeline=u}return i.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,i){n=n||this._getComputeCacheKey(e,t);let r=this.caches.get(n);return void 0===r&&(r=new DI(n,t),this.caches.set(n,r),this.backend.createComputePipeline(r,i)),r}_getRenderPipeline(e,t,n,i,r){i=i||this._getRenderCacheKey(e,t,n);let s=this.caches.get(i);return void 0===s&&(s=new II(i,t,n),this.caches.set(i,s),e.pipeline=s,this.backend.createRenderPipeline(e,r)),s}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class BI extends _I{constructor(e,t,n,i,r,s){super(),this.backend=e,this.textures=n,this.pipelines=r,this.attributes=i,this.nodes=t,this.info=s,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const e=this.get(n);void 0===e.bindGroup&&(this._init(n),this.backend.createBindings(n,t,0),e.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const e=this.get(n);void 0===e.bindGroup&&(this._init(n),this.backend.createBindings(n,t,0),e.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute,n=e.isIndirectStorageBufferAttribute?MI:wI;this.attributes.update(e,n)}}_update(e,t){const{backend:n}=this;let i=!1,r=!0,s=0,a=0;for(const o of e.bindings){if(o.isNodeUniformsGroup){if(!1===this.nodes.updateGroup(o))continue}if(o.isStorageBuffer){const e=o.attribute,t=e.isIndirectStorageBufferAttribute?MI:wI;this.attributes.update(e,t)}if(o.isUniformBuffer){o.update()&&n.updateBinding(o)}else if(o.isSampledTexture){const e=o.update(),t=o.texture,l=this.textures.get(t);e&&(this.textures.updateTexture(t),o.generation!==l.generation&&(o.generation=l.generation,i=!0,r=!1));if(void 0!==n.get(t).externalTexture||l.isDefaultTexture?r=!1:(s=10*s+t.id,a+=t.version),!0===t.isStorageTexture){const e=this.get(t);!0===o.store?e.needsMipmap=!0:this.textures.needsMipmaps(t)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(t),e.needsMipmap=!1)}}else o.isSampler&&o.update()}!0===i&&this.backend.updateBindings(e,t,r?s:0,a)}}function kI(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?e.z-t.z:e.id-t.id}function VI(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function zI(e){return(e.transmission>0||e.transmissionNode)&&2===e.side&&!1===e.forceSinglePass}class GI{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,i,r,s,a){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:n,groupOrder:i,renderOrder:e.renderOrder,z:r,group:s,clippingContext:a},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=n,o.groupOrder=i,o.renderOrder=e.renderOrder,o.z=r,o.group=s,o.clippingContext=a),this.renderItemsIndex++,o}push(e,t,n,i,r,s,a){const o=this.getNextRenderItem(e,t,n,i,r,s,a);!0===e.occlusionTest&&this.occlusionQueryCount++,!0===n.transparent||n.transmission>0?(zI(n)&&this.transparentDoublePass.push(o),this.transparent.push(o)):this.opaque.push(o)}unshift(e,t,n,i,r,s,a){const o=this.getNextRenderItem(e,t,n,i,r,s,a);!0===n.transparent||n.transmission>0?(zI(n)&&this.transparentDoublePass.unshift(o),this.transparent.unshift(o)):this.opaque.unshift(o)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||kI),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||VI),this.transparent.length>1&&this.transparent.sort(t||VI)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null,t.clippingContext=null}}}const HI=[];class WI{constructor(e){this.lighting=e,this.lists=new gI}get(e,t){const n=this.lists;HI[0]=e,HI[1]=t;let i=n.get(HI);return void 0===i&&(i=new GI(this.lighting,e,t),n.set(HI,i)),HI.length=0,i}dispose(){this.lists=new gI}}let jI=0;class XI{constructor(){this.id=jI++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Zn,this.scissor=!1,this.scissorValue=new Zn,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return qI(this)}}function qI(e){const{textures:t,activeCubeFace:n,activeMipmapLevel:i}=e,r=[n,i];for(const s of t)r.push(s.id);return Tx(r)}const $I=[],YI=new Ds,KI=new xs;class QI{constructor(){this.chainMaps={}}get(e,t,n=null){let i;if($I[0]=e,$I[1]=t,null===n)i="default";else{const e=n.texture.format;i=`${n.textures.length}:${e}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const r=this._getChainMap(i);let s=r.get($I);return void 0===s&&(s=new XI,r.set($I,s)),$I.length=0,null!==n&&(s.sampleCount=0===n.samples?1:n.samples),s}getForClear(e=null){return this.get(YI,KI,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new gI)}dispose(){this.chainMaps={}}}const ZI=new En;class JI extends _I{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),i=0===e.samples?1:e.samples,r=n.depthTextureMips||(n.depthTextureMips={}),s=e.textures,a=this.getSize(s[0]),o=a.width>>t,l=a.height>>t;let c=e.depthTexture||r[t];const u=!0===e.depthBuffer||!0===e.stencilBuffer;let h=!1;void 0===c&&u&&(c=new Lo,c.format=e.stencilBuffer?Ie:Le,c.type=e.stencilBuffer?Ee:_e,c.image.width=o,c.image.height=l,c.image.depth=a.depth,c.isArrayTexture=!0===e.multiview&&a.depth>1,r[t]=c),n.width===a.width&&a.height===n.height||(h=!0,c&&(c.needsUpdate=!0,c.image.width=o,c.image.height=l,c.image.depth=c.isArrayTexture?c.image.depth:1)),n.width=a.width,n.height=a.height,n.textures=s,n.depthTexture=c||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==i&&(h=!0,c&&(c.needsUpdate=!0),n.sampleCount=i);const d={sampleCount:i};if(!0!==e.isXRRenderTarget){for(let e=0;e<s.length;e++){const t=s[e];h&&(t.needsUpdate=!0),this.updateTexture(t,d)}c&&this.updateTexture(c,d)}if(!0!==n.initialized){n.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<s.length;e++)this._destroyTexture(s[e]);c&&this._destroyTexture(c),this.delete(e),this.backend.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const n=this.get(e);if(!0===n.initialized&&n.version===e.version)return;const i=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(i&&!0===n.initialized&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:ge}const{width:s,height:a,depth:o}=this.getSize(e);if(t.width=s,t.height=a,t.depth=o,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,s,a):1,e.isCubeTexture&&e.mipmaps.length>0&&t.levels++,i||!0===e.isStorageTexture||!0===e.isExternalTexture)r.createSampler(e),r.createTexture(e,t),n.generation=e.version;else{if(!0!==n.initialized&&r.createSampler(e),e.version>0){const i=e.image;if(void 0===i)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===i.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const n=[];for(const t of e.images)n.push(t);t.images=n}else t.image=i;void 0!==n.isDefaultTexture&&!0!==n.isDefaultTexture||(r.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),!0===e.source.dataReady&&r.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&r.generateMipmaps(e),e.onUpdate&&e.onUpdate(e)}}else r.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version}if(!0!==n.initialized){n.initialized=!0,n.generation=e.version,this.info.memory.textures++,e.isVideoTexture&&zn.getTransfer(e.colorSpace)!==kt&&console.warn("WebGPURenderer: Video textures must use a color space with a sRGB transfer function, e.g. SRGBColorSpace.");const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e)};e.addEventListener("dispose",t)}n.version=e.version}getSize(e,t=ZI){let n=e.images?e.images[0]:e.image;return n?(void 0!==n.image&&(n=n.image),"undefined"!=typeof HTMLVideoElement&&n instanceof HTMLVideoElement?(t.width=n.videoWidth||1,t.height=n.videoHeight||1,t.depth=1):n instanceof VideoFrame?(t.width=n.displayWidth||1,t.height=n.displayHeight||1,t.depth=1):(t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let i;return i=e.mipmaps.length>0?e.mipmaps.length:!0===e.isCompressedTexture?1:Math.floor(Math.log2(Math.max(t,n)))+1,i}needsMipmaps(e){return!0===e.generateMipmaps||e.mipmaps.length>0}_destroyTexture(e){!0===this.has(e)&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class eD extends wr{constructor(e,t,n,i=1){super(e,t,n),this.a=i}set(e,t,n,i=1){return this.a=i,super.set(e,t,n)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class tD extends _T{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class nD extends Yx{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.hasOutput?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.hasOutput?this.outputNode.getMemberType(e,t):"void"}add(e){return!0!==e.isNode?(console.error("THREE.TSL: Invalid node added to stack."),this):(this.nodes.push(e),this)}If(e,t){const n=new B_(t);return this._currentCond=tM(e,n),this.add(this._currentCond)}ElseIf(e,t){const n=new B_(t),i=tM(e,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(e){return this._currentCond.elseNode=new B_(e),this}Switch(e){return this._expressionNode=k_(e),this}Case(...e){const t=[];if(e.length>=2)for(let s=0;s<e.length-1;s++)t.push(this._expressionNode.equal(k_(e[s])));else console.error("THREE.TSL: Invalid parameter length. Case() requires at least two parameters.");const n=new B_(e[e.length-1]);let i=t[0];for(let s=1;s<t.length;s++)i=i.or(t[s]);const r=tM(i,n);return null===this._currentCond?(this._currentCond=r,this.add(this._currentCond)):(this._currentCond.elseNode=r,this._currentCond=r,this)}Default(e){return this.Else(e),this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren()){if(i.isVarNode&&!0===i.intent){if(!0!==e.getNodeProperties(i).assign)continue}t["node"+n++]=i}return t.outputNode||null}get hasOutput(){return this.outputNode&&this.outputNode.isNode}build(e,...t){const n=e.currentStack,i=K_();Y_(this),e.currentStack=this;const r=e.buildStage;for(const a of this.nodes){if(a.isVarNode&&!0===a.intent){if(!0!==e.getNodeProperties(a).assign)continue}if("setup"===r)a.build(e);else if("analyze"===r)a.build(e,this);else if("generate"===r){const t=e.getDataFromNode(a,"any").stages,n=t&&t[e.shaderStage];if(a.isVarNode&&n&&1===n.length&&n[0]&&n[0].isStackNode)continue;a.build(e,"void")}}let s;return s=this.hasOutput?this.outputNode.build(e,...t):super.build(e,...t),Y_(i),e.currentStack=n,s}}const iD=H_(nD).setParameterLength(0,1);class rD extends Yx{static get type(){return"StructTypeNode"}constructor(e,t=null){var n;super("struct"),this.membersLayout=(n=e,Object.entries(n).map(([e,t])=>"string"==typeof t?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})),this.name=t,this.isStructLayoutNode=!0}getLength(){const e=Float32Array.BYTES_PER_ELEMENT;let t=0;for(const n of this.membersLayout){const i=n.type,r=Px(i)*e,s=t%8,a=s%Lx(i),o=s+a;t+=a,0!==o&&8-o<r&&(t+=8-o),t+=r}return 8*Math.ceil(t/8)/e}getMemberType(e,t){const n=this.membersLayout.find(e=>e.name===t);return n?n.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.getStructTypeFromNode(this,this.membersLayout,this.name),e.addInclude(this)}generate(e){return this.getNodeType(e)}}class sD extends Yx{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structTypeNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structTypeNode.getNodeType(e)}getMemberType(e,t){return this.structTypeNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),n=t.type,i=e.getPropertyName(t);return e.addLineFlowCode(`${i} = ${e.generateStruct(n,this.structTypeNode.membersLayout,this.values)}`,this),t.name}}class aD extends Yx{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(void 0===t.membersLayout){const n=this.members,i=[];for(let t=0;t<n.length;t++){const r="m"+t,s=n[t].getNodeType(e);i.push({name:r,type:s,index:t})}t.membersLayout=i,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),n=this.members,i=""!==t?t+".":"";for(let r=0;r<n.length;r++){const t=n[r].build(e);e.addLineFlowCode(`${i}m${r} = ${t}`,this)}return t}}const oD=H_(aD);function lD(e,t){for(let n=0;n<e.length;n++)if(e[n].name===t)return n;return-1}class cD extends aD{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return uD(t)}setup(e){const t=this.outputNodes,n=[],i=e.renderer.getRenderTarget().textures;for(const r in t){n[lD(i,r)]=dT(t[r])}return this.members=n,super.setup(e)}}const uD=H_(cD);class hD extends Zx{static get type(){return"BitcastNode"}constructor(e,t,n=null){super(),this.valueNode=e,this.conversionType=t,this.inputType=n,this.isBitcastNode=!0}getNodeType(e){if(null!==this.inputType){const t=this.valueNode.getNodeType(e),n=e.getTypeLength(t);return e.getTypeFromLength(n,this.conversionType)}return this.conversionType}generate(e){const t=this.getNodeType(e);let n="";if(null!==this.inputType){const t=this.valueNode.getNodeType(e);n=1===e.getTypeLength(t)?this.inputType:e.changeComponentType(t,this.inputType)}else n=this.valueNode.getNodeType(e);return`${e.getBitcastMethod(t,n)}( ${this.valueNode.build(e,n)} )`}}const dD=j_(hD).setParameterLength(2),pD=$_(([e])=>{const t=e.toUint().mul(747796405).add(2891336453),n=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return n.shiftRight(22).bitXor(n).toFloat().mul(1/2**32)}),mD=(e,t)=>Dw(gS(4,e.mul(fS(1,e))),t),fD=$_(([e])=>e.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),gD=$_(([e])=>lT(fD(e.z.add(fD(e.y.mul(1)))),fD(e.z.add(fD(e.x.mul(1)))),fD(e.y.add(fD(e.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),vD=$_(([e,t,n])=>{const i=lT(e).toVar(),r=eT(1.4).toVar(),s=eT(0).toVar(),a=lT(i).toVar();return DC({start:eT(0),end:eT(3),type:"float",condition:"<="},()=>{const e=lT(gD(a.mul(2))).toVar();i.addAssign(e.add(n.mul(eT(.1).mul(t)))),a.mulAssign(1.8),r.mulAssign(1.5),i.mulAssign(1.2);const o=eT(fD(i.z.add(fD(i.x.add(fD(i.y)))))).toVar();s.addAssign(o.div(r)),a.addAssign(.14)}),s}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class bD extends Yx{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let n=this._candidateFnCall;if(null===n){let i=null,r=-1;for(const n of this.functionNodes){const s=n.shaderNode.layout;if(null===s)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const a=s.inputs;if(t.length===a.length){let s=0;for(let n=0;n<t.length;n++){const i=t[n],r=a[n];i.getNodeType(e)===r.type?s++:s=0}s>r&&(i=n,r=s)}}this._candidateFnCall=n=i(...t)}return n}}const yD=H_(bD),xD=e=>(...t)=>yD(e,...t),_D=sS(0).setGroup(nS).onRenderUpdate(e=>e.time),TD=sS(0).setGroup(nS).onRenderUpdate(e=>e.deltaTime),SD=sS(0,"uint").setGroup(nS).onRenderUpdate(e=>e.frameId),wD=$_(([e,t,n=rT(.5)])=>tI(e.sub(n),t).add(n)),MD=$_(([e,t,n=rT(.5)])=>{const i=e.sub(n),r=i.dot(i),s=r.mul(r).mul(t);return e.add(i.mul(s))}),ED=$_(({position:e=null,horizontal:t=!0,vertical:n=!1})=>{let i;null!==e?(i=$E.toVar(),i[3][0]=e.x,i[3][1]=e.y,i[3][2]=e.z):i=$E;const r=IE.mul(i);return U_(t)&&(r[0][0]=$E[0].length(),r[0][1]=0,r[0][2]=0),U_(n)&&(r[1][0]=0,r[1][1]=$E[1].length(),r[1][2]=0),r[2][0]=0,r[2][1]=0,r[2][2]=1,PE.mul(r).mul(aA)}),AD=$_(([e=null])=>{const t=aN();return aN(ZC(e)).sub(t).lessThan(0).select(xE,e)});class RD extends Yx{static get type(){return"SpriteSheetUVNode"}constructor(e,t=eE(),n=eT(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}setup(){const{frameNode:e,uvNode:t,countNode:n}=this,{width:i,height:r}=n,s=e.mod(i.mul(r)).floor(),a=s.mod(i),o=r.sub(s.add(1).div(i).ceil()),l=n.reciprocal(),c=rT(a,o);return t.add(c).mul(l)}}const CD=H_(RD).setParameterLength(3),ND=$_(([e,t=null,n=null,i=eT(1),r=aA,s=vA])=>{let a=s.abs().normalize();a=a.div(a.dot(lT(1)));const o=r.yz.mul(i),l=r.zx.mul(i),c=r.xy.mul(i),u=e.value,h=null!==t?t.value:u,d=null!==n?n.value:u,p=lE(u,o).mul(a.x),m=lE(h,l).mul(a.y),f=lE(d,c).mul(a.z);return mS(p,m,f)}),PD=new Na,LD=new En,ID=new En,DD=new En,FD=new Li,UD=new En(0,0,-1),OD=new Zn,BD=new En,kD=new En,VD=new Zn,zD=new wn,GD=new Jn,HD=xE.flipX();GD.depthTexture=new Lo(1,1);let WD=!1;class jD extends aE{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||GD.texture,HD),this._reflectorBaseNode=e.reflector||new XD(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(null===this._depthNode){if(!0!==this._reflectorBaseNode.depth)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=k_(new jD({defaultTexture:GD.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class XD extends Yx{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:n=new sr,resolutionScale:i=1,generateMipmaps:r=!1,bounces:s=!0,depth:a=!1,samples:o=0}=t;this.textureNode=e,this.target=n,this.resolutionScale=i,void 0!==t.resolution&&(On('THREE.ReflectorNode: The "resolution" parameter has been renamed to "resolutionScale".'),this.resolutionScale=t.resolution),this.generateMipmaps=r,this.bounces=s,this.depth=a,this.samples=o,this.updateBeforeType=s?Vx.RENDER:Vx.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1,this.hasOutput=!1}_updateResolution(e,t){const n=this.resolutionScale;t.getDrawingBufferSize(zD),e.setSize(Math.round(zD.width*n),Math.round(zD.height*n))}setup(e){return this._updateResolution(GD,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new Jn(0,0,{type:Se,samples:this.samples}),!0===this.generateMipmaps&&(t.texture.minFilter=fe,t.texture.generateMipmaps=!0),!0===this.depth&&(t.depthTexture=new Lo),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&WD)return!1;WD=!0;const{scene:t,camera:n,renderer:i,material:r}=e,{target:s}=this,a=this.getVirtualCamera(n),o=this.getRenderTarget(a);i.getDrawingBufferSize(zD),this._updateResolution(o,i),ID.setFromMatrixPosition(s.matrixWorld),DD.setFromMatrixPosition(n.matrixWorld),FD.extractRotation(s.matrixWorld),LD.set(0,0,1),LD.applyMatrix4(FD),BD.subVectors(ID,DD);let l=!1;if(!0===BD.dot(LD)>0&&!1===this.forceUpdate){if(!1===this.hasOutput)return void(WD=!1);l=!0}BD.reflect(LD).negate(),BD.add(ID),FD.extractRotation(n.matrixWorld),UD.set(0,0,-1),UD.applyMatrix4(FD),UD.add(DD),kD.subVectors(ID,UD),kD.reflect(LD).negate(),kD.add(ID),a.coordinateSystem=n.coordinateSystem,a.position.copy(BD),a.up.set(0,1,0),a.up.applyMatrix4(FD),a.up.reflect(LD),a.lookAt(kD),a.near=n.near,a.far=n.far,a.updateMatrixWorld(),a.projectionMatrix.copy(n.projectionMatrix),PD.setFromNormalAndCoplanarPoint(LD,ID),PD.applyMatrix4(a.matrixWorldInverse),OD.set(PD.normal.x,PD.normal.y,PD.normal.z,PD.constant);const c=a.projectionMatrix;VD.x=(Math.sign(OD.x)+c.elements[8])/c.elements[0],VD.y=(Math.sign(OD.y)+c.elements[9])/c.elements[5],VD.z=-1,VD.w=(1+c.elements[10])/c.elements[14],OD.multiplyScalar(1/OD.dot(VD));c.elements[2]=OD.x,c.elements[6]=OD.y,c.elements[10]=i.coordinateSystem===ln?OD.z-0:OD.z+1-0,c.elements[14]=OD.w,this.textureNode.value=o.texture,!0===this.depth&&(this.textureNode.getDepthNode().value=o.depthTexture),r.visible=!1;const u=i.getRenderTarget(),h=i.getMRT(),d=i.autoClear;i.setMRT(null),i.setRenderTarget(o),i.autoClear=!0,l?(i.clear(),this.hasOutput=!1):(i.render(t,a),this.hasOutput=!0),i.setMRT(h),i.setRenderTarget(u),i.autoClear=d,r.visible=!0,WD=!1,this.forceUpdate=!1}get resolution(){return On('THREE.ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale}set resolution(e){On('THREE.ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale=e}}const qD=new hu(-1,1,1,-1,0,1);class $D extends es{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Xr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Xr(t,2))}}const YD=new $D;class KD extends ds{constructor(e=null){super(YD,e),this.camera=qD,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,qD)}render(e){e.render(this,qD)}}const QD=new wn;class ZD extends aE{static get type(){return"RTTNode"}constructor(e,t=null,n=null,i={type:Se}){const r=new Jn(t,n,i);super(r.texture,eE()),this.isRTTNode=!0,this.node=e,this.width=t,this.height=n,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new KD(new _N),this.updateBeforeType=Vx.RENDER}get autoResize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const n=e*this.pixelRatio,i=t*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoResize){const t=e.getPixelRatio(),n=e.getSize(QD),i=n.width*t,r=n.height*t;i===this.renderTarget.width&&r===this.renderTarget.height||(this.renderTarget.setSize(i,r),this.textureNeedsUpdate=!0)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new aE(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const JD=(e,...t)=>k_(new ZD(k_(e),...t)),eF=$_(([e,t,n],i)=>{let r;i.renderer.coordinateSystem===ln?(e=rT(e.x,e.y.oneMinus()).mul(2).sub(1),r=dT(lT(e,t),1)):r=dT(lT(e.x,e.y.oneMinus(),t).mul(2).sub(1),1);const s=dT(n.mul(r));return s.xyz.div(s.w)}),tF=$_(([e,t])=>{const n=t.mul(dT(e,1)),i=n.xy.div(n.w).mul(.5).add(.5).toVar();return rT(i.x,i.y.oneMinus())}),nF=$_(([e,t,n])=>{const i=nE(cE(t)),r=sT(e.mul(i)).toVar(),s=cE(t,r).toVar(),a=cE(t,r.sub(sT(2,0))).toVar(),o=cE(t,r.sub(sT(1,0))).toVar(),l=cE(t,r.add(sT(1,0))).toVar(),c=cE(t,r.add(sT(2,0))).toVar(),u=cE(t,r.add(sT(0,2))).toVar(),h=cE(t,r.add(sT(0,1))).toVar(),d=cE(t,r.sub(sT(0,1))).toVar(),p=cE(t,r.sub(sT(0,2))).toVar(),m=hw(fS(eT(2).mul(o).sub(a),s)).toVar(),f=hw(fS(eT(2).mul(l).sub(c),s)).toVar(),g=hw(fS(eT(2).mul(h).sub(u),s)).toVar(),v=hw(fS(eT(2).mul(d).sub(p),s)).toVar(),b=eF(e,s,n).toVar(),y=m.lessThan(f).select(b.sub(eF(e.sub(rT(eT(1).div(i.x),0)),o,n)),b.negate().add(eF(e.add(rT(eT(1).div(i.x),0)),l,n))),x=g.lessThan(v).select(b.sub(eF(e.add(rT(0,eT(1).div(i.y))),h,n)),b.negate().add(eF(e.sub(rT(0,eT(1).div(i.y))),d,n)));return iw(Iw(y,x))});class iF extends Yx{static get type(){return"SampleNode"}constructor(e,t=null){super(),this.callback=e,this.uvNode=t,this.isSampleNode=!0}setup(){return this.sample(eE())}sample(e){return this.callback(e)}}class rF extends Yx{static get type(){return"EventNode"}constructor(e,t){super("void"),this.eventType=e,this.callback=t,e===rF.OBJECT?this.updateType=Vx.OBJECT:e===rF.MATERIAL&&(this.updateType=Vx.RENDER)}update(e){this.callback(e)}}rF.OBJECT="object",rF.MATERIAL="material";const sF=(e,t)=>k_(new rF(e,t)).toStack();class aF extends ba{constructor(e,t,n=Float32Array){super(ArrayBuffer.isView(e)?e:new n(e*t),t),this.isStorageInstancedBufferAttribute=!0}}class oF extends Or{constructor(e,t,n=Float32Array){super(ArrayBuffer.isView(e)?e:new n(e*t),t),this.isStorageBufferAttribute=!0}}class lF extends Yx{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const cF=W_(lF),uF=new Gi,hF=new Li;class dF extends Yx{static get type(){return"SceneNode"}constructor(e=dF.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=null!==this.scene?this.scene:e.scene;let i;return t===dF.BACKGROUND_BLURRINESS?i=WA("backgroundBlurriness","float",n):t===dF.BACKGROUND_INTENSITY?i=WA("backgroundIntensity","float",n):t===dF.BACKGROUND_ROTATION?i=sS("mat4").setName("backgroundRotation").setGroup(nS).onRenderUpdate(()=>{const e=n.background;return null!==e&&e.isTexture&&e.mapping!==ee?(uF.copy(n.backgroundRotation),uF.x*=-1,uF.y*=-1,uF.z*=-1,hF.makeRotationFromEuler(uF)):hF.identity(),hF}):console.error("THREE.SceneNode: Unknown scope:",t),i}}dF.BACKGROUND_BLURRINESS="backgroundBlurriness",dF.BACKGROUND_INTENSITY="backgroundIntensity",dF.BACKGROUND_ROTATION="backgroundRotation";const pF=W_(dF,dF.BACKGROUND_BLURRINESS),mF=W_(dF,dF.BACKGROUND_INTENSITY),fF=W_(dF,dF.BACKGROUND_ROTATION);class gF extends aE{static get type(){return"StorageTextureNode"}constructor(e,t,n=null){super(e,t),this.storeNode=n,this.isStorageTextureNode=!0,this.access=Gx.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}generate(e,t){let n;return n=null!==this.storeNode?this.generateStore(e):super.generate(e,t),n}toReadWrite(){return this.setAccess(Gx.READ_WRITE)}toReadOnly(){return this.setAccess(Gx.READ_ONLY)}toWriteOnly(){return this.setAccess(Gx.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:n,storeNode:i,depthNode:r}=t,s=super.generate(e,"property"),a=n.build(e,!0===this.value.is3DTexture?"uvec3":"uvec2"),o=i.build(e,"vec4"),l=r?r.build(e,"int"):null,c=e.generateTextureStore(e,s,a,l,o);e.addLineFlowCode(c,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e}}const vF=H_(gF).setParameterLength(1,3),bF=$_(({texture:e,uv:t})=>{const n=1e-4,i=lT().toVar();return Q_(t.x.lessThan(n),()=>{i.assign(lT(1,0,0))}).ElseIf(t.y.lessThan(n),()=>{i.assign(lT(0,1,0))}).ElseIf(t.z.lessThan(n),()=>{i.assign(lT(0,0,1))}).ElseIf(t.x.greaterThan(.9999),()=>{i.assign(lT(-1,0,0))}).ElseIf(t.y.greaterThan(.9999),()=>{i.assign(lT(0,-1,0))}).ElseIf(t.z.greaterThan(.9999),()=>{i.assign(lT(0,0,-1))}).Else(()=>{const n=.01,r=e.sample(t.add(lT(-.01,0,0))).r.sub(e.sample(t.add(lT(n,0,0))).r),s=e.sample(t.add(lT(0,-.01,0))).r.sub(e.sample(t.add(lT(0,n,0))).r),a=e.sample(t.add(lT(0,0,-.01))).r.sub(e.sample(t.add(lT(0,0,n))).r);i.assign(lT(r,s,a))}),i.normalize()});class yF extends aE{static get type(){return"Texture3DNode"}constructor(e,t=null,n=null){super(e,t,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return lT(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return!e.isFlipY()||!0!==n.isRenderTargetTexture&&!0!==n.isFramebufferTexture||(t=this.sampler?t.flipY():t.setY(tT(nE(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}generateOffset(e,t){return t.build(e,"ivec3")}normal(e){return bF({texture:this,uv:e})}}const xF=H_(yF).setParameterLength(1,3);class _F extends HA{static get type(){return"UserDataNode"}constructor(e,t,n=null){super(e,t,n),this.userData=n}updateReference(e){return this.reference=null!==this.userData?this.userData:e.object.userData,this.reference}}const TF=new WeakMap;class SF extends Zx{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Vx.OBJECT,this.updateAfterType=Vx.OBJECT,this.previousModelWorldMatrix=sS(new Li),this.previousProjectionMatrix=sS(new Li).setGroup(nS),this.previousCameraViewMatrix=sS(new Li)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:n}){const i=MF(n);this.previousModelWorldMatrix.value.copy(i);const r=wF(t);r.frameId!==e&&(r.frameId=e,void 0===r.previousProjectionMatrix?(r.previousProjectionMatrix=new Li,r.previousCameraViewMatrix=new Li,r.currentProjectionMatrix=new Li,r.currentCameraViewMatrix=new Li,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){MF(e).copy(e.matrixWorld)}setup(){const e=null===this.projectionMatrix?PE:sS(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),n=e.mul(tA).mul(aA),i=this.previousProjectionMatrix.mul(t).mul(oA),r=n.xy.div(n.w),s=i.xy.div(i.w);return fS(r,s)}}function wF(e){let t=TF.get(e);return void 0===t&&(t={},TF.set(e,t)),t}function MF(e,t=0){const n=wF(e);let i=n[t];return void 0===i&&(n[t]=i=new Li,n[t].copy(e.matrixWorld)),i}const EF=W_(SF),AF=$_(([e])=>PF(e.rgb)),RF=$_(([e,t=eT(1)])=>t.mix(PF(e.rgb),e.rgb)),CF=$_(([e,t=eT(1)])=>{const n=mS(e.r,e.g,e.b).div(3),i=e.r.max(e.g.max(e.b)),r=i.sub(n).mul(t).mul(-3);return zw(e.rgb,i,r)}),NF=$_(([e,t=eT(1)])=>{const n=lT(.57735,.57735,.57735),i=t.cos();return lT(e.rgb.mul(i).add(n.cross(e.rgb).mul(t.sin()).add(n.mul(Lw(n,e.rgb).mul(i.oneMinus())))))}),PF=(e,t=lT(zn.getLuminanceCoefficients(new En)))=>Lw(e,t),LF=$_(([e,t=lT(1),n=lT(0),i=lT(1),r=eT(1),s=lT(zn.getLuminanceCoefficients(new En,Ot))])=>{const a=e.rgb.dot(lT(s)),o=Aw(e.rgb.mul(t).add(n),0).toVar(),l=o.pow(i).toVar();return Q_(o.r.greaterThan(0),()=>{o.r.assign(l.r)}),Q_(o.g.greaterThan(0),()=>{o.g.assign(l.g)}),Q_(o.b.greaterThan(0),()=>{o.b.assign(l.b)}),o.assign(a.add(o.sub(a).mul(r))),dT(o.rgb,e.a)});class IF extends Zx{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const DF=H_(IF).setParameterLength(2),FF=new wn;class UF extends aE{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class OF extends UF{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class BF extends Zx{static get type(){return"PassNode"}constructor(e,t,n,i={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const r=new Lo;r.isRenderTargetTexture=!0,r.name="depth";const s=new Jn(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Se,...i});s.texture.name="output",s.depthTexture=r,this.renderTarget=s,this._textures={output:s.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=sS(0),this._cameraFar=sS(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=Vx.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const n=this._textures[e],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(t=k_(new OF(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),t=k_(new OF(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[e]=t=nN(this.getTextureNode(e),n,i)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const n=this._cameraNear,i=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=eN(r,n,i)}return t}async compileAsync(e){const t=e.getRenderTarget(),n=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(t),e.setMRT(n)}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===BF.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n}=this;let i,r;const s=t.getOutputRenderTarget();s&&!0===s.isXRRenderTarget?(r=1,i=t.xr.getCamera(),t.xr.updateCamera(i),FF.set(s.width,s.height)):(i=this.camera,r=t.getPixelRatio(),t.getSize(FF)),this._pixelRatio=r,this.setSize(FF.width,FF.height);const a=t.getRenderTarget(),o=t.getMRT(),l=i.layers.mask;this._cameraNear.value=i.near,this._cameraFar.value=i.far,null!==this._layers&&(i.layers.mask=this._layers.mask);for(const c in this._previousTextures)this.toggleTexture(c);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,i),t.setRenderTarget(a),t.setMRT(o),i.layers.mask=l}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio*this._resolution,i=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(n,i),null!==this._scissor&&this.renderTarget.scissor.copy(this._scissor),null!==this._viewport&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,n,i){null===e?this._scissor=null:(null===this._scissor&&(this._scissor=new Zn),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,n,i),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,t,n,i){null===e?this._viewport=null:(null===this._viewport&&(this._viewport=new Zn),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,n,i),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}BF.COLOR="color",BF.DEPTH="depth";class kF extends BF{static get type(){return"ToonOutlinePassNode"}constructor(e,t,n,i,r){super(BF.COLOR,e,t),this.colorNode=n,this.thicknessNode=i,this.alphaNode=r,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,n=t.getRenderObjectFunction();t.setRenderObjectFunction((e,n,i,r,s,a,o,l)=>{if((s.isMeshToonMaterial||s.isMeshToonNodeMaterial)&&!1===s.wireframe){const c=this._getOutlineMaterial(s);t.renderObject(e,n,i,r,c,a,o,l)}t.renderObject(e,n,i,r,s,a,o,l)}),super.updateBefore(e),t.setRenderObjectFunction(n)}_createMaterial(){const e=new _N;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=1;const t=vA.negate(),n=PE.mul(tA),i=eT(1),r=n.mul(dT(aA,1)),s=n.mul(dT(aA.add(t),1)),a=iw(r.sub(s));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(i)),e.colorNode=dT(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return void 0===t&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const VF=$_(([e,t])=>e.mul(t).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),zF=$_(([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp()).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),GF=$_(([e,t])=>{const n=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),i=e.mul(e.mul(6.2).add(1.7)).add(.06);return n.div(i).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),HF=$_(([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),n=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(n)}),WF=$_(([e,t])=>{const n=vT(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=vT(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=n.mul(e),e=HF(e),(e=i.mul(e)).clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),jF=vT(lT(1.6605,-.1246,-.0182),lT(-.5876,1.1329,-.1006),lT(-.0728,-.0083,1.1187)),XF=vT(lT(.6274,.0691,.0164),lT(.3293,.9195,.088),lT(.0433,.0113,.8956)),qF=$_(([e])=>{const t=lT(e).toVar(),n=lT(t.mul(t)).toVar(),i=lT(n.mul(n)).toVar();return eT(15.5).mul(i.mul(n)).sub(gS(40.14,i.mul(t))).add(gS(31.96,i).sub(gS(6.868,n.mul(t))).add(gS(.4298,n).add(gS(.1191,t).sub(.00232))))}),$F=$_(([e,t])=>{const n=lT(e).toVar(),i=vT(lT(.856627153315983,.137318972929847,.11189821299995),lT(.0951212405381588,.761241990602591,.0767994186031903),lT(.0482516061458583,.101439036467562,.811302368396859)),r=vT(lT(1.1271005818144368,-.1413297634984383,-.14132976349843826),lT(-.11060664309660323,1.157823702216272,-.11060664309660294),lT(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=eT(-12.47393),a=eT(4.026069);return n.mulAssign(t),n.assign(XF.mul(n)),n.assign(i.mul(n)),n.assign(Aw(n,1e-10)),n.assign(ZS(n)),n.assign(n.sub(s).div(a.sub(s))),n.assign(Gw(n,0,1)),n.assign(qF(n)),n.assign(r.mul(n)),n.assign(Dw(Aw(lT(0),n),lT(2.2))),n.assign(jF.mul(n)),n.assign(Gw(n,0,1)),n}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),YF=$_(([e,t])=>{const n=eT(.76),i=eT(.15);e=e.mul(t);const r=Ew(e.r,Ew(e.g,e.b)),s=tM(r.lessThan(.08),r.sub(gS(6.25,r.mul(r))),.04);e.subAssign(s);const a=Aw(e.r,Aw(e.g,e.b));Q_(a.lessThan(n),()=>e);const o=fS(1,n),l=fS(1,o.mul(o).div(a.add(o.sub(n))));e.mulAssign(l.div(a));const c=fS(1,vS(1,i.mul(a.sub(l)).add(1)));return zw(e,lT(l),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class KF extends Yx{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=n}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const i of t)i.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const QF=H_(KF).setParameterLength(1,3);class ZF extends KF{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getMemberType(e,t){const n=this.getNodeType(e);return e.getStructTypeNode(n).getMemberType(e,t)}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return void 0===n&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),i=n.name,r=n.type,s=e.getCodeFromNode(this,r);""!==i&&(s.name=i);const a=e.getPropertyName(s),o=this.getNodeFunction(e).getCode(a);return s.code=o+"\n","property"===t?a:e.format(`${a}()`,r,t)}}const JF=(e,t=[],n="")=>{for(let s=0;s<t.length;s++){const e=t[s];"function"==typeof e&&(t[s]=e.functionNode)}const i=k_(new ZF(e,t,n)),r=(...e)=>i.call(...e);return r.functionNode=i,r};class eU extends Yx{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new dn,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:eT()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=Ux(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?Ox(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const tU=H_(eU).setParameterLength(1);class nU extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(null!==t){const i=t(...n);return this.set(e,i),i}}}class iU{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const rU=new nU;class sU extends Yx{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new nU,this._output=tU(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const n=this._outputs;return void 0===n[e]?n[e]=tU(t):n[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const n=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),n[e]=t,n[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),n[e]=t,n[e].events.addEventListener("refresh",this.onRefresh)):void 0===n[e]?(n[e]=tU(t),n[e].events.addEventListener("refresh",this.onRefresh)):n[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const n=this.getObject()[e];if("function"==typeof n)return n(...t)}async callAsync(e,...t){const n=this.getObject()[e];if("function"==typeof n)return"AsyncFunction"===n.constructor.name?await n(...t):n(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new iU(this),t=rU.get("THREE"),n=rU.get("TSL"),i=this.getMethod(),r=[e,this._local,rU,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,n];this._object=i(...r);const s=this._object.layout;if(s&&(!1===s.cache&&this._local.clear(),this._output.outputType=s.outputType||null,Array.isArray(s.elements)))for(const a of s.elements){const e=a.id||a.name;a.inputType&&(void 0===this.getParameter(e)&&this.setParameter(e,null),this.getParameter(e).inputType=a.inputType),a.outputType&&(void 0===this.getOutput(e)&&this.setOutput(e,null),this.getOutput(e).outputType=a.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let e=this.parameters[t];e.isScriptableNode&&(e=e.getDefaultOutput()),e.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:eT()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",n="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],n),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[_x(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const n in this.parameters)t.push(this.parameters[n].getCacheKey(e));return Tx(t)}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const aU=H_(sU).setParameterLength(1,2);function oU(e){let t;const n=e.context.getViewZ;return void 0!==n&&(t=n(this)),(t||uA.z).negate()}const lU=$_(([e,t],n)=>{const i=oU(n);return jw(e,t,i)}),cU=$_(([e],t)=>{const n=oU(t);return e.mul(e,n,n).negate().exp().oneMinus()}),uU=$_(([e,t])=>dT(t.toFloat().mix(GT.rgb,e.toVec3()),GT.a));let hU=null,dU=null;class pU extends Yx{static get type(){return"RangeNode"}constructor(e=eT(),t=eT()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(Ix(this.minNode.value)),n=e.getTypeLength(Ix(this.maxNode.value));return t>n?t:n}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let n=null;if(t.count>1){const i=this.minNode.value,r=this.maxNode.value,s=e.getTypeLength(Ix(i)),a=e.getTypeLength(Ix(r));hU=hU||new Zn,dU=dU||new Zn,hU.setScalar(0),dU.setScalar(0),1===s?hU.setScalar(i):i.isColor?hU.set(i.r,i.g,i.b,1):hU.set(i.x,i.y,i.z||0,i.w||0),1===a?dU.setScalar(r):r.isColor?dU.set(r.r,r.g,r.b,1):dU.set(r.x,r.y,r.z||0,r.w||0);const o=4,l=o*t.count,c=new Float32Array(l);for(let e=0;e<l;e++){const t=e%o,n=hU.getComponent(t),i=dU.getComponent(t);c[e]=Sn.lerp(n,i,Math.random())}const u=this.getNodeType(e);if(t.count<=4096)n=hE(c,"vec4",t.count).element(fC).convert(u);else{const t=new ba(c,4);e.geometry.setAttribute("__range"+this.id,t),n=IM(t).convert(u)}}else n=eT(0);return n}}const mU=H_(pU).setParameterLength(2);class fU extends Yx{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const n=this.getBuiltinName(e),i=this.getNodeType(e);return"compute"===e.shaderStage?e.format(n,i,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(i))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const gU=(e,t)=>k_(new fU(e,t)),vU=gU("numWorkgroups","uvec3"),bU=gU("workgroupId","uvec3"),yU=gU("globalId","uvec3"),xU=gU("localId","uvec3"),_U=gU("subgroupSize","uint");const TU=H_(class extends Yx{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;!0===n.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`,this)}});class SU extends Kx{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let n;const i=e.context.assign;if(n=super.generate(e),!0!==i){const i=this.getNodeType(e);n=e.format(n,i,t)}return n}}class wU extends Yx{constructor(e,t,n=0){super(t),this.bufferType=t,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e,this.name=""}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return k_(new SU(this,e))}generate(e){const t=""!==this.name?this.name:`${this.scope}Array_${this.id}`;return e.getScopedArray(t,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}class MU extends Yx{static get type(){return"AtomicFunctionNode"}constructor(e,t,n){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),n=t.parents,i=this.method,r=this.getNodeType(e),s=this.getInputType(e),a=this.pointerNode,o=this.valueNode,l=[];l.push(`&${a.build(e,s)}`),null!==o&&l.push(o.build(e,s));const c=`${e.getMethod(i,r)}( ${l.join(", ")} )`;if(!(!!n&&(1===n.length&&!0===n[0].isStackNode)))return void 0===t.constNode&&(t.constNode=XM(c,r).toConst()),t.constNode.build(e);e.addLineFlowCode(c,this)}}MU.ATOMIC_LOAD="atomicLoad",MU.ATOMIC_STORE="atomicStore",MU.ATOMIC_ADD="atomicAdd",MU.ATOMIC_SUB="atomicSub",MU.ATOMIC_MAX="atomicMax",MU.ATOMIC_MIN="atomicMin",MU.ATOMIC_AND="atomicAnd",MU.ATOMIC_OR="atomicOr",MU.ATOMIC_XOR="atomicXor";const EU=H_(MU),AU=(e,t,n)=>EU(e,t,n).toStack();class RU extends Zx{static get type(){return"SubgroupFunctionNode"}constructor(e,t=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=n}getInputType(e){const t=this.aNode?this.aNode.getNodeType(e):null,n=this.bNode?this.bNode.getNodeType(e):null;return(e.isMatrix(t)?0:e.getTypeLength(t))>(e.isMatrix(n)?0:e.getTypeLength(n))?t:n}getNodeType(e){const t=this.method;return t===RU.SUBGROUP_ELECT?"bool":t===RU.SUBGROUP_BALLOT?"uvec4":this.getInputType(e)}generate(e,t){const n=this.method,i=this.getNodeType(e),r=this.getInputType(e),s=this.aNode,a=this.bNode,o=[];if(n===RU.SUBGROUP_BROADCAST||n===RU.SUBGROUP_SHUFFLE||n===RU.QUAD_BROADCAST){const t=a.getNodeType(e);o.push(s.build(e,i),a.build(e,"float"===t?"int":i))}else n===RU.SUBGROUP_SHUFFLE_XOR||n===RU.SUBGROUP_SHUFFLE_DOWN||n===RU.SUBGROUP_SHUFFLE_UP?o.push(s.build(e,i),a.build(e,"uint")):(null!==s&&o.push(s.build(e,r)),null!==a&&o.push(a.build(e,r)));const l=0===o.length?"()":`( ${o.join(", ")} )`;return e.format(`${e.getMethod(n,i)}${l}`,i,t)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}RU.SUBGROUP_ELECT="subgroupElect",RU.SUBGROUP_BALLOT="subgroupBallot",RU.SUBGROUP_ADD="subgroupAdd",RU.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd",RU.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd",RU.SUBGROUP_MUL="subgroupMul",RU.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul",RU.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul",RU.SUBGROUP_AND="subgroupAnd",RU.SUBGROUP_OR="subgroupOr",RU.SUBGROUP_XOR="subgroupXor",RU.SUBGROUP_MIN="subgroupMin",RU.SUBGROUP_MAX="subgroupMax",RU.SUBGROUP_ALL="subgroupAll",RU.SUBGROUP_ANY="subgroupAny",RU.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst",RU.QUAD_SWAP_X="quadSwapX",RU.QUAD_SWAP_Y="quadSwapY",RU.QUAD_SWAP_DIAGONAL="quadSwapDiagonal",RU.SUBGROUP_BROADCAST="subgroupBroadcast",RU.SUBGROUP_SHUFFLE="subgroupShuffle",RU.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor",RU.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp",RU.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown",RU.QUAD_BROADCAST="quadBroadcast";const CU=j_(RU,RU.SUBGROUP_ELECT).setParameterLength(0),NU=j_(RU,RU.SUBGROUP_BALLOT).setParameterLength(1),PU=j_(RU,RU.SUBGROUP_ADD).setParameterLength(1),LU=j_(RU,RU.SUBGROUP_INCLUSIVE_ADD).setParameterLength(1),IU=j_(RU,RU.SUBGROUP_EXCLUSIVE_AND).setParameterLength(1),DU=j_(RU,RU.SUBGROUP_MUL).setParameterLength(1),FU=j_(RU,RU.SUBGROUP_INCLUSIVE_MUL).setParameterLength(1),UU=j_(RU,RU.SUBGROUP_EXCLUSIVE_MUL).setParameterLength(1),OU=j_(RU,RU.SUBGROUP_AND).setParameterLength(1),BU=j_(RU,RU.SUBGROUP_OR).setParameterLength(1),kU=j_(RU,RU.SUBGROUP_XOR).setParameterLength(1),VU=j_(RU,RU.SUBGROUP_MIN).setParameterLength(1),zU=j_(RU,RU.SUBGROUP_MAX).setParameterLength(1),GU=j_(RU,RU.SUBGROUP_ALL).setParameterLength(0),HU=j_(RU,RU.SUBGROUP_ANY).setParameterLength(0),WU=j_(RU,RU.SUBGROUP_BROADCAST_FIRST).setParameterLength(2),jU=j_(RU,RU.QUAD_SWAP_X).setParameterLength(1),XU=j_(RU,RU.QUAD_SWAP_Y).setParameterLength(1),qU=j_(RU,RU.QUAD_SWAP_DIAGONAL).setParameterLength(1),$U=j_(RU,RU.SUBGROUP_BROADCAST).setParameterLength(2),YU=j_(RU,RU.SUBGROUP_SHUFFLE).setParameterLength(2),KU=j_(RU,RU.SUBGROUP_SHUFFLE_XOR).setParameterLength(2),QU=j_(RU,RU.SUBGROUP_SHUFFLE_UP).setParameterLength(2),ZU=j_(RU,RU.SUBGROUP_SHUFFLE_DOWN).setParameterLength(2),JU=j_(RU,RU.QUAD_BROADCAST).setParameterLength(1);let eO;function tO(e){eO=eO||new WeakMap;let t=eO.get(e);return void 0===t&&eO.set(e,t={}),t}function nO(e){const t=tO(e);return t.shadowMatrix||(t.shadowMatrix=sS("mat4").setGroup(nS).onRenderUpdate(t=>(!0===e.castShadow&&!1!==t.renderer.shadowMap.enabled||e.shadow.updateMatrices(e),e.shadow.matrix)))}function iO(e,t=lA){const n=nO(e).mul(t);return n.xyz.div(n.w)}function rO(e){const t=tO(e);return t.position||(t.position=sS(new En).setGroup(nS).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(e.matrixWorld)))}function sO(e){const t=tO(e);return t.targetPosition||(t.targetPosition=sS(new En).setGroup(nS).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(e.target.matrixWorld)))}function aO(e){const t=tO(e);return t.viewPosition||(t.viewPosition=sS(new En).setGroup(nS).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new En,n.value.setFromMatrixPosition(e.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const oO=e=>IE.transformDirection(rO(e).sub(sO(e))),lO=(e,t)=>{for(const n of t)if(n.isAnalyticLightNode&&n.light.id===e)return n;return null},cO=new WeakMap,uO=[];class hO extends Yx{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=TT("vec3","totalDiffuse"),this.totalSpecularNode=TT("vec3","totalSpecular"),this.outgoingLightNode=TT("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let n=0;n<e.length;n++){const t=e[n];if(uO.push(t.id),uO.push(t.castShadow?1:0),!0===t.isSpotLight){const e=null!==t.map?t.map.id:-1,n=t.colorNode?t.colorNode.getCacheKey():-1;uO.push(e,n)}}const t=Tx(uO);return uO.length=0,t}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const n of t.nodes)n.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,i=(e=>e.sort((e,t)=>e.id-t.id))(this._lights),r=e.renderer.library;for(const s of i)if(s.isNode)t.push(k_(s));else{let e=null;if(null!==n&&(e=lO(s.id,n)),null===e){const e=r.getLightNodeClass(s.constructor);if(null===e){console.warn(`LightsNode.setupNodeLights: Light node not found for ${s.constructor.name}`);continue}let n=null;cO.has(s)?n=cO.get(s):(n=k_(new e(s)),cO.set(s,n)),t.push(n)}}this._lightNodes=t}setupDirectLight(e,t,n){const{lightingModel:i,reflectedLight:r}=e.context;i.direct({...n,lightNode:t,reflectedLight:r},e)}setupDirectRectAreaLight(e,t,n){const{lightingModel:i,reflectedLight:r}=e.context;i.directRectArea({...n,lightNode:t,reflectedLight:r},e)}setupLights(e,t){for(const n of t)n.build(e)}getLightNodes(e){return null===this._lightNodes&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let n=this.outgoingLightNode;const i=e.context,r=i.lightingModel,s=e.getNodeProperties(this);if(r){const{totalDiffuseNode:t,totalSpecularNode:a}=this;i.outgoingLight=n;const o=e.addStack();s.nodes=o.nodes,r.start(e);const{backdrop:l,backdropAlpha:c}=i,{directDiffuse:u,directSpecular:h,indirectDiffuse:d,indirectSpecular:p}=i.reflectedLight;let m=u.add(d);null!==l&&(m=lT(null!==c?c.mix(m,l):l),i.material.transparent=!0),t.assign(m),a.assign(h.add(p)),n.assign(t.add(a)),r.finish(e),n=n.bypass(e.removeStack())}else s.nodes=[];return e.lightsNode=t,n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class dO extends Yx{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=Vx.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){pO.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||lA)}}const pO=TT("vec3","shadowPositionWorld");function mO(e,t={}){return t.toneMapping=e.toneMapping,t.toneMappingExposure=e.toneMappingExposure,t.outputColorSpace=e.outputColorSpace,t.renderTarget=e.getRenderTarget(),t.activeCubeFace=e.getActiveCubeFace(),t.activeMipmapLevel=e.getActiveMipmapLevel(),t.renderObjectFunction=e.getRenderObjectFunction(),t.pixelRatio=e.getPixelRatio(),t.mrt=e.getMRT(),t.clearColor=e.getClearColor(t.clearColor||new wr),t.clearAlpha=e.getClearAlpha(),t.autoClear=e.autoClear,t.scissorTest=e.getScissorTest(),t}function fO(e,t){return t=mO(e,t),e.setMRT(null),e.setRenderObjectFunction(null),e.setClearColor(0,1),e.autoClear=!0,t}function gO(e,t){e.toneMapping=t.toneMapping,e.toneMappingExposure=t.toneMappingExposure,e.outputColorSpace=t.outputColorSpace,e.setRenderTarget(t.renderTarget,t.activeCubeFace,t.activeMipmapLevel),e.setRenderObjectFunction(t.renderObjectFunction),e.setPixelRatio(t.pixelRatio),e.setMRT(t.mrt),e.setClearColor(t.clearColor,t.clearAlpha),e.autoClear=t.autoClear,e.setScissorTest(t.scissorTest)}function vO(e,t={}){return t.background=e.background,t.backgroundNode=e.backgroundNode,t.overrideMaterial=e.overrideMaterial,t}function bO(e,t){return t=vO(e,t),e.background=null,e.backgroundNode=null,e.overrideMaterial=null,t}function yO(e,t){e.background=t.background,e.backgroundNode=t.backgroundNode,e.overrideMaterial=t.overrideMaterial}function xO(e,t,n){return n=bO(t,n=fO(e,n))}function _O(e,t,n){gO(e,n),yO(t,n)}var TO=Object.freeze({__proto__:null,resetRendererAndSceneState:xO,resetRendererState:fO,resetSceneState:bO,restoreRendererAndSceneState:_O,restoreRendererState:gO,restoreSceneState:yO,saveRendererAndSceneState:function(e,t,n={}){return n=vO(t,n=mO(e,n))},saveRendererState:mO,saveSceneState:vO});const SO=new WeakMap,wO=$_(({depthTexture:e,shadowCoord:t,depthLayer:n})=>{let i=lE(e,t.xy).setName("t_basic");return e.isArrayTexture&&(i=i.depth(n)),i.compare(t.z)}),MO=$_(({depthTexture:e,shadowCoord:t,shadow:n,depthLayer:i})=>{const r=(t,n)=>{let r=lE(e,t);return e.isArrayTexture&&(r=r.depth(i)),r.compare(n)},s=WA("mapSize","vec2",n).setGroup(nS),a=WA("radius","float",n).setGroup(nS),o=rT(1).div(s),l=o.x.negate().mul(a),c=o.y.negate().mul(a),u=o.x.mul(a),h=o.y.mul(a),d=l.div(2),p=c.div(2),m=u.div(2),f=h.div(2);return mS(r(t.xy.add(rT(l,c)),t.z),r(t.xy.add(rT(0,c)),t.z),r(t.xy.add(rT(u,c)),t.z),r(t.xy.add(rT(d,p)),t.z),r(t.xy.add(rT(0,p)),t.z),r(t.xy.add(rT(m,p)),t.z),r(t.xy.add(rT(l,0)),t.z),r(t.xy.add(rT(d,0)),t.z),r(t.xy,t.z),r(t.xy.add(rT(m,0)),t.z),r(t.xy.add(rT(u,0)),t.z),r(t.xy.add(rT(d,f)),t.z),r(t.xy.add(rT(0,f)),t.z),r(t.xy.add(rT(m,f)),t.z),r(t.xy.add(rT(l,h)),t.z),r(t.xy.add(rT(0,h)),t.z),r(t.xy.add(rT(u,h)),t.z)).mul(1/17)}),EO=$_(({depthTexture:e,shadowCoord:t,shadow:n,depthLayer:i})=>{const r=(t,n)=>{let r=lE(e,t);return e.isArrayTexture&&(r=r.depth(i)),r.compare(n)},s=WA("mapSize","vec2",n).setGroup(nS),a=rT(1).div(s),o=a.x,l=a.y,c=t.xy,u=rw(c.mul(s).add(.5));return c.subAssign(u.mul(a)),mS(r(c,t.z),r(c.add(rT(o,0)),t.z),r(c.add(rT(0,l)),t.z),r(c.add(a),t.z),zw(r(c.add(rT(o.negate(),0)),t.z),r(c.add(rT(o.mul(2),0)),t.z),u.x),zw(r(c.add(rT(o.negate(),l)),t.z),r(c.add(rT(o.mul(2),l)),t.z),u.x),zw(r(c.add(rT(0,l.negate())),t.z),r(c.add(rT(0,l.mul(2))),t.z),u.y),zw(r(c.add(rT(o,l.negate())),t.z),r(c.add(rT(o,l.mul(2))),t.z),u.y),zw(zw(r(c.add(rT(o.negate(),l.negate())),t.z),r(c.add(rT(o.mul(2),l.negate())),t.z),u.x),zw(r(c.add(rT(o.negate(),l.mul(2))),t.z),r(c.add(rT(o.mul(2),l.mul(2))),t.z),u.x),u.y)).mul(1/9)}),AO=$_(({depthTexture:e,shadowCoord:t,depthLayer:n})=>{const i=eT(1).toVar();let r=lE(e).sample(t.xy);e.isArrayTexture&&(r=r.depth(n)),r=r.rg;const s=Rw(t.z,r.x);return Q_(s.notEqual(eT(1)),()=>{const e=t.z.sub(r.x),n=Aw(0,r.y.mul(r.y));let a=n.div(n.add(e.mul(e)));a=Gw(fS(a,.3).div(.95-.3)),i.assign(Gw(Aw(s,a)))}),i}),RO=$_(([e,t,n])=>{let i=lA.sub(e).length();return i=i.sub(t).div(n.sub(t)),i=i.saturate(),i}),CO=e=>{let t=SO.get(e);if(void 0===t){const n=e.isPointLight?(e=>{const t=e.shadow.camera,n=WA("near","float",t).setGroup(nS),i=WA("far","float",t).setGroup(nS),r=GE(e);return RO(r,n,i)})(e):null;t=new _N,t.colorNode=dT(0,0,0,1),t.depthNode=n,t.isShadowPassMaterial=!0,t.name="ShadowMaterial",t.fog=!1,SO.set(e,t)}return t},NO=new gI,PO=[],LO=(e,t,n,i)=>{PO[0]=e,PO[1]=t;let r=NO.get(PO);return void 0!==r&&r.shadowType===n&&r.useVelocity===i||(r=(r,s,a,o,l,c,...u)=>{(!0===r.castShadow||r.receiveShadow&&3===n)&&(i&&(Fx(r).useVelocity=!0),r.onBeforeShadow(e,r,a,t.camera,o,s.overrideMaterial,c),e.renderObject(r,s,a,o,l,c,...u),r.onAfterShadow(e,r,a,t.camera,o,s.overrideMaterial,c))},r.shadowType=n,r.useVelocity=i,NO.set(PO,r)),PO[0]=null,PO[1]=null,r},IO=$_(({samples:e,radius:t,size:n,shadowPass:i,depthLayer:r})=>{const s=eT(0).toVar("meanVertical"),a=eT(0).toVar("squareMeanVertical"),o=e.lessThanEqual(eT(1)).select(eT(0),eT(2).div(e.sub(1))),l=e.lessThanEqual(eT(1)).select(eT(0),eT(-1));DC({start:tT(0),end:tT(e),type:"int",condition:"<"},({i:e})=>{const c=l.add(eT(e).mul(o));let u=i.sample(mS(TE.xy,rT(0,c).mul(t)).div(n));i.value.isArrayTexture&&(u=u.depth(r)),u=u.x,s.addAssign(u),a.addAssign(u.mul(u))}),s.divAssign(e),a.divAssign(e);const c=JS(a.sub(s.mul(s)));return rT(s,c)}),DO=$_(({samples:e,radius:t,size:n,shadowPass:i,depthLayer:r})=>{const s=eT(0).toVar("meanHorizontal"),a=eT(0).toVar("squareMeanHorizontal"),o=e.lessThanEqual(eT(1)).select(eT(0),eT(2).div(e.sub(1))),l=e.lessThanEqual(eT(1)).select(eT(0),eT(-1));DC({start:tT(0),end:tT(e),type:"int",condition:"<"},({i:e})=>{const c=l.add(eT(e).mul(o));let u=i.sample(mS(TE.xy,rT(c,0).mul(t)).div(n));i.value.isArrayTexture&&(u=u.depth(r)),s.addAssign(u.x),a.addAssign(mS(u.y.mul(u.y),u.x.mul(u.x)))}),s.divAssign(e),a.divAssign(e);const c=JS(a.sub(s.mul(s)));return rT(s,c)}),FO=[wO,MO,EO,AO];let UO;const OO=new KD;class BO extends dO{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:i,shadow:r,depthLayer:s}){const a=i.x.greaterThanEqual(0).and(i.x.lessThanEqual(1)).and(i.y.greaterThanEqual(0)).and(i.y.lessThanEqual(1)).and(i.z.lessThanEqual(1)),o=t({depthTexture:n,shadowCoord:i,shadow:r,depthLayer:s});return a.select(o,eT(1))}setupShadowCoord(e,t){const{shadow:n}=this,{renderer:i}=e,r=WA("bias","float",n).setGroup(nS);let s,a=t;if(n.camera.isOrthographicCamera||!0!==i.logarithmicDepthBuffer)a=a.xyz.div(a.w),s=a.z,i.coordinateSystem===ln&&(s=s.mul(2).sub(1));else{const e=a.w;a=a.xy.div(e);const t=WA("near","float",n.camera).setGroup(nS),i=WA("far","float",n.camera).setGroup(nS);s=iN(e.negate(),t,i)}return a=lT(a.x,a.y.oneMinus(),s.add(r)),a}getShadowFilterFn(e){return FO[e]}setupRenderTarget(e,t){const n=new Lo(e.mapSize.width,e.mapSize.height);n.name="ShadowDepthTexture",n.compareFunction=Kt;const i=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return i.texture.name="ShadowMap",i.texture.type=e.mapType,i.depthTexture=n,{shadowMap:i,depthTexture:n}}setupShadow(e){const{renderer:t}=e,{light:n,shadow:i}=this,r=t.shadowMap.type,{depthTexture:s,shadowMap:a}=this.setupRenderTarget(i,e);if(i.camera.updateProjectionMatrix(),3===r&&!0!==i.isPointLightShadow){s.compareFunction=null,a.depth>1?(a._vsmShadowMapVertical||(a._vsmShadowMapVertical=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ue,type:Se,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=a._vsmShadowMapVertical,a._vsmShadowMapHorizontal||(a._vsmShadowMapHorizontal=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ue,type:Se,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=a._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ue,type:Se,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ue,type:Se,depthBuffer:!1}));let t=lE(s);s.isArrayTexture&&(t=t.depth(this.depthLayer));let n=lE(this.vsmShadowMapVertical.texture);s.isArrayTexture&&(n=n.depth(this.depthLayer));const r=WA("blurSamples","float",i).setGroup(nS),o=WA("radius","float",i).setGroup(nS),l=WA("mapSize","vec2",i).setGroup(nS);let c=this.vsmMaterialVertical||(this.vsmMaterialVertical=new _N);c.fragmentNode=IO({samples:r,radius:o,size:l,shadowPass:t,depthLayer:this.depthLayer}).context(e.getSharedContext()),c.name="VSMVertical",c=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new _N),c.fragmentNode=DO({samples:r,radius:o,size:l,shadowPass:n,depthLayer:this.depthLayer}).context(e.getSharedContext()),c.name="VSMHorizontal"}const o=WA("intensity","float",i).setGroup(nS),l=WA("normalBias","float",i).setGroup(nS),c=nO(n).mul(pO.add(TA.mul(l))),u=this.setupShadowCoord(e,c),h=i.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(null===h)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const d=3===r&&!0!==i.isPointLightShadow?this.vsmShadowMapHorizontal.texture:s,p=this.setupShadowFilter(e,{filterFn:h,shadowTexture:a.texture,depthTexture:d,shadowCoord:u,shadow:i,depthLayer:this.depthLayer});let m=lE(a.texture,u);s.isArrayTexture&&(m=m.depth(this.depthLayer));const f=zw(1,p.rgb.mix(m,1),o.mul(m.a)).toVar();return this.shadowMap=a,this.shadow.map=a,f}setup(e){if(!1!==e.renderer.shadowMap.enabled)return $_(()=>{let t=this._node;return this.setupShadowPosition(e),null===t&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:r,scene:s}=e;t.updateMatrices(i),n.setSize(t.mapSize.width,t.mapSize.height,n.depth),r.render(s,t.camera)}updateShadow(e){const{shadowMap:t,light:n,shadow:i}=this,{renderer:r,scene:s,camera:a}=e,o=r.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const c=i.camera.layers.mask;4294967294&i.camera.layers.mask||(i.camera.layers.mask=a.layers.mask);const u=r.getRenderObjectFunction(),h=r.getMRT(),d=!!h&&h.has("velocity");UO=xO(r,s,UO),s.overrideMaterial=CO(n),r.setRenderObjectFunction(LO(r,i,o,d)),r.setClearColor(0,0),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(u),3===o&&!0!==i.isPointLightShadow&&this.vsmPass(r),i.camera.layers.mask=c,_O(r,s,UO)}vsmPass(e){const{shadow:t}=this,n=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,n),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,n),e.setRenderTarget(this.vsmShadowMapVertical),OO.material=this.vsmMaterialVertical,OO.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),OO.material=this.vsmMaterialHorizontal,OO.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let n=t.needsUpdate||t.autoUpdate;n&&(this._cameraFrameId[e.camera]===e.frameId&&(n=!1),this._cameraFrameId[e.camera]=e.frameId),n&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const kO=(e,t)=>k_(new BO(e,t)),VO=new wr,zO=$_(([e,t])=>{const n=e.toVar(),i=hw(n),r=vS(1,Aw(i.x,Aw(i.y,i.z)));i.mulAssign(r),n.mulAssign(r.mul(t.mul(2).oneMinus()));const s=rT(n.xy).toVar(),a=t.mul(1.5).oneMinus();return Q_(i.z.greaterThanEqual(a),()=>{Q_(n.z.greaterThan(0),()=>{s.x.assign(fS(4,n.x))})}).ElseIf(i.x.greaterThanEqual(a),()=>{const e=dw(n.x);s.x.assign(n.z.mul(e).add(e.mul(2)))}).ElseIf(i.y.greaterThanEqual(a),()=>{const e=dw(n.y);s.x.assign(n.x.add(e.mul(2)).add(2)),s.y.assign(n.z.mul(e).sub(2))}),rT(.125,.25).mul(s).add(rT(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),GO=$_(({depthTexture:e,bd3D:t,dp:n,texelSize:i})=>lE(e,zO(t,i.y)).compare(n)),HO=$_(({depthTexture:e,bd3D:t,dp:n,texelSize:i,shadow:r})=>{const s=WA("radius","float",r).setGroup(nS),a=rT(-1,1).mul(s).mul(i.y);return lE(e,zO(t.add(a.xyy),i.y)).compare(n).add(lE(e,zO(t.add(a.yyy),i.y)).compare(n)).add(lE(e,zO(t.add(a.xyx),i.y)).compare(n)).add(lE(e,zO(t.add(a.yyx),i.y)).compare(n)).add(lE(e,zO(t,i.y)).compare(n)).add(lE(e,zO(t.add(a.xxy),i.y)).compare(n)).add(lE(e,zO(t.add(a.yxy),i.y)).compare(n)).add(lE(e,zO(t.add(a.xxx),i.y)).compare(n)).add(lE(e,zO(t.add(a.yxx),i.y)).compare(n)).mul(1/9)}),WO=$_(({filterFn:e,depthTexture:t,shadowCoord:n,shadow:i})=>{const r=n.xyz.toVar(),s=r.length(),a=sS("float").setGroup(nS).onRenderUpdate(()=>i.camera.near),o=sS("float").setGroup(nS).onRenderUpdate(()=>i.camera.far),l=WA("bias","float",i).setGroup(nS),c=sS(i.mapSize).setGroup(nS),u=eT(1).toVar();return Q_(s.sub(o).lessThanEqual(0).and(s.sub(a).greaterThanEqual(0)),()=>{const n=s.sub(a).div(o.sub(a)).toVar();n.addAssign(l);const h=r.normalize(),d=rT(1).div(c.mul(rT(4,2)));u.assign(e({depthTexture:t,bd3D:h,dp:n,texelSize:d,shadow:i}))}),u}),jO=new Zn,XO=new wn,qO=new wn;class $O extends BO{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return 0===e?GO:HO}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:r,shadow:s}){return WO({filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:r,shadow:s})}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:r,scene:s}=e,a=t.getFrameExtents();qO.copy(t.mapSize),qO.multiply(a),n.setSize(qO.width,qO.height),XO.copy(t.mapSize);const o=r.autoClear,l=r.getClearColor(VO),c=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const u=t.getViewportCount();for(let h=0;h<u;h++){const e=t.getViewport(h),a=XO.x*e.x,o=qO.y-XO.y-XO.y*e.y;jO.set(a,o,XO.x*e.z,XO.y*e.w),n.viewport.copy(jO),t.updateMatrices(i,h),r.render(s,t.camera)}r.autoClear=o,r.setClearColor(l,c)}}const YO=(e,t)=>k_(new $O(e,t));class KO extends zC{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new wr,this.colorNode=e&&e.colorNode||sS(this.color).setGroup(nS),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Vx.FRAME}getHash(){return this.light.uuid}getLightVector(e){return aO(this.light).sub(e.context.positionView||uA)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return kO(this.light)}setupShadow(e){const{renderer:t}=e;if(!1===t.shadowMap.enabled)return;let n=this.shadowColorNode;if(null===n){const e=this.light.shadow.shadowNode;let t;t=void 0!==e?k_(e):this.setupShadowNode(),this.shadowNode=t,this.shadowColorNode=n=this.colorNode.mul(t),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),n=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),n&&e.lightsNode.setupDirectRectAreaLight(e,this,n)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const QO=$_(({lightDistance:e,cutoffDistance:t,decayExponent:n})=>{const i=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(i.mul(e.div(t).pow4().oneMinus().clamp().pow2()),i)}),ZO=({color:e,lightVector:t,cutoffDistance:n,decayExponent:i})=>{const r=t.normalize(),s=t.length(),a=QO({lightDistance:s,cutoffDistance:n,decayExponent:i});return{lightDirection:r,lightColor:e.mul(a)}};class JO extends KO{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=sS(0).setGroup(nS),this.decayExponentNode=sS(2).setGroup(nS)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return YO(this.light)}setupDirect(e){return ZO({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const eB=$_(([e=eE()])=>{const t=e.mul(2),n=t.x.floor(),i=t.y.floor();return n.add(i).mod(2).sign()}),tB=$_(([e=eE()],{renderer:t,material:n})=>{const i=Vw(e.mul(2).sub(1));let r;if(n.alphaToCoverage&&t.samples>1){const e=eT(i.fwidth()).toVar();r=jw(e.oneMinus(),e.add(1),i).oneMinus()}else r=tM(i.greaterThan(1),0,1);return r}),nB=$_(([e,t,n])=>{const i=eT(n).toVar(),r=eT(t).toVar(),s=iT(e).toVar();return tM(s,r,i)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),iB=$_(([e,t])=>{const n=iT(t).toVar(),i=eT(e).toVar();return tM(n,i.negate(),i)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),rB=$_(([e])=>{const t=eT(e).toVar();return tT(tw(t))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),sB=$_(([e,t])=>{const n=eT(e).toVar();return t.assign(rB(n)),n.sub(eT(t))}),aB=$_(([e,t,n,i,r,s])=>{const a=eT(s).toVar(),o=eT(r).toVar(),l=eT(i).toVar(),c=eT(n).toVar(),u=eT(t).toVar(),h=eT(e).toVar(),d=eT(fS(1,o)).toVar();return fS(1,a).mul(h.mul(d).add(u.mul(o))).add(a.mul(c.mul(d).add(l.mul(o))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),oB=$_(([e,t,n,i,r,s])=>{const a=eT(s).toVar(),o=eT(r).toVar(),l=lT(i).toVar(),c=lT(n).toVar(),u=lT(t).toVar(),h=lT(e).toVar(),d=eT(fS(1,o)).toVar();return fS(1,a).mul(h.mul(d).add(u.mul(o))).add(a.mul(c.mul(d).add(l.mul(o))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),lB=xD([aB,oB]),cB=$_(([e,t,n,i,r,s,a,o,l,c,u])=>{const h=eT(u).toVar(),d=eT(c).toVar(),p=eT(l).toVar(),m=eT(o).toVar(),f=eT(a).toVar(),g=eT(s).toVar(),v=eT(r).toVar(),b=eT(i).toVar(),y=eT(n).toVar(),x=eT(t).toVar(),_=eT(e).toVar(),T=eT(fS(1,p)).toVar(),S=eT(fS(1,d)).toVar();return eT(fS(1,h)).toVar().mul(S.mul(_.mul(T).add(x.mul(p))).add(d.mul(y.mul(T).add(b.mul(p))))).add(h.mul(S.mul(v.mul(T).add(g.mul(p))).add(d.mul(f.mul(T).add(m.mul(p))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),uB=$_(([e,t,n,i,r,s,a,o,l,c,u])=>{const h=eT(u).toVar(),d=eT(c).toVar(),p=eT(l).toVar(),m=lT(o).toVar(),f=lT(a).toVar(),g=lT(s).toVar(),v=lT(r).toVar(),b=lT(i).toVar(),y=lT(n).toVar(),x=lT(t).toVar(),_=lT(e).toVar(),T=eT(fS(1,p)).toVar(),S=eT(fS(1,d)).toVar();return eT(fS(1,h)).toVar().mul(S.mul(_.mul(T).add(x.mul(p))).add(d.mul(y.mul(T).add(b.mul(p))))).add(h.mul(S.mul(v.mul(T).add(g.mul(p))).add(d.mul(f.mul(T).add(m.mul(p))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),hB=xD([cB,uB]),dB=$_(([e,t,n])=>{const i=eT(n).toVar(),r=eT(t).toVar(),s=nT(e).toVar(),a=nT(s.bitAnd(nT(7))).toVar(),o=eT(nB(a.lessThan(nT(4)),r,i)).toVar(),l=eT(gS(2,nB(a.lessThan(nT(4)),i,r))).toVar();return iB(o,iT(a.bitAnd(nT(1)))).add(iB(l,iT(a.bitAnd(nT(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),pB=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=eT(t).toVar(),o=nT(e).toVar(),l=nT(o.bitAnd(nT(15))).toVar(),c=eT(nB(l.lessThan(nT(8)),a,s)).toVar(),u=eT(nB(l.lessThan(nT(4)),s,nB(l.equal(nT(12)).or(l.equal(nT(14))),a,r))).toVar();return iB(c,iT(l.bitAnd(nT(1)))).add(iB(u,iT(l.bitAnd(nT(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),mB=xD([dB,pB]),fB=$_(([e,t,n])=>{const i=eT(n).toVar(),r=eT(t).toVar(),s=uT(e).toVar();return lT(mB(s.x,r,i),mB(s.y,r,i),mB(s.z,r,i))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),gB=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=eT(t).toVar(),o=uT(e).toVar();return lT(mB(o.x,a,s,r),mB(o.y,a,s,r),mB(o.z,a,s,r))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),vB=xD([fB,gB]),bB=$_(([e])=>{const t=eT(e).toVar();return gS(.6616,t)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),yB=$_(([e])=>{const t=eT(e).toVar();return gS(.982,t)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),xB=xD([bB,$_(([e])=>{const t=lT(e).toVar();return gS(.6616,t)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),_B=xD([yB,$_(([e])=>{const t=lT(e).toVar();return gS(.982,t)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),TB=$_(([e,t])=>{const n=tT(t).toVar(),i=nT(e).toVar();return i.shiftLeft(n).bitOr(i.shiftRight(tT(32).sub(n)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),SB=$_(([e,t,n])=>{e.subAssign(n),e.bitXorAssign(TB(n,tT(4))),n.addAssign(t),t.subAssign(e),t.bitXorAssign(TB(e,tT(6))),e.addAssign(n),n.subAssign(t),n.bitXorAssign(TB(t,tT(8))),t.addAssign(e),e.subAssign(n),e.bitXorAssign(TB(n,tT(16))),n.addAssign(t),t.subAssign(e),t.bitXorAssign(TB(e,tT(19))),e.addAssign(n),n.subAssign(t),n.bitXorAssign(TB(t,tT(4))),t.addAssign(e)}),wB=$_(([e,t,n])=>{const i=nT(n).toVar(),r=nT(t).toVar(),s=nT(e).toVar();return i.bitXorAssign(r),i.subAssign(TB(r,tT(14))),s.bitXorAssign(i),s.subAssign(TB(i,tT(11))),r.bitXorAssign(s),r.subAssign(TB(s,tT(25))),i.bitXorAssign(r),i.subAssign(TB(r,tT(16))),s.bitXorAssign(i),s.subAssign(TB(i,tT(4))),r.bitXorAssign(s),r.subAssign(TB(s,tT(14))),i.bitXorAssign(r),i.subAssign(TB(r,tT(24))),i}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),MB=$_(([e])=>{const t=nT(e).toVar();return eT(t).div(eT(nT(tT(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),EB=$_(([e])=>{const t=eT(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),AB=$_(([e])=>{const t=tT(e).toVar(),n=nT(nT(1)).toVar(),i=nT(nT(tT(3735928559)).add(n.shiftLeft(nT(2))).add(nT(13))).toVar();return wB(i.add(nT(t)),i,i)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),RB=$_(([e,t])=>{const n=tT(t).toVar(),i=tT(e).toVar(),r=nT(nT(2)).toVar(),s=nT().toVar(),a=nT().toVar(),o=nT().toVar();return s.assign(a.assign(o.assign(nT(tT(3735928559)).add(r.shiftLeft(nT(2))).add(nT(13))))),s.addAssign(nT(i)),a.addAssign(nT(n)),wB(s,a,o)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),CB=$_(([e,t,n])=>{const i=tT(n).toVar(),r=tT(t).toVar(),s=tT(e).toVar(),a=nT(nT(3)).toVar(),o=nT().toVar(),l=nT().toVar(),c=nT().toVar();return o.assign(l.assign(c.assign(nT(tT(3735928559)).add(a.shiftLeft(nT(2))).add(nT(13))))),o.addAssign(nT(s)),l.addAssign(nT(r)),c.addAssign(nT(i)),wB(o,l,c)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),NB=$_(([e,t,n,i])=>{const r=tT(i).toVar(),s=tT(n).toVar(),a=tT(t).toVar(),o=tT(e).toVar(),l=nT(nT(4)).toVar(),c=nT().toVar(),u=nT().toVar(),h=nT().toVar();return c.assign(u.assign(h.assign(nT(tT(3735928559)).add(l.shiftLeft(nT(2))).add(nT(13))))),c.addAssign(nT(o)),u.addAssign(nT(a)),h.addAssign(nT(s)),SB(c,u,h),c.addAssign(nT(r)),wB(c,u,h)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),PB=$_(([e,t,n,i,r])=>{const s=tT(r).toVar(),a=tT(i).toVar(),o=tT(n).toVar(),l=tT(t).toVar(),c=tT(e).toVar(),u=nT(nT(5)).toVar(),h=nT().toVar(),d=nT().toVar(),p=nT().toVar();return h.assign(d.assign(p.assign(nT(tT(3735928559)).add(u.shiftLeft(nT(2))).add(nT(13))))),h.addAssign(nT(c)),d.addAssign(nT(l)),p.addAssign(nT(o)),SB(h,d,p),h.addAssign(nT(a)),d.addAssign(nT(s)),wB(h,d,p)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),LB=xD([AB,RB,CB,NB,PB]),IB=$_(([e,t])=>{const n=tT(t).toVar(),i=tT(e).toVar(),r=nT(LB(i,n)).toVar(),s=uT().toVar();return s.x.assign(r.bitAnd(tT(255))),s.y.assign(r.shiftRight(tT(8)).bitAnd(tT(255))),s.z.assign(r.shiftRight(tT(16)).bitAnd(tT(255))),s}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),DB=$_(([e,t,n])=>{const i=tT(n).toVar(),r=tT(t).toVar(),s=tT(e).toVar(),a=nT(LB(s,r,i)).toVar(),o=uT().toVar();return o.x.assign(a.bitAnd(tT(255))),o.y.assign(a.shiftRight(tT(8)).bitAnd(tT(255))),o.z.assign(a.shiftRight(tT(16)).bitAnd(tT(255))),o}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),FB=xD([IB,DB]),UB=$_(([e])=>{const t=rT(e).toVar(),n=tT().toVar(),i=tT().toVar(),r=eT(sB(t.x,n)).toVar(),s=eT(sB(t.y,i)).toVar(),a=eT(EB(r)).toVar(),o=eT(EB(s)).toVar(),l=eT(lB(mB(LB(n,i),r,s),mB(LB(n.add(tT(1)),i),r.sub(1),s),mB(LB(n,i.add(tT(1))),r,s.sub(1)),mB(LB(n.add(tT(1)),i.add(tT(1))),r.sub(1),s.sub(1)),a,o)).toVar();return xB(l)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),OB=$_(([e])=>{const t=lT(e).toVar(),n=tT().toVar(),i=tT().toVar(),r=tT().toVar(),s=eT(sB(t.x,n)).toVar(),a=eT(sB(t.y,i)).toVar(),o=eT(sB(t.z,r)).toVar(),l=eT(EB(s)).toVar(),c=eT(EB(a)).toVar(),u=eT(EB(o)).toVar(),h=eT(hB(mB(LB(n,i,r),s,a,o),mB(LB(n.add(tT(1)),i,r),s.sub(1),a,o),mB(LB(n,i.add(tT(1)),r),s,a.sub(1),o),mB(LB(n.add(tT(1)),i.add(tT(1)),r),s.sub(1),a.sub(1),o),mB(LB(n,i,r.add(tT(1))),s,a,o.sub(1)),mB(LB(n.add(tT(1)),i,r.add(tT(1))),s.sub(1),a,o.sub(1)),mB(LB(n,i.add(tT(1)),r.add(tT(1))),s,a.sub(1),o.sub(1)),mB(LB(n.add(tT(1)),i.add(tT(1)),r.add(tT(1))),s.sub(1),a.sub(1),o.sub(1)),l,c,u)).toVar();return _B(h)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),BB=xD([UB,OB]),kB=$_(([e])=>{const t=rT(e).toVar(),n=tT().toVar(),i=tT().toVar(),r=eT(sB(t.x,n)).toVar(),s=eT(sB(t.y,i)).toVar(),a=eT(EB(r)).toVar(),o=eT(EB(s)).toVar(),l=lT(lB(vB(FB(n,i),r,s),vB(FB(n.add(tT(1)),i),r.sub(1),s),vB(FB(n,i.add(tT(1))),r,s.sub(1)),vB(FB(n.add(tT(1)),i.add(tT(1))),r.sub(1),s.sub(1)),a,o)).toVar();return xB(l)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),VB=$_(([e])=>{const t=lT(e).toVar(),n=tT().toVar(),i=tT().toVar(),r=tT().toVar(),s=eT(sB(t.x,n)).toVar(),a=eT(sB(t.y,i)).toVar(),o=eT(sB(t.z,r)).toVar(),l=eT(EB(s)).toVar(),c=eT(EB(a)).toVar(),u=eT(EB(o)).toVar(),h=lT(hB(vB(FB(n,i,r),s,a,o),vB(FB(n.add(tT(1)),i,r),s.sub(1),a,o),vB(FB(n,i.add(tT(1)),r),s,a.sub(1),o),vB(FB(n.add(tT(1)),i.add(tT(1)),r),s.sub(1),a.sub(1),o),vB(FB(n,i,r.add(tT(1))),s,a,o.sub(1)),vB(FB(n.add(tT(1)),i,r.add(tT(1))),s.sub(1),a,o.sub(1)),vB(FB(n,i.add(tT(1)),r.add(tT(1))),s,a.sub(1),o.sub(1)),vB(FB(n.add(tT(1)),i.add(tT(1)),r.add(tT(1))),s.sub(1),a.sub(1),o.sub(1)),l,c,u)).toVar();return _B(h)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),zB=xD([kB,VB]),GB=$_(([e])=>{const t=eT(e).toVar(),n=tT(rB(t)).toVar();return MB(LB(n))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),HB=$_(([e])=>{const t=rT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar();return MB(LB(n,i))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),WB=$_(([e])=>{const t=lT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar(),r=tT(rB(t.z)).toVar();return MB(LB(n,i,r))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),jB=$_(([e])=>{const t=dT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar(),r=tT(rB(t.z)).toVar(),s=tT(rB(t.w)).toVar();return MB(LB(n,i,r,s))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),XB=xD([GB,HB,WB,jB]),qB=$_(([e])=>{const t=eT(e).toVar(),n=tT(rB(t)).toVar();return lT(MB(LB(n,tT(0))),MB(LB(n,tT(1))),MB(LB(n,tT(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),$B=$_(([e])=>{const t=rT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar();return lT(MB(LB(n,i,tT(0))),MB(LB(n,i,tT(1))),MB(LB(n,i,tT(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),YB=$_(([e])=>{const t=lT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar(),r=tT(rB(t.z)).toVar();return lT(MB(LB(n,i,r,tT(0))),MB(LB(n,i,r,tT(1))),MB(LB(n,i,r,tT(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),KB=$_(([e])=>{const t=dT(e).toVar(),n=tT(rB(t.x)).toVar(),i=tT(rB(t.y)).toVar(),r=tT(rB(t.z)).toVar(),s=tT(rB(t.w)).toVar();return lT(MB(LB(n,i,r,s,tT(0))),MB(LB(n,i,r,s,tT(1))),MB(LB(n,i,r,s,tT(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),QB=xD([qB,$B,YB,KB]),ZB=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=tT(t).toVar(),o=lT(e).toVar(),l=eT(0).toVar(),c=eT(1).toVar();return DC(a,()=>{l.addAssign(c.mul(BB(o))),c.mulAssign(r),o.mulAssign(s)}),l}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),JB=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=tT(t).toVar(),o=lT(e).toVar(),l=lT(0).toVar(),c=eT(1).toVar();return DC(a,()=>{l.addAssign(c.mul(zB(o))),c.mulAssign(r),o.mulAssign(s)}),l}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),ek=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=tT(t).toVar(),o=lT(e).toVar();return rT(ZB(o,a,s,r),ZB(o.add(lT(tT(19),tT(193),tT(17))),a,s,r))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),tk=$_(([e,t,n,i])=>{const r=eT(i).toVar(),s=eT(n).toVar(),a=tT(t).toVar(),o=lT(e).toVar(),l=lT(JB(o,a,s,r)).toVar(),c=eT(ZB(o.add(lT(tT(19),tT(193),tT(17))),a,s,r)).toVar();return dT(l,c)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),nk=$_(([e,t,n,i,r,s,a])=>{const o=tT(a).toVar(),l=eT(s).toVar(),c=tT(r).toVar(),u=tT(i).toVar(),h=tT(n).toVar(),d=tT(t).toVar(),p=rT(e).toVar(),m=lT(QB(rT(d.add(u),h.add(c)))).toVar(),f=rT(m.x,m.y).toVar();f.subAssign(.5),f.mulAssign(l),f.addAssign(.5);const g=rT(rT(eT(d),eT(h)).add(f)).toVar(),v=rT(g.sub(p)).toVar();return Q_(o.equal(tT(2)),()=>hw(v.x).add(hw(v.y))),Q_(o.equal(tT(3)),()=>Aw(hw(v.x),hw(v.y))),Lw(v,v)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),ik=$_(([e,t,n,i,r,s,a,o,l])=>{const c=tT(l).toVar(),u=eT(o).toVar(),h=tT(a).toVar(),d=tT(s).toVar(),p=tT(r).toVar(),m=tT(i).toVar(),f=tT(n).toVar(),g=tT(t).toVar(),v=lT(e).toVar(),b=lT(QB(lT(g.add(p),f.add(d),m.add(h)))).toVar();b.subAssign(.5),b.mulAssign(u),b.addAssign(.5);const y=lT(lT(eT(g),eT(f),eT(m)).add(b)).toVar(),x=lT(y.sub(v)).toVar();return Q_(c.equal(tT(2)),()=>hw(x.x).add(hw(x.y)).add(hw(x.z))),Q_(c.equal(tT(3)),()=>Aw(hw(x.x),hw(x.y),hw(x.z))),Lw(x,x)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),rk=xD([nk,ik]),sk=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=rT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=rT(sB(s.x,a),sB(s.y,o)).toVar(),c=eT(1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{const n=eT(rk(l,e,t,a,o,r,i)).toVar();c.assign(Ew(c,n))})}),Q_(i.equal(tT(0)),()=>{c.assign(JS(c))}),c}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),ak=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=rT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=rT(sB(s.x,a),sB(s.y,o)).toVar(),c=rT(1e6,1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{const n=eT(rk(l,e,t,a,o,r,i)).toVar();Q_(n.lessThan(c.x),()=>{c.y.assign(c.x),c.x.assign(n)}).ElseIf(n.lessThan(c.y),()=>{c.y.assign(n)})})}),Q_(i.equal(tT(0)),()=>{c.assign(JS(c))}),c}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),ok=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=rT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=rT(sB(s.x,a),sB(s.y,o)).toVar(),c=lT(1e6,1e6,1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{const n=eT(rk(l,e,t,a,o,r,i)).toVar();Q_(n.lessThan(c.x),()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(n)}).ElseIf(n.lessThan(c.y),()=>{c.z.assign(c.y),c.y.assign(n)}).ElseIf(n.lessThan(c.z),()=>{c.z.assign(n)})})}),Q_(i.equal(tT(0)),()=>{c.assign(JS(c))}),c}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),lk=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=lT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=tT().toVar(),c=lT(sB(s.x,a),sB(s.y,o),sB(s.z,l)).toVar(),u=eT(1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{DC({start:-1,end:tT(1),name:"z",condition:"<="},({z:n})=>{const s=eT(rk(c,e,t,n,a,o,l,r,i)).toVar();u.assign(Ew(u,s))})})}),Q_(i.equal(tT(0)),()=>{u.assign(JS(u))}),u}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),ck=xD([sk,lk]),uk=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=lT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=tT().toVar(),c=lT(sB(s.x,a),sB(s.y,o),sB(s.z,l)).toVar(),u=rT(1e6,1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{DC({start:-1,end:tT(1),name:"z",condition:"<="},({z:n})=>{const s=eT(rk(c,e,t,n,a,o,l,r,i)).toVar();Q_(s.lessThan(u.x),()=>{u.y.assign(u.x),u.x.assign(s)}).ElseIf(s.lessThan(u.y),()=>{u.y.assign(s)})})})}),Q_(i.equal(tT(0)),()=>{u.assign(JS(u))}),u}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),hk=xD([ak,uk]),dk=$_(([e,t,n])=>{const i=tT(n).toVar(),r=eT(t).toVar(),s=lT(e).toVar(),a=tT().toVar(),o=tT().toVar(),l=tT().toVar(),c=lT(sB(s.x,a),sB(s.y,o),sB(s.z,l)).toVar(),u=lT(1e6,1e6,1e6).toVar();return DC({start:-1,end:tT(1),name:"x",condition:"<="},({x:e})=>{DC({start:-1,end:tT(1),name:"y",condition:"<="},({y:t})=>{DC({start:-1,end:tT(1),name:"z",condition:"<="},({z:n})=>{const s=eT(rk(c,e,t,n,a,o,l,r,i)).toVar();Q_(s.lessThan(u.x),()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(s)}).ElseIf(s.lessThan(u.y),()=>{u.z.assign(u.y),u.y.assign(s)}).ElseIf(s.lessThan(u.z),()=>{u.z.assign(s)})})})}),Q_(i.equal(tT(0)),()=>{u.assign(JS(u))}),u}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),pk=xD([ok,dk]),mk=$_(([e,t,n,i,r,s,a,o,l,c,u])=>{const h=tT(e).toVar(),d=rT(t).toVar(),p=rT(n).toVar(),m=rT(i).toVar(),f=eT(r).toVar(),g=eT(s).toVar(),v=eT(a).toVar(),b=iT(o).toVar(),y=tT(l).toVar(),x=eT(c).toVar(),_=eT(u).toVar(),T=d.mul(p).add(m),S=eT(0).toVar();return Q_(h.equal(tT(0)),()=>{S.assign(zB(T))}),Q_(h.equal(tT(1)),()=>{S.assign(QB(T))}),Q_(h.equal(tT(2)),()=>{S.assign(pk(T,f,tT(0)))}),Q_(h.equal(tT(3)),()=>{S.assign(JB(lT(T,0),y,x,_))}),S.assign(S.mul(v.sub(g)).add(g)),Q_(b,()=>{S.assign(Gw(S,g,v))}),S}).setLayout({name:"mx_unifiednoise2d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"texcoord",type:"vec2"},{name:"freq",type:"vec2"},{name:"offset",type:"vec2"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),fk=$_(([e,t,n,i,r,s,a,o,l,c,u])=>{const h=tT(e).toVar(),d=lT(t).toVar(),p=lT(n).toVar(),m=lT(i).toVar(),f=eT(r).toVar(),g=eT(s).toVar(),v=eT(a).toVar(),b=iT(o).toVar(),y=tT(l).toVar(),x=eT(c).toVar(),_=eT(u).toVar(),T=d.mul(p).add(m),S=eT(0).toVar();return Q_(h.equal(tT(0)),()=>{S.assign(zB(T))}),Q_(h.equal(tT(1)),()=>{S.assign(QB(T))}),Q_(h.equal(tT(2)),()=>{S.assign(pk(T,f,tT(0)))}),Q_(h.equal(tT(3)),()=>{S.assign(JB(T,y,x,_))}),S.assign(S.mul(v.sub(g)).add(g)),Q_(b,()=>{S.assign(Gw(S,g,v))}),S}).setLayout({name:"mx_unifiednoise3d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"position",type:"vec3"},{name:"freq",type:"vec3"},{name:"offset",type:"vec3"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),gk=$_(([e])=>{const t=e.y,n=e.z,i=lT().toVar();return Q_(t.lessThan(1e-4),()=>{i.assign(lT(n,n,n))}).Else(()=>{let r=e.x;r=r.sub(tw(r)).mul(6).toVar();const s=tT(xw(r)),a=r.sub(eT(s)),o=n.mul(t.oneMinus()),l=n.mul(t.mul(a).oneMinus()),c=n.mul(t.mul(a.oneMinus()).oneMinus());Q_(s.equal(tT(0)),()=>{i.assign(lT(n,c,o))}).ElseIf(s.equal(tT(1)),()=>{i.assign(lT(l,n,o))}).ElseIf(s.equal(tT(2)),()=>{i.assign(lT(o,n,c))}).ElseIf(s.equal(tT(3)),()=>{i.assign(lT(o,l,n))}).ElseIf(s.equal(tT(4)),()=>{i.assign(lT(c,o,n))}).Else(()=>{i.assign(lT(n,o,l))})}),i}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),vk=$_(([e])=>{const t=lT(e).toVar(),n=eT(t.x).toVar(),i=eT(t.y).toVar(),r=eT(t.z).toVar(),s=eT(Ew(n,Ew(i,r))).toVar(),a=eT(Aw(n,Aw(i,r))).toVar(),o=eT(a.sub(s)).toVar(),l=eT().toVar(),c=eT().toVar(),u=eT().toVar();return u.assign(a),Q_(a.greaterThan(0),()=>{c.assign(o.div(a))}).Else(()=>{c.assign(0)}),Q_(c.lessThanEqual(0),()=>{l.assign(0)}).Else(()=>{Q_(n.greaterThanEqual(a),()=>{l.assign(i.sub(r).div(o))}).ElseIf(i.greaterThanEqual(a),()=>{l.assign(mS(2,r.sub(n).div(o)))}).Else(()=>{l.assign(mS(4,n.sub(i).div(o)))}),l.mulAssign(1/6),Q_(l.lessThan(0),()=>{l.addAssign(1)})}),lT(l,c,u)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),bk=$_(([e])=>{const t=lT(e).toVar(),n=hT(TS(t,lT(.04045))).toVar(),i=lT(t.div(12.92)).toVar(),r=lT(Dw(Aw(t.add(lT(.055)),lT(0)).div(1.055),lT(2.4))).toVar();return zw(i,r,n)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),yk=(e,t)=>{e=eT(e),t=eT(t);const n=rT(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return jw(e.sub(n),e.add(n),t)},xk=(e,t,n,i)=>zw(e,t,n[i].clamp()),_k=(e,t,n,i,r)=>zw(e,t,yk(n,i[r])),Tk=$_(([e,t,n])=>{const i=iw(e).toVar(),r=fS(eT(.5).mul(t.sub(n)),lA).div(i).toVar(),s=fS(eT(-.5).mul(t.sub(n)),lA).div(i).toVar(),a=lT().toVar();a.x=i.x.greaterThan(eT(0)).select(r.x,s.x),a.y=i.y.greaterThan(eT(0)).select(r.y,s.y),a.z=i.z.greaterThan(eT(0)).select(r.z,s.z);const o=Ew(a.x,a.y,a.z).toVar();return lA.add(i.mul(o)).toVar().sub(n)}),Sk=$_(([e,t])=>{const n=e.x,i=e.y,r=e.z;let s=t.element(0).mul(.886227);return s=s.add(t.element(1).mul(1.023328).mul(i)),s=s.add(t.element(2).mul(1.023328).mul(r)),s=s.add(t.element(3).mul(1.023328).mul(n)),s=s.add(t.element(4).mul(.858086).mul(n).mul(i)),s=s.add(t.element(5).mul(.858086).mul(i).mul(r)),s=s.add(t.element(6).mul(r.mul(r).mul(.743125).sub(.247708))),s=s.add(t.element(7).mul(.858086).mul(n).mul(r)),s=s.add(t.element(8).mul(.429043).mul(gS(n,n).sub(gS(i,i)))),s});var wk=Object.freeze({__proto__:null,BRDF_GGX:lP,BRDF_Lambert:qN,BasicPointShadowFilter:GO,BasicShadowFilter:wO,Break:FC,Const:uM,Continue:()=>XM("continue").toStack(),DFGApprox:cP,D_GGX:sP,Discard:qM,EPSILON:zS,F_Schlick:XN,Fn:$_,INFINITY:GS,If:Q_,Loop:DC,NodeAccess:Gx,NodeShaderStage:kx,NodeType:zx,NodeUpdateType:Vx,OnMaterialUpdate:e=>sF(rF.MATERIAL,e),OnObjectUpdate:e=>sF(rF.OBJECT,e),PCFShadowFilter:MO,PCFSoftShadowFilter:EO,PI:HS,PI2:WS,PointShadowFilter:HO,Return:()=>XM("return").toStack(),Schlick_to_F0:hP,ScriptableNodeResources:rU,ShaderNode:B_,Stack:Z_,Switch:(...e)=>l_.Switch(...e),TBNViewMatrix:vR,VSMShadowFilter:AO,V_GGX_SmithCorrelated:iP,Var:cM,VarIntent:hM,abs:hw,acesFilmicToneMapping:WF,acos:cw,add:mS,addMethodChaining:u_,addNodeElement:function(e){console.warn("THREE.TSL: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)},agxToneMapping:$F,all:jS,alphaT:FT,and:MS,anisotropy:UT,anisotropyB:BT,anisotropyT:OT,any:XS,append:e=>(console.warn("THREE.TSL: append() has been renamed to Stack()."),Z_(e)),array:oS,arrayBuffer:e=>k_(new a_(e,"ArrayBuffer")),asin:lw,assign:cS,atan:uw,atan2:Qw,atomicAdd:(e,t)=>AU(MU.ATOMIC_ADD,e,t),atomicAnd:(e,t)=>AU(MU.ATOMIC_AND,e,t),atomicFunc:AU,atomicLoad:e=>AU(MU.ATOMIC_LOAD,e,null),atomicMax:(e,t)=>AU(MU.ATOMIC_MAX,e,t),atomicMin:(e,t)=>AU(MU.ATOMIC_MIN,e,t),atomicOr:(e,t)=>AU(MU.ATOMIC_OR,e,t),atomicStore:(e,t)=>AU(MU.ATOMIC_STORE,e,t),atomicSub:(e,t)=>AU(MU.ATOMIC_SUB,e,t),atomicXor:(e,t)=>AU(MU.ATOMIC_XOR,e,t),attenuationColor:KT,attenuationDistance:YT,attribute:JM,attributeArray:(e,t="float")=>{let n,i;!0===t.isStruct?(n=t.layout.getLength(),i=Cx("float")):(n=Nx(t),i=Cx(t));const r=new oF(e,n,i);return CC(r,t,e)},backgroundBlurriness:pF,backgroundIntensity:mF,backgroundRotation:fF,batch:MC,bentNormalView:yR,billboarding:ED,bitAnd:CS,bitNot:NS,bitOr:PS,bitXor:LS,bitangentGeometry:pR,bitangentLocal:mR,bitangentView:fR,bitangentWorld:gR,bitcast:dD,blendBurn:mN,blendColor:bN,blendDodge:fN,blendOverlay:vN,blendScreen:gN,blur:hL,bool:iT,buffer:hE,bufferAttribute:PM,builtin:fE,bumpMap:MR,burn:(...e)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),mN(e)),bvec2:oT,bvec3:hT,bvec4:fT,bypass:zM,cache:kM,call:hS,cameraFar:NE,cameraIndex:RE,cameraNear:CE,cameraNormalMatrix:FE,cameraPosition:UE,cameraProjectionMatrix:PE,cameraProjectionMatrixInverse:LE,cameraViewMatrix:IE,cameraViewport:OE,cameraWorldMatrix:DE,cbrt:kw,cdl:LF,ceil:nw,checker:eB,cineonToneMapping:GF,clamp:Gw,clearcoat:RT,clearcoatNormalView:SA,clearcoatRoughness:CT,code:QF,color:J_,colorSpaceToWorking:TM,colorToDirection:e=>k_(e).mul(2).sub(1),compute:OM,computeKernel:UM,computeSkinning:(e,t=null)=>{const n=new PC(e);return n.positionNode=CC(new ba(e.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(fC).toVar(),n.skinIndexNode=CC(new ba(new Uint32Array(e.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(fC).toVar(),n.skinWeightNode=CC(new ba(e.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(fC).toVar(),n.bindMatrixNode=sS(e.bindMatrix,"mat4"),n.bindMatrixInverseNode=sS(e.bindMatrixInverse,"mat4"),n.boneMatricesNode=hE(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length),n.toPositionNode=t,k_(n)},context:iM,convert:xT,convertColorSpace:(e,t,n)=>k_(new xM(k_(e),t,n)),convertToTexture:(e,...t)=>e.isSampleNode||e.isTextureNode?e:e.isPassNode?e.getTextureNode():JD(e,...t),cos:aw,cross:Iw,cubeTexture:zA,cubeTextureBase:VA,cubeToUV:zO,dFdx:gw,dFdy:vw,dashSize:HT,debug:QM,decrement:BS,decrementBefore:US,defaultBuildStages:Wx,defaultShaderStages:Hx,defined:U_,degrees:$S,deltaTime:TD,densityFog:function(e,t){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),uU(e,cU(t))},densityFogFactor:cU,depth:sN,depthPass:(e,t,n)=>k_(new BF(BF.DEPTH,e,t,n)),determinant:Sw,difference:Pw,diffuseColor:wT,directPointLight:ZO,directionToColor:NN,directionToFaceDirection:fA,dispersion:QT,distance:Nw,div:vS,dodge:(...e)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),fN(e)),dot:Lw,drawIndex:yC,dynamicBufferAttribute:LM,element:yT,emissive:MT,equal:yS,equals:Mw,equirectUV:IN,exp:YS,exp2:KS,expression:XM,faceDirection:mA,faceForward:Xw,faceforward:Zw,float:eT,floatBitsToInt:e=>new hD(e,"int","float"),floatBitsToUint:e=>new hD(e,"uint","float"),floor:tw,fog:uU,fract:rw,frameGroup:tS,frameId:SD,frontFacing:pA,fwidth:_w,gain:(e,t)=>e.lessThan(.5)?mD(e.mul(2),t).div(2):fS(1,mD(gS(fS(1,e),2),t).div(2)),gapSize:WT,getConstNodeType:O_,getCurrentStack:K_,getDirection:oL,getDistanceAttenuation:QO,getGeometryRoughness:tP,getNormalFromDepth:nF,getParallaxCorrectNormal:Tk,getRoughness:nP,getScreenPosition:tF,getShIrradianceAt:Sk,getShadowMaterial:CO,getShadowRenderObjectFunction:LO,getTextureIndex:lD,getViewPosition:eF,globalId:yU,glsl:(e,t)=>QF(e,t,"glsl"),glslFn:(e,t)=>JF(e,t,"glsl"),grayscale:AF,greaterThan:TS,greaterThanEqual:wS,hash:pD,highpModelNormalViewMatrix:rA,highpModelViewMatrix:iA,hue:NF,increment:OS,incrementBefore:FS,instance:_C,instanceIndex:fC,instancedArray:(e,t="float")=>{let n,i;!0===t.isStruct?(n=t.layout.getLength(),i=Cx("float")):(n=Nx(t),i=Cx(t));const r=new aF(e,n,i);return CC(r,t,e)},instancedBufferAttribute:IM,instancedDynamicBufferAttribute:DM,instancedMesh:SC,int:tT,intBitsToFloat:e=>new hD(e,"float","int"),inverse:ww,inverseSqrt:ew,inversesqrt:Jw,invocationLocalIndex:bC,invocationSubgroupIndex:vC,ior:XT,iridescence:LT,iridescenceIOR:IT,iridescenceThickness:DT,ivec2:sT,ivec3:cT,ivec4:pT,js:(e,t)=>QF(e,t,"js"),label:aM,length:pw,lengthSq:Vw,lessThan:_S,lessThanEqual:SS,lightPosition:rO,lightProjectionUV:iO,lightShadowMatrix:nO,lightTargetDirection:oO,lightTargetPosition:sO,lightViewPosition:aO,lightingContext:WC,lights:(e=[])=>k_(new hO).setLights(e),linearDepth:aN,linearToneMapping:VF,localId:xU,log:QS,log2:ZS,logarithmicDepthToViewZ:(e,t,n)=>{const i=e.mul(QS(n.div(t)));return eT(Math.E).pow(i).mul(t).negate()},luminance:PF,mat2:gT,mat3:vT,mat4:bT,matcapUV:QL,materialAO:uC,materialAlphaTest:RR,materialAnisotropy:qR,materialAnisotropyVector:hC,materialAttenuationColor:tC,materialAttenuationDistance:eC,materialClearcoat:zR,materialClearcoatNormal:HR,materialClearcoatRoughness:GR,materialColor:CR,materialDispersion:lC,materialEmissive:PR,materialEnvIntensity:LA,materialEnvRotation:IA,materialIOR:JR,materialIridescence:$R,materialIridescenceIOR:YR,materialIridescenceThickness:KR,materialLightMap:cC,materialLineDashOffset:aC,materialLineDashSize:iC,materialLineGapSize:rC,materialLineScale:nC,materialLineWidth:sC,materialMetalness:kR,materialNormal:VR,materialOpacity:LR,materialPointSize:oC,materialReference:qA,materialReflectivity:OR,materialRefractionRatio:PA,materialRotation:WR,materialRoughness:BR,materialSheen:jR,materialSheenRoughness:XR,materialShininess:NR,materialSpecular:IR,materialSpecularColor:FR,materialSpecularIntensity:DR,materialSpecularStrength:UR,materialThickness:ZR,materialTransmission:QR,max:Aw,maxMipLevel:rE,mediumpModelViewMatrix:nA,metalness:AT,min:Ew,mix:zw,mixElement:$w,mod:bS,modInt:kS,modelDirection:qE,modelNormalMatrix:JE,modelPosition:YE,modelRadius:ZE,modelScale:KE,modelViewMatrix:tA,modelViewPosition:QE,modelViewProjection:dC,modelWorldMatrix:$E,modelWorldMatrixInverse:eA,morphReference:VC,mrt:uD,mul:gS,mx_aastep:yk,mx_add:(e,t=eT(0))=>mS(e,t),mx_atan2:(e=eT(0),t=eT(1))=>uw(e,t),mx_cell_noise_float:(e=eE())=>XB(e.convert("vec2|vec3")),mx_contrast:(e,t=1,n=.5)=>eT(e).sub(n).mul(t).add(n),mx_divide:(e,t=eT(1))=>vS(e,t),mx_fractal_noise_float:(e=eE(),t=3,n=2,i=.5,r=1)=>ZB(e,tT(t),n,i).mul(r),mx_fractal_noise_vec2:(e=eE(),t=3,n=2,i=.5,r=1)=>ek(e,tT(t),n,i).mul(r),mx_fractal_noise_vec3:(e=eE(),t=3,n=2,i=.5,r=1)=>JB(e,tT(t),n,i).mul(r),mx_fractal_noise_vec4:(e=eE(),t=3,n=2,i=.5,r=1)=>tk(e,tT(t),n,i).mul(r),mx_frame:()=>SD,mx_heighttonormal:(e,t)=>(e=lT(e),t=eT(t),MR(e,t)),mx_hsvtorgb:gk,mx_ifequal:(e,t,n,i)=>e.equal(t).mix(n,i),mx_ifgreater:(e,t,n,i)=>e.greaterThan(t).mix(n,i),mx_ifgreatereq:(e,t,n,i)=>e.greaterThanEqual(t).mix(n,i),mx_invert:(e,t=eT(1))=>fS(t,e),mx_modulo:(e,t=eT(1))=>bS(e,t),mx_multiply:(e,t=eT(1))=>gS(e,t),mx_noise_float:(e=eE(),t=1,n=0)=>BB(e.convert("vec2|vec3")).mul(t).add(n),mx_noise_vec3:(e=eE(),t=1,n=0)=>zB(e.convert("vec2|vec3")).mul(t).add(n),mx_noise_vec4:(e=eE(),t=1,n=0)=>{e=e.convert("vec2|vec3");return dT(zB(e),BB(e.add(rT(19,73)))).mul(t).add(n)},mx_place2d:(e,t=rT(.5,.5),n=rT(1,1),i=eT(0),r=rT(0,0))=>{let s=e;if(t&&(s=s.sub(t)),n&&(s=s.mul(n)),i){const e=i.mul(Math.PI/180),t=e.cos(),n=e.sin();s=rT(s.x.mul(t).sub(s.y.mul(n)),s.x.mul(n).add(s.y.mul(t)))}return t&&(s=s.add(t)),r&&(s=s.add(r)),s},mx_power:(e,t=eT(1))=>Dw(e,t),mx_ramp4:(e,t,n,i,r=eE())=>{const s=r.x.clamp(),a=r.y.clamp(),o=zw(e,t,s),l=zw(n,i,s);return zw(o,l,a)},mx_ramplr:(e,t,n=eE())=>xk(e,t,n,"x"),mx_ramptb:(e,t,n=eE())=>xk(e,t,n,"y"),mx_rgbtohsv:vk,mx_rotate2d:(e,t)=>{e=rT(e);const n=(t=eT(t)).mul(Math.PI/180);return tI(e,n)},mx_rotate3d:(e,t,n)=>{e=lT(e),t=eT(t),n=lT(n);const i=t.mul(Math.PI/180),r=n.normalize(),s=i.cos(),a=i.sin(),o=eT(1).sub(s);return e.mul(s).add(r.cross(e).mul(a)).add(r.mul(r.dot(e)).mul(o))},mx_safepower:(e,t=1)=>(e=eT(e)).abs().pow(t).mul(e.sign()),mx_separate:(e,t=null)=>{if("string"==typeof t){const n={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3},i=t.replace(/^out/,"").toLowerCase();if(void 0!==n[i])return e.element(n[i])}if("number"==typeof t)return e.element(t);if("string"==typeof t&&1===t.length){const n={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3};if(void 0!==n[t])return e.element(n[t])}return e},mx_splitlr:(e,t,n,i=eE())=>_k(e,t,n,i,"x"),mx_splittb:(e,t,n,i=eE())=>_k(e,t,n,i,"y"),mx_srgb_texture_to_lin_rec709:bk,mx_subtract:(e,t=eT(0))=>fS(e,t),mx_timer:()=>_D,mx_transform_uv:(e=1,t=0,n=eE())=>n.mul(e).add(t),mx_unifiednoise2d:(e,t=eE(),n=rT(1,1),i=rT(0,0),r=1,s=0,a=1,o=!1,l=1,c=2,u=.5)=>mk(e,t.convert("vec2|vec3"),n,i,r,s,a,o,l,c,u),mx_unifiednoise3d:(e,t=eE(),n=rT(1,1),i=rT(0,0),r=1,s=0,a=1,o=!1,l=1,c=2,u=.5)=>fk(e,t.convert("vec2|vec3"),n,i,r,s,a,o,l,c,u),mx_worley_noise_float:(e=eE(),t=1)=>ck(e.convert("vec2|vec3"),t,tT(1)),mx_worley_noise_vec2:(e=eE(),t=1)=>hk(e.convert("vec2|vec3"),t,tT(1)),mx_worley_noise_vec3:(e=eE(),t=1)=>pk(e.convert("vec2|vec3"),t,tT(1)),negate:mw,neutralToneMapping:YF,nodeArray:G_,nodeImmutable:W_,nodeObject:k_,nodeObjectIntent:V_,nodeObjects:z_,nodeProxy:H_,nodeProxyIntent:j_,normalFlat:bA,normalGeometry:gA,normalLocal:vA,normalMap:_R,normalView:_A,normalViewGeometry:yA,normalWorld:TA,normalWorldGeometry:xA,normalize:iw,not:AS,notEqual:xS,numWorkgroups:vU,objectDirection:VE,objectGroup:iS,objectPosition:GE,objectRadius:jE,objectScale:HE,objectViewPosition:WE,objectWorldMatrix:zE,oneMinus:fw,or:ES,orthographicDepthToViewZ:(e,t,n)=>t.sub(n).mul(e).sub(t),oscSawtooth:(e=_D)=>e.fract(),oscSine:(e=_D)=>e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5),oscSquare:(e=_D)=>e.fract().round(),oscTriangle:(e=_D)=>e.add(.5).fract().mul(2).sub(1).abs(),output:GT,outputStruct:oD,overlay:(...e)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),vN(e)),overloadingFn:xD,parabola:mD,parallaxDirection:bR,parallaxUV:(e,t)=>e.sub(bR.mul(t)),parameter:(e,t)=>k_(new tD(e,t)),pass:(e,t,n)=>k_(new BF(BF.COLOR,e,t,n)),passTexture:(e,t)=>k_(new UF(e,t)),pcurve:(e,t,n)=>Dw(vS(Dw(e,t),mS(Dw(e,t),Dw(fS(1,e),n))),1/t),perspectiveDepthToViewZ:nN,pmremTexture:OL,pointShadow:YO,pointUV:cF,pointWidth:jT,positionGeometry:sA,positionLocal:aA,positionPrevious:oA,positionView:uA,positionViewDirection:hA,positionWorld:lA,positionWorldDirection:cA,posterize:DF,pow:Dw,pow2:Fw,pow3:Uw,pow4:Ow,premultiplyAlpha:yN,property:TT,quadBroadcast:JU,quadSwapDiagonal:qU,quadSwapX:jU,quadSwapY:XU,radians:qS,rand:qw,range:mU,rangeFog:function(e,t,n){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),uU(e,lU(t,n))},rangeFogFactor:lU,reciprocal:yw,reference:WA,referenceBuffer:jA,reflect:Cw,reflectVector:UA,reflectView:DA,reflector:e=>k_(new jD(e)),refract:Ww,refractVector:OA,refractView:FA,reinhardToneMapping:zF,remap:HM,remapClamp:WM,renderGroup:nS,renderOutput:YM,rendererReference:EM,rotate:tI,rotateUV:wD,roughness:ET,round:bw,rtt:JD,sRGBTransferEOTF:vM,sRGBTransferOETF:bM,sample:(e,t=null)=>k_(new iF(e,k_(t))),sampler:e=>(!0===e.isNode?e:lE(e)).convert("sampler"),samplerComparison:e=>(!0===e.isNode?e:lE(e)).convert("samplerComparison"),saturate:Hw,saturation:RF,screen:(...e)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),gN(e)),screenCoordinate:TE,screenDPR:yE,screenSize:_E,screenUV:xE,scriptable:aU,scriptableValue:tU,select:tM,setCurrentStack:Y_,setName:sM,shaderStages:jx,shadow:kO,shadowPositionWorld:pO,shapeCircle:tB,sharedUniformGroup:eS,sheen:NT,sheenRoughness:PT,shiftLeft:IS,shiftRight:DS,shininess:zT,sign:dw,sin:sw,sinc:(e,t)=>sw(HS.mul(t.mul(e).sub(1))).div(HS.mul(t.mul(e).sub(1))),skinning:LC,smoothstep:jw,smoothstepElement:Yw,specularColor:kT,specularF90:VT,spherizeUV:MD,split:(e,t)=>k_(new t_(k_(e),t)),spritesheetUV:CD,sqrt:JS,stack:iD,step:Rw,stepElement:Kw,storage:CC,storageBarrier:()=>TU("storage").toStack(),storageObject:(e,t,n)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),CC(e,t,n).setPBO(!0)),storageTexture:vF,string:(e="")=>k_(new a_(e,"string")),struct:(e,t=null)=>{const n=new rD(e,t),i=(...t)=>{let i=null;if(t.length>0)if(t[0].isNode){i={};const n=Object.keys(e);for(let e=0;e<t.length;e++)i[n[e]]=t[e]}else i=t[0];return k_(new sD(n,i))};return i.layout=n,i.isStruct=!0,i},sub:fS,subBuild:pM,subgroupAdd:PU,subgroupAll:GU,subgroupAnd:OU,subgroupAny:HU,subgroupBallot:NU,subgroupBroadcast:$U,subgroupBroadcastFirst:WU,subgroupElect:CU,subgroupExclusiveAdd:IU,subgroupExclusiveMul:UU,subgroupInclusiveAdd:LU,subgroupInclusiveMul:FU,subgroupIndex:gC,subgroupMax:zU,subgroupMin:VU,subgroupMul:DU,subgroupOr:BU,subgroupShuffle:YU,subgroupShuffleDown:ZU,subgroupShuffleUp:QU,subgroupShuffleXor:KU,subgroupSize:_U,subgroupXor:kU,tan:ow,tangentGeometry:lR,tangentLocal:cR,tangentView:uR,tangentWorld:hR,texture:lE,texture3D:xF,textureBarrier:()=>TU("texture").toStack(),textureBicubic:PP,textureBicubicLevel:NP,textureCubeUV:lL,textureLoad:cE,textureSize:nE,textureStore:(e,t,n)=>{const i=vF(e,t,n);return null!==n&&i.toStack(),i},thickness:$T,time:_D,toneMapping:RM,toneMappingExposure:CM,toonOutlinePass:(e,t,n=new wr(0,0,0),i=.003,r=1)=>k_(new kF(e,t,k_(n),k_(i),k_(r))),transformDirection:Bw,transformNormal:wA,transformNormalToView:MA,transformedClearcoatNormalView:RA,transformedNormalView:EA,transformedNormalWorld:AA,transmission:qT,transpose:Tw,triNoise3D:vD,triplanarTexture:(...e)=>ND(...e),triplanarTextures:ND,trunc:xw,uint:nT,uintBitsToFloat:e=>new hD(e,"float","uint"),uniform:sS,uniformArray:mE,uniformCubeTexture:(e=BA)=>VA(e),uniformFlow:rM,uniformGroup:JT,uniformTexture:(e=sE)=>lE(e),unpremultiplyAlpha:xN,userData:(e,t,n)=>k_(new _F(e,t,n)),uv:eE,uvec2:aT,uvec3:uT,uvec4:mT,varying:fM,varyingProperty:ST,vec2:rT,vec3:lT,vec4:dT,vectorComponents:Xx,velocity:EF,vertexColor:pN,vertexIndex:mC,vertexStage:gM,vibrance:CF,viewZToLogarithmicDepth:iN,viewZToOrthographicDepth:eN,viewZToPerspectiveDepth:tN,viewport:SE,viewportCoordinate:ME,viewportDepthTexture:ZC,viewportLinearDepth:oN,viewportMipTexture:YC,viewportResolution:AE,viewportSafeUV:AD,viewportSharedTexture:RN,viewportSize:wE,viewportTexture:$C,viewportUV:EE,wgsl:(e,t)=>QF(e,t,"wgsl"),wgslFn:(e,t)=>JF(e,t,"wgsl"),workgroupArray:(e,t)=>k_(new wU("Workgroup",e,t)),workgroupBarrier:()=>TU("workgroup").toStack(),workgroupId:bU,workingToColorSpace:_M,xor:RS});const Mk=new eD;class Ek extends _I{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const i=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let s=!1;if(null===r)i._clearColor.getRGB(Mk),Mk.a=i._clearColor.a;else if(!0===r.isColor)r.getRGB(Mk),Mk.a=1,s=!0;else if(!0===r.isNode){const o=this.get(e),l=r;Mk.copy(i._clearColor);let c=o.backgroundMesh;if(void 0===c){const h=iM(dT(l).mul(mF),{getUV:()=>fF.mul(xA),getTextureLevel:()=>pF});let d=dC;d=d.setZ(d.w);const p=new _N;function m(){r.removeEventListener("dispose",m),c.material.dispose(),c.geometry.dispose()}p.name="Background.material",p.side=1,p.depthTest=!1,p.depthWrite=!1,p.allowOverride=!1,p.fog=!1,p.lights=!1,p.vertexNode=d,p.colorNode=h,o.backgroundMeshNode=h,o.backgroundMesh=c=new ds(new Zl(1,32,32),p),c.frustumCulled=!1,c.name="Background.mesh",c.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},r.addEventListener("dispose",m)}const u=l.getCacheKey();o.backgroundCacheKey!==u&&(o.backgroundMeshNode.node=dT(l).mul(mF),o.backgroundMeshNode.needsUpdate=!0,c.material.needsUpdate=!0,o.backgroundCacheKey=u),t.unshift(c,c.geometry,c.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);const a=i.xr.getEnvironmentBlendMode();if("additive"===a?Mk.set(0,0,0,1):"alpha-blend"===a&&Mk.set(0,0,0,0),!0===i.autoClear||!0===s){const f=n.clearColorValue;f.r=Mk.r,f.g=Mk.g,f.b=Mk.b,f.a=Mk.a,!0!==i.backend.isWebGLBackend&&!0!==i.alpha||(f.r*=f.a,f.g*=f.a,f.b*=f.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=!0===i.autoClearColor,n.clearDepth=!0===i.autoClearDepth,n.clearStencil=!0===i.autoClearStencil}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let Ak=0;class Rk{constructor(e="",t=[],n=0,i=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=i,this.id=Ak++}}class Ck{constructor(e,t,n,i,r,s,a,o,l,c=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=c,this.nodeAttributes=i,this.bindings=r,this.updateNodes=s,this.updateBeforeNodes=a,this.updateAfterNodes=o,this.observer=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==t.bindings[0].groupNode.shared){const n=new Rk(t.name,[],t.index,t.bindingsReference);e.push(n);for(const e of t.bindings)n.bindings.push(e.clone())}else e.push(t)}return e}}class Nk{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class Pk{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class Lk{constructor(e,t,n=!1,i=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=n,this.count=i}}class Ik extends Lk{constructor(e,t,n=null,i=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=n,this.interpolationSampling=i}}class Dk{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Fk=0;class Uk{constructor(e=null){this.id=Fk++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Ok{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Bk{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class kk extends Bk{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class Vk extends Bk{constructor(e,t=new wn){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class zk extends Bk{constructor(e,t=new En){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Gk extends Bk{constructor(e,t=new Zn){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class Hk extends Bk{constructor(e,t=new wr){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Wk extends Bk{constructor(e,t=new Th){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class jk extends Bk{constructor(e,t=new Cn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class Xk extends Bk{constructor(e,t=new Li){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class qk extends kk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class $k extends Vk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class Yk extends zk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class Kk extends Gk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class Qk extends Hk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class Zk extends Wk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class Jk extends jk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class eV extends Xk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const tV=new WeakMap,nV=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),iV=e=>/e/g.test(e)?String(e).replace(/\+/g,""):(e=Number(e))+(e%1?"":".0");class rV{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.types={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=iD(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Uk,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=tV.get(this.renderer);return void 0===e&&(e=new gI,tV.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new Jn(e,t,n)}createCubeRenderTarget(e,t){return new DN(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const n=this.getBindGroupsCache(),i=[];let r,s=!0;for(const a of t)i.push(a),s=s&&!0!==a.groupNode.shared;return s?(r=n.get(i),void 0===r&&(r=new Rk(e,i,this.bindingsIndexes[e].group,i),n.set(i,r))):r=new Rk(e,i,this.bindingsIndexes[e].group,i),r}getBindGroupArray(e,t){const n=this.bindings[t];let i=n[e];return void 0===i&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=i=[]),i}getBindings(){let e=this.bindGroups;if(null===e){const t={},n=this.bindings;for(const e of jx)for(const i in n[e]){const r=n[e][i];(t[i]||(t[i]=[])).push(...r)}e=[];for(const i in t){const n=t[i],r=this._getBindGroup(i,n);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){!1===this.sequentialNodes.includes(e)&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes){e.getUpdateType()!==Vx.NONE&&this.updateNodes.push(e)}for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==Vx.NONE&&this.updateBeforeNodes.push(e),n!==Vx.NONE&&this.updateAfterNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===de||e.magFilter===pe||e.magFilter===he||e.magFilter===me||e.minFilter===de||e.minFilter===pe||e.minFilter===he||e.minFilter===me}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getTernary(){return null}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return void 0===n.cache&&(n.cache=new Uk(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,n=null){let i=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const s=n?n[r]:null;i+=null!==s?s.build(this,e):this.generateConst(e),r<t-1&&(i+=", ")}return i+=" )",i}generateStruct(e,t,n=null){const i=[];for(const r of t){const{name:e,type:t}=r;n&&n[e]&&n[e].isNode?i.push(n[e].build(this,t)):i.push(this.generateConst(t))}return e+"( "+i.join(", ")+" )"}generateConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new wr:"vec2"===e?t=new wn:"vec3"===e?t=new En:"vec4"===e&&(t=new Zn)),"float"===e)return iV(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${iV(t.r)}, ${iV(t.g)}, ${iV(t.b)} )`;const n=this.getTypeLength(e),i=this.getComponentType(e),r=e=>this.generateConst(i,e);if(2===n)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(3===n)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(4===n&&"mat2"!==e)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(n>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const n=this.attributes;for(const r of n)if(r.name===e)return r;const i=new Nk(e,t);return this.registerDeclaration(i),n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"samplerComparison"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===xe)return"int";if(t===_e)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;let n=Rx(e);const i="float"===t?"":t[0];return!0===/mat2/.test(t)&&(n=n.replace("vec","mat")),i+n}getTypeFromArray(e){return nV.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,i=e.itemSize,r=e.normalized;let s;return e instanceof jr||!0===r||(s=this.getTypeFromArray(n)),this.getTypeFromLength(i,s)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return null!==n?Number(n[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){this.stack=iD(this.stack);const e=K_();return this.stacks.push(e),Y_(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Y_(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){let i=(n=null===n?e.isGlobal(this)?this.globalCache:this.cache:n).getData(e);void 0===i&&(i={},n.setData(e,i)),void 0===i[t]&&(i[t]={});let r=i[t];const s=i.any?i.any.subBuilds:null,a=this.getClosestSubBuild(s);return a&&(void 0===r.subBuildsCache&&(r.subBuildsCache={}),r=r.subBuildsCache[a]||(r.subBuildsCache[a]={}),r.subBuilds=s),r}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let i=n.bufferAttribute;if(void 0===i){const r=this.uniforms.index++;i=new Nk("nodeAttribute"+r,t,e),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeNode(e,t=this.shaderStage){return this.types[t][e]||null}getStructTypeFromNode(e,t,n=null,i=this.shaderStage){const r=this.getDataFromNode(e,i,this.globalCache);let s=r.structType;if(void 0===s){const a=this.structs.index++;null===n&&(n="StructType"+a),s=new Ok(n,t),this.structs[i].push(s),this.types[i][n]=e,r.structType=s}return s}getOutputStructTypeFromNode(e,t){const n=this.getStructTypeFromNode(e,t,"OutputType","fragment");return n.output=!0,n}getUniformFromNode(e,t,n=this.shaderStage,i=null){const r=this.getDataFromNode(e,n,this.globalCache);let s=r.uniform;if(void 0===s){const a=this.uniforms.index++;s=new Pk(i||"nodeUniform"+a,t,e),this.uniforms[n].push(s),this.registerDeclaration(s),r.uniform=s}return s}getVarFromNode(e,t=null,n=e.getNodeType(this),i=this.shaderStage,r=!1){const s=this.getDataFromNode(e,i),a=this.getSubBuildProperty("variable",s.subBuilds);let o=s[a];if(void 0===o){const l=r?"_const":"_var",c=this.vars[i]||(this.vars[i]=[]),u=this.vars[l]||(this.vars[l]=0);null===t&&(t=(r?"nodeConst":"nodeVar")+u,this.vars[l]++),"variable"!==a&&(t=this.getSubBuildProperty(t,s.subBuilds));const h=e.getArrayCount(this);o=new Lk(t,n,r,h),r||c.push(o),this.registerDeclaration(o),s[a]=o}return o}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode))&&(!e.cNode||this.isDeterministic(e.cNode));if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode));if(e.isArrayNode){if(null!==e.values)for(const t of e.values)if(!this.isDeterministic(t))return!1;return!0}return!!e.isConstNode}getVaryingFromNode(e,t=null,n=e.getNodeType(this),i=null,r=null){const s=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",s.subBuilds);let o=s[a];if(void 0===o){const e=this.varyings,l=e.length;null===t&&(t="nodeVarying"+l),"varying"!==a&&(t=this.getSubBuildProperty(t,s.subBuilds)),o=new Ik(t,n,i,r),e.push(o),this.registerDeclaration(o),s[a]=o}return o}registerDeclaration(e){const t=this.shaderStage,n=this.declarations[t]||(this.declarations[t]={}),i=this.getPropertyName(e);let r=1,s=i;for(;void 0!==n[s];)s=i+"_"+r++;r>1&&(e.name=s,console.warn(`THREE.TSL: Declaration name '${i}' of '${e.type}' already in use. Renamed to '${s}'.`)),n[s]=e}getCodeFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e);let r=i.code;if(void 0===r){const e=this.codes[n]||(this.codes[n]=[]),s=e.length;r=new Dk("nodeCode"+s,t),e.push(r),i.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(e);let r=!0,s=t;for(;s;){if(!0===i.get(s)){r=!1;break}s=this.getDataFromNode(s).parentNodeBlock}if(r)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,n){const i=this.getDataFromNode(e),r=i.flowCodes||(i.flowCodes=[]),s=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);r.push(t),s.set(n,!0)}addLineFlowCode(e,t=null){return""===e||(null!==t&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}addInclude(e){null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new ZF,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const s of t.inputs)n[s.name]=new tD(s.type,s.name);e.layout=null;const i=e.call(n),r=this.flowStagesNode(i,t.type);return e.layout=t,r}flowBuildStage(e,t,n=null){const i=this.getBuildStage();this.setBuildStage(t);const r=e.build(this,n);return this.setBuildStage(i),r}flowStagesNode(e,t=null){const n=this.flow,i=this.vars,r=this.declarations,s=this.cache,a=this.buildStage,o=this.stack,l={code:""};this.flow=l,this.vars={},this.declarations={},this.cache=new Uk,this.stack=iD();for(const c of Wx)this.setBuildStage(c),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.declarations=r,this.cache=s,this.stack=o,this.setBuildStage(a),l}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){const r=this.tab,s=this.cache,a=this.shaderStage,o=this.context;this.setShaderStage(e);const l={...this.context};delete l.nodeBlock,this.cache=this.globalCache,this.tab="\t",this.context=l;let c=null;if("generate"===this.buildStage){const r=this.flowChildNode(t,n);null!==i&&(r.code+=`${this.tab+i} = ${r.result};\n`),this.flowCode[e]=this.flowCode[e]+r.code,c=r}else c=t.build(this);return this.setShaderStage(a),this.cache=s,this.tab=r,this.context=o,c}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,n=null){return`${null!==n?this.generateArrayDeclaration(e,n):this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(void 0!==n)for(const i of n)t+=`${this.getVar(i.type,i.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(void 0!==t)for(const i of t)n+=i.code+"\n";return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(t=e&&e.isNode?e.isShaderCallNodeInternal?e.shaderNode.subBuilds:e.isStackNode?[e.subBuild]:this.getDataFromNode(e,"any").subBuilds:e instanceof Set?[...e]:e,!t)return null;const n=this.subBuildLayers;for(let i=t.length-1;i>=0;i--){const e=t[i];if(n.includes(e))return e}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let n,i;return n=null!==t?this.getClosestSubBuild(t):this.subBuildFn,i=n?e?n+"_"+e:n:e,i}build(){const{object:e,material:t,renderer:n}=this;if(null!==t){let e=n.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new _N),e.build(this)}else this.addFlow("compute",e);for(const i of Wx){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const e of jx){this.setShaderStage(e);const t=this.flowNodes[e];for(const e of t)"generate"===i?this.flowNode(e):e.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new qk(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new $k(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new Yk(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new Kk(e);if("color"===t)return new Qk(e);if("mat2"===t)return new Zk(e);if("mat3"===t)return new Jk(e);if("mat4"===t)return new eV(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,n){if((t=this.getVectorType(t))===(n=this.getVectorType(n))||null===n||this.isReference(n))return e;const i=this.getTypeLength(t),r=this.getTypeLength(n);return 16===i&&9===r?`${this.getType(n)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:9===i&&4===r?`${this.getType(n)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:i>4||r>4||0===r?e:i===r?`${this.getType(n)}( ${e} )`:i>r?(e="bool"===n?`all( ${e} )`:`${e}.${"xyz".slice(0,r)}`,this.format(e,this.getTypeFromLength(r,this.getComponentType(t)),n)):4===r&&i>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===i?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===i&&r>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${n} - Node System\n`}}class sV{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return void 0===n&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===Vx.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,n);t.get(n)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(n,this.frameId)}else if(t===Vx.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,n);t.get(n)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(n,this.renderId)}else t===Vx.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===Vx.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,n);t.get(n)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(n,this.frameId)}else if(t===Vx.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,n);t.get(n)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(n,this.renderId)}else t===Vx.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===Vx.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,n);t.get(n)!==this.frameId&&!1!==e.update(this)&&t.set(n,this.frameId)}else if(t===Vx.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,n);t.get(n)!==this.renderId&&!1!==e.update(this)&&t.set(n,this.renderId)}else t===Vx.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class aV{constructor(e,t,n=null,i="",r=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=r}}aV.isNodeFunctionInput=!0;class oV extends KO{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:oO(this.light),lightColor:e}}}const lV=new Li,cV=new Li;let uV=null;class hV extends KO{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=sS(new En).setGroup(nS),this.halfWidth=sS(new En).setGroup(nS),this.updateType=Vx.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;cV.identity(),lV.copy(t.matrixWorld),lV.premultiply(n),cV.extractRotation(lV),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(cV),this.halfHeight.value.applyMatrix4(cV)}setupDirectRectArea(e){let t,n;e.isAvailable("float32Filterable")?(t=lE(uV.LTC_FLOAT_1),n=lE(uV.LTC_FLOAT_2)):(t=lE(uV.LTC_HALF_1),n=lE(uV.LTC_HALF_2));const{colorNode:i,light:r}=this;return{lightColor:i,lightPosition:aO(r),halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:n}}static setLTC(e){uV=e}}class dV extends KO{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=sS(0).setGroup(nS),this.penumbraCosNode=sS(0).setGroup(nS),this.cutoffDistanceNode=sS(0).setGroup(nS),this.decayExponentNode=sS(0).setGroup(nS),this.colorNode=sS(this.color).setGroup(nS)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e,t){const{coneCosNode:n,penumbraCosNode:i}=this;return jw(n,i,t)}getLightCoord(e){const t=e.getNodeProperties(this);let n=t.projectionUV;return void 0===n&&(n=iO(this.light,e.context.positionWorld),t.projectionUV=n),n}setupDirect(e){const{colorNode:t,cutoffDistanceNode:n,decayExponentNode:i,light:r}=this,s=this.getLightVector(e),a=s.normalize(),o=a.dot(oO(r)),l=this.getSpotAttenuation(e,o),c=s.length(),u=QO({lightDistance:c,cutoffDistance:n,decayExponent:i});let h,d,p=t.mul(l).mul(u);if(r.colorNode?(d=this.getLightCoord(e),h=r.colorNode(d)):r.map&&(d=this.getLightCoord(e),h=lE(r.map,d.xy).onRenderUpdate(()=>r.map)),h){p=d.mul(2).sub(1).abs().lessThan(1).all().select(p.mul(h),p)}return{lightColor:p,lightDirection:a}}}class pV extends dV{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,t){const n=this.light.iesMap;let i=null;if(n&&!0===n.isTexture){const e=t.acos().mul(1/Math.PI);i=lE(n,rT(e,0),0).r}else i=super.getSpotAttenuation(t);return i}}const mV=$_(([e,t])=>{const n=e.abs().sub(t);return pw(Aw(n,0)).add(Ew(Aw(n.x,n.y),0))});class fV extends dV{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const t=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(t.angle*(1-t.penumbra)),.99999),null===t.aspect){let e=1;null!==t.map&&(e=t.map.width/t.map.height),t.shadow.aspect=e}else t.shadow.aspect=t.aspect}getSpotAttenuation(e){const t=eT(0),n=this.penumbraCosNode,i=nO(this.light).mul(e.context.positionWorld||lA);return Q_(i.w.greaterThan(0),()=>{const e=i.xyz.div(i.w),r=mV(e.xy.sub(rT(.5)),rT(.5)),s=vS(-1,fS(1,cw(n)).sub(1));t.assign(Hw(r.mul(-2).mul(s)))}),t}}class gV extends KO{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class vV extends KO{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=rO(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=sS(new wr).setGroup(nS)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,r=TA.dot(i).mul(.5).add(.5),s=zw(n,t,r);e.context.irradiance.addAssign(s)}}class bV extends KO{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new En);this.lightProbe=mE(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=Sk(TA,this.lightProbe);e.context.irradiance.addAssign(t)}}class yV{parseFunction(){console.warn("Abstract function.")}}class xV{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}}xV.isNodeFunction=!0;const _V=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,TV=/[a-z_0-9]+/gi,SV="#pragma main";class wV extends xV{constructor(e){const{type:t,inputs:n,name:i,precision:r,inputsCode:s,blockCode:a,headerCode:o}=(e=>{const t=(e=e.trim()).indexOf(SV),n=-1!==t?e.slice(t+12):e,i=n.match(_V);if(null!==i&&5===i.length){const r=i[4],s=[];let a=null;for(;null!==(a=TV.exec(r));)s.push(a);const o=[];let l=0;for(;l<s.length;){const e="const"===s[l][0];!0===e&&l++;let t=s[l][0];"in"===t||"out"===t||"inout"===t?l++:t="";const n=s[l++][0];let i=Number.parseInt(s[l][0]);!1===Number.isNaN(i)?l++:i=null;const r=s[l++][0];o.push(new aV(n,r,i,t,e))}const c=n.substring(i[0].length),u=void 0!==i[3]?i[3]:"";return{type:i[2],inputs:o,name:u,precision:void 0!==i[1]?i[1]:"",inputsCode:r,blockCode:c,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,n,i,r),this.inputsCode=s,this.blockCode=a,this.headerCode=o}getCode(e=this.name){let t;const n=this.blockCode;if(""!==n){const{type:i,inputsCode:r,headerCode:s,precision:a}=this;let o=`${i} ${e} ( ${r.trim()} )`;""!==a&&(o=`${a} ${o}`),t=s+o+n}else t="";return t}}class MV extends yV{parseFunction(e){return new wV(e)}}const EV=new WeakMap,AV=[],RV=[];class CV extends _I{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new sV,this.nodeBuilderCache=new Map,this.callHashCache=new gI,this.groupsData=new gI,this.cacheLib={}}updateGroup(e){const t=e.groupNode,n=t.name;if(n===iS.name)return!0;if(n===nS.name){const t=this.get(e),n=this.nodeFrame.renderId;return t.renderId!==n&&(t.renderId=n,!0)}if(n===tS.name){const t=this.get(e),n=this.nodeFrame.frameId;return t.frameId!==n&&(t.frameId=n,!0)}AV[0]=t,AV[1]=e;let i=this.groupsData.get(AV);return void 0===i&&this.groupsData.set(AV,i={}),AV.length=0,i.version!==t.version&&(i.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(void 0===n){const{nodeBuilderCache:i}=this,r=this.getForRenderCacheKey(e);if(n=i.get(r),void 0===n){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&t.enableMultiview(),t.build(),n=this._createNodeBuilderState(t),i.set(r,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(void 0===n){const i=this.backend.createNodeBuilder(e,this.renderer);i.build(),n=this._createNodeBuilderState(i),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new Ck(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const n=this.get(e);n.environmentNode&&(t=n.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const n=this.get(e);n.backgroundNode&&(t=n.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){AV[0]=e,AV[1]=t;const n=this.renderer.info.calls,i=this.callHashCache.get(AV)||{};if(i.callId!==n){const r=this.getEnvironmentNode(e),s=this.getFogNode(e);t&&RV.push(t.getCacheKey(!0)),r&&RV.push(r.getCacheKey()),s&&RV.push(s.getCacheKey()),RV.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),RV.push(this.renderer.shadowMap.enabled?1:0),i.callId=n,i.cacheKey=Tx(RV),this.callHashCache.set(AV,i),RV.length=0}return AV.length=0,i.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const i=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==n||i){const r=this.getCacheNode("background",n,()=>{if(!0===n.isCubeTexture||n.mapping===ie||n.mapping===re||n.mapping===se){if(e.backgroundBlurriness>0||n.mapping===se)return OL(n);{let e;return e=!0===n.isCubeTexture?zA(n):lE(n),kN(e)}}if(!0===n.isTexture)return lE(n,xE.flipY()).setUpdateMatrix(!0);!0!==n.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",n)},i);t.backgroundNode=r,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,n,i=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let s=r.get(t);return(void 0===s||i)&&(s=n(),r.set(t,s)),s}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){const e=this.getCacheNode("fog",n,()=>{if(n.isFogExp2){const e=WA("color","color",n).setGroup(nS),t=WA("density","float",n).setGroup(nS);return uU(e,cU(t))}if(n.isFog){const e=WA("color","color",n).setGroup(nS),t=WA("near","float",n).setGroup(nS),i=WA("far","float",n).setGroup(nS);return uU(e,lU(t,i))}console.error("THREE.Renderer: Unsupported fog configuration.",n)});t.fogNode=e,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){const e=this.getCacheNode("environment",n,()=>!0===n.isCubeTexture?zA(n):!0===n.isTexture?lE(n):void console.error("Nodes: Unsupported environment configuration.",n));t.environmentNode=e,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,i=null,r=null){const s=this.nodeFrame;return s.renderer=e,s.scene=t,s.object=n,s.camera=i,s.material=r,s}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return EV.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),i=e.isArrayTexture?xF(e,lT(xE,fE("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):lE(e,xE).renderOutput(t.toneMapping,t.currentColorSpace);return EV.set(e,n),i}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const i of n.updateNodes)t.updateNode(i)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const i of n.updateNodes)t.updateNode(i)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new sV,this.nodeBuilderCache=new Map,this.cacheLib={}}}const NV=new Na;class PV{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Cn,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,null!==e&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,n){const i=e.length;for(let r=0;r<i;r++){NV.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const i=t[n+r],s=NV.normal;i.x=-s.x,i.y=-s.y,i.z=-s.z,i.w=NV.constant}}updateGlobal(e,t){this.shadowPass=null!==e.overrideMaterial&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const i=t.clippingPlanes,r=i.length;let s,a;if(this.clipIntersection?(s=this.intersectionPlanes,a=e.intersectionPlanes.length):(s=this.unionPlanes,a=e.unionPlanes.length),s.length!==a+r){s.length=a+r;for(let e=0;e<r;e++)s[a+e]=new Zn;n=!0}this.projectPlanes(i,s,a),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return void 0===t&&(t=new PV(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class LV{constructor(e,t){this.bundleGroup=e,this.camera=t}}const IV=[];class DV{constructor(){this.bundles=new gI}get(e,t){const n=this.bundles;IV[0]=e,IV[1]=t;let i=n.get(IV);return void 0===i&&(i=new LV(e,t),n.set(IV,i)),IV.length=0,i}dispose(){this.bundles=new gI}}class FV{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(null!==n){t=new n;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}}addClass(e,t,n){if(n.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}}const UV=new hO,OV=[];class BV extends gI{constructor(){super()}createNode(e=[]){return(new hO).setLights(e)}getNode(e,t){if(e.isQuadMesh)return UV;OV[0]=e,OV[1]=t;let n=this.get(OV);return void 0===n&&(n=this.createNode(),this.set(OV,n)),OV.length=0,n}}class kV extends Jn{constructor(e=1,t=1,n={}){super(e,t,n),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const VV=new En,zV=new En;class GV extends dn{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new ws,this._cameraL.viewport=new Zn,this._cameraR=new ws,this._cameraR.viewport=new Zn,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Fu,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._sessionUsesLayers=!1,this._supportsGlBinding="undefined"!=typeof XRWebGLBinding,this._frameBufferTargets=null,this._createXRLayer=qV.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new wn,this._onSessionEvent=WV.bind(this),this._onSessionEnd=jV.bind(this),this._onInputSourcesChange=XV.bind(this),this._onAnimationFrame=$V.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._supportsLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(null!==this._glProjLayer||null!==this._glBaseLayer)return this._foveation}setFoveation(e){this._foveation=e,null!==this._glProjLayer&&(this._glProjLayer.fixedFoveation=e),null!==this._glBaseLayer&&void 0!==this._glBaseLayer.fixedFoveation&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,!0===this.isPresenting&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,!0===this.isPresenting&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(null!==this._session)return this._session.environmentBlendMode}getBinding(){return null===this._glBinding&&this._supportsGlBinding&&(this._glBinding=new XRWebGLBinding(this._session,this._gl)),this._glBinding}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,n,i,r,s,a,o={}){const l=new Yl(e,t),c=new kV(r,s,{format:Pe,type:ge,depthTexture:new Lo(r,s,o.stencil?Ee:_e,void 0,void 0,void 0,void 0,void 0,void 0,o.stencil?Ie:Le),stencilBuffer:o.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});c._autoAllocateDepthBuffer=!0;const u=new Rr({color:16777215,side:0});u.map=c.texture,u.map.offset.y=1,u.map.repeat.y=-1;const h=new ds(l,u);h.position.copy(n),h.quaternion.copy(i);const d={type:"quad",width:e,height:t,translation:n,quaternion:i,pixelwidth:r,pixelheight:s,plane:h,material:u,rendercall:a,renderTarget:c};if(this._layers.push(d),null!==this._session){d.plane.material=new Rr({color:16777215,side:0}),d.plane.material.blending=5,d.plane.material.blendEquation=g,d.plane.material.blendSrc=_,d.plane.material.blendDst=_,d.xrlayer=this._createXRLayer(d);const e=this._session.renderState.layers;e.unshift(d.xrlayer),this._session.updateRenderState({layers:e})}else c.isXRRenderTarget=!1;return h}createCylinderLayer(e,t,n,i,r,s,a,o,l={}){const c=new Uo(e,e,e*t/n,64,64,!0,Math.PI-t/2,t),u=new kV(s,a,{format:Pe,type:ge,depthTexture:new Lo(s,a,l.stencil?Ee:_e,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?Ie:Le),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});u._autoAllocateDepthBuffer=!0;const h=new Rr({color:16777215,side:1});h.map=u.texture,h.map.offset.y=1,h.map.repeat.y=-1;const d=new ds(c,h);d.position.copy(i),d.quaternion.copy(r);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:n,translation:i,quaternion:r,pixelwidth:s,pixelheight:a,plane:d,material:h,rendercall:o,renderTarget:u};if(this._layers.push(p),null!==this._session){p.plane.material=new Rr({color:16777215,side:1}),p.plane.material.blending=5,p.plane.material.blendEquation=g,p.plane.material.blendSrc=_,p.plane.material.blendDst=_,p.xrlayer=this._createXRLayer(p);const e=this._session.renderState.layers;e.unshift(p.xrlayer),this._session.updateRenderState({layers:e})}else u.isXRRenderTarget=!1;return d}renderLayers(){const e=new En,t=new Mn,n=this._renderer,i=this.isPresenting,r=n.getOutputRenderTarget(),s=n._frameBufferTarget;this.isPresenting=!1;const a=new wn;n.getSize(a);const o=n._quad;for(const l of this._layers)if(l.renderTarget.isXRRenderTarget=null!==this._session,l.renderTarget._hasExternalTextures=l.renderTarget.isXRRenderTarget,l.renderTarget.isXRRenderTarget&&this._sessionUsesLayers){l.xrlayer.transform=new XRRigidTransform(l.plane.getWorldPosition(e),l.plane.getWorldQuaternion(t));const i=this._glBinding.getSubImage(l.xrlayer,this._xrFrame);n.backend.setXRRenderTargetTextures(l.renderTarget,i.colorTexture,void 0),n._setXRLayerSize(l.renderTarget.width,l.renderTarget.height),n.setOutputRenderTarget(l.renderTarget),n.setRenderTarget(null),n._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:r,quad:s}=this._frameBufferTargets.get(l.renderTarget)||{frameBufferTarget:null,quad:null};r?(n._frameBufferTarget=r,n._quad=s):(n._quad=new KD(new _N),this._frameBufferTargets.set(l.renderTarget,{frameBufferTarget:n._getFrameBufferTarget(),quad:n._quad})),l.rendercall(),n._frameBufferTarget=null}else n.setRenderTarget(l.renderTarget),l.rendercall();n.setRenderTarget(null),n.setOutputRenderTarget(r),n._frameBufferTarget=s,n._setXRLayerSize(a.x,a.y),n._quad=o,this.isPresenting=i}getSession(){return this._session}async setSession(e){const t=this._renderer,n=t.backend;this._gl=t.getContext();const i=this._gl,r=i.getContextAttributes();if(this._session=e,null!==e){if(!0===n.isWebGPUBackend)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await n.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),!0===this._supportsLayers){let n=null,s=null,a=null;t.depth&&(a=t.stencil?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24,n=t.stencil?Ie:Le,s=t.stencil?Ee:_e);const o={colorFormat:i.RGBA8,depthFormat:a,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(o.textureType="texture-array",this._useMultiview=!0),this._glBinding=this.getBinding();const l=this._glBinding.createProjectionLayer(o),c=[l];this._glProjLayer=l,t.setPixelRatio(1),t._setXRLayerSize(l.textureWidth,l.textureHeight);const u=this._useMultiview?2:1,h=new Lo(l.textureWidth,l.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n,u);if(this._xrRenderTarget=new kV(l.textureWidth,l.textureHeight,{format:Pe,type:ge,colorSpace:t.outputColorSpace,depthTexture:h,stencilBuffer:t.stencil,samples:r.antialias?4:0,resolveDepthBuffer:!1===l.ignoreDepthValues,resolveStencilBuffer:!1===l.ignoreDepthValues,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._sessionUsesLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._sessionUsesLayers)for(const e of this._layers)e.plane.material=new Rr({color:16777215,side:"cylinder"===e.type?1:0}),e.plane.material.blending=5,e.plane.material.blendEquation=g,e.plane.material.blendSrc=_,e.plane.material.blendDst=_,e.xrlayer=this._createXRLayer(e),c.unshift(e.xrlayer);e.updateRenderState({layers:c})}else{const n={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},r=new XRWebGLLayer(e,i,n);this._glBaseLayer=r,e.updateRenderState({baseLayer:r}),t.setPixelRatio(1),t._setXRLayerSize(r.framebufferWidth,r.framebufferHeight),this._xrRenderTarget=new kV(r.framebufferWidth,r.framebufferHeight,{format:Pe,type:ge,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:!1===r.ignoreDepthValues,resolveStencilBuffer:!1===r.ignoreDepthValues}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(null===t)return;const n=e.near,i=e.far,r=this._cameraXR,s=this._cameraL,a=this._cameraR;r.near=a.near=s.near=n,r.far=a.far=s.far=i,r.isMultiViewCamera=this._useMultiview,this._currentDepthNear===r.near&&this._currentDepthFar===r.far||(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),r.layers.mask=6|e.layers.mask,s.layers.mask=3&r.layers.mask,a.layers.mask=5&r.layers.mask;const o=e.parent,l=r.cameras;HV(r,o);for(let c=0;c<l.length;c++)HV(l[c],o);2===l.length?function(e,t,n){VV.setFromMatrixPosition(t.matrixWorld),zV.setFromMatrixPosition(n.matrixWorld);const i=VV.distanceTo(zV),r=t.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],u=(r[8]-1)/r[0],h=(s[8]+1)/s[0],d=a*u,p=a*h,m=i/(-u+h),f=m*-u;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+m,n=o+m,r=d-f,s=p+(i-f),u=l*o/n*t,h=c*o/n*t;e.projectionMatrix.makePerspective(r,s,u,h,t,n),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(r,s,a):r.projectionMatrix.copy(s.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*gn*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,r,o)}_getController(e){let t=this._controllers[e];return void 0===t&&(t=new Ps,this._controllers[e]=t),t}}function HV(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}function WV(e){const t=this._controllerInputSources.indexOf(e.inputSource);if(-1===t)return;const n=this._controllers[t];if(void 0!==n){const t=this.getReferenceSpace();n.update(e.inputSource,e.frame,t),n.dispatchEvent({type:e.type,data:e.inputSource})}}function jV(){const e=this._session,t=this._renderer;e.removeEventListener("select",this._onSessionEvent),e.removeEventListener("selectstart",this._onSessionEvent),e.removeEventListener("selectend",this._onSessionEvent),e.removeEventListener("squeeze",this._onSessionEvent),e.removeEventListener("squeezestart",this._onSessionEvent),e.removeEventListener("squeezeend",this._onSessionEvent),e.removeEventListener("end",this._onSessionEnd),e.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let n=0;n<this._controllers.length;n++){const e=this._controllerInputSources[n];null!==e&&(this._controllerInputSources[n]=null,this._controllers[n].disconnect(e))}if(this._currentDepthNear=null,this._currentDepthFar=null,t._resetXRState(),this._session=null,this._xrRenderTarget=null,!0===this._sessionUsesLayers)for(const n of this._layers)n.renderTarget=new kV(n.pixelwidth,n.pixelheight,{format:Pe,type:ge,depthTexture:new Lo(n.pixelwidth,n.pixelheight,n.stencilBuffer?Ee:_e,void 0,void 0,void 0,void 0,void 0,void 0,n.stencilBuffer?Ie:Le),stencilBuffer:n.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),n.renderTarget.isXRRenderTarget=!1,n.plane.material=n.material,n.material.map=n.renderTarget.texture,n.material.map.offset.y=1,n.material.map.repeat.y=-1,delete n.xrlayer;this.isPresenting=!1,this._useMultiview=!1,t._animation.stop(),t._animation.setAnimationLoop(this._currentAnimationLoop),t._animation.setContext(this._currentAnimationContext),t._animation.start(),t.setPixelRatio(this._currentPixelRatio),t.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function XV(e){const t=this._controllers,n=this._controllerInputSources;for(let i=0;i<e.removed.length;i++){const r=e.removed[i],s=n.indexOf(r);s>=0&&(n[s]=null,t[s].disconnect(r))}for(let i=0;i<e.added.length;i++){const r=e.added[i];let s=n.indexOf(r);if(-1===s){for(let e=0;e<t.length;e++){if(e>=n.length){n.push(r),s=e;break}if(null===n[e]){n[e]=r,s=e;break}}if(-1===s)break}const a=t[s];a&&a.connect(r)}}function qV(e){return"quad"===e.type?this._glBinding.createQuadLayer({transform:new XRRigidTransform(e.translation,e.quaternion),width:e.width/2,height:e.height/2,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(e.translation,e.quaternion),radius:e.radius,centralAngle:e.centralAngle,aspectRatio:e.aspectRatio,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight,clearOnAccess:!1})}function $V(e,t){if(void 0===t)return;const n=this._cameraXR,i=this._renderer,r=i.backend,s=this._glBaseLayer,a=this.getReferenceSpace(),o=t.getViewerPose(a);if(this._xrFrame=t,null!==o){const e=o.views;null!==this._glBaseLayer&&r.setXRTarget(s.framebuffer);let t=!1;e.length!==n.cameras.length&&(n.cameras.length=0,t=!0);for(let i=0;i<e.length;i++){const a=e[i];let o;if(!0===this._supportsLayers){const e=this._glBinding.getViewSubImage(this._glProjLayer,a);o=e.viewport,0===i&&r.setXRRenderTargetTextures(this._xrRenderTarget,e.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:e.depthStencilTexture)}else o=s.getViewport(a);let l=this._cameras[i];void 0===l&&(l=new ws,l.layers.enable(i),l.viewport=new Zn,this._cameras[i]=l),l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.quaternion,l.scale),l.projectionMatrix.fromArray(a.projectionMatrix),l.projectionMatrixInverse.copy(l.projectionMatrix).invert(),l.viewport.set(o.x,o.y,o.width,o.height),0===i&&(n.matrix.copy(l.matrix),n.matrix.decompose(n.position,n.quaternion,n.scale)),!0===t&&n.cameras.push(l)}i.setOutputRenderTarget(this._xrRenderTarget)}for(let l=0;l<this._controllers.length;l++){const e=this._controllerInputSources[l],n=this._controllers[l];null!==e&&void 0!==n&&n.update(e,t,a)}this._currentAnimationLoop&&this._currentAnimationLoop(e,t),t.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:t}),this._xrFrame=null}const YV=new Ds,KV=new wn,QV=new Zn,ZV=new Da,JV=new Oa,ez=new Li,tz=new Zn;class nz{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:r=!0,stencil:s=!1,antialias:a=!1,samples:o=0,getFallback:l=null,colorBufferType:c=Se,multiview:u=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=o||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=Ut,this.toneMapping=0,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=s,this.info=new PI,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new FV,this.lighting=new BV,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Zn(0,0,this._width,this._height),this._scissor=new Zn(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new KD(new _N),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=!0===this.alpha?0:1;this._clearColor=new eD(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=c,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:1},this.xr=new GV(this,u),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,n)=>{await this.compileAsync(e,t);const i=this._renderLists.get(e,t),r=this._renderContexts.get(e,t,this._renderTarget),s=e.overrideMaterial||n.material,a=this._objects.get(n,s,e,t,i.lightsNode,r,r.clippingContext),{fragmentShader:o,vertexShader:l}=a.getNodeBuilderState();return{fragmentShader:o,vertexShader:l}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(i){if(null===this._getFallback)return void t(i);try{this.backend=n=this._getFallback(i),await n.init(this)}catch(i){return void t(i)}}this._nodes=new CV(this,n),this._animation=new fI(this._nodes,this.info),this._attributes=new AI(n),this._background=new Ek(this,this._nodes),this._geometries=new NI(this._attributes,this.info),this._textures=new JI(this,n,this.info),this._pipelines=new OI(n,this._nodes),this._bindings=new BI(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new xI(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new WI(this.lighting),this._bundles=new DV,this._renderContexts=new QI,this._animation.start(),this._initialized=!0,e(this)})),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const i=this._nodes.nodeFrame,r=i.renderId,s=this._currentRenderContext,a=this._currentRenderObjectFunction,o=this._compilationPromises,l=!0===e.isScene?e:YV;null===n&&(n=e);const c=this._renderTarget,u=this._renderContexts.get(n,t,c),h=this._activeMipmapLevel,d=[];this._currentRenderContext=u,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=d,i.renderId++,i.update(),u.depth=this.depth,u.stencil=this.stencil,u.clippingContext||(u.clippingContext=new PV),u.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,c);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,u.clippingContext),n!==e&&n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)}),p.finish(),null!==c){this._textures.updateRenderTarget(c,h);const e=this._textures.get(c);u.textures=e.textures,u.depthTexture=e.depthTexture}else u.textures=null,u.depthTexture=null;this._background.update(l,p,u);const m=p.opaque,f=p.transparent,g=p.transparentDoublePass,v=p.lightsNode;!0===this.opaque&&m.length>0&&this._renderObjects(m,t,l,v),!0===this.transparent&&f.length>0&&this._renderTransparents(f,g,t,l,v),i.renderId=r,this._currentRenderContext=s,this._currentRenderObjectFunction=a,this._compilationPromises=o,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(d)}async renderAsync(e,t){!1===this._initialized&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){!0===e?(this.overrideNodes.modelViewMatrix=iA,this.overrideNodes.modelNormalViewMatrix=rA):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===iA&&this.overrideNodes.modelNormalViewMatrix===rA}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:\n\nMessage: ${e.message}`;e.reason&&(t+=`\nReason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:i,camera:r,renderList:s}=e,a=this._currentRenderContext,o=this._bundles.get(i,r),l=this.backend.get(o);void 0===l.renderContexts&&(l.renderContexts=new Set);const c=i.version!==l.version,u=!1===l.renderContexts.has(a)||c;if(l.renderContexts.add(a),u){this.backend.beginBundle(a),(void 0===l.renderObjects||c)&&(l.renderObjects=[]),this._currentRenderBundle=o;const{transparentDoublePass:e,transparent:u,opaque:h}=s;!0===this.opaque&&h.length>0&&this._renderObjects(h,r,t,n),!0===this.transparent&&u.length>0&&this._renderTransparents(u,e,r,t,n),this._currentRenderBundle=null,this.backend.finishBundle(a,o),l.version=i.version}else{const{renderObjects:e}=l;for(let t=0,n=e.length;t<n;t++){const n=e[t];this._nodes.needsRefresh(n)&&(this._nodes.updateBefore(n),this._nodes.updateForRender(n),this._bindings.updateForRender(n),this._nodes.updateAfter(n))}}this.backend.addBundle(a,o)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this,n=0!==e,i=t!==zn.workingColorSpace;if(!1===n&&!1===i)return null;const{width:r,height:s}=this.getDrawingBufferSize(KV),{depth:a,stencil:o}=this;let l=this._frameBufferTarget;null===l&&(l=new Jn(r,s,{depthBuffer:a,stencilBuffer:o,type:this._colorBufferType,format:Pe,colorSpace:zn.workingColorSpace,generateMipmaps:!1,minFilter:de,magFilter:de,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l);const c=this.getOutputRenderTarget();return l.depthBuffer=a,l.stencilBuffer=o,null!==c?l.setSize(c.width,c.height,c.depth):l.setSize(r,s,1),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l.multiview=null!==c&&c.multiview,l.resolveDepthBuffer=null===c||c.resolveDepthBuffer,l._autoAllocateDepthBuffer=null!==c&&c._autoAllocateDepthBuffer,l}_renderScene(e,t,n=!0){if(!0===this._isDeviceLost)return;const i=n?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,s=r.renderId,a=this._currentRenderContext,o=this._currentRenderObjectFunction,l=!0===e.isScene?e:YV,c=this._renderTarget||this._outputRenderTarget,u=this._activeCubeFace,h=this._activeMipmapLevel;let d;null!==i?(d=i,this.setRenderTarget(d)):d=c;const p=this._renderContexts.get(e,t,d);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const m=this.coordinateSystem,f=this.xr;if(t.coordinateSystem!==m&&!1===f.isPresenting&&(t.coordinateSystem=m,t.updateProjectionMatrix(),t.isArrayCamera))for(const R of t.cameras)R.coordinateSystem=m,R.updateProjectionMatrix();!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===f.enabled&&!0===f.isPresenting&&(!0===f.cameraAutoUpdate&&f.updateCamera(t),t=f.getCamera());let g=this._viewport,v=this._scissor,b=this._pixelRatio;null!==d&&(g=d.viewport,v=d.scissor,b=1),this.getDrawingBufferSize(KV),QV.set(0,0,KV.width,KV.height);const y=void 0===g.minDepth?0:g.minDepth,x=void 0===g.maxDepth?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(b).floor(),p.viewportValue.width>>=h,p.viewportValue.height>>=h,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=x,p.viewport=!1===p.viewportValue.equals(QV),p.scissorValue.copy(v).multiplyScalar(b).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(QV),p.scissorValue.width>>=h,p.scissorValue.height>>=h,p.clippingContext||(p.clippingContext=new PV),p.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,d);const _=t.isArrayCamera?JV:ZV;t.isArrayCamera||(ez.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),_.setFromProjectionMatrix(ez,t.coordinateSystem,t.reversedDepth));const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T,p.clippingContext),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==d){this._textures.updateRenderTarget(d,h);const e=this._textures.get(d);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=d,p.depth=d.depthBuffer,p.stencil=d.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=KV.width,p.height=KV.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=h,p.height>>=h,p.activeCubeFace=u,p.activeMipmapLevel=h,p.occlusionQueryCount=T.occlusionQueryCount,p.scissorValue.max(tz.set(0,0,0,0)),p.scissorValue.x+p.scissorValue.width>p.width&&(p.scissorValue.width=Math.max(p.width-p.scissorValue.x,0)),p.scissorValue.y+p.scissorValue.height>p.height&&(p.scissorValue.height=Math.max(p.height-p.scissorValue.y,0)),this._background.update(l,T,p),p.camera=t,this.backend.beginRender(p);const{bundles:S,lightsNode:w,transparentDoublePass:M,transparent:E,opaque:A}=T;return S.length>0&&this._renderBundles(S,l,w),!0===this.opaque&&A.length>0&&this._renderObjects(A,t,l,w),!0===this.transparent&&E.length>0&&this._renderTransparents(E,M,t,l,w),this.backend.finishRender(p),r.renderId=s,this._currentRenderContext=a,this._currentRenderObjectFunction=o,null!==i&&(this.setRenderTarget(c,u,h),this._renderOutput(d)),l.onAfterRender(this,e,t,d),p}_setXRLayerSize(e,t){this._width=e,this._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const n=this.autoClear,i=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=n,this.xr.enabled=i}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,n=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===n&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,i){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,i,r=0,s=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,n,i),a.minDepth=r,a.maxDepth=s}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);const i=this._renderTarget||this._getFrameBufferTarget();let r=null;if(null!==i){this._textures.updateRenderTarget(i);const e=this._textures.get(i);r=this._renderContexts.getForClear(i),r.textures=e.textures,r.depthTexture=e.depthTexture,r.width=e.width,r.height=e.height,r.renderTarget=i,r.depth=i.depthBuffer,r.stencil=i.stencilBuffer,r.clearColorValue=this.backend.getClearColor(),r.activeCubeFace=this.getActiveCubeFace(),r.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,n,r),null!==i&&null===this._renderTarget&&this._renderOutput(i)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){!1===this._initialized&&await this.init(),this.clear(e,t,n)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:0}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:zn.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||null===this._renderTarget}dispose(){!0===this._initialized&&(this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),null!==this._frameBufferTarget&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{null!==e&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(!0===this._isDeviceLost)return;if(!1===this._initialized)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const n=this._nodes.nodeFrame,i=n.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,n.renderId=this.info.calls;const r=this.backend,s=this._pipelines,a=this._bindings,o=this._nodes,l=Array.isArray(e)?e:[e];if(void 0===l[0]||!0!==l[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const c of l){if(!1===s.has(c)){const e=()=>{c.removeEventListener("dispose",e),s.delete(c),a.delete(c),o.delete(c)};c.addEventListener("dispose",e);const t=c.onInitFunction;null!==t&&t.call(c,{renderer:this})}o.updateForCompute(c),a.updateForCompute(c);const n=a.getForCompute(c),i=s.getForCompute(c,n);r.compute(e,c,n,i,t)}r.finishCompute(e),n.renderId=i}async computeAsync(e,t=null){!1===this._initialized&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return!1===this._initialized&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){!1===this._initialized&&await this.init(),this._textures.updateTexture(e)}initTexture(e){!1===this._initialized&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(null!==t)if(t.isVector2)t=tz.set(t.x,t.y,e.image.width,e.image.height).floor();else{if(!t.isVector4)return void console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");t=tz.copy(t).floor()}else t=tz.set(0,0,e.image.width,e.image.height);let n,i=this._currentRenderContext;null!==i?n=i.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),null!==n&&(this._textures.updateRenderTarget(n),i=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,i,t)}copyTextureToTexture(e,t,n=null,i=null,r=0,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,i,r,s)}async readRenderTargetPixelsAsync(e,t,n,i,r,s=0,a=0){return this.backend.copyTextureToBuffer(e.textures[s],t,n,i,r,a)}_projectObject(e,t,n,i,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)i.pushLight(e);else if(e.isSprite){const s=t.isArrayCamera?JV:ZV;if(!e.frustumCulled||s.intersectsSprite(e,t)){!0===this.sortObjects&&tz.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ez);const{geometry:t,material:s}=e;s.visible&&i.push(e,t,s,n,tz.z,null,r)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const s=t.isArrayCamera?JV:ZV;if(!e.frustumCulled||s.intersectsObject(e,t)){const{geometry:t,material:s}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),tz.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(ez)),Array.isArray(s)){const a=t.groups;for(let o=0,l=a.length;o<l;o++){const l=a[o],c=s[l.materialIndex];c&&c.visible&&i.push(e,t,c,n,tz.z,l,r)}}else s.visible&&i.push(e,t,s,n,tz.z,null,r)}}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const n=i;(i=this._renderLists.get(e,t)).begin(),n.pushBundle({bundleGroup:e,camera:t,renderList:i}),i.finish()}const s=e.children;for(let a=0,o=s.length;a<o;a++)this._projectObject(s[a],t,n,i,r)}_renderBundles(e,t,n){for(const i of e)this._renderBundle(i,t,n)}_renderTransparents(e,t,n,i,r){if(t.length>0){for(const{material:e}of t)e.side=1;this._renderObjects(t,n,i,r,"backSide");for(const{material:e}of t)e.side=0;this._renderObjects(e,n,i,r);for(const{material:e}of t)e.side=2}else this._renderObjects(e,n,i,r)}_renderObjects(e,t,n,i,r=null){for(let s=0,a=e.length;s<a;s++){const{object:a,geometry:o,material:l,group:c,clippingContext:u}=e[s];this._currentRenderObjectFunction(a,n,t,o,l,c,i,u,r)}}renderObject(e,t,n,i,r,s,a,o=null,l=null){let c,u,h;if(e.onBeforeRender(this,t,n,i,r,s),!0===r.allowOverride&&null!==t.overrideMaterial){const e=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(c=e.positionNode,e.positionNode=r.positionNode),e.alphaTest=r.alphaTest,e.alphaMap=r.alphaMap,e.transparent=r.transparent||r.transmission>0,e.isShadowPassMaterial&&(e.side=null===r.shadowSide?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(h=e.depthNode,e.depthNode=r.depthNode),r.castShadowNode&&r.castShadowNode.isNode&&(u=e.colorNode,e.colorNode=r.castShadowNode),r.castShadowPositionNode&&r.castShadowPositionNode.isNode&&(c=e.positionNode,e.positionNode=r.castShadowPositionNode)),r=e}!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,this._handleObjectFunction(e,r,t,n,a,s,o,"backSide"),r.side=0,this._handleObjectFunction(e,r,t,n,a,s,o,l),r.side=2):this._handleObjectFunction(e,r,t,n,a,s,o,l),void 0!==c&&(t.overrideMaterial.positionNode=c),void 0!==h&&(t.overrideMaterial.depthNode=h),void 0!==u&&(t.overrideMaterial.colorNode=u),e.onAfterRender(this,t,n,i,r,s)}_renderObjectDirect(e,t,n,i,r,s,a,o){const l=this._objects.get(e,t,n,i,r,this._currentRenderContext,a,o);l.drawRange=e.geometry.drawRange,l.group=s;const c=this._nodes.needsRefresh(l);if(c&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.bundleGroup}this.backend.draw(l,this.info),c&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,n,i,r,s,a,o){const l=this._objects.get(e,t,n,i,r,this._currentRenderContext,a,o);l.drawRange=e.geometry.drawRange,l.group=s,this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l),this._pipelines.getForRender(l,this._compilationPromises),this._nodes.updateAfter(l)}get compile(){return this.compileAsync}}class iz{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}let rz=class extends iz{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(EI-e%EI)%EI;var e}get buffer(){return this._buffer}update(){return!0}};class sz extends rz{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let az=0;class oz extends sz{constructor(e,t){super("UniformBuffer_"+az++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class lz extends sz{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let n=0,i=this.uniforms.length;n<i;n++){const i=this.uniforms[n],r=i.boundary,s=i.itemSize*e,a=t%EI,o=a%r,l=a+o;t+=o,0!==l&&EI-l<s&&(t+=EI-l),i.offset=t/e,t+=s}return Math.ceil(t/EI)*EI}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,s=e.getType();if(n[r]!==i){this._getBufferForType(s)[r]=n[r]=i,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,s=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y){const e=this._getBufferForType(s);e[r+0]=n[r+0]=i.x,e[r+1]=n[r+1]=i.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,s=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z){const e=this._getBufferForType(s);e[r+0]=n[r+0]=i.x,e[r+1]=n[r+1]=i.y,e[r+2]=n[r+2]=i.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset,s=e.getType();if(n[r+0]!==i.x||n[r+1]!==i.y||n[r+2]!==i.z||n[r+4]!==i.w){const e=this._getBufferForType(s);e[r+0]=n[r+0]=i.x,e[r+1]=n[r+1]=i.y,e[r+2]=n[r+2]=i.z,e[r+3]=n[r+3]=i.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,i=e.getValue(),r=e.offset;if(n[r+0]!==i.r||n[r+1]!==i.g||n[r+2]!==i.b){const e=this.buffer;e[r+0]=n[r+0]=i.r,e[r+1]=n[r+1]=i.g,e[r+2]=n[r+2]=i.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,i=e.getValue().elements,r=e.offset;if(n[r+0]!==i[0]||n[r+1]!==i[1]||n[r+2]!==i[2]||n[r+4]!==i[3]||n[r+5]!==i[4]||n[r+6]!==i[5]||n[r+8]!==i[6]||n[r+9]!==i[7]||n[r+10]!==i[8]){const e=this.buffer;e[r+0]=n[r+0]=i[0],e[r+1]=n[r+1]=i[1],e[r+2]=n[r+2]=i[2],e[r+4]=n[r+4]=i[3],e[r+5]=n[r+5]=i[4],e[r+6]=n[r+6]=i[5],e[r+8]=n[r+8]=i[6],e[r+9]=n[r+9]=i[7],e[r+10]=n[r+10]=i[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,i=e.getValue().elements,r=e.offset;if(!1===function(e,t,n){for(let i=0,r=t.length;i<r;i++)if(e[n+i]!==t[i])return!1;return!0}(n,i,r)){this.buffer.set(i,r),function(e,t,n){for(let i=0,r=t.length;i<r;i++)e[n+i]=t[i]}(n,i,r),t=!0}return t}_getBufferForType(e){return"int"===e||"ivec2"===e||"ivec3"===e||"ivec4"===e?new Int32Array(this.buffer.buffer):"uint"===e||"uvec2"===e||"uvec3"===e||"uvec4"===e?new Uint32Array(this.buffer.buffer):this.buffer}}let cz=0;class uz extends lz{constructor(e,t){super(e),this.id=cz++,this.groupNode=t,this.isNodeUniformsGroup=!0}}class hz extends iz{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.generation=null,this.isSampler=!0}set texture(e){if(this._texture===e)return;const t=()=>{this._texture=null,this.generation=null,this.version=0};this._texture&&this._texture.removeEventListener("dispose",t),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",t)}get texture(){return this._texture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}clone(){const e=super.clone();return e._texture=null,e.texture=this.texture,e}}let dz=0;class pz extends hz{constructor(e,t){super(e,t),this.id=dz++,this.store=!1,this.isSampledTexture=!0}}class mz extends pz{constructor(e,t,n,i=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=i}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class fz extends mz{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledCubeTexture=!0}}class gz extends mz{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledTexture3D=!0}}const vz={textureDimensions:"textureSize",equals:"equal",bitcast_float_int:"floatBitsToInt",bitcast_int_float:"intBitsToFloat",bitcast_uint_float:"uintBitsToFloat",bitcast_float_uint:"floatBitsToUint"},bz={low:"lowp",medium:"mediump",high:"highp"},yz={swizzleAssign:!0,storageBuffer:!1},xz={perspective:"smooth",linear:"noperspective"},_z={centroid:"centroid"},Tz="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\nprecision lowp sampler2DArrayShadow;\nprecision lowp samplerCubeShadow;\n";class Sz extends rV{constructor(e,t){super(e,t,new MV),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==Ft}getMethod(e){return vz[e]||e}getBitcastMethod(e,t){return vz[`bitcast_${t}_${e}`]}getTernary(e,t,n){return`${e} ? ${t} : ${n}`}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const r of t.inputs)i.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${i.join(", ")} ) {\n\n\t${n.vars}\n\n${n.code}\n\treturn ${n.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,n=t.count*t.itemSize,{itemSize:i}=t,r=t.array.constructor.name.toLowerCase().includes("int");let s=r?Fe:De;2===i?s=r?Oe:Ue:3===i?s=r?Be:Ne:4===i&&(s=r?ke:Pe);const a={Float32Array:Te,Uint8Array:ge,Uint16Array:ye,Uint32Array:_e,Int8Array:ve,Int16Array:be,Int32Array:xe,Uint8ClampedArray:ge},o=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/i))));let l=Math.ceil(n/i/o);o*l*i<n&&l++;const c=o*l*i,u=new e.constructor(c);u.set(e,0),t.array=u;const h=new ma(t.array,o,l,s,a[t.array.constructor.name]||Te);h.needsUpdate=!0,h.isPBOTexture=!0;const d=new aE(h,null,null);d.setPrecision("high"),t.pboNode=d,t.pbo=d.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,i=t.value;if(this.renderer.backend.has(i)){this.renderer.backend.get(i).pbo=i.pbo}const r=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.nodeName),s=this.getPropertyName(r);this.increaseUsage(n);const a=n.build(this,"uint"),o=this.getDataFromNode(e);let l=o.propertyName;if(void 0===l){const n=this.getVarFromNode(e);l=this.getPropertyName(n);const r=this.getDataFromNode(t);let c=r.propertySizeName;void 0===c&&(c=l+"Size",this.getVarFromNode(t,c,"uint"),this.addLineFlowCode(`${c} = uint( textureSize( ${s}, 0 ).x )`,e),r.propertySizeName=c);const{itemSize:u}=i,h="."+Xx.join("").slice(0,u),d=`ivec2(${a} % ${c}, ${a} / ${c})`,p=this.generateTextureLoad(null,s,d,null,null,"0");let m="vec4";i.pbo.type===_e?m="uvec4":i.pbo.type===xe&&(m="ivec4"),this.addLineFlowCode(`${l} = ${m}(${p})${h}`,e),o.propertyName=l}return l}generateTextureLoad(e,t,n,i,r,s="0"){let a;return a=i?r?`texelFetchOffset( ${t}, ivec3( ${n}, ${i} ), ${s}, ${r} )`:`texelFetch( ${t}, ivec3( ${n}, ${i} ), ${s} )`:r?`texelFetchOffset( ${t}, ${n}, ${s}, ${r} )`:`texelFetch( ${t}, ${n}, ${s} )`,null!==e&&e.isDepthTexture&&(a+=".x"),a}generateTexture(e,t,n,i,r){return i&&(n=`vec3( ${n}, ${i} )`),e.isDepthTexture?r?`textureOffset( ${t}, ${n}, ${r} ).x`:`texture( ${t}, ${n} ).x`:r?`textureOffset( ${t}, ${n}, ${r} )`:`texture( ${t}, ${n} )`}generateTextureLevel(e,t,n,i,r){return r?`textureLodOffset( ${t}, ${n}, ${i}, ${r} )`:`textureLod( ${t}, ${n}, ${i} )`}generateTextureBias(e,t,n,i,r){return r?`textureOffset( ${t}, ${n}, ${r}, ${i} )`:`texture( ${t}, ${n}, ${i} )`}generateTextureGrad(e,t,n,i,r){return r?`textureGradOffset( ${t}, ${n}, ${i[0]}, ${i[1]}, ${r} )`:`textureGrad( ${t}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(e,t,n,i,r,s,a=this.shaderStage){if("fragment"===a)return r?s?`textureOffset( ${t}, vec4( ${n}, ${r}, ${i} ), ${s} )`:`texture( ${t}, vec4( ${n}, ${r}, ${i} ) )`:s?`textureOffset( ${t}, vec3( ${n}, ${i} ), ${s} )`:`texture( ${t}, vec3( ${n}, ${i} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}getVars(e){const t=[],n=this.vars[e];if(void 0!==n)for(const i of n)t.push(`${this.getVar(i.type,i.name,i.count)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],n=[],i={};for(const s of t){let t=null,r=!1;if("texture"===s.type||"texture3D"===s.type){const e=s.node.value;let n="";!0!==e.isDataTexture&&!0!==e.isData3DTexture||(e.type===_e?n="u":e.type===xe&&(n="i")),t="texture3D"===s.type&&!1===e.isArrayTexture?`${n}sampler3D ${s.name};`:e.compareFunction?!0===e.isArrayTexture?`sampler2DArrayShadow ${s.name};`:`sampler2DShadow ${s.name};`:!0===e.isArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${n}sampler2DArray ${s.name};`:`${n}sampler2D ${s.name};`}else if("cubeTexture"===s.type)t=`samplerCube ${s.name};`;else if("buffer"===s.type){const e=s.node,n=this.getType(e.bufferType),i=e.bufferCount,r=i>0?i:"";t=`${e.name} {\n\t${n} ${s.name}[${r}];\n};\n`}else{t=`${this.getVectorType(s.type)} ${this.getPropertyName(s,e)};`,r=!0}const a=s.node.precision;if(null!==a&&(t=bz[a]+" "+t),r){t="\t"+t;const e=s.groupNode.name;(i[e]||(i[e]=[])).push(t)}else t="uniform "+t,n.push(t)}let r="";for(const s in i){const t=i[s];r+=this._getGLSLUniformStruct(e+"_"+s,t.join("\n"))+"\n"}return r+=n.join("\n"),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==xe){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array;!1==(i instanceof Uint32Array||i instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let n=0;for(const i of e)t+=`layout( location = ${n++} ) in ${i.type} ${i.name};\n`}return t}getStructMembers(e){const t=[];for(const n of e.members)t.push(`\t${n.type} ${n.name};`);return t.join("\n")}getStructs(e){const t=[],n=this.structs[e],i=[];for(const r of n)if(r.output)for(const e of r.members)i.push(`layout( location = ${e.index} ) out ${e.type} ${e.name};`);else{let e="struct "+r.name+" {\n";e+=this.getStructMembers(r),e+="\n};\n",t.push(e)}return 0===i.length&&i.push("layout( location = 0 ) out vec4 fragColor;"),"\n"+i.join("\n")+"\n\n"+t.join("\n")}getVaryings(e){let t="";const n=this.varyings;if("vertex"===e||"compute"===e)for(const i of n){"compute"===e&&(i.needsInterpolation=!0);const n=this.getType(i.type);if(i.needsInterpolation)if(i.interpolationType){t+=`${xz[i.interpolationType]||i.interpolationType} ${_z[i.interpolationSampling]||""} out ${n} ${i.name};\n`}else{t+=`${n.includes("int")||n.includes("uv")||n.includes("iv")?"flat ":""}out ${n} ${i.name};\n`}else t+=`${n} ${i.name};\n`}else if("fragment"===e)for(const i of n)if(i.needsInterpolation){const e=this.getType(i.type);if(i.interpolationType){t+=`${xz[i.interpolationType]||i.interpolationType} ${_z[i.interpolationSampling]||""} in ${e} ${i.name};\n`}else{t+=`${e.includes("int")||e.includes("uv")||e.includes("iv")?"flat ":""}in ${e} ${i.name};\n`}}for(const i of this.builtins[e])t+=`${i};\n`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((e,t)=>e*t,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const i=this.extensions[n]||(this.extensions[n]=new Map);!1===i.has(e)&&i.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(void 0!==n)for(const{name:i,behavior:r}of n.values())t.push(`#extension ${i} : ${r}`);return t.join("\n")}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=yz[e];if(void 0===t){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance"}if(void 0!==n){const e=this.renderer.backend.extensions;e.has(n)&&(e.get(n),t=!0)}yz[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const i=e[n],r=this.getPropertyName(i.attributeNode);r&&(t+=`${i.varyingName} = ${r};\n\t`)}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${Tz}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${Tz}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n// structs\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n="// code\n\n";n+=this.flowCode[t];const i=this.flowNodes[t],r=i[i.length-1];for(const e of i){const i=this.getFlowData(e),s=e.name;s&&(n.length>0&&(n+="\n"),n+=`\t// flow -> ${s}\n\t`),n+=`${i.code}\n\t`,e===r&&"compute"!==t&&(n+="// result\n\t","vertex"===t?(n+="gl_Position = ",n+=`${i.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${i.result};`)))}const s=e[t];s.extensions=this.getExtensions(t),s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.vars=this.getVars(t),s.structs=this.getStructs(t),s.codes=this.getCodes(t),s.transforms=this.getTransforms(t),s.flow=n}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,i=null){const r=super.getUniformFromNode(e,t,n,i),s=this.getDataFromNode(e,n,this.globalCache);let a=s.uniformGPU;if(void 0===a){const i=e.groupNode,o=i.name,l=this.getBindGroupArray(o,n);if("texture"===t)a=new mz(r.name,r.node,i),l.push(a);else if("cubeTexture"===t)a=new fz(r.name,r.node,i),l.push(a);else if("texture3D"===t)a=new gz(r.name,r.node,i),l.push(a);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const t=new oz(e,i);t.name=e.name,l.push(t),a=t}else{const e=this.uniformGroups[n]||(this.uniformGroups[n]={});let s=e[o];void 0===s&&(s=new uz(n+"_"+o,i),e[o]=s,l.push(s)),a=this.getNodeUniform(r,t),s.addUniform(a)}s.uniformGPU=a}return r}}let wz=null,Mz=null;class Ez{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=!0===e.trackTimestamp}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}getTimestampUID(e){const t=this.get(e);let n=!0===e.isComputeNode?"c":"r";return n+=":"+t.frameCalls+":"+e.id,n}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp)return void On("WebGPURenderer: Timestamp tracking is disabled.");const t=this.timestampQueryPool[e];if(!t)return void On(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);const n=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=n,n}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return wz=wz||new wn,this.renderer.getDrawingBufferSize(wz)}setScissorTest(){}getClearColor(){const e=this.renderer;return Mz=Mz||new eD,e.getClearColor(Mz),Mz.getRGB(Mz),Mz}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Fn(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${n} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let Az,Rz,Cz=0;class Nz{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class Pz{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:i}=n,r=e.array,s=e.usage||i.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,o=n.get(a);let l,c=o.bufferGPU;if(void 0===c&&(c=this._createBuffer(i,t,r,s),o.bufferGPU=c,o.bufferType=t,o.version=a.version),r instanceof Float32Array)l=i.FLOAT;else if("undefined"!=typeof Float16Array&&r instanceof Float16Array)l=i.HALF_FLOAT;else if(r instanceof Uint16Array)l=e.isFloat16BufferAttribute?i.HALF_FLOAT:i.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=i.SHORT;else if(r instanceof Uint32Array)l=i.UNSIGNED_INT;else if(r instanceof Int32Array)l=i.INT;else if(r instanceof Int8Array)l=i.BYTE;else if(r instanceof Uint8Array)l=i.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);l=i.UNSIGNED_BYTE}let u={bufferGPU:c,bufferType:t,type:l,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:l===i.INT||l===i.UNSIGNED_INT||e.gpuType===xe,id:Cz++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(i,t,r,s);u=new Nz(u,e)}n.set(e,u)}updateAttribute(e){const t=this.backend,{gl:n}=t,i=e.array,r=e.isInterleavedBufferAttribute?e.data:e,s=t.get(r),a=s.bufferType,o=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(a,s.bufferGPU),0===o.length)n.bufferSubData(a,0,i);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];n.bufferSubData(a,t.start*i.BYTES_PER_ELEMENT,i,t.start,t.count)}r.clearUpdateRanges()}n.bindBuffer(a,null),s.version=r.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const i=t.get(e);n.deleteBuffer(i.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,i=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(i),s=e.array,a=s.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,r);const o=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,o),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(s.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,o),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(o),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,i){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,n,i),e.bindBuffer(t,null),r}}class Lz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;Az={[g]:e.FUNC_ADD,[v]:e.FUNC_SUBTRACT,[b]:e.FUNC_REVERSE_SUBTRACT},Rz={[_]:e.ZERO,[T]:e.ONE,[S]:e.SRC_COLOR,[M]:e.SRC_ALPHA,[P]:e.SRC_ALPHA_SATURATE,[C]:e.DST_COLOR,[A]:e.DST_ALPHA,[w]:e.ONE_MINUS_SRC_COLOR,[E]:e.ONE_MINUS_SRC_ALPHA,[N]:e.ONE_MINUS_DST_COLOR,[R]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),n=e.getParameter(e.VIEWPORT);this.currentScissor=(new Zn).fromArray(t),this.currentViewport=(new Zn).fromArray(n),this._tempVec4=new Zn}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;0!==e?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,i,r,s,a,o){const{gl:l}=this;if(0!==e){if(!1===this.currentBlendingEnabled&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),5===e)r=r||t,s=s||n,a=a||i,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(l.blendEquationSeparate(Az[t],Az[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),n===this.currentBlendSrc&&i===this.currentBlendDst&&s===this.currentBlendSrcAlpha&&a===this.currentBlendDstAlpha||(l.blendFuncSeparate(Rz[n],Rz[i],Rz[s],Rz[a]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=s,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||o!==this.currentPremultipledAlpha){if(this.currentBlendEquation===g&&this.currentBlendEquationAlpha===g||(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=g,this.currentBlendEquationAlpha=g),o)switch(e){case 1:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case 2:l.blendFunc(l.ONE,l.ONE);break;case 3:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case 4:l.blendFuncSeparate(l.DST_COLOR,l.ONE_MINUS_SRC_ALPHA,l.ZERO,l.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case 2:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE,l.ONE,l.ONE);break;case 3:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case 4:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=o}}else!0===this.currentBlendingEnabled&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}this.currentDepthFunc=e}}scissor(e,t,n,i){const r=this._tempVec4.set(e,t,n,i);if(!1===this.currentScissor.equals(r)){const{gl:e}=this;e.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,n,i){const r=this._tempVec4.set(e,t,n,i);if(!1===this.currentViewport.equals(r)){const{gl:e}=this;e.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===n||(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===n||(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){const{gl:i}=this;2===e.side?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let r=1===e.side;t&&(r=!r),this.setFlipSided(r),1===e.blending&&!1===e.transparent?this.setBlending(0):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const s=e.stencilWrite;if(this.setStencilTest(s),s&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n){const e=12288;for(let t=0;t<8;t++)t<n?this.enable(e+t):this.disable(e+t)}}setPolygonOffset(e,t,n){const{gl:i}=this;e?(this.enable(i.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===n||(i.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}setVertexState(e,t=null){const n=this.gl;return(this.currentVAO!==e||this.currentIndex!==t)&&(n.bindVertexArray(e),null!==t&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0)}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:i}=this;return i[e]!==t&&(n.bindFramebuffer(e,t),i[e]=t,e===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:n}=this;let i=[],r=!1;if(null!==e.textures){i=this.currentDrawbuffers.get(t),void 0===i&&(i=[],this.currentDrawbuffers.set(t,i));const s=e.textures;if(i.length!==s.length||i[0]!==n.COLOR_ATTACHMENT0){for(let e=0,t=s.length;e<t;e++)i[e]=n.COLOR_ATTACHMENT0+e;i.length=s.length,r=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,r=!0);r&&n.drawBuffers(i)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:i}=this;void 0===e&&(e=t.TEXTURE0+i-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:i,currentTextureSlot:r,currentBoundTextures:s,maxTextures:a}=this;void 0===n&&(n=null===r?i.TEXTURE0+a-1:r);let o=s[n];void 0===o&&(o={type:void 0,texture:void 0},s[n]=o),o.type===e&&o.texture===t||(r!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(e,t),o.type=e,o.texture=t)}bindBufferBase(e,t,n){const{gl:i}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==n&&(i.bindBufferBase(e,t,n),this.currentBoundBufferBases[r]=n,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,i=n[t];void 0!==i&&void 0!==i.type&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}}class Iz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=""){const{gl:n,extensions:i}=this;let r;const s=zn.getTransfer(t);if(e===ge)return n.UNSIGNED_BYTE;if(e===we)return n.UNSIGNED_SHORT_4_4_4_4;if(e===Me)return n.UNSIGNED_SHORT_5_5_5_1;if(e===Ae)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===Re)return n.UNSIGNED_INT_10F_11F_11F_REV;if(e===ve)return n.BYTE;if(e===be)return n.SHORT;if(e===ye)return n.UNSIGNED_SHORT;if(e===xe)return n.INT;if(e===_e)return n.UNSIGNED_INT;if(e===Te)return n.FLOAT;if(e===Se)return n.HALF_FLOAT;if(e===Ce)return n.ALPHA;if(e===Ne)return n.RGB;if(e===Pe)return n.RGBA;if(e===Le)return n.DEPTH_COMPONENT;if(e===Ie)return n.DEPTH_STENCIL;if(e===De)return n.RED;if(e===Fe)return n.RED_INTEGER;if(e===Ue)return n.RG;if(e===Oe)return n.RG_INTEGER;if(e===ke)return n.RGBA_INTEGER;if(e===Ve||e===ze||e===Ge||e===He)if(s===kt){if(r=i.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(e===Ve)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===ze)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Ge)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===He)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=i.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(e===Ve)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ze)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ge)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===He)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===We||e===je||e===Xe||e===qe){if(r=i.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(e===We)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===je)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Xe)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===qe)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===$e||e===Ye||e===Ke){if(r=i.get("WEBGL_compressed_texture_etc"),null===r)return null;if(e===$e||e===Ye)return s===kt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===Ke)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(e===Qe||e===Ze||e===Je||e===et||e===tt||e===nt||e===it||e===rt||e===st||e===at||e===ot||e===lt||e===ct||e===ut){if(r=i.get("WEBGL_compressed_texture_astc"),null===r)return null;if(e===Qe)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ze)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Je)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===et)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===tt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===nt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===it)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===rt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===st)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===at)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===ot)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===lt)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===ct)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===ut)return s===kt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===ht){if(r=i.get("EXT_texture_compression_bptc"),null===r)return null;if(e===ht)return s===kt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===mt||e===ft||e===gt||e===vt){if(r=i.get("EXT_texture_compression_rgtc"),null===r)return null;if(e===mt)return r.COMPRESSED_RED_RGTC1_EXT;if(e===ft)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===gt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===vt)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===Ee?n.UNSIGNED_INT_24_8:void 0!==n[e]?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,i)=>{!function r(){const s=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(s===e.WAIT_FAILED)return e.deleteSync(t),void i();s!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),n()):requestAnimationFrame(r)}()})}}let Dz,Fz,Uz,Oz=!1;class Bz{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===Oz&&(this._init(),Oz=!0)}_init(){const e=this.gl;Dz={[ae]:e.REPEAT,[oe]:e.CLAMP_TO_EDGE,[le]:e.MIRRORED_REPEAT},Fz={[ce]:e.NEAREST,[ue]:e.NEAREST_MIPMAP_NEAREST,[he]:e.NEAREST_MIPMAP_LINEAR,[de]:e.LINEAR,[pe]:e.LINEAR_MIPMAP_NEAREST,[me]:e.LINEAR_MIPMAP_LINEAR},Uz={[Yt]:e.NEVER,[nn]:e.ALWAYS,[Kt]:e.LESS,[Zt]:e.LEQUAL,[Qt]:e.EQUAL,[tn]:e.GEQUAL,[Jt]:e.GREATER,[en]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let n;return n=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,n}getInternalFormat(e,t,n,i,r=!1){const{gl:s,extensions:a}=this;if(null!==e){if(void 0!==s[e])return s[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let o=t;if(t===s.RED&&(n===s.FLOAT&&(o=s.R32F),n===s.HALF_FLOAT&&(o=s.R16F),n===s.UNSIGNED_BYTE&&(o=s.R8),n===s.UNSIGNED_SHORT&&(o=s.R16),n===s.UNSIGNED_INT&&(o=s.R32UI),n===s.BYTE&&(o=s.R8I),n===s.SHORT&&(o=s.R16I),n===s.INT&&(o=s.R32I)),t===s.RED_INTEGER&&(n===s.UNSIGNED_BYTE&&(o=s.R8UI),n===s.UNSIGNED_SHORT&&(o=s.R16UI),n===s.UNSIGNED_INT&&(o=s.R32UI),n===s.BYTE&&(o=s.R8I),n===s.SHORT&&(o=s.R16I),n===s.INT&&(o=s.R32I)),t===s.RG&&(n===s.FLOAT&&(o=s.RG32F),n===s.HALF_FLOAT&&(o=s.RG16F),n===s.UNSIGNED_BYTE&&(o=s.RG8),n===s.UNSIGNED_SHORT&&(o=s.RG16),n===s.UNSIGNED_INT&&(o=s.RG32UI),n===s.BYTE&&(o=s.RG8I),n===s.SHORT&&(o=s.RG16I),n===s.INT&&(o=s.RG32I)),t===s.RG_INTEGER&&(n===s.UNSIGNED_BYTE&&(o=s.RG8UI),n===s.UNSIGNED_SHORT&&(o=s.RG16UI),n===s.UNSIGNED_INT&&(o=s.RG32UI),n===s.BYTE&&(o=s.RG8I),n===s.SHORT&&(o=s.RG16I),n===s.INT&&(o=s.RG32I)),t===s.RGB){const e=r?Bt:zn.getTransfer(i);n===s.FLOAT&&(o=s.RGB32F),n===s.HALF_FLOAT&&(o=s.RGB16F),n===s.UNSIGNED_BYTE&&(o=s.RGB8),n===s.UNSIGNED_SHORT&&(o=s.RGB16),n===s.UNSIGNED_INT&&(o=s.RGB32UI),n===s.BYTE&&(o=s.RGB8I),n===s.SHORT&&(o=s.RGB16I),n===s.INT&&(o=s.RGB32I),n===s.UNSIGNED_BYTE&&(o=e===kt?s.SRGB8:s.RGB8),n===s.UNSIGNED_SHORT_5_6_5&&(o=s.RGB565),n===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1),n===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGB4),n===s.UNSIGNED_INT_5_9_9_9_REV&&(o=s.RGB9_E5),n===s.UNSIGNED_INT_10F_11F_11F_REV&&(o=s.R11F_G11F_B10F)}if(t===s.RGB_INTEGER&&(n===s.UNSIGNED_BYTE&&(o=s.RGB8UI),n===s.UNSIGNED_SHORT&&(o=s.RGB16UI),n===s.UNSIGNED_INT&&(o=s.RGB32UI),n===s.BYTE&&(o=s.RGB8I),n===s.SHORT&&(o=s.RGB16I),n===s.INT&&(o=s.RGB32I)),t===s.RGBA){const e=r?Bt:zn.getTransfer(i);n===s.FLOAT&&(o=s.RGBA32F),n===s.HALF_FLOAT&&(o=s.RGBA16F),n===s.UNSIGNED_BYTE&&(o=s.RGBA8),n===s.UNSIGNED_SHORT&&(o=s.RGBA16),n===s.UNSIGNED_INT&&(o=s.RGBA32UI),n===s.BYTE&&(o=s.RGBA8I),n===s.SHORT&&(o=s.RGBA16I),n===s.INT&&(o=s.RGBA32I),n===s.UNSIGNED_BYTE&&(o=e===kt?s.SRGB8_ALPHA8:s.RGBA8),n===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGBA4),n===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1)}return t===s.RGBA_INTEGER&&(n===s.UNSIGNED_BYTE&&(o=s.RGBA8UI),n===s.UNSIGNED_SHORT&&(o=s.RGBA16UI),n===s.UNSIGNED_INT&&(o=s.RGBA32UI),n===s.BYTE&&(o=s.RGBA8I),n===s.SHORT&&(o=s.RGBA16I),n===s.INT&&(o=s.RGBA32I)),t===s.DEPTH_COMPONENT&&(n===s.UNSIGNED_SHORT&&(o=s.DEPTH_COMPONENT16),n===s.UNSIGNED_INT&&(o=s.DEPTH_COMPONENT24),n===s.FLOAT&&(o=s.DEPTH_COMPONENT32F)),t===s.DEPTH_STENCIL&&n===s.UNSIGNED_INT_24_8&&(o=s.DEPTH24_STENCIL8),o!==s.R16F&&o!==s.R32F&&o!==s.RG16F&&o!==s.RG32F&&o!==s.RGBA16F&&o!==s.RGBA32F||a.get("EXT_color_buffer_float"),o}setTextureParameters(e,t){const{gl:n,extensions:i,backend:r}=this,s=zn.getPrimaries(zn.workingColorSpace),a=t.colorSpace===Ft?null:zn.getPrimaries(t.colorSpace),o=t.colorSpace===Ft||s===a?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,o),n.texParameteri(e,n.TEXTURE_WRAP_S,Dz[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,Dz[t.wrapT]),e!==n.TEXTURE_3D&&e!==n.TEXTURE_2D_ARRAY||t.isArrayTexture||n.texParameteri(e,n.TEXTURE_WRAP_R,Dz[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,Fz[t.magFilter]);const l=void 0!==t.mipmaps&&t.mipmaps.length>0,c=t.minFilter===de&&l?me:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,Fz[c]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,Uz[t.compareFunction])),!0===i.has("EXT_texture_filter_anisotropic")){if(t.magFilter===ce)return;if(t.minFilter!==he&&t.minFilter!==me)return;if(t.type===Te&&!1===i.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const s=i.get("EXT_texture_filter_anisotropic");n.texParameterf(e,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:i}=this,r=this.getGLTextureType(e);let s=i[r];void 0===s&&(s=t.createTexture(),n.state.bindTexture(r,s),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),i[r]=s),n.set(e,{textureGPU:s,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:n,backend:i}=this,{levels:r,width:s,height:a,depth:o}=t,l=i.utils.convert(e.format,e.colorSpace),c=i.utils.convert(e.type),u=this.getInternalFormat(e.internalFormat,l,c,e.colorSpace,e.isVideoTexture),h=n.createTexture(),d=this.getGLTextureType(e);i.state.bindTexture(d,h),this.setTextureParameters(d,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,r,u,s,a,o):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,r,u,s,a,o):e.isVideoTexture||n.texStorage2D(d,r,u,s,a),i.set(e,{textureGPU:h,glTextureType:d,glFormat:l,glType:c,glInternalFormat:u})}copyBufferToTexture(e,t){const{gl:n,backend:i}=this,{textureGPU:r,glTextureType:s,glFormat:a,glType:o}=i.get(t),{width:l,height:c}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),i.state.bindTexture(s,r),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(s,0,0,0,l,c,a,o,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:i,height:r}=t,{textureGPU:s,glTextureType:a,glFormat:o,glType:l,glInternalFormat:c}=this.backend.get(e);if(!e.isRenderTargetTexture&&void 0!==s)if(this.backend.state.bindTexture(a,s),this.setTextureParameters(a,e),e.isCompressedTexture){const i=e.mipmaps,r=t.image;for(let t=0;t<i.length;t++){const s=i[t];e.isCompressedArrayTexture?e.format!==n.RGBA?null!==o?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,t,0,0,0,s.width,s.height,r.depth,o,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,t,0,0,0,s.width,s.height,r.depth,o,l,s.data):null!==o?n.compressedTexSubImage2D(n.TEXTURE_2D,t,0,0,s.width,s.height,o,s.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const s=t.images,a=e.mipmaps;for(let e=0;e<6;e++){const t=kz(s[e]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,i,r,o,l,t);for(let i=0;i<a.length;i++){const t=kz(a[i].images[e]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,t.width,t.height,o,l,t)}}}else if(e.isDataArrayTexture||e.isArrayTexture){const i=t.image;if(e.layerUpdates.size>0){const t=dd(i.width,i.height,e.format,e.type);for(const r of e.layerUpdates){const e=i.data.subarray(r*t/i.data.BYTES_PER_ELEMENT,(r+1)*t/i.data.BYTES_PER_ELEMENT);n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,r,i.width,i.height,1,o,l,e)}e.clearLayerUpdates()}else n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,i.width,i.height,i.depth,o,l,i.data)}else if(e.isData3DTexture){const e=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,o,l,e.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(a,0,c,o,l,t.image);else{const s=e.mipmaps;if(s.length>0)for(let e=0,t=s.length;e<t;e++){const t=s[e],i=kz(t);n.texSubImage2D(a,e,0,0,t.width,t.height,o,l,i)}else{const e=kz(t.image);n.texSubImage2D(a,0,0,0,i,r,o,l,e)}}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:i,glTextureType:r}=n.get(e);n.state.bindTexture(r,i),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const i=n.get(e);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(const e in i.framebuffers)t.deleteFramebuffer(i.framebuffers[e]);delete i.framebuffers}if(i.depthRenderbuffer&&(t.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(t.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(t.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let e=0;e<i.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(i.msaaRenderbuffers[e]);delete i.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:n}=this,{textureGPU:i,renderTarget:r}=n.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(i),n.delete(e)}copyTextureToTexture(e,t,n=null,i=null,r=0,s=0){const{gl:a,backend:o}=this,{state:l}=this.backend,{textureGPU:c,glTextureType:u,glType:h,glFormat:d}=o.get(t);let p,m,f,g,v,b,y,x,_;l.bindTexture(u,c);const T=e.isCompressedTexture?e.mipmaps[s]:e.image;if(null!==n)p=n.max.x-n.min.x,m=n.max.y-n.min.y,f=n.isBox3?n.max.z-n.min.z:1,g=n.min.x,v=n.min.y,b=n.isBox3?n.min.z:0;else{const t=Math.pow(2,-r);p=Math.floor(T.width*t),m=Math.floor(T.height*t),f=e.isDataArrayTexture||e.isArrayTexture?T.depth:e.isData3DTexture?Math.floor(T.depth*t):1,g=0,v=0,b=0}null!==i?(y=i.x,x=i.y,_=i.z):(y=0,x=0,_=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const S=a.getParameter(a.UNPACK_ROW_LENGTH),w=a.getParameter(a.UNPACK_IMAGE_HEIGHT),M=a.getParameter(a.UNPACK_SKIP_PIXELS),E=a.getParameter(a.UNPACK_SKIP_ROWS),A=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,T.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,T.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,g),a.pixelStorei(a.UNPACK_SKIP_ROWS,v),a.pixelStorei(a.UNPACK_SKIP_IMAGES,b);const R=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const n=o.get(e),i=o.get(t),r=o.get(n.renderTarget),s=o.get(i.renderTarget),c=r.framebuffers[n.cacheKey],u=s.framebuffers[i.cacheKey];l.bindFramebuffer(a.READ_FRAMEBUFFER,c),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,u);let h=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(h=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(g,v,p,m,y,x,p,m,h,a.NEAREST),l.bindFramebuffer(a.READ_FRAMEBUFFER,null),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else R?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(u,s,y,x,_,p,m,f,d,h,T.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(u,s,y,x,_,p,m,f,d,T.data):a.texSubImage3D(u,s,y,x,_,p,m,f,d,h,T):e.isDataTexture?a.texSubImage2D(u,s,y,x,p,m,d,h,T.data):e.isCompressedTexture?a.compressedTexSubImage2D(u,s,y,x,T.width,T.height,d,T.data):a.texSubImage2D(u,s,y,x,p,m,d,h,T);a.pixelStorei(a.UNPACK_ROW_LENGTH,S),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,w),a.pixelStorei(a.UNPACK_SKIP_PIXELS,M),a.pixelStorei(a.UNPACK_SKIP_ROWS,E),a.pixelStorei(a.UNPACK_SKIP_IMAGES,A),0===s&&t.generateMipmaps&&a.generateMipmap(u),l.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:i}=this,{state:r}=this.backend,{textureGPU:s}=this.backend.get(e),{x:a,y:o,z:l,w:c}=n,u=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,h=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(u){const n=0!==a||0!==o;let u,d;if(!0===e.isDepthTexture?(u=i.DEPTH_BUFFER_BIT,d=i.DEPTH_ATTACHMENT,t.stencil&&(u|=i.STENCIL_BUFFER_BIT)):(u=i.COLOR_BUFFER_BIT,d=i.COLOR_ATTACHMENT0),n){const e=this.backend.get(t.renderTarget),n=e.framebuffers[t.getCacheKey()],d=e.msaaFrameBuffer;r.bindFramebuffer(i.DRAW_FRAMEBUFFER,n),r.bindFramebuffer(i.READ_FRAMEBUFFER,d);const p=h-o-c;i.blitFramebuffer(a,p,a+l,p+c,a,p,a+l,p+c,u,i.NEAREST),r.bindFramebuffer(i.READ_FRAMEBUFFER,n),r.bindTexture(i.TEXTURE_2D,s),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,p,l,c),r.unbindTexture()}else{const e=i.createFramebuffer();r.bindFramebuffer(i.DRAW_FRAMEBUFFER,e),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,d,i.TEXTURE_2D,s,0),i.blitFramebuffer(0,0,l,c,0,0,l,c,u,i.NEAREST),i.deleteFramebuffer(e)}}else r.bindTexture(i.TEXTURE_2D,s),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,h-c-o,l,c),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,n,i=!1){const{gl:r}=this,s=t.renderTarget,{depthTexture:a,depthBuffer:o,stencilBuffer:l,width:c,height:u}=s;if(r.bindRenderbuffer(r.RENDERBUFFER,e),o&&!l){let t=r.DEPTH_COMPONENT24;if(!0===i){this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,s.samples,t,c,u)}else n>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(t=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,n,t,c,u)):r.renderbufferStorage(r.RENDERBUFFER,t,c,u);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else o&&l&&(n>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,n,r.DEPTH24_STENCIL8,c,u):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,c,u),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e));r.bindRenderbuffer(r.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,n,i,r,s){const{backend:a,gl:o}=this,{textureGPU:l,glFormat:c,glType:u}=this.backend.get(e),h=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,h);const d=e.isCubeTexture?o.TEXTURE_CUBE_MAP_POSITIVE_X+s:o.TEXTURE_2D;o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,d,l,0);const p=this._getTypedArrayType(u),m=i*r*this._getBytesPerTexel(u,c),f=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.bufferData(o.PIXEL_PACK_BUFFER,m,o.STREAM_READ),o.readPixels(t,n,i,r,c,u,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const g=new p(m/p.BYTES_PER_ELEMENT);return o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,g),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(h),g}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let i=0;return e===n.UNSIGNED_BYTE&&(i=1),e!==n.UNSIGNED_SHORT_4_4_4_4&&e!==n.UNSIGNED_SHORT_5_5_5_1&&e!==n.UNSIGNED_SHORT_5_6_5&&e!==n.UNSIGNED_SHORT&&e!==n.HALF_FLOAT||(i=2),e!==n.UNSIGNED_INT&&e!==n.FLOAT||(i=4),t===n.RGBA?4*i:t===n.RGB?3*i:t===n.ALPHA?i:void 0}}function kz(e){return e.isDataTexture?e.image.data:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas?e:e.data}class Vz{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class zz{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Gz={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class Hz{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:i,object:r,type:s,info:a,index:o}=this;0!==o?n.drawElements(i,t,s,e):n.drawArrays(i,e,t),a.update(r,t,1)}renderInstances(e,t,n){const{gl:i,mode:r,type:s,index:a,object:o,info:l}=this;0!==n&&(0!==a?i.drawElementsInstanced(r,t,s,e,n):i.drawArraysInstanced(r,e,t,n),l.update(o,t,n))}renderMultiDraw(e,t,n){const{extensions:i,mode:r,object:s,info:a}=this;if(0===n)return;const o=i.get("WEBGL_multi_draw");if(null===o)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{0!==this.index?o.multiDrawElementsWEBGL(r,t,0,this.type,e,0,n):o.multiDrawArraysWEBGL(r,e,0,t,0,n);let i=0;for(let e=0;e<n;e++)i+=t[e];a.update(s,i,1)}}renderMultiDrawInstances(e,t,n,i){const{extensions:r,mode:s,object:a,info:o}=this;if(0===n)return;const l=r.get("WEBGL_multi_draw");if(null===l)for(let c=0;c<n;c++)this.renderInstances(e[c],t[c],i[c]);else{0!==this.index?l.multiDrawElementsInstancedWEBGL(s,t,0,this.type,e,0,i,0,n):l.multiDrawArraysInstancedWEBGL(s,e,0,t,0,i,0,n);let r=0;for(let e=0;e<n;e++)r+=t[e]*i[e];o.update(a,r,1)}}}class Wz{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class jz extends Wz{constructor(e,t,n=2048){if(super(n),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext)return console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),void(this.trackTimestamp=!1);this.queries=[];for(let i=0;i<this.maxQueries;i++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return On(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(null==t)return;if(null!==this.activeQuery)return;const n=this.queries[t];if(n)try{"inactive"===this.queryStates.get(t)&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,n),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(i){console.error("Error in beginQuery:",i),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(null!=t&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(n){console.error("Error in endQuery:",n),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[n,i]of this.queryStates)if("ended"===i){const t=this.queries[n];e.push(this.resolveQuery(t))}if(0===e.length)return this.lastValue;const t=(await Promise.all(e)).reduce((e,t)=>e+t,0);return this.lastValue=t,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,t}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed)return void t(this.lastValue);let n,i=!1;const r=e=>{i||(i=!0,n&&(clearTimeout(n),n=null),t(e))},s=()=>{if(this.isDisposed)r(this.lastValue);else try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT))return void r(this.lastValue);if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE))return void(n=setTimeout(s,1));const i=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(i)/1e6)}catch(i){console.error("Error checking query:",i),t(this.lastValue)}};s()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Xz extends Ez{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,n={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},i=void 0!==t.context?t.context:e.domElement.getContext("webgl2",n);function r(t){t.preventDefault();const n={api:"WebGL",message:t.statusMessage||"Unknown reason",reason:null,originalEvent:t};e.onDeviceLost(n)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=i,this.extensions=new Vz(this),this.capabilities=new zz(this),this.attributeUtils=new Pz(this),this.textureUtils=new Bz(this),this.bufferRenderer=new Hz(this),this.state=new Lz(this),this.utils=new Iz(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return on}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){!0!==this.gl.getContextAttributes().xrCompatible&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,n=null){const i=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:i.RGBA8}),null!==n){const t=e.stencilBuffer?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:n,glInternalFormat:t}),!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!0===e._autoAllocateDepthBuffer&&!1===e.multiview&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new jz(this.gl,e,2048));const n=this.timestampQueryPool[e];null!==n.allocateQueriesForContext(t)&&n.beginQuery(t)}prepareTimestampBuffer(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e].endQuery(t)}getContext(){return this.gl}beginRender(e){const{state:t}=this,n=this.get(e);if(n.frameCalls=this.renderer.info.render.frameCalls,e.viewport)this.updateViewport(e);else{const{width:e,height:n}=this.getDrawingBufferSize();t.viewport(0,0,e,n)}if(e.scissor){const{x:n,y:i,width:r,height:s}=e.scissorValue;t.scissor(n,e.height-s-i,r,s)}this.initTimestampQuery(cn.RENDER,this.getTimestampUID(e)),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const i=e.occlusionQueryCount;i>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(i),n.occlusionQueryObjects=new Array(i),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,i=this.get(e),r=i.previousContext;n.resetVertexState();const s=e.occlusionQueryCount;s>0&&(s>i.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(null!==a)for(let o=0;o<a.length;o++){const e=a[o];e.generateMipmaps&&this.generateMipmaps(e)}if(this._currentContext=r,this._resolveRenderTarget(e),null!==r)if(this._setFramebuffer(r),r.viewport)this.updateViewport(r);else{const{width:e,height:t}=this.getDrawingBufferSize();n.viewport(0,0,e,t)}this.prepareTimestampBuffer(cn.RENDER,this.getTimestampUID(e))}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const e=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const s=()=>{let a=0;for(let t=0;t<n.length;t++){const s=n[t];null!==s&&(r.getQueryParameter(s,r.QUERY_RESULT_AVAILABLE)&&(0===r.getQueryParameter(s,r.QUERY_RESULT)&&e.add(i[t]),n[t]=null,r.deleteQuery(s),a++))}a<n.length?requestAnimationFrame(s):t.occluded=e};s()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:n,y:i,width:r,height:s}=e.viewportValue;t.viewport(n,e.height-s-i,r,s)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,n,i=null,r=!0,s=!0){const{gl:a,renderer:o}=this;if(null===i){i={textures:null,clearColorValue:this.getClearColor()}}let l=0;if(e&&(l|=a.COLOR_BUFFER_BIT),t&&(l|=a.DEPTH_BUFFER_BIT),n&&(l|=a.STENCIL_BUFFER_BIT),0!==l){let c;c=i.clearColorValue?i.clearColorValue:this.getClearColor();const u=o.getClearDepth(),h=o.getClearStencil();if(t&&this.state.setDepthMask(!0),null===i.textures)a.clearColor(c.r,c.g,c.b,c.a),a.clear(l);else{if(r&&this._setFramebuffer(i),e)for(let e=0;e<i.textures.length;e++)0===e?a.clearBufferfv(a.COLOR,e,[c.r,c.g,c.b,c.a]):a.clearBufferfv(a.COLOR,e,[0,0,0,1]);t&&n?a.clearBufferfi(a.DEPTH_STENCIL,0,u,h):t?a.clearBufferfv(a.DEPTH,0,[u]):n&&a.clearBufferiv(a.STENCIL,0,[h]),r&&s&&this._resolveRenderTarget(i)}}}beginCompute(e){const{state:t,gl:n}=this;this.get(e).frameCalls=this.renderer.info.compute.frameCalls,t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(cn.COMPUTE,this.getTimestampUID(e))}compute(e,t,n,i,r=null){const{state:s,gl:a}=this;!1===this.discard&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:l,attributes:c}=this.get(i),u=this._getVaoKey(c),h=this.vaoCache[u];void 0===h?this.vaoCache[u]=this._createVao(c):s.setVertexState(h),s.useProgram(o),this._bindUniforms(n);const d=this._getTransformFeedback(l);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,d),a.beginTransformFeedback(a.POINTS),r=null!==r?r:t.count,Array.isArray(r)&&(On("WebGLBackend.compute(): The count parameter must be a single number, not an array."),r=r[0]),c[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,r):a.drawArrays(a.POINTS,0,r),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let p=0;p<l.length;p++){const e=l[p];e.pbo&&this.has(e.pbo)&&this.textureUtils.copyBufferToTexture(e.transformBuffer,e.pbo),e.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(cn.COMPUTE,this.getTimestampUID(e)),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:n,material:i,context:r,hardwareClippingPlanes:s}=e,{programGPU:a}=this.get(n),{gl:o,state:l}=this,c=this.get(r),u=e.getDrawParameters();if(null===u)return;this._bindUniforms(e.getBindings());const h=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(i,h,s),l.useProgram(a);const d=e.getAttributes(),p=this.get(d);let m=p.vaoGPU;if(void 0===m){const e=this._getVaoKey(d);m=this.vaoCache[e],void 0===m&&(m=this._createVao(d),this.vaoCache[e]=m,p.vaoGPU=m)}const f=e.getIndex(),g=null!==f?this.get(f).bufferGPU:null;l.setVertexState(m,g);const v=c.lastOcclusionObject;if(v!==t&&void 0!==v){if(null!==v&&!0===v.occlusionTest&&(o.endQuery(o.ANY_SAMPLES_PASSED),c.occlusionQueryIndex++),!0===t.occlusionTest){const e=o.createQuery();o.beginQuery(o.ANY_SAMPLES_PASSED,e),c.occlusionQueries[c.occlusionQueryIndex]=e,c.occlusionQueryObjects[c.occlusionQueryIndex]=t}c.lastOcclusionObject=t}const b=this.bufferRenderer;t.isPoints?b.mode=o.POINTS:t.isLineSegments?b.mode=o.LINES:t.isLine?b.mode=o.LINE_STRIP:t.isLineLoop?b.mode=o.LINE_LOOP:!0===i.wireframe?(l.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),b.mode=o.LINES):b.mode=o.TRIANGLES;const{vertexCount:y,instanceCount:x}=u;let{firstVertex:_}=u;if(b.object=t,null!==f){_*=f.array.BYTES_PER_ELEMENT;const e=this.get(f);b.index=f.count,b.type=e.type}else b.index=0;const T=()=>{t.isBatchedMesh?null!==t._multiDrawInstances?(On("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),b.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?b.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):On("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):x>1?b.renderInstances(_,y,x):b.render(_,y)};if(!0===e.camera.isArrayCamera&&e.camera.cameras.length>0&&!1===e.camera.isMultiViewCamera){const n=this.get(e.camera),i=e.camera.cameras,r=e.getBindingGroup("cameraIndex").bindings[0];if(void 0===n.indexesGPU||n.indexesGPU.length!==i.length){const e=new Uint32Array([0,0,0,0]),t=[];for(let n=0,r=i.length;n<r;n++){const i=o.createBuffer();e[0]=n,o.bindBuffer(o.UNIFORM_BUFFER,i),o.bufferData(o.UNIFORM_BUFFER,e,o.STATIC_DRAW),t.push(i)}n.indexesGPU=t}const s=this.get(r),a=this.renderer.getPixelRatio(),c=this._currentContext.renderTarget,u=this._isRenderCameraDepthArray(this._currentContext),h=this._currentContext.activeCubeFace;if(u){const e=this.get(c.depthTexture);if(e.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){e.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:t}=c;for(let e=0,n=i.length;e<n;e++)this.renderer._activeCubeFace=e,this._currentContext.activeCubeFace=e,this._setFramebuffer(this._currentContext),this.clear(!1,!0,t,this._currentContext,!1,!1);this.renderer._activeCubeFace=h,this._currentContext.activeCubeFace=h}}for(let d=0,p=i.length;d<p;d++){const r=i[d];if(t.layers.test(r.layers)){u&&(this.renderer._activeCubeFace=d,this._currentContext.activeCubeFace=d,this._setFramebuffer(this._currentContext));const t=r.viewport;if(void 0!==t){const n=t.x*a,i=t.y*a,r=t.width*a,s=t.height*a;l.viewport(Math.floor(n),Math.floor(e.context.height-s-i),Math.floor(r),Math.floor(s))}l.bindBufferBase(o.UNIFORM_BUFFER,s.index,n.indexesGPU[d]),T()}this._currentContext.activeCubeFace=h,this.renderer._activeCubeFace=h}}else T()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,i,r,s){return this.textureUtils.copyTextureToBuffer(e,t,n,i,r,s)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new Sz(e,t)}createProgram(e){const t=this.gl,{stage:n,code:i}=e,r="fragment"===n?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,i),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const n=this.gl,i=e.pipeline,{fragmentProgram:r,vertexProgram:s}=i,a=n.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU;if(n.attachShader(a,o),n.attachShader(a,l),n.linkProgram(a),this.set(i,{programGPU:a,fragmentShader:o,vertexShader:l}),null!==t&&this.parallel){const r=new Promise(t=>{const r=this.parallel,s=()=>{n.getProgramParameter(a,r.COMPLETION_STATUS_KHR)?(this._completeCompile(e,i),t()):requestAnimationFrame(s)};s()});return void t.push(r)}this._completeCompile(e,i)}_handleSource(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),s=Math.min(t+6,n.length);for(let a=r;a<s;a++){const e=a+1;i.push(`${e===t?">":" "} ${e}: ${n[a]}`)}return i.join("\n")}_getShaderErrors(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=(e.getShaderInfoLog(t)||"").trim();if(i&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const i=parseInt(s[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+this._handleSource(e.getShaderSource(t),i)}return r}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const i=this.gl,r=(i.getProgramInfoLog(e)||"").trim();if(!1===i.getProgramParameter(e,i.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(i,e,n,t);else{const s=this._getShaderErrors(i,n,"vertex"),a=this._getShaderErrors(i,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(e,i.VALIDATE_STATUS)+"\n\nProgram Info Log: "+r+"\n"+s+"\n"+a)}else""!==r&&console.warn("THREE.WebGLProgram: Program Info Log:",r)}}_completeCompile(e,t){const{state:n,gl:i}=this,r=this.get(t),{programGPU:s,fragmentShader:a,vertexShader:o}=r;!1===i.getProgramParameter(s,i.LINK_STATUS)&&this._logProgramError(s,a,o),n.useProgram(s);const l=e.getBindings();this._setupBindings(l,s),this.set(t,{programGPU:s})}createComputePipeline(e,t){const{state:n,gl:i}=this,r={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(r);const{computeProgram:s}=e,a=i.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU,c=s.transforms,u=[],h=[];for(let f=0;f<c.length;f++){const e=c[f];u.push(e.varyingName),h.push(e.attributeNode)}i.attachShader(a,o),i.attachShader(a,l),i.transformFeedbackVaryings(a,u,i.SEPARATE_ATTRIBS),i.linkProgram(a),!1===i.getProgramParameter(a,i.LINK_STATUS)&&this._logProgramError(a,o,l),n.useProgram(a),this._setupBindings(t,a);const d=s.attributes,p=[],m=[];for(let f=0;f<d.length;f++){const e=d[f].node.attribute;p.push(e),this.has(e)||this.attributeUtils.createAttribute(e,i.ARRAY_BUFFER)}for(let f=0;f<h.length;f++){const e=h[f].attribute;this.has(e)||this.attributeUtils.createAttribute(e,i.ARRAY_BUFFER);const t=this.get(e);m.push(t)}this.set(e,{programGPU:a,transformBuffers:m,attributes:p})}createBindings(e,t){if(!1===this._knownBindings.has(t)){this._knownBindings.add(t);let e=0,n=0;for(const i of t){this.set(i,{textures:n,uniformBuffers:e});for(const t of i.bindings)t.isUniformBuffer&&e++,t.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let i=n.uniformBuffers,r=n.textures;for(const s of e.bindings){const e=this.get(s);if(s.isUniformsGroup||s.isUniformBuffer){const n=s.buffer;let{bufferGPU:r}=this.get(n);void 0===r?(r=t.createBuffer(),t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW),this.set(n,{bufferGPU:r})):(t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferSubData(t.UNIFORM_BUFFER,0,n)),e.index=i++,e.bufferGPU=r,this.set(s,e)}else if(s.isSampledTexture){const{textureGPU:t,glTextureType:n}=this.get(s.texture);e.index=r++,e.textureGPU=t,e.glTextureType=n,this.set(s,e)}}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,i=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,i,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(Gz).filter(t=>Gz[t]===e),n=this.extensions;for(let i=0;i<t.length;i++)if(n.has(t[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n=null,i=null,r=0,s=0){this.textureUtils.copyTextureToTexture(e,t,n,i,r,s)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let i=null;if(null!==e.textures){const r=e.renderTarget,s=this.get(r),{samples:a,depthBuffer:o,stencilBuffer:l}=r,c=!0===r.isWebGLCubeRenderTarget,u=!0===r.isRenderTarget3D,h=r.depth>1,d=!0===r.isXRRenderTarget,p=!0===d&&!0===r._hasExternalTextures;let m=s.msaaFrameBuffer,f=s.depthRenderbuffer;const g=this.extensions.get("WEBGL_multisampled_render_to_texture"),v=this.extensions.get("OVR_multiview2"),b=this._useMultisampledExtension(r),y=qI(e);let x;if(c?(s.cubeFramebuffers||(s.cubeFramebuffers={}),x=s.cubeFramebuffers[y]):d&&!1===p?x=this._xrFramebuffer:(s.framebuffers||(s.framebuffers={}),x=s.framebuffers[y]),void 0===x){x=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,x);const i=e.textures,o=[];if(c){s.cubeFramebuffers[y]=x;const{textureGPU:e}=this.get(i[0]),n=this.renderer._activeCubeFace,r=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,e,r)}else{s.framebuffers[y]=x;for(let n=0;n<i.length;n++){const s=i[n],o=this.get(s);o.renderTarget=e.renderTarget,o.cacheKey=y;const l=t.COLOR_ATTACHMENT0+n;if(r.multiview)v.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,l,o.textureGPU,0,a,0,2);else if(u||h){const e=this.renderer._activeCubeFace,n=this.renderer._activeMipmapLevel;t.framebufferTextureLayer(t.FRAMEBUFFER,l,o.textureGPU,n,e)}else if(b)g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,t.TEXTURE_2D,o.textureGPU,0,a);else{const e=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,l,t.TEXTURE_2D,o.textureGPU,e)}}}const d=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(!0===r._autoAllocateDepthBuffer){const n=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(n,e,0,b),s.xrDepthRenderbuffer=n,o.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,n),t.framebufferRenderbuffer(t.FRAMEBUFFER,d,t.RENDERBUFFER,n)}else if(null!==e.depthTexture){o.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const n=this.get(e.depthTexture);if(n.renderTarget=e.renderTarget,n.cacheKey=y,r.multiview)v.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,d,n.textureGPU,0,a,0,2);else if(p&&b)g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,d,t.TEXTURE_2D,n.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const e=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,d,n.textureGPU,0,e)}else t.framebufferTexture2D(t.FRAMEBUFFER,d,t.TEXTURE_2D,n.textureGPU,0)}s.depthInvalidationArray=o}else{if(this._isRenderCameraDepthArray(e)){n.bindFramebuffer(t.FRAMEBUFFER,x);const i=this.renderer._activeCubeFace,r=this.get(e.depthTexture),s=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,s,r.textureGPU,0,i)}if((d||b||r.multiview)&&!0!==r._isOpaqueFramebuffer){n.bindFramebuffer(t.FRAMEBUFFER,x);const i=this.get(e.textures[0]);r.multiview?v.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,i.textureGPU,0,a,0,2):b?g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i.textureGPU,0);const o=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(!0===r._autoAllocateDepthBuffer){const e=s.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,e),t.framebufferRenderbuffer(t.FRAMEBUFFER,o,t.RENDERBUFFER,e)}else{const n=this.get(e.depthTexture);r.multiview?v.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,o,n.textureGPU,0,a,0,2):b?g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,o,t.TEXTURE_2D,n.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,n.textureGPU,0)}}}if(a>0&&!1===b&&!r.multiview){if(void 0===m){const i=[];m=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,m);const r=[],c=e.textures;for(let n=0;n<c.length;n++){r[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,r[n]),i.push(t.COLOR_ATTACHMENT0+n);const s=e.textures[n],o=this.get(s);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,o.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,r[n])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),s.msaaFrameBuffer=m,s.msaaRenderbuffers=r,o&&void 0===f){f=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(f,e,a),s.depthRenderbuffer=f;const n=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;i.push(n)}s.invalidationArray=i}i=s.msaaFrameBuffer}else i=x;n.drawBuffers(e,x)}n.bindFramebuffer(t.FRAMEBUFFER,i)}_getVaoKey(e){let t="";for(let n=0;n<e.length;n++){t+=":"+this.get(e[n]).id}return t}_createVao(e){const{gl:t}=this,n=t.createVertexArray();t.bindVertexArray(n);for(let i=0;i<e.length;i++){const n=e[i],r=this.get(n);let s,a;t.bindBuffer(t.ARRAY_BUFFER,r.bufferGPU),t.enableVertexAttribArray(i),!0===n.isInterleavedBufferAttribute?(s=n.data.stride*r.bytesPerElement,a=n.offset*r.bytesPerElement):(s=0,a=0),r.isInteger?t.vertexAttribIPointer(i,n.itemSize,r.type,s,a):t.vertexAttribPointer(i,n.itemSize,r.type,n.normalized,s,a),n.isInstancedBufferAttribute&&!n.isInterleavedBufferAttribute?t.vertexAttribDivisor(i,n.meshPerAttribute):n.isInterleavedBufferAttribute&&n.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(i,n.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),n}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let n=this.transformFeedbackCache[t];if(void 0!==n)return n;const{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let r=0;r<e.length;r++){const t=e[r];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,r,t.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const i of e)for(const e of i.bindings){const i=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const r=n.getUniformBlockIndex(t,e.name);n.uniformBlockBinding(t,r,i)}else if(e.isSampledTexture){const r=n.getUniformLocation(t,e.name);n.uniform1i(r,i)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const i of e)for(const e of i.bindings){const i=this.get(e),r=i.index;e.isUniformsGroup||e.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,r,i.bufferGPU):e.isSampledTexture&&n.bindTexture(i.glTextureType,i.textureGPU,t.TEXTURE0+r)}}_resolveRenderTarget(e){const{gl:t,state:n}=this,i=e.renderTarget;if(null!==e.textures&&i){const r=this.get(i);if(i.samples>0&&!1===this._useMultisampledExtension(i)){const s=r.framebuffers[e.getCacheKey()];let a=t.COLOR_BUFFER_BIT;i.resolveDepthBuffer&&(i.depthBuffer&&(a|=t.DEPTH_BUFFER_BIT),i.stencilBuffer&&i.resolveStencilBuffer&&(a|=t.STENCIL_BUFFER_BIT));const o=r.msaaFrameBuffer,l=r.msaaRenderbuffers,c=e.textures,u=c.length>1;if(n.bindFramebuffer(t.READ_FRAMEBUFFER,o),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,s),u)for(let e=0;e<c.length;e++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);for(let n=0;n<c.length;n++){if(u){const{textureGPU:e}=this.get(c[n]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,l[n]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}if(e.scissor){const{x:n,y:i,width:r,height:s}=e.scissorValue,o=e.height-s-i;t.blitFramebuffer(n,o,n+r,o+s,n,o,n+r,o+s,a,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,a,t.NEAREST)}if(u)for(let e=0;e<c.length;e++){const{textureGPU:n}=this.get(c[e]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,l[e]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,n,0)}!0===this._supportsInvalidateFramebuffer&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}else if(!1===i.resolveDepthBuffer&&r.framebuffers){const i=r.framebuffers[e.getCacheKey()];n.bindFramebuffer(t.DRAW_FRAMEBUFFER,i),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,r.depthInvalidationArray)}}}_useMultisampledExtension(e){return!0===e.multiview||e.samples>0&&!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!1!==e._autoAllocateDepthBuffer}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const qz="point-list",$z="line-list",Yz="line-strip",Kz="triangle-list",Qz="triangle-strip",Zz="never",Jz="less",eG="equal",tG="less-equal",nG="greater",iG="not-equal",rG="greater-equal",sG="always",aG="store",oG="load",lG="clear",cG="ccw",uG="cw",hG="none",dG="back",pG="uint16",mG="uint32",fG="r8unorm",gG="r8snorm",vG="r8uint",bG="r8sint",yG="r16uint",xG="r16sint",_G="r16float",TG="rg8unorm",SG="rg8snorm",wG="rg8uint",MG="rg8sint",EG="r32uint",AG="r32sint",RG="r32float",CG="rg16uint",NG="rg16sint",PG="rg16float",LG="rgba8unorm",IG="rgba8unorm-srgb",DG="rgba8snorm",FG="rgba8uint",UG="rgba8sint",OG="bgra8unorm",BG="bgra8unorm-srgb",kG="rgb9e5ufloat",VG="rgb10a2unorm",zG="rg11b10ufloat",GG="rg32uint",HG="rg32sint",WG="rg32float",jG="rgba16uint",XG="rgba16sint",qG="rgba16float",$G="rgba32uint",YG="rgba32sint",KG="rgba32float",QG="depth16unorm",ZG="depth24plus",JG="depth24plus-stencil8",eH="depth32float",tH="depth32float-stencil8",nH="bc1-rgba-unorm",iH="bc1-rgba-unorm-srgb",rH="bc2-rgba-unorm",sH="bc2-rgba-unorm-srgb",aH="bc3-rgba-unorm",oH="bc3-rgba-unorm-srgb",lH="bc4-r-unorm",cH="bc4-r-snorm",uH="bc5-rg-unorm",hH="bc5-rg-snorm",dH="bc6h-rgb-ufloat",pH="bc6h-rgb-float",mH="bc7-rgba-unorm",fH="bc7-rgba-unorm-srgb",gH="etc2-rgb8unorm",vH="etc2-rgb8unorm-srgb",bH="etc2-rgb8a1unorm",yH="etc2-rgb8a1unorm-srgb",xH="etc2-rgba8unorm",_H="etc2-rgba8unorm-srgb",TH="eac-r11unorm",SH="eac-r11snorm",wH="eac-rg11unorm",MH="eac-rg11snorm",EH="astc-4x4-unorm",AH="astc-4x4-unorm-srgb",RH="astc-5x4-unorm",CH="astc-5x4-unorm-srgb",NH="astc-5x5-unorm",PH="astc-5x5-unorm-srgb",LH="astc-6x5-unorm",IH="astc-6x5-unorm-srgb",DH="astc-6x6-unorm",FH="astc-6x6-unorm-srgb",UH="astc-8x5-unorm",OH="astc-8x5-unorm-srgb",BH="astc-8x6-unorm",kH="astc-8x6-unorm-srgb",VH="astc-8x8-unorm",zH="astc-8x8-unorm-srgb",GH="astc-10x5-unorm",HH="astc-10x5-unorm-srgb",WH="astc-10x6-unorm",jH="astc-10x6-unorm-srgb",XH="astc-10x8-unorm",qH="astc-10x8-unorm-srgb",$H="astc-10x10-unorm",YH="astc-10x10-unorm-srgb",KH="astc-12x10-unorm",QH="astc-12x10-unorm-srgb",ZH="astc-12x12-unorm",JH="astc-12x12-unorm-srgb",eW="clamp-to-edge",tW="repeat",nW="mirror-repeat",iW="linear",rW="nearest",sW="zero",aW="one",oW="src",lW="one-minus-src",cW="src-alpha",uW="one-minus-src-alpha",hW="dst",dW="one-minus-dst",pW="dst-alpha",mW="one-minus-dst-alpha",fW="src-alpha-saturated",gW="constant",vW="one-minus-constant",bW="add",yW="subtract",xW="reverse-subtract",_W="min",TW="max",SW=0,wW=15,MW="keep",EW="zero",AW="replace",RW="invert",CW="increment-clamp",NW="decrement-clamp",PW="increment-wrap",LW="decrement-wrap",IW="storage",DW="read-only-storage",FW="write-only",UW="read-only",OW="read-write",BW="non-filtering",kW="comparison",VW="float",zW="unfilterable-float",GW="depth",HW="sint",WW="uint",jW="2d",XW="3d",qW="2d",$W="2d-array",YW="cube",KW="3d",QW="all",ZW="vertex",JW="instance",ej={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class tj extends hz{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}}class nj extends rz{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let ij=0;class rj extends nj{constructor(e,t){super("StorageBuffer_"+ij++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Gx.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class sj extends _I{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:iW}),this.flipYSampler=e.createSampler({minFilter:rW}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Qz,stripIndexFormat:mG},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Qz,stripIndexFormat:mG},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const i=t.format,{width:r,height:s}=t.size,a=this.getTransferPipeline(i),o=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:r,height:s,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),c=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:qW,baseArrayLayer:n}),u=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:qW,baseArrayLayer:0}),h=this.device.createCommandEncoder({}),d=(e,t,n)=>{const i=e.getBindGroupLayout(0),r=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),s=h.beginRenderPass({colorAttachments:[{view:n,loadOp:lG,storeOp:aG,clearValue:[0,0,0,0]}]});s.setPipeline(e),s.setBindGroup(0,r),s.draw(4,1,0,0),s.end()};d(a,c,u),d(o,u,c),this.device.queue.submit([h.finish()]),l.destroy()}generateMipmaps(e,t,n=0){const i=this.get(e);void 0===i.useCount&&(i.useCount=0,i.layers=[]);const r=i.layers[n]||this._mipmapCreateBundles(e,t,n),s=this.device.createCommandEncoder({});this._mipmapRunBundles(s,r),this.device.queue.submit([s.finish()]),0!==i.useCount&&(i.layers[n]=r),i.useCount++}_mipmapCreateBundles(e,t,n){const i=this.getTransferPipeline(t.format),r=i.getBindGroupLayout(0);let s=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:qW,baseArrayLayer:n});const a=[];for(let o=1;o<t.mipLevelCount;o++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:s}]}),c=e.createView({baseMipLevel:o,mipLevelCount:1,dimension:qW,baseArrayLayer:n}),u={colorAttachments:[{view:c,loadOp:lG,storeOp:aG,clearValue:[0,0,0,0]}]},h=this.device.createRenderBundleEncoder({colorFormats:[t.format]});h.setPipeline(i),h.setBindGroup(0,l),h.draw(4,1,0,0),a.push({renderBundles:[h.finish()],passDescriptor:u}),s=c}return a}_mipmapRunBundles(e,t){const n=t.length;for(let i=0;i<n;i++){const n=t[i],r=e.beginRenderPass(n.passDescriptor);r.executeBundles(n.renderBundles),r.end()}}}const aj={[Yt]:"never",[Kt]:"less",[Qt]:"equal",[Zt]:"less-equal",[Jt]:"greater",[tn]:"greater-equal",[nn]:"always",[en]:"not-equal"},oj=[0,1,3,2,4,5];class lj{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Lo,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,n=t.device,i=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===iW&&r.minFilter===iW&&r.mipmapFilter===iW&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&null!==e.compareFunction&&(r.compare=aj[e.compareFunction]),i.sampler=n.createSampler(r)}createDefaultTexture(e){let t;const n=cj(e);t=e.isCubeTexture?this._getDefaultCubeTextureGPU(n):this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,i=n.get(e);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");if(e.isExternalTexture)return i.texture=e.sourceTexture,void(i.initialized=!0);void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:r,height:s,depth:a,levels:o}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),c=e.internalFormat||t.format||cj(e,n.device);i.format=c;const{samples:u,primarySamples:h,isMSAA:d}=n.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(p|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&c!==kG&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const m={label:e.name,size:{width:r,height:s,depthOrArrayLayers:a},mipLevelCount:o,sampleCount:h,dimension:l,format:c,usage:p};if(void 0===c)return console.warn("WebGPURenderer: Texture format not supported."),void this.createDefaultTexture(e);if(e.isCubeTexture&&(m.textureBindingViewDimension=YW),i.texture=n.device.createTexture(m),d){const e=Object.assign({},m);e.label=e.label+"-msaa",e.sampleCount=u,e.mipLevelCount=1,i.msaaTexture=n.device.createTexture(e)}i.initialized=!0,i.textureDescriptorGPU=m}destroyTexture(e){const t=this.backend,n=t.get(e);void 0!==n.texture&&n.texture.destroy(),void 0!==n.msaaTexture&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{const n=e.image.depth||1;for(let e=0;e<n;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const n=this.backend,{width:i,height:r}=n.getDrawingBufferSize(),s=this.depthTexture,a=n.get(s).texture;let o,l;if(t?(o=Ie,l=Ee):e&&(o=Le,l=_e),void 0!==a){if(s.image.width===i&&s.image.height===r&&s.format===o&&s.type===l)return a;this.destroyTexture(s)}return s.name="depthBuffer",s.format=o,s.type=l,s.image.width=i,s.image.height=r,this.createTexture(s,{width:i,height:r}),n.get(s).texture}updateTexture(e,t){const n=this.backend.get(e),i=e.mipmaps,{textureDescriptorGPU:r}=n;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture)if(i.length>0)for(let t=0,s=i.length;t<s;t++){const s=i[t];this._copyBufferToTexture(s,n.texture,r,0,e.flipY,0,t)}else this._copyBufferToTexture(t.image,n.texture,r,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let i=0;i<t.image.depth;i++)this._copyBufferToTexture(t.image,n.texture,r,i,e.flipY,i);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(e,n.texture,r);else if(i.length>0)for(let t=0,s=i.length;t<s;t++){const s=i[t];this._copyImageToTexture(s,n.texture,r,0,e.flipY,e.premultiplyAlpha,t)}else this._copyImageToTexture(t.image,n.texture,r,0,e.flipY,e.premultiplyAlpha);n.version=e.version}}async copyTextureToBuffer(e,t,n,i,r,s){const a=this.backend.device,o=this.backend.get(e),l=o.texture,c=o.textureDescriptorGPU.format,u=this._getBytesPerTexel(c);let h=i*u;h=256*Math.ceil(h/256);const d=a.createBuffer({size:(r-1)*h+i*u,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:s}},{buffer:d,bytesPerRow:h},{width:i,height:r});const m=this._getTypedArrayType(c);a.queue.submit([p.finish()]),await d.mapAsync(GPUMapMode.READ);return new m(d.getMappedRange())}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const n=new Qn;n.minFilter=ce,n.magFilter=ce,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const n=new As;n.minFilter=ce,n.magFilter=ce,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,n){const i=e.images,r=e.mipmaps;for(let s=0;s<6;s++){const a=i[s],o=!0===e.flipY?oj[s]:s;a.isDataTexture?this._copyBufferToTexture(a.image,t,n,o,e.flipY):this._copyImageToTexture(a,t,n,o,e.flipY,e.premultiplyAlpha);for(let i=0;i<r.length;i++){const a=r[i].images[s];a.isDataTexture?this._copyBufferToTexture(a.image,t,n,o,e.flipY,0,i+1):this._copyImageToTexture(a,t,n,o,e.flipY,e.premultiplyAlpha,i+1)}}}_copyImageToTexture(e,t,n,i,r,s,a=0){const o=this.backend.device,l=a>0?e.width:n.size.width,c=a>0?e.height:n.size.height;o.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:a,origin:{x:0,y:0,z:i},premultipliedAlpha:s},{width:l,height:c,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new sj(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,i,r,s=0,a=0){const o=this.backend.device,l=e.data,c=this._getBytesPerTexel(n.format),u=e.width*c;o.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:i}},l,{offset:e.width*e.height*c*s,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===r&&this._flipY(t,n,i)}_copyCompressedBufferToTexture(e,t,n){const i=this.backend.device,r=this._getBlockData(n.format),s=n.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const o=e[a],l=o.width,c=o.height,u=s?n.size.depthOrArrayLayers:1,h=Math.ceil(l/r.width)*r.byteLength,d=h*Math.ceil(c/r.height);for(let e=0;e<u;e++)i.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:e}},o.data,{offset:e*d,bytesPerRow:h,rowsPerImage:Math.ceil(c/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(c/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===nH||e===iH?{byteLength:8,width:4,height:4}:e===rH||e===sH||e===aH||e===oH?{byteLength:16,width:4,height:4}:e===lH||e===cH?{byteLength:8,width:4,height:4}:e===uH||e===hH||e===dH||e===pH||e===mH||e===fH?{byteLength:16,width:4,height:4}:e===gH||e===vH||e===bH||e===yH?{byteLength:8,width:4,height:4}:e===xH||e===_H?{byteLength:16,width:4,height:4}:e===TH||e===SH?{byteLength:8,width:4,height:4}:e===wH||e===MH||e===EH||e===AH?{byteLength:16,width:4,height:4}:e===RH||e===CH?{byteLength:16,width:5,height:4}:e===NH||e===PH?{byteLength:16,width:5,height:5}:e===LH||e===IH?{byteLength:16,width:6,height:5}:e===DH||e===FH?{byteLength:16,width:6,height:6}:e===UH||e===OH?{byteLength:16,width:8,height:5}:e===BH||e===kH?{byteLength:16,width:8,height:6}:e===VH||e===zH?{byteLength:16,width:8,height:8}:e===GH||e===HH?{byteLength:16,width:10,height:5}:e===WH||e===jH?{byteLength:16,width:10,height:6}:e===XH||e===qH?{byteLength:16,width:10,height:8}:e===$H||e===YH?{byteLength:16,width:10,height:10}:e===KH||e===QH?{byteLength:16,width:12,height:10}:e===ZH||e===JH?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=eW;return e===ae?t=tW:e===le&&(t=nW),t}_convertFilterMode(e){let t=iW;return e!==ce&&e!==ue&&e!==he||(t=rW),t}_getBytesPerTexel(e){return e===fG||e===gG||e===vG||e===bG?1:e===yG||e===xG||e===_G||e===TG||e===SG||e===wG||e===MG?2:e===EG||e===AG||e===RG||e===CG||e===NG||e===PG||e===LG||e===IG||e===DG||e===FG||e===UG||e===OG||e===BG||e===kG||e===VG||e===zG||e===eH||e===ZG||e===JG||e===tH?4:e===GG||e===HG||e===WG||e===jG||e===XG||e===qG?8:e===$G||e===YG||e===KG?16:void 0}_getTypedArrayType(e){return e===vG?Uint8Array:e===bG?Int8Array:e===fG?Uint8Array:e===gG?Int8Array:e===wG?Uint8Array:e===MG?Int8Array:e===TG?Uint8Array:e===SG?Int8Array:e===FG?Uint8Array:e===UG?Int8Array:e===LG||e===IG?Uint8Array:e===DG?Int8Array:e===yG?Uint16Array:e===xG?Int16Array:e===CG?Uint16Array:e===NG?Int16Array:e===jG?Uint16Array:e===XG?Int16Array:e===_G||e===PG||e===qG?Uint16Array:e===EG?Uint32Array:e===AG?Int32Array:e===RG?Float32Array:e===GG?Uint32Array:e===HG?Int32Array:e===WG?Float32Array:e===$G?Uint32Array:e===YG?Int32Array:e===KG?Float32Array:e===OG||e===BG?Uint8Array:e===VG||e===kG||e===zG?Uint32Array:e===eH?Float32Array:e===ZG||e===JG?Uint32Array:e===tH?Float32Array:void 0}_getDimension(e){let t;return t=e.is3DTexture||e.isData3DTexture?XW:jW,t}}function cj(e,t=null){const n=e.format,i=e.type,r=e.colorSpace,s=zn.getTransfer(r);let a;if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(n){case Ve:case ze:a=s===kt?iH:nH;break;case Ge:a=s===kt?sH:rH;break;case He:a=s===kt?oH:aH;break;case mt:a=lH;break;case ft:a=cH;break;case gt:a=uH;break;case vt:a=hH;break;case ht:a=s===kt?fH:mH;break;case Ye:case $e:a=s===kt?vH:gH;break;case Ke:a=s===kt?_H:xH;break;case Qe:a=s===kt?AH:EH;break;case Ze:a=s===kt?CH:RH;break;case Je:a=s===kt?PH:NH;break;case et:a=s===kt?IH:LH;break;case tt:a=s===kt?FH:DH;break;case nt:a=s===kt?OH:UH;break;case it:a=s===kt?kH:BH;break;case rt:a=s===kt?zH:VH;break;case st:a=s===kt?HH:GH;break;case at:a=s===kt?jH:WH;break;case ot:a=s===kt?qH:XH;break;case lt:a=s===kt?YH:$H;break;case ct:a=s===kt?QH:KH;break;case ut:a=s===kt?JH:ZH;break;case Pe:a=s===kt?IG:LG;break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}else switch(n){case Pe:switch(i){case ve:a=DG;break;case be:a=XG;break;case ye:a=jG;break;case _e:a=$G;break;case xe:a=YG;break;case ge:a=s===kt?IG:LG;break;case Se:a=qG;break;case Te:a=KG;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case Ne:switch(i){case Ae:a=kG;break;case Re:a=zG;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case De:switch(i){case ve:a=gG;break;case be:a=xG;break;case ye:a=yG;break;case _e:a=EG;break;case xe:a=AG;break;case ge:a=fG;break;case Se:a=_G;break;case Te:a=RG;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case Ue:switch(i){case ve:a=SG;break;case be:a=NG;break;case ye:a=CG;break;case _e:a=GG;break;case xe:a=HG;break;case ge:a=TG;break;case Se:a=PG;break;case Te:a=WG;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case Le:switch(i){case ye:a=QG;break;case _e:a=ZG;break;case Te:a=eH;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case Ie:switch(i){case Ee:a=JG;break;case Te:t&&!1===t.features.has(ej.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),a=tH;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case Fe:switch(i){case xe:a=AG;break;case _e:a=EG;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case Oe:switch(i){case xe:a=HG;break;case _e:a=GG;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case ke:switch(i){case xe:a=YG;break;case _e:a=$G;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",n)}return a}const uj=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,hj=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,dj={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class pj extends xV{constructor(e){const{type:t,inputs:n,name:i,inputsCode:r,blockCode:s,outputType:a}=(e=>{const t=(e=e.trim()).match(uj);if(null!==t&&4===t.length){const n=t[2],i=[];let r=null;for(;null!==(r=hj.exec(n));)i.push({name:r[1],type:r[2]});const s=[];for(let e=0;e<i.length;e++){const{name:t,type:n}=i[e];let r=n;r.startsWith("ptr")?r="pointer":(r.startsWith("texture")&&(r=n.split("<")[0]),r=dj[r]),s.push(new aV(r,t))}const a=e.substring(t[0].length),o=t[3]||"void",l=void 0!==t[1]?t[1]:"";return{type:dj[o]||o,inputs:s,name:l,inputsCode:n,blockCode:a,outputType:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,n,i),this.inputsCode=r,this.blockCode=s,this.outputType=a}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class mj extends yV{parseFunction(e){return new pj(e)}}const fj="undefined"!=typeof self?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},gj={[Gx.READ_ONLY]:"read",[Gx.WRITE_ONLY]:"write",[Gx.READ_WRITE]:"read_write"},vj={[ae]:"repeat",[oe]:"clamp",[le]:"mirror"},bj={vertex:fj?fj.VERTEX:1,fragment:fj?fj.FRAGMENT:2,compute:fj?fj.COMPUTE:4},yj={instance:!0,swizzleAssign:!1,storageBuffer:!0},xj={"^^":"tsl_xor"},_j={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Tj={},Sj={tsl_xor:new KF("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new KF("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new KF("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new KF("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new KF("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new KF("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new KF("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new KF("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new KF("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new KF("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new KF("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new KF("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new KF("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {\n\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},wj={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};let Mj="";!0!==("undefined"!=typeof navigator&&/Firefox|Deno/g.test(navigator.userAgent))&&(Mj+="diagnostic( off, derivative_uniformity );\n");class Ej extends rV{constructor(e,t){super(e,t,new mj),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,n,i,r,s=this.shaderStage){return"fragment"===s?i?r?`textureSample( ${t}, ${t}_sampler, ${n}, ${i}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${n}, ${i} )`:r?`textureSample( ${t}, ${t}_sampler, ${n}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.generateTextureSampleLevel(e,t,n,"0",i)}generateTextureSampleLevel(e,t,n,i,r,s){return!1===this.isUnfilterable(e)?s?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i}, ${s} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,s,i):this.generateTextureLod(e,t,n,r,s,i)}generateWrapFunction(e){const t=`tsl_coord_${vj[e.wrapS]}S_${vj[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let n=Tj[t];if(void 0===n){const i=[],r=e.isData3DTexture?"vec3f":"vec2f";let s=`fn ${t}( coord : ${r} ) -> ${r} {\n\n\treturn ${r}(\n`;const a=(e,t)=>{e===ae?(i.push(Sj.repeatWrapping_float),s+=`\t\ttsl_repeatWrapping_float( coord.${t} )`):e===oe?(i.push(Sj.clampWrapping_float),s+=`\t\ttsl_clampWrapping_float( coord.${t} )`):e===le?(i.push(Sj.mirrorWrapping_float),s+=`\t\ttsl_mirrorWrapping_float( coord.${t} )`):(s+=`\t\tcoord.${t}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${e}" for vertex shader.`))};a(e.wrapS,"x"),s+=",\n",a(e.wrapT,"y"),e.isData3DTexture&&(s+=",\n",a(e.wrapR,"z")),s+="\n\t);\n\n}\n",Tj[t]=n=new KF(s,i)}return n.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,n){const i=this.getDataFromNode(e,this.shaderStage,this.globalCache);void 0===i.dimensionsSnippet&&(i.dimensionsSnippet={});let r=i.dimensionsSnippet[n];if(void 0===i.dimensionsSnippet[n]){let s,a;const{primarySamples:o}=this.renderer.backend.utils.getTextureSampleData(e),l=o>1;a=e.isData3DTexture?"vec3<u32>":"vec2<u32>",s=l||e.isStorageTexture?t:`${t}${n?`, u32( ${n} )`:""}`,r=new oM(new jM(`textureDimensions( ${s} )`,a)),i.dimensionsSnippet[n]=r,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(i.arrayLayerCount=new oM(new jM(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(i.cubeFaceCount=new oM(new jM("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,n,i,r="0u"){this._include("biquadraticTexture");const s=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r);return i&&(n=`${n} + vec2<f32>(${i}) / ${a}`),`tsl_biquadraticTexture( ${t}, ${s}( ${n} ), ${a}, u32( ${r} ) )`}generateTextureLod(e,t,n,i,r,s="0u"){const a=this.generateWrapFunction(e),o=this.generateTextureDimension(e,t,s),l=e.isData3DTexture?"vec3":"vec2";r&&(n=`${n} + ${l}<f32>(${r}) / ${l}<f32>( ${o} )`);const c=`${l}<u32>( ${a}( ${n} ) * ${l}<f32>( ${o} ) )`;return this.generateTextureLoad(e,t,c,i,null,s)}generateTextureLoad(e,t,n,i,r,s="0u"){let a;return r&&(n=`${n} + ${r}`),i?a=`textureLoad( ${t}, ${n}, ${i}, u32( ${s} ) )`:(a=`textureLoad( ${t}, ${n}, u32( ${s} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(a+=".x")),a}generateTextureStore(e,t,n,i,r){let s;return s=i?`textureStore( ${t}, ${n}, ${i}, ${r} )`:`textureStore( ${t}, ${n}, ${r} )`,s}isSampleCompare(e){return!0===e.isDepthTexture&&null!==e.compareFunction}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===Te||!1===this.isSampleCompare(e)&&e.minFilter===ce&&e.magFilter===ce||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,n,i,r,s=this.shaderStage){let a=null;return a=this.isUnfilterable(e)?this.generateTextureLod(e,t,n,i,r,"0",s):this._generateTextureSample(e,t,n,i,r,s),a}generateTextureGrad(e,t,n,i,r,s,a=this.shaderStage){if("fragment"===a)return s?`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]}, ${s} )`:`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${a} shader.`)}generateTextureCompare(e,t,n,i,r,s,a=this.shaderStage){if("fragment"===a)return!0===e.isDepthTexture&&!0===e.isArrayTexture?s?`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${r}, ${i}, ${s} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${r}, ${i} )`:s?`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i}, ${s} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}generateTextureLevel(e,t,n,i,r,s){return!1===this.isUnfilterable(e)?s?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i}, ${s} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,s,i):this.generateTextureLod(e,t,n,r,s,i)}generateTextureBias(e,t,n,i,r,s,a=this.shaderStage){if("fragment"===a)return s?`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i}, ${s} )`:`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${a} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,n=e.type;return"texture"===n||"cubeTexture"===n||"storageTexture"===n||"texture3D"===n?t:"buffer"===n||"storageBuffer"===n||"indirectStorageBuffer"===n?this.isCustomStruct(e)?t:t+".value":e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=xj[e];return void 0!==t?(this._include(t),t):null}getNodeAccess(e,t){return"compute"!==t?!0===e.isAtomic?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),Gx.READ_WRITE):Gx.READ_ONLY:e.access}getStorageAccess(e,t){return gj[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,i=null){const r=super.getUniformFromNode(e,t,n,i),s=this.getDataFromNode(e,n,this.globalCache);if(void 0===s.uniformGPU){let a;const o=e.groupNode,l=o.name,c=this.getBindGroupArray(l,n);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let i=null;const s=this.getNodeAccess(e,n);if("texture"===t||"storageTexture"===t?i=!0===e.value.is3DTexture?new gz(r.name,r.node,o,s):new mz(r.name,r.node,o,s):"cubeTexture"===t?i=new fz(r.name,r.node,o,s):"texture3D"===t&&(i=new gz(r.name,r.node,o,s)),i.store=!0===e.isStorageTextureNode,i.setVisibility(bj[n]),!1===this.isUnfilterable(e.value)&&!1===i.store){const e=new tj(`${r.name}_sampler`,r.node,o);e.setVisibility(bj[n]),c.push(e,i),a=[e,i]}else c.push(i),a=[i]}else if("buffer"===t||"storageBuffer"===t||"indirectStorageBuffer"===t){const s=new("buffer"===t?oz:rj)(e,o);s.setVisibility(bj[n]),c.push(s),a=s,r.name=i||"NodeBuffer_"+r.id}else{const e=this.uniformGroups[n]||(this.uniformGroups[n]={});let i=e[l];void 0===i&&(i=new uz(l,o),i.setVisibility(bj[n]),e[l]=i,c.push(i)),a=this.getNodeUniform(r,t),i.addUniform(a)}s.uniformGPU=a}return r}getBuiltin(e,t,n,i=this.shaderStage){const r=this.builtins[i]||(this.builtins[i]=new Map);return!1===r.has(e)&&r.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return void 0!==this.builtins[t]&&this.builtins[t].has(e)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const s of t.inputs)i.push(s.name+" : "+this.getType(s.type));let r=`fn ${t.name}( ${i.join(", ")} ) -> ${this.getType(t.type)} {\n${n.vars}\n${n.code}\n`;return n.result&&(r+=`\treturn ${n.result};\n`),r+="\n}\n",r}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(void 0!==n)for(const i of n)t.push(`enable ${i};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],n=this.builtins[e];if(void 0!==n)for(const{name:i,property:r,type:s}of n.values())t.push(`@builtin( ${i} ) ${r} : ${s}`);return t.join(",\n\t")}getScopedArray(e,t,n,i){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:i}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:n,scope:i,bufferType:r,bufferCount:s}of this.scopedArrays.values()){const e=this.getType(r);t.push(`var<${i}> ${n}: array< ${e}, ${s} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const n=this.getAttributesArray();for(let i=0,r=n.length;i<r;i++){const e=n[i],r=e.name,s=this.getType(e.type);t.push(`@location( ${i} ) ${r} : ${s}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[];for(const n of e.members){const i=e.output?"@location( "+n.index+" ) ":"";let r=this.getType(n.type);n.atomic&&(r="atomic< "+r+" >"),t.push(`\t${i+n.name} : ${r}`)}return e.output&&t.push(`\t${this.getBuiltins("output")}`),t.join(",\n")}getStructs(e){let t="";const n=this.structs[e];if(n.length>0){const e=[];for(const t of n){let n=`struct ${t.name} {\n`;n+=this.getStructMembers(t),n+="\n};",e.push(n)}t="\n"+e.join("\n\n")+"\n"}return t}getVar(e,t,n=null){let i=`var ${t} : `;return i+=null!==n?this.generateArrayDeclaration(e,n):this.getType(e),i}getVars(e){const t=[],n=this.vars[e];if(void 0!==n)for(const i of n)t.push(`\t${this.getVar(i.type,i.name,i.count)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const n=this.varyings,i=this.vars[e];for(let r=0;r<n.length;r++){const s=n[r];if(s.needsInterpolation){let e=`@location( ${r} )`;if(s.interpolationType){const t=null!==s.interpolationSampling?`, ${s.interpolationSampling} )`:" )";e+=` @interpolate( ${s.interpolationType}${t}`}else/^(int|uint|ivec|uvec)/.test(s.type)&&(e+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${e} ${s.name} : ${this.getType(s.type)}`)}else"vertex"===e&&!1===i.includes(s)&&i.push(s)}}const n=this.getBuiltins(e);n&&t.push(n);const i=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+i):i}isCustomStruct(e){const t=e.value,n=e.node,i=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&null!==n.structTypeNode,r=n.value&&n.value.array&&"number"==typeof n.value.itemSize&&n.value.array.length>n.value.itemSize;return i&&!r}getUniforms(e){const t=this.uniforms[e],n=[],i=[],r=[],s={};for(const o of t){const t=o.groupNode.name,r=this.bindingsIndexes[t];if("texture"===o.type||"cubeTexture"===o.type||"storageTexture"===o.type||"texture3D"===o.type){const t=o.node.value;let i;!1===this.isUnfilterable(t)&&!0!==o.node.isStorageTextureNode&&(this.isSampleCompare(t)?n.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name}_sampler : sampler_comparison;`):n.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name}_sampler : sampler;`));let s="";const{primarySamples:a}=this.renderer.backend.utils.getTextureSampleData(t);if(a>1&&(s="_multisampled"),!0===t.isCubeTexture)i="texture_cube<f32>";else if(!0===t.isDepthTexture)i=this.renderer.backend.compatibilityMode&&null===t.compareFunction?`texture${s}_2d<f32>`:`texture_depth${s}_2d${!0===t.isArrayTexture?"_array":""}`;else if(!0===o.node.isStorageTextureNode){const n=cj(t),r=this.getStorageAccess(o.node,e),s=o.node.value.is3DTexture,a=o.node.value.isArrayTexture;i=`texture_storage_${s?"3d":"2d"+(a?"_array":"")}<${n}, ${r}>`}else if(!0===t.isArrayTexture||!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)i="texture_2d_array<f32>";else if(!0===t.is3DTexture||!0===t.isData3DTexture)i="texture_3d<f32>";else{i=`texture${s}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}n.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name} : ${i};`)}else if("buffer"===o.type||"storageBuffer"===o.type||"indirectStorageBuffer"===o.type){const t=o.node,n=this.getType(t.getNodeType(this)),s=t.bufferCount,a=s>0&&"buffer"===o.type?", "+s:"",l=t.isStorageBufferNode?`storage, ${this.getStorageAccess(t,e)}`:"uniform";if(this.isCustomStruct(o))i.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var<${l}> ${o.name} : ${n};`);else{const e=`\tvalue : array< ${t.isAtomic?`atomic<${n}>`:`${n}`}${a} >`;i.push(this._getWGSLStructBinding(o.name,e,l,r.binding++,r.group))}}else{const e=this.getType(this.getVectorType(o.type)),t=o.groupNode.name;(s[t]||(s[t]={index:r.binding++,id:r.group,snippets:[]})).snippets.push(`\t${o.name} : ${e}`)}}for(const o in s){const e=s[o];r.push(this._getWGSLStructBinding(o,e.snippets.join(",\n"),"uniform",e.index,e.id))}let a=n.join("\n");return a+=i.join("\n"),a+=r.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let i="// code\n\n";i+=this.flowCode[t];const r=this.flowNodes[t],s=r[r.length-1],a=s.outputNode,o=void 0!==a&&!0===a.isOutputStructNode;for(const e of r){const r=this.getFlowData(e),l=e.name;if(l&&(i.length>0&&(i+="\n"),i+=`\t// flow -> ${l}\n`),i+=`${r.code}\n\t`,e===s&&"compute"!==t)if(i+="// result\n\n\t","vertex"===t)i+=`varyings.Vertex = ${r.result};`;else if("fragment"===t)if(o)n.returnType=a.getNodeType(this),n.structs+="var<private> output : "+n.returnType+";",i+=`return ${r.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",e),n.structs+="\nvar<private> output : OutputStruct;",i+=`output.color = ${r.result};\n\n\treturn output;`}}n.flow=i}if(this.shaderStage=null,null!==this.material)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let n;return null!==t&&(n=this._getWGSLMethod(e+"_"+t)),void 0===n&&(n=this._getWGSLMethod(e)),n||e}getBitcastMethod(e){return`bitcast<${this.getType(e)}>`}getTernary(e,t,n){return`select( ${n}, ${t}, ${e} )`}getType(e){return _j[e]||e}isAvailable(e){let t=yj[e];return void 0===t&&("float32Filterable"===e?t=this.renderer.hasFeature("float32-filterable"):"clipDistance"===e&&(t=this.renderer.hasFeature("clip-distances")),yj[e]=t),t}_getWGSLMethod(e){return void 0!==Sj[e]&&this._include(e),wj[e]}_include(e){const t=Sj[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${Mj}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){const[n,i,r]=t;return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${n}, ${i}, ${r} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = globalId.x\n\t\t+ globalId.y * ( ${n} * numWorkgroups.x )\n\t\t+ globalId.z * ( ${n} * numWorkgroups.x ) * ( ${i} * numWorkgroups.y );\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,n,i=0,r=0){const s=e+"Struct";return`${this._getWGSLStruct(s,t)}\n@binding( ${i} ) @group( ${r} )\nvar<${n}> ${e} : ${s};`}}class Aj{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=JG:e.depth&&(t=ZG),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const e=this.backend.renderer,n=e.getRenderTarget();t=n?n.samples:e.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const n=t>1&&null!==e.renderTarget&&!0!==e.isDepthTexture&&!0!==e.isFramebufferTexture;return{samples:t,primarySamples:n?1:t,isMSAA:n}}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?qz:e.isLineSegments||e.isMesh&&!0===t.wireframe?$z:e.isLine?Yz:e.isMesh?Kz:void 0}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(void 0===e)return navigator.gpu.getPreferredCanvasFormat();if(e===ge)return OG;if(e===Se)return qG;throw new Error("Unsupported outputType")}}const Rj=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);"undefined"!=typeof Float16Array&&Rj.set(Float16Array,["float16"]);const Cj=new Map([[jr,["float16"]]]),Nj=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Pj{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),i=this.backend,r=i.get(n);let s=r.buffer;if(void 0===s){const a=i.device;let o=n.array;if(!1===e.normalized)if(o.constructor===Int16Array||o.constructor===Int8Array)o=new Int32Array(o);else if((o.constructor===Uint16Array||o.constructor===Uint8Array)&&(o=new Uint32Array(o),t&GPUBufferUsage.INDEX))for(let e=0;e<o.length;e++)65535===o[e]&&(o[e]=4294967295);if(n.array=o,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&3===n.itemSize){o=new o.constructor(4*n.count);for(let e=0;e<n.count;e++)o.set(n.array.subarray(3*e,3*e+3),4*e);n.itemSize=4,n.array=o,r._force3to4BytesAlignment=!0}const l=o.byteLength,c=l+(4-l%4)%4;s=a.createBuffer({label:n.name,size:c,usage:t,mappedAtCreation:!0}),new o.constructor(s.getMappedRange()).set(o),s.unmap(),r.buffer=s}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,i=n.device,r=n.get(t),s=n.get(t).buffer;let a=t.array;if(!0===r._force3to4BytesAlignment){a=new a.constructor(4*t.count);for(let e=0;e<t.count;e++)a.set(t.array.subarray(3*e,3*e+3),4*e);t.array=a}const o=this._isTypedArray(a),l=t.updateRanges;if(0===l.length)i.queue.writeBuffer(s,0,a,0);else{const e=o?1:a.BYTES_PER_ELEMENT;for(let t=0,n=l.length;t<n;t++){const n=l[t];let c,u;if(!0===r._force3to4BytesAlignment){c=4*Math.floor(n.start/3)*e,u=4*Math.ceil(n.count/3)*e}else c=n.start*e,u=n.count*e;const h=c*(o?a.BYTES_PER_ELEMENT:1);i.queue.writeBuffer(s,h,a,c,u)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let i=0;i<t.length;i++){const e=t[i],r=e.array.BYTES_PER_ELEMENT,s=this._getBufferAttribute(e);let a=n.get(s);if(void 0===a){let t,i;!0===e.isInterleavedBufferAttribute?(t=e.data.stride*r,i=e.data.isInstancedInterleavedBuffer?JW:ZW):(t=e.itemSize*r,i=e.isInstancedBufferAttribute?JW:ZW),!1!==e.normalized||e.array.constructor!==Int16Array&&e.array.constructor!==Uint16Array||(t=4),a={arrayStride:t,attributes:[],stepMode:i},n.set(s,a)}const o=this._getVertexFormat(e),l=!0===e.isInterleavedBufferAttribute?e.offset*r:0;a.attributes.push({shaderLocation:i,offset:l,format:o})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,i=t.get(this._getBufferAttribute(e)).buffer,r=i.size,s=n.createBuffer({label:`${e.name}_readback`,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=n.createCommandEncoder({label:`readback_encoder_${e.name}`});a.copyBufferToBuffer(i,0,s,0,r);const o=a.finish();n.queue.submit([o]),await s.mapAsync(GPUMapMode.READ);const l=s.getMappedRange(),c=new e.array.constructor(l.slice(0));return s.unmap(),c.buffer}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,i=e.array.constructor,r=e.constructor;let s;if(1===t)s=Nj.get(i);else{const e=(Cj.get(r)||Rj.get(i))[n?1:0];if(e){const n=i.BYTES_PER_ELEMENT*t,r=4*Math.floor((n+3)/4)/i.BYTES_PER_ELEMENT;if(r%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");s=`${e}x${r}`}}return s||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),s}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Lj{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,n=t.device,i=[];let r=0;for(const s of e.bindings){const e={binding:r++,visibility:s.visibility};if(s.isUniformBuffer||s.isStorageBuffer){const t={};s.isStorageBuffer&&(4&s.visibility&&(s.access===Gx.READ_WRITE||s.access===Gx.WRITE_ONLY)?t.type=IW:t.type=DW),e.buffer=t}else if(s.isSampledTexture&&s.store){const t={};t.format=this.backend.get(s.texture).texture.format;const n=s.access;t.access=n===Gx.READ_WRITE?OW:n===Gx.WRITE_ONLY?FW:UW,s.texture.isArrayTexture?t.viewDimension=$W:s.texture.is3DTexture&&(t.viewDimension=KW),e.storageTexture=t}else if(s.isSampledTexture){const n={},{primarySamples:i}=t.utils.getTextureSampleData(s.texture);if(i>1&&(n.multisampled=!0,s.texture.isDepthTexture||(n.sampleType=zW)),s.texture.isDepthTexture)t.compatibilityMode&&null===s.texture.compareFunction?n.sampleType=zW:n.sampleType=GW;else if(s.texture.isDataTexture||s.texture.isDataArrayTexture||s.texture.isData3DTexture){const e=s.texture.type;e===xe?n.sampleType=HW:e===_e?n.sampleType=WW:e===Te&&(this.backend.hasFeature("float32-filterable")?n.sampleType=VW:n.sampleType=zW)}s.isSampledCubeTexture?n.viewDimension=YW:s.texture.isArrayTexture||s.texture.isDataArrayTexture||s.texture.isCompressedArrayTexture?n.viewDimension=$W:s.isSampledTexture3D&&(n.viewDimension=KW),e.texture=n}else if(s.isSampler){const n={};s.texture.isDepthTexture&&(null!==s.texture.compareFunction?n.type=kW:t.compatibilityMode&&(n.type=BW)),e.sampler=n}else console.error(`WebGPUBindingUtils: Unsupported binding "${s}".`);i.push(e)}return n.createBindGroupLayout({entries:i})}createBindings(e,t,n,i=0){const{backend:r,bindGroupLayoutCache:s}=this,a=r.get(e);let o,l=s.get(e.bindingsReference);void 0===l&&(l=this.createBindingsLayout(e),s.set(e.bindingsReference,l)),n>0&&(void 0===a.groups&&(a.groups=[],a.versions=[]),a.versions[n]===i&&(o=a.groups[n])),void 0===o&&(o=this.createBindGroup(e,l),n>0&&(a.groups[n]=o,a.versions[n]=i)),a.group=o,a.layout=l}updateBinding(e){const t=this.backend,n=t.device,i=e.buffer,r=t.get(e).buffer;n.queue.writeBuffer(r,0,i,0)}createBindGroupIndex(e,t){const n=this.backend.device,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=e[0],s=n.createBuffer({label:"bindingCameraIndex_"+r,size:16,usage:i});n.queue.writeBuffer(s,0,e,0);const a=[{binding:0,resource:{buffer:s}}];return n.createBindGroup({label:"bindGroupCameraIndex_"+r,layout:t,entries:a})}createBindGroup(e,t){const n=this.backend,i=n.device;let r=0;const s=[];for(const a of e.bindings){if(a.isUniformBuffer){const e=n.get(a);if(void 0===e.buffer){const t=a.byteLength,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=i.createBuffer({label:"bindingBuffer_"+a.name,size:t,usage:n});e.buffer=r}s.push({binding:r,resource:{buffer:e.buffer}})}else if(a.isStorageBuffer){const e=n.get(a);if(void 0===e.buffer){const t=a.attribute;e.buffer=n.get(t).buffer}s.push({binding:r,resource:{buffer:e.buffer}})}else if(a.isSampledTexture){const e=n.get(a.texture);let t;if(void 0!==e.externalTexture)t=i.importExternalTexture({source:e.externalTexture});else{const n=a.store?1:e.texture.mipLevelCount;let i=`view-${e.texture.width}-${e.texture.height}`;if(e.texture.depthOrArrayLayers>1&&(i+=`-${e.texture.depthOrArrayLayers}`),i+=`-${n}`,t=e[i],void 0===t){const r=QW;let s;s=a.isSampledCubeTexture?YW:a.isSampledTexture3D?KW:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?$W:qW,t=e[i]=e.texture.createView({aspect:r,dimension:s,mipLevelCount:n})}}s.push({binding:r,resource:t})}else if(a.isSampler){const e=n.get(a.texture);s.push({binding:r,resource:e.sampler})}r++}return i.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:s})}}class Ij{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:i,geometry:r,pipeline:s}=e,{vertexProgram:a,fragmentProgram:o}=s,l=this.backend,c=l.device,u=l.utils,h=l.get(s),d=[];for(const R of e.getBindings()){const e=l.get(R);d.push(e.layout)}const p=l.attributeUtils.createShaderVertexBuffers(e);let m;0===i.blending||1===i.blending&&!1===i.transparent||(m=this._getBlending(i));let f={};!0===i.stencilWrite&&(f={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});const g=this._getColorWriteMask(i),v=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const n=u.getTextureFormatGPU(t[e]);v.push({format:n,blend:m,writeMask:g})}}else{const t=u.getCurrentColorFormat(e.context);v.push({format:t,blend:m,writeMask:g})}const b=l.get(a).module,y=l.get(o).module,x=this._getPrimitiveState(n,r,i),_=this._getDepthCompare(i),T=u.getCurrentDepthStencilFormat(e.context),S=this._getSampleCount(e.context),w={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},b,{buffers:p}),fragment:Object.assign({},y,{targets:v}),primitive:x,multisample:{count:S,alphaToCoverageEnabled:i.alphaToCoverage&&S>1},layout:c.createPipelineLayout({bindGroupLayouts:d})},M={},E=e.context.depth,A=e.context.stencil;if(!0!==E&&!0!==A||(!0===E&&(M.format=T,M.depthWriteEnabled=i.depthWrite,M.depthCompare=_),!0===A&&(M.stencilFront=f,M.stencilBack={},M.stencilReadMask=i.stencilFuncMask,M.stencilWriteMask=i.stencilWriteMask),!0===i.polygonOffset&&(M.depthBias=i.polygonOffsetUnits,M.depthBiasSlopeScale=i.polygonOffsetFactor,M.depthBiasClamp=0),w.depthStencil=M),null===t)h.pipeline=c.createRenderPipeline(w);else{const e=new Promise(e=>{c.createRenderPipelineAsync(w).then(t=>{h.pipeline=t,e()})});t.push(e)}}createBundleEncoder(e,t="renderBundleEncoder"){const n=this.backend,{utils:i,device:r}=n,s=i.getCurrentDepthStencilFormat(e),a={label:t,colorFormats:[i.getCurrentColorFormat(e)],depthStencilFormat:s,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(a)}createComputePipeline(e,t){const n=this.backend,i=n.device,r=n.get(e.computeProgram).module,s=n.get(e),a=[];for(const o of t){const e=n.get(o);a.push(e.layout)}s.pipeline=i.createComputePipeline({compute:r,layout:i.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,n;const i=e.blending,r=e.blendSrc,s=e.blendDst,a=e.blendEquation;if(5===i){const i=null!==e.blendSrcAlpha?e.blendSrcAlpha:r,o=null!==e.blendDstAlpha?e.blendDstAlpha:s,l=null!==e.blendEquationAlpha?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(s),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(i),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(l)}}else{const r=(e,i,r,s)=>{t={srcFactor:e,dstFactor:i,operation:bW},n={srcFactor:r,dstFactor:s,operation:bW}};if(e.premultipliedAlpha)switch(i){case 1:r(aW,uW,aW,uW);break;case 2:r(aW,aW,aW,aW);break;case 3:r(sW,lW,sW,aW);break;case 4:r(hW,uW,sW,aW)}else switch(i){case 1:r(cW,uW,aW,uW);break;case 2:r(cW,aW,aW,aW);break;case 3:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case 4:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true")}}if(void 0!==t&&void 0!==n)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(e){let t;switch(e){case _:t=sW;break;case T:t=aW;break;case S:t=oW;break;case w:t=lW;break;case M:t=cW;break;case E:t=uW;break;case C:t=hW;break;case N:t=dW;break;case A:t=pW;break;case R:t=mW;break;case P:t=fW;break;case 211:t=gW;break;case 212:t=vW;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case 512:t=Zz;break;case $t:t=sG;break;case 513:t=Jz;break;case 515:t=tG;break;case qt:t=eG;break;case 518:t=rG;break;case 516:t=nG;break;case 517:t=iG;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case Vt:t=MW;break;case 0:t=EW;break;case zt:t=AW;break;case Xt:t=RW;break;case Gt:t=CW;break;case Ht:t=NW;break;case Wt:t=PW;break;case jt:t=LW;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case g:t=bW;break;case v:t=yW;break;case b:t=xW;break;case y:t=_W;break;case x:t=TW;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const i={},r=this.backend.utils;i.topology=r.getPrimitiveTopology(e,n),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(i.stripIndexFormat=t.index.array instanceof Uint16Array?pG:mG);let s=1===n.side;return e.isMesh&&e.matrixWorld.determinant()<0&&(s=!s),i.frontFace=!0===s?uG:cG,i.cullMode=2===n.side?hG:dG,i}_getColorWriteMask(e){return!0===e.colorWrite?wW:SW}_getDepthCompare(e){let t;if(!1===e.depthTest)t=sG;else{const n=e.depthFunc;switch(n){case 0:t=Zz;break;case 1:t=sG;break;case 2:t=Jz;break;case 3:t=tG;break;case 4:t=eG;break;case 5:t=rG;break;case 6:t=nG;break;case 7:t=iG;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class Dj extends Wz{constructor(e,t,n=2048){super(n),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const i=8*this.maxQueries;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return On(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||0===this.currentQueryIndex||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if("unmapped"!==this.resultBuffer.mapState)return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,n=8*t;this.currentQueryIndex=0,this.queryOffsets.clear();const i=this.device.createCommandEncoder();i.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),i.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,n);const r=i.finish();if(this.device.queue.submit([r]),"unmapped"!==this.resultBuffer.mapState)return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,n),this.isDisposed)return"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue;const s=new BigUint64Array(this.resultBuffer.getMappedRange(0,n));let a=0;for(const[,o]of e){const e=s[o],t=s[o+1];a+=Number(t-e)/1e6}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&"mapped"===this.resultBuffer.mapState)try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class Fj extends Ez{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.compatibilityMode=void 0!==e.compatibilityMode&&e.compatibilityMode,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new Aj(this),this.attributeUtils=new Pj(this),this.bindingUtils=new Lj(this),this.pipelineUtils=new Ij(this),this.textureUtils=new lj(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(void 0===t.device){const e={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},i="undefined"!=typeof navigator?await navigator.gpu.requestAdapter(e):null;if(null===i)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const r=Object.values(ej),s=[];for(const t of r)i.features.has(t)&&s.push(t);const a={requiredFeatures:s,requiredLimits:t.requiredLimits};n=await i.requestDevice(a)}else n=t.device;n.lost.then(t=>{const n={api:"WebGPU",message:t.message||"Unknown reason",reason:t.reason||null,originalEvent:t};e.onDeviceLost(n)});const i=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=i;const r=t.alpha?"premultiplied":"opaque",s=zn.getToneMappingMode(this.renderer.outputColorSpace);this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r,toneMapping:{mode:s}}),this.trackTimestamp=this.trackTimestamp&&this.hasFeature(ej.TimestampQuery),this.updateSize()}get coordinateSystem(){return ln}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const n=e.renderTarget,i=this.get(n);let r=i.descriptors;void 0!==r&&i.width===n.width&&i.height===n.height&&i.samples===n.samples||(r={},i.descriptors=r);const s=e.getCacheKey();let a=r[s];if(void 0===a){const t=e.textures,o=[];let l;const c=this._isRenderCameraDepthArray(e);for(let i=0;i<t.length;i++){const r=this.get(t[i]),s={label:`colorAttachment_${i}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:qW};if(n.isRenderTarget3D)l=e.activeCubeFace,s.baseArrayLayer=0,s.dimension=KW,s.depthOrArrayLayers=t[i].image.depth;else if(n.isRenderTarget&&t[i].image.depth>1)if(!0===c){const t=e.camera.cameras;for(let e=0;e<t.length;e++){const t={...s,baseArrayLayer:e,arrayLayerCount:1,dimension:qW},n=r.texture.createView(t);o.push({view:n,resolveTarget:void 0,depthSlice:void 0})}}else s.dimension=$W,s.depthOrArrayLayers=t[i].image.depth;if(!0!==c){const e=r.texture.createView(s);let t,n;void 0!==r.msaaTexture?(t=r.msaaTexture.createView(),n=e):(t=e,n=void 0),o.push({view:t,resolveTarget:n,depthSlice:l})}}if(a={textureViews:o},e.depth){const t=this.get(e.depthTexture),n={};e.depthTexture.isArrayTexture&&(n.dimension=qW,n.arrayLayerCount=1,n.baseArrayLayer=e.activeCubeFace),a.depthStencilView=t.texture.createView(n)}r[s]=a,i.width=n.width,i.height=n.height,i.samples=n.samples,i.activeMipmapLevel=e.activeMipmapLevel,i.activeCubeFace=e.activeCubeFace}const o={colorAttachments:[]};for(let l=0;l<a.textureViews.length;l++){const e=a.textureViews[l];let n={r:0,g:0,b:0,a:1};0===l&&t.clearValue&&(n=t.clearValue),o.colorAttachments.push({view:e.view,depthSlice:e.depthSlice,resolveTarget:e.resolveTarget,loadOp:t.loadOp||oG,storeOp:t.storeOp||aG,clearValue:n})}return a.depthStencilView&&(o.depthStencilAttachment={view:a.depthStencilView}),o}beginRender(e){const t=this.get(e);t.frameCalls=this.renderer.info.render.frameCalls;const n=this.device,i=e.occlusionQueryCount;let r,s;i>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=n.createQuerySet({type:"occlusion",count:i,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(i),t.lastOcclusionObject=null),s=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e,{loadOp:oG}),this.initTimestampQuery(cn.RENDER,this.getTimestampUID(e),s),s.occlusionQuerySet=r;const a=s.depthStencilAttachment;if(null!==e.textures){const t=s.colorAttachments;for(let n=0;n<t.length;n++){const i=t[n];e.clearColor?(i.clearValue=0===n?e.clearColorValue:{r:0,g:0,b:0,a:1},i.loadOp=lG):i.loadOp=oG,i.storeOp=aG}}else{const t=s.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=lG):t.loadOp=oG,t.storeOp=aG}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=lG):a.depthLoadOp=oG,a.depthStoreOp=aG),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=lG):a.stencilLoadOp=oG,a.stencilStoreOp=aG);const o=n.createCommandEncoder({label:"renderContext_"+e.id});if(!0===this._isRenderCameraDepthArray(e)){const n=e.camera.cameras;t.layerDescriptors&&t.layerDescriptors.length===n.length?this._updateDepthLayerDescriptors(e,t,n):this._createDepthLayerDescriptors(e,t,s,n),t.bundleEncoders=[],t.bundleSets=[];for(let i=0;i<n.length;i++){const n=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+i),r={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(n),t.bundleSets.push(r)}t.currentPass=null}else{const n=o.beginRenderPass(s);if(t.currentPass=n,e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:i,width:r,height:s}=e.scissorValue;n.setScissorRect(t,i,r,s)}}t.descriptor=s,t.encoder=o,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,n,i){const r=n.depthStencilAttachment;t.layerDescriptors=[];const s=this.get(e.depthTexture);s.viewCache||(s.viewCache=[]);for(let a=0;a<i.length;a++){const i={...n,colorAttachments:[{...n.colorAttachments[0],view:n.colorAttachments[a].view}]};if(n.depthStencilAttachment){const t=a;s.viewCache[t]||(s.viewCache[t]=s.texture.createView({dimension:qW,baseArrayLayer:a,arrayLayerCount:1})),i.depthStencilAttachment={view:s.viewCache[t],depthLoadOp:r.depthLoadOp||lG,depthStoreOp:r.depthStoreOp||aG,depthClearValue:r.depthClearValue||1},e.stencil&&(i.depthStencilAttachment.stencilLoadOp=r.stencilLoadOp,i.depthStencilAttachment.stencilStoreOp=r.stencilStoreOp,i.depthStencilAttachment.stencilClearValue=r.stencilClearValue)}else i.depthStencilAttachment={...r};t.layerDescriptors.push(i)}}_updateDepthLayerDescriptors(e,t,n){for(let i=0;i<n.length;i++){const n=t.layerDescriptors[i];if(n.depthStencilAttachment){const t=n.depthStencilAttachment;e.depth&&(e.clearDepth?(t.depthClearValue=e.clearDepthValue,t.depthLoadOp=lG):t.depthLoadOp=oG),e.stencil&&(e.clearStencil?(t.stencilClearValue=e.clearStencilValue,t.stencilLoadOp=lG):t.stencilLoadOp=oG)}}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const i=t.encoder;if(!0===this._isRenderCameraDepthArray(e)){const n=[];for(let e=0;e<t.bundleEncoders.length;e++){const i=t.bundleEncoders[e];n.push(i.finish())}for(let r=0;r<t.layerDescriptors.length;r++)if(r<n.length){const s=t.layerDescriptors[r],a=i.beginRenderPass(s);if(e.viewport){const{x:t,y:n,width:i,height:r,minDepth:s,maxDepth:o}=e.viewportValue;a.setViewport(t,n,i,r,s,o)}if(e.scissor){const{x:t,y:n,width:i,height:r}=e.scissorValue;a.setScissorRect(t,n,i,r)}a.executeBundles([n[r]]),a.end()}}else t.currentPass&&t.currentPass.end();if(n>0){const i=8*n;let r=this.occludedResolveCache.get(i);void 0===r&&(r=this.device.createBuffer({size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(i,r));const s=this.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,r,0),t.encoder.copyBufferToBuffer(r,0,s,0,i),t.occlusionQueryBuffer=s,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const n=t[e];!0===n.generateMipmaps&&this.textureUtils.generateMipmaps(n)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange(),s=new BigUint64Array(r);for(let t=0;t<i.length;t++)s[t]===BigInt(0)&&e.add(i[t]);n.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:i,width:r,height:s,minDepth:a,maxDepth:o}=e.viewportValue;t.setViewport(n,i,r,s,a,o)}getClearColor(){const e=super.getClearColor();return!0===this.renderer.alpha&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,n,i=null){const r=this.device,s=this.renderer;let a,o,l,c,u=[];if(e){const e=this.getClearColor();o={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===i){l=s.depth,c=s.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){u=t.colorAttachments;const e=u[0];e.clearValue=o,e.loadOp=lG,e.storeOp=aG}(l||c)&&(a=t.depthStencilAttachment)}else{l=i.depth,c=i.stencil;const r={loadOp:e?lG:oG,clearValue:e?o:void 0};l&&(r.depthLoadOp=t?lG:oG,r.depthClearValue=t?s.getClearDepth():void 0,r.depthStoreOp=aG),c&&(r.stencilLoadOp=n?lG:oG,r.stencilClearValue=n?s.getClearStencil():void 0,r.stencilStoreOp=aG);const h=this._getRenderPassDescriptor(i,r);u=h.colorAttachments,a=h.depthStencilAttachment}l&&a&&(t?(a.depthLoadOp=lG,a.depthClearValue=s.getClearDepth(),a.depthStoreOp=aG):(a.depthLoadOp=oG,a.depthStoreOp=aG)),c&&a&&(n?(a.stencilLoadOp=lG,a.stencilClearValue=s.getClearStencil(),a.stencilStoreOp=aG):(a.stencilLoadOp=oG,a.stencilStoreOp=aG));const h=r.createCommandEncoder({label:"clear"});h.beginRenderPass({colorAttachments:u,depthStencilAttachment:a}).end(),r.queue.submit([h.finish()])}beginCompute(e){const t=this.get(e);t.frameCalls=this.renderer.info.compute.frameCalls;const n={label:"computeGroup_"+e.id};this.initTimestampQuery(cn.COMPUTE,this.getTimestampUID(e),n),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,i,r=null){const s=this.get(t),{passEncoderGPU:a}=this.get(e),o=this.get(i).pipeline;this.pipelineUtils.setPipeline(a,o);for(let c=0,u=n.length;c<u;c++){const e=n[c],t=this.get(e);a.setBindGroup(c,t.group)}let l;if(null===r&&(r=t.count),"number"==typeof r){const e=r;if(void 0===s.dispatchSize||s.count!==e){s.dispatchSize=[0,1,1],s.count=e;const n=t.workgroupSize;let i=n[0];for(let e=1;e<n.length;e++)i*=n[e];const r=Math.ceil(e/i),a=this.device.limits.maxComputeWorkgroupsPerDimension;l=[r,1,1],r>a&&(l[0]=Math.min(r,a),l[1]=Math.ceil(r/a)),s.dispatchSize=l}l=s.dispatchSize}else l=r;a.dispatchWorkgroups(l[0],l[1]||1,l[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:n,material:i,context:r,pipeline:s}=e,a=e.getBindings(),o=this.get(r),l=this.get(s).pipeline,c=e.getIndex(),u=null!==c,h=e.getDrawParameters();if(null===h)return;const d=(t,n)=>{this.pipelineUtils.setPipeline(t,l),n.pipeline=l;const s=n.bindingGroups;for(let e=0,i=a.length;e<i;e++){const n=a[e],i=this.get(n);s[n.index]!==n.id&&(t.setBindGroup(n.index,i.group),s[n.index]=n.id)}if(!0===u&&n.index!==c){const e=this.get(c).buffer,i=c.array instanceof Uint16Array?pG:mG;t.setIndexBuffer(e,i),n.index=c}const h=e.getVertexBuffers();for(let e=0,i=h.length;e<i;e++){const i=h[e];if(n.attributes[e]!==i){const r=this.get(i).buffer;t.setVertexBuffer(e,r),n.attributes[e]=i}}!0===r.stencil&&!0===i.stencilWrite&&o.currentStencilRef!==i.stencilRef&&(t.setStencilReference(i.stencilRef),o.currentStencilRef=i.stencilRef)},p=(i,r)=>{if(d(i,r),!0===n.isBatchedMesh){const e=n._multiDrawStarts,r=n._multiDrawCounts,s=n._multiDrawCount,a=n._multiDrawInstances;null!==a&&On("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let o=0;o<s;o++){const s=a?a[o]:1,l=s>1?0:o;!0===u?i.drawIndexed(r[o],s,e[o]/c.array.BYTES_PER_ELEMENT,0,l):i.draw(r[o],s,e[o],l),t.update(n,r[o],s)}}else if(!0===u){const{vertexCount:r,instanceCount:s,firstVertex:a}=h,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;i.drawIndexedIndirect(e,0)}else i.drawIndexed(r,s,a,0,0);t.update(n,r,s)}else{const{vertexCount:r,instanceCount:s,firstVertex:a}=h,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;i.drawIndirect(e,0)}else i.draw(r,s,a,0);t.update(n,r,s)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const t=this.get(e.camera),i=e.camera.cameras,s=e.getBindingGroup("cameraIndex");if(void 0===t.indexesGPU||t.indexesGPU.length!==i.length){const e=this.get(s),n=[],r=new Uint32Array([0,0,0,0]);for(let t=0,s=i.length;t<s;t++){r[0]=t;const i=this.bindingUtils.createBindGroupIndex(r,e.layout);n.push(i)}t.indexesGPU=n}const a=this.renderer.getPixelRatio();for(let e=0,l=i.length;e<l;e++){const l=i[e];if(n.layers.test(l.layers)){const n=l.viewport;let i=o.currentPass,c=o.currentSets;if(o.bundleEncoders){i=o.bundleEncoders[e],c=o.bundleSets[e]}n&&i.setViewport(Math.floor(n.x*a),Math.floor(n.y*a),Math.floor(n.width*a),Math.floor(n.height*a),r.viewportValue.minDepth,r.viewportValue.maxDepth),s&&t.indexesGPU&&(i.setBindGroup(s.index,t.indexesGPU[e]),c.bindingGroups[s.index]=s.id),p(i,c)}}}else if(o.currentPass){if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==n&&(null!==e&&!0===e.occlusionTest&&(o.currentPass.endOcclusionQuery(),o.occlusionQueryIndex++),!0===n.occlusionTest&&(o.currentPass.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=n),o.lastOcclusionObject=n)}p(o.currentPass,o.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:n,material:i}=e,r=this.utils,s=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),o=r.getCurrentColorFormat(e.context),l=r.getCurrentDepthStencilFormat(e.context),c=r.getPrimitiveTopology(n,i);let u=!1;return t.material===i&&t.materialVersion===i.version&&t.transparent===i.transparent&&t.blending===i.blending&&t.premultipliedAlpha===i.premultipliedAlpha&&t.blendSrc===i.blendSrc&&t.blendDst===i.blendDst&&t.blendEquation===i.blendEquation&&t.blendSrcAlpha===i.blendSrcAlpha&&t.blendDstAlpha===i.blendDstAlpha&&t.blendEquationAlpha===i.blendEquationAlpha&&t.colorWrite===i.colorWrite&&t.depthWrite===i.depthWrite&&t.depthTest===i.depthTest&&t.depthFunc===i.depthFunc&&t.stencilWrite===i.stencilWrite&&t.stencilFunc===i.stencilFunc&&t.stencilFail===i.stencilFail&&t.stencilZFail===i.stencilZFail&&t.stencilZPass===i.stencilZPass&&t.stencilFuncMask===i.stencilFuncMask&&t.stencilWriteMask===i.stencilWriteMask&&t.side===i.side&&t.alphaToCoverage===i.alphaToCoverage&&t.sampleCount===s&&t.colorSpace===a&&t.colorFormat===o&&t.depthStencilFormat===l&&t.primitiveTopology===c&&t.clippingContextCacheKey===e.clippingContextCacheKey||(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,t.alphaToCoverage=i.alphaToCoverage,t.sampleCount=s,t.colorSpace=a,t.colorFormat=o,t.depthStencilFormat=l,t.primitiveTopology=c,t.clippingContextCacheKey=e.clippingContextCacheKey,u=!0),u}getRenderCacheKey(e){const{object:t,material:n}=e,i=this.utils,r=e.context,s=t.isMesh&&t.matrixWorld.determinant()<0;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,s,i.getSampleCountRenderContext(r),i.getCurrentColorSpace(r),i.getCurrentColorFormat(r),i.getCurrentDepthStencilFormat(r),i.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,i,r,s){return this.textureUtils.copyTextureToBuffer(e,t,n,i,r,s)}initTimestampQuery(e,t,n){if(!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new Dj(this.device,e,2048));const i=this.timestampQueryPool[e],r=i.allocateQueriesForContext(t);n.timestampWrites={querySet:i.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new Ej(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage+(""!==e.name?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),i=n.currentPass.finish();this.get(t).bundleGPU=i,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,i=null,r=0,s=0){let a=0,o=0,l=0,c=0,u=0,h=0,d=e.image.width,p=e.image.height,m=1;null!==n&&(!0===n.isBox3?(c=n.min.x,u=n.min.y,h=n.min.z,d=n.max.x-n.min.x,p=n.max.y-n.min.y,m=n.max.z-n.min.z):(c=n.min.x,u=n.min.y,d=n.max.x-n.min.x,p=n.max.y-n.min.y,m=1)),null!==i&&(a=i.x,o=i.y,l=i.z||0);const f=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,v=this.get(t).texture;f.copyTextureToTexture({texture:g,mipLevel:r,origin:{x:c,y:u,z:h}},{texture:v,mipLevel:s,origin:{x:a,y:o,z:l}},[d,p,m]),this.device.queue.submit([f.finish()]),0===s&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,n){const i=this.get(t);let r=null;r=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const s=this.get(e).texture;if(r.format!==s.format)return void console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,s.format);let a;if(i.currentPass?(i.currentPass.end(),a=i.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[n.x,n.y,0]},{texture:s},[n.z,n.w]),i.currentPass){const{descriptor:e}=i;for(let t=0;t<e.colorAttachments.length;t++)e.colorAttachments[t].loadOp=oG;if(t.depth&&(e.depthStencilAttachment.depthLoadOp=oG),t.stencil&&(e.depthStencilAttachment.stencilLoadOp=oG),i.currentPass=a.beginRenderPass(e),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:e,y:n,width:r,height:s}=t.scissorValue;i.currentPass.setScissorRect(e,n,r,s)}}else this.device.queue.submit([a.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class Uj extends su{constructor(e,t,n,i,r,s){super(e,t,n,i,r,s),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class Oj extends su{constructor(e,t,n,i,r,s){super(e,t,n,i,r,s),this.aspect=null}copy(e,t){return super.copy(e,t),this.aspect=e.aspect,this}}class Bj extends FV{constructor(){super(),this.addMaterial(eP,"MeshPhongMaterial"),this.addMaterial(HL,"MeshStandardMaterial"),this.addMaterial(jL,"MeshPhysicalMaterial"),this.addMaterial(KL,"MeshToonMaterial"),this.addMaterial(jN,"MeshBasicMaterial"),this.addMaterial(ZN,"MeshLambertMaterial"),this.addMaterial(LN,"MeshNormalMaterial"),this.addMaterial(JL,"MeshMatcapMaterial"),this.addMaterial(SN,"LineBasicMaterial"),this.addMaterial(MN,"LineDashedMaterial"),this.addMaterial(aI,"PointsMaterial"),this.addMaterial(iI,"SpriteMaterial"),this.addMaterial(uI,"ShadowMaterial"),this.addLight(JO,uu),this.addLight(oV,pu),this.addLight(hV,fu),this.addLight(dV,su),this.addLight(gV,mu),this.addLight(vV,Jc),this.addLight(bV,vu),this.addLight(pV,Uj),this.addLight(fV,Oj),this.addToneMapping(VF,1),this.addToneMapping(zF,2),this.addToneMapping(GF,3),this.addToneMapping(WF,4),this.addToneMapping($F,6),this.addToneMapping(YF,7)}}class kj extends nz{constructor(e={}){let t;e.forceWebGL?t=Xz:(t=Fj,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Xz(e)));super(new t(e),e),this.library=new Bj,this.isWebGPURenderer=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}class Vj extends zc{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,n,i){const r=new Wc(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,n=>{try{t(this.parse(JSON.parse(n)))}catch(p3){i?i(p3):console.error(p3),this.manager.itemError(e)}},n,i)}parseNodes(e){const t={};if(void 0!==e){for(const i of e){const{uuid:e,type:n}=i;t[e]=this.createNodeFromType(n),t[e].uuid=e}const n={nodes:t,textures:this.textures};for(const i of e){i.meta=n;t[i.uuid].deserialize(i),delete i.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const n={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=n,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),eT()):k_(new this.nodes[e])}}class zj extends bu{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),n=this.nodes,i=e.inputNodes;for(const r in i){const e=i[r];t[r]=n[e]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}const Gj=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:4,AONode:GC,AddEquation:g,AddOperation:2,AdditiveAnimationBlendMode:Rt,AdditiveBlending:2,AgXToneMapping:6,AlphaFormat:Ce,AlwaysCompare:nn,AlwaysDepth:1,AlwaysStencilFunc:$t,AmbientLight:mu,AmbientLightNode:gV,AnalyticLightNode:KO,AnimationAction:sh,AnimationClip:Uc,AnimationLoader:jc,AnimationMixer:oh,AnimationObjectGroup:rh,AnimationUtils:Sc,ArcCurve:qo,ArrayCamera:Fu,ArrayElementNode:Kx,ArrayNode:aS,ArrowHelper:ld,AssignNode:lS,AttachedBindMode:Z,AttributeNode:ZM,Audio:Hu,AudioAnalyser:Yu,AudioContext:Cu,AudioListener:Gu,AudioLoader:Nu,AxesHelper:cd,BackSide:1,BasicDepthPacking:Lt,BasicEnvironmentNode:VN,BasicShadowMap:0,BatchNode:wC,BatchedMesh:no,BitcastNode:hD,Bone:pa,BooleanKeyframeTrack:Cc,Box2:wh,Box3:si,Box3Helper:id,BoxGeometry:ms,BoxHelper:nd,BufferAttribute:Or,BufferAttributeNode:NM,BufferGeometry:es,BufferGeometryLoader:_u,BufferNode:uE,BumpMapNode:wR,BundleGroup:class extends Cs{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}},BypassNode:VM,ByteType:ve,Cache:Bc,CacheNode:BM,Camera:xs,CameraHelper:Jh,CanvasTexture:Po,CapsuleGeometry:Do,CatmullRomCurve3:Jo,CineonToneMapping:3,CircleGeometry:Fo,ClampToEdgeWrapping:oe,ClippingGroup:class extends Cs{constructor(){super(),this.isClippingGroup=!0,this.clippingPlanes=[],this.enabled=!0,this.clipIntersection=!1,this.clipShadows=!1}},Clock:Uu,CodeNode:KF,Color:wr,ColorKeyframeTrack:Nc,ColorManagement:zn,ColorSpaceNode:xM,CompressedArrayTexture:Co,CompressedCubeTexture:No,CompressedTexture:Ro,CompressedTextureLoader:Xc,ComputeNode:FM,ConeGeometry:Oo,ConstNode:a_,ConstantAlphaFactor:213,ConstantColorFactor:211,ContextNode:nM,Controls:hd,ConvertNode:Qx,CubeCamera:Es,CubeReflectionMapping:te,CubeRefractionMapping:ne,CubeTexture:As,CubeTextureLoader:Yc,CubeTextureNode:kA,CubeUVReflectionMapping:se,CubicBezierCurve:il,CubicBezierCurve3:rl,CubicInterpolant:Mc,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,CullFaceNone:0,Curve:jo,CurvePath:hl,CustomBlending:5,CustomToneMapping:5,CylinderGeometry:Uo,Cylindrical:_h,Data3DTexture:ii,DataArrayTexture:ti,DataTexture:ma,DataTextureLoader:Kc,DataUtils:Ir,DebugNode:KM,DecrementStencilOp:Ht,DecrementWrapStencilOp:jt,DefaultLoadingManager:Vc,DepthFormat:Le,DepthStencilFormat:Ie,DepthTexture:Lo,DetachedBindMode:J,DirectionalLight:pu,DirectionalLightHelper:Kh,DirectionalLightNode:oV,DiscreteInterpolant:Ac,DodecahedronGeometry:ko,DoubleSide:2,DstAlphaFactor:A,DstColorFactor:C,DynamicCopyUsage:35050,DynamicDrawUsage:sn,DynamicReadUsage:35049,EdgesGeometry:Wo,EllipseCurve:Xo,EnvironmentNode:kL,EqualCompare:Qt,EqualDepth:4,EqualStencilFunc:qt,EquirectangularReflectionMapping:ie,EquirectangularRefractionMapping:re,Euler:Gi,EventDispatcher:dn,EventNode:rF,ExpressionNode:jM,ExternalTexture:Io,ExtrudeGeometry:Wl,FileLoader:Wc,Float16BufferAttribute:jr,Float32BufferAttribute:Xr,FloatType:Te,Fog:Is,FogExp2:Ls,FramebufferTexture:Ao,FrontFacingNode:dA,FrontSide:0,Frustum:Da,FrustumArray:Oa,FunctionCallNode:uS,FunctionNode:ZF,FunctionOverloadingNode:bD,GLBufferAttribute:ph,GLSL1:"100",GLSL3:an,GLSLNodeParser:MV,GreaterCompare:Jt,GreaterDepth:6,GreaterEqualCompare:tn,GreaterEqualDepth:5,GreaterEqualStencilFunc:518,GreaterStencilFunc:516,GridHelper:jh,Group:Cs,HalfFloatType:Se,HemisphereLight:Jc,HemisphereLightHelper:Wh,HemisphereLightNode:vV,IESSpotLight:Uj,IESSpotLightNode:pV,IcosahedronGeometry:Xl,ImageBitmapLoader:Au,ImageLoader:$c,ImageUtils:jn,IncrementStencilOp:Gt,IncrementWrapStencilOp:Wt,IndexNode:pC,IndirectStorageBufferAttribute:class extends oF{constructor(e,t){super(e,t,Uint32Array),this.isIndirectStorageBufferAttribute=!0}},InstanceNode:xC,InstancedBufferAttribute:ba,InstancedBufferGeometry:xu,InstancedInterleavedBuffer:dh,InstancedMesh:Ea,InstancedMeshNode:TC,Int16BufferAttribute:zr,Int32BufferAttribute:Hr,Int8BufferAttribute:Br,IntType:xe,InterleavedBuffer:Fs,InterleavedBufferAttribute:Os,Interpolant:wc,InterpolateDiscrete:_t,InterpolateLinear:Tt,InterpolateSmooth:St,InterpolationSamplingMode:hn,InterpolationSamplingType:un,InvertStencilOp:Xt,IrradianceNode:jC,JoinNode:Jx,KeepStencilOp:Vt,KeyframeTrack:Rc,LOD:na,LatheGeometry:ql,Layers:Hi,LessCompare:Kt,LessDepth:2,LessEqualCompare:Zt,LessEqualDepth:3,LessEqualStencilFunc:515,LessStencilFunc:513,Light:Zc,LightProbe:vu,LightProbeNode:bV,Lighting:BV,LightingContextNode:HC,LightingModel:GN,LightingNode:zC,LightsNode:hO,Line:ho,Line2NodeMaterial:class extends _N{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.isLine2NodeMaterial=!0,this.setDefaultValues(CN),this.useColor=e.vertexColors,this.dashOffset=0,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.blending=0,this._useDash=e.dashed,this._useAlphaToCoverage=!0,this._useWorldUnits=!1,this.setValues(e)}setup(e){const{renderer:t}=e,n=this._useAlphaToCoverage,i=this.useColor,r=this._useDash,s=this._useWorldUnits,a=$_(({start:e,end:t})=>{const n=PE.element(2).element(2),i=PE.element(3).element(2).mul(-.5).div(n).sub(e.z).div(t.z.sub(e.z));return dT(zw(e.xyz,t.xyz,i),t.w)}).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=$_(()=>{const e=JM("instanceStart"),t=JM("instanceEnd"),n=dT(tA.mul(dT(e,1))).toVar("start"),i=dT(tA.mul(dT(t,1))).toVar("end");if(r){const e=this.dashScaleNode?eT(this.dashScaleNode):nC,t=this.offsetNode?eT(this.offsetNode):aC,n=JM("instanceDistanceStart"),i=JM("instanceDistanceEnd");let r=sA.y.lessThan(.5).select(e.mul(n),e.mul(i));r=r.add(t),ST("float","lineDistance").assign(r)}s&&(ST("vec3","worldStart").assign(n.xyz),ST("vec3","worldEnd").assign(i.xyz));const o=SE.z.div(SE.w),l=PE.element(2).element(3).equal(-1);Q_(l,()=>{Q_(n.z.lessThan(0).and(i.z.greaterThan(0)),()=>{i.assign(a({start:n,end:i}))}).ElseIf(i.z.lessThan(0).and(n.z.greaterThanEqual(0)),()=>{n.assign(a({start:i,end:n}))})});const c=PE.mul(n),u=PE.mul(i),h=c.xyz.div(c.w),d=u.xyz.div(u.w),p=d.xy.sub(h.xy).toVar();p.x.assign(p.x.mul(o)),p.assign(p.normalize());const m=dT().toVar();if(s){const e=i.xyz.sub(n.xyz).normalize(),t=zw(n.xyz,i.xyz,.5).normalize(),s=e.cross(t).normalize(),a=e.cross(s),o=ST("vec4","worldPos");o.assign(sA.y.lessThan(.5).select(n,i));const l=sC.mul(.5);o.addAssign(dT(sA.x.lessThan(0).select(s.mul(l),s.mul(l).negate()),0)),r||(o.addAssign(dT(sA.y.lessThan(.5).select(e.mul(l).negate(),e.mul(l)),0)),o.addAssign(dT(a.mul(l),0)),Q_(sA.y.greaterThan(1).or(sA.y.lessThan(0)),()=>{o.subAssign(dT(a.mul(2).mul(l),0))})),m.assign(PE.mul(o));const c=lT().toVar();c.assign(sA.y.lessThan(.5).select(h,d)),m.z.assign(c.z.mul(m.w))}else{const e=rT(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(o)),e.x.assign(e.x.div(o)),e.assign(sA.x.lessThan(0).select(e.negate(),e)),Q_(sA.y.lessThan(0),()=>{e.assign(e.sub(p))}).ElseIf(sA.y.greaterThan(1),()=>{e.assign(e.add(p))}),e.assign(e.mul(sC)),e.assign(e.div(SE.w)),m.assign(sA.y.lessThan(.5).select(c,u)),e.assign(e.mul(m.w)),m.assign(m.add(dT(e,0,0)))}return m})();const o=$_(({p1:e,p2:t,p3:n,p4:i})=>{const r=e.sub(n),s=i.sub(n),a=t.sub(e),o=r.dot(s),l=s.dot(a),c=r.dot(a),u=s.dot(s),h=a.dot(a).mul(u).sub(l.mul(l)),d=o.mul(l).sub(c.mul(u)).div(h).clamp(),p=o.add(l.mul(d)).div(u).clamp();return rT(d,p)});if(this.colorNode=$_(()=>{const e=eE();if(r){const t=this.dashSizeNode?eT(this.dashSizeNode):iC,n=this.gapSizeNode?eT(this.gapSizeNode):rC;HT.assign(t),WT.assign(n);const i=ST("float","lineDistance");e.y.lessThan(-1).or(e.y.greaterThan(1)).discard(),i.mod(HT.add(WT)).greaterThan(HT).discard()}const a=eT(1).toVar("alpha");if(s){const e=ST("vec3","worldStart"),i=ST("vec3","worldEnd"),s=ST("vec4","worldPos").xyz.normalize().mul(1e5),l=i.sub(e),c=o({p1:e,p2:i,p3:lT(0,0,0),p4:s}),u=e.add(l.mul(c.x)),h=s.mul(c.y),d=u.sub(h).length().div(sC);if(!r)if(n&&t.samples>1){const e=d.fwidth();a.assign(jw(e.negate().add(.5),e.add(.5),d).oneMinus())}else d.greaterThan(.5).discard()}else if(n&&t.samples>1){const t=e.x,n=e.y.greaterThan(0).select(e.y.sub(1),e.y.add(1)),i=t.mul(t).add(n.mul(n)),r=eT(i.fwidth()).toVar("dlen");Q_(e.y.abs().greaterThan(1),()=>{a.assign(jw(r.oneMinus(),r.add(1),i).oneMinus())})}else Q_(e.y.abs().greaterThan(1),()=>{const t=e.x,n=e.y.greaterThan(0).select(e.y.sub(1),e.y.add(1));t.mul(t).add(n.mul(n)).greaterThan(1).discard()});let l;if(this.lineColorNode)l=this.lineColorNode;else if(i){const e=JM("instanceColorStart"),t=JM("instanceColorEnd");l=sA.y.lessThan(.5).select(e,t).mul(CR)}else l=CR;return dT(l,a)})(),this.transparent){const e=this.opacityNode?eT(this.opacityNode):LR;this.outputNode=dT(this.colorNode.rgb.mul(e).add(RN().rgb.mul(e.oneMinus())),this.colorNode.a)}super.setup(e)}get worldUnits(){return this._useWorldUnits}set worldUnits(e){this._useWorldUnits!==e&&(this._useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this._useDash}set dashed(e){this._useDash!==e&&(this._useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}},Line3:Lh,LineBasicMaterial:io,LineBasicNodeMaterial:SN,LineCurve:sl,LineCurve3:al,LineDashedMaterial:vc,LineDashedNodeMaterial:MN,LineLoop:vo,LineSegments:go,LinearFilter:de,LinearInterpolant:Ec,LinearMipMapLinearFilter:fe,LinearMipMapNearestFilter:1007,LinearMipmapLinearFilter:me,LinearMipmapNearestFilter:pe,LinearSRGBColorSpace:Ot,LinearToneMapping:1,LinearTransfer:Bt,Loader:zc,LoaderUtils:yu,LoadingManager:kc,LoopNode:IC,LoopOnce:bt,LoopPingPong:xt,LoopRepeat:yt,MOUSE:i,MRTNode:cD,Material:Ar,MaterialLoader:bu,MaterialNode:AR,MaterialReferenceNode:XA,MathUtils:Sn,Matrix2:Th,Matrix3:Cn,Matrix4:Li,MaxEquation:x,MaxMipLevelNode:iE,MemberNode:o_,Mesh:ds,MeshBasicMaterial:Rr,MeshBasicNodeMaterial:jN,MeshDepthMaterial:mc,MeshDistanceMaterial:fc,MeshLambertMaterial:pc,MeshLambertNodeMaterial:ZN,MeshMatcapMaterial:gc,MeshMatcapNodeMaterial:JL,MeshNormalMaterial:dc,MeshNormalNodeMaterial:LN,MeshPhongMaterial:uc,MeshPhongNodeMaterial:eP,MeshPhysicalMaterial:cc,MeshPhysicalNodeMaterial:jL,MeshSSSNodeMaterial:class extends jL{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=eT(.1),this.thicknessAmbientNode=eT(0),this.thicknessAttenuationNode=eT(.1),this.thicknessPowerNode=eT(2),this.thicknessScaleNode=eT(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new XL(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}},MeshStandardMaterial:lc,MeshStandardNodeMaterial:HL,MeshToonMaterial:hc,MeshToonNodeMaterial:KL,MinEquation:y,MirroredRepeatWrapping:le,MixOperation:1,ModelNode:XE,MorphNode:kC,MultiplyBlending:4,MultiplyOperation:0,NearestFilter:ce,NearestMipMapLinearFilter:1005,NearestMipMapNearestFilter:1004,NearestMipmapLinearFilter:he,NearestMipmapNearestFilter:ue,NeutralToneMapping:7,NeverCompare:Yt,NeverDepth:0,NeverStencilFunc:512,NoBlending:0,NoColorSpace:Ft,NoToneMapping:0,Node:Yx,NodeAccess:Gx,NodeAttribute:Nk,NodeBuilder:rV,NodeCache:Uk,NodeCode:Dk,NodeFrame:sV,NodeFunctionInput:aV,NodeLoader:Vj,NodeMaterial:_N,NodeMaterialLoader:zj,NodeMaterialObserver:yx,NodeObjectLoader:class extends Tu{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const n=super.parse(e,t);return this._nodesJSON=null,n}parseNodes(e,t){if(void 0!==e){const n=new Vj;return n.setNodes(this.nodes),n.setTextures(t),n.parseNodes(e)}return{}}parseMaterials(e,t){const n={};if(void 0!==e){const i=this.parseNodes(this._nodesJSON,t),r=new zj;r.setTextures(t),r.setNodes(i),r.setNodeMaterials(this.nodeMaterials);for(let t=0,s=e.length;t<s;t++){const i=e[t];n[i.uuid]=r.parse(i)}}return n}},NodeShaderStage:kx,NodeType:zx,NodeUniform:Pk,NodeUpdateType:Vx,NodeUtils:Bx,NodeVar:Lk,NodeVarying:Ik,NormalAnimationBlendMode:At,NormalBlending:1,NormalMapNode:xR,NotEqualCompare:en,NotEqualDepth:7,NotEqualStencilFunc:517,NumberKeyframeTrack:Pc,Object3D:sr,Object3DNode:kE,ObjectLoader:Tu,ObjectSpaceNormalMap:1,OctahedronGeometry:$l,OneFactor:T,OneMinusConstantAlphaFactor:214,OneMinusConstantColorFactor:212,OneMinusDstAlphaFactor:R,OneMinusDstColorFactor:N,OneMinusSrcAlphaFactor:E,OneMinusSrcColorFactor:w,OrthographicCamera:hu,OutputStructNode:aD,PCFShadowMap:1,PCFSoftShadowMap:2,PMREMGenerator:RL,PMREMNode:UL,ParameterNode:tD,PassNode:BF,Path:dl,PerspectiveCamera:ws,PhongLightingModel:KN,PhysicalLightingModel:jP,Plane:Na,PlaneGeometry:Yl,PlaneHelper:rd,PointLight:uu,PointLightHelper:Vh,PointLightNode:JO,PointUVNode:lF,Points:So,PointsMaterial:bo,PointsNodeMaterial:aI,PolarGridHelper:Xh,PolyhedronGeometry:Bo,PositionalAudio:$u,PostProcessing:class{constructor(e,t=dT(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0;const n=new _N;n.name="PostProcessing",this._quadMesh=new KD(n),this._context=null}render(){const e=this.renderer;this._update(),null!==this._context.onBeforePostProcessing&&this._context.onBeforePostProcessing();const t=e.toneMapping,n=e.outputColorSpace;e.toneMapping=0,e.outputColorSpace=zn.workingColorSpace;const i=e.xr.enabled;e.xr.enabled=!1,this._quadMesh.render(e),e.xr.enabled=i,e.toneMapping=t,e.outputColorSpace=n,null!==this._context.onAfterPostProcessing&&this._context.onAfterPostProcessing()}get context(){return this._context}dispose(){this._quadMesh.material.dispose()}_update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,n=e.outputColorSpace,i={postProcessing:this,onBeforePostProcessing:null,onAfterPostProcessing:null};let r=this.outputNode;!0===this.outputColorTransform?(r=r.context(i),r=YM(r,t,n)):(i.toneMapping=t,i.outputColorSpace=n,r=r.context(i)),this._context=i,this._quadMesh.material.fragmentNode=r,this._quadMesh.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this._update(),null!==this._context.onBeforePostProcessing&&this._context.onBeforePostProcessing();const e=this.renderer,t=e.toneMapping,n=e.outputColorSpace;e.toneMapping=0,e.outputColorSpace=zn.workingColorSpace;const i=e.xr.enabled;e.xr.enabled=!1,await this._quadMesh.renderAsync(e),e.xr.enabled=i,e.toneMapping=t,e.outputColorSpace=n,null!==this._context.onAfterPostProcessing&&this._context.onAfterPostProcessing()}},PosterizeNode:IF,ProjectorLight:Oj,ProjectorLightNode:fV,PropertyBinding:ih,PropertyMixer:Ku,PropertyNode:_T,QuadMesh:KD,QuadraticBezierCurve:ol,QuadraticBezierCurve3:ll,Quaternion:Mn,QuaternionKeyframeTrack:Ic,QuaternionLinearInterpolant:Lc,RED_GREEN_RGTC2_Format:gt,RED_RGTC1_Format:mt,REVISION:n,RGBADepthPacking:It,RGBAFormat:Pe,RGBAIntegerFormat:ke,RGBA_ASTC_10x10_Format:lt,RGBA_ASTC_10x5_Format:st,RGBA_ASTC_10x6_Format:at,RGBA_ASTC_10x8_Format:ot,RGBA_ASTC_12x10_Format:ct,RGBA_ASTC_12x12_Format:ut,RGBA_ASTC_4x4_Format:Qe,RGBA_ASTC_5x4_Format:Ze,RGBA_ASTC_5x5_Format:Je,RGBA_ASTC_6x5_Format:et,RGBA_ASTC_6x6_Format:tt,RGBA_ASTC_8x5_Format:nt,RGBA_ASTC_8x6_Format:it,RGBA_ASTC_8x8_Format:rt,RGBA_BPTC_Format:ht,RGBA_ETC2_EAC_Format:Ke,RGBA_PVRTC_2BPPV1_Format:qe,RGBA_PVRTC_4BPPV1_Format:Xe,RGBA_S3TC_DXT1_Format:ze,RGBA_S3TC_DXT3_Format:Ge,RGBA_S3TC_DXT5_Format:He,RGBDepthPacking:3202,RGBFormat:Ne,RGBIntegerFormat:Be,RGB_BPTC_SIGNED_Format:dt,RGB_BPTC_UNSIGNED_Format:pt,RGB_ETC1_Format:$e,RGB_ETC2_Format:Ye,RGB_PVRTC_2BPPV1_Format:je,RGB_PVRTC_4BPPV1_Format:We,RGB_S3TC_DXT1_Format:Ve,RGDepthPacking:3203,RGFormat:Ue,RGIntegerFormat:Oe,RTTNode:ZD,RangeNode:pU,RawShaderMaterial:oc,Ray:Pi,Raycaster:fh,RectAreaLight:fu,RectAreaLightNode:hV,RedFormat:De,RedIntegerFormat:Fe,ReferenceNode:HA,ReflectorNode:jD,ReinhardToneMapping:2,RemapNode:GM,RenderOutputNode:$M,RenderTarget:Jn,RenderTarget3D:lh,RendererReferenceNode:MM,RendererUtils:TO,RepeatWrapping:ae,ReplaceStencilOp:zt,ReverseSubtractEquation:b,RingGeometry:Kl,RotateNode:eI,SIGNED_RED_GREEN_RGTC2_Format:vt,SIGNED_RED_RGTC1_Format:ft,SRGBColorSpace:Ut,SRGBTransfer:kt,Scene:Ds,SceneNode:dF,ScreenNode:bE,ScriptableNode:sU,ScriptableValueNode:eU,SetNode:n_,ShaderMaterial:ys,ShadowBaseNode:dO,ShadowMaterial:ac,ShadowNode:BO,ShadowNodeMaterial:uI,Shape:pl,ShapeGeometry:Ql,ShapePath:ud,ShapeUtils:zl,ShortType:be,Skeleton:va,SkeletonHelper:Bh,SkinnedMesh:da,SkinningNode:PC,Source:qn,Sphere:Si,SphereGeometry:Zl,Spherical:xh,SphericalHarmonics3:gu,SplineCurve:cl,SplitNode:t_,SpotLight:su,SpotLightHelper:Dh,SpotLightNode:dV,Sprite:Zs,SpriteMaterial:Bs,SpriteNodeMaterial:iI,SpriteSheetUVNode:RD,SrcAlphaFactor:M,SrcAlphaSaturateFactor:P,SrcColorFactor:S,StackNode:nD,StaticCopyUsage:35046,StaticDrawUsage:rn,StaticReadUsage:35045,StereoCamera:Du,Storage3DTexture:class extends Qn{constructor(e=1,t=1,n=1){super(),this.isArrayTexture=!1,this.image={width:e,height:t,depth:n},this.magFilter=de,this.minFilter=de,this.wrapR=oe,this.isStorageTexture=!0,this.is3DTexture=!0}setSize(e,t,n){this.image.width===e&&this.image.height===t&&this.image.depth===n||(this.image.width=e,this.image.height=t,this.image.depth=n,this.dispose())}},StorageArrayElementNode:EC,StorageArrayTexture:class extends Qn{constructor(e=1,t=1,n=1){super(),this.isArrayTexture=!0,this.image={width:e,height:t,depth:n},this.magFilter=de,this.minFilter=de,this.isStorageTexture=!0}setSize(e,t,n){this.image.width===e&&this.image.height===t&&this.image.depth===n||(this.image.width=e,this.image.height=t,this.image.depth=n,this.dispose())}},StorageBufferAttribute:oF,StorageBufferNode:RC,StorageInstancedBufferAttribute:aF,StorageTexture:class extends Qn{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=de,this.minFilter=de,this.isStorageTexture=!0}setSize(e,t){this.image.width===e&&this.image.height===t||(this.image.width=e,this.image.height=t,this.dispose())}},StorageTextureNode:gF,StreamCopyUsage:35042,StreamDrawUsage:35040,StreamReadUsage:35041,StringKeyframeTrack:Dc,StructNode:sD,StructTypeNode:rD,SubBuildNode:dM,SubtractEquation:v,SubtractiveBlending:3,TOUCH:r,TSL:wk,TangentSpaceNormalMap:0,TempNode:Zx,TetrahedronGeometry:Jl,Texture:Qn,Texture3DNode:yF,TextureLoader:Qc,TextureNode:aE,TextureSizeNode:tE,TextureUtils:pd,Timer:bh,TimestampQuery:cn,ToneMappingNode:AM,ToonOutlinePassNode:kF,TorusGeometry:ec,TorusKnotGeometry:tc,Triangle:yr,TriangleFanDrawMode:2,TriangleStripDrawMode:1,TrianglesDrawMode:0,TubeGeometry:nc,UVMapping:ee,Uint16BufferAttribute:Gr,Uint32BufferAttribute:Wr,Uint8BufferAttribute:kr,Uint8ClampedBufferAttribute:Vr,Uniform:ch,UniformArrayNode:pE,UniformGroupNode:ZT,UniformNode:rS,UniformsGroup:hh,UnsignedByteType:ge,UnsignedInt101111Type:Re,UnsignedInt248Type:Ee,UnsignedInt5999Type:Ae,UnsignedIntType:_e,UnsignedShort4444Type:we,UnsignedShort5551Type:Me,UnsignedShortType:ye,UserDataNode:_F,VSMShadowMap:3,VarNode:oM,VaryingNode:mM,Vector2:wn,Vector3:En,Vector4:Zn,VectorKeyframeTrack:Fc,VertexColorNode:dN,VideoFrameTexture:Eo,VideoTexture:Mo,ViewportDepthNode:JC,ViewportDepthTextureNode:QC,ViewportSharedTextureNode:AN,ViewportTextureNode:qC,VolumeNodeMaterial:class extends _N{static get type(){return"VolumeNodeMaterial"}constructor(e){super(),this.isVolumeNodeMaterial=!0,this.steps=25,this.offsetNode=null,this.scatteringNode=null,this.lights=!0,this.transparent=!0,this.side=1,this.depthTest=!1,this.depthWrite=!1,this.setValues(e)}setupLightingModel(){return new mI}},WebGL3DRenderTarget:ri,WebGLArrayRenderTarget:ni,WebGLCoordinateSystem:on,WebGLCubeRenderTarget:Rs,WebGLRenderTarget:ei,WebGPUCoordinateSystem:ln,WebGPURenderer:kj,WebXRController:Ps,WireframeGeometry:ic,WrapAroundEnding:Et,ZeroCurvatureEnding:wt,ZeroFactor:_,ZeroSlopeEnding:Mt,ZeroStencilOp:0,createCanvasElement:Fn,defaultBuildStages:Wx,defaultShaderStages:Hx,shaderStages:jx,vectorComponents:Xx},Symbol.toStringTag,{value:"Module"}));var Hj=function(){var e=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,3,2,0,0,5,3,1,0,1,12,1,0,10,22,2,12,0,65,0,65,0,65,0,252,10,0,0,11,7,0,65,0,253,15,26,11]),t=new Uint8Array([32,0,65,2,1,106,34,33,3,128,11,4,13,64,6,253,10,7,15,116,127,5,8,12,40,16,19,54,20,9,27,255,113,17,42,67,24,23,146,148,18,14,22,45,70,69,56,114,101,21,25,63,75,136,108,28,118,29,73,115]);if("object"!=typeof WebAssembly)return{supported:!1};var n,i=WebAssembly.validate(e)?s("b9H79TebbbeKl9Gbb9Gvuuuuueu9Giuuub9Geueuikqbbebeedddilve9Weeeviebeoweuec:q:6dkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbdY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVblE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtboK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbrL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbwl79IV9RbDq:p9sqlbzik9:evu8Jjjjjbcz9Rhbcbheincbhdcbhiinabcwfadfaicjuaead4ceGglE86bbaialfhiadcefgdcw9hmbkaec:q:yjjbfai86bbaecitc:q1jjbfab8Piw83ibaecefgecjd9hmbkk:N8JlHud97euo978Jjjjjbcj;kb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Rad;8qbbcj;abad9UhlaicefhodnaeTmbadTmbalc;WFbGglcjdalcjd6EhwcbhDinawaeaD9RaDawfae6Egqcsfglc9WGgkci2hxakcethmalcl4cifcd4hPabaDad2fhsakc;ab6hzcbhHincbhOaohAdndninaraA9RaP6meavcj;cbfaOak2fhCaAaPfhocbhidnazmbarao9Rc;Gb6mbcbhlinaCalfhidndndndndnaAalco4fRbbgXciGPlbedibkaipxbbbbbbbbbbbbbbbbpklbxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklbaoczfhokdndndndndnaXcd4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklzxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklzaoczfhokdndndndndnaXcl4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklaxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaiaopbbbpklaaoczfhokdndndndndnaXco4Plbedibkaipxbbbbbbbbbbbbbbbbpkl8WxikaiaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaoclfaYpQbfaXc:q:yjjbfRbbfhoxdkaiaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WaocwfaYpQbfaXc:q:yjjbfRbbfhoxekaiaopbbbpkl8Waoczfhokalc;abfhialcjefak0meaihlarao9Rc;Fb0mbkkdnaiak9pmbaici4hlinarao9RcK6miaCaifhXdndndndndnaAaico4fRbbalcoG4ciGPlbedibkaXpxbbbbbbbbbbbbbbbbpkbbxikaXaopbblaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaoclfaYpQbfaKc:q:yjjbfRbbfhoxdkaXaopbbwaopbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkbbaocwfaYpQbfaKc:q:yjjbfRbbfhoxekaXaopbbbpkbbaoczfhokalcdfhlaiczfgiak6mbkkaoTmeaohAaOcefgOclSmdxbkkc9:hoxlkdnakTmbavcjdfaHfhiavaHfpbdbhYcbhXinaiavcj;cbfaXfglpblbgLcep9TaLpxeeeeeeeeeeeeeeeegQp9op9Hp9rgLalakfpblbg8Acep9Ta8AaQp9op9Hp9rg8ApmbzeHdOiAlCvXoQrLgEalamfpblbg3cep9Ta3aQp9op9Hp9rg3alaxfpblbg5cep9Ta5aQp9op9Hp9rg5pmbzeHdOiAlCvXoQrLg8EpmbezHdiOAlvCXorQLgQaQpmbedibedibedibediaYp9UgYp9AdbbaiadfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaEa8EpmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwKDYq8AkEx3m5P8Es8FgLa3a5pmwKDYq8AkEx3m5P8Es8Fg8ApmbezHdiOAlvCXorQLgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfglaYaLa8ApmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaladfglaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaladfglaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaladfglaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaladfhiaXczfgXak6mbkkaHclfgHad6mbkasavcjdfaqad2;8qbbavavcjdfaqcufad2fad;8qbbaqaDfgDae6mbkkcbc99arao9Radcaadca0ESEhokavcj;kbf8Kjjjjbaokwbz:bjjjbk::seHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecje;8kbavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:wPliuo97eue978Jjjjjbca9Rhiaec98Ghldndnadcl9hmbdnalTmbcbhvabhdinadadpbbbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDpxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpkbbadczfhdavclfgval6mbkkalaeSmeaipxbbbbbbbbbbbbbbbbgqpklbaiabalcdtfgdaeciGglcdtgv;8qbbdnalTmbaiaipblbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDaqp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpklbkadaiav;8qbbskdnalTmbcbhvabhdinadczfgxaxpbbbgopxbbbbbbFFbbbbbbFFgkp9oadpbbbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpkbbadaDakp9oaoarpmbezHdiOAlvCXorQLp9qpkbbadcafhdavclfgval6mbkkalaeSmbaiaeciGgvcitgdfcbcaad9R;8kbaiabalcitfglad;8qbbdnavTmbaiaipblzgopxbbbbbbFFbbbbbbFFgkp9oaipblbgDaopmbediwDqkzHOAKY8AEgwczp:Reczp:Sep;6egraDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eawczp:Sep;6egwp;Gearp;Gep;Kep;Legopxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegrpxb;:FSb;:FSb;:FSb;:FSararp;Meaoaop;Meawaqawamp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFFbbFFbbFFbbFFbbp9oaoawp;Meaqp;Keczp:Rep9qgoarawp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogrpmwDKYqk8AExm35Ps8E8Fp9qpklzaiaDakp9oaoarpmbezHdiOAlvCXorQLp9qpklbkalaiad;8qbbkk;4wllue97euv978Jjjjjbc8W9Rhidnaec98GglTmbcbhvabhoinaiaopbbbgraoczfgwpbbbgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklbaopxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblbpEb:T:j83ibaocwfarp5eaipblbpEe:T:j83ibawaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblbpEd:T:j83ibaocKfakp5eaipblbpEi:T:j83ibaocafhoavclfgval6mbkkdnalaeSmbaiaeciGgvcitgofcbcaao9R;8kbaiabalcitfgwao;8qbbdnavTmbaiaipblbgraipblzgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklaaipxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaDakp;Mearp;Keamp9oaqakp;Mearp;Keczp:Rep9qgkpmbezHdiOAlvCXorQLgrp5baipblapEb:T:j83ibaiarp5eaipblapEe:T:j83iwaiaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblapEd:T:j83izaiakp5eaipblapEi:T:j83iKkawaiao;8qbbkk:Pddiue978Jjjjjbc;ab9Rhidnadcd4ae2glc98GgvTmbcbheabhdinadadpbbbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepkbbadczfhdaeclfgeav6mbkkdnavalSmbaialciGgecdtgdVcbc;abad9R;8kbaiabavcdtfgvad;8qbbdnaeTmbaiaipblbgocwp:Recwp:Sep;6eaocep:SepxbbjFbbjFbbjFbbjFp9opxbbjZbbjZbbjZbbjZp:Uep;Mepklbkavaiad;8qbbkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaikkkebcjwklz:Dbb"):s("b9H79Tebbbe8Fv9Gbb9Gvuuuuueu9Giuuub9Geueu9Giuuueuikqbeeedddillviebeoweuec:q:Odkr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbeY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVbdE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbiL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtblK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbol79IV9Rbrq;w8Wqdbk;esezu8Jjjjjbcj;eb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Radz1jjjbhwcj;abad9Uc;WFbGgocjdaocjd6EhDaicefhocbhqdnindndndnaeaq9nmbaDaeaq9RaqaDfae6Egkcsfglcl4cifcd4hxalc9WGgmTmecbhPawcjdfhsaohzinaraz9Rax6mvarazaxfgo9RcK6mvczhlcbhHinalgic9WfgOawcj;cbffhldndndndndnazaOco4fRbbaHcoG4ciGPlbedibkal9cb83ibalcwf9cb83ibxikalaoRblaoRbbgOco4gAaAciSgAE86bbawcj;cbfaifglcGfaoclfaAfgARbbaOcl4ciGgCaCciSgCE86bbalcVfaAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc7faAaCfgARbbaOciGgOaOciSgOE86bbalctfaAaOfgARbbaoRbegOco4gCaCciSgCE86bbalc91faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc4faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc93faAaCfgARbbaOciGgOaOciSgOE86bbalc94faAaOfgARbbaoRbdgOco4gCaCciSgCE86bbalc95faAaCfgARbbaOcl4ciGgCaCciSgCE86bbalc96faAaCfgARbbaOcd4ciGgCaCciSgCE86bbalc97faAaCfgARbbaOciGgOaOciSgOE86bbalc98faAaOfgORbbaoRbigoco4gAaAciSgAE86bbalc99faOaAfgORbbaocl4ciGgAaAciSgAE86bbalc9:faOaAfgORbbaocd4ciGgAaAciSgAE86bbalcufaOaAfglRbbaociGgoaociSgoE86bbalaofhoxdkalaoRbwaoRbbgOcl4gAaAcsSgAE86bbawcj;cbfaifglcGfaocwfaAfgARbbaOcsGgOaOcsSgOE86bbalcVfaAaOfgORbbaoRbegAcl4gCaCcsSgCE86bbalc7faOaCfgORbbaAcsGgAaAcsSgAE86bbalctfaOaAfgORbbaoRbdgAcl4gCaCcsSgCE86bbalc91faOaCfgORbbaAcsGgAaAcsSgAE86bbalc4faOaAfgORbbaoRbigAcl4gCaCcsSgCE86bbalc93faOaCfgORbbaAcsGgAaAcsSgAE86bbalc94faOaAfgORbbaoRblgAcl4gCaCcsSgCE86bbalc95faOaCfgORbbaAcsGgAaAcsSgAE86bbalc96faOaAfgORbbaoRbvgAcl4gCaCcsSgCE86bbalc97faOaCfgORbbaAcsGgAaAcsSgAE86bbalc98faOaAfgORbbaoRbogAcl4gCaCcsSgCE86bbalc99faOaCfgORbbaAcsGgAaAcsSgAE86bbalc9:faOaAfgORbbaoRbrgocl4gAaAcsSgAE86bbalcufaOaAfglRbbaocsGgoaocsSgoE86bbalaofhoxekalao8Pbb83bbalcwfaocwf8Pbb83bbaoczfhokdnaiam9pmbaHcdfhHaiczfhlarao9RcL0mekkaiam6mvaoTmvdnakTmbawaPfRbbhHawcj;cbfhlashiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkkascefhsaohzaPcefgPad9hmbxikkcbc99arao9Radcaadca0ESEhoxlkaoaxad2fhCdnakmbadhlinaoTmlarao9Rax6mlaoaxfhoalcufglmbkaChoxekcbhmawcjdfhAinarao9Rax6miawamfRbbhHawcj;cbfhlaAhiakhOinaialRbbgzce4cbazceG9R7aHfgH86bbaiadfhialcefhlaOcufgOmbkaAcefhAaoaxfhoamcefgmad9hmbkaChokabaqad2fawcjdfakad2z1jjjb8Aawawcjdfakcufad2fadz1jjjb8Aakaqfhqaombkc9:hoxekc9:hokavcj;ebf8Kjjjjbaok;cseHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgwce0mbavc;abfcFecjez:jjjjb8AavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhDaicefgqarfhidnaeTmbcmcsawceSEhkcbhxcbhmcbhPcbhwcbhlindnaiaD9nmbc9:hoxikdndnaqRbbgoc;Ve0mbavc;abfalaocu7gscl4fcsGcitfgzydlhrazydbhzdnaocsGgHak9pmbavawasfcsGcdtfydbaxaHEhoaHThsdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkaxasfhxcdhHavawcdtfaoBdbawasfhwcehsalhOxdkdndnaHcsSmbaHc987aHamffcefhoxekaicefhoai8SbbgHcFeGhsdndnaHcu9mmbaohixekaicvfhiascFbGhscrhHdninao8SbbgOcFbGaHtasVhsaOcu9kmeaocefhoaHcrfgHc8J9hmbxdkkaocefhikasce4cbasceG9R7amfhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhHavawcdtfaoBdbcehsawcefhwalhOaohmxekdnaocpe0mbaxcefgHavawaDaocsGfRbbgocl49RcsGcdtfydbaocz6gzEhravawao9RcsGcdtfydbaHazfgAaocsGgHEhoaHThCdndnadcd9hmbabaPcetfgHax87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHaxBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfaxBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgOaxBdlaOarBdbavawazfgwcsGcdtfaoBdbalcefcsGhOawaCfhwaxhzaAaCfhxxekaxcbaiRbbgOEgzaoc;:eSgHfhraOcsGhCaOcl4hAdndnaOcs0mbarcefhoxekarhoavawaA9RcsGcdtfydbhrkdndnaCmbaocefhxxekaohxavawaO9RcsGcdtfydbhokdndnaHTmbaicefhHxekaicdfhHai8SbegscFeGhzdnascu9kmbaicofhXazcFbGhzcrhidninaH8SbbgscFbGaitazVhzascu9kmeaHcefhHaicrfgic8J9hmbkaXhHxekaHcefhHkazce4cbazceG9R7amfgmhzkdndnaAcsSmbaHhsxekaHcefhsaH8SbbgicFeGhrdnaicu9kmbaHcvfhXarcFbGhrcrhidninas8SbbgHcFbGaitarVhraHcu9kmeascefhsaicrfgic8J9hmbkaXhsxekascefhskarce4cbarceG9R7amfgmhrkdndnaCcsSmbashixekascefhias8SbbgocFeGhHdnaocu9kmbascvfhXaHcFbGhHcrhodninai8SbbgscFbGaotaHVhHascu9kmeaicefhiaocrfgoc8J9hmbkaXhixekaicefhikaHce4cbaHceG9R7amfgmhokdndnadcd9hmbabaPcetfgHaz87ebaHclfao87ebaHcdfar87ebxekabaPcdtfgHazBdbaHcwfaoBdbaHclfarBdbkcdhsavawcdtfazBdbavawcefgwcsGcdtfarBdbcihHavc;abfalcitfgXazBdlaXarBdbavawaOcz6aAcsSVfgwcsGcdtfaoBdbawaCTaCcsSVfhwalcefcsGhOkaqcefhqavc;abfaOcitfgOarBdlaOaoBdbavc;abfalasfcsGcitfgraoBdlarazBdbawcsGhwalaHfcsGhlaPcifgPae6mbkkcbc99aiaDSEhokavc;aef8Kjjjjbaok:flevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaic8Etc8F91aicd47avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:Lvoeue99dud99eud99dndnadcl9hmbaeTmeindndnabcdfgd8Sbb:Yab8Sbbgi:Ygl:l:tabcefgv8Sbbgo:Ygr:l:tgwJbb;:9cawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai86bbdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad86bbdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad86bbabclfhbaecufgembxdkkaeTmbindndnabclfgd8Ueb:Yab8Uebgi:Ygl:l:tabcdfgv8Uebgo:Ygr:l:tgwJb;:FSawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai87ebdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad87ebdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad87ebabcwfhbaecufgembkkk;oiliui99iue99dnaeTmbcbhiabhlindndnJ;Zl81Zalcof8UebgvciV:Y:vgoal8Ueb:YNgrJb;:FSNJbbbZJbbb:;arJbbbb9GEMgw:lJbbb9p9DTmbaw:OhDxekcjjjj94hDkalclf8Uebhqalcdf8UebhkabaiavcefciGfcetfaD87ebdndnaoak:YNgwJb;:FSNJbbbZJbbb:;awJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavciGfgkcd7cetfaD87ebdndnaoaq:YNgoJb;:FSNJbbbZJbbb:;aoJbbbb9GEMgx:lJbbb9p9DTmbax:OhDxekcjjjj94hDkabaiavcufciGfcetfaD87ebdndnJbbjZararN:tawawN:taoaoN:tgrJbbbbarJbbbb9GE:rJb;:FSNJbbbZMgr:lJbbb9p9DTmbar:Ohvxekcjjjj94hvkabakcetfav87ebalcwfhlaiclfhiaecufgembkkk9mbdnadcd4ae2gdTmbinababydbgecwtcw91:Yaece91cjjj98Gcjjj;8if::NUdbabclfhbadcufgdmbkkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaik;LeeeudndnaeabVciGTmbabhixekdndnadcz9pmbabhixekabhiinaiaeydbBdbaiclfaeclfydbBdbaicwfaecwfydbBdbaicxfaecxfydbBdbaeczfheaiczfhiadc9Wfgdcs0mbkkadcl6mbinaiaeydbBdbaeclfheaiclfhiadc98fgdci0mbkkdnadTmbinaiaeRbb86bbaicefhiaecefheadcufgdmbkkabk;aeedudndnabciGTmbabhixekaecFeGc:b:c:ew2hldndnadcz9pmbabhixekabhiinaialBdbaicxfalBdbaicwfalBdbaiclfalBdbaiczfhiadc9Wfgdcs0mbkkadcl6mbinaialBdbaiclfhiadc98fgdci0mbkkdnadTmbinaiae86bbaicefhiadcufgdmbkkabkkkebcjwklzNbb"),r=WebAssembly.instantiate(i,{}).then(function(e){(n=e.instance).exports.__wasm_call_ctors()});function s(e){for(var n=new Uint8Array(e.length),i=0;i<e.length;++i){var r=e.charCodeAt(i);n[i]=r>96?r-97:r>64?r-39:r+4}var s=0;for(i=0;i<e.length;++i)n[s++]=n[i]<60?t[n[i]]:64*(n[i]-60)+n[++i];return n.buffer.slice(0,s)}function a(e,t,n,i,r,s,a){var o=e.exports.sbrk,l=i+3&-4,c=o(l*r),u=o(s.length),h=new Uint8Array(e.exports.memory.buffer);h.set(s,u);var d=t(c,i,r,u,s.length);if(0==d&&a&&a(c,l,r),n.set(h.subarray(c,c+i*r)),o(c-o(0)),0!=d)throw new Error("Malformed buffer data: "+d)}var o={NONE:"",OCTAHEDRAL:"meshopt_decodeFilterOct",QUATERNION:"meshopt_decodeFilterQuat",EXPONENTIAL:"meshopt_decodeFilterExp"},l={ATTRIBUTES:"meshopt_decodeVertexBuffer",TRIANGLES:"meshopt_decodeIndexBuffer",INDICES:"meshopt_decodeIndexSequence"},c=[],u=0;function h(e){var t={object:new Worker(e),pending:0,requests:{}};return t.object.onmessage=function(e){var n=e.data;t.pending-=n.count,t.requests[n.id][n.action](n.value),delete t.requests[n.id]},t}function d(e){var t=e.data;if(!t.id)return self.close();self.ready.then(function(e){try{var n=new Uint8Array(t.count*t.size);a(e,e.exports[t.mode],n,t.count,t.size,t.source,e.exports[t.filter]),self.postMessage({id:t.id,count:t.count,action:"resolve",value:n},[n.buffer])}catch(i){self.postMessage({id:t.id,count:t.count,action:"reject",value:i})}})}return{ready:r,supported:!0,useWorkers:function(e){!function(e){for(var t="self.ready = WebAssembly.instantiate(new Uint8Array(["+new Uint8Array(i)+"]), {}).then(function(result) { result.instance.exports.__wasm_call_ctors(); return result.instance; });self.onmessage = "+d.name+";"+a.toString()+d.toString(),n=new Blob([t],{type:"text/javascript"}),r=URL.createObjectURL(n),s=c.length;s<e;++s)c[s]=h(r);for(s=e;s<c.length;++s)c[s].object.postMessage({});c.length=e,URL.revokeObjectURL(r)}(e)},decodeVertexBuffer:function(e,t,i,r,s){a(n,n.exports.meshopt_decodeVertexBuffer,e,t,i,r,n.exports[o[s]])},decodeIndexBuffer:function(e,t,i,r){a(n,n.exports.meshopt_decodeIndexBuffer,e,t,i,r)},decodeIndexSequence:function(e,t,i,r){a(n,n.exports.meshopt_decodeIndexSequence,e,t,i,r)},decodeGltfBuffer:function(e,t,i,r,s,c){a(n,n.exports[l[s]],e,t,i,r,n.exports[o[c]])},decodeGltfBufferAsync:function(e,t,i,s,h){return c.length>0?function(e,t,n,i,r){for(var s=c[0],a=1;a<c.length;++a)c[a].pending<s.pending&&(s=c[a]);return new Promise(function(a,o){var l=new Uint8Array(n),c=++u;s.pending+=e,s.requests[c]={resolve:a,reject:o},s.object.postMessage({id:c,count:e,size:t,source:l,mode:i,filter:r},[l.buffer])})}(e,t,i,l[s],o[h]):r.then(function(){var r=new Uint8Array(e*t);return a(n,n.exports[l[s]],r,e,t,i,n.exports[o[h]]),r})}}}();
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Wj=wk.BRDF_GGX,jj=wk.BRDF_Lambert,Xj=wk.BasicPointShadowFilter,qj=wk.BasicShadowFilter,$j=wk.Break,Yj=wk.Const,Kj=wk.Continue,Qj=wk.DFGApprox,Zj=wk.D_GGX,Jj=wk.Discard,eX=wk.EPSILON,tX=wk.F_Schlick,nX=wk.Fn,iX=wk.INFINITY,rX=wk.If,sX=wk.Loop,aX=wk.NodeAccess,oX=wk.NodeShaderStage,lX=wk.NodeType,cX=wk.NodeUpdateType,uX=wk.PCFShadowFilter,hX=wk.PCFSoftShadowFilter,dX=wk.PI,pX=wk.PI2,mX=wk.PointShadowFilter,fX=wk.Return,gX=wk.Schlick_to_F0,vX=wk.ScriptableNodeResources,bX=wk.ShaderNode,yX=wk.Stack,xX=wk.Switch,_X=wk.TBNViewMatrix,TX=wk.VSMShadowFilter,SX=wk.V_GGX_SmithCorrelated,wX=wk.Var,MX=wk.VarIntent,EX=wk.abs,AX=wk.acesFilmicToneMapping,RX=wk.acos,CX=wk.add,NX=wk.addMethodChaining,PX=wk.addNodeElement,LX=wk.agxToneMapping,IX=wk.all,DX=wk.alphaT,FX=wk.and,UX=wk.anisotropy,OX=wk.anisotropyB,BX=wk.anisotropyT,kX=wk.any,VX=wk.append,zX=wk.array,GX=wk.arrayBuffer,HX=wk.asin,WX=wk.assign,jX=wk.atan,XX=wk.atan2,qX=wk.atomicAdd,$X=wk.atomicAnd,YX=wk.atomicFunc,KX=wk.atomicLoad,QX=wk.atomicMax,ZX=wk.atomicMin,JX=wk.atomicOr,eq=wk.atomicStore,tq=wk.atomicSub,nq=wk.atomicXor,iq=wk.attenuationColor,rq=wk.attenuationDistance,sq=wk.attribute,aq=wk.attributeArray,oq=wk.backgroundBlurriness,lq=wk.backgroundIntensity,cq=wk.backgroundRotation,uq=wk.batch,hq=wk.bentNormalView,dq=wk.billboarding,pq=wk.bitAnd,mq=wk.bitNot,fq=wk.bitOr,gq=wk.bitXor,vq=wk.bitangentGeometry,bq=wk.bitangentLocal,yq=wk.bitangentView,xq=wk.bitangentWorld,_q=wk.bitcast,Tq=wk.blendBurn,Sq=wk.blendColor,wq=wk.blendDodge,Mq=wk.blendOverlay,Eq=wk.blendScreen,Aq=wk.blur,Rq=wk.bool,Cq=wk.buffer,Nq=wk.bufferAttribute,Pq=wk.bumpMap,Lq=wk.burn,Iq=wk.builtin,Dq=wk.bvec2,Fq=wk.bvec3,Uq=wk.bvec4,Oq=wk.bypass,Bq=wk.cache,kq=wk.call,Vq=wk.cameraFar,zq=wk.cameraIndex,Gq=wk.cameraNear,Hq=wk.cameraNormalMatrix,Wq=wk.cameraPosition,jq=wk.cameraProjectionMatrix,Xq=wk.cameraProjectionMatrixInverse,qq=wk.cameraViewMatrix,$q=wk.cameraViewport,Yq=wk.cameraWorldMatrix,Kq=wk.cbrt,Qq=wk.cdl,Zq=wk.ceil,Jq=wk.checker,e$=wk.cineonToneMapping,t$=wk.clamp,n$=wk.clearcoat,i$=wk.clearcoatNormalView,r$=wk.clearcoatRoughness,s$=wk.code,a$=wk.color,o$=wk.colorSpaceToWorking,l$=wk.colorToDirection,c$=wk.compute,u$=wk.computeKernel,h$=wk.computeSkinning,d$=wk.context,p$=wk.convert,m$=wk.convertColorSpace,f$=wk.convertToTexture,g$=wk.cos,v$=wk.cross,b$=wk.cubeTexture,y$=wk.cubeTextureBase,x$=wk.cubeToUV,_$=wk.dFdx,T$=wk.dFdy,S$=wk.dashSize,w$=wk.debug,M$=wk.decrement,E$=wk.decrementBefore,A$=wk.defaultBuildStages,R$=wk.defaultShaderStages,C$=wk.defined,N$=wk.degrees,P$=wk.deltaTime,L$=wk.densityFog,I$=wk.densityFogFactor,D$=wk.depth,F$=wk.depthPass,U$=wk.determinant,O$=wk.difference,B$=wk.diffuseColor,k$=wk.directPointLight,V$=wk.directionToColor,z$=wk.directionToFaceDirection,G$=wk.dispersion,H$=wk.distance,W$=wk.div,j$=wk.dodge,X$=wk.dot,q$=wk.drawIndex,$$=wk.dynamicBufferAttribute,Y$=wk.element,K$=wk.emissive,Q$=wk.equal,Z$=wk.equals,J$=wk.equirectUV,eY=wk.exp,tY=wk.exp2,nY=wk.expression,iY=wk.faceDirection,rY=wk.faceForward,sY=wk.faceforward,aY=wk.float,oY=wk.floatBitsToInt,lY=wk.floatBitsToUint,cY=wk.floor,uY=wk.fog,hY=wk.fract,dY=wk.frameGroup,pY=wk.frameId,mY=wk.frontFacing,fY=wk.fwidth,gY=wk.gain,vY=wk.gapSize,bY=wk.getConstNodeType,yY=wk.getCurrentStack,xY=wk.getDirection,_Y=wk.getDistanceAttenuation,TY=wk.getGeometryRoughness,SY=wk.getNormalFromDepth,wY=wk.getParallaxCorrectNormal,MY=wk.getRoughness,EY=wk.getScreenPosition,AY=wk.getShIrradianceAt,RY=wk.getShadowMaterial,CY=wk.getShadowRenderObjectFunction,NY=wk.getTextureIndex,PY=wk.getViewPosition,LY=wk.globalId,IY=wk.glsl,DY=wk.glslFn,FY=wk.grayscale,UY=wk.greaterThan,OY=wk.greaterThanEqual,BY=wk.hash,kY=wk.highpModelNormalViewMatrix,VY=wk.highpModelViewMatrix,zY=wk.hue,GY=wk.increment,HY=wk.incrementBefore,WY=wk.instance,jY=wk.instanceIndex,XY=wk.instancedArray,qY=wk.instancedBufferAttribute,$Y=wk.instancedDynamicBufferAttribute,YY=wk.instancedMesh,KY=wk.int,QY=wk.intBitsToFloat,ZY=wk.inverse,JY=wk.inverseSqrt,eK=wk.inversesqrt,tK=wk.invocationLocalIndex,nK=wk.invocationSubgroupIndex,iK=wk.ior,rK=wk.iridescence,sK=wk.iridescenceIOR,aK=wk.iridescenceThickness,oK=wk.ivec2,lK=wk.ivec3,cK=wk.ivec4,uK=wk.js,hK=wk.label,dK=wk.length,pK=wk.lengthSq,mK=wk.lessThan,fK=wk.lessThanEqual,gK=wk.lightPosition,vK=wk.lightProjectionUV,bK=wk.lightShadowMatrix,yK=wk.lightTargetDirection,xK=wk.lightTargetPosition,_K=wk.lightViewPosition,TK=wk.lightingContext,SK=wk.lights,wK=wk.linearDepth,MK=wk.linearToneMapping,EK=wk.localId,AK=wk.log,RK=wk.log2,CK=wk.logarithmicDepthToViewZ,NK=wk.luminance,PK=wk.mat2,LK=wk.mat3,IK=wk.mat4,DK=wk.matcapUV,FK=wk.materialAO,UK=wk.materialAlphaTest,OK=wk.materialAnisotropy,BK=wk.materialAnisotropyVector,kK=wk.materialAttenuationColor,VK=wk.materialAttenuationDistance,zK=wk.materialClearcoat,GK=wk.materialClearcoatNormal,HK=wk.materialClearcoatRoughness,WK=wk.materialColor,jK=wk.materialDispersion,XK=wk.materialEmissive,qK=wk.materialEnvIntensity,$K=wk.materialEnvRotation,YK=wk.materialIOR,KK=wk.materialIridescence,QK=wk.materialIridescenceIOR,ZK=wk.materialIridescenceThickness,JK=wk.materialLightMap,eQ=wk.materialLineDashOffset,tQ=wk.materialLineDashSize,nQ=wk.materialLineGapSize,iQ=wk.materialLineScale,rQ=wk.materialLineWidth,sQ=wk.materialMetalness,aQ=wk.materialNormal,oQ=wk.materialOpacity,lQ=wk.materialPointSize,cQ=wk.materialReference,uQ=wk.materialReflectivity,hQ=wk.materialRefractionRatio,dQ=wk.materialRotation,pQ=wk.materialRoughness,mQ=wk.materialSheen,fQ=wk.materialSheenRoughness,gQ=wk.materialShininess,vQ=wk.materialSpecular,bQ=wk.materialSpecularColor,yQ=wk.materialSpecularIntensity,xQ=wk.materialSpecularStrength,_Q=wk.materialThickness,TQ=wk.materialTransmission,SQ=wk.max,wQ=wk.maxMipLevel,MQ=wk.mediumpModelViewMatrix,EQ=wk.metalness,AQ=wk.min,RQ=wk.mix,CQ=wk.mixElement,NQ=wk.mod,PQ=wk.modInt,LQ=wk.modelDirection,IQ=wk.modelNormalMatrix,DQ=wk.modelPosition,FQ=wk.modelRadius,UQ=wk.modelScale,OQ=wk.modelViewMatrix,BQ=wk.modelViewPosition,kQ=wk.modelViewProjection,VQ=wk.modelWorldMatrix,zQ=wk.modelWorldMatrixInverse,GQ=wk.morphReference,HQ=wk.mrt,WQ=wk.mul,jQ=wk.mx_aastep,XQ=wk.mx_add,qQ=wk.mx_atan2,$Q=wk.mx_cell_noise_float,YQ=wk.mx_contrast,KQ=wk.mx_divide,QQ=wk.mx_fractal_noise_float,ZQ=wk.mx_fractal_noise_vec2,JQ=wk.mx_fractal_noise_vec3,eZ=wk.mx_fractal_noise_vec4,tZ=wk.mx_frame,nZ=wk.mx_heighttonormal,iZ=wk.mx_hsvtorgb,rZ=wk.mx_ifequal,sZ=wk.mx_ifgreater,aZ=wk.mx_ifgreatereq,oZ=wk.mx_invert,lZ=wk.mx_modulo,cZ=wk.mx_multiply,uZ=wk.mx_noise_float,hZ=wk.mx_noise_vec3,dZ=wk.mx_noise_vec4,pZ=wk.mx_place2d,mZ=wk.mx_power,fZ=wk.mx_ramp4,gZ=wk.mx_ramplr,vZ=wk.mx_ramptb,bZ=wk.mx_rgbtohsv,yZ=wk.mx_rotate2d,xZ=wk.mx_rotate3d,_Z=wk.mx_safepower,TZ=wk.mx_separate,SZ=wk.mx_splitlr,wZ=wk.mx_splittb,MZ=wk.mx_srgb_texture_to_lin_rec709,EZ=wk.mx_subtract,AZ=wk.mx_timer,RZ=wk.mx_transform_uv,CZ=wk.mx_unifiednoise2d,NZ=wk.mx_unifiednoise3d,PZ=wk.mx_worley_noise_float,LZ=wk.mx_worley_noise_vec2,IZ=wk.mx_worley_noise_vec3,DZ=wk.negate,FZ=wk.neutralToneMapping,UZ=wk.nodeArray,OZ=wk.nodeImmutable,BZ=wk.nodeObject,kZ=wk.nodeObjectIntent,VZ=wk.nodeObjects,zZ=wk.nodeProxy,GZ=wk.nodeProxyIntent,HZ=wk.normalFlat,WZ=wk.normalGeometry,jZ=wk.normalLocal,XZ=wk.normalMap,qZ=wk.normalView,$Z=wk.normalViewGeometry,YZ=wk.normalWorld,KZ=wk.normalWorldGeometry,QZ=wk.normalize,ZZ=wk.not,JZ=wk.notEqual,eJ=wk.numWorkgroups,tJ=wk.objectDirection,nJ=wk.objectGroup,iJ=wk.objectPosition,rJ=wk.objectRadius,sJ=wk.objectScale,aJ=wk.objectViewPosition,oJ=wk.objectWorldMatrix,lJ=wk.OnObjectUpdate,cJ=wk.OnMaterialUpdate,uJ=wk.oneMinus,hJ=wk.or,dJ=wk.orthographicDepthToViewZ,pJ=wk.oscSawtooth,mJ=wk.oscSine,fJ=wk.oscSquare,gJ=wk.oscTriangle,vJ=wk.output,bJ=wk.outputStruct,yJ=wk.overlay,xJ=wk.overloadingFn,_J=wk.parabola,TJ=wk.parallaxDirection,SJ=wk.parallaxUV,wJ=wk.parameter,MJ=wk.pass,EJ=wk.passTexture,AJ=wk.pcurve,RJ=wk.perspectiveDepthToViewZ,CJ=wk.pmremTexture,NJ=wk.pointShadow,PJ=wk.pointUV,LJ=wk.pointWidth,IJ=wk.positionGeometry,DJ=wk.positionLocal,FJ=wk.positionPrevious,UJ=wk.positionView,OJ=wk.positionViewDirection,BJ=wk.positionWorld,kJ=wk.positionWorldDirection,VJ=wk.posterize,zJ=wk.pow,GJ=wk.pow2,HJ=wk.pow3,WJ=wk.pow4,jJ=wk.premultiplyAlpha,XJ=wk.property,qJ=wk.radians,$J=wk.rand,YJ=wk.range,KJ=wk.rangeFog,QJ=wk.rangeFogFactor,ZJ=wk.reciprocal,JJ=wk.reference,e0=wk.referenceBuffer,t0=wk.reflect,n0=wk.reflectVector,i0=wk.reflectView,r0=wk.reflector,s0=wk.refract,a0=wk.refractVector,o0=wk.refractView,l0=wk.reinhardToneMapping,c0=wk.remap,u0=wk.remapClamp,h0=wk.renderGroup,d0=wk.renderOutput,p0=wk.rendererReference,m0=wk.rotate,f0=wk.rotateUV,g0=wk.roughness,v0=wk.round,b0=wk.rtt,y0=wk.sRGBTransferEOTF,x0=wk.sRGBTransferOETF,_0=wk.sample,T0=wk.sampler,S0=wk.samplerComparison,w0=wk.saturate,M0=wk.saturation,E0=wk.screen,A0=wk.screenCoordinate,R0=wk.screenDPR,C0=wk.screenSize,N0=wk.screenUV,P0=wk.scriptable,L0=wk.scriptableValue,I0=wk.select,D0=wk.setCurrentStack,F0=wk.setName,U0=wk.shaderStages,O0=wk.shadow,B0=wk.shadowPositionWorld,k0=wk.shapeCircle,V0=wk.sharedUniformGroup,z0=wk.sheen,G0=wk.sheenRoughness,H0=wk.shiftLeft,W0=wk.shiftRight,j0=wk.shininess,X0=wk.sign,q0=wk.sin,$0=wk.sinc,Y0=wk.skinning,K0=wk.smoothstep,Q0=wk.smoothstepElement,Z0=wk.specularColor,J0=wk.specularF90,e1=wk.spherizeUV,t1=wk.split,n1=wk.spritesheetUV,i1=wk.sqrt,r1=wk.stack,s1=wk.step,a1=wk.stepElement,o1=wk.storage,l1=wk.storageBarrier,c1=wk.storageObject,u1=wk.storageTexture,h1=wk.string,d1=wk.struct,p1=wk.sub,m1=wk.subgroupAdd,f1=wk.subgroupAll,g1=wk.subgroupAnd,v1=wk.subgroupAny,b1=wk.subgroupBallot,y1=wk.subgroupBroadcast,x1=wk.subgroupBroadcastFirst,_1=wk.subBuild,T1=wk.subgroupElect,S1=wk.subgroupExclusiveAdd,w1=wk.subgroupExclusiveMul,M1=wk.subgroupInclusiveAdd,E1=wk.subgroupInclusiveMul,A1=wk.subgroupIndex,R1=wk.subgroupMax,C1=wk.subgroupMin,N1=wk.subgroupMul,P1=wk.subgroupOr,L1=wk.subgroupShuffle,I1=wk.subgroupShuffleDown,D1=wk.subgroupShuffleUp,F1=wk.subgroupShuffleXor,U1=wk.subgroupSize,O1=wk.subgroupXor,B1=wk.tan,k1=wk.tangentGeometry,V1=wk.tangentLocal,z1=wk.tangentView,G1=wk.tangentWorld,H1=wk.texture,W1=wk.texture3D,j1=wk.textureBarrier,X1=wk.textureBicubic,q1=wk.textureBicubicLevel,$1=wk.textureCubeUV,Y1=wk.textureLoad,K1=wk.textureSize,Q1=wk.textureStore,Z1=wk.thickness,J1=wk.time,e2=wk.toneMapping,t2=wk.toneMappingExposure,n2=wk.toonOutlinePass,i2=wk.transformDirection,r2=wk.transformNormal,s2=wk.transformNormalToView,a2=wk.transformedClearcoatNormalView,o2=wk.transformedNormalView,l2=wk.transformedNormalWorld,c2=wk.transmission,u2=wk.transpose,h2=wk.triNoise3D,d2=wk.triplanarTexture,p2=wk.triplanarTextures,m2=wk.trunc,f2=wk.uint,g2=wk.uintBitsToFloat,v2=wk.uniform,b2=wk.uniformArray,y2=wk.uniformCubeTexture,x2=wk.uniformGroup,_2=wk.uniformFlow,T2=wk.uniformTexture,S2=wk.unpremultiplyAlpha,w2=wk.userData,M2=wk.uv,E2=wk.uvec2,A2=wk.uvec3,R2=wk.uvec4,C2=wk.varying,N2=wk.varyingProperty,P2=wk.vec2,L2=wk.vec3,I2=wk.vec4,D2=wk.vectorComponents,F2=wk.velocity,U2=wk.vertexColor,O2=wk.vertexIndex,B2=wk.vertexStage,k2=wk.vibrance,V2=wk.viewZToLogarithmicDepth,z2=wk.viewZToOrthographicDepth,G2=wk.viewZToPerspectiveDepth,H2=wk.viewport,W2=wk.viewportCoordinate,j2=wk.viewportDepthTexture,X2=wk.viewportLinearDepth,q2=wk.viewportMipTexture,$2=wk.viewportResolution,Y2=wk.viewportSafeUV,K2=wk.viewportSharedTexture,Q2=wk.viewportSize,Z2=wk.viewportTexture,J2=wk.viewportUV,e3=wk.wgsl,t3=wk.wgslFn,n3=wk.workgroupArray,i3=wk.workgroupBarrier,r3=wk.workgroupId,s3=wk.workingToColorSpace,a3=wk.xor,o3=Object.freeze(Object.defineProperty({__proto__:null,BRDF_GGX:Wj,BRDF_Lambert:jj,BasicPointShadowFilter:Xj,BasicShadowFilter:qj,Break:$j,Const:Yj,Continue:Kj,DFGApprox:Qj,D_GGX:Zj,Discard:Jj,EPSILON:eX,F_Schlick:tX,Fn:nX,INFINITY:iX,If:rX,Loop:sX,NodeAccess:aX,NodeShaderStage:oX,NodeType:lX,NodeUpdateType:cX,OnMaterialUpdate:cJ,OnObjectUpdate:lJ,PCFShadowFilter:uX,PCFSoftShadowFilter:hX,PI:dX,PI2:pX,PointShadowFilter:mX,Return:fX,Schlick_to_F0:gX,ScriptableNodeResources:vX,ShaderNode:bX,Stack:yX,Switch:xX,TBNViewMatrix:_X,VSMShadowFilter:TX,V_GGX_SmithCorrelated:SX,Var:wX,VarIntent:MX,abs:EX,acesFilmicToneMapping:AX,acos:RX,add:CX,addMethodChaining:NX,addNodeElement:PX,agxToneMapping:LX,all:IX,alphaT:DX,and:FX,anisotropy:UX,anisotropyB:OX,anisotropyT:BX,any:kX,append:VX,array:zX,arrayBuffer:GX,asin:HX,assign:WX,atan:jX,atan2:XX,atomicAdd:qX,atomicAnd:$X,atomicFunc:YX,atomicLoad:KX,atomicMax:QX,atomicMin:ZX,atomicOr:JX,atomicStore:eq,atomicSub:tq,atomicXor:nq,attenuationColor:iq,attenuationDistance:rq,attribute:sq,attributeArray:aq,backgroundBlurriness:oq,backgroundIntensity:lq,backgroundRotation:cq,batch:uq,bentNormalView:hq,billboarding:dq,bitAnd:pq,bitNot:mq,bitOr:fq,bitXor:gq,bitangentGeometry:vq,bitangentLocal:bq,bitangentView:yq,bitangentWorld:xq,bitcast:_q,blendBurn:Tq,blendColor:Sq,blendDodge:wq,blendOverlay:Mq,blendScreen:Eq,blur:Aq,bool:Rq,buffer:Cq,bufferAttribute:Nq,builtin:Iq,bumpMap:Pq,burn:Lq,bvec2:Dq,bvec3:Fq,bvec4:Uq,bypass:Oq,cache:Bq,call:kq,cameraFar:Vq,cameraIndex:zq,cameraNear:Gq,cameraNormalMatrix:Hq,cameraPosition:Wq,cameraProjectionMatrix:jq,cameraProjectionMatrixInverse:Xq,cameraViewMatrix:qq,cameraViewport:$q,cameraWorldMatrix:Yq,cbrt:Kq,cdl:Qq,ceil:Zq,checker:Jq,cineonToneMapping:e$,clamp:t$,clearcoat:n$,clearcoatNormalView:i$,clearcoatRoughness:r$,code:s$,color:a$,colorSpaceToWorking:o$,colorToDirection:l$,compute:c$,computeKernel:u$,computeSkinning:h$,context:d$,convert:p$,convertColorSpace:m$,convertToTexture:f$,cos:g$,cross:v$,cubeTexture:b$,cubeTextureBase:y$,cubeToUV:x$,dFdx:_$,dFdy:T$,dashSize:S$,debug:w$,decrement:M$,decrementBefore:E$,defaultBuildStages:A$,defaultShaderStages:R$,defined:C$,degrees:N$,deltaTime:P$,densityFog:L$,densityFogFactor:I$,depth:D$,depthPass:F$,determinant:U$,difference:O$,diffuseColor:B$,directPointLight:k$,directionToColor:V$,directionToFaceDirection:z$,dispersion:G$,distance:H$,div:W$,dodge:j$,dot:X$,drawIndex:q$,dynamicBufferAttribute:$$,element:Y$,emissive:K$,equal:Q$,equals:Z$,equirectUV:J$,exp:eY,exp2:tY,expression:nY,faceDirection:iY,faceForward:rY,faceforward:sY,float:aY,floatBitsToInt:oY,floatBitsToUint:lY,floor:cY,fog:uY,fract:hY,frameGroup:dY,frameId:pY,frontFacing:mY,fwidth:fY,gain:gY,gapSize:vY,getConstNodeType:bY,getCurrentStack:yY,getDirection:xY,getDistanceAttenuation:_Y,getGeometryRoughness:TY,getNormalFromDepth:SY,getParallaxCorrectNormal:wY,getRoughness:MY,getScreenPosition:EY,getShIrradianceAt:AY,getShadowMaterial:RY,getShadowRenderObjectFunction:CY,getTextureIndex:NY,getViewPosition:PY,globalId:LY,glsl:IY,glslFn:DY,grayscale:FY,greaterThan:UY,greaterThanEqual:OY,hash:BY,highpModelNormalViewMatrix:kY,highpModelViewMatrix:VY,hue:zY,increment:GY,incrementBefore:HY,instance:WY,instanceIndex:jY,instancedArray:XY,instancedBufferAttribute:qY,instancedDynamicBufferAttribute:$Y,instancedMesh:YY,int:KY,intBitsToFloat:QY,inverse:ZY,inverseSqrt:JY,inversesqrt:eK,invocationLocalIndex:tK,invocationSubgroupIndex:nK,ior:iK,iridescence:rK,iridescenceIOR:sK,iridescenceThickness:aK,ivec2:oK,ivec3:lK,ivec4:cK,js:uK,label:hK,length:dK,lengthSq:pK,lessThan:mK,lessThanEqual:fK,lightPosition:gK,lightProjectionUV:vK,lightShadowMatrix:bK,lightTargetDirection:yK,lightTargetPosition:xK,lightViewPosition:_K,lightingContext:TK,lights:SK,linearDepth:wK,linearToneMapping:MK,localId:EK,log:AK,log2:RK,logarithmicDepthToViewZ:CK,luminance:NK,mat2:PK,mat3:LK,mat4:IK,matcapUV:DK,materialAO:FK,materialAlphaTest:UK,materialAnisotropy:OK,materialAnisotropyVector:BK,materialAttenuationColor:kK,materialAttenuationDistance:VK,materialClearcoat:zK,materialClearcoatNormal:GK,materialClearcoatRoughness:HK,materialColor:WK,materialDispersion:jK,materialEmissive:XK,materialEnvIntensity:qK,materialEnvRotation:$K,materialIOR:YK,materialIridescence:KK,materialIridescenceIOR:QK,materialIridescenceThickness:ZK,materialLightMap:JK,materialLineDashOffset:eQ,materialLineDashSize:tQ,materialLineGapSize:nQ,materialLineScale:iQ,materialLineWidth:rQ,materialMetalness:sQ,materialNormal:aQ,materialOpacity:oQ,materialPointSize:lQ,materialReference:cQ,materialReflectivity:uQ,materialRefractionRatio:hQ,materialRotation:dQ,materialRoughness:pQ,materialSheen:mQ,materialSheenRoughness:fQ,materialShininess:gQ,materialSpecular:vQ,materialSpecularColor:bQ,materialSpecularIntensity:yQ,materialSpecularStrength:xQ,materialThickness:_Q,materialTransmission:TQ,max:SQ,maxMipLevel:wQ,mediumpModelViewMatrix:MQ,metalness:EQ,min:AQ,mix:RQ,mixElement:CQ,mod:NQ,modInt:PQ,modelDirection:LQ,modelNormalMatrix:IQ,modelPosition:DQ,modelRadius:FQ,modelScale:UQ,modelViewMatrix:OQ,modelViewPosition:BQ,modelViewProjection:kQ,modelWorldMatrix:VQ,modelWorldMatrixInverse:zQ,morphReference:GQ,mrt:HQ,mul:WQ,mx_aastep:jQ,mx_add:XQ,mx_atan2:qQ,mx_cell_noise_float:$Q,mx_contrast:YQ,mx_divide:KQ,mx_fractal_noise_float:QQ,mx_fractal_noise_vec2:ZQ,mx_fractal_noise_vec3:JQ,mx_fractal_noise_vec4:eZ,mx_frame:tZ,mx_heighttonormal:nZ,mx_hsvtorgb:iZ,mx_ifequal:rZ,mx_ifgreater:sZ,mx_ifgreatereq:aZ,mx_invert:oZ,mx_modulo:lZ,mx_multiply:cZ,mx_noise_float:uZ,mx_noise_vec3:hZ,mx_noise_vec4:dZ,mx_place2d:pZ,mx_power:mZ,mx_ramp4:fZ,mx_ramplr:gZ,mx_ramptb:vZ,mx_rgbtohsv:bZ,mx_rotate2d:yZ,mx_rotate3d:xZ,mx_safepower:_Z,mx_separate:TZ,mx_splitlr:SZ,mx_splittb:wZ,mx_srgb_texture_to_lin_rec709:MZ,mx_subtract:EZ,mx_timer:AZ,mx_transform_uv:RZ,mx_unifiednoise2d:CZ,mx_unifiednoise3d:NZ,mx_worley_noise_float:PZ,mx_worley_noise_vec2:LZ,mx_worley_noise_vec3:IZ,negate:DZ,neutralToneMapping:FZ,nodeArray:UZ,nodeImmutable:OZ,nodeObject:BZ,nodeObjectIntent:kZ,nodeObjects:VZ,nodeProxy:zZ,nodeProxyIntent:GZ,normalFlat:HZ,normalGeometry:WZ,normalLocal:jZ,normalMap:XZ,normalView:qZ,normalViewGeometry:$Z,normalWorld:YZ,normalWorldGeometry:KZ,normalize:QZ,not:ZZ,notEqual:JZ,numWorkgroups:eJ,objectDirection:tJ,objectGroup:nJ,objectPosition:iJ,objectRadius:rJ,objectScale:sJ,objectViewPosition:aJ,objectWorldMatrix:oJ,oneMinus:uJ,or:hJ,orthographicDepthToViewZ:dJ,oscSawtooth:pJ,oscSine:mJ,oscSquare:fJ,oscTriangle:gJ,output:vJ,outputStruct:bJ,overlay:yJ,overloadingFn:xJ,parabola:_J,parallaxDirection:TJ,parallaxUV:SJ,parameter:wJ,pass:MJ,passTexture:EJ,pcurve:AJ,perspectiveDepthToViewZ:RJ,pmremTexture:CJ,pointShadow:NJ,pointUV:PJ,pointWidth:LJ,positionGeometry:IJ,positionLocal:DJ,positionPrevious:FJ,positionView:UJ,positionViewDirection:OJ,positionWorld:BJ,positionWorldDirection:kJ,posterize:VJ,pow:zJ,pow2:GJ,pow3:HJ,pow4:WJ,premultiplyAlpha:jJ,property:XJ,radians:qJ,rand:$J,range:YJ,rangeFog:KJ,rangeFogFactor:QJ,reciprocal:ZJ,reference:JJ,referenceBuffer:e0,reflect:t0,reflectVector:n0,reflectView:i0,reflector:r0,refract:s0,refractVector:a0,refractView:o0,reinhardToneMapping:l0,remap:c0,remapClamp:u0,renderGroup:h0,renderOutput:d0,rendererReference:p0,rotate:m0,rotateUV:f0,roughness:g0,round:v0,rtt:b0,sRGBTransferEOTF:y0,sRGBTransferOETF:x0,sample:_0,sampler:T0,samplerComparison:S0,saturate:w0,saturation:M0,screen:E0,screenCoordinate:A0,screenDPR:R0,screenSize:C0,screenUV:N0,scriptable:P0,scriptableValue:L0,select:I0,setCurrentStack:D0,setName:F0,shaderStages:U0,shadow:O0,shadowPositionWorld:B0,shapeCircle:k0,sharedUniformGroup:V0,sheen:z0,sheenRoughness:G0,shiftLeft:H0,shiftRight:W0,shininess:j0,sign:X0,sin:q0,sinc:$0,skinning:Y0,smoothstep:K0,smoothstepElement:Q0,specularColor:Z0,specularF90:J0,spherizeUV:e1,split:t1,spritesheetUV:n1,sqrt:i1,stack:r1,step:s1,stepElement:a1,storage:o1,storageBarrier:l1,storageObject:c1,storageTexture:u1,string:h1,struct:d1,sub:p1,subBuild:_1,subgroupAdd:m1,subgroupAll:f1,subgroupAnd:g1,subgroupAny:v1,subgroupBallot:b1,subgroupBroadcast:y1,subgroupBroadcastFirst:x1,subgroupElect:T1,subgroupExclusiveAdd:S1,subgroupExclusiveMul:w1,subgroupInclusiveAdd:M1,subgroupInclusiveMul:E1,subgroupIndex:A1,subgroupMax:R1,subgroupMin:C1,subgroupMul:N1,subgroupOr:P1,subgroupShuffle:L1,subgroupShuffleDown:I1,subgroupShuffleUp:D1,subgroupShuffleXor:F1,subgroupSize:U1,subgroupXor:O1,tan:B1,tangentGeometry:k1,tangentLocal:V1,tangentView:z1,tangentWorld:G1,texture:H1,texture3D:W1,textureBarrier:j1,textureBicubic:X1,textureBicubicLevel:q1,textureCubeUV:$1,textureLoad:Y1,textureSize:K1,textureStore:Q1,thickness:Z1,time:J1,toneMapping:e2,toneMappingExposure:t2,toonOutlinePass:n2,transformDirection:i2,transformNormal:r2,transformNormalToView:s2,transformedClearcoatNormalView:a2,transformedNormalView:o2,transformedNormalWorld:l2,transmission:c2,transpose:u2,triNoise3D:h2,triplanarTexture:d2,triplanarTextures:p2,trunc:m2,uint:f2,uintBitsToFloat:g2,uniform:v2,uniformArray:b2,uniformCubeTexture:y2,uniformFlow:_2,uniformGroup:x2,uniformTexture:T2,unpremultiplyAlpha:S2,userData:w2,uv:M2,uvec2:E2,uvec3:A2,uvec4:R2,varying:C2,varyingProperty:N2,vec2:P2,vec3:L2,vec4:I2,vectorComponents:D2,velocity:F2,vertexColor:U2,vertexIndex:O2,vertexStage:B2,vibrance:k2,viewZToLogarithmicDepth:V2,viewZToOrthographicDepth:z2,viewZToPerspectiveDepth:G2,viewport:H2,viewportCoordinate:W2,viewportDepthTexture:j2,viewportLinearDepth:X2,viewportMipTexture:q2,viewportResolution:$2,viewportSafeUV:Y2,viewportSharedTexture:K2,viewportSize:Q2,viewportTexture:Z2,viewportUV:J2,wgsl:e3,wgslFn:t3,workgroupArray:n3,workgroupBarrier:i3,workgroupId:r3,workingToColorSpace:s3,xor:a3},Symbol.toStringTag,{value:"Module"})),l3=Math.PI/180;function c3(e,t,n){return Math.max(t,Math.min(n,e))}function u3(e){return e*l3}
/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */class h3{constructor(e,t,n,i,r="div"){this.parent=e,this.object=t,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(i),this.$name=document.createElement("div"),this.$name.classList.add("name"),h3.nextNameID=h3.nextNameID||0,this.$name.id="lil-gui-name-"+ ++h3.nextNameID,this.$widget=document.createElement(r),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(e){return this._name=e,this.$name.innerHTML=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.object[this.property]=e,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class d3 extends h3{constructor(e,t,n){super(e,t,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function p3(e){let t,n;return(t=e.match(/(#|0x)?([a-f0-9]{6})/i))?n=t[2]:(t=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?n=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(n=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!n&&"#"+n}const m3={isPrimitive:!0,match:e=>"string"==typeof e,fromHexString:p3,toHexString:p3},f3={isPrimitive:!0,match:e=>"number"==typeof e,fromHexString:e=>parseInt(e.substring(1),16),toHexString:e=>"#"+e.toString(16).padStart(6,0)},g3={isPrimitive:!1,match:Array.isArray,fromHexString(e,t,n=1){const i=f3.fromHexString(e);t[0]=(i>>16&255)/255*n,t[1]=(i>>8&255)/255*n,t[2]=(255&i)/255*n},toHexString:([e,t,n],i=1)=>f3.toHexString(e*(i=255/i)<<16^t*i<<8^n*i)},v3={isPrimitive:!1,match:e=>Object(e)===e,fromHexString(e,t,n=1){const i=f3.fromHexString(e);t.r=(i>>16&255)/255*n,t.g=(i>>8&255)/255*n,t.b=(255&i)/255*n},toHexString:({r:e,g:t,b:n},i=1)=>f3.toHexString(e*(i=255/i)<<16^t*i<<8^n*i)},b3=[m3,f3,g3,v3];class y3 extends h3{constructor(e,t,n,i){var r;super(e,t,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(r=this.initialValue,b3.find(e=>e.match(r))),this._rgbScale=i,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const e=p3(this.$text.value);e&&this._setValueFromHexString(e)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class x3 extends h3{constructor(e,t,n){super(e,t,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",e=>{e.preventDefault(),this.getValue().call(this.object)}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class _3 extends h3{constructor(e,t,n,i,r,s){super(e,t,n,"number"),this._initInput(),this.min(i),this.max(r);const a=void 0!==s;this.step(a?s:this._getImplicitStep(),a),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=e=>{const t=parseFloat(this.$input.value);isNaN(t)||(this._snapClampSetValue(t+e),this.$input.value=this.getValue())};let t,n,i,r,s,a=!1;const o=e=>{if(a){const i=e.clientX-t,r=e.clientY-n;Math.abs(r)>5?(e.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(i)>5&&l()}if(!a){const t=e.clientY-i;s-=t*this._step*this._arrowKeyMultiplier(e),r+s>this._max?s=this._max-r:r+s<this._min&&(s=this._min-r),this._snapClampSetValue(r+s)}i=e.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",()=>{let e=parseFloat(this.$input.value);isNaN(e)||(this._stepExplicit&&(e=this._snap(e)),this.setValue(this._clamp(e)))}),this.$input.addEventListener("keydown",t=>{"Enter"===t.code&&this.$input.blur(),"ArrowUp"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t))),"ArrowDown"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t)*-1))}),this.$input.addEventListener("wheel",t=>{this._inputFocused&&(t.preventDefault(),e(this._step*this._normalizeMouseWheel(t)))},{passive:!1}),this.$input.addEventListener("mousedown",e=>{t=e.clientX,n=i=e.clientY,a=!0,r=this.getValue(),s=0,window.addEventListener("mousemove",o),window.addEventListener("mouseup",l)}),this.$input.addEventListener("focus",()=>{this._inputFocused=!0}),this.$input.addEventListener("blur",()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()})}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=e=>{const t=this.$slider.getBoundingClientRect();let n=(i=e,r=t.left,s=t.right,a=this._min,(i-r)/(s-r)*(this._max-a)+a);var i,r,s,a;this._snapClampSetValue(n)},t=t=>{e(t.clientX)},n=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",n)};let i,r,s=!1;const a=t=>{t.preventDefault(),this._setDraggingStyle(!0),e(t.touches[0].clientX),s=!1},o=t=>{if(s){const e=t.touches[0].clientX-i,n=t.touches[0].clientY-r;Math.abs(e)>Math.abs(n)?a(t):(window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l))}else t.preventDefault(),e(t.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l)},c=this._callOnFinishChange.bind(this);let u;this.$slider.addEventListener("mousedown",i=>{this._setDraggingStyle(!0),e(i.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",n)}),this.$slider.addEventListener("touchstart",e=>{e.touches.length>1||(this._hasScrollBar?(i=e.touches[0].clientX,r=e.touches[0].clientY,s=!0):a(e),window.addEventListener("touchmove",o,{passive:!1}),window.addEventListener("touchend",l))},{passive:!1}),this.$slider.addEventListener("wheel",e=>{if(Math.abs(e.deltaX)<Math.abs(e.deltaY)&&this._hasScrollBar)return;e.preventDefault();const t=this._normalizeMouseWheel(e)*this._step;this._snapClampSetValue(this.getValue()+t),this.$input.value=this.getValue(),clearTimeout(u),u=setTimeout(c,400)},{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle("lil-gui-"+t,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:n}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class T3 extends h3{constructor(e,t,n,i){super(e,t,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(i)?i:Object.values(i),this._names=Array.isArray(i)?i:Object.keys(i),this._names.forEach(e=>{const t=document.createElement("option");t.innerHTML=e,this.$select.appendChild(t)}),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.innerHTML=-1===t?e:this._names[t],this}}class S3 extends h3{constructor(e,t,n){super(e,t,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",e=>{"Enter"===e.code&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let w3=!1;class M3{constructor({parent:e,autoPlace:t=void 0===e,container:n,width:i,title:r="Controls",injectStyles:s=!0,touchStyles:a=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",e=>{"Enter"!==e.code&&"Space"!==e.code||(e.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),a&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!w3&&s&&(function(){const e=document.createElement("style");e.innerHTML='.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}';const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}(),w3=!0),n?n.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),i&&this.domElement.style.setProperty("--width",i+"px"),this.domElement.addEventListener("keydown",e=>e.stopPropagation()),this.domElement.addEventListener("keyup",e=>e.stopPropagation())}add(e,t,n,i,r){if(Object(n)===n)return new T3(this,e,t,n);const s=e[t];switch(typeof s){case"number":return new _3(this,e,t,n,i,r);case"boolean":return new d3(this,e,t);case"string":return new S3(this,e,t);case"function":return new x3(this,e,t)}console.error("gui.add failed\n\tproperty:",t,"\n\tobject:",e,"\n\tvalue:",s)}addColor(e,t,n=1){return new y3(this,e,t,n)}addFolder(e){return new M3({parent:this,title:e})}load(e,t=!0){return e.controllers&&this.controllers.forEach(t=>{t instanceof x3||t._name in e.controllers&&t.load(e.controllers[t._name])}),t&&e.folders&&this.folders.forEach(t=>{t._title in e.folders&&t.load(e.folders[t._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(e=>{if(!(e instanceof x3)){if(e._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${e._name}"`);t.controllers[e._name]=e.save()}}),e&&this.folders.forEach(e=>{if(e._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${e._title}"`);t.folders[e._title]=e.save()}),t}open(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const n=e=>{e.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const i=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=i+"px"})}),this}title(e){return this._title=e,this.$title.innerHTML=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(e=>e.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),void 0!==this._onChange&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}export{a as $,Ut as A,si as B,Uu as C,Vc as D,Gi as E,Da as F,Kv as G,Zn as H,Ea as I,ei as J,tf as K,kc as L,Li as M,T as N,hu as O,Na as P,Mn as Q,Pi as R,Si as S,Qm as T,ge as U,En as V,Km as W,f as X,wh as Y,_ as Z,Th as _,xh as a,ke as a$,$ as a0,Ds as a1,sr as a2,Hi as a3,Zl as a4,Lh as a5,c as a6,Ar as a7,Qc as a8,ie as a9,he as aA,pe as aB,ue as aC,ce as aD,ae as aE,le as aF,oe as aG,ih as aH,da as aI,ho as aJ,vo as aK,va as aL,Uc as aM,pa as aN,_t as aO,Tt as aP,Os as aQ,Fc as aR,Pc as aS,Ic as aT,zn as aU,o as aV,Ct as aW,Pt as aX,Nt as aY,wc as aZ,n as a_,hl as aa,al as ab,nc as ac,W as ad,Xr as ae,gd as af,vd as ag,id as ah,i as ai,r as aj,ms as ak,zc as al,yu as am,go as an,io as ao,Wo as ap,hd as aq,cc as ar,Ot as as,su as at,uu as au,pu as av,ba as aw,Au as ax,Fs as ay,me as az,Sn as b,B as b$,_e as b0,Pe as b1,Te as b2,Se as b3,Fe as b4,Hm as b5,Lo as b6,Le as b7,E as b8,M as b9,Kc as bA,te as bB,$l as bC,ec as bD,zl as bE,pl as bF,dl as bG,ud as bH,u as bI,d as bJ,De as bK,oc as bL,kt as bM,j as bN,X as bO,q as bP,K as bQ,Q as bR,Y as bS,hc as bT,uc as bU,Ie as bV,Ee as bW,ch as bX,Lt as bY,xs as bZ,Ft as b_,Oo as ba,xu as bb,sn as bc,h as bd,Uo as be,Ir as bf,bs as bg,Jh as bh,dc as bi,l as bj,pc as bk,Bs as bl,Zs as bm,Sg as bn,Wh as bo,Dh as bp,Vh as bq,Kh as br,Rs as bs,Es as bt,oh as bu,mc as bv,Ql as bw,Yc as bx,Wl as by,Mo as bz,dn as c,Of as c$,G as c0,z as c1,k as c2,H as c3,V as c4,O as c5,U as c6,It as c7,no as c8,Xl as c9,an as cA,xv as cB,nv as cC,_v as cD,Jo as cE,vy as cF,ye as cG,Oy as cH,Uy as cI,Gy as cJ,Fy as cK,Ly as cL,Vy as cM,Dy as cN,Ky as cO,tc as cP,tv as cQ,yv as cR,Qy as cS,rn as cT,rl as cU,Wr as cV,qt as cW,zt as cX,$t as cY,Fo as cZ,Vd as c_,on as ca,$c as cb,Bc as cc,Tu as cd,na as ce,vu as cf,Jc as cg,fu as ch,mu as ci,Is as cj,Ls as ck,bt as cl,t as cm,s as cn,Po as co,cy as cp,yg as cq,qy as cr,Yy as cs,By as ct,Py as cu,Cv as cv,py as cw,my as cx,wv as cy,jh as cz,wn as d,Xo as d0,vg as d1,Dt as d2,kj as d3,Ay as d4,hy as d5,sl as d6,xf as d7,qo as d8,Xy as d9,gc as dA,Do as dB,u3 as dC,ii as dD,Ny as dE,mg as dF,Kl as dG,tx as dH,hx as dI,gx as dJ,Lg as dK,M3 as dL,wg as dM,Cy as dN,Zy as dO,Kb as da,Wy as db,jo as dc,Hj as dd,Qg as de,Zg as df,cd as dg,qv as dh,bg as di,Ne as dj,Tv as dk,Yb as dl,HL as dm,I2 as dn,aY as dp,iI as dq,MN as dr,jL as ds,eP as dt,jN as du,o3 as dv,Gj as dw,m as dx,p as dy,c3 as dz,_g as e,Cs as f,ws as g,bo as h,es as i,Or as j,wr as k,So as l,fh as m,Cn as n,ds as o,Yl as p,ys as q,de as r,Ue as s,Wc as t,lc as u,ma as v,fe as w,yr as x,Rr as y,Qn as z};
