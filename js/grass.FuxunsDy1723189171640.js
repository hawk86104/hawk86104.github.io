import{r as t,a6 as n,V as e,C as o,al as r,K as a,a9 as i}from"./three.5MXJ6W7w1723189171640.js";import{$ as s,N as c,d as l,x as u}from"./@tresjs.LTwFwASm1723189171640.js";import"./index.Q4oKieKw1723189171640.js";import{a as f}from"./simplex-noise.MycypUyu1723189171640.js";import{C as p}from"./index.rLlA0tSY1723189171640.js";import{d as h,a4 as m,o as v,D as d,J as g,u as x,r as w,f as y,g as b,j as _,aj as M,ak as j,al as z}from"./@vue.Q1VpS3901723189171640.js";import{_ as I}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.nwBqVPWs1723189171640.js";import"./tweakpane.yHWGBmom1723189171640.js";import"./@vueuse.oQlm8k6P1723189171640.js";import"./lamina.BIZnmU2f1723189171640.js";import"./glsl-tokenizer.lazMVlew1723189171640.js";import"./@amap.Lu-L8G0q1723189171640.js";import"./glsl-token-descope.LDhB8S6Q1723189171640.js";import"./glsl-token-depth.q9Pz4fz-1723189171640.js";import"./glsl-token-scope.NARn_RrJ1723189171640.js";import"./glsl-token-properties.wzaRDpI21723189171640.js";import"./glsl-token-assignments.wsVEQeil1723189171640.js";import"./glsl-token-string.HJw4RHIk1723189171640.js";import"./glsl-token-functions.95Du-VYb1723189171640.js";import"./object-hash.jMAsrj6h1723189171640.js";import"./jszip.WwTqi4J91723189171640.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.Zpko2DNa1723189171640.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.IInDsF3Y1723189171640.js";import"./three-stdlib.9krDtkM91723189171640.js";import"./@pmndrs.wQrKJZQf1723189171640.js";import"./utils.w8bF7t7o1723189171640.js";const A=C;!function(t,n){const e=C,o=S();for(;;)try{if(316932===-parseInt(e(330))/1*(-parseInt(e(363))/2)+-parseInt(e(339))/3+parseInt(e(381))/4*(-parseInt(e(355))/5)+-parseInt(e(380))/6*(parseInt(e(403))/7)+parseInt(e(385))/8*(parseInt(e(402))/9)+parseInt(e(345))/10*(-parseInt(e(397))/11)+parseInt(e(368))/12)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const k=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[C(364)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function C(t,n){const e=S();return(C=function(t,n){return e[t-=329]})(t,n)}function S(){const t=["map","gger","debu","function *\\( *\\)","__proto__","attributes-halfRootAngleSin","bind","1846947Lerzke","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","set","TresInstancedBufferGeometry","log","index","100Runwsc","push","attributes-halfRootAngleCos","attributes-uv","attributes-position","console","cos","InstancedBufferAttribute","array","return (function() ","670730FElkZg","halfRootAngleSinF32","time","position","prototype","lookAt","toneMapped","sin","592XuYMGW","apply","PlaneGeometry","action","info","23467140ppyAMU","string","random","geometry","stateObject","width","offsetsF32","attributes","toString","counter","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","chain","392658ZdyDOE","16LekBLI","constructor","call","halfRootAngleCosF32","288952NPMOSO","normalize","translate","Vector3","DoubleSide","instances","side","trace","convertSRGBToLinear","TresMeshStandardMaterial","alphaMap","length","667689lLGhgU","orientationsF32","warn","error","test","45tGwoQe","63WvtGhi","TresMesh","TresGroup","stretchesF32","1787ZpHMrA","Vector4"];return(S=function(){return t})()}!function(){k(this,(function(){const t=C,n=new RegExp(t(335)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=P("init");n[t(401)](o+t(379))&&e[t(401)](o+"input")?P():o("0")}))()}();const F=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();F(void 0,(function(){const t=C,n=function(){const t=C;let n;try{n=Function(t(354)+'{}.constructor("return this")( ));')()}catch(e){n=window}return n}(),e=n[t(350)]=n[t(350)]||{},o=[t(343),t(399),t(367),t(400),"exception","table",t(392)];for(let r=0;r<o[t(396)];r++){const n=F[t(382)][t(359)][t(338)](F),a=o[r],i=e[a]||n;n[t(336)]=F[t(338)](F),n[t(376)]=i.toString[t(338)](i),e[a]=n}}))();const D=["material"],R=["index",A(349),A(348),"attributes-offset","attributes-orientation","attributes-stretch",A(337),A(347)],L=[A(371)],O=[A(391)],E=h({__name:"grass",props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const l=A;let u,h;const w=([u,h]=m((()=>c({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),u=await u,h(),u),y=i,b=f(Math[l(370)]);function _(t,e){const o=l,r=t.x*e.w+t.y*e.z-t.z*e.y+t.w*e.x,a=-t.x*e.z+t.y*e.w+t.z*e.x+t.w*e.y,i=t.x*e.y-t.y*e.x+t.z*e.w+t.w*e.z,s=-t.x*e.x-t.y*e.y-t.z*e.z+t.w*e.w;return new(n[o(331)])(r,a,i,s)}function M(t,n){var e=2*b(t/50,n/50);return e+=4*b(t/100,n/100),e+=.2*b(t/10,n/10)}const j=function(t,e){const o=l,i=[],s=[],c=[],u=[],f=[];let p=new(n[o(331)]),h=new r;const m=-.25;for(let r=0;r<t;r++){const a=Math[o(370)]()*e-e/2,l=Math.random()*e-e/2,v=M(a,l);i[o(346)](a,v,l);let d=Math.PI-Math.random()*(2*Math.PI);u[o(346)](Math.sin(.5*d)),f[o(346)](Math[o(351)](.5*d));let g=new(n[o(388)])(0,1,0),x=g.x*Math[o(362)](d/2),w=g.y*Math[o(362)](d/2),y=g.z*Math[o(362)](d/2),b=Math[o(351)](d/2);p[o(341)](x,w,y,b)[o(386)](),d=.5*Math[o(370)]()+m,g=new(n[o(388)])(1,0,0),x=g.x*Math[o(362)](d/2),w=g.y*Math[o(362)](d/2),y=g.z*Math[o(362)](d/2),b=Math[o(351)](d/2),h[o(341)](x,w,y,b)[o(386)](),p=_(p,h),d=.5*Math[o(370)]()+m,g=new(n[o(388)])(0,0,1),x=g.x*Math[o(362)](d/2),w=g.y*Math[o(362)](d/2),y=g.z*Math.sin(d/2),b=Math[o(351)](d/2),h[o(341)](x,w,y,b)[o(386)](),p=_(p,h),s[o(346)](p.x,p.y,p.z,p.w),r<t/3?c.push(1.8*Math.random()):c[o(346)](Math[o(370)]())}return{offsetsF32:new(n[o(352)])(new Float32Array(i),3),orientationsF32:new(n[o(352)])(new Float32Array(s),4),stretchesF32:new a(new Float32Array(c),1),halfRootAngleCosF32:new(n[o(352)])(new Float32Array(f),1),halfRootAngleSinF32:new(n[o(352)])(new Float32Array(u),1)}}(y[l(390)],y[l(373)]),z=new t(y.bW,y.bH,1,y.joints)[l(387)](0,y.bH/2,0),I=new(n[l(365)])(y.width,y.width,32,32);I[l(360)](new e(0,1,0));const k=I[l(375)].position;for(let t=0;t<k[l(353)][l(396)];t+=3)k[l(353)][t+1]=M(k[l(353)][t],k.array[t+2]);I[l(375)][l(358)].needsUpdate=!0,I.computeVertexNormals();const C=new(p({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new o(.3,.9,0)[l(393)](),bottomColor:new o(0,.2,0)[l(393)]()},l(378),l(340),(t=>{const e=l;t[e(391)]=n[e(389)]})));C[l(332)]=w[l(332)],C[l(395)]=w[l(395)],C[l(361)]=!1;const{onLoop:S}=s();return S((({elapsed:t})=>{const n=l;C.uniforms[n(357)].value=t/4})),(t,e)=>{const o=l;return v(),d(o(405),null,[g("TresMesh",{material:x(C)},[g(o(342),{index:x(z)[o(344)],"attributes-position":x(z)[o(375)][o(358)],"attributes-uv":x(z).attributes.uv,"attributes-offset":x(j)[o(374)],"attributes-orientation":x(j)[o(398)],"attributes-stretch":x(j)[o(329)],"attributes-halfRootAngleSin":x(j)[o(356)],"attributes-halfRootAngleCos":x(j)[o(384)]},null,8,R)],8,D),g(o(404),{position:[0,0,0],geometry:x(I)},[g(o(394),{color:"#000f00",side:n[o(389)]},null,8,O)],8,L)])}}});function P(t){function n(t){const e=C;if(typeof t===e(369))return function(t){}[e(382)]("while (true) {}")[e(364)](e(377));1!==(""+t/t)[e(396)]||t%20==0?function(){return!0}[e(382)](e(334)+e(333))[e(383)](e(366)):function(){return!1}[e(382)](e(334)+e(333))[e(364)](e(372)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const T=N;function G(){const t=["return (function() ","gger","7494284GxvjpD","trace","length","error","TresPerspectiveCamera","785904sQQPbF","counter","test","log","6rkuFWY","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","string","init","__proto__","warn","3ONLvTW","call","6014580RkYSIv","grass","function *\\( *\\)","6661500MLjvgI","action","constructor","20162770UoQvoG","502922FJhzmf","stateObject","prototype","bind","208eriPDq","toString","apply","info","table",'{}.constructor("return this")( )',"console","19026OSYHAJ"];return(G=function(){return t})()}!function(t,n){const e=N,o=G();for(;;)try{if(929716===parseInt(e(179))/1*(-parseInt(e(156))/2)+parseInt(e(185))/3*(-parseInt(e(190))/4)+parseInt(e(187))/5+-parseInt(e(175))/6+parseInt(e(170))/7+parseInt(e(160))/8*(-parseInt(e(167))/9)+parseInt(e(193))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[N(162)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){H(this,(function(){const t=N,n=new RegExp(t(189)),e=new RegExp(t(180),"i"),o=V(t(182));n[t(177)](o+"chain")&&e.test(o+"input")?V():o("0")}))()}();const B=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[N(162)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();B(void 0,(function(){const t=N;let n;try{n=Function(t(168)+t(165)+");")()}catch(r){n=window}const e=n.console=n[t(166)]||{},o=[t(178),t(184),t(163),t(173),"exception",t(164),t(171)];for(let a=0;a<o[t(172)];a++){const n=B[t(192)][t(158)][t(159)](B),r=o[a],i=e[r]||n;n[t(183)]=B[t(159)](B),n[t(161)]=i[t(161)][t(159)](i),e[r]=n}}))();const U=g(T(174),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1);function N(t,n){const e=G();return(N=function(t,n){return e[t-=156]})(t,n)}const q=h({__name:T(188),setup(t){const n=w({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=w({enableDamping:!0,autoRotate:!1});return(t,o)=>(v(),y(x(u),M(j(n)),{default:b((()=>[U,_(x(l),M(j(e)),null,16),(v(),y(z,null,{default:b((()=>[_(E)])),_:1})),(v(),y(z,null,{default:b((()=>[_(x(I),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16))}});function V(t){function n(t){const e=N;if(typeof t===e(181))return function(t){}[e(192)]("while (true) {}")[e(162)](e(176));1!==(""+t/t)[e(172)]||t%20==0?function(){return!0}[e(192)]("debu"+e(169))[e(186)](e(191)):function(){return!1}[e(192)]("debu"+e(169))[e(162)](e(157)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{q as default};
