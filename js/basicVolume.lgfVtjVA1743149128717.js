import{m as n,e as t,o as e}from"./@tresjs.GCV-1VTd1743149128717.js";import{_ as r,p as o}from"./three.hBhj0ayh1743149128717.js";import{P as a}from"./tweakpane.ivGeiIdz1743149128717.js";import{d as i,b as c,r as l,w as u,q as s,o as p,H as m,N as v,u as f,e as _,z as g,j as d,g as x,aj as h,ak as y,f as b,al as S,m as w,F as z}from"./@vue.L-brCdZe1743149128717.js";import{_ as j}from"./@fesjs.w7aAWifr1743149128717.js";import"./postprocessing.JYKQQ2FM1743149128717.js";import"./@vueuse.K3OHOx4F1743149128717.js";import"./vue-router.2RdbTeKA1743149128717.js";import"./lodash-es.pklfUAS51743149128717.js";import"./@qlin.o0hjOMCg1743149128717.js";import"./pinia.Vg5gtfOZ1743149128717.js";import"./@floating-ui.HzHndBae1743149128717.js";import"./@juggle.4EyLec-41743149128717.js";const D=A;!function(n,t){const e=A,r=M();for(;;)try{if(622917===parseInt(e(387))/1+-parseInt(e(335))/2+-parseInt(e(379))/3*(-parseInt(e(336))/4)+parseInt(e(334))/5+-parseInt(e(338))/6+-parseInt(e(389))/7+-parseInt(e(361))/8*(parseInt(e(365))/9))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const k=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[A(388)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){k(this,(function(){const n=A,t=new RegExp(n(347)),e=new RegExp(n(395),"i"),r=F(n(356));t[n(357)](r+n(391))&&e[n(357)](r+"input")?F():r("0")}))()}();const I=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[A(388)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();I(void 0,(function(){const n=A,t=function(){const n=A;let t;try{t=Function(n(376)+n(345)+");")()}catch(e){t=window}return t}(),e=t[n(344)]=t[n(344)]||{},r=["log",n(397),n(384),n(400),"exception",n(355),n(390)];for(let o=0;o<r.length;o++){const t=I[n(352)][n(380)][n(402)](I),a=r[o],i=e[a]||t;t[n(343)]=I.bind(I),t[n(378)]=i.toString[n(402)](i),e[a]=t}}))();const V=[D(398)],P=[D(383),D(371),"fragmentShader"];function A(n,t){const e=M();return A=function(n,t){return e[n-=334]},A(n,t)}function M(){const n=["TresSphereGeometry","Cross Section Settings","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","counter","warn","rotation-x","while (true) {}","error","color","bind","Display Settings","u_isoValue","4068405aMUYpg","1985316IZQKXW","321080MKPgRw","addBinding","417246QDKruP","RedFormat","action","RepeatWrapping","getElapsedTime","__proto__","console",'{}.constructor("return this")( )',"innerWidth","function *\\( *\\)","basicVolumeRendering","TresMesh","meshRef","Vector3","constructor","alphaVal","position","table","init","test","length","u_dt","LinearFilter","20824vlDJcE","Data3DTexture","Error fetching volume data:","magFilter","1899GpxAmq","Algorithm Settings","u_volume","call","innerHeight","minFilter","vertexShader","debu","stateObject","u_alphaVal","value","return (function() ","u_time","toString","45igGfpn","prototype","addFolder","catch","uniforms","info","TresShaderMaterial","arrayBuffer","709101YokjOG","apply","3447381CQjLQY","trace","chain","then"];return(M=function(){return n})()}const O=41,R=i({__name:D(348),setup(e){const i=D,_=window[i(346)],g=window[i(369)],d=c(null),x=c(null),h=new o;h.start();const y=(new a)[i(381)]({title:i(403)}),b=y.addFolder({title:i(394)}),S=new(r[i(351)])(.5,.5,.5);b.addBinding(S,"x",{label:"X",min:.02,max:.5,step:.02}),b[i(337)](S,"y",{label:"Y",min:.02,max:.5,step:.02}),b[i(337)](S,"z",{label:"Z",min:.02,max:.5,step:.02}),b.expanded=!0;const{camera:w}=n(),z=l({u_camera:{value:w[i(375)]?.[i(354)]},u_resolution:{value:new(r[i(351)])(_,g,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:S},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),j=y[i(381)]({title:i(366)});j[i(337)](z[i(359)],i(375),{label:"dt",min:4e-4,max:.016,step:2e-4}),j[i(337)](z.u_color,"value",{label:i(401),min:1,max:3,step:1}),j[i(337)](z[i(374)],i(375),{label:i(353),min:.01,max:1,step:.01}),j.addBinding(z[i(404)],i(375),{label:"isoValue",min:0,max:1,step:.04}),u(x,(n=>{const t=i;if(n){const e=new(r[t(362)])(n,O,O,O);e.format=r[t(339)],e[t(370)]=r[t(360)],e[t(364)]=r[t(360)],e.wrapT=r[t(341)],e.needsUpdate=!0,z[t(367)][t(375)]=e}}));const{onLoop:k}=t();return k((()=>{const n=i;z[n(377)].value=h[n(342)]()})),s((()=>{(()=>{const n=i;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw")[n(392)]((t=>t[n(386)]()))[n(392)]((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r[e(358)];n++)o[n]=r[n];x[e(375)]=o}))[n(382)]((t=>{const e=n;console[e(400)](e(363),t)}))})()})),(n,t)=>{const e=i;return p(),m(e(349),{ref_key:e(350),ref:d,"rotation-x":Math.PI/-2},[t[0]||(t[0]=v(e(393),{args:[1,16,16]},null,-1)),v(e(385),{uniforms:z,vertexShader:f("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:f("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,P)],8,V)}}});function F(n){function t(n){const e=A;if("string"==typeof n)return function(n){}.constructor(e(399))[e(388)](e(396));1!==(""+n/n)[e(358)]||n%20==0?function(){return!0}[e(352)](e(372)+"gger")[e(368)](e(340)):function(){return!1}[e(352)](e(372)+"gger").apply(e(373)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const L=T;function T(n,t){const e=U();return T=function(n,t){return e[n-=384]},T(n,t)}!function(n,t){const e=T,r=U();for(;;)try{if(491546===parseInt(e(388))/1+-parseInt(e(386))/2*(-parseInt(e(390))/3)+parseInt(e(394))/4*(parseInt(e(409))/5)+-parseInt(e(411))/6+-parseInt(e(406))/7*(parseInt(e(427))/8)+-parseInt(e(416))/9+parseInt(e(393))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const C=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[T(420)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){C(this,(function(){const n=T,t=new RegExp(n(423)),e=new RegExp(n(426),"i"),r=Y("init");t[n(419)](r+n(415))&&e.test(r+n(421))?Y():r("0")}))()}();const E=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[T(420)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();E(void 0,(function(){const n=T;let t;try{t=Function(n(428)+n(391)+");")()}catch(o){t=window}const e=t.console=t[n(403)]||{},r=[n(418),n(405),n(387),"error",n(424),"table",n(422)];for(let a=0;a<r[n(417)];a++){const t=E[n(389)].prototype[n(392)](E),o=r[a],i=e[o]||t;t[n(400)]=E[n(392)](E),t[n(384)]=i[n(384)][n(392)](i),e[o]=t}}))();function U(){const n=["2217397CexDSL","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","debu","5PuAIfb","_blank","4663524YukzkA","gger","#201919","TresCanvas","chain","77571pdPpDO","length","log","test","apply","input","trace","function *\\( *\\)","exception","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","8XDfggA","return (function() ","toString","TresAmbientLight","236184kpsYAz","info","772550AoDvPP","constructor","6tObAUx",'{}.constructor("return this")( )',"bind","2059770QRcdVx","1517916zUUXVY","basicVolume","TresGridHelper","string","stateObject","TresPerspectiveCamera","__proto__","counter","action","console"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw ","warn"];return(U=function(){return n})()}function Y(n){function t(n){const e=T;if(typeof n===e(397))return function(n){}[e(389)]("while (true) {}")[e(420)](e(401));1!==(""+n/n)[e(417)]||n%20==0?function(){return!0}[e(389)]("debu"+e(412))[e(425)](e(402)):function(){return!1}[e(389)](e(408)+"gger").apply(e(398)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const Z=j(i({__name:L(395),setup(n){const t=l({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=l({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=T,i=_(a(414));return p(),m(z,null,[o[3]||(o[3]=v("div",{class:a(387)},[v("a",{href:a(407),target:a(410)},a(404)),v("br"),g(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),d(i,w({clearColor:a(413)},t),{default:x((()=>[o[0]||(o[0]=v(a(399),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=v(a(385),{intensity:2},null,-1)),d(f(e),h(y(r)),null,16),(p(),b(S,null,{default:x((()=>[d(R,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=v(a(396),{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{Z as default};
