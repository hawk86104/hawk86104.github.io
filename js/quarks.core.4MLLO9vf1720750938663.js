const t=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let e=1234567;const s=Math.PI/180,i=180/Math.PI;function r(){const e=4294967295*Math.random()|0,s=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+"-"+t[255&s]+t[s>>8&255]+"-"+t[s>>16&15|64]+t[s>>24&255]+"-"+t[63&i|128]+t[i>>8&255]+"-"+t[i>>16&255]+t[i>>24&255]+t[255&r]+t[r>>8&255]+t[r>>16&255]+t[r>>24&255]).toLowerCase()}function n(t,e,s){return Math.max(e,Math.min(s,t))}function h(t,e){return(t%e+e)%e}function a(t,e,s,i,r){return i+(t-e)*(r-i)/(s-e)}function o(t,e,s){return t!==e?(s-t)/(e-t):0}function l(t,e,s){return(1-s)*t+s*e}function c(t,e,s,i){return l(t,e,1-Math.exp(-s*i))}function u(t,e=1){return e-Math.abs(h(t,2*e)-e)}function m(t,e,s){return t<=e?0:t>=s?1:(t=(t-e)/(s-e))*t*(3-2*t)}function d(t,e,s){return t<=e?0:t>=s?1:(t=(t-e)/(s-e))*t*t*(t*(6*t-15)+10)}function y(t,e){return t+Math.floor(Math.random()*(e-t+1))}function p(t,e){return t+Math.random()*(e-t)}function x(t){return t*(.5-Math.random())}function f(t){void 0!==t&&(e=t);let s=e+=1831565813;return s=Math.imul(s^s>>>15,1|s),s^=s+Math.imul(s^s>>>7,61|s),((s^s>>>14)>>>0)/4294967296}function g(t){return t*s}function w(t){return t*i}function M(t){return 0==(t&t-1)&&0!==t}function z(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function S(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function _(t,e,s,i,r){const n=Math.cos,h=Math.sin,a=n(s/2),o=h(s/2),l=n((e+i)/2),c=h((e+i)/2),u=n((e-i)/2),m=h((e-i)/2),d=n((i-e)/2),y=h((i-e)/2);switch(r){case"XYX":t.set(a*c,o*u,o*m,a*l);break;case"YZY":t.set(o*m,a*c,o*u,a*l);break;case"ZXZ":t.set(o*u,o*m,a*c,a*l);break;case"XZX":t.set(a*c,o*y,o*d,a*l);break;case"YXY":t.set(o*d,a*c,o*y,a*l);break;case"ZYZ":t.set(o*y,o*d,a*c,a*l);break;default:console.warn("../math.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function v(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function b(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const O={DEG2RAD:s,RAD2DEG:i,generateUUID:r,clamp:n,euclideanModulo:h,mapLinear:a,inverseLerp:o,lerp:l,damp:c,pingpong:u,smoothstep:m,smootherstep:d,randInt:y,randFloat:p,randFloatSpread:x,seededRandom:f,degToRad:g,radToDeg:w,isPowerOfTwo:M,ceilPowerOfTwo:z,floorPowerOfTwo:S,setQuaternionFromProperEuler:_,normalize:b,denormalize:v};class N{constructor(t=0,e=0,s=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=s,this._w=i}static slerpFlat(t,e,s,i,r,n,h){let a=s[i+0],o=s[i+1],l=s[i+2],c=s[i+3];const u=r[n+0],m=r[n+1],d=r[n+2],y=r[n+3];if(0===h)return t[e+0]=a,t[e+1]=o,t[e+2]=l,void(t[e+3]=c);if(1===h)return t[e+0]=u,t[e+1]=m,t[e+2]=d,void(t[e+3]=y);if(c!==y||a!==u||o!==m||l!==d){let t=1-h;const e=a*u+o*m+l*d+c*y,s=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),n=Math.atan2(r,e*s);t=Math.sin(t*n)/r,h=Math.sin(h*n)/r}const r=h*s;if(a=a*t+u*r,o=o*t+m*r,l=l*t+d*r,c=c*t+y*r,t===1-h){const t=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=t,o*=t,l*=t,c*=t}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,s,i,r,n){const h=s[i],a=s[i+1],o=s[i+2],l=s[i+3],c=r[n],u=r[n+1],m=r[n+2],d=r[n+3];return t[e]=h*d+l*c+a*m-o*u,t[e+1]=a*d+l*u+o*c-h*m,t[e+2]=o*d+l*m+h*u-a*c,t[e+3]=l*d-h*c-a*u-o*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,s,i){return this._x=t,this._y=e,this._z=s,this._w=i,this._onChangeCallback(),this}clone(){return new N(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const s=t._x,i=t._y,r=t._z,n=t._order,h=Math.cos,a=Math.sin,o=h(s/2),l=h(i/2),c=h(r/2),u=a(s/2),m=a(i/2),d=a(r/2);switch(n){case"XYZ":this._x=u*l*c+o*m*d,this._y=o*m*c-u*l*d,this._z=o*l*d+u*m*c,this._w=o*l*c-u*m*d;break;case"YXZ":this._x=u*l*c+o*m*d,this._y=o*m*c-u*l*d,this._z=o*l*d-u*m*c,this._w=o*l*c+u*m*d;break;case"ZXY":this._x=u*l*c-o*m*d,this._y=o*m*c+u*l*d,this._z=o*l*d+u*m*c,this._w=o*l*c-u*m*d;break;case"ZYX":this._x=u*l*c-o*m*d,this._y=o*m*c+u*l*d,this._z=o*l*d-u*m*c,this._w=o*l*c+u*m*d;break;case"YZX":this._x=u*l*c+o*m*d,this._y=o*m*c+u*l*d,this._z=o*l*d-u*m*c,this._w=o*l*c-u*m*d;break;case"XZY":this._x=u*l*c-o*m*d,this._y=o*m*c-u*l*d,this._z=o*l*d+u*m*c,this._w=o*l*c+u*m*d;break;default:console.warn("../math.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const s=e/2,i=Math.sin(s);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,s=e[0],i=e[4],r=e[8],n=e[1],h=e[5],a=e[9],o=e[2],l=e[6],c=e[10],u=s+h+c;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-o)*t,this._z=(n-i)*t}else if(s>h&&s>c){const t=2*Math.sqrt(1+s-h-c);this._w=(l-a)/t,this._x=.25*t,this._y=(i+n)/t,this._z=(r+o)/t}else if(h>c){const t=2*Math.sqrt(1+h-s-c);this._w=(r-o)/t,this._x=(i+n)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+c-s-h);this._w=(n-i)/t,this._x=(r+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let s=t.dot(e)+1;return s<Number.EPSILON?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(n(this.dot(t),-1,1)))}rotateTowards(t,e){const s=this.angleTo(t);if(0===s)return this;const i=Math.min(1,e/s);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const s=t._x,i=t._y,r=t._z,n=t._w,h=e._x,a=e._y,o=e._z,l=e._w;return this._x=s*l+n*h+i*o-r*a,this._y=i*l+n*a+r*h-s*o,this._z=r*l+n*o+s*a-i*h,this._w=n*l-s*h-i*a-r*o,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const s=this._x,i=this._y,r=this._z,n=this._w;let h=n*t._w+s*t._x+i*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=s,this._y=i,this._z=r,this;const a=1-h*h;if(a<=Number.EPSILON){const t=1-e;return this._w=t*n+e*this._w,this._x=t*s+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),c=Math.sin((1-e)*l)/o,u=Math.sin(e*l)/o;return this._w=n*c+this._w*u,this._x=s*c+this._x*u,this._y=i*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,s){return this.copy(t).slerp(e,s)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),s=Math.random(),i=Math.sqrt(1-s),r=Math.sqrt(s);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class J{constructor(t=0,e=0,s=0){this.isVector3=!0,J.prototype.isVector3=!0,this.x=t,this.y=e,this.z=s}set(t,e,s){return void 0===s&&(s=this.z),this.x=t,this.y=e,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new J(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(C.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(C.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,s=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*s+r[6]*i,this.y=r[1]*e+r[4]*s+r[7]*i,this.z=r[2]*e+r[5]*s+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,s=this.y,i=this.z,r=t.elements,n=1/(r[3]*e+r[7]*s+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*s+r[8]*i+r[12])*n,this.y=(r[1]*e+r[5]*s+r[9]*i+r[13])*n,this.z=(r[2]*e+r[6]*s+r[10]*i+r[14])*n,this}applyQuaternion(t){const e=this.x,s=this.y,i=this.z,r=t.x,n=t.y,h=t.z,a=t.w,o=2*(n*i-h*s),l=2*(h*e-r*i),c=2*(r*s-n*e);return this.x=e+a*o+n*c-h*l,this.y=s+a*l+h*o-r*c,this.z=i+a*c+r*l-n*o,this}transformDirection(t){const e=this.x,s=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*s+r[8]*i,this.y=r[1]*e+r[5]*s+r[9]*i,this.z=r[2]*e+r[6]*s+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(e,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this.z=t.z+(e.z-t.z)*s,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const s=t.x,i=t.y,r=t.z,n=e.x,h=e.y,a=e.z;return this.x=i*a-r*h,this.y=r*n-s*a,this.z=s*h-i*n,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const s=t.dot(this)/e;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return k.copy(this).projectOnVector(t),this.sub(k)}reflect(t){return this.sub(k.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const s=this.dot(t)/e;return Math.acos(n(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,s=this.y-t.y,i=this.z-t.z;return e*e+s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSphericalCoords(t,e,s){const i=Math.sin(e)*t;return this.x=i*Math.sin(s),this.y=Math.cos(e)*t,this.z=i*Math.cos(s),this}setFromCylindricalCoords(t,e,s){return this.x=t*Math.sin(e),this.y=s,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=s,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,s=Math.sqrt(1-e*e);return this.x=s*Math.cos(t),this.y=e,this.z=s*Math.sin(t),this}abs(){return this.x=Math.abs(this.x),this.y=Math.abs(this.y),this.z=Math.abs(this.z),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const k=new J,C=new N,V=2e3,F=2001;class A{constructor(t,e,s,i,r,n,h,a,o,l,c,u,m,d,y,p){this.isMatrix4=!0,A.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,s,i,r,n,h,a,o,l,c,u,m,d,y,p)}extractPosition(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)}multiplyToArray(t,e,s){return console.error("THREE.Matrix4: .multiplyToArray() has been removed."),this}setRotationFromQuaternion(t){return this.makeRotationFromQuaternion(t)}set(t,e,s,i,r,n,h,a,o,l,c,u,m,d,y,p){const x=this.elements;return x[0]=t,x[4]=e,x[8]=s,x[12]=i,x[1]=r,x[5]=n,x[9]=h,x[13]=a,x[2]=o,x[6]=l,x[10]=c,x[14]=u,x[3]=m,x[7]=d,x[11]=y,x[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new A).fromArray(this.elements)}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],e[9]=s[9],e[10]=s[10],e[11]=s[11],e[12]=s[12],e[13]=s[13],e[14]=s[14],e[15]=s[15],this}copyPosition(t){const e=this.elements,s=t.elements;return e[12]=s[12],e[13]=s[13],e[14]=s[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,s){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,e,s){return this.set(t.x,e.x,s.x,0,t.y,e.y,s.y,0,t.z,e.z,s.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,s=t.elements,i=1/R.setFromMatrixColumn(t,0).length(),r=1/R.setFromMatrixColumn(t,1).length(),n=1/R.setFromMatrixColumn(t,2).length();return e[0]=s[0]*i,e[1]=s[1]*i,e[2]=s[2]*i,e[3]=0,e[4]=s[4]*r,e[5]=s[5]*r,e[6]=s[6]*r,e[7]=0,e[8]=s[8]*n,e[9]=s[9]*n,e[10]=s[10]*n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,s=t.x,i=t.y,r=t.z,n=Math.cos(s),h=Math.sin(s),a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){const t=n*l,s=n*c,i=h*l,r=h*c;e[0]=a*l,e[4]=-a*c,e[8]=o,e[1]=s+i*o,e[5]=t-r*o,e[9]=-h*a,e[2]=r-t*o,e[6]=i+s*o,e[10]=n*a}else if("YXZ"===t.order){const t=a*l,s=a*c,i=o*l,r=o*c;e[0]=t+r*h,e[4]=i*h-s,e[8]=n*o,e[1]=n*c,e[5]=n*l,e[9]=-h,e[2]=s*h-i,e[6]=r+t*h,e[10]=n*a}else if("ZXY"===t.order){const t=a*l,s=a*c,i=o*l,r=o*c;e[0]=t-r*h,e[4]=-n*c,e[8]=i+s*h,e[1]=s+i*h,e[5]=n*l,e[9]=r-t*h,e[2]=-n*o,e[6]=h,e[10]=n*a}else if("ZYX"===t.order){const t=n*l,s=n*c,i=h*l,r=h*c;e[0]=a*l,e[4]=i*o-s,e[8]=t*o+r,e[1]=a*c,e[5]=r*o+t,e[9]=s*o-i,e[2]=-o,e[6]=h*a,e[10]=n*a}else if("YZX"===t.order){const t=n*a,s=n*o,i=h*a,r=h*o;e[0]=a*l,e[4]=r-t*c,e[8]=i*c+s,e[1]=c,e[5]=n*l,e[9]=-h*l,e[2]=-o*l,e[6]=s*c+i,e[10]=t-r*c}else if("XZY"===t.order){const t=n*a,s=n*o,i=h*a,r=h*o;e[0]=a*l,e[4]=-c,e[8]=o*l,e[1]=t*c+r,e[5]=n*l,e[9]=s*c-i,e[2]=i*c-s,e[6]=h*l,e[10]=r*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(P,t,E)}lookAt(t,e,s){const i=this.elements;return I.subVectors(t,e),0===I.lengthSq()&&(I.z=1),I.normalize(),X.crossVectors(s,I),0===X.lengthSq()&&(1===Math.abs(s.z)?I.x+=1e-4:I.z+=1e-4,I.normalize(),X.crossVectors(s,I)),X.normalize(),L.crossVectors(I,X),i[0]=X.x,i[4]=L.x,i[8]=I.x,i[1]=X.y,i[5]=L.y,i[9]=I.y,i[2]=X.z,i[6]=L.z,i[10]=I.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const s=t.elements,i=e.elements,r=this.elements,n=s[0],h=s[4],a=s[8],o=s[12],l=s[1],c=s[5],u=s[9],m=s[13],d=s[2],y=s[6],p=s[10],x=s[14],f=s[3],g=s[7],w=s[11],M=s[15],z=i[0],S=i[4],_=i[8],v=i[12],b=i[1],O=i[5],N=i[9],J=i[13],k=i[2],C=i[6],V=i[10],F=i[14],A=i[3],R=i[7],q=i[11],P=i[15];return r[0]=n*z+h*b+a*k+o*A,r[4]=n*S+h*O+a*C+o*R,r[8]=n*_+h*N+a*V+o*q,r[12]=n*v+h*J+a*F+o*P,r[1]=l*z+c*b+u*k+m*A,r[5]=l*S+c*O+u*C+m*R,r[9]=l*_+c*N+u*V+m*q,r[13]=l*v+c*J+u*F+m*P,r[2]=d*z+y*b+p*k+x*A,r[6]=d*S+y*O+p*C+x*R,r[10]=d*_+y*N+p*V+x*q,r[14]=d*v+y*J+p*F+x*P,r[3]=f*z+g*b+w*k+M*A,r[7]=f*S+g*O+w*C+M*R,r[11]=f*_+g*N+w*V+M*q,r[15]=f*v+g*J+w*F+M*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],s=t[4],i=t[8],r=t[12],n=t[1],h=t[5],a=t[9],o=t[13],l=t[2],c=t[6],u=t[10],m=t[14];return t[3]*(+r*a*c-i*o*c-r*h*u+s*o*u+i*h*m-s*a*m)+t[7]*(+e*a*m-e*o*u+r*n*u-i*n*m+i*o*l-r*a*l)+t[11]*(+e*o*c-e*h*m-r*n*c+s*n*m+r*h*l-s*o*l)+t[15]*(-i*h*l-e*a*c+e*h*u+i*n*c-s*n*u+s*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,s){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=s),this}invert(){const t=this.elements,e=t[0],s=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=t[9],u=t[10],m=t[11],d=t[12],y=t[13],p=t[14],x=t[15],f=c*p*o-y*u*o+y*a*m-h*p*m-c*a*x+h*u*x,g=d*u*o-l*p*o-d*a*m+n*p*m+l*a*x-n*u*x,w=l*y*o-d*c*o+d*h*m-n*y*m-l*h*x+n*c*x,M=d*c*a-l*y*a-d*h*u+n*y*u+l*h*p-n*c*p,z=e*f+s*g+i*w+r*M;if(0===z)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/z;return t[0]=f*S,t[1]=(y*u*r-c*p*r-y*i*m+s*p*m+c*i*x-s*u*x)*S,t[2]=(h*p*r-y*a*r+y*i*o-s*p*o-h*i*x+s*a*x)*S,t[3]=(c*a*r-h*u*r-c*i*o+s*u*o+h*i*m-s*a*m)*S,t[4]=g*S,t[5]=(l*p*r-d*u*r+d*i*m-e*p*m-l*i*x+e*u*x)*S,t[6]=(d*a*r-n*p*r-d*i*o+e*p*o+n*i*x-e*a*x)*S,t[7]=(n*u*r-l*a*r+l*i*o-e*u*o-n*i*m+e*a*m)*S,t[8]=w*S,t[9]=(d*c*r-l*y*r-d*s*m+e*y*m+l*s*x-e*c*x)*S,t[10]=(n*y*r-d*h*r+d*s*o-e*y*o-n*s*x+e*h*x)*S,t[11]=(l*h*r-n*c*r-l*s*o+e*c*o+n*s*m-e*h*m)*S,t[12]=M*S,t[13]=(l*y*i-d*c*i+d*s*u-e*y*u-l*s*p+e*c*p)*S,t[14]=(d*h*i-n*y*i-d*s*a+e*y*a+n*s*p-e*h*p)*S,t[15]=(n*c*i-l*h*i+l*s*a-e*c*a-n*s*u+e*h*u)*S,this}scale(t){const e=this.elements,s=t.x,i=t.y,r=t.z;return e[0]*=s,e[4]*=i,e[8]*=r,e[1]*=s,e[5]*=i,e[9]*=r,e[2]*=s,e[6]*=i,e[10]*=r,e[3]*=s,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,s,i))}makeTranslation(t,e,s){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,s,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const s=Math.cos(e),i=Math.sin(e),r=1-s,n=t.x,h=t.y,a=t.z,o=r*n,l=r*h;return this.set(o*n+s,o*h-i*a,o*a+i*h,0,o*h+i*a,l*h+s,l*a-i*n,0,o*a-i*h,l*a+i*n,r*a*a+s,0,0,0,0,1),this}makeScale(t,e,s){return this.set(t,0,0,0,0,e,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,e,s,i,r,n){return this.set(1,s,r,0,t,1,n,0,e,i,1,0,0,0,0,1),this}compose(t,e,s){const i=this.elements,r=e._x,n=e._y,h=e._z,a=e._w,o=r+r,l=n+n,c=h+h,u=r*o,m=r*l,d=r*c,y=n*l,p=n*c,x=h*c,f=a*o,g=a*l,w=a*c,M=s.x,z=s.y,S=s.z;return i[0]=(1-(y+x))*M,i[1]=(m+w)*M,i[2]=(d-g)*M,i[3]=0,i[4]=(m-w)*z,i[5]=(1-(u+x))*z,i[6]=(p+f)*z,i[7]=0,i[8]=(d+g)*S,i[9]=(p-f)*S,i[10]=(1-(u+y))*S,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,s){const i=this.elements;let r=R.set(i[0],i[1],i[2]).length();const n=R.set(i[4],i[5],i[6]).length(),h=R.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],q.copy(this);const a=1/r,o=1/n,l=1/h;return q.elements[0]*=a,q.elements[1]*=a,q.elements[2]*=a,q.elements[4]*=o,q.elements[5]*=o,q.elements[6]*=o,q.elements[8]*=l,q.elements[9]*=l,q.elements[10]*=l,e.setFromRotationMatrix(q),s.x=r,s.y=n,s.z=h,this}makePerspective(t,e,s,i,r,n,h=2e3){const a=this.elements,o=2*r/(e-t),l=2*r/(s-i),c=(e+t)/(e-t),u=(s+i)/(s-i);let m,d;if(h===V)m=-(n+r)/(n-r),d=-2*n*r/(n-r);else{if(h!==F)throw new Error("Matrix4.makePerspective(): Invalid coordinate system: "+h);m=-n/(n-r),d=-n*r/(n-r)}return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=m,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,s,i,r,n,h=2e3){const a=this.elements,o=1/(e-t),l=1/(s-i),c=1/(n-r),u=(e+t)*o,m=(s+i)*l;let d,y;if(h===V)d=(n+r)*c,y=-2*c;else{if(h!==F)throw new Error("../math.Matrix4.makeOrthographic(): Invalid coordinate system: "+h);d=r*c,y=-1*c}return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-m,a[2]=0,a[6]=0,a[10]=y,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,s=t.elements;for(let i=0;i<16;i++)if(e[i]!==s[i])return!1;return!0}fromArray(t,e=0){for(let s=0;s<16;s++)this.elements[s]=t[s+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t[e+9]=s[9],t[e+10]=s[10],t[e+11]=s[11],t[e+12]=s[12],t[e+13]=s[13],t[e+14]=s[14],t[e+15]=s[15],t}}const R=new J,q=new A,P=new J(0,0,0),E=new J(1,1,1),X=new J,L=new J,I=new J,G=new A,T=new N;class Y{constructor(t=0,e=0,s=0,i=Y.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=s,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,s,i=this._order){return this._x=t,this._y=e,this._z=s,this._order=i,this._onChangeCallback(),this}clone(){return new Y(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,s=!0){const i=t.elements,r=i[0],h=i[4],a=i[8],o=i[1],l=i[5],c=i[9],u=i[2],m=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-h,r)):(this._x=Math.atan2(m,l),this._z=0);break;case"YXZ":this._x=Math.asin(-n(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(n(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-h,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(m,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-h,l));break;case"YZX":this._z=Math.asin(n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(m,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("../math.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===s&&this._onChangeCallback(),this}setFromQuaternion(t,e,s){return G.makeRotationFromQuaternion(t),this.setFromRotationMatrix(G,e,s)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return T.setFromEuler(this),this.setFromQuaternion(T,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(t){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Y.DEFAULT_ORDER="XYZ";class D{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new D(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,s=this.y,i=t.elements;return this.x=i[0]*e+i[3]*s+i[6],this.y=i[1]*e+i[4]*s+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(e,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const s=this.dot(t)/e;return Math.acos(n(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,s=this.y-t.y;return e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}rotateAround(t,e){const s=Math.cos(e),i=Math.sin(e),r=this.x-t.x,n=this.y-t.y;return this.x=r*s-n*i+t.x,this.y=r*i+n*s+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}D.isVector2=!0;class Z{constructor(t=0,e=0,s=0,i=1){Z.prototype.isVector4=!0,this.x=t,this.y=e,this.z=s,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new Z(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,s=this.y,i=this.z,r=this.w,n=t.elements;return this.x=n[0]*e+n[4]*s+n[8]*i+n[12]*r,this.y=n[1]*e+n[5]*s+n[9]*i+n[13]*r,this.z=n[2]*e+n[6]*s+n[10]*i+n[14]*r,this.w=n[3]*e+n[7]*s+n[11]*i+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,s,i,r;const n=.01,h=.1,a=t.elements,o=a[0],l=a[4],c=a[8],u=a[1],m=a[5],d=a[9],y=a[2],p=a[6],x=a[10];if(Math.abs(l-u)<n&&Math.abs(c-y)<n&&Math.abs(d-p)<n){if(Math.abs(l+u)<h&&Math.abs(c+y)<h&&Math.abs(d+p)<h&&Math.abs(o+m+x-3)<h)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,a=(m+1)/2,f=(x+1)/2,g=(l+u)/4,w=(c+y)/4,M=(d+p)/4;return t>a&&t>f?t<n?(s=0,i=.707106781,r=.707106781):(s=Math.sqrt(t),i=g/s,r=w/s):a>f?a<n?(s=.707106781,i=0,r=.707106781):(i=Math.sqrt(a),s=g/i,r=M/i):f<n?(s=.707106781,i=.707106781,r=0):(r=Math.sqrt(f),s=w/r,i=M/r),this.set(s,i,r,e),this}let f=Math.sqrt((p-d)*(p-d)+(c-y)*(c-y)+(u-l)*(u-l));return Math.abs(f)<.001&&(f=1),this.x=(p-d)/f,this.y=(c-y)/f,this.z=(u-l)/f,this.w=Math.acos((o+m+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(e,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,s){return this.x=t.x+(e.x-t.x)*s,this.y=t.y+(e.y-t.y)*s,this.z=t.z+(e.z-t.z)*s,this.w=t.w+(e.w-t.w)*s,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class U{constructor(t,e,s,i,r,n,h,a,o){U.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,s,i,r,n,h,a,o)}set(t,e,s,i,r,n,h,a,o){const l=this.elements;return l[0]=t,l[1]=i,l[2]=h,l[3]=e,l[4]=r,l[5]=a,l[6]=s,l[7]=n,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],this}extractBasis(t,e,s){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const s=t.elements,i=e.elements,r=this.elements,n=s[0],h=s[3],a=s[6],o=s[1],l=s[4],c=s[7],u=s[2],m=s[5],d=s[8],y=i[0],p=i[3],x=i[6],f=i[1],g=i[4],w=i[7],M=i[2],z=i[5],S=i[8];return r[0]=n*y+h*f+a*M,r[3]=n*p+h*g+a*z,r[6]=n*x+h*w+a*S,r[1]=o*y+l*f+c*M,r[4]=o*p+l*g+c*z,r[7]=o*x+l*w+c*S,r[2]=u*y+m*f+d*M,r[5]=u*p+m*g+d*z,r[8]=u*x+m*w+d*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],s=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return e*n*l-e*h*o-s*r*l+s*h*a+i*r*o-i*n*a}invert(){const t=this.elements,e=t[0],s=t[1],i=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8],c=l*n-h*o,u=h*a-l*r,m=o*r-n*a,d=e*c+s*u+i*m;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const y=1/d;return t[0]=c*y,t[1]=(i*o-l*s)*y,t[2]=(h*s-i*n)*y,t[3]=u*y,t[4]=(l*e-i*a)*y,t[5]=(i*r-h*e)*y,t[6]=m*y,t[7]=(s*a-o*e)*y,t[8]=(n*e-s*r)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,s,i,r,n,h){const a=Math.cos(r),o=Math.sin(r);return this.set(s*a,s*o,-s*(a*n+o*h)+n+t,-i*o,i*a,-i*(-o*n+a*h)+h+e,0,0,1),this}scale(t,e){return this.premultiply(B.makeScale(t,e)),this}rotate(t){return this.premultiply(B.makeRotation(-t)),this}translate(t,e){return this.premultiply(B.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,s,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,s=t.elements;for(let i=0;i<9;i++)if(e[i]!==s[i])return!1;return!0}fromArray(t,e=0){for(let s=0;s<9;s++)this.elements[s]=t[s+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t}clone(){return(new U).fromArray(this.elements)}}const B=new U;var Q,j;function W(t,e,s,i){let r;switch(Q.Random===t?e=Math.random():Q.Burst===t&&i.isBursting&&(e=i.burstParticleIndex/i.burstParticleCount),r=s>0?Math.floor(e/s)*s:e,t){case Q.Loop:r%=1;break;case Q.PingPong:r=Math.abs(r%2-1)}return r}(j=Q||(Q={}))[j.Random=0]="Random",j[j.Loop=1]="Loop",j[j.PingPong=2]="PingPong",j[j.Burst=3]="Burst";class H{constructor(t,e,s,i){this.p=[t,e,s,i]}genValue(t){const e=t*t,s=t*t*t,i=1-t,r=i*i,n=r*i;return this.p[0]*n+this.p[1]*r*t*3+this.p[2]*i*e*3+this.p[3]*s}derivativeCoefficients(t){const e=[];for(let s=t,i=s.length-1;i>0;i--){const t=[];for(let e=0;e<i;e++){const r=i*(s[e+1]-s[e]);t.push(r)}e.push(t),s=t}return e}getSlope(t){const e=this.derivativeCoefficients(this.p)[0],s=1-t,i=s*t*2,r=t*t;return s*s*e[0]+i*e[1]+r*e[2]}controlCurve(t,e){this.p[1]=t/3+this.p[0],this.p[2]=this.p[3]-e/3}hull(t){let e,s=this.p,i=[],r=0,n=0,h=0;const a=[];for(a[r++]=s[0],a[r++]=s[1],a[r++]=s[2],a[r++]=s[3];s.length>1;){for(i=[],n=0,h=s.length-1;n<h;n++)e=t*s[n]+(1-t)*s[n+1],a[r++]=e,i.push(e);s=i}return a}split(t){const e=this.hull(t);return{left:new H(e[0],e[4],e[7],e[9]),right:new H(e[9],e[8],e[6],e[3]),span:e}}clone(){return new H(this.p[0],this.p[1],this.p[2],this.p[3])}toJSON(){return{p0:this.p[0],p1:this.p[1],p2:this.p[2],p3:this.p[3]}}static fromJSON(t){return new H(t.p0,t.p1,t.p2,t.p3)}}const K=t=>({r:t.x,g:t.y,b:t.z,a:t.w}),$=t=>new Z(t.r,t.g,t.b,t.a),tt=(t,e)=>{switch(e){case"Vector3":return new J(t.x,t.y,t.z);case"Vector4":return new Z(t.x,t.y,t.z,t.w);case"Color":return new J(t.r,t.g,t.b);default:return t}},et=(t,e)=>{switch(e){case"Vector3":return{x:t.x,y:t.y,z:t.z};case"Vector4":return{x:t.x,y:t.y,z:t.z,w:t.w};case"Color":return{r:t.x,g:t.y,b:t.z};default:return t}};class st{constructor(t,e){this.a=t,this.b=e,this.type="value"}startGen(t){}genColor(t,e){const s=Math.random();return e.copy(this.a).lerp(this.b,s)}toJSON(){return{type:"RandomColor",a:K(this.a),b:K(this.b)}}static fromJSON(t){return new st($(t.a),$(t.b))}clone(){return new st(this.a.clone(),this.b.clone())}}class it{constructor(t,e){this.a=t,this.b=e,this.indexCount=-1,this.type="value"}startGen(t){this.indexCount=t.length,t.push(Math.random())}genColor(t,e){return-1===this.indexCount&&this.startGen(t),e.copy(this.a).lerp(this.b,t[this.indexCount])}toJSON(){return{type:"ColorRange",a:K(this.a),b:K(this.b)}}static fromJSON(t){return new it($(t.a),$(t.b))}clone(){return new it(this.a.clone(),this.b.clone())}}class rt{constructor(t,e){this.subType=e,this.type="function",this.keys=t}findKey(t){let e=0,s=0,i=this.keys.length-1;for(;s+1<i;)if(e=Math.floor((s+i)/2),t<this.getStartX(e))i=e-1;else{if(!(t>this.getEndX(e)))return e;s=e+1}for(let r=s;r<=i;r++)if(t>=this.getStartX(r)&&t<=this.getEndX(r))return r;return-1}getStartX(t){return this.keys[t][1]}getEndX(t){return t+1<this.keys.length?this.keys[t+1][1]:1}genValue(t,e){const s=this.findKey(e);return"Number"===this.subType?-1===s?this.keys[0][0]:s+1>=this.keys.length?this.keys[this.keys.length-1][0]:(this.keys[s+1][0]-this.keys[s][0])*((e-this.getStartX(s))/(this.getEndX(s)-this.getStartX(s)))+this.keys[s][0]:-1===s?t.copy(this.keys[0][0]):s+1>=this.keys.length?t.copy(this.keys[this.keys.length-1][0]):t.copy(this.keys[s][0]).lerp(this.keys[s+1][0],(e-this.getStartX(s))/(this.getEndX(s)-this.getStartX(s)))}toJSON(){return this.keys[0][0].constructor.name,{type:"CLinearFunction",subType:this.subType,keys:this.keys.map((([t,e])=>({value:et(t,this.subType),pos:e})))}}static fromJSON(t){return new rt(t.keys.map((e=>[tt(e.value,t.subType),e.pos])),t.subType)}clone(){return"Number"===this.subType?new rt(this.keys.map((([t,e])=>[t,e])),this.subType):new rt(this.keys.map((([t,e])=>[t.clone(),e])),this.subType)}}const nt=new J;class ht{constructor(t=[[new J(0,0,0),0],[new J(1,1,1),0]],e=[[1,0],[1,1]]){this.type="function",this.color=new rt(t,"Color"),this.alpha=new rt(e,"Number")}genColor(t,e,s){return this.color.genValue(nt,s),e.set(nt.x,nt.y,nt.z,this.alpha.genValue(1,s))}toJSON(){return{type:"Gradient",color:this.color.toJSON(),alpha:this.alpha.toJSON()}}static fromJSON(t){if(t.functions){const e=t.functions.map((t=>[it.fromJSON(t.function).a,t.start]));return t.functions.length>0&&e.push([it.fromJSON(t.functions[t.functions.length-1].function).b,1]),new ht(e.map((t=>[new J(t[0].x,t[0].y,t[0].z),t[1]])),e.map((t=>[t[0].w,t[1]])))}{const e=new ht;return e.alpha=rt.fromJSON(t.alpha),e.color=rt.fromJSON(t.color),e}}clone(){const t=new ht;return t.alpha=this.alpha.clone(),t.color=this.color.clone(),t}startGen(t){}}const at=new Z;class ot{constructor(t,e){this.indexCount=0,this.type="function",this.gradient1=t,this.gradient2=e}startGen(t){this.indexCount=t.length,t.push(Math.random())}genColor(t,e,s){return this.gradient1.genColor(t,e,s),this.gradient2.genColor(t,at,s),t&&void 0!==t[this.indexCount]?e.lerp(at,t[this.indexCount]):e.lerp(at,Math.random()),e}toJSON(){return{type:"RandomColorBetweenGradient",gradient1:this.gradient1.toJSON(),gradient2:this.gradient2.toJSON()}}static fromJSON(t){return new ot(ht.fromJSON(t.gradient1),ht.fromJSON(t.gradient2))}clone(){return new ot(this.gradient1.clone(),this.gradient2.clone())}}class lt{constructor(t){this.color=t,this.type="value"}startGen(t){}genColor(t,e){return e.copy(this.color)}toJSON(){return{type:"ConstantColor",color:K(this.color)}}static fromJSON(t){return new lt($(t.color))}clone(){return new lt(this.color.clone())}}function ct(t){switch(t.type){case"ConstantColor":return lt.fromJSON(t);case"ColorRange":return it.fromJSON(t);case"RandomColor":return st.fromJSON(t);case"Gradient":return ht.fromJSON(t);case"RandomColorBetweenGradient":return ot.fromJSON(t);default:return new lt(new Z(1,1,1,1))}}class ut{constructor(t){this.value=t,this.type="value"}startGen(t){}genValue(t){return this.value}toJSON(){return{type:"ConstantValue",value:this.value}}static fromJSON(t){return new ut(t.value)}clone(){return new ut(this.value)}}class mt{constructor(t,e){this.a=t,this.b=e,this.indexCount=-1,this.type="value"}startGen(t){this.indexCount=t.length,t.push(Math.random())}genValue(t){return-1===this.indexCount&&this.startGen(t),O.lerp(this.a,this.b,t[this.indexCount])}toJSON(){return{type:"IntervalValue",a:this.a,b:this.b}}static fromJSON(t){return new mt(t.a,t.b)}clone(){return new mt(this.a,this.b)}}class dt{constructor(){this.functions=new Array}findFunction(t){let e=0,s=0,i=this.functions.length-1;for(;s+1<i;)if(e=Math.floor((s+i)/2),t<this.getStartX(e))i=e-1;else{if(!(t>this.getEndX(e)))return e;s=e+1}for(let r=s;r<=i;r++)if(t>=this.functions[r][1]&&t<=this.getEndX(r))return r;return-1}getStartX(t){return this.functions[t][1]}setStartX(t,e){t>0&&(this.functions[t][1]=e)}getEndX(t){return t+1<this.functions.length?this.functions[t+1][1]:1}setEndX(t,e){t+1<this.functions.length&&(this.functions[t+1][1]=e)}insertFunction(t,e){const s=this.findFunction(t);this.functions.splice(s+1,0,[e,t])}removeFunction(t){return this.functions.splice(t,1)[0][0]}getFunction(t){return this.functions[t][0]}setFunction(t,e){this.functions[t][0]=e}get numOfFunctions(){return this.functions.length}}class yt extends dt{constructor(t=[[new H(0,1/3,1/3*2,1),0]]){super(),this.type="function",this.functions=t}genValue(t,e=0){const s=this.findFunction(e);return-1===s?0:this.functions[s][0].genValue((e-this.getStartX(s))/(this.getEndX(s)-this.getStartX(s)))}toSVG(t,e){if(e<1)return"";let s=["M",0,this.functions[0][0].p[0]].join(" ");for(let i=1/e;i<=1;i+=1/e)s=[s,"L",i*t,this.genValue(void 0,i)].join(" ");return s}toJSON(){return{type:"PiecewiseBezier",functions:this.functions.map((([t,e])=>({function:t.toJSON(),start:e})))}}static fromJSON(t){return new yt(t.functions.map((t=>[H.fromJSON(t.function),t.start])))}clone(){return new yt(this.functions.map((([t,e])=>[t.clone(),e])))}startGen(t){}}function pt(t){switch(t.type){case"ConstantValue":return ut.fromJSON(t);case"IntervalValue":return mt.fromJSON(t);case"PiecewiseBezier":return yt.fromJSON(t);default:return new ut(0)}}class xt{constructor(){this.indexCount=0,this.type="rotation"}startGen(t){let e,s,i,r,n,h;this.indexCount=t.length,t.push(new N);do{e=2*Math.random()-1,s=2*Math.random()-1,i=e*e+s*s}while(i>1);do{r=2*Math.random()-1,n=2*Math.random()-1,h=r*r+n*n}while(h>1);const a=Math.sqrt((1-i)/h);t[this.indexCount].set(e,s,a*r,a*n)}genValue(t,e,s,i){return-1===this.indexCount&&this.startGen(t),e.copy(t[this.indexCount]),e}toJSON(){return{type:"RandomQuat"}}static fromJSON(t){return new xt}clone(){return new xt}}class ft{constructor(t,e){this.axis=t,this.angle=e,this.type="rotation"}startGen(t){this.angle.startGen(t)}genValue(t,e,s,i){return e.setFromAxisAngle(this.axis,this.angle.genValue(t,i)*s)}toJSON(){return{type:"AxisAngle",axis:{x:this.axis.x,y:this.axis.y,z:this.axis.z},angle:this.angle.toJSON()}}static fromJSON(t){return new ft(new J(t.axis.x,t.axis.y,t.axis.z),pt(t.angle))}clone(){return new ft(this.axis.clone(),this.angle.clone())}}class gt{constructor(t,e,s,i){this.angleX=t,this.angleY=e,this.angleZ=s,this.type="rotation",this.eular=new Y(0,0,0,i)}startGen(t){this.angleX.startGen(t),this.angleY.startGen(t),this.angleZ.startGen(t)}genValue(t,e,s,i){return this.eular.set(this.angleX.genValue(t,i)*s,this.angleY.genValue(t,i)*s,this.angleZ.genValue(t,i)*s),e.setFromEuler(this.eular)}toJSON(){return{type:"Euler",angleX:this.angleX.toJSON(),angleY:this.angleY.toJSON(),angleZ:this.angleZ.toJSON(),eulerOrder:this.eular.order}}static fromJSON(t){return new gt(pt(t.angleX),pt(t.angleY),pt(t.angleZ),t.eulerOrder)}clone(){return new gt(this.angleX,this.angleY,this.angleZ,this.eular.order)}}function wt(t){switch(t.type){case"AxisAngle":return ft.fromJSON(t);case"Euler":return gt.fromJSON(t);case"RandomQuat":return xt.fromJSON(t);default:return new xt}}class Mt{constructor(t,e,s){this.x=t,this.y=e,this.z=s,this.type="vec3function"}startGen(t){this.x.startGen(t),this.y.startGen(t),this.z.startGen(t)}genValue(t,e,s){return e.set(this.x.genValue(t,s),this.y.genValue(t,s),this.z.genValue(t,s))}toJSON(){return{type:"Vector3Function",x:this.x.toJSON(),y:this.y.toJSON(),z:this.z.toJSON()}}static fromJSON(t){return new Mt(pt(t.x),pt(t.y),pt(t.z))}clone(){return new Mt(this.x,this.y,this.z)}}function zt(t){return"Vector3Function"===t.type?Mt.fromJSON(t):new Mt(new ut(0),new ut(0),new ut(0))}function St(t){switch(t.type){case"ConstantValue":case"IntervalValue":case"PiecewiseBezier":return pt(t);case"AxisAngle":case"RandomQuat":case"Euler":return wt(t);case"Vector3Function":return zt(t);default:return new ut(0)}}class _t{constructor(t={}){var e,s,i,r,n,h,a;this.type="cone",this.currentValue=0,this.radius=null!==(e=t.radius)&&void 0!==e?e:10,this.arc=null!==(s=t.arc)&&void 0!==s?s:2*Math.PI,this.thickness=null!==(i=t.thickness)&&void 0!==i?i:1,this.angle=null!==(r=t.angle)&&void 0!==r?r:Math.PI/6,this.mode=null!==(n=t.mode)&&void 0!==n?n:Q.Random,this.spread=null!==(h=t.spread)&&void 0!==h?h:0,this.speed=null!==(a=t.speed)&&void 0!==a?a:new ut(1),this.memory=[]}update(t,e){Q.Random!=this.mode&&(this.currentValue+=this.speed.genValue(this.memory,t.emissionState.time/t.duration)*e)}initialize(t,e){const s=W(this.mode,this.currentValue,this.spread,e),i=O.lerp(1-this.thickness,1,Math.random()),r=s*this.arc,n=Math.sqrt(i),h=Math.sin(r),a=Math.cos(r);t.position.x=n*a,t.position.y=n*h,t.position.z=0;const o=this.angle*n;t.velocity.set(0,0,Math.cos(o)).addScaledVector(t.position,Math.sin(o)).multiplyScalar(t.startSpeed),t.position.multiplyScalar(this.radius)}toJSON(){return{type:"cone",radius:this.radius,arc:this.arc,thickness:this.thickness,angle:this.angle,mode:this.mode,spread:this.spread,speed:this.speed.toJSON()}}static fromJSON(t){return new _t({radius:t.radius,arc:t.arc,thickness:t.thickness,angle:t.angle,mode:t.mode,speed:t.speed?pt(t.speed):void 0,spread:t.spread})}clone(){return new _t({radius:this.radius,arc:this.arc,thickness:this.thickness,angle:this.angle,mode:this.mode,speed:this.speed.clone(),spread:this.spread})}}class vt{constructor(t={}){var e,s,i,r,n,h;this.type="circle",this.currentValue=0,this.radius=null!==(e=t.radius)&&void 0!==e?e:10,this.arc=null!==(s=t.arc)&&void 0!==s?s:2*Math.PI,this.thickness=null!==(i=t.thickness)&&void 0!==i?i:1,this.mode=null!==(r=t.mode)&&void 0!==r?r:Q.Random,this.spread=null!==(n=t.spread)&&void 0!==n?n:0,this.speed=null!==(h=t.speed)&&void 0!==h?h:new ut(1),this.memory=[]}update(t,e){this.currentValue+=this.speed.genValue(this.memory,t.emissionState.time/t.duration)*e}initialize(t,e){const s=W(this.mode,this.currentValue,this.spread,e),i=O.lerp(1-this.thickness,1,Math.random()),r=s*this.arc;t.position.x=Math.cos(r),t.position.y=Math.sin(r),t.position.z=0,t.velocity.copy(t.position).multiplyScalar(t.startSpeed),t.position.multiplyScalar(this.radius*i)}toJSON(){return{type:"circle",radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,spread:this.spread,speed:this.speed.toJSON()}}static fromJSON(t){return new vt({radius:t.radius,arc:t.arc,thickness:t.thickness,mode:t.mode,speed:t.speed?pt(t.speed):void 0,spread:t.spread})}clone(){return new vt({radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,speed:this.speed.clone(),spread:this.spread})}}class bt{constructor(t={}){var e,s,i,r,n,h,a;this.type="donut",this.currentValue=0,this.radius=null!==(e=t.radius)&&void 0!==e?e:10,this.arc=null!==(s=t.arc)&&void 0!==s?s:2*Math.PI,this.thickness=null!==(i=t.thickness)&&void 0!==i?i:1,this.donutRadius=null!==(r=t.donutRadius)&&void 0!==r?r:.2*this.radius,this.mode=null!==(n=t.mode)&&void 0!==n?n:Q.Random,this.spread=null!==(h=t.spread)&&void 0!==h?h:0,this.speed=null!==(a=t.speed)&&void 0!==a?a:new ut(1),this.memory=[]}update(t,e){Q.Random!=this.mode&&(this.currentValue+=this.speed.genValue(this.memory,t.emissionState.time/t.duration)*e)}initialize(t,e){const s=W(this.mode,this.currentValue,this.spread,e),i=Math.random(),r=O.lerp(1-this.thickness,1,Math.random()),n=s*this.arc,h=i*Math.PI*2,a=Math.sin(n),o=Math.cos(n);t.position.x=this.radius*o,t.position.y=this.radius*a,t.position.z=0,t.velocity.z=this.donutRadius*r*Math.sin(h),t.velocity.x=this.donutRadius*r*Math.cos(h)*o,t.velocity.y=this.donutRadius*r*Math.cos(h)*a,t.position.add(t.velocity),t.velocity.normalize().multiplyScalar(t.startSpeed)}toJSON(){return{type:"donut",radius:this.radius,arc:this.arc,thickness:this.thickness,donutRadius:this.donutRadius,mode:this.mode,spread:this.spread,speed:this.speed.toJSON()}}static fromJSON(t){return new bt({radius:t.radius,arc:t.arc,thickness:t.thickness,donutRadius:t.donutRadius,mode:t.mode,speed:t.speed?pt(t.speed):void 0,spread:t.spread})}clone(){return new bt({radius:this.radius,arc:this.arc,thickness:this.thickness,donutRadius:this.donutRadius,mode:this.mode,speed:this.speed.clone(),spread:this.spread})}}class Ot{constructor(){this.type="point"}update(t,e){}initialize(t){const e=Math.random(),s=Math.random(),i=e*Math.PI*2,r=Math.acos(2*s-1),n=Math.cbrt(Math.random()),h=Math.sin(i),a=Math.cos(i),o=Math.sin(r),l=Math.cos(r);t.velocity.x=n*o*a,t.velocity.y=n*o*h,t.velocity.z=n*l,t.velocity.multiplyScalar(t.startSpeed),t.position.setScalar(0)}toJSON(){return{type:"point"}}static fromJSON(t){return new Ot}clone(){return new Ot}}class Nt{constructor(t={}){var e,s,i,r,n,h;this.type="sphere",this.currentValue=0,this.radius=null!==(e=t.radius)&&void 0!==e?e:10,this.arc=null!==(s=t.arc)&&void 0!==s?s:2*Math.PI,this.thickness=null!==(i=t.thickness)&&void 0!==i?i:1,this.mode=null!==(r=t.mode)&&void 0!==r?r:Q.Random,this.spread=null!==(n=t.spread)&&void 0!==n?n:0,this.speed=null!==(h=t.speed)&&void 0!==h?h:new ut(1),this.memory=[]}update(t,e){Q.Random!=this.mode&&(this.currentValue+=this.speed.genValue(this.memory,t.emissionState.time/t.duration)*e)}initialize(t,e){const s=W(this.mode,this.currentValue,this.spread,e),i=Math.random(),r=O.lerp(1-this.thickness,1,Math.random()),n=s*this.arc,h=Math.acos(2*i-1),a=Math.sin(n),o=Math.cos(n),l=Math.sin(h),c=Math.cos(h);t.position.x=l*o,t.position.y=l*a,t.position.z=c,t.velocity.copy(t.position).multiplyScalar(t.startSpeed),t.position.multiplyScalar(this.radius*r)}toJSON(){return{type:"sphere",radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,spread:this.spread,speed:this.speed.toJSON()}}static fromJSON(t){return new Nt({radius:t.radius,arc:t.arc,thickness:t.thickness,mode:t.mode,speed:t.speed?pt(t.speed):void 0,spread:t.spread})}clone(){return new Nt({radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,speed:this.speed.clone(),spread:this.spread})}}class Jt{constructor(t={}){var e,s,i,r,n,h;this.type="sphere",this.currentValue=0,this.radius=null!==(e=t.radius)&&void 0!==e?e:10,this.arc=null!==(s=t.arc)&&void 0!==s?s:2*Math.PI,this.thickness=null!==(i=t.thickness)&&void 0!==i?i:1,this.mode=null!==(r=t.mode)&&void 0!==r?r:Q.Random,this.spread=null!==(n=t.spread)&&void 0!==n?n:0,this.speed=null!==(h=t.speed)&&void 0!==h?h:new ut(1),this.memory=[]}update(t,e){Q.Random!=this.mode&&(this.currentValue+=this.speed.genValue(this.memory,t.emissionState.time/t.duration)*e)}initialize(t,e){const s=W(this.mode,this.currentValue,this.spread,e),i=Math.random(),r=O.lerp(1-this.thickness,1,Math.random()),n=s*this.arc,h=Math.acos(i),a=Math.sin(n),o=Math.cos(n),l=Math.sin(h),c=Math.cos(h);t.position.x=l*o,t.position.y=l*a,t.position.z=c,t.velocity.copy(t.position).multiplyScalar(t.startSpeed),t.position.multiplyScalar(this.radius*r)}toJSON(){return{type:"hemisphere",radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,spread:this.spread,speed:this.speed.toJSON()}}static fromJSON(t){return new Jt({radius:t.radius,arc:t.arc,thickness:t.thickness,mode:t.mode,speed:t.speed?pt(t.speed):void 0,spread:t.spread})}clone(){return new Jt({radius:this.radius,arc:this.arc,thickness:this.thickness,mode:this.mode,speed:this.speed.clone(),spread:this.spread})}}class kt{constructor(t={}){var e,s,i,r;this.type="grid",this.width=null!==(e=t.width)&&void 0!==e?e:1,this.height=null!==(s=t.height)&&void 0!==s?s:1,this.column=null!==(i=t.column)&&void 0!==i?i:10,this.row=null!==(r=t.row)&&void 0!==r?r:10}initialize(t){const e=Math.floor(Math.random()*this.row),s=Math.floor(Math.random()*this.column);t.position.x=s*this.width/this.column-this.width/2,t.position.y=e*this.height/this.row-this.height/2,t.position.z=0,t.velocity.set(0,0,t.startSpeed)}toJSON(){return{type:"grid",width:this.width,height:this.height,column:this.column,row:this.row}}static fromJSON(t){return new kt(t)}clone(){return new kt({width:this.width,height:this.height,column:this.column,row:this.row})}update(t,e){}}const Ct={circle:{type:"circle",params:[["radius",["number"]],["arc",["radian"]],["thickness",["number"]],["mode",["emitterMode"]],["spread",["number"]],["speed",["valueFunc"]]],constructor:vt,loadJSON:vt.fromJSON},cone:{type:"cone",params:[["radius",["number"]],["arc",["radian"]],["thickness",["number"]],["angle",["radian"]],["mode",["emitterMode"]],["spread",["number"]],["speed",["valueFunc"]]],constructor:_t,loadJSON:_t.fromJSON},donut:{type:"donut",params:[["radius",["number"]],["arc",["radian"]],["thickness",["number"]],["donutRadius",["number"]],["mode",["emitterMode"]],["spread",["number"]],["speed",["valueFunc"]]],constructor:bt,loadJSON:bt.fromJSON},point:{type:"point",params:[],constructor:Ot,loadJSON:Ot.fromJSON},sphere:{type:"sphere",params:[["radius",["number"]],["arc",["radian"]],["thickness",["number"]],["angle",["radian"]],["mode",["emitterMode"]],["spread",["number"]],["speed",["valueFunc"]]],constructor:Nt,loadJSON:Nt.fromJSON},hemisphere:{type:"hemisphere",params:[["radius",["number"]],["arc",["radian"]],["thickness",["number"]],["angle",["radian"]],["mode",["emitterMode"]],["spread",["number"]],["speed",["valueFunc"]]],constructor:Jt,loadJSON:Jt.fromJSON},grid:{type:"grid",params:[["width",["number"]],["height",["number"]],["rows",["number"]],["column",["number"]]],constructor:kt,loadJSON:kt.fromJSON}};function Vt(t,e){return Ct[t.type].loadJSON(t,e)}class Ft{constructor(t){this.color=t,this.type="ColorOverLife"}initialize(t){this.color.startGen(t.memory)}update(t,e){this.color.genColor(t.memory,t.color,t.age/t.life),t.color.x*=t.startColor.x,t.color.y*=t.startColor.y,t.color.z*=t.startColor.z,t.color.w*=t.startColor.w}frameUpdate(t){}toJSON(){return{type:this.type,color:this.color.toJSON()}}static fromJSON(t){return new Ft(ct(t.color))}clone(){return new Ft(this.color.clone())}reset(){}}class At{constructor(t){this.angularVelocity=t,this.type="RotationOverLife"}initialize(t){"number"==typeof t.rotation&&this.angularVelocity.startGen(t.memory)}update(t,e){"number"==typeof t.rotation&&(t.rotation+=e*this.angularVelocity.genValue(t.memory,t.age/t.life))}toJSON(){return{type:this.type,angularVelocity:this.angularVelocity.toJSON()}}static fromJSON(t){return new At(pt(t.angularVelocity))}frameUpdate(t){}clone(){return new At(this.angularVelocity.clone())}reset(){}}class Rt{constructor(t){this.angularVelocity=t,this.type="Rotation3DOverLife",this.tempQuat=new N,this.tempQuat2=new N}initialize(t){t.rotation instanceof N&&(t.angularVelocity=new N,this.angularVelocity.startGen(t.memory))}update(t,e){t.rotation instanceof N&&(this.angularVelocity.genValue(t.memory,this.tempQuat,e,t.age/t.life),t.rotation.multiply(this.tempQuat))}toJSON(){return{type:this.type,angularVelocity:this.angularVelocity.toJSON()}}static fromJSON(t){return new Rt(wt(t.angularVelocity))}frameUpdate(t){}clone(){return new Rt(this.angularVelocity.clone())}reset(){}}class qt{initialize(t,e){this.ps=e,this.x.startGen(t.memory),this.y.startGen(t.memory),this.z.startGen(t.memory)}constructor(t,e,s){this.x=t,this.y=e,this.z=s,this.type="ForceOverLife",this._temp=new J,this._tempScale=new J,this._tempQ=new N}update(t,e){this._temp.set(this.x.genValue(t.memory,t.age/t.life),this.y.genValue(t.memory,t.age/t.life),this.z.genValue(t.memory,t.age/t.life)),this.ps.worldSpace||this._temp.multiply(this._tempScale).applyQuaternion(this._tempQ),t.velocity.addScaledVector(this._temp,e)}toJSON(){return{type:this.type,x:this.x.toJSON(),y:this.y.toJSON(),z:this.z.toJSON()}}static fromJSON(t){return new qt(pt(t.x),pt(t.y),pt(t.z))}frameUpdate(t){if(this.ps&&!this.ps.worldSpace){const t=this._temp,e=this._tempQ,s=this._tempScale;this.ps.emitter.matrixWorld.decompose(t,e,s),e.invert(),s.set(1/s.x,1/s.y,1/s.z)}}clone(){return new qt(this.x.clone(),this.y.clone(),this.z.clone())}reset(){}}class Pt{initialize(t){this.size.startGen(t.memory)}constructor(t){this.size=t,this.type="SizeOverLife"}update(t){this.size instanceof Mt?this.size.genValue(t.memory,t.size,t.age/t.life).multiply(t.startSize):t.size.copy(t.startSize).multiplyScalar(this.size.genValue(t.memory,t.age/t.life))}toJSON(){return{type:this.type,size:this.size.toJSON()}}static fromJSON(t){return new Pt(St(t.size))}frameUpdate(t){}clone(){return new Pt(this.size.clone())}reset(){}}class Et{initialize(t){this.speed.startGen(t.memory)}constructor(t){this.speed=t,this.type="SpeedOverLife"}update(t){t.speedModifier=this.speed.genValue(t.memory,t.age/t.life)}toJSON(){return{type:this.type,speed:this.speed.toJSON()}}static fromJSON(t){return new Et(pt(t.speed))}frameUpdate(t){}clone(){return new Et(this.speed.clone())}reset(){}}class Xt{constructor(t){this.frame=t,this.type="FrameOverLife"}initialize(t){this.frame.startGen(t.memory)}update(t,e){this.frame instanceof yt&&(t.uvTile=this.frame.genValue(t.memory,t.age/t.life))}frameUpdate(t){}toJSON(){return{type:this.type,frame:this.frame.toJSON()}}static fromJSON(t){return new Xt(pt(t.frame))}clone(){return new Xt(this.frame.clone())}reset(){}}new J(0,0,1);class Lt{constructor(t,e=new J(0,1,0)){this.orbitSpeed=t,this.axis=e,this.type="OrbitOverLife",this.temp=new J,this.rotation=new N}initialize(t){this.orbitSpeed.startGen(t.memory)}update(t,e){this.temp.copy(t.position).projectOnVector(this.axis),this.rotation.setFromAxisAngle(this.axis,this.orbitSpeed.genValue(t.memory,t.age/t.life)*e),t.position.sub(this.temp),t.position.applyQuaternion(this.rotation),t.position.add(this.temp)}frameUpdate(t){}toJSON(){return{type:this.type,orbitSpeed:this.orbitSpeed.toJSON(),axis:[this.axis.x,this.axis.y,this.axis.z]}}static fromJSON(t){return new Lt(pt(t.orbitSpeed),t.axis?new J(t.axis[0],t.axis[1],t.axis[2]):void 0)}clone(){return new Lt(this.orbitSpeed.clone())}reset(){}}class It{constructor(t){this.data=t,this.next=null,this.prev=null}hasPrev(){return null!==this.prev}hasNext(){return null!==this.next}}class Gt{constructor(){this.length=0,this.head=this.tail=null}isEmpty(){return null===this.head}clear(){this.length=0,this.head=this.tail=null}front(){return null===this.head?null:this.head.data}back(){return null===this.tail?null:this.tail.data}dequeue(){if(this.head){const t=this.head.data;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,t}}pop(){if(this.tail){const t=this.tail.data;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,t}}queue(t){const e=new It(t);this.tail||(this.tail=e),this.head&&(this.head.prev=e,e.next=this.head),this.head=e,this.length++}push(t){const e=new It(t);this.head||(this.head=e),this.tail&&(this.tail.next=e,e.prev=this.tail),this.tail=e,this.length++}insertBefore(t,e){const s=new It(e);s.next=t,s.prev=t.prev,null!==s.prev&&(s.prev.next=s),s.next.prev=s,t==this.head&&(this.head=s),this.length++}remove(t){if(null===this.head||null===this.tail)return;let e=this.head;for(t===this.head.data&&(this.head=this.head.next),t===this.tail.data&&(this.tail=this.tail.prev);null!==e.next&&e.data!==t;)e=e.next;e.data===t&&(null!==e.prev&&(e.prev.next=e.next),null!==e.next&&(e.next.prev=e.prev),this.length--)}*values(){let t=this.head;for(;null!==t;)yield t.data,t=t.next}}class Tt{constructor(){this.position=new J,this.velocity=new J,this.age=0,this.life=1,this.size=new J,this.rotation=0,this.color=new Z(1,1,1,1),this.uvTile=0,this.memory=[]}get died(){return this.age>=this.life}reset(){this.memory.length=0,this.position.set(0,0,0),this.velocity.set(0,0,0),this.age=0,this.life=1,this.size.set(1,1,1),this.rotation=0,this.color.set(1,1,1,1),this.uvTile=0}}class Yt{constructor(){this.startSpeed=0,this.startColor=new Z,this.startSize=new J(1,1,1),this.position=new J,this.velocity=new J,this.age=0,this.life=1,this.size=new J(1,1,1),this.speedModifier=1,this.rotation=0,this.color=new Z,this.uvTile=0,this.memory=[]}get died(){return this.age>=this.life}reset(){this.memory.length=0}}class Dt{constructor(t,e,s){this.position=t,this.size=e,this.color=s}}class Zt{constructor(){this.startSpeed=0,this.startColor=new Z,this.startSize=new J(1,1,1),this.position=new J,this.velocity=new J,this.age=0,this.life=1,this.size=new J(1,1,1),this.length=100,this.speedModifier=1,this.color=new Z,this.previous=new Gt,this.uvTile=0,this.memory=[]}update(){for(this.age<=this.life?this.previous.push(new Dt(this.position.clone(),this.size.x,this.color.clone())):this.previous.length>0&&this.previous.dequeue();this.previous.length>this.length;)this.previous.dequeue()}get died(){return this.age>=this.life}reset(){this.memory.length=0,this.previous.clear()}}class Ut{initialize(t){this.width.startGen(t.memory)}constructor(t){this.width=t,this.type="WidthOverLength"}update(t){if(t instanceof Zt){const e=t.previous.values();for(let s=0;s<t.previous.length;s++){e.next().value.size=this.width.genValue(t.memory,(t.previous.length-s)/t.length)}}}frameUpdate(t){}toJSON(){return{type:this.type,width:this.width.toJSON()}}static fromJSON(t){return new Ut(pt(t.width))}clone(){return new Ut(this.width.clone())}reset(){}}class Bt{constructor(t,e){this.direction=t,this.magnitude=e,this.type="ApplyForce",this.memory={data:[],dataCount:0},this.magnitudeValue=this.magnitude.genValue(this.memory)}initialize(t){}update(t,e){t.velocity.addScaledVector(this.direction,this.magnitudeValue*e)}frameUpdate(t){this.magnitudeValue=this.magnitude.genValue(this.memory)}toJSON(){return{type:this.type,direction:[this.direction.x,this.direction.y,this.direction.z],magnitude:this.magnitude.toJSON()}}static fromJSON(t){var e;return new Bt(new J(t.direction[0],t.direction[1],t.direction[2]),pt(null!==(e=t.magnitude)&&void 0!==e?e:t.force))}clone(){return new Bt(this.direction.clone(),this.magnitude.clone())}reset(){}}class Qt{constructor(t,e){this.center=t,this.magnitude=e,this.type="GravityForce",this.temp=new J}initialize(t){}update(t,e){this.temp.copy(this.center).sub(t.position).normalize(),t.velocity.addScaledVector(this.temp,this.magnitude/t.position.distanceToSquared(this.center)*e)}frameUpdate(t){}toJSON(){return{type:this.type,center:[this.center.x,this.center.y,this.center.z],magnitude:this.magnitude}}static fromJSON(t){return new Qt(new J(t.center[0],t.center[1],t.center[2]),t.magnitude)}clone(){return new Qt(this.center.clone(),this.magnitude)}reset(){}}new J(0,0,1);class jt{constructor(t){this.angle=t,this.type="ChangeEmitDirection",this._temp=new J,this._q=new N,this.memory={data:[],dataCount:0}}initialize(t){const e=t.velocity.length();0!=e&&(t.velocity.normalize(),0===t.velocity.x&&0===t.velocity.y?this._temp.set(0,t.velocity.z,0):this._temp.set(-t.velocity.y,t.velocity.x,0),this.angle.startGen(this.memory),this._q.setFromAxisAngle(this._temp.normalize(),this.angle.genValue(this.memory)),this._temp.copy(t.velocity),t.velocity.applyQuaternion(this._q),this._q.setFromAxisAngle(this._temp,Math.random()*Math.PI*2),t.velocity.applyQuaternion(this._q),t.velocity.setLength(e))}update(t,e){}frameUpdate(t){}toJSON(){return{type:this.type,angle:this.angle.toJSON()}}static fromJSON(t){return new jt(pt(t.angle))}clone(){return new jt(this.angle)}reset(){}}const Wt=new J(1,1,1),Ht=new J(0,0,1);var Kt,$t;($t=Kt||(Kt={}))[$t.Death=0]="Death",$t[$t.Birth=1]="Birth",$t[$t.Frame=2]="Frame";class te{constructor(t,e,s,i=Kt.Frame,r=1){this.particleSystem=t,this.useVelocityAsBasis=e,this.subParticleSystem=s,this.mode=i,this.emitProbability=r,this.type="EmitSubParticleSystem",this.q_=new N,this.v_=new J,this.v2_=new J,this.subEmissions=new Array,this.subParticleSystem&&this.subParticleSystem.system&&(this.subParticleSystem.system.onlyUsedByOther=!0)}initialize(t){}update(t,e){(this.mode===Kt.Frame||this.mode===Kt.Birth&&0===t.age||this.mode===Kt.Death&&t.age+e>=t.life)&&this.emit(t,e)}emit(t,e){if(!this.subParticleSystem)return;if(Math.random()>this.emitProbability)return;const s=new A;this.setMatrixFromParticle(s,t),this.subEmissions.push({burstParticleCount:0,burstParticleIndex:0,isBursting:!1,burstIndex:0,burstWaveIndex:0,time:0,waitEmiting:0,matrix:s,travelDistance:0,particle:t})}frameUpdate(t){if(this.subParticleSystem)for(let e=0;e<this.subEmissions.length;e++)if(this.subEmissions[e].time>=this.subParticleSystem.system.duration)this.subEmissions[e]=this.subEmissions[this.subEmissions.length-1],this.subEmissions.length=this.subEmissions.length-1,e--;else{const s=this.subEmissions[e];s.particle&&s.particle.age<s.particle.life?this.setMatrixFromParticle(s.matrix,s.particle):s.particle=void 0,this.subParticleSystem.system.emit(t,s,s.matrix)}}toJSON(){return{type:this.type,subParticleSystem:this.subParticleSystem?this.subParticleSystem.uuid:"",useVelocityAsBasis:this.useVelocityAsBasis,mode:this.mode,emitProbability:this.emitProbability}}static fromJSON(t,e){return new te(e,t.useVelocityAsBasis,t.subParticleSystem,t.mode,t.emitProbability)}clone(){return new te(this.particleSystem,this.useVelocityAsBasis,this.subParticleSystem,this.mode,this.emitProbability)}reset(){}setMatrixFromParticle(t,e){let s;if(void 0===e.rotation||this.useVelocityAsBasis)if(0!==e.velocity.x||0!==e.velocity.y||1!==e.velocity.z&&0!==e.velocity.z){this.v_.copy(Ht).cross(e.velocity),this.v2_.copy(e.velocity).cross(this.v_);const s=this.v_.length(),i=this.v2_.length();t.set(this.v_.x/s,this.v2_.x/i,e.velocity.x,e.position.x,this.v_.y/s,this.v2_.y/i,e.velocity.y,e.position.y,this.v_.z/s,this.v2_.z/i,e.velocity.z,e.position.z,0,0,0,1)}else t.set(1,0,0,e.position.x,0,1,0,e.position.y,0,0,1,e.position.z,0,0,0,1);else e.rotation instanceof N?s=e.rotation:(this.q_.setFromAxisAngle(Ht,e.rotation),s=this.q_),t.compose(e.position,s,Wt);this.particleSystem.worldSpace||t.multiplyMatrices(this.particleSystem.emitter.matrixWorld,t)}}const ee=.5*(Math.sqrt(3)-1),se=(3-Math.sqrt(3))/6,ie=1/6,re=(Math.sqrt(5)-1)/4,ne=(5-Math.sqrt(5))/20,he=new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),ae=new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);class oe{constructor(t=Math.random){const e="function"==typeof t?t:function(t){let e=0,s=0,i=0,r=1;const n=function(){let t=4022871197;return function(e){e=e.toString();for(let s=0;s<e.length;s++){t+=e.charCodeAt(s);let i=.02519603282416938*t;t=i>>>0,i-=t,i*=t,t=i>>>0,i-=t,t+=4294967296*i}return 2.3283064365386963e-10*(t>>>0)}}();e=n(" "),s=n(" "),i=n(" "),e-=n(t),e<0&&(e+=1);s-=n(t),s<0&&(s+=1);i-=n(t),i<0&&(i+=1);return function(){const t=2091639*e+2.3283064365386963e-10*r;return e=s,s=i,i=t-(r=0|t)}}(t);this.p=function(t){const e=new Uint8Array(256);for(let s=0;s<256;s++)e[s]=s;for(let s=0;s<255;s++){const i=s+~~(t()*(256-s)),r=e[s];e[s]=e[i],e[i]=r}return e}(e),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(let s=0;s<512;s++)this.perm[s]=this.p[255&s],this.permMod12[s]=this.perm[s]%12}noise2D(t,e){const s=this.permMod12,i=this.perm;let r=0,n=0,h=0;const a=(t+e)*ee,o=Math.floor(t+a),l=Math.floor(e+a),c=(o+l)*se,u=t-(o-c),m=e-(l-c);let d,y;u>m?(d=1,y=0):(d=0,y=1);const p=u-d+se,x=m-y+se,f=u-1+2*se,g=m-1+2*se,w=255&o,M=255&l;let z=.5-u*u-m*m;if(z>=0){const t=3*s[w+i[M]];z*=z,r=z*z*(he[t]*u+he[t+1]*m)}let S=.5-p*p-x*x;if(S>=0){const t=3*s[w+d+i[M+y]];S*=S,n=S*S*(he[t]*p+he[t+1]*x)}let _=.5-f*f-g*g;if(_>=0){const t=3*s[w+1+i[M+1]];_*=_,h=_*_*(he[t]*f+he[t+1]*g)}return 70*(r+n+h)}noise3D(t,e,s){const i=this.permMod12,r=this.perm;let n,h,a,o;const l=.3333333333333333*(t+e+s),c=Math.floor(t+l),u=Math.floor(e+l),m=Math.floor(s+l),d=(c+u+m)*ie,y=t-(c-d),p=e-(u-d),x=s-(m-d);let f,g,w,M,z,S;y>=p?p>=x?(f=1,g=0,w=0,M=1,z=1,S=0):y>=x?(f=1,g=0,w=0,M=1,z=0,S=1):(f=0,g=0,w=1,M=1,z=0,S=1):p<x?(f=0,g=0,w=1,M=0,z=1,S=1):y<x?(f=0,g=1,w=0,M=0,z=1,S=1):(f=0,g=1,w=0,M=1,z=1,S=0);const _=y-f+ie,v=p-g+ie,b=x-w+ie,O=y-M+2*ie,N=p-z+2*ie,J=x-S+2*ie,k=y-1+.5,C=p-1+.5,V=x-1+.5,F=255&c,A=255&u,R=255&m;let q=.6-y*y-p*p-x*x;if(q<0)n=0;else{const t=3*i[F+r[A+r[R]]];q*=q,n=q*q*(he[t]*y+he[t+1]*p+he[t+2]*x)}let P=.6-_*_-v*v-b*b;if(P<0)h=0;else{const t=3*i[F+f+r[A+g+r[R+w]]];P*=P,h=P*P*(he[t]*_+he[t+1]*v+he[t+2]*b)}let E=.6-O*O-N*N-J*J;if(E<0)a=0;else{const t=3*i[F+M+r[A+z+r[R+S]]];E*=E,a=E*E*(he[t]*O+he[t+1]*N+he[t+2]*J)}let X=.6-k*k-C*C-V*V;if(X<0)o=0;else{const t=3*i[F+1+r[A+1+r[R+1]]];X*=X,o=X*X*(he[t]*k+he[t+1]*C+he[t+2]*V)}return 32*(n+h+a+o)}noise4D(t,e,s,i){const r=this.perm;let n,h,a,o,l;const c=(t+e+s+i)*re,u=Math.floor(t+c),m=Math.floor(e+c),d=Math.floor(s+c),y=Math.floor(i+c),p=(u+m+d+y)*ne,x=t-(u-p),f=e-(m-p),g=s-(d-p),w=i-(y-p);let M=0,z=0,S=0,_=0;x>f?M++:z++,x>g?M++:S++,x>w?M++:_++,f>g?z++:S++,f>w?z++:_++,g>w?S++:_++;const v=M>=3?1:0,b=z>=3?1:0,O=S>=3?1:0,N=_>=3?1:0,J=M>=2?1:0,k=z>=2?1:0,C=S>=2?1:0,V=_>=2?1:0,F=M>=1?1:0,A=z>=1?1:0,R=S>=1?1:0,q=_>=1?1:0,P=x-v+ne,E=f-b+ne,X=g-O+ne,L=w-N+ne,I=x-J+2*ne,G=f-k+2*ne,T=g-C+2*ne,Y=w-V+2*ne,D=x-F+3*ne,Z=f-A+3*ne,U=g-R+3*ne,B=w-q+3*ne,Q=x-1+4*ne,j=f-1+4*ne,W=g-1+4*ne,H=w-1+4*ne,K=255&u,$=255&m,tt=255&d,et=255&y;let st=.6-x*x-f*f-g*g-w*w;if(st<0)n=0;else{const t=r[K+r[$+r[tt+r[et]]]]%32*4;st*=st,n=st*st*(ae[t]*x+ae[t+1]*f+ae[t+2]*g+ae[t+3]*w)}let it=.6-P*P-E*E-X*X-L*L;if(it<0)h=0;else{const t=r[K+v+r[$+b+r[tt+O+r[et+N]]]]%32*4;it*=it,h=it*it*(ae[t]*P+ae[t+1]*E+ae[t+2]*X+ae[t+3]*L)}let rt=.6-I*I-G*G-T*T-Y*Y;if(rt<0)a=0;else{const t=r[K+J+r[$+k+r[tt+C+r[et+V]]]]%32*4;rt*=rt,a=rt*rt*(ae[t]*I+ae[t+1]*G+ae[t+2]*T+ae[t+3]*Y)}let nt=.6-D*D-Z*Z-U*U-B*B;if(nt<0)o=0;else{const t=r[K+F+r[$+A+r[tt+R+r[et+q]]]]%32*4;nt*=nt,o=nt*nt*(ae[t]*D+ae[t+1]*Z+ae[t+2]*U+ae[t+3]*B)}let ht=.6-Q*Q-j*j-W*W-H*H;if(ht<0)l=0;else{const t=r[K+1+r[$+1+r[tt+1+r[et+1]]]]%32*4;ht*=ht,l=ht*ht*(ae[t]*Q+ae[t+1]*j+ae[t+2]*W+ae[t+3]*H)}return 27*(n+h+a+o+l)}}class le{constructor(t,e,s,i){this.scale=t,this.octaves=e,this.velocityMultiplier=s,this.timeScale=i,this.type="TurbulenceField",this.generator=new oe,this.timeOffset=new J,this.temp=new J,this.temp2=new J,this.timeOffset.x=Math.random()/this.scale.x*this.timeScale.x,this.timeOffset.y=Math.random()/this.scale.y*this.timeScale.y,this.timeOffset.z=Math.random()/this.scale.z*this.timeScale.z}initialize(t){}update(t,e){const s=t.position.x/this.scale.x,i=t.position.y/this.scale.y,r=t.position.z/this.scale.z;this.temp.set(0,0,0);let n=1;for(let h=0;h<this.octaves;h++)this.temp2.set(this.generator.noise4D(s*n,i*n,r*n,this.timeOffset.x*n)/n,this.generator.noise4D(s*n,i*n,r*n,this.timeOffset.y*n)/n,this.generator.noise4D(s*n,i*n,r*n,this.timeOffset.z*n)/n),this.temp.add(this.temp2),n*=2;this.temp.multiply(this.velocityMultiplier),t.velocity.addScaledVector(this.temp,e)}toJSON(){return{type:this.type,scale:[this.scale.x,this.scale.y,this.scale.z],octaves:this.octaves,velocityMultiplier:[this.velocityMultiplier.x,this.velocityMultiplier.y,this.velocityMultiplier.z],timeScale:[this.timeScale.x,this.timeScale.y,this.timeScale.z]}}frameUpdate(t){this.timeOffset.x+=t*this.timeScale.x,this.timeOffset.y+=t*this.timeScale.y,this.timeOffset.z+=t*this.timeScale.z}static fromJSON(t){return new le(new J(t.scale[0],t.scale[1],t.scale[2]),t.octaves,new J(t.velocityMultiplier[0],t.velocityMultiplier[1],t.velocityMultiplier[2]),new J(t.timeScale[0],t.timeScale[1],t.timeScale[2]))}clone(){return new le(this.scale.clone(),this.octaves,this.velocityMultiplier.clone(),this.timeScale.clone())}reset(){}}function ce(t,e){return Math.floor(Math.random()*(e-t))+t}const ue=[],me=new J,de=new N;class ye{constructor(t,e,s=new ut(1),i=new ut(0)){if(this.frequency=t,this.power=e,this.positionAmount=s,this.rotationAmount=i,this.type="Noise",this.duration=0,0===ue.length)for(let r=0;r<100;r++)ue.push(new oe)}initialize(t){t.lastPosNoise=new J,"number"==typeof t.rotation?t.lastRotNoise=0:t.lastRotNoise=new N,t.generatorIndex=[ce(0,100),ce(0,100),ce(0,100),ce(0,100)],this.positionAmount.startGen(t.memory),this.rotationAmount.startGen(t.memory),this.frequency.startGen(t.memory),this.power.startGen(t.memory)}update(t,e){let s=this.frequency.genValue(t.memory,t.age/t.life),i=this.power.genValue(t.memory,t.age/t.life),r=this.positionAmount.genValue(t.memory,t.age/t.life),n=this.rotationAmount.genValue(t.memory,t.age/t.life);r>0&&void 0!==t.lastPosNoise&&(t.position.sub(t.lastPosNoise),me.set(ue[t.generatorIndex[0]].noise2D(0,t.age*s)*i*r,ue[t.generatorIndex[1]].noise2D(0,t.age*s)*i*r,ue[t.generatorIndex[2]].noise2D(0,t.age*s)*i*r),t.position.add(me),t.lastPosNoise.copy(me)),n>0&&void 0!==t.lastRotNoise&&("number"==typeof t.rotation?(t.rotation-=t.lastRotNoise,t.rotation+=ue[t.generatorIndex[3]].noise2D(0,t.age*s)*Math.PI*i*n):(t.lastRotNoise.invert(),t.rotation.multiply(t.lastRotNoise),de.set(ue[t.generatorIndex[0]].noise2D(0,t.age*s)*i*n,ue[t.generatorIndex[1]].noise2D(0,t.age*s)*i*n,ue[t.generatorIndex[2]].noise2D(0,t.age*s)*i*n,ue[t.generatorIndex[3]].noise2D(0,t.age*s)*i*n).normalize(),t.rotation.multiply(de),t.lastRotNoise.copy(de)))}toJSON(){return{type:this.type,frequency:this.frequency.toJSON(),power:this.power.toJSON(),positionAmount:this.positionAmount.toJSON(),rotationAmount:this.rotationAmount.toJSON()}}frameUpdate(t){this.duration+=t}static fromJSON(t){return new ye(pt(t.frequency),pt(t.power),pt(t.positionAmount),pt(t.rotationAmount))}clone(){return new ye(this.frequency.clone(),this.power.clone(),this.positionAmount.clone(),this.rotationAmount.clone())}reset(){}}class pe{constructor(t=0,e=0,s=new J){this.scaleX=t,this.scaleY=e,this.position=s,this.locations=[]}transform(t,e){t.x=this.locations[e%this.locations.length].x*this.scaleX+this.position.x,t.y=this.locations[e%this.locations.length].y*this.scaleY+this.position.y,t.z=this.position.z}static fromJSON(t){const e=new pe(t.scaleX,t.scaleY,new J(t.position[0],t.position[1],t.position[2]));return e.locations=t.locations.map((t=>new D(t.x,t.y))),e}clone(){const t=new pe(this.scaleX,this.scaleY,this.position.clone());return t.locations=this.locations.map((t=>t.clone())),t}toJSON(){return{scaleX:this.scaleX,scaleY:this.scaleY,position:this.position,locations:this.locations.map((t=>({x:t.x,y:t.y})))}}fromImage(t,e){const s=document.createElement("canvas");s.width=t.width,s.height=t.height;const i=s.getContext("2d");if(!i)return;i.drawImage(t,0,0);const r=i.getImageData(0,0,s.width,s.height,{colorSpace:"srgb"});s.remove(),this.locations.length=0;for(let n=0;n<r.height;n++)for(let t=0;t<r.width;t++)r.data[4*(n*r.width+t)+3]>e&&this.locations.push(new D(t,r.height-n))}}function xe(t){return"TextureSequencer"===t.type?pe.fromJSON(t):new pe}class fe{constructor(t){this.type="ApplySequences",this.sequencers=[],this.time=0,this.index=0,this.pCount=0,this.tempV=new J,this.delay=t}initialize(t){t.id=this.pCount,t.dst=new J,t.begin=new J,t.inMotion=!1,this.pCount++}reset(){this.time=0,this.index=0,this.pCount=0}update(t,e){const s=this.sequencers[this.index],i=t.id*this.delay;this.time>=s[0].a+i&&this.time<=s[0].b+i?(t.inMotion||(t.inMotion=!0,t.begin.copy(t.position),s[1].transform(t.dst,t.id)),t.position.lerpVectors(t.begin,t.dst,fe.BEZIER.genValue((this.time-s[0].a-i)/(s[0].b-s[0].a)))):this.time>s[0].b+i&&(t.inMotion=!1)}frameUpdate(t){for(;this.index+1<this.sequencers.length&&this.time>=this.sequencers[this.index+1][0].a;)this.index++;this.time+=t}appendSequencer(t,e){this.sequencers.push([t,e])}toJSON(){return{type:this.type,delay:this.delay,sequencers:this.sequencers.map((([t,e])=>({range:t.toJSON(),sequencer:e.toJSON()})))}}static fromJSON(t){const e=new fe(t.delay);return t.sequencers.forEach((t=>{e.sequencers.push([pt(t.range),xe(t.sequencer)])})),e}clone(){const t=new fe(this.delay);return t.sequencers=this.sequencers.map((t=>[t[0].clone(),t[1].clone()])),t}}let ge;function we(t){ge=t}function Me(){return ge}fe.BEZIER=new H(0,0,1,1);class ze{constructor(t,e){this.resolver=t,this.bounce=e,this.type="ApplyCollision",this.tempV=new J}initialize(t){}update(t,e){this.resolver.resolve(t.position,this.tempV)&&t.velocity.reflect(this.tempV).multiplyScalar(this.bounce)}frameUpdate(t){}toJSON(){return{type:this.type,bounce:this.bounce}}static fromJSON(t){return new ze(Me(),t.bounce)}clone(){return new ze(this.resolver,this.bounce)}reset(){}}class Se{constructor(t,e){this.color=t,this.speedRange=e,this.type="ColorBySpeed"}initialize(t){this.color.startGen(t.memory)}update(t,e){const s=(t.startSpeed-this.speedRange.a)/(this.speedRange.b-this.speedRange.a);this.color.genColor(t.memory,t.color,s),t.color.x*=t.startColor.x,t.color.y*=t.startColor.y,t.color.z*=t.startColor.z,t.color.w*=t.startColor.w}frameUpdate(t){}toJSON(){return{type:this.type,color:this.color.toJSON(),speedRange:this.speedRange.toJSON()}}static fromJSON(t){return new Se(ct(t.color),mt.fromJSON(t.speedRange))}clone(){return new Se(this.color.clone(),this.speedRange.clone())}reset(){}}class _e{initialize(t){this.size.startGen(t.memory)}constructor(t,e){this.size=t,this.speedRange=e,this.type="SizeBySpeed"}update(t){const e=(t.startSpeed-this.speedRange.a)/(this.speedRange.b-this.speedRange.a);this.size instanceof Mt?this.size.genValue(t.memory,t.size,e).multiply(t.startSize):t.size.copy(t.startSize).multiplyScalar(this.size.genValue(t.memory,e))}toJSON(){return{type:this.type,size:this.size.toJSON(),speedRange:this.speedRange.toJSON()}}static fromJSON(t){return new _e(St(t.size),mt.fromJSON(t.speedRange))}frameUpdate(t){}clone(){return new _e(this.size.clone(),this.speedRange.clone())}reset(){}}class ve{constructor(t,e){this.angularVelocity=t,this.speedRange=e,this.type="RotationBySpeed",this.tempQuat=new N}initialize(t){"number"==typeof t.rotation&&this.angularVelocity.startGen(t.memory)}update(t,e){if("number"==typeof t.rotation){const s=(t.startSpeed-this.speedRange.a)/(this.speedRange.b-this.speedRange.a);t.rotation+=e*this.angularVelocity.genValue(t.memory,s)}}toJSON(){return{type:this.type,angularVelocity:this.angularVelocity.toJSON(),speedRange:this.speedRange.toJSON()}}static fromJSON(t){return new ve(pt(t.angularVelocity),mt.fromJSON(t.speedRange))}frameUpdate(t){}clone(){return new ve(this.angularVelocity.clone(),this.speedRange.clone())}reset(){}}class be{initialize(t){this.speed.startGen(t.memory)}constructor(t,e){this.speed=t,this.dampen=e,this.type="LimitSpeedOverLife"}update(t,e){let s=t.velocity.length(),i=this.speed.genValue(t.memory,t.age/t.life);if(s>i){const r=(s-i)/s;t.velocity.multiplyScalar(1-r*this.dampen*e*20)}}toJSON(){return{type:this.type,speed:this.speed.toJSON(),dampen:this.dampen}}static fromJSON(t){return new be(pt(t.speed),t.dampen)}frameUpdate(t){}clone(){return new be(this.speed.clone(),this.dampen)}reset(){}}const Oe={ApplyForce:{type:"ApplyForce",constructor:Bt,params:[["direction",["vec3"]],["magnitude",["value"]]],loadJSON:Bt.fromJSON},Noise:{type:"Noise",constructor:ye,params:[["frequency",["value"]],["power",["value"]],["positionAmount",["value"]],["rotationAmount",["value"]]],loadJSON:ye.fromJSON},TurbulenceField:{type:"TurbulenceField",constructor:le,params:[["scale",["vec3"]],["octaves",["number"]],["velocityMultiplier",["vec3"]],["timeScale",["vec3"]]],loadJSON:le.fromJSON},GravityForce:{type:"GravityForce",constructor:Qt,params:[["center",["vec3"]],["magnitude",["number"]]],loadJSON:Qt.fromJSON},ColorOverLife:{type:"ColorOverLife",constructor:Ft,params:[["color",["colorFunc"]]],loadJSON:Ft.fromJSON},RotationOverLife:{type:"RotationOverLife",constructor:At,params:[["angularVelocity",["value","valueFunc"]]],loadJSON:At.fromJSON},Rotation3DOverLife:{type:"Rotation3DOverLife",constructor:Rt,params:[["angularVelocity",["rotationFunc"]]],loadJSON:Rt.fromJSON},SizeOverLife:{type:"SizeOverLife",constructor:Pt,params:[["size",["value","valueFunc","vec3Func"]]],loadJSON:Pt.fromJSON},ColorBySpeed:{type:"ColorBySpeed",constructor:Se,params:[["color",["colorFunc"]],["speedRange",["range"]]],loadJSON:Se.fromJSON},RotationBySpeed:{type:"RotationBySpeed",constructor:ve,params:[["angularVelocity",["value","valueFunc"]],["speedRange",["range"]]],loadJSON:ve.fromJSON},SizeBySpeed:{type:"SizeBySpeed",constructor:_e,params:[["size",["value","valueFunc","vec3Func"]],["speedRange",["range"]]],loadJSON:_e.fromJSON},SpeedOverLife:{type:"SpeedOverLife",constructor:Et,params:[["speed",["value","valueFunc"]]],loadJSON:Et.fromJSON},FrameOverLife:{type:"FrameOverLife",constructor:Xt,params:[["frame",["value","valueFunc"]]],loadJSON:Xt.fromJSON},ForceOverLife:{type:"ForceOverLife",constructor:qt,params:[["x",["value","valueFunc"]],["y",["value","valueFunc"]],["z",["value","valueFunc"]]],loadJSON:qt.fromJSON},OrbitOverLife:{type:"OrbitOverLife",constructor:Lt,params:[["orbitSpeed",["value","valueFunc"]],["axis",["vec3"]]],loadJSON:Lt.fromJSON},WidthOverLength:{type:"WidthOverLength",constructor:Ut,params:[["width",["value","valueFunc"]]],loadJSON:Ut.fromJSON},ChangeEmitDirection:{type:"ChangeEmitDirection",constructor:jt,params:[["angle",["value"]]],loadJSON:jt.fromJSON},EmitSubParticleSystem:{type:"EmitSubParticleSystem",constructor:te,params:[["particleSystem",["self"]],["useVelocityAsBasis",["boolean"]],["subParticleSystem",["particleSystem"]],["mode",["number"]],["emitProbability",["number"]]],loadJSON:te.fromJSON},LimitSpeedOverLife:{type:"LimitSpeedOverLife",constructor:be,params:[["speed",["value","valueFunc"]],["dampen",["number"]]],loadJSON:be.fromJSON}};function Ne(t,e){return Oe[t.type].loadJSON(t,e)}const Je=[];function ke(t){if(!Je.find((e=>e.id===t.id))){t.initialize();for(const e of t.emitterShapes)Ct[e.type]||(Ct[e.type]=e);for(const e of t.behaviors)Oe[e.type]||(Oe[e.type]=e)}}function Ce(t){const e=Je.find((e=>e.id===t));if(e){for(const t of e.emitterShapes)Ct[t.type]&&delete Ct[t.type];for(const t of e.behaviors)Oe[t.type]&&delete Oe[t.type]}}export{st as $,ft as A,Ne as B,ut as C,s as D,Vt as E,qt as F,St as G,Qt as H,kt as I,Jt as J,mt as K,be as L,U as M,O as N,A as O,Tt as P,N as Q,ye as R,Nt as S,Zt as T,Lt as U,J as V,yt as W,dt as X,Je as Y,Ot as Z,i as _,lt as a,ot as a0,xt as a1,Dt as a2,Rt as a3,ve as a4,wt as a5,At as a6,xe as a7,_e as a8,Pt as a9,p as aA,x as aB,y as aC,f as aD,we as aE,_ as aF,d as aG,m as aH,Ce as aI,Et as aa,Kt as ab,pe as ac,le as ad,Mt as ae,zt as af,V as ag,F as ah,Ut as ai,z as aj,n as ak,c as al,g as am,v as an,h as ao,S as ap,r as aq,Me as ar,W as as,o as at,M as au,l as av,a as aw,b as ax,u as ay,w as az,Z as b,Yt as c,pt as d,ct as e,te as f,D as g,ze as h,Bt as i,fe as j,Oe as k,ke as l,H as m,jt as n,vt as o,Se as p,Ft as q,it as r,_t as s,bt as t,Q as u,Ct as v,Y as w,gt as x,Xt as y,ht as z};
