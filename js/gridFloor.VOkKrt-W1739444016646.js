import{a0 as n,_ as t,ai as r}from"./three.W6GmiHfn1739444016646.js";import{o,J as e,f as i}from"./@tresjs.Q4_KYO2a1739444016646.js";import{P as s}from"./tweakpane.yDiyAAkA1739444016646.js";import{d as c,a2 as u,o as a,H as l,N as f,aj as d,ak as v,r as g,f as p,g as h,j as m,u as C,al as x,m as y}from"./@vue.NRI7TcgI1739444016646.js";import"./@vueuse.6yH4xZkk1739444016646.js";const w=W;!function(n,t){const r=W,o=k();for(;;)try{if(606381===parseInt(r(432))/1*(-parseInt(r(419))/2)+-parseInt(r(439))/3+parseInt(r(412))/4*(-parseInt(r(421))/5)+-parseInt(r(414))/6+parseInt(r(420))/7*(parseInt(r(427))/8)+parseInt(r(413))/9+parseInt(r(428))/10)break;o.push(o.shift())}catch(e){o.push(o.shift())}}();const T=function(){let n=!0;return function(t,r){const o=n?function(){if(r){const n=r[W(440)](t,arguments);return r=null,n}}:function(){};return n=!1,o}}();!function(){T(this,(function(){const n=W,t=new RegExp(n(451)),r=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=j(n(429));t.test(o+n(418))&&r[n(452)](o+"input")?j():o("0")}))()}();const I=function(){let n=!0;return function(t,r){const o=n?function(){if(r){const n=r.apply(t,arguments);return r=null,n}}:function(){};return n=!1,o}}();I(void 0,(function(){const n=W;let t;try{t=Function(n(411)+n(405)+");")()}catch(e){t=window}const r=t[n(438)]=t[n(438)]||{},o=["log",n(424),n(441),n(436),"exception",n(450),n(444)];for(let i=0;i<o.length;i++){const t=I[n(415)][n(443)][n(445)](I),e=o[i],s=r[e]||t;t[n(408)]=I[n(445)](I),t.toString=s[n(449)][n(445)](s),r[e]=t}}))();const b=[w(433)];function W(n,t){const r=k();return(W=function(n,t){return r[n-=404]})(n,t)}function k(){const n=["return (function() ","1752488TTiQeh","1970415kSWENC","925284uGKGyP","constructor","uniforms","uCross","chain","2zOiTYT","3382743lpkUEx","10jQIxHj","uGridThickness","set","warn","call","TresMesh","16IUFMoS","13767470plWOlx","init","uCrossColor","gridColor","921125vZgYTa","rotate-x","crossThickness","floorColor","error","uFloorColor","console","12648mPgVpq","apply","info","length","prototype","trace","bind","crossColor","debu","string","toString","table","function *\\( *\\)","test","value",'{}.constructor("return this")( )',"gridThickness","Color","__proto__","TresPlaneGeometry","counter"];return(k=function(){return n})()}const D=c({__name:"gridFloor",props:{gridColor:{default:"#c4d6ff"},gridThickness:{default:.02},crossColor:{default:"#7a91df"},crossThickness:{default:.02},uCross:{default:.2},floorColor:{default:"#ffffff"}},setup(r){const o=w,e=r,i={vertexShader:"varying vec2 vUv;\nvoid main()\n{\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vUv = uv;\n}",fragmentShader:"uniform float uGridThickness;\nuniform vec3 uGridColor;\nuniform float uCrossScale;\nuniform float uCrossThickness;\nuniform float uCross;\nuniform vec3 uCrossColor;\nuniform vec3 uFloorColor;\n\nvarying vec2 vUv;\n\nfloat gridFloor(vec2 uv, vec2 lineWidth) {\n    \n    \n    \n    \n    \n    \n    \n    vec4 uvDDXY = vec4(dFdx(uv), dFdy(uv));\n    vec2 uvDeriv = vec2(length(uvDDXY.xz), length(uvDDXY.yw));\n\n    \n    \n    \n    bool invertLine = lineWidth.x > 0.5;\n    vec2 targetWidth = invertLine ? 1.0 - lineWidth : lineWidth;\n\n    \n    \n    \n    \n    \n    vec2 drawWidth = clamp(targetWidth, uvDeriv, vec2(0.5));\n\n    \n    \n    \n    vec2 lineAA = uvDeriv * 1.5;\n    \n    \n    \n    \n    \n    \n    vec2 gridUV = abs(fract(uv) * 2.0 - 1.0);\n    gridUV = invertLine ? gridUV : 1.0 - gridUV;\n\n    \n    \n    \n    vec2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);\n\n    \n    \n    \n    grid2 *= clamp(targetWidth / drawWidth, 0.0, 1.0);\n\n    \n    \n    \n    \n    \n    grid2 = mix(grid2, targetWidth, clamp(uvDeriv * 2.0 - 1.0, 0.0, 1.0));\n    grid2 = invertLine ? 1.0 - grid2 : grid2;\n\n    \n    float grid = mix(grid2.x, 1.0, grid2.y);\n\n    return grid;\n}\n\nfloat crossFloor(vec2 uv, float scale, float thickness, float crossIntensity) {\n    vec2 lineWidth = vec2(thickness);\n\n    \n    \n    \n    \n    \n    \n    \n    vec4 uvDDXY = vec4(dFdx(uv), dFdy(uv));\n    vec2 uvDeriv = vec2(length(uvDDXY.xz), length(uvDDXY.yw));\n\n    \n    \n    \n    bool invertLine = lineWidth.x > 0.5;\n    \n    vec2 targetWidth = lineWidth;\n\n    \n    \n    \n    \n    \n    vec2 drawWidth = clamp(targetWidth, uvDeriv, vec2(0.5));\n\n    \n    \n    \n    vec2 lineAA = uvDeriv * 1.5;\n    \n    \n    float cutOffX = abs(fract(uv.y) * 2.0 - 1.0) > crossIntensity ? 1.0 : 0.0;\n    float cutOffY = abs(fract(uv.x) * 2.0 - 1.0) > crossIntensity ? 1.0 : 0.0;\n\n    \n    \n    \n    \n    \n    \n    \n    float uvX = abs(fract(uv.x) * 2.0 - 1.0) + cutOffX;\n    float uvY = abs(fract(uv.y) * 2.0 - 1.0) + cutOffY;\n    vec2 gridUV = vec2(uvX, uvY);\n\n    \n\n    \n    \n    \n    vec2 grid2 = smoothstep(drawWidth + lineAA, drawWidth - lineAA, gridUV);\n\n    \n    \n    \n    grid2 *= clamp(targetWidth / drawWidth, 0.0, 1.0);\n\n    \n    \n    \n    \n    \n    grid2 = mix(grid2, targetWidth, clamp(uvDeriv * 2.0 - 1.0, 0.0, 1.0));\n    \n\n    \n    float grid = mix(grid2.x, 1.0, grid2.y);\n\n    return grid;\n}\n\nvoid main()\n{\n    vec2 lineWidth = vec2(uGridThickness);\n    \n    vec2 uv = vUv * 20.0;\n\n    \n    float grid = gridFloor(uv, lineWidth);\n    \n    vec3 gridColor = mix(uFloorColor, uGridColor, vec3(grid));\n\n    \n    float crossUv = crossFloor(uv, uCrossScale, uCrossThickness, uCross);\n    \n    vec3 gridColor2 = mix(gridColor, uCrossColor, vec3(crossUv));\n    \n    vec3 color =  gridColor2;\n\n    gl_FragColor = vec4(color, 1.0);\n}",side:n,transparent:!0,uniforms:{uFloorColor:{value:new(t[o(407)])(e[o(435)])},uGridThickness:{value:e[o(406)]},uGridColor:{value:new(t[o(407)])(e[o(431)])},uCrossThickness:{value:e[o(434)]},uCross:{value:e[o(417)]},uCrossColor:{value:new(t[o(407)])(e[o(446)])}}};return u((()=>{const n=o;i[n(416)][n(437)].value[n(423)](e.floorColor),i.uniforms.uGridColor.value[n(423)](e[n(431)]),i[n(416)][n(430)][n(404)].set(e[n(446)]),i.uniforms[n(422)].value=e[n(406)],i[n(416)].uCrossThickness.value=e[n(434)],i.uniforms.uCross[n(404)]=e[n(417)]})),(n,t)=>{const r=o;return a(),l(r(426),{"rotate-x":-Math.PI/2},[t[0]||(t[0]=f(r(409),{args:[10,10,32,32]},null,-1)),f("TresShaderMaterial",d(v(i)),null,16)],8,b)}}});function j(n){function t(n){const r=W;if(typeof n===r(448))return function(n){}.constructor("while (true) {}")[r(440)](r(410));1!==(""+n/n)[r(442)]||n%20==0?function(){return!0}[r(415)]("debugger")[r(425)]("action"):function(){return!1}[r(415)](r(447)+"gger")[r(440)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(r){}}const _=Y;!function(n,t){const r=Y,o=A();for(;;)try{if(876136===-parseInt(r(425))/1+parseInt(r(379))/2*(-parseInt(r(416))/3)+parseInt(r(392))/4+-parseInt(r(400))/5*(parseInt(r(389))/6)+-parseInt(r(408))/7*(-parseInt(r(372))/8)+parseInt(r(418))/9+parseInt(r(413))/10)break;o.push(o.shift())}catch(e){o.push(o.shift())}}();const F=function(){let n=!0;return function(t,r){const o=n?function(){if(r){const n=r.apply(t,arguments);return r=null,n}}:function(){};return n=!1,o}}();function A(){const n=["gridFloor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/6jpg/","chain","1692832YuRBDr","info","pos-y.jpg","pos-x.jpg","gger","TresMesh","length","24idYLvm","十字大小","constructor","网格颜色","gridThickness","counter","while (true) {}","debu","log","#ffffff","6TIGlFH","bind","addBinding","1093444fbAhKl","input","prototype","crossColor","十字厚度","test","网格厚度","#ef57ff","6012875zIwPro","crossThickness","apply",'{}.constructor("return this")( )',"action","floorColor","neg-z.jpg","string","21eYeTiz","stateObject","neg-y.jpg","neg-x.jpg","console","10927890ogqELV","#000000","pos-z.jpg","105018SeDgqg","init","10914102axIZKD","__proto__","error","#ff33ff","call","TresTorusKnotGeometry","uCross","714857UeuZKl","地板颜色"];return(A=function(){return n})()}!function(){F(this,(function(){const n=Y,t=new RegExp("function *\\( *\\)"),r=new RegExp(n(369),"i"),o=z(n(417));t.test(o+n(371))&&r[n(397)](o+n(393))?z():o("0")}))()}();const U=function(){let n=!0;return function(t,r){const o=n?function(){if(r){const n=r[Y(402)](t,arguments);return r=null,n}}:function(){};return n=!1,o}}();function Y(n,t){const r=A();return(Y=function(n,t){return r[n-=369]})(n,t)}U(void 0,(function(){const n=Y,t=function(){const n=Y;let t;try{t=Function("return (function() "+n(403)+");")()}catch(r){t=window}return t}(),r=t[n(412)]=t[n(412)]||{},o=[n(387),"warn",n(373),n(420),"exception","table","trace"];for(let e=0;e<o.length;e++){const t=U[n(381)][n(394)].bind(U),i=o[e],s=r[i]||t;t[n(419)]=U[n(390)](U),t.toString=s.toString[n(390)](s),r[i]=t}}))();const S=c({__name:_(427),setup(n){const t=_,c=g({alpha:!0,toneMapping:r,windowSize:!0,clearColor:3355443}),u=g({enableDamping:!0,autoRotate:!1}),l=g({gridColor:t(388),crossColor:t(399),floorColor:t(414),gridThickness:.02,crossThickness:.03,uCross:.29}),w=new s;return w[t(391)](l,"gridColor",{label:t(382)}),w.addBinding(l,t(383),{label:t(398),min:.01,max:1,step:.01}),w.addBinding(l,t(395),{label:"十字颜色"}),w[t(391)](l,t(401),{label:t(396),min:.01,max:1,step:.01}),w[t(391)](l,t(424),{label:t(380),min:.01,max:1,step:.01}),w[t(391)](l,t(405),{label:t(426)}),(n,r)=>{const s=t;return a(),p(C(i),y(c,{"window-size":""}),{default:h((()=>[r[0]||(r[0]=f("TresPerspectiveCamera",{position:[6,6,6],fov:45,near:.1,far:1e3},null,-1)),m(C(o),d(v(u)),null,16),r[1]||(r[1]=f("TresAmbientLight",{intensity:.5},null,-1)),r[2]||(r[2]=f("TresDirectionalLight",{position:[15,15,15],intensity:1},null,-1)),r[3]||(r[3]=f(s(377),{position:[0,.5,0],scale:.2},[f(s(423),{args:[1,.35,100,32]}),f("TresMeshStandardMaterial",{color:s(421),roughness:0,metalness:1})],-1)),m(D,d(v(l)),null,16),(a(),p(x,null,{default:h((()=>[m(C(e),{files:[s(375),s(411),s(374),s(410),s(415),s(406)],path:s(370)})])),_:1}))])),_:1},16)}}});function z(n){function t(n){const r=Y;if(typeof n===r(407))return function(n){}[r(381)](r(385))[r(402)](r(384));1!==(""+n/n)[r(378)]||n%20==0?function(){return!0}.constructor(r(386)+r(376))[r(422)](r(404)):function(){return!1}[r(381)](r(386)+"gger").apply(r(409)),t(++n)}try{if(n)return t;t(0)}catch(r){}}export{S as default};
