import"./@fesjs.C0vFiD6Z1758524188831.js";import{a as e}from"./@tresjs.BL1sBIDK1758524188831.js";import"./Resource.DxdCIUkg1758524188831.js";/* empty css                                                                             */import"./three-mesh-ui.module.CE9rtod61758524188831.js";import"./global.B9GyzW9k1758524188831.js";/* empty css                                                              */import{_ as s}from"./line2RoundedRect.vue_vue_type_script_setup_true_lang.clO04SvP1758524188831.js";import{_ as i}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.Dl9evB_51758524188831.js";import{P as r}from"./tweakpane.C0HtAJSg1758524188831.js";import{d as t,r as o,h as a,e as p,o as n,f as l,I as m,j as d,u,m as j,a5 as c,a7 as _,a8 as g}from"./@vue.pEDXJ_3Z1758524188831.js";import{X as h,N as f}from"./three.CC50Wz7a1758524188831.js";import"./vue-router.DFx_OtVs1758524188831.js";import"./lodash-es.C7pWAXPe1758524188831.js";import"./pinia.DVrvLNCY1758524188831.js";import"./@qlin.q6OWdsQV1758524188831.js";import"./@babel.BPq7uOAK1758524188831.js";import"./@floating-ui.BFjFSAYt1758524188831.js";import"./@juggle.CcBCnTIR1758524188831.js";import"./postprocessing.DYlQqnRh1758524188831.js";import"./@vueuse.C-O_6is-1758524188831.js";import"./color.D9QGz8GJ1758524188831.js";import"./@amap.CGUF9xH41758524188831.js";import"./color-string.BDbH6wEP1758524188831.js";import"./color-name.BQ5IbGbl1758524188831.js";import"./simple-swizzle.Bkblhu7y1758524188831.js";import"./is-arrayish.CLsR9Wfx1758524188831.js";import"./color-convert.P-wMblBM1758524188831.js";import"./lodash.iw1WOawC1758524188831.js";import"./ReflectorMaterial.DXFLN1WU1758524188831.js";import"./dither.glsl.tNAdkJUa1758524188831.js";import"./Reflector.hbefUijb1758524188831.js";import"./OimoPhysicsBuffer.CcBMdMc41758524188831.js";import"./oimophysics.BBtHVm4j1758524188831.js";const v=t({__name:"line2RoundedRectPage",setup(t){const v={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:f,toneMappingExposure:1,shadowMapType:h},b=o({reflectivity:.941,mirror:113.25,mixStrength:12,showGridHelper:!1,scale:100}),w=o({linewidth:10,color:"#ffff00",width:2,height:6,radius:.3,cornerSegments:6}),y=new r({title:"参数",expanded:!0});return y.addBinding(w,"linewidth",{label:"线条宽度",step:.1,min:0,max:20}),y.addBinding(w,"color",{label:"线条颜色"}),y.addBinding(w,"width",{label:"宽",step:.1,min:.1,max:10}),y.addBinding(w,"height",{label:"长",step:.1,min:.1,max:10}),y.addBinding(w,"radius",{label:"角度",step:.001,min:.001,max:1}),y.addBinding(w,"cornerSegments",{label:"平滑",step:.1,min:.1,max:6}),(r,t)=>{const o=a("TresCanvas");return n(),p(o,_(g(v)),{default:l((()=>[t[0]||(t[0]=m("TresPerspectiveCamera",{position:[-5,3,5],fov:50,near:.1,far:1e4},null,-1)),d(u(e)),t[1]||(t[1]=m("TresAmbientLight",null,null,-1)),d(u(s),j({position:[0,-1.5,0]},w),null,16),(n(),p(c,null,{default:l((()=>[d(i,_(g(b)),null,16)])),_:1}))])),_:1},16)}}});export{v as default};
