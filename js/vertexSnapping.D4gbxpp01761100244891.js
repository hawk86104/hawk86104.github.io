import{u as t,a0 as n}from"./three.DvmzhRS91761100244891.js";import{N as o,K as i,o as e}from"./@tresjs.DqJWjmrH1761100244891.js";import{_ as s}from"./component.vue_vue_type_script_setup_true_lang.DUKfhYhy1761100244891.js";import{_ as a}from"./vanilla.esm.5.5.0.CsbunUBT1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";import{P as r}from"./tweakpane.CqZAnw7f1761100244891.js";import{d as u,$ as l,w as p,G as m,o as c,H as d,u as v,r as g,b as S,e as f,I as P,h,ap as R,m as x}from"./@vue.CKlgtJke1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./three-stdlib.Bkbtr8od1761100244891.js";import"./useLoader.DWT9Jk041761100244891.js";import"./object-hash.zo7S6bgL1761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./jszip.DTlig5CR1761100244891.js";const j=["object"],_=u({__name:"com",props:{uSnappingResolution:{default:6},srcMaterial:{default:()=>new t({color:65280,roughness:.5,metalness:.5})}},setup(t){const n=t,o=l(n.uSnappingResolution);return n.srcMaterial.onBeforeCompile=t=>{t.uniforms.uSnappingResolution=o,t.vertexShader=t.vertexShader.replace("#include <common>","\n\t\t\t#include <common>\n\t\t\tuniform float uSnappingResolution;\n\t"),t.vertexShader=t.vertexShader.replace("#include <project_vertex>","\n\t\t\tvec4 mvPosition = vec4( transformed, 1.0 );\n\n\t\t\t#ifdef USE_BATCHING\n\t\t\t\tmvPosition = batchingMatrix * mvPosition;\n\t\t\t#endif\n\n\t\t\t#ifdef USE_INSTANCING\n\t\t\t\tmvPosition = instanceMatrix * mvPosition;\n\t\t\t#endif\n\n\t\t\tmvPosition = modelMatrix * mvPosition;\n\n\t\t\tmvPosition = vec4(\n\t\t\t\tround(mvPosition.x * uSnappingResolution) / uSnappingResolution,\n\t\t\t\tround(mvPosition.y * uSnappingResolution) / uSnappingResolution,\n\t\t\t\tround(mvPosition.z * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t1.0);\n\t\t\tmvPosition = viewMatrix * mvPosition;\n\t\t\tgl_Position = projectionMatrix * mvPosition;\n\t")},p(()=>n.uSnappingResolution,t=>{o.value=t}),(t,n)=>(c(),m("primitive",{object:t.srcMaterial},null,8,j))}});const M=["object"],y=u({__name:"model",props:{uSnappingResolution:{default:6}},setup(t){const n=t,{state:i,materials:e}=o("https://opensource.cdn.icegl.cn/model/industry4/MRBike.glb",{draco:!0,decoderPath:"./draco/"}),s=[];return p(()=>i.value,t=>{t?.scene&&Object.values(e.value).forEach(t=>{s.push(function(t,n=6){const o={value:n};return t.onBeforeCompile=t=>{t.uniforms.uSnappingResolution=o,t.vertexShader=t.vertexShader.replace("#include <common>","\n\t\t\t\t#include <common>\n\t\t\t\tuniform float uSnappingResolution;\n\t\t"),t.vertexShader=t.vertexShader.replace("#include <project_vertex>","\n\t\t\t\tvec4 mvPosition = vec4( transformed, 1.0 );\n\t\n\t\t\t\t#ifdef USE_BATCHING\n\t\t\t\t\tmvPosition = batchingMatrix * mvPosition;\n\t\t\t\t#endif\n\t\n\t\t\t\t#ifdef USE_INSTANCING\n\t\t\t\t\tmvPosition = instanceMatrix * mvPosition;\n\t\t\t\t#endif\n\t\n\t\t\t\tmvPosition = modelMatrix * mvPosition;\n\t\n\t\t\t\tmvPosition = vec4(\n\t\t\t\t\tround(mvPosition.x * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\tround(mvPosition.y * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\tround(mvPosition.z * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\t1.0);\n\t\t\t\tmvPosition = viewMatrix * mvPosition;\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\t\t")},o}(t,n.uSnappingResolution))})}),p(()=>n.uSnappingResolution,t=>{s.forEach(n=>{n.value=t})}),(t,n)=>v(i)?(c(),m("primitive",{key:0,object:v(i)?.scene,scale:5,position:[0,-2,0]},null,8,M)):d("",!0)}}),b={position:[5,.9,-5],name:"torus"},T=u({__name:"vertexSnapping",setup(t){const o=g({alpha:!0,toneMapping:n,windowSize:!0,clearColor:"#000000"}),u=g({uSnappingResolution:3,modelSnappingResolution:6}),l=new r;return l.addBinding(u,"uSnappingResolution",{label:"圆环扭结-分辨率",min:0,max:20,step:.01}),l.addBinding(u,"modelSnappingResolution",{label:"自行车模型-分辨率",min:0,max:20,step:.01}),(t,n)=>(c(),S(v(e),x(o,{"window-size":""}),{default:f(()=>[n[1]||(n[1]=P("TresPerspectiveCamera",{position:[8,6,8],fov:45,near:1,far:1e3},null,-1)),h(v(i)),n[2]||(n[2]=P("TresAmbientLight",{intensity:.5},null,-1)),n[3]||(n[3]=P("TresDirectionalLight",{position:[7,10,-5.5],intensity:5},null,-1)),n[4]||(n[4]=P("TresMesh",{position:[-5,.5,5],"receive-shadow":"","cast-shadow":"",name:"cube"},[P("TresCylinderGeometry",{args:[1.5,1.5,2]}),P("TresMeshStandardMaterial",{color:16737826,roughness:0,metalness:0})],-1)),P("TresMesh",b,[n[0]||(n[0]=P("TresTorusKnotGeometry",{args:[1,.35,100,32]},null,-1)),h(_,{uSnappingResolution:u.uSnappingResolution},null,8,["uSnappingResolution"])]),(c(),S(R,null,{default:f(()=>[h(y,{uSnappingResolution:u.modelSnappingResolution},null,8,["uSnappingResolution"])]),_:1})),(c(),S(R,null,{default:f(()=>[h(v(s),{resolution:256,blur:1,background:""},{default:f(()=>[h(v(a),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[2,4,0],scale:[1,5,0]},null,8,["rotation-x"]),h(v(a),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[-6,4,0],scale:[1,5,0]},null,8,["rotation-x"]),h(v(a),{intensity:1,"rotation-y":-Math.PI/2,position:[-1,0,0],scale:[10,.2,1]},null,8,["rotation-y"]),h(v(a),{intensity:1,"rotation-y":-Math.PI/2,position:[1,0,0],scale:[10,.2,1]},null,8,["rotation-y"])]),_:1})]),_:1}))]),_:1},16))}});export{T as default};
