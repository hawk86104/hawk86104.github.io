import{_ as t,s as n,T as e,ai as o}from"./three.HaMTRCf61740450466561.js";import{e as r,a,o as i,f as s}from"./@tresjs.9lmhsV6t1740450466561.js";import"./index.9_F8sMQR1740450466561.js";import{c}from"./simplex-noise.jB2HxhHB1740450466561.js";import{C as l}from"./index.f6g8K_Pe1740450466561.js";import{d as u,a3 as f,o as p,H as h,N as m,u as v,r as d,f as g,g as x,j as w,aj as y,ak as b,al as _}from"./@vue.NRI7TcgI1740450466561.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.gi9gKbJO1740450466561.js";import"./@vueuse.q8gKo7tC1740450466561.js";import"./lamina.nCadXQO41740450466561.js";import"./glsl-tokenizer.KGbvxG2D1740450466561.js";import"./@amap.dPX4GHML1740450466561.js";import"./glsl-token-descope.fp6kbi6F1740450466561.js";import"./glsl-token-depth.zGnU7q501740450466561.js";import"./glsl-token-scope.JFzV5OrQ1740450466561.js";import"./glsl-token-properties.NtlYaqwd1740450466561.js";import"./glsl-token-assignments.hYOj7fsV1740450466561.js";import"./glsl-token-string.Ecy082g91740450466561.js";import"./glsl-token-functions.EggvPBXe1740450466561.js";import"./object-hash.g8NhVH2H1740450466561.js";import"./jszip.NDo38iES1740450466561.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.6Pf1w8EM1740450466561.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.mYO0dZBh1740450466561.js";import"./three-stdlib.vB_UH6QL1740450466561.js";import"./@pmndrs.OKEm8oAd1740450466561.js";import"./utils.iFeEQW2t1740450466561.js";const z=I;!function(t,n){const e=I,o=F();for(;;)try{if(921541===-parseInt(e(464))/1*(-parseInt(e(428))/2)+parseInt(e(463))/3+-parseInt(e(474))/4+parseInt(e(460))/5*(parseInt(e(477))/6)+-parseInt(e(416))/7*(parseInt(e(419))/8)+parseInt(e(456))/9+parseInt(e(480))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const j=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[I(450)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){j(this,(function(){const t=I,n=new RegExp(t(478)),e=new RegExp(t(448),"i"),o=T(t(455));n[t(475)](o+t(473))&&e[t(475)](o+"input")?T():o("0")}))()}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[I(450)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function I(t,n){const e=F();return(I=function(t,n){return e[t-=408]})(t,n)}A(void 0,(function(){const t=I,n=function(){const t=I;let n;try{n=Function("return (function() "+t(461)+");")()}catch(e){n=window}return n}(),e=n[t(422)]=n.console||{},o=["log","warn","info",t(417),t(457),t(426),"trace"];for(let r=0;r<o[t(446)];r++){const n=A[t(442)][t(476)][t(453)](A),a=o[r],i=e[a]||n;n[t(425)]=A.bind(A),n[t(465)]=i[t(465)][t(453)](i),e[a]=n}}))();const S=["material"],C=[z(436),z(462),z(435),z(410),z(424),z(447),z(438),z(472)],k=["geometry"],D=[z(430)];function F(){const t=["7939000XACzNt","TresMesh","map","attributes-offset","alphaMap","debu","Vector3","DoubleSide","set","35fmOoGh","error","width","2305016nxylpa","cos","#000f00","console","Vector4","attributes-orientation","__proto__","table","TresMeshStandardMaterial","361054GnWLDL","stateObject","side","position","offsetsF32","halfRootAngleCosF32","PlaneGeometry","attributes-uv","index","value","attributes-halfRootAngleSin","counter","computeVertexNormals","convertSRGBToLinear","constructor","random","stretchesF32","translate","length","attributes-stretch","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresGroup","apply","attributes","sin","bind","uniforms","init","4693239BgTqft","exception","string","Color","4051490UqGsxo",'{}.constructor("return this")( )',"attributes-position","1219098wvxCpS","1mXUlgS","toString","push","normalize","InstancedBufferAttribute","instances","halfRootAngleSinF32","while (true) {}","attributes-halfRootAngleCos","chain","1401544nKMUKg","test","prototype","6oMSvfv","function *\\( *\\)","array"];return(F=function(){return t})()}const R=u({__name:"grass",props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(o){const i=z;let s,u;const d=([s,u]=f((()=>a({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),s=await s,u(),s),g=o,x=c(Math.random);function w(n,e){const o=I,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(423)])(r,a,i,s)}function y(t,n){var e=2*x(t/50,n/50);return e+=4*x(t/100,n/100),e+=.2*x(t/10,n/10)}const b=function(n,o){const r=I,a=[],i=[],s=[],c=[],l=[];let u=new(t[r(423)]),f=new(t[r(423)]);const p=-.25;for(let e=0;e<n;e++){const h=Math[r(443)]()*o-o/2,m=Math[r(443)]()*o-o/2,v=y(h,m);a.push(h,v,m);let d=Math.PI-Math[r(443)]()*(2*Math.PI);c[r(466)](Math[r(452)](.5*d)),l.push(Math[r(420)](.5*d));let g=new(t[r(413)])(0,1,0),x=g.x*Math.sin(d/2),b=g.y*Math[r(452)](d/2),_=g.z*Math[r(452)](d/2),M=Math[r(420)](d/2);u[r(415)](x,b,_,M)[r(467)](),d=.5*Math[r(443)]()+p,g=new(t[r(413)])(1,0,0),x=g.x*Math.sin(d/2),b=g.y*Math[r(452)](d/2),_=g.z*Math[r(452)](d/2),M=Math[r(420)](d/2),f[r(415)](x,b,_,M).normalize(),u=w(u,f),d=.5*Math[r(443)]()+p,g=new(t[r(413)])(0,0,1),x=g.x*Math.sin(d/2),b=g.y*Math[r(452)](d/2),_=g.z*Math[r(452)](d/2),M=Math.cos(d/2),f[r(415)](x,b,_,M)[r(467)](),u=w(u,f),i.push(u.x,u.y,u.z,u.w),e<n/3?s.push(1.8*Math[r(443)]()):s.push(Math.random())}return{offsetsF32:new(t[r(468)])(new Float32Array(a),3),orientationsF32:new(t[r(468)])(new Float32Array(i),4),stretchesF32:new(t[r(468)])(new Float32Array(s),1),halfRootAngleCosF32:new(t[r(468)])(new Float32Array(l),1),halfRootAngleSinF32:new e(new Float32Array(c),1)}}(g[i(469)],g.width),_=new(t[i(434)])(g.bW,g.bH,1,g.joints)[i(445)](0,g.bH/2,0),M=new n(g[i(418)],g[i(418)],32,32);M.lookAt(new(t[i(413)])(0,1,0));const j=M[i(451)].position;for(let t=0;t<j[i(479)][i(446)];t+=3)j[i(479)][t+1]=y(j[i(479)][t],j[i(479)][t+2]);M.attributes[i(431)].needsUpdate=!0,M[i(440)]();const A=new(l({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[i(459)])(.3,.9,0)[i(441)](),bottomColor:new(t[i(459)])(0,.2,0)[i(441)]()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=i;n.side=t[e(414)]})));A[i(409)]=d.map,A.alphaMap=d[i(411)],A.toneMapped=!1;const{onLoop:F}=r();return F((({elapsed:t})=>{const n=i;A[n(454)].time[n(437)]=t/4})),(n,e)=>{const o=i;return p(),h(o(449),null,[m(o(408),{material:v(A)},[m("TresInstancedBufferGeometry",{index:v(_)[o(436)],"attributes-position":v(_).attributes[o(431)],"attributes-uv":v(_)[o(451)].uv,"attributes-offset":v(b)[o(432)],"attributes-orientation":v(b).orientationsF32,"attributes-stretch":v(b)[o(444)],"attributes-halfRootAngleSin":v(b)[o(470)],"attributes-halfRootAngleCos":v(b)[o(433)]},null,8,C)],8,S),m(o(408),{position:[0,0,0],geometry:v(M)},[m(o(427),{color:o(421),side:t[o(414)]},null,8,D)],8,k)])}}});function T(t){function n(t){const e=I;if(typeof t===e(458))return function(t){}.constructor(e(471))[e(450)](e(439));1!==(""+t/t)[e(446)]||t%20==0?function(){return!0}[e(442)](e(412)+"gger").call("action"):function(){return!1}[e(442)](e(412)+"gger").apply(e(429)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const L=P;!function(t,n){const e=P,o=O();for(;;)try{if(704281===-parseInt(e(431))/1+parseInt(e(446))/2+parseInt(e(432))/3*(parseInt(e(441))/4)+-parseInt(e(445))/5+parseInt(e(426))/6+-parseInt(e(433))/7*(parseInt(e(421))/8)+-parseInt(e(420))/9*(-parseInt(e(440))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const E=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){E(this,(function(){const t=P,n=new RegExp(t(449)),e=new RegExp(t(439),"i"),o=B("init");n.test(o+"chain")&&e[t(437)](o+"input")?B():o("0")}))()}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[P(442)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function O(){const t=["327waJuIT","7dNyMVV","console","length","string","test","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","8552790guIzdq","11332vjSxDp","apply","bind","prototype","6221620uwpOhz","168960DyHMLU","table","__proto__","function *\\( *\\)","gger","error","grass","9nTUYsk","2083336cXEGPQ","exception","log","warn","counter","7359396SXSlif","constructor",'{}.constructor("return this")( )',"debu","stateObject","266100zaaHSm"];return(O=function(){return t})()}function P(t,n){const e=O();return(P=function(t,n){return e[t-=420]})(t,n)}H(void 0,(function(){const t=P;let n;try{n=Function("return (function() "+t(428)+");")()}catch(r){n=window}const e=n[t(434)]=n[t(434)]||{},o=[t(423),t(424),"info",t(451),t(422),t(447),"trace"];for(let a=0;a<o[t(435)];a++){const n=H[t(427)][t(444)][t(443)](H),r=o[a],i=e[r]||n;n[t(448)]=H[t(443)](H),n.toString=i.toString[t(443)](i),e[r]=n}}))();const U=u({__name:L(452),setup(t){const n=d({alpha:!0,toneMapping:o,windowSize:!0,clearColor:6710886}),e=d({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=P;return p(),g(v(s),y(b(n)),{default:x((()=>[o[0]||(o[0]=m("TresPerspectiveCamera",{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),w(v(i),y(b(e)),null,16),(p(),g(_,null,{default:x((()=>[w(R)])),_:1})),(p(),g(_,null,{default:x((()=>[w(v(M),{texture:r(438)})])),_:1}))])),_:1},16)}}});function B(t){function n(t){const e=P;if(typeof t===e(436))return function(t){}.constructor("while (true) {}")[e(442)](e(425));1!==(""+t/t).length||t%20==0?function(){return!0}[e(427)](e(429)+e(450)).call("action"):function(){return!1}[e(427)]("debugger")[e(442)](e(430)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{U as default};
