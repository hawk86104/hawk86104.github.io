import{b as e,m as s,e as t,T as o,a as r}from"./@tresjs.wZhcVcHe1750295690454.js";import{l as i}from"./utils.CJYA7Ayv1750295690454.js";import{f as n}from"./utils.C2QiAvaa1750295690454.js";import{a3 as a,b as p,a2 as l,G as m,o as c,F as u,W as d,e as h,H as j,f,I as y,M as g,m as T,u as v,d as w,r as b,h as M,j as L,ak as x,al as z,am as C}from"./@vue.Mugdq9o81750295690454.js";import{m as S}from"./d3-geo.p6wkjF6Q1750295690454.js";import{ai as k,ab as _,B,l as E,C as O,g as G,V as D,cI as P}from"./three.BCtXTlZY1750295690454.js";import{c as H,d as I,a as F}from"./three-mesh-bvh.CXZIxTuA1750295690454.js";import"./postprocessing.B3dpkXpp1750295690454.js";import"./@vueuse.8goBbrUr1750295690454.js";import"./@fesjs.DMJyiXGl1750295690454.js";import"./vue-router.88WhL0T41750295690454.js";import"./lodash-es.C7pWAXPe1750295690454.js";import"./@qlin.q6OWdsQV1750295690454.js";import"./pinia.eIwiwG2d1750295690454.js";import"./@babel.BPq7uOAK1750295690454.js";import"./@floating-ui.BFjFSAYt1750295690454.js";import"./@juggle.CcBCnTIR1750295690454.js";import"./@tweenjs.ULy8-5Ku1750295690454.js";import"./axios.DyNaXH1a1750295690454.js";import"./axios.DLTVXJci1750295690454.js";import"./color.BTp_dVRF1750295690454.js";import"./@amap.CGUF9xH41750295690454.js";import"./color-string.BTr_DMHM1750295690454.js";import"./color-name.BQ5IbGbl1750295690454.js";import"./simple-swizzle.nJx1OldA1750295690454.js";import"./is-arrayish.CLsR9Wfx1750295690454.js";import"./color-convert.BYuHIFs81750295690454.js";import"./lodash.BOoYH1xX1750295690454.js";import"./d3-array.DtK5BhF11750295690454.js";const A=["position"],$=["blending","map"],q=["name","renderOrder","pCenter"],R=["args"],V=["color","side"],W=["renderOrder","position-z"],X=["position"],J=["renderOrder"],K=["position"],N={__name:"jiangSuMapMesh",async setup(r){let w,b;B.prototype.computeBoundsTree=H,B.prototype.disposeBoundsTree=I,E.prototype.raycast=F;const M=([w,b]=a((()=>i("./plugins/simpleGIS/json/320000_full.json","features"))),w=await w,b(),w),{map:L}=([w,b]=a((()=>e({map:"./plugins/simpleGIS/image/icon.png"}))),w=await w,b(),w),x=M[0].properties.centroid,z=S();z.center(x).translate([0,0]);const C=[];M.forEach((e=>{const s=new O(`hsl( 16, ${30*Math.random()+55}%, ${30*Math.random()+55}%)`).getHex(),t=.3*Math.random()+.3,{centroid:o,oneCenter:r,center:i,name:n}=e.properties,{coordinates:a,type:p}=e.geometry,l=o||r||i||[0,0],m=z(l);m[1]=-m[1],m[2]=t,C.push({type:"Html",position:m,name:n});const c=z(l);c[1]=.2-c[1],c[2]=t+.22,C.push({type:"Sprite",position:c}),a.forEach((e=>{function o(e){const o=new P;e.forEach(((e,s)=>{const[t,r]=z(e);0===s?o.moveTo(t,-r):o.lineTo(t,-r)})),C.push({type:"Shape",shape:o,name:n,color:s,depth:t,pCenter:c});const r=[];e.forEach((e=>{const[s,t]=z(e);r.push(s,-t,0)})),C.push({type:"Line",points:new Float32Array(r),depth:t})}"MultiPolygon"===p&&e.forEach((e=>o(e))),"Polygon"===p&&o(e)}))}));const N=p();l((()=>{N.value&&((e=>{e.rotation.x=-Math.PI/2;const s=(new G).setFromObject(e).getCenter(new D),t=[0,0];e.position.x=e.position.x-s.x-t[0],e.position.z=e.position.z-s.z-t[1]})(N.value),N.value.children.forEach((e=>{"Mesh"===e.type&&e.geometry.computeBoundsTree()})))}));const Q=e=>{e.object.material.opacity=.4},U=e=>{e.eventObject.material.opacity=1},{camera:Y,controls:Z}=s();let ee=null;const se=e=>{const s=new D;s.x=e.point.x,s.y=e.point.y+10,s.z=e.point.z,ee=n(Y,s,Z)},{onBeforeLoop:te}=t();te((()=>{ee?.update()}));const oe={wrapperClass:"wrapper",as:"div",center:!0,sprite:!0,prepend:!0,transform:!0};return(e,s)=>(c(),m("TresGroup",{ref_key:"tgRef",ref:N},[(c(),m(u,null,d(C,((e,t)=>(c(),m(u,{key:`${t}`},["Html"===e.type?(c(),h(v(o),T({key:0,ref_for:!0},oe,{position:e.position}),{default:f((()=>[y("span",null,g(e.name),1)])),_:2},1040,["position"])):j("",!0),"Sprite"===e.type?(c(),m("TresSprite",{key:1,position:e.position,scale:.3,renderOrder:1e3},[y("TresSpriteMaterial",{color:16711680,blending:k,map:v(L)},null,8,$)],8,A)):j("",!0),"Shape"===e.type?(c(),m("TresMesh",{key:2,name:e.name,renderOrder:t,pCenter:e.pCenter,onPointerEnter:Q,onPointerLeave:U,onClick:se},[y("TresExtrudeGeometry",{args:[e.shape,{depth:e.depth,bevelEnabled:!1}]},null,8,R),y("TresMeshStandardMaterial",{color:e.color,emissive:0,roughness:.45,metalness:.8,transparent:!0,side:_},null,8,V)],40,q)):j("",!0),"Line"===e.type?(c(),m(u,{key:3},[y("TresLine",{renderOrder:t,"position-z":e.depth+1e-4},[y("TresBufferGeometry",{position:[e.points,3]},null,8,X),s[0]||(s[0]=y("TresLineBasicMaterial",{color:16777215,linewidth:.5},null,-1))],8,W),y("TresLine",{renderOrder:t,"position-z":-1e-4},[y("TresBufferGeometry",{position:[e.points,3]},null,8,K),s[1]||(s[1]=y("TresLineBasicMaterial",{color:0,linewidth:.5},null,-1))],8,J)],64)):j("",!0)],64)))),64))],512))}},Q=w({__name:"jiangSuMap",setup(e){const s=b({clearColor:"#ffdbd1",alpha:!0,antialias:!0}),t=b({enableDamping:!0,dampingFactor:.05,makeDefault:!0});return(e,o)=>{const i=M("TresCanvas");return c(),h(i,T(s,{"window-size":""}),{default:f((()=>[o[0]||(o[0]=y("TresPerspectiveCamera",{position:[0,12,0],fov:75,near:.1,far:1e3,up:[0,0,-1]},null,-1)),L(v(r),x(z(t)),null,16),o[1]||(o[1]=y("TresAmbientLight",{intensity:8.8},null,-1)),o[2]||(o[2]=y("TresDirectionalLight",{position:[0,10,5],intensity:.2},null,-1)),o[3]||(o[3]=y("TresDirectionalLight",{position:[0,10,-5],intensity:.2},null,-1)),o[4]||(o[4]=y("TresDirectionalLight",{position:[5,10,0],intensity:.2},null,-1)),o[5]||(o[5]=y("TresDirectionalLight",{position:[-5,10,0],intensity:.2},null,-1)),o[6]||(o[6]=y("TresGridHelper",{args:[20,10]},null,-1)),(c(),h(C,null,{default:f((()=>[L(N)])),_:1}))])),_:1},16)}}});export{Q as default};
