import{_ as n,c3 as t,h as e,ab as o}from"./three.bc6MLGU_1735031078130.js";import{m as i,e as r,b as a}from"./@tresjs.dTM0HLnZ1735031078130.js";import{d as l,b as s,a6 as u,a3 as c,o as f,D as p,J as m,aj as b,ak as g,u as v}from"./@vue.-THQH3GC1735031078130.js";const d=y;function y(n,t){const e=_();return(y=function(n,t){return e[n-=267]})(n,t)}!function(n,t){const e=y,o=_();for(;;)try{if(439655===parseInt(e(295))/1+-parseInt(e(292))/2+parseInt(e(287))/3*(-parseInt(e(309))/4)+parseInt(e(294))/5+-parseInt(e(319))/6*(parseInt(e(317))/7)+-parseInt(e(313))/8*(-parseInt(e(276))/9)+parseInt(e(323))/10*(parseInt(e(289))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[y(288)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){h(this,(function(){const n=y,t=new RegExp(n(291)),e=new RegExp(n(315),"i"),o=x(n(285));t[n(310)](o+n(305))&&e[n(310)](o+n(282))?x():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[y(288)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(){const n=["1137766swXVoz","Mesh","4220970rUjmgd","287066UewzDu","TresShaderMaterial","geometry","AdditiveBlending","opacity","map","push","console","warn","error","chain","verticesNeedUpdate","model","bind","1828972WGaEIj","test","xRayEffect","toString","42216CAZDYD",'{}.constructor("return this")( )',"\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","938UgHffA","sin","36306OyEkhK","table","TresBufferGeometry","#84ccff","3677130dqNvrm","trace","info","call","mergeGeometries","DoubleSide","constructor","length","glowColor","position","debu","traverse","value","string","72zduwdZ","stateObject","TresMeshRef","dispose","gger","offsetY","input","Color","uniforms","init","return (function() ","3EXQRON","apply","33LRLMbL","prototype","function *\\( *\\)"];return(_=function(){return n})()}w(void 0,(function(){const n=y;let t;try{t=Function(n(286)+n(314)+");")()}catch(i){t=window}const e=t[n(302)]=t[n(302)]||{},o=["log",n(303),n(325),n(304),"exception",n(320),n(324)];for(let r=0;r<o[n(269)];r++){const t=w[n(268)][n(290)].bind(w),i=o[r],a=e[i]||t;t[n(316)]=w[n(308)](w),t[n(312)]=a[n(312)][n(308)](a),e[i]=t}}))();const z=l({__name:d(311),props:{model:{},color:{default:d(322)},opacity:{default:1}},async setup(e){const o=d;let l,v;const y=e,h=s(),w=[];y[o(307)][o(273)]((t=>{const e=o;t instanceof n[e(293)]&&(t.geometry[e(306)]=!0,w[e(301)](t[e(297)]))}));const _=([l,v]=u((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),l=await l,v(),l),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(283)])(y.color)},lightningTexture:{type:"t",value:_[o(300)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:y.opacity}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(267)],blending:n[o(298)],depthWrite:!1};z[o(284)][o(281)].value=Math[o(318)](5);const{camera:x}=i(),{onLoop:T}=r();return T((({delta:n})=>{const t=o;x[t(274)][t(271)]&&h[t(274)]&&(z[t(284)].uTime.value+=n)})),c((()=>{const e=o;h.value&&(h[e(274)].geometry[e(279)](),h[e(274)].geometry=t[e(327)](w)),y.color&&(z[e(284)][e(270)][e(274)]=new(n[e(283)])(y.color)),y[e(299)]&&(z.uniforms.uOpacity[e(274)]=y[e(299)])})),(n,t)=>{const e=o;return f(),p("TresMesh",{ref_key:e(278),ref:h},[t[0]||(t[0]=m(e(321),null,null,-1)),m(e(296),b(g(z)),null,16)],512)}}});function x(n){function t(n){const e=y;if(typeof n===e(275))return function(n){}.constructor("while (true) {}")[e(288)]("counter");1!==(""+n/n)[e(269)]||n%20==0?function(){return!0}[e(268)](e(272)+e(280))[e(326)]("action"):function(){return!1}[e(268)]("debu"+e(280)).apply(e(277)),t(++n)}try{if(n)return t;t(0)}catch(e){}}!function(n,t){const e=C,o=P();for(;;)try{if(680118===-parseInt(e(230))/1*(-parseInt(e(275))/2)+parseInt(e(267))/3+parseInt(e(289))/4+-parseInt(e(247))/5*(parseInt(e(235))/6)+parseInt(e(251))/7+parseInt(e(234))/8+-parseInt(e(264))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const T=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(263)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function P(){const n=["string","init","geometry","trace","204860TfdsOF","cerebellum","error","stateObject","3180792hLXaCT","48XzopNd","action","ShaderMaterial","MathUtils","traverse","includes","randFloat","BufferGeometryRef","value","toString","gger","uSlowTime","306420aHZnRU","computeBoundingSphere","table","glowColor","2595201FjJhpX","brainstem","episodic","push","input","process","mergeGeometries","opacity","counter","randInt","model","DoubleSide","apply","16895835iNOOJo","debu","setAttribute","933348ZOvNUy","array","color","Color","TresBufferGeometry","uOpacity","bridge","constructor","8rTGFqv","prototype","amigdala","length","__proto__","map","TresShaderMaterial","aDelayDuration","bind","analitic","material","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","console","4595228uiGHto","bubbles","position","attributes","return (function() ","while (true) {}","test","AdditiveBlending","warn","semantic","name","Mesh","Float32BufferAttribute","TresPoints",'{}.constructor("return this")( )',"size"];return(P=function(){return n})()}!function(){T(this,(function(){const n=C,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(287),"i"),o=M(n(227));t[n(216)](o+"chain")&&e[n(216)](o+n(255))?M():o("0")}))()}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(263)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function C(n,t){const e=P();return(C=function(n,t){return e[n-=213]})(n,t)}S(void 0,(function(){const n=C;let t;try{t=Function(n(214)+n(224)+");")()}catch(i){t=window}const e=t[n(288)]=t[n(288)]||{},o=["log",n(218),"info",n(232),"exception",n(249),n(229)];for(let r=0;r<o[n(278)];r++){const t=S[n(274)][n(276)][n(283)](S),i=o[r],a=e[i]||t;t[n(279)]=S[n(283)](S),t[n(244)]=a.toString[n(283)](a),e[i]=t}}))();const I=l({__name:"bubblesEffect",props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(i){const a=C,l=i,u=["afective",a(219),a(253),a(256),a(277),a(252),a(273),a(231),a(284)],d={};l[a(261)][a(239)]((e=>{const o=a;e instanceof n[o(221)]&&u[o(280)]((n=>{const i=o;if(e[i(220)][i(240)](n)){if(d[n]){const o=[d[n],e[i(228)]];return d[n]=t[i(257)](o),d}return d[n]=e[i(228)]}return[]}))}));const y=s(),h=new(n[a(237)])({uniforms:{glowColor:{type:"c",value:new(n[a(270)])(l[a(269)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l[a(258)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(217)],side:n[a(262)],depthTest:!1,vertexColors:!1,transparent:!0});c((()=>{y[a(243)]&&(()=>{const t=a,i=[],r=[],l=[],s=[];for(let o=0;o<2e4-3*u[t(278)];o+=1){const a=e.randInt(0,u[t(278)]-1),c=u[a],f=d[c][t(213)][t(291)][t(268)][3*o+0]||0,p=d[c][t(213)][t(291)].array[3*o+1]||0,m=d[c][t(213)][t(291)][t(268)][3*o+2]||0;if(r[t(254)](f,p,m),i[o]=e.randFloat(10,20),o%100==0){const e=n[t(238)][t(260)](100,250)+p;s[t(254)](f,e,m,1)}else s[t(254)](f,p,m,0);l[2*o+0]=e[t(241)](.5,1.5),l[2*o+1]=2.5}y.value.setAttribute(t(282),new(n[t(222)])(l,2)),y.value[t(266)](t(290),new(n[t(222)])(s,4)),y[t(243)][t(266)](t(291),new(n[t(222)])(r,3)),y[t(243)][t(266)](t(269),new o([],3)),y.value.setAttribute(t(225),new(n[t(222)])(i,1)),y[t(243)][t(248)]()})()}));const w=s(),{onLoop:_}=r();return _((({delta:t})=>{const e=a;w.value&&(w[e(243)].material.uniforms.uTime[e(243)]+=.05,w[e(243)][e(285)][e(286)][e(246)].value+=1/400),l.color&&(h[e(286)][e(250)].value=new(n[e(270)])(l[e(269)])),l.opacity&&(h[e(286)][e(272)].value=l[e(258)])})),(n,t)=>{const e=a;return f(),p(e(223),{ref_key:"TresMeshRef",ref:w},[m(e(271),{ref_key:e(242),ref:y},null,512),m(e(281),b(g(v(h))),null,16)],512)}}});function M(n){function t(n){const e=C;if(typeof n===e(226))return function(n){}[e(274)](e(215))[e(263)](e(259));1!==(""+n/n)[e(278)]||n%20==0?function(){return!0}[e(274)](e(265)+e(245)).call(e(236)):function(){return!1}[e(274)](e(265)+e(245)).apply(e(233)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{z as _,I as a};
