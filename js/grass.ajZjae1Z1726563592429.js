import{_ as t,V as n,T as e,ai as o}from"./three.ZWd_rX7H1726563592429.js";import{U as r,z as a,Y as i,L as s}from"./@tresjs.Mu0zjs701726563592429.js";import"./index.yQCyqmh71726563592429.js";import{a as c}from"./simplex-noise.P9JMzoHY1726563592429.js";import{C as l}from"./index.MGzBUOhm1726563592429.js";import{d as u,a4 as f,o as p,E as h,L as m,u as d,r as v,f as g,g as x,j as y,aj as w,ak as b,al as _}from"./@vue.bvMz0l_u1726563592429.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.iCyHfDBY1726563592429.js";import"./@vueuse.a2m4N83v1726563592429.js";import"./lamina.suGYxVFU1726563592429.js";import"./glsl-tokenizer.Mx0qLbNn1726563592429.js";import"./@amap.JADYh6_E1726563592429.js";import"./glsl-token-descope.3gxTpsMt1726563592429.js";import"./glsl-token-depth.6_-9QUml1726563592429.js";import"./glsl-token-scope.RC3xjHNY1726563592429.js";import"./glsl-token-properties.4Op2YQNp1726563592429.js";import"./glsl-token-assignments.r62zueuJ1726563592429.js";import"./glsl-token-string.5NNBceO91726563592429.js";import"./glsl-token-functions._R3ANBWq1726563592429.js";import"./object-hash.PY2g7Wtg1726563592429.js";import"./jszip.ZHd90Dyy1726563592429.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.9s6WFBsZ1726563592429.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.0CYrDfWL1726563592429.js";import"./three-stdlib.bGoL1Dee1726563592429.js";import"./@pmndrs.iDhXA4D61726563592429.js";import"./utils.aaNLCHHR1726563592429.js";const z=I;!function(t,n){const e=I,o=C();for(;;)try{if(241379===parseInt(e(163))/1*(-parseInt(e(159))/2)+parseInt(e(146))/3+parseInt(e(206))/4*(parseInt(e(191))/5)+-parseInt(e(134))/6+parseInt(e(179))/7*(parseInt(e(148))/8)+parseInt(e(141))/9+parseInt(e(176))/10*(-parseInt(e(198))/11))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const j=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function I(t,n){const e=C();return(I=function(t,n){return e[t-=122]})(t,n)}!function(){j(this,(function(){const t=I,n=new RegExp(t(195)),e=new RegExp(t(127),"i"),o=L(t(183));n[t(171)](o+"chain")&&e[t(171)](o+t(145))?L():o("0")}))()}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[I(181)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function C(){const t=["test","counter","Vector4","gger","trace","652940MzHzux","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","alphaMap","589540ymDSXV","error","apply","cos","init","DoubleSide","geometry","length","uniforms","instances","needsUpdate","attributes-halfRootAngleCos","645pUacFY","stateObject","attributes-uv","halfRootAngleCosF32","function *\\( *\\)","grass","TresInstancedBufferGeometry","66zbGfXj","lookAt","string","action","attributes-position","attributes-offset","debu","console","4748vIuclG","halfRootAngleSinF32","convertSRGBToLinear","log","TresGroup","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","material","sin","offsetsF32","TresMesh","prototype","normalize","746064HiLuFX","position","exception","PlaneGeometry","array","map","computeVertexNormals","4208931lRzVrZ","bind","Color","attributes-orientation","input","124584KFJddd","constructor","24LYksjt","__proto__","orientationsF32","random","side","InstancedBufferAttribute","time","#000f00","width","while (true) {}","set","2gyTWao","table","Vector3","attributes-stretch","157483ClOQgq","push","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","translate","joints","attributes","toString",'{}.constructor("return this")( )'];return(C=function(){return t})()}A(void 0,(function(){const t=I,n=function(){const t=I;let n;try{n=Function(t(126)+t(170)+");")()}catch(e){n=window}return n}(),e=n[t(205)]=n[t(205)]||{},o=[t(124),"warn","info",t(180),t(136),t(160),t(175)];for(let r=0;r<o.length;r++){const n=A[t(147)][t(132)].bind(A),a=o[r],i=e[a]||n;n[t(149)]=A[t(142)](A),n[t(169)]=i[t(169)][t(142)](i),e[a]=n}}))();const k=[z(128)],S=["index",z(202),z(193),z(203),z(144),z(162),"attributes-halfRootAngleSin",z(190)],F=[z(185)],R=["side"],D=u({__name:z(196),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(o){const i=z;let s,u;const v=([s,u]=f((()=>a({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),s=await s,u(),s),g=o,x=c(Math[i(151)]);function y(n,e){const o=i,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,s=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,c=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(173)])(r,a,s,c)}function w(t,n){var e=2*x(t/50,n/50);return e+=4*x(t/100,n/100),e+=.2*x(t/10,n/10)}const b=function(o,r){const a=i,s=[],c=[],l=[],u=[],f=[];let p=new(t[a(173)]),h=new(t[a(173)]);const m=-.25;for(let e=0;e<o;e++){const i=Math[a(151)]()*r-r/2,d=Math[a(151)]()*r-r/2,v=w(i,d);s[a(164)](i,v,d);let g=Math.PI-Math.random()*(2*Math.PI);u[a(164)](Math[a(129)](.5*g)),f[a(164)](Math[a(182)](.5*g));let x=new n(0,1,0),b=x.x*Math.sin(g/2),_=x.y*Math.sin(g/2),M=x.z*Math[a(129)](g/2),z=Math[a(182)](g/2);p.set(b,_,M,z).normalize(),g=.5*Math[a(151)]()+m,x=new(t[a(161)])(1,0,0),b=x.x*Math[a(129)](g/2),_=x.y*Math[a(129)](g/2),M=x.z*Math.sin(g/2),z=Math[a(182)](g/2),h[a(158)](b,_,M,z)[a(133)](),p=y(p,h),g=.5*Math[a(151)]()+m,x=new(t[a(161)])(0,0,1),b=x.x*Math[a(129)](g/2),_=x.y*Math[a(129)](g/2),M=x.z*Math.sin(g/2),z=Math.cos(g/2),h.set(b,_,M,z).normalize(),p=y(p,h),c[a(164)](p.x,p.y,p.z,p.w),e<o/3?l[a(164)](1.8*Math[a(151)]()):l[a(164)](Math.random())}return{offsetsF32:new(t[a(153)])(new Float32Array(s),3),orientationsF32:new e(new Float32Array(c),4),stretchesF32:new(t[a(153)])(new Float32Array(l),1),halfRootAngleCosF32:new(t[a(153)])(new Float32Array(f),1),halfRootAngleSinF32:new(t[a(153)])(new Float32Array(u),1)}}(g[i(188)],g[i(156)]),_=new(t[i(137)])(g.bW,g.bH,1,g[i(167)])[i(166)](0,g.bH/2,0),M=new(t[i(137)])(g.width,g.width,32,32);M[i(199)](new n(0,1,0));const j=M[i(168)][i(135)];for(let t=0;t<j[i(138)].length;t+=3)j[i(138)][t+1]=w(j[i(138)][t],j[i(138)][t+2]);M[i(168)][i(135)][i(189)]=!0,M[i(140)]();const I=new(l({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[i(143)])(.3,.9,0)[i(123)](),bottomColor:new(t[i(143)])(0,.2,0)[i(123)]()},i(165),i(177),(n=>{const e=i;n[e(152)]=t[e(184)]})));I[i(139)]=v[i(139)],I[i(178)]=v.alphaMap,I.toneMapped=!1;const{onLoop:A}=r();return A((({elapsed:t})=>{const n=i;I[n(187)][n(154)].value=t/4})),(n,e)=>{const o=i;return p(),h(o(125),null,[m(o(131),{material:d(I)},[m(o(197),{index:d(_).index,"attributes-position":d(_)[o(168)].position,"attributes-uv":d(_)[o(168)].uv,"attributes-offset":d(b)[o(130)],"attributes-orientation":d(b)[o(150)],"attributes-stretch":d(b).stretchesF32,"attributes-halfRootAngleSin":d(b)[o(122)],"attributes-halfRootAngleCos":d(b)[o(194)]},null,8,S)],8,k),m(o(131),{position:[0,0,0],geometry:d(M)},[m("TresMeshStandardMaterial",{color:o(155),side:t[o(184)]},null,8,R)],8,F)])}}});function L(t){function n(t){const e=I;if(typeof t===e(200))return function(t){}[e(147)](e(157))[e(181)](e(172));1!==(""+t/t)[e(186)]||t%20==0?function(){return!0}.constructor(e(204)+e(174)).call(e(201)):function(){return!1}[e(147)]("debu"+e(174))[e(181)](e(192)),n(++t)}try{if(t)return n;n(0)}catch(e){}}function H(t,n){const e=T();return(H=function(t,n){return e[t-=161]})(t,n)}const O=H;!function(t,n){const e=H,o=T();for(;;)try{if(537038===-parseInt(e(185))/1+-parseInt(e(189))/2+-parseInt(e(172))/3*(parseInt(e(168))/4)+-parseInt(e(180))/5+-parseInt(e(164))/6+parseInt(e(182))/7*(parseInt(e(178))/8)+-parseInt(e(162))/9*(-parseInt(e(195))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const E=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[H(176)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function T(){const t=["10vmMyxi","test","constructor","27055053RZkLWk","length","3279978CjOMfk",'{}.constructor("return this")( )',"call","action","4jVSloy","trace","bind","TresPerspectiveCamera","998418htUIKA","string","warn","gger","apply","prototype","16aXIpzN","return (function() ","2795480FDiSvg","chain","723121lQHMYs","while (true) {}","toString","1045345HBxXnD","debu","log","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","383550CRkGCM","grass","counter","console","exception","error"];return(T=function(){return t})()}!function(){E(this,(function(){const t=H,n=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=U("init");n.test(o+t(181))&&e[t(196)](o+"input")?U():o("0")}))()}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();P(void 0,(function(){const t=H;let n;try{n=Function(t(179)+t(165)+");")()}catch(r){n=window}const e=n.console=n[t(192)]||{},o=[t(187),t(174),"info",t(194),t(193),"table",t(169)];for(let a=0;a<o[t(163)];a++){const n=P[t(161)][t(177)][t(170)](P),r=o[a],i=e[r]||n;n.__proto__=P.bind(P),n[t(184)]=i[t(184)][t(170)](i),e[r]=n}}))();const B=m(O(171),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1),G=u({__name:O(190),setup(t){const n=v({alpha:!0,toneMapping:o,windowSize:!0,clearColor:6710886}),e=v({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=H;return p(),g(d(s),w(b(n)),{default:x((()=>[B,y(d(i),w(b(e)),null,16),(p(),g(_,null,{default:x((()=>[y(D)])),_:1})),(p(),g(_,null,{default:x((()=>[y(d(M),{texture:r(188)})])),_:1}))])),_:1},16)}}});function U(t){function n(t){const e=H;if(typeof t===e(173))return function(t){}[e(161)](e(183))[e(176)](e(191));1!==(""+t/t)[e(163)]||t%20==0?function(){return!0}[e(161)](e(186)+e(175))[e(166)](e(167)):function(){return!1}[e(161)](e(186)+e(175)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{G as default};
