import{_ as e,z as n}from"./three.5octV-9b1728467445434.js";import{U as t,Y as a,z as o}from"./@tresjs.ED4ePb8T1728467445434.js";import{P as r}from"./tweakpane.yHWGBmom1728467445434.js";import{d as i,a4 as l,Y as s,e as u,o as c,f as p,g as f,j as v,u as m,L as d,m as h,aj as g,ak as x}from"./@vue.JNsx1iN61728467445434.js";import"./@vueuse.G8I04tzi1728467445434.js";const y=P;!function(e,n){const t=P,a=j();for(;;)try{if(464768===parseInt(t(203))/1*(-parseInt(t(236))/2)+-parseInt(t(212))/3*(-parseInt(t(238))/4)+parseInt(t(217))/5*(-parseInt(t(251))/6)+-parseInt(t(234))/7*(-parseInt(t(225))/8)+-parseInt(t(231))/9*(-parseInt(t(261))/10)+parseInt(t(229))/11+parseInt(t(252))/12)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[P(223)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=P,n=new RegExp(e(220)),t=new RegExp(e(206),"i"),a=D(e(243));n.test(a+e(255))&&t[e(259)](a+e(204))?D():a("0")}))()}();const b=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();b(void 0,(function(){const e=P;let n;try{n=Function("return (function() "+e(215)+");")()}catch(o){n=window}const t=n.console=n[e(226)]||{},a=["log",e(241),"info","error",e(208),e(247),e(233)];for(let r=0;r<a[e(214)];r++){const n=b[e(218)].prototype.bind(b),o=a[r],i=t[o]||n;n[e(232)]=b[e(211)](b),n[e(253)]=i.toString.bind(i),t[o]=n}}))();const w=d(y(250),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),S=d("TresIcosahedronGeometry",{args:[1,4]},null,-1),_=d(y(260),{args:[1,128]},null,-1),z=d(y(228),{args:["#ffffff",y(205),3]},null,-1);function j(){const e=["__proto__","trace","651QPQyEg","change","22egOTwQ","counter","8UJLTKU","string","TresMesh","warn","#122148","init","uniforms","while (true) {}","TresPoints","table","stateObject","call","TresPerspectiveCamera","3788526ahRkns","291684OKsNfz","toString","color","chain","pointsEarth","gger","#17c5a9","test","TresIcosahedronGeometry","130WVaRbt","uWaveHeight","36997GGRyJy","input","#080820","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","addBinding","exception","TresMeshBasicMaterial","action","bind","157647FPVUlu","TresCanvas","length",'{}.constructor("return this")( )',"value","5jpDgQP","constructor","TresShaderMaterial","function *\\( *\\)","SRGBColorSpace","粒子大小","apply","uTime","26552IhaqOb","console","TresGroup","TresHemisphereLight","2709355jqCYWy","set","566847OsZDMi"];return(j=function(){return e})()}function P(e,n){const t=j();return(P=function(e,n){return t[e-=202]})(e,n)}const E=i({__name:y(256),async setup(i){const T=y;let b,j;const P={color:T(258),pointSize:4},E={clearColor:T(242),shadows:!1,alpha:!1,outputColorSpace:e[T(221)]},D={color:P[T(254)],wireframe:!0,transparent:!0,opacity:.2},I=([b,j]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),b=await b,j(),b),U=I[0],k=I[1],C=I[2],A=I[3],R=I[4],W={uniforms:{size:{type:"f",value:P.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:C},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:R},earthTexture:{type:"t",value:U},starTexture:{type:"t",value:k}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},M=s(),L=s(),B=(new r).addFolder({title:"Debug"});B.addBinding(P,T(254),{type:T(254)}).on(T(235),(({value:e})=>{const n=T;L[n(216)][n(254)][n(230)](e)})),B.addBinding(W[T(244)].size,T(216),{min:.1,max:10,step:.1,label:T(222)}),B[T(207)](W[T(244)][T(202)],T(216),{min:.01,max:.5,step:.01,label:"海浪高度"}),B[T(207)](W[T(244)].uWaveSpeed,T(216),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:H}=t();return H((({delta:e})=>{const n=T;M[n(216)]&&(M[n(216)].rotation.y+=.002,W[n(244)][n(224)][n(216)]+=10*e)})),(e,n)=>{const t=T,o=u(t(213));return c(),p(o,h(E,{"window-size":""}),{default:f((()=>[w,v(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(227),{ref_key:"groupRef",ref:M},[d(t(240),null,[S,d(t(209),h({ref_key:"wireframeMaterialRef",ref:L},D),null,16)]),d(t(246),null,[_,d(t(219),g(x(W)),null,16)])],512),z])),_:1},16)}}});function D(e){function n(e){const t=P;if(typeof e===t(239))return function(e){}.constructor(t(245))[t(223)](t(237));1!==(""+e/e).length||e%20==0?function(){return!0}[t(218)]("debu"+t(257))[t(249)](t(210)):function(){return!1}.constructor("debu"+t(257))[t(223)](t(248)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
