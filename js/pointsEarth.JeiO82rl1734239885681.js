import{_ as e}from"./three.NPKhDGTA1734239885681.js";import{e as n,U as t,b as a}from"./@tresjs.qWeugQU61734239885681.js";import{P as o}from"./tweakpane.yHWGBmom1734239885681.js";import{d as r,a6 as i,X as l,e as s,o as u,f as c,g as f,J as p,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.-THQH3GC1734239885681.js";import"./@vueuse.GyFlY0FM1734239885681.js";!function(e,n){const t=w,a=T();for(;;)try{if(101307===parseInt(t(352))/1+-parseInt(t(359))/2+parseInt(t(389))/3+-parseInt(t(356))/4*(parseInt(t(378))/5)+parseInt(t(399))/6*(parseInt(t(402))/7)+parseInt(t(365))/8+-parseInt(t(360))/9*(parseInt(t(379))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const x=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(394)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){x(this,(function(){const e=w,n=new RegExp(e(361)),t=new RegExp(e(404),"i"),a=b("init");n[e(392)](a+e(380))&&t[e(392)](a+"input")?b():a("0")}))()}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(394)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=T();return(w=function(e,n){return t[e-=350]})(e,n)}function T(){const e=["156500RwBfiY","__proto__","TresGroup","bind","553648uwzVML","#17c5a9","exception","205506TURImp","13779NORmbc","function *\\( *\\)","counter","Debug","uWaveSpeed","1220808OpSuRP","TresPerspectiveCamera","TresPoints","string","uWaveHeight","SRGBColorSpace","table","change","pointSize","gger","call","size","stateObject","5DyJycW","1460kzwZoH","chain","groupRef","海浪变化速度","warn","FrontSide","#ffffff","prototype","return (function() ","debu","547020IPyRCG","trace",'{}.constructor("return this")( )',"test","set","apply","value","color","TresHemisphereLight","TresCanvas","6XvKXAg","console","constructor","521899hfAlUq","rotation","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresIcosahedronGeometry","log","addBinding","length","uniforms","error","TresMesh","addFolder","uTime","toString","info","TresShaderMaterial","while (true) {}"];return(T=function(){return e})()}y(void 0,(function(){const e=w;let n;try{n=Function(e(387)+e(391)+");")()}catch(o){n=window}const t=n[e(400)]=n[e(400)]||{},a=[e(406),e(383),e(415),e(410),e(358),e(371),e(390)];for(let r=0;r<a[e(408)];r++){const n=y.constructor[e(386)][e(355)](y),o=a[r],i=t[o]||n;n[e(353)]=y[e(355)](y),n[e(414)]=i.toString[e(355)](i),t[o]=n}}))();const S=r({__name:"pointsEarth",async setup(r){const x=w;let y,T;const S={color:x(357),pointSize:4},b={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[x(370)]},_={color:S[x(396)],wireframe:!0,transparent:!0,opacity:.2},z=([y,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),y=await y,T(),y),j=z[0],P=z[1],E=z[2],D=z[3],I=z[4],A={uniforms:{size:{type:"f",value:S[x(373)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:E},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[x(384)]},R=l(),k=l(),C=(new o)[x(412)]({title:x(363)});C[x(407)](S,"color",{type:x(396)}).on(x(372),(({value:e})=>{const n=x;k[n(395)][n(396)][n(393)](e)})),C.addBinding(A.uniforms[x(376)],x(395),{min:.1,max:10,step:.1,label:"粒子大小"}),C[x(407)](A[x(409)][x(369)],x(395),{min:.01,max:.5,step:.01,label:"海浪高度"}),C[x(407)](A[x(409)][x(364)],x(395),{min:.01,max:1,step:.01,label:x(382)});const{onLoop:U}=n();return U((({delta:e})=>{const n=x;R.value&&(R.value[n(403)].y+=.002,A[n(409)][n(413)][n(395)]+=10*e)})),(e,n)=>{const a=x,o=s(a(398));return u(),c(o,d(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=p(a(366),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),p(a(354),{ref_key:a(381),ref:R},[p(a(411),null,[n[0]||(n[0]=p(a(405),{args:[1,4]},null,-1)),p("TresMeshBasicMaterial",d({ref_key:"wireframeMaterialRef",ref:k},_),null,16)]),p(a(367),null,[n[1]||(n[1]=p(a(405),{args:[1,128]},null,-1)),p(a(350),h(g(A)),null,16)])],512),n[3]||(n[3]=p(a(397),{args:[a(385),"#080820",3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=w;if(typeof e===t(368))return function(e){}.constructor(t(351))[t(394)](t(362));1!==(""+e/e)[t(408)]||e%20==0?function(){return!0}[t(401)]("debu"+t(374))[t(375)]("action"):function(){return!1}[t(401)](t(388)+t(374)).apply(t(377)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{S as default};
