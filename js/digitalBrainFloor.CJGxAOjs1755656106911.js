import{cf as o,N as e,_ as s,ce as a}from"./three.QlBabAUP1755656106911.js";import{a as t}from"./@tresjs.DiA_9BZG1755656106911.js";import{P as i}from"./tweakpane.C0HtAJSg1755656106911.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.6doMRr9L1755656106911.js";import"./@fesjs.CbEb7DW11755656106911.js";import"./Resource.E1AaKJNO1755656106911.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.DmVBtKjc1755656106911.js";import"./three-mesh-ui.module.C3WtMltr1755656106911.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1755656106911.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.Ch82CRwy1755656106911.js";import{_ as m,a as d}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.C08JlXZ71755656106911.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as k,m as x,a5 as C,F as T}from"./@vue.BzMISRrV1755656106911.js";import"./postprocessing.DMvYFiwL1755656106911.js";import"./@vueuse.DfjcWOXI1755656106911.js";import"./vue-router.C8JCtpeO1755656106911.js";import"./lodash-es.C7pWAXPe1755656106911.js";import"./pinia.CBs4DVFQ1755656106911.js";import"./@qlin.q6OWdsQV1755656106911.js";import"./@babel.BPq7uOAK1755656106911.js";import"./@floating-ui.BFjFSAYt1755656106911.js";import"./@juggle.CcBCnTIR1755656106911.js";import"./starLoading.C3eU4oXY1755656106911.js";import"./utils.BhiyV-tq1755656106911.js";import"./cssLoaders.C1JLZQUC1755656106911.js";import"./bubbleLoading.BY1Goci81755656106911.js";import"./yangyangLoading.zzHzNkrM1755656106911.js";const P={position:[0,120,0]},S=u({__name:"digitalBrainFloor",async setup(u){let S,z;const G=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),M=c({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(M,"show",{label:"点云显示"}),R.addBinding(M,"color",{label:"点云颜色"}),R.addBinding(M,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const A=c({color:"#84ccff",show:!0,opacity:1});R.addBinding(A,"show",{label:"脑轮廓显示"}),R.addBinding(A,"color",{label:"脑轮廓颜色"}),R.addBinding(A,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const F=c({color:"#9e00af",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑组织显示"}),R.addBinding(F,"color",{label:"脑组织颜色"}),R.addBinding(F,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const N=new o,O=([S,z]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",N))),S=await S,z(),S),q=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),E=c({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(T,null,[y(h(l)),y(s,x(q,{"window-size":""}),{default:b((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(E)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[M.show?(g(),L(p,x({key:0,model:h(O)},M),null,16,["model"])):k("",!0),(g(),L(C,null,{default:b((()=>[A.show?(g(),L(m,x({key:0,model:h(O)},A),null,16,["model"])):k("",!0)])),_:1})),F.show?(g(),L(d,x({key:1,model:h(O)},F),null,16,["model"])):k("",!0)]),y(r,w(B(G)),null,16)])),_:1},16)],64)}}});export{S as default};
