import{m as n,e,b as t,U as r}from"./@tresjs.g7tJPOCI1736493808390.js";import{W as o,k as i,ce as s,c5 as a,c3 as u,a0 as c,n as f,aW as l}from"./three.lAfZYOpc1736493808390.js";import{d as v,a4 as p,a1 as m,o as d,D as h,J as g,u as x,F as w,e as y,f as D,g as R,j as S,al as E,m as b}from"./@vue.-Mz_IXfk1736493808390.js";import"./@vueuse.kU-N6GoC1736493808390.js";const _=N;!function(n,e){const t=N,r=C();for(;;)try{if(101370===parseInt(t(475))/1+parseInt(t(462))/2*(parseInt(t(482))/3)+parseInt(t(496))/4*(parseInt(t(461))/5)+parseInt(t(502))/6+parseInt(t(465))/7+parseInt(t(504))/8*(-parseInt(t(471))/9)+-parseInt(t(463))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const I=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[N(472)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function C(){const n=["\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","noiseContour","addPass","noiseContourMeshRef1",'{}.constructor("return this")( )',"value","exception","length","console","rotation-x","15IXzzio","70456YcpuPe","3518870qASXEe","extensions","1401855kUCMid","TresBoxGeometry","debu","stateObject","bind","TresMeshPhongMaterial","19989wPrFpV","apply","prototype","table","174360eUQFZc","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","trace","log","toString","test","gger","9keDRRw","innerWidth","constructor","noiseContourMeshRef2","render","__proto__","#ffffff","side","uniforms","function *\\( *\\)","material","texture","return (function() ","input","56276klNQdx","action","derivatives","renderToScreen","string","width","583896lEFxIK","innerHeight","600FFbOlu","TresMesh"];return(C=function(){return n})()}!function(){I(this,(function(){const n=N,e=new RegExp(n(491)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=j("init");e.test(r+"chain")&&t[n(480)](r+n(495))?j():r("0")}))()}();const P=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[N(472)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();P(void 0,(function(){const n=N;let e;try{e=Function(n(494)+n(510)+");")()}catch(o){e=window}const t=e.console=e[n(459)]||{},r=[n(478),"warn","info","error",n(457),n(474),n(477)];for(let i=0;i<r[n(458)];i++){const e=P[n(484)][n(473)][n(469)](P),o=r[i],s=t[o]||e;e[n(487)]=P[n(469)](P),e[n(479)]=s[n(479)][n(469)](s),t[o]=e}}))();const T=["side",_(460)],U=[_(489)];function N(n,e){const t=C();return(N=function(n,e){return t[n-=457]})(n,e)}const F="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",k=_(476),A=_(506),M=v({__name:_(507),async setup(r){const v=_;let y,D;const{camera:R,renderer:S,scene:E,sizes:b}=n(),I=([y,D]=p((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),y=await y,D(),y),{onLoop:C,onAfterLoop:P}=e(),N=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),M=new i(window[v(483)],window[v(503)]);let j=null;const z=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:M}},vertexShader:F,fragmentShader:k}),L=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:I}},vertexShader:F,fragmentShader:A});return L[v(499)]=!0,L[v(492)][v(464)][v(498)]=!0,m((()=>{const n=v;b[n(501)][n(511)]&&(j=new a(S[n(511)]),j[n(508)](new u(E[n(511)],R[n(511)])),j.addPass(z),j[n(508)](L))})),C((({elapsed:n})=>{const e=v;S[e(511)][e(486)](E[e(511)],R.value,N),z[e(490)].tShadow.value=N[e(493)],L[e(490)].iTime[e(511)]=n})),P((()=>{j&&j[v(486)]()})),(n,e)=>{const t=v;return d(),h(w,null,[g(t(505),{ref:t(485),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g(t(466),{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:t(488),shininess:0},null,-1)]),8,T),g(t(505),{ref:t(509),side:x(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g(t(470),{color:t(488),shininess:0},null,-1)]),8,U)],64)}}});function j(n){function e(n){const t=N;if(typeof n===t(500))return function(n){}[t(484)]("while (true) {}")[t(472)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[t(484)]("debu"+t(481)).call(t(497)):function(){return!1}.constructor(t(467)+t(481))[t(472)](t(468)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const z=Q;!function(n,e){const t=Q,r=B();for(;;)try{if(606453===-parseInt(t(370))/1+-parseInt(t(383))/2+parseInt(t(366))/3+parseInt(t(361))/4+parseInt(t(384))/5+-parseInt(t(354))/6+parseInt(t(358))/7)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Q(376)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function B(){const n=["605152AUWeJT","515450mHtUgm","while (true) {}","chain","action","length","debu","error","TresPerspectiveCamera","constructor","3487350AsIGQx","console","trace","call","2958690DiwUpC","bind","__proto__","4446492FKYnse","input","test","table",'{}.constructor("return this")( )',"711303pcAfqN","info","log","TresCanvas","384230bdGwQE","stateObject","string","prototype","red","perspectiveCameraRef","apply","exception","warn","counter","gger","toString","TresAmbientLight"];return(B=function(){return n})()}!function(){L(this,(function(){const n=Q,e=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=$("init");e[n(363)](r+n(386))&&t[n(363)](r+n(362))?$():r("0")}))()}();const G=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Q(376)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();G(void 0,(function(){const n=Q,e=function(){const n=Q;let e;try{e=Function("return (function() "+n(365)+");")()}catch(t){e=window}return e}(),t=e[n(355)]=e.console||{},r=[n(368),n(378),n(367),n(351),n(377),n(364),n(356)];for(let o=0;o<r[n(349)];o++){const e=G.constructor[n(373)].bind(G),i=r[o],s=t[i]||e;e[n(360)]=G[n(359)](G),e[n(381)]=s[n(381)][n(359)](s),t[i]=e}}))();const Z={ref:z(375),position:[600,750,-1221],fov:45,near:1,far:1e4};function Q(n,e){const t=B();return(Q=function(n,e){return t[n-=349]})(n,e)}const W=v({__name:"noiseContourPage",setup(n){const e={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0};return(n,t)=>{const o=Q,i=y(o(369));return d(),D(i,b(e,{"window-size":""}),{default:R((()=>[g(o(352),Z,null,512),S(x(r)),t[0]||(t[0]=g(o(382),{color:"#ffffff"},null,-1)),t[1]||(t[1]=g("TresDirectionalLight",{position:[400,400,400],intensity:1,color:o(374)},null,-1)),(d(),D(E,null,{default:R((()=>[S(M)])),_:1}))])),_:1},16)}}});function $(n){function e(n){const t=Q;if(typeof n===t(372))return function(n){}.constructor(t(385))[t(376)](t(379));1!==(""+n/n)[t(349)]||n%20==0?function(){return!0}[t(353)](t(350)+t(380))[t(357)](t(387)):function(){return!1}[t(353)](t(350)+"gger")[t(376)](t(371)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{W as default};
