import{m as n,e as t,o as e}from"./@tresjs.xCsT8yve1742895693222.js";import{_ as r,p as o,r as a}from"./three.DqHgeVY11742895693222.js";import{P as i}from"./tweakpane.ivGeiIdz1742895693222.js";import{d as c,b as l,r as u,w as s,q as p,o as m,H as v,N as f,u as _,e as g,z as d,j as h,g as x,aj as y,ak as b,f as S,al as w,m as z,F as j}from"./@vue.C4dqouNn1742895693222.js";import{_ as I}from"./@fesjs.C15FMxIg1742895693222.js";import"./postprocessing.vTwfsnPH1742895693222.js";import"./@vueuse.q8TRDI1e1742895693222.js";import"./vue-router.0ovIAQEA1742895693222.js";import"./lodash-es.p1wj6C0b1742895693222.js";import"./@qlin.o0hjOMCg1742895693222.js";import"./pinia.JZN5hDyR1742895693222.js";import"./@floating-ui.HzHndBae1742895693222.js";import"./@juggle.4EyLec-41742895693222.js";const k=Z;!function(n,t){const e=Z,r=F();for(;;)try{if(674588===parseInt(e(197))/1*(parseInt(e(161))/2)+parseInt(e(199))/3+parseInt(e(159))/4*(-parseInt(e(180))/5)+parseInt(e(157))/6*(-parseInt(e(187))/7)+parseInt(e(181))/8+-parseInt(e(173))/9+parseInt(e(153))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const D=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[Z(168)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){D(this,(function(){const n=Z,t=new RegExp(n(204)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=L(n(193));t[n(205)](r+n(196))&&e[n(205)](r+"input")?L():r("0")}))()}();const V=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[Z(168)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();V(void 0,(function(){const n=Z;let t;try{t=Function(n(178)+n(188)+");")()}catch(o){t=window}const e=t[n(189)]=t[n(189)]||{},r=["log","warn","info",n(151),n(167),"table",n(156)];for(let a=0;a<r[n(184)];a++){const t=V.constructor[n(154)][n(142)](V),o=r[a],i=e[o]||t;t[n(163)]=V.bind(V),t.toString=i.toString[n(142)](i),e[o]=t}}))();const M=[k(155)],R=["uniforms",k(192),k(162)];function F(){const n=["color","u_color","RedFormat","u_volume","2104668kxtRFG","constructor","isoValue","u_alphaVal","stateObject","return (function() ","RepeatWrapping","3426405osZHOz","6787680NQMbjO","Data3DTexture","basicVolumeRendering","length","TresShaderMaterial","innerWidth","4692821ZZllwI",'{}.constructor("return this")( )',"console","Vector3","TresMesh","vertexShader","init","LinearFilter","counter","chain","221524WnlErq","catch","1626423hSSkKA","call","action","gger","u_dt","function *\\( *\\)","test","debu","addFolder","bind","format","arrayBuffer","string","Display Settings","needsUpdate","then","meshRef","addBinding","error","u_time","8793540ZDBNNZ","prototype","rotation-x","trace","12jrphFg","value","4avezVw","wrapT","6mMzDJR","fragmentShader","__proto__","minFilter","getElapsedTime","TresSphereGeometry","exception","apply"];return(F=function(){return n})()}const O=41;function Z(n,t){const e=F();return Z=function(n,t){return e[n-=141]},Z(n,t)}const P=c({__name:k(183),setup(e){const c=k,g=window[c(186)],d=window.innerHeight,h=l(null),x=l(null),y=new o;y.start();const b=(new i)[c(141)]({title:c(146)}),S=b.addFolder({title:"Cross Section Settings"}),w=new(r[c(190)])(.5,.5,.5);S[c(150)](w,"x",{label:"X",min:.02,max:.5,step:.02}),S[c(150)](w,"y",{label:"Y",min:.02,max:.5,step:.02}),S[c(150)](w,"z",{label:"Z",min:.02,max:.5,step:.02}),S.expanded=!0;const{camera:z}=n(),j=u({u_camera:{value:z[c(158)]?.position},u_resolution:{value:new(r[c(190)])(g,d,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:w},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),I=b[c(141)]({title:"Algorithm Settings"});I[c(150)](j[c(203)],c(158),{label:"dt",min:4e-4,max:.016,step:2e-4}),I[c(150)](j[c(170)],c(158),{label:c(169),min:1,max:3,step:1}),I.addBinding(j[c(176)],c(158),{label:"alphaVal",min:.01,max:1,step:.01}),I.addBinding(j.u_isoValue,c(158),{label:c(175),min:0,max:1,step:.04}),s(x,(n=>{const t=c;if(n){const e=new(r[t(182)])(n,O,O,O);e[t(143)]=r[t(171)],e[t(164)]=a,e.magFilter=r[t(194)],e[t(160)]=r[t(179)],e[t(147)]=!0,j[t(172)].value=e}}));const{onLoop:D}=t();return D((()=>{const n=c;j[n(152)][n(158)]=y[n(165)]()})),p((()=>{(()=>{const n=c;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw").then((t=>t[n(144)]()))[n(148)]((t=>{const e=n,r=new Uint8Array(t),o=new Uint8Array(68921);for(let n=0;n<r[e(184)];n++)o[n]=r[n];x[e(158)]=o}))[n(198)]((t=>{console[n(151)]("Error fetching volume data:",t)}))})()})),(n,t)=>{const e=c;return m(),v(e(191),{ref_key:e(149),ref:h,"rotation-x":Math.PI/-2},[t[0]||(t[0]=f(e(166),{args:[1,16,16]},null,-1)),f(e(185),{uniforms:j,vertexShader:_("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:_("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,R)],8,M)}}});function L(n){function t(n){const e=Z;if(typeof n===e(145))return function(n){}[e(174)]("while (true) {}")[e(168)](e(195));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(e(206)+e(202))[e(200)](e(201)):function(){return!1}[e(174)](e(206)+e(202)).apply(e(177)),t(++n)}try{if(n)return t;t(0)}catch(e){}}!function(n,t){const e=T,r=W();for(;;)try{if(817284===parseInt(e(190))/1+-parseInt(e(196))/2*(parseInt(e(185))/3)+parseInt(e(192))/4+-parseInt(e(210))/5*(-parseInt(e(191))/6)+-parseInt(e(212))/7+parseInt(e(203))/8*(-parseInt(e(184))/9)+parseInt(e(217))/10*(-parseInt(e(186))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const A=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function T(n,t){const e=W();return T=function(n,t){return e[n-=182]},T(n,t)}!function(){A(this,(function(){const n=T,t=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=C(n(198));t.test(r+n(215))&&e.test(r+n(207))?C():r("0")}))()}();const E=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[T(193)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function W(){const n=["_blank","856138nGvFRY","10986ZGezGM","6513172iZWJgL","apply","div","table","2yqnUlz","trace","init","length","action","toString","warn","5680UWgUrH","console","bind","prototype","input"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw ","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","3635KrPjuA","exception","9175397nZgInk","#201919","gger","chain","while (true) {}","210cqeEJl","error","constructor","TresAmbientLight","stateObject","log","return (function() ","10035YqvRXD","1836207vNiHdw","148654LDlkrr","debu","string"];return(W=function(){return n})()}E(void 0,(function(){const n=T,t=function(){const n=T;let t;try{t=Function(n(183)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t[n(204)]=t[n(204)]||{},r=[n(182),n(202),"info",n(218),n(211),n(195),n(197)];for(let o=0;o<r[n(199)];o++){const t=E[n(219)][n(206)][n(205)](E),a=r[o],i=e[a]||t;t.__proto__=E.bind(E),t[n(201)]=i[n(201)][n(205)](i),e[a]=t}}))();function C(n){function t(n){const e=T;if(typeof n===e(188))return function(n){}.constructor(e(216)).apply("counter");1!==(""+n/n)[e(199)]||n%20==0?function(){return!0}[e(219)](e(187)+e(214)).call(e(200)):function(){return!1}[e(219)](e(187)+e(214)).apply(e(221)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const q=I(c({__name:"basicVolume",setup(n){const t=u({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),r=u({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,o)=>{const a=T,i=g("TresCanvas");return m(),v(j,null,[o[3]||(o[3]=f(a(194),{class:"info"},[f("a",{href:a(209),target:a(189)},a(208)),f("br"),d(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),h(i,z({clearColor:a(213)},t),{default:x((()=>[o[0]||(o[0]=f("TresPerspectiveCamera",{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),o[1]||(o[1]=f(a(220),{intensity:2},null,-1)),h(_(e),y(b(r)),null,16),(m(),S(w,null,{default:x((()=>[h(P,{position:[0,0,0]})])),_:1})),o[2]||(o[2]=f("TresGridHelper",{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{q as default};
