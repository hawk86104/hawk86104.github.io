import{z as e}from"./@fesjs.DbrjsIBT1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";/* empty css                                                                             */import{l as t}from"./bubbleLoading.CpUQAUq31761100244891.js";import"./three-mesh-ui.module.B6HSvFaK1761100244891.js";import"./global.CFybmx-G1761100244891.js";/* empty css                                                              */import{l as o,a as s}from"./initScript.DfW0FIJW1761100244891.js";import{_ as r,K as a}from"./@tresjs.DqJWjmrH1761100244891.js";import{_ as i}from"./vanilla.esm.5.5.0.CsbunUBT1761100244891.js";import{u as n}from"./index.wJolfAi41761100244891.js";import{u as l}from"./useTexture.6Wyv_tgl1761100244891.js";import{ac as u,G as p,o as m,ad as d,u as c,I as f,h as g,b as v,e as h,ap as _,F as j,d as x,a as y,q as C,r as M,g as b,m as P}from"./@vue.CKlgtJke1761100244891.js";import{k as T,ar as S,a6 as w}from"./three.DvmzhRS91761100244891.js";import"./OimoPhysicsBuffer.RP9_cA631761100244891.js";import{_ as k}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.C3soJrEE1761100244891.js";import{_ as I}from"./component.vue_vue_type_script_setup_true_lang.DUKfhYhy1761100244891.js";import"./PackedMipMapGenerator.D8sBv6ND1761100244891.js";import{_ as R}from"./lamboEffect.vue_vue_type_script_setup_true_lang.B22VE9pw1761100244891.js";import"./vue-router.AUgVvTqV1761100244891.js";import"./lodash-es.DWe8oqPO1761100244891.js";import"./pinia.-nSLzXOT1761100244891.js";import"./@qlin.y-0Z8WnK1761100244891.js";import"./@babel.BPq7uOAK1761100244891.js";import"./@floating-ui.Bhq4ibgf1761100244891.js";import"./@juggle.Vc7cP4_P1761100244891.js";import"./utils.g-0SwCPh1761100244891.js";import"./color.DSPNiGxi1761100244891.js";import"./color-string.Bn2Vqey71761100244891.js";import"./color-name.gyPnsvCn1761100244891.js";import"./lodash.DPxB_j171761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./object-hash.zo7S6bgL1761100244891.js";import"./jszip.DTlig5CR1761100244891.js";import"./three-stdlib.Bkbtr8od1761100244891.js";import"./useLoader.DWT9Jk041761100244891.js";import"./oimophysics.CfVKSiAm1761100244891.js";import"./dither.glsl.tNAdkJUa1761100244891.js";import"./Reflector.C-cnab8L1761100244891.js";import"./vite-plugin-qiankun.B06WoCqG1761100244891.js";import"./utils.CNife3_q1761100244891.js";const E=["object","rotation"],B={__name:"dissolveEffectCar",props:{edgeColor:{default:1118481},edgeWidth:{default:.03},dissolveSpeed:{default:.003},funRef:{appear:null,disappear:null}},async setup(e,{expose:t}){let o,s;const a=e,{scene:i,nodes:f,materials:g}=([o,s]=u(()=>n("https://opensource.cdn.icegl.cn/model/industry4/lambo.glb")),o=await o,s(),o);Object.values(f).forEach(e=>{e.isMesh&&(e.name.startsWith("glass")&&e.geometry.computeVertexNormals(),"silver_001_BreakDiscs_0"===e.name&&(e.material=g.BreakDiscs.clone(),e.material.color=new T("#ddd")))}),f.glass_003.scale.setScalar(2.7),g.FrameBlack.color=new T("black"),g.FrameBlack.roughness=0,g.FrameBlack.metalness=.75,g.Chrome.color=new T("#333"),g.Chrome.metalness=1,g.Chrome.roughness=0,g.BreakDiscs.color=new T("#555"),g.BreakDiscs.metalness=.2,g.BreakDiscs.roughness=.2,g.TiresGum.color=new T("#181818"),g.TiresGum.metalness=0,g.TiresGum.roughness=.4,g.GreyElements.color=new T("#292929"),g.GreyElements.metalness=0,f.yellow_WhiteCar_0.material=new S({roughness:.3,metalness:.05,color:"#111",envMapIntensity:.75,clearcoatRoughness:0,clearcoat:1});const v=([o,s]=u(()=>l(["./plugins/digitalCity/image/smokeparticle.png","./plugins/industry4/image/dissolve.jpg"])),o=await o,s(),o),h=[];let _=!1;const j={dissolveProgress:1,noiseTexture:v[0],edgeColorTexture:v[1]};let x=a.dissolveSpeed;const y=()=>{if(!_){_=!0,x=a.dissolveSpeed;for(const e of h)e.uniforms.dissolveSpeed={value:x},e.uniforms.dissolveProgress={value:0}}},C=()=>{if(!_){_=!0,x=-a.dissolveSpeed;for(const e of h)e.uniforms.dissolveSpeed={value:x},e.uniforms.dissolveProgress={value:1}}};a.funRef.appear=y,a.funRef.disappear=C,t({appear:y,disappear:C}),Object.values(f).forEach(e=>{if(e.isMesh){e.frustumCulled=!1;const t=e.material;t.transparent=!0,t.onBeforeCompile=e=>{h.push(e),e.uniforms.edgeColor={value:new T(a.edgeColor)},e.uniforms.edgeWidth={value:a.edgeWidth},e.uniforms.dissolveSpeed={value:a.dissolveSpeed},e.uniforms.dissolveProgress={value:j.dissolveProgress},e.uniforms.noiseTexture={value:j.noiseTexture},e.uniforms.edgeColorTexture={value:j.edgeColorTexture},e.vertexShader=e.vertexShader.replace("#include <common>",["varying vec2 xUv;","#include <common>"].join("\n")),e.vertexShader=e.vertexShader.replace("#include <uv_vertex>",["xUv = uv;","#include <uv_vertex>"].join("\n")),e.fragmentShader=e.fragmentShader.replace("#include <common>","#include <common>\n\t\t\t\t\t uniform float dissolveProgress;\n\t\t\t\t\t uniform float edgeWidth;\n\t\t\t\t\t uniform vec3 edgeColor;\n\t\t\t\t\t uniform sampler2D noiseTexture;\n\t\t\t\t\t uniform sampler2D edgeColorTexture;\n\t\t\t\t\t varying vec2 xUv;\n\t\t\t\t\t"),e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n\t\t\t\t\t\t\tfloat noiseValue = texture2D(noiseTexture, xUv).r;\n\t\t\t\t\t\t\tvec4 finalColor = texture2D(edgeColorTexture, xUv);\n\n\t\t\t\t\t\t\tvec3 mixedColor = mix(finalColor.rgb, edgeColor, 0.5);\n\t\t\t\t\t\t\tfinalColor.rgb = mixedColor;\n\n\t\t\t\t\t\t\t// vec4 finalColor = linearToOutputTexel( vec4(edgeColor, gl_FragColor.a) );\n\t\t\t\t\t\t\tfloat alpha = step(noiseValue - edgeWidth, dissolveProgress);\n\t\t\t\t\t\t\tgl_FragColor.a = alpha;\n\t\t\t\t\t\t\tfloat useOrigin = step(noiseValue, dissolveProgress);\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix(finalColor.rgb, gl_FragColor.rgb, useOrigin);")}}});const{onBeforeRender:M}=r();return M(()=>{if(_)for(const e of h){const{dissolveProgress:t,dissolveSpeed:o}=e.uniforms;t.value+=o.value,t.value<0&&(_=!1,a.funRef.aEnd()),t.value>1&&(_=!1,a.funRef.aEnd())}}),(e,t)=>(m(),p("primitive",{object:d(c(i)),scale:.015,rotation:[0,Math.PI/1.5,0]},null,8,E))}},D=["rotation"],G=["side"],F=["rotation"],O=["side"],W={__name:"otherObject",setup:e=>(e,t)=>(m(),p(j,null,[t[2]||(t[2]=f("TresPerspectiveCamera",{position:[0,10,15],fov:25,near:.1,far:1e4},null,-1)),g(c(a),{autoRotate:""}),t[3]||(t[3]=f("TresHemisphereLight",{intensity:.5},null,-1)),(m(),v(_,null,{default:h(()=>[g(c(k),{position:[0,-1.562,0],reflectivity:2.6,showGridHelper:!1,scale:1.5})]),_:1})),f("TresMesh",{scale:4,position:[3,-1.161,-1.5],rotation:[-Math.PI/2,0,Math.PI/2.5]},[t[0]||(t[0]=f("TresRingGeometry",{args:[.9,1,4,1]},null,-1)),f("TresMeshStandardMaterial",{color:"white",roughness:.75,side:w},null,8,G)],8,D),f("TresMesh",{scale:4,position:[-3,-1.161,-1],rotation:[-Math.PI/2,0,Math.PI/2.5]},[t[1]||(t[1]=f("TresRingGeometry",{args:[.9,1,3,1]},null,-1)),f("TresMeshStandardMaterial",{color:"white",roughness:.75,side:w},null,8,O)],8,F),(m(),v(_,null,{default:h(()=>[g(c(I),{resolution:512},{default:h(()=>[g(c(i),{intensity:2,position:[0,1,3],scale:[10,1,1]}),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-6],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-3],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,0],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,3],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,6],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,9],scale:[10,1,1]},null,8,["rotation-x"]),g(c(i),{intensity:2,"rotation-y":Math.PI/2,position:[-50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),g(c(i),{intensity:2,"rotation-y":-Math.PI/2,position:[50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),g(c(i),{form:"ring",color:"red",intensity:10,scale:2,position:[10,5,10]})]),_:1})]),_:1})),g(R)],64))},U=x({__name:"threedemo",setup(r){const a=y(!1);C(async()=>{console.log("onMounted"),await o(),await s(),a.value=!0,uni.getEnv?uni.getEnv(t=>{e.success(`当前环境：${JSON.stringify(t)}`)}):e.error("当前web浏览器访问无效，请使用小程序或者app访问该页面")});const i=M({clearColor:"#15151a",antialias:!1,logarithmicDepthBuffer:!0,renderMode:"manual"}),n=M({edgeColor:"#111111",edgeWidth:.03,dissolveSpeed:.003,funRef:{appear:null,disappear:null,aEnd:()=>{}}}),l=y(null),u=()=>{a.value&&(console.log("clickMesh"),uni.postMessage?(l.value.funRef.disappear(),uni.postMessage({data:{action:"三维页面发送了消息"}})):e.error("当前web浏览器访问无效，请使用小程序或者app访问该页面"))};return n.funRef.aEnd=()=>{console.log("aEnd"),uni.navigateBack()},(e,o)=>{const s=b("TresCanvas");return m(),p(j,null,[g(c(t)),g(s,P(i,{"window-size":""}),{default:h(()=>[(m(),v(_,null,{default:h(()=>[g(B,P(n,{ref_key:"dissolveEffectModelRef",ref:l,onClick:u}),null,16)]),_:1})),g(W)]),_:1},16),o[0]||(o[0]=f("h2",{class:"text-center text-white w-full absolute"},"双击车辆消失后回传信息且跳转",-1))],64)}}});export{U as default};
