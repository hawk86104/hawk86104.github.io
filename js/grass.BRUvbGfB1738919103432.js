import{_ as t,b as n,T as e,ai as o}from"./three.CYhYNU4g1738919103432.js";import{e as r,a,o as i,f as s}from"./@tresjs.G4idgyWs1738919103432.js";import"./index.Tl6UWGUB1738919103432.js";import{c}from"./simplex-noise.jB2HxhHB1738919103432.js";import{C as l}from"./index.7_Uppa3d1738919103432.js";import{d as u,a3 as f,o as p,H as h,N as m,u as v,r as d,f as g,g as x,j as y,aj as w,ak as b,al as _}from"./@vue.NRI7TcgI1738919103432.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.Qx7bNGDH1738919103432.js";import"./@vueuse.DL3Lluw_1738919103432.js";import"./lamina.-Hi3_nxd1738919103432.js";import"./glsl-tokenizer.ZqoRTdr91738919103432.js";import"./@amap.iZVXeXss1738919103432.js";import"./glsl-token-descope.cwdqTubc1738919103432.js";import"./glsl-token-depth.9AtZWCWO1738919103432.js";import"./glsl-token-scope.oxZabTH41738919103432.js";import"./glsl-token-properties.m37sYuni1738919103432.js";import"./glsl-token-assignments.8gT7dHI11738919103432.js";import"./glsl-token-string.3ye8FEyS1738919103432.js";import"./glsl-token-functions.Jxt8E2pH1738919103432.js";import"./object-hash.cGPAi-Zt1738919103432.js";import"./jszip.yUwr59ji1738919103432.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.4nmggsoS1738919103432.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.wDVQF-Mh1738919103432.js";import"./three-stdlib.YzLG7rkK1738919103432.js";import"./@pmndrs.Y-O4vSg11738919103432.js";import"./utils.ZCs9-BLD1738919103432.js";const j=R;!function(t,n){const e=R,o=k();for(;;)try{if(330476===-parseInt(e(331))/1+parseInt(e(319))/2*(-parseInt(e(313))/3)+parseInt(e(304))/4+parseInt(e(317))/5+-parseInt(e(283))/6*(parseInt(e(341))/7)+parseInt(e(335))/8+parseInt(e(354))/9)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const z=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[R(338)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){z(this,(function(){const t=R,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(311),"i"),o=P(t(310));n[t(314)](o+t(327))&&e[t(314)](o+t(346))?P():o("0")}))()}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[R(338)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();I(void 0,(function(){const t=R;let n;try{n=Function("return (function() "+t(295)+");")()}catch(r){n=window}const e=n[t(301)]=n.console||{},o=["log",t(288),"info",t(344),t(342),"table",t(285)];for(let a=0;a<o[t(312)];a++){const n=I[t(334)][t(309)].bind(I),r=o[a],i=e[r]||n;n[t(333)]=I.bind(I),n[t(282)]=i.toString.bind(i),e[r]=n}}))();const A=["material"],C=[j(336),j(298),j(284),j(323),j(296),j(286),j(328),j(294)],S=[j(322)],F=[j(348)];function k(){const t=["input","cos","side","value","map","while (true) {}","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","translate","7997589PvxhnB","action","toString","744NhjyIG","attributes-uv","trace","attributes-stretch","InstancedBufferAttribute","warn","position","gger","convertSRGBToLinear","debu","halfRootAngleCosF32","attributes-halfRootAngleCos",'{}.constructor("return this")( )',"attributes-orientation","TresMesh","attributes-position","joints","push","console","grass","offsetsF32","579320SzODxf","Vector4","width","stretchesF32","set","prototype","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","60TIqNMx","test","array","sin","2829810FQDXql","counter","21202TaVwLb","DoubleSide","#000f00","geometry","attributes-offset","TresMeshStandardMaterial","Color","normalize","chain","attributes-halfRootAngleSin","random","TresGroup","652126aJlDce","toneMapped","__proto__","constructor","271368mOpKKE","index","uniforms","apply","Vector3","attributes","24766AKqzqJ","exception","PlaneGeometry","error","time"];return(k=function(){return t})()}function R(t,n){const e=k();return(R=function(t,n){return e[t-=281]})(t,n)}const D=u({__name:j(302),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(o){const i=j;let s,u;const d=([s,u]=f((()=>a({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),s=await s,u(),s),g=o,x=c(Math[i(329)]);function y(n,e){const o=i,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,s=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,c=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(305)])(r,a,s,c)}function w(t,n){var e=2*x(t/50,n/50);return e+=4*x(t/100,n/100),e+=.2*x(t/10,n/10)}const b=function(o,r){const a=i,s=[],c=[],l=[],u=[],f=[];let p=new(t[a(305)]),h=new(t[a(305)]);const m=-.25;for(let e=0;e<o;e++){const i=Math.random()*r-r/2,v=Math.random()*r-r/2,d=w(i,v);s[a(300)](i,d,v);let g=Math.PI-Math[a(329)]()*(2*Math.PI);u.push(Math.sin(.5*g)),f[a(300)](Math[a(347)](.5*g));let x=new(t[a(339)])(0,1,0),b=x.x*Math[a(316)](g/2),_=x.y*Math[a(316)](g/2),M=x.z*Math[a(316)](g/2),j=Math.cos(g/2);p[a(308)](b,_,M,j).normalize(),g=.5*Math.random()+m,x=new n(1,0,0),b=x.x*Math[a(316)](g/2),_=x.y*Math[a(316)](g/2),M=x.z*Math[a(316)](g/2),j=Math[a(347)](g/2),h[a(308)](b,_,M,j)[a(326)](),p=y(p,h),g=.5*Math[a(329)]()+m,x=new(t[a(339)])(0,0,1),b=x.x*Math[a(316)](g/2),_=x.y*Math.sin(g/2),M=x.z*Math[a(316)](g/2),j=Math[a(347)](g/2),h.set(b,_,M,j).normalize(),p=y(p,h),c[a(300)](p.x,p.y,p.z,p.w),e<o/3?l[a(300)](1.8*Math[a(329)]()):l.push(Math.random())}return{offsetsF32:new e(new Float32Array(s),3),orientationsF32:new(t[a(287)])(new Float32Array(c),4),stretchesF32:new(t[a(287)])(new Float32Array(l),1),halfRootAngleCosF32:new e(new Float32Array(f),1),halfRootAngleSinF32:new e(new Float32Array(u),1)}}(g.instances,g[i(306)]),_=new(t[i(343)])(g.bW,g.bH,1,g[i(299)])[i(353)](0,g.bH/2,0),M=new(t[i(343)])(g[i(306)],g[i(306)],32,32);M.lookAt(new n(0,1,0));const z=M[i(340)][i(289)];for(let t=0;t<z.array[i(312)];t+=3)z.array[t+1]=w(z[i(315)][t],z[i(315)][t+2]);M[i(340)][i(289)].needsUpdate=!0,M.computeVertexNormals();const I=new(l({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[i(325)])(.3,.9,0).convertSRGBToLinear(),bottomColor:new(t[i(325)])(0,.2,0)[i(291)]()},i(352),"\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=i;n[e(348)]=t[e(320)]})));I[i(350)]=d.map,I.alphaMap=d.alphaMap,I[i(332)]=!1;const{onLoop:k}=r();return k((({elapsed:t})=>{const n=i;I[n(337)][n(345)][n(349)]=t/4})),(n,e)=>{const o=i;return p(),h(o(330),null,[m(o(297),{material:v(I)},[m("TresInstancedBufferGeometry",{index:v(_)[o(336)],"attributes-position":v(_)[o(340)][o(289)],"attributes-uv":v(_).attributes.uv,"attributes-offset":v(b)[o(303)],"attributes-orientation":v(b).orientationsF32,"attributes-stretch":v(b)[o(307)],"attributes-halfRootAngleSin":v(b).halfRootAngleSinF32,"attributes-halfRootAngleCos":v(b)[o(293)]},null,8,C)],8,A),m(o(297),{position:[0,0,0],geometry:v(M)},[m(o(324),{color:o(321),side:t[o(320)]},null,8,F)],8,S)])}}});function P(t){function n(t){const e=R;if("string"==typeof t)return function(t){}[e(334)](e(351)).apply(e(318));1!==(""+t/t)[e(312)]||t%20==0?function(){return!0}.constructor(e(292)+e(290)).call(e(281)):function(){return!1}[e(334)](e(292)+e(290))[e(338)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}function T(t,n){const e=L();return(T=function(t,n){return e[t-=163]})(t,n)}!function(t,n){const e=T,o=L();for(;;)try{if(623288===-parseInt(e(177))/1+parseInt(e(174))/2*(parseInt(e(180))/3)+-parseInt(e(164))/4*(parseInt(e(172))/5)+parseInt(e(191))/6*(-parseInt(e(200))/7)+-parseInt(e(163))/8+-parseInt(e(195))/9*(parseInt(e(184))/10)+parseInt(e(178))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const B=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){B(this,(function(){const t=T,n=new RegExp(t(168)),e=new RegExp(t(186),"i"),o=q(t(183));n[t(165)](o+t(189))&&e[t(165)](o+t(190))?q():o("0")}))()}();const E=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function L(){const t=["exception","while (true) {}","stateObject","console","7PyMkRK","string","debu","8039584PBhokp","4nBuEtP","test","__proto__","gger","function *\\( *\\)","TresPerspectiveCamera","length","bind","1207465PcxKTL","toString","554458qwyavS","prototype","apply","847151PsFElc","49074003ixLYjd","error","3PwIQBl","warn","info","init","3903730GZZaFu","log","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","table","constructor","chain","input","5103018nyTgIw","call","counter","return (function() ","27nHFaMe"];return(L=function(){return t})()}E(void 0,(function(){const t=T;let n;try{n=Function(t(194)+'{}.constructor("return this")( ));')()}catch(r){n=window}const e=n[t(199)]=n.console||{},o=[t(185),t(181),t(182),t(179),t(196),t(187),"trace"];for(let a=0;a<o[t(170)];a++){const n=E.constructor[t(175)].bind(E),r=o[a],i=e[r]||n;n[t(166)]=E[t(171)](E),n[t(173)]=i[t(173)][t(171)](i),e[r]=n}}))();const O=u({__name:"grass",setup(t){const n=d({alpha:!0,toneMapping:o,windowSize:!0,clearColor:6710886}),e=d({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=T;return p(),g(v(s),w(b(n)),{default:x((()=>[o[0]||(o[0]=m(r(169),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),y(v(i),w(b(e)),null,16),(p(),g(_,null,{default:x((()=>[y(D)])),_:1})),(p(),g(_,null,{default:x((()=>[y(v(M),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16)}}});function q(t){function n(t){const e=T;if(typeof t===e(201))return function(t){}[e(188)](e(197))[e(176)](e(193));1!==(""+t/t)[e(170)]||t%20==0?function(){return!0}[e(188)]("debu"+e(167))[e(192)]("action"):function(){return!1}[e(188)](e(202)+e(167)).apply(e(198)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{O as default};
