import{bU as n,ak as t,am as o,C as e,az as a,a as r}from"./three.3b9CEYeV1731055558423.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.KsuCtVXf1731055558423.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as P,F as C}from"./@vue.u2cBPEWn1731055558423.js";import"./@vueuse.GLWi_e1b1731055558423.js";function y(n,t){const o=S();return(y=function(n,t){return o[n-=443]})(n,t)}const x=y;!function(n,t){const o=y,e=S();for(;;)try{if(642654===parseInt(o(481))/1+-parseInt(o(446))/2*(parseInt(o(470))/3)+-parseInt(o(472))/4+parseInt(o(450))/5+-parseInt(o(471))/6*(-parseInt(o(490))/7)+-parseInt(o(492))/8*(parseInt(o(499))/9)+-parseInt(o(487))/10)break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[y(485)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){z(this,(function(){const n=y,t=new RegExp(n(462)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=j("init");t[n(500)](e+n(452))&&o[n(500)](e+n(482))?j():e("0")}))()}();const F=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[y(485)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function S(){const n=["24984HCITtM","test","constructor","a-randomness","setAttribute","debu","uniforms","geometry","keys","toString","log","action","124qlGSFb","lerp","#b5f28d","galaxy","4471830NatkkP","TresPoints","chain","exception","trace","error","radius","stateObject","insideColor","sin","prototype","value","function *\\( *\\)","outsideColor","bind","material","size","console","randomnessPower","clone","11772fvyswx","6970746LnFrkl","1086720DmqvpU","random","#1b3984","TresCanvas","TresShaderMaterial","while (true) {}","warn","cos","aScale","1054435ftAbmE","input","branches","TresPerspectiveCamera","apply","info","11257220hIQjwl","count","length","7PBaFgV","string","2384YGqRMi","uTime","forEach","counter","color","black","position"];return(S=function(){return n})()}F(void 0,(function(){const n=y;let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(a){t=window}const o=t[n(467)]=t[n(467)]||{},e=[n(444),n(478),n(486),n(455),n(453),"table",n(454)];for(let r=0;r<e[n(489)];r++){const t=F[n(501)][n(460)].bind(F),a=e[r],s=o[a]||t;t.__proto__=F[n(464)](F),t[n(443)]=s[n(443)].bind(s),o[a]=t}}))();const T=[x(498),"a-scale",x(496),x(502)],_=u({__name:x(449),setup(u){const y=x,z={clearColor:y(497),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},F={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:"#1b3984"},S=new e(F[y(458)]),_=new e(F.outsideColor),j=new Float32Array(3*F.count),I=new Float32Array(3*F[y(488)]),A=new Float32Array(F.count),k=new Float32Array(3*F[y(488)]);for(let n=0;n<F[y(488)];n++){const t=3*n,o=Math[y(473)]()*F.radius,e=n%F[y(483)]*Math.PI*2/F[y(483)];j[t]=Math[y(479)](e)*o,j[t+1]=0,j[t+2]=Math.sin(e)*o;const a=Math.random()**F[y(468)]*(Math.random()<.5?-1:1),r=Math.random()**F[y(468)]*(Math.random()<.5?-1:1),s=Math[y(473)]()**F[y(468)]*(Math[y(473)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=S.clone();i[y(447)](_,o/F[y(456)]),I[t+0]=i.r,I[t+1]=i.g,I[t+2]=i.b,A[n]=Math[y(473)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:F[y(466)]}}};const E=d(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=y;E[t(461)]&&(E[t(461)][t(465)][t(505)][t(493)][t(461)]=n)}));const{count:q,size:G,radius:U,branches:B,spin:D,randomness:L,randomnessPower:Z,insideColor:$,outsideColor:H}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:y(448),outsideColor:y(474)});return f([q[y(461)],G[y(461)],U[y(461)],B[y(461)],D[y(461)],L[y(461)],Z[y(461)],$.value,H[y(461)]],(n=>{const t=y;n[t(494)](((n,o)=>{F[Object[t(507)](F)[o]]=n.value})),function(){const n=y;if(E[n(461)]){const t=new e(F[n(458)]),o=new e(F[n(463)]),a=new Float32Array(3*F[n(488)]),s=new Float32Array(3*F[n(488)]),i=new Float32Array(F[n(488)]),c=new Float32Array(3*F[n(488)]);for(let e=0;e<F[n(488)];e++){const r=3*e,l=Math[n(473)]()*F[n(456)],u=e%F[n(483)]*Math.PI*2/F[n(483)];a[r]=Math.cos(u)*l,a[r+1]=0,a[r+2]=Math[n(459)](u)*l;const d=Math[n(473)]()**F[n(468)]*(Math.random()<.5?-1:1),f=Math[n(473)]()**F.randomnessPower*(Math.random()<.5?-1:1),m=Math[n(473)]()**F[n(468)]*(Math[n(473)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=t[n(469)]();p[n(447)](o,l/F[n(456)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[e]=Math[n(473)]()}E[n(461)][n(506)][n(503)]("position",new r(a,3)),E.value.geometry[n(503)]("aRandomness",new r(c,3)),E[n(461)][n(506)][n(503)]("color",new r(s,3)),E[n(461)][n(506)][n(503)](n(480),new r(i,1))}}()})),(n,t)=>{const o=y,e=m(o(475));return p(),h(C,null,[v(g(c)),v(e,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(o(484),{position:[3,3,3]},null,-1)),M(o(451),{ref_key:"bufferRef",ref:E},[M("TresBufferGeometry",{position:[g(j),3],"a-scale":[g(A),1],color:[g(I),3],"a-randomness":[g(k),3]},null,8,T),M(o(476),b(P(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function j(n){function t(n){const o=y;if(typeof n===o(491))return function(n){}[o(501)](o(477))[o(485)](o(495));1!==(""+n/n).length||n%20==0?function(){return!0}[o(501)](o(504)+"gger").call(o(445)):function(){return!1}.constructor("debugger")[o(485)](o(457)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{_ as default};
