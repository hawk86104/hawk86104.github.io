import{cf as e,N as o,_ as s,ce as a}from"./three.QlBabAUP1756974009013.js";import{a as t}from"./@tresjs.C2b5OFct1756974009013.js";import{P as i}from"./tweakpane.C0HtAJSg1756974009013.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.UTeeVzzi1756974009013.js";import"./@fesjs.BxH8SrKG1756974009013.js";import"./Resource.4TZoJXSw1756974009013.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.DAZLKS8p1756974009013.js";import"./three-mesh-ui.module.X-zv67du1756974009013.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1756974009013.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.BceFoDcw1756974009013.js";import{_ as d,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.A4zfnIlq1756974009013.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as x,m as C,a5 as T,F as k}from"./@vue.pEDXJ_3Z1756974009013.js";import"./postprocessing.DuMTjsTx1756974009013.js";import"./@vueuse.BbWOQEYU1756974009013.js";import"./vue-router.BzNOprYp1756974009013.js";import"./lodash-es.C7pWAXPe1756974009013.js";import"./pinia.Cod4x9ah1756974009013.js";import"./@qlin.q6OWdsQV1756974009013.js";import"./@babel.BPq7uOAK1756974009013.js";import"./@floating-ui.BFjFSAYt1756974009013.js";import"./@juggle.CcBCnTIR1756974009013.js";import"./starLoading.CCDsOIMV1756974009013.js";import"./utils.DQlYPiF-1756974009013.js";import"./cssLoaders.CVXTOH_q1756974009013.js";import"./bubbleLoading.Byet4Q9Q1756974009013.js";import"./yangyangLoading.CIcdji0M1756974009013.js";const P={position:[0,120,0]},S=u({__name:"digitalBrainFloor",async setup(u){let S,M;const R=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),z=c({color:"#fff",show:!0,opacity:1}),G=new i({title:"参数"});G.addBinding(z,"show",{label:"点云显示"}),G.addBinding(z,"color",{label:"点云颜色"}),G.addBinding(z,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const I=c({color:"#84ccff",show:!0,opacity:1});G.addBinding(I,"show",{label:"脑轮廓显示"}),G.addBinding(I,"color",{label:"脑轮廓颜色"}),G.addBinding(I,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const F=c({color:"#9e00af",show:!0,opacity:1});G.addBinding(F,"show",{label:"脑组织显示"}),G.addBinding(F,"color",{label:"脑组织颜色"}),G.addBinding(F,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const J=new e,q=([S,M]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",J))),S=await S,M(),S),A=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:o}),E=c({autoRotate:!0,autoRotateSpeed:2});return(e,o)=>{const s=j("TresCanvas");return g(),f(k,null,[y(h(l)),y(s,C(A,{"window-size":""}),{default:b((()=>[o[0]||(o[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(E)),null,16),o[1]||(o[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[z.show?(g(),L(p,C({key:0,model:h(q)},z),null,16,["model"])):x("",!0),(g(),L(T,null,{default:b((()=>[I.show?(g(),L(d,C({key:0,model:h(q)},I),null,16,["model"])):x("",!0)])),_:1})),F.show?(g(),L(m,C({key:1,model:h(q)},F),null,16,["model"])):x("",!0)]),y(r,w(B(R)),null,16)])),_:1},16)],64)}}});export{S as default};
