import{t,_ as n,V as e,T as o,a0 as r,ai as a}from"./three.wKRaqyB-1731462043013.js";import{e as i,b as s,U as c,c as l}from"./@tresjs.xlnLF3O61731462043013.js";import"./index.E58ed_Zs1731462043013.js";import{a as u}from"./simplex-noise.Yx8GBgKo1731462043013.js";import{C as f}from"./index.R1BN6iSd1731462043013.js";import{d as p,a6 as h,o as m,D as v,J as d,u as g,r as x,f as y,g as w,j as b,aj as _,ak as M,al as j}from"./@vue.-THQH3GC1731462043013.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.emhtNyGB1731462043013.js";import"./@vueuse.W4jVx8WA1731462043013.js";import"./lamina.wrlcgPkQ1731462043013.js";import"./glsl-tokenizer.2BUg_J5E1731462043013.js";import"./@amap.r7GlLHCm1731462043013.js";import"./glsl-token-descope.aoelumhQ1731462043013.js";import"./glsl-token-depth.icA2z6eP1731462043013.js";import"./glsl-token-scope.bZYO9n711731462043013.js";import"./glsl-token-properties.5VfudyLF1731462043013.js";import"./glsl-token-assignments.uxHWZVx51731462043013.js";import"./glsl-token-string.RiXGNF3M1731462043013.js";import"./glsl-token-functions.Jbefd7eV1731462043013.js";import"./object-hash.BCTgntsx1731462043013.js";import"./jszip.9e6IwfI51731462043013.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.n06oaMNB1731462043013.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.TPyGa8jm1731462043013.js";import"./three-stdlib.1CDoKLj-1731462043013.js";import"./@pmndrs.A7R_S0Qe1731462043013.js";import"./utils.tgeahyNa1731462043013.js";const I=T;!function(t,n){const e=T,o=k();for(;;)try{if(316411===parseInt(e(415))/1+parseInt(e(486))/2+-parseInt(e(487))/3*(parseInt(e(425))/4)+parseInt(e(483))/5*(parseInt(e(424))/6)+-parseInt(e(408))/7+-parseInt(e(485))/8*(parseInt(e(434))/9)+-parseInt(e(477))/10*(-parseInt(e(481))/11))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){A(this,(function(){const t=T,n=new RegExp(t(449)),e=new RegExp(t(426),"i"),o=O(t(456));n[t(432)](o+"chain")&&e.test(o+t(419))?O():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[T(421)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();C(void 0,(function(){const t=T;let n;try{n=Function(t(461)+'{}.constructor("return this")( ));')()}catch(r){n=window}const e=n[t(472)]=n[t(472)]||{},o=[t(404),"warn",t(451),t(405),t(475),t(430),t(418)];for(let a=0;a<o[t(448)];a++){const n=C.constructor[t(468)][t(462)](C),r=o[a],i=e[r]||n;n.__proto__=C[t(462)](C),n[t(450)]=i[t(450)][t(462)](i),e[r]=n}}))();const D=["material"],R=[I(427),"attributes-position",I(438),I(465),I(437),I(460),I(444),I(469)],S=["geometry"],E=[I(458)];function k(){const t=["TresGroup","prototype","attributes-halfRootAngleCos","value","translate","console","TresInstancedBufferGeometry","string","exception","width","260KeITon","Vector4","offsetsF32","while (true) {}","257873tDuugG","set","841695PSdZGu","call","8qWgISF","279376EJvoWC","1262271UUxxuE","log","error","random","stretchesF32","3089338EfuDuT","TresMeshStandardMaterial","PlaneGeometry","DoubleSide","action","halfRootAngleSinF32","alphaMap","439093oRqCyE","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","Vector3","trace","input","constructor","apply","time","computeVertexNormals","18YLoIOz","4DWuswR","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","index","needsUpdate","halfRootAngleCosF32","table","stateObject","test","InstancedBufferAttribute","4633326emTrsA","cos","push","attributes-orientation","attributes-uv","convertSRGBToLinear","sin","joints","Color","grass","attributes-halfRootAngleSin","normalize","map","array","length","function *\\( *\\)","toString","info","instances","gger","orientationsF32","#000f00","init","TresMesh","side","position","attributes-stretch","return (function() ","bind","attributes","debu","attributes-offset","toneMapped"];return(k=function(){return t})()}const F=p({__name:I(443),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=I;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),y=a,w=u(Math[c(406)]);function b(t,e){const o=c,r=t.x*e.w+t.y*e.z-t.z*e.y+t.w*e.x,a=-t.x*e.z+t.y*e.w+t.z*e.x+t.w*e.y,i=t.x*e.y-t.y*e.x+t.z*e.w+t.w*e.z,s=-t.x*e.x-t.y*e.y-t.z*e.z+t.w*e.w;return new(n[o(478)])(r,a,i,s)}function _(t,n){var e=2*w(t/50,n/50);return e+=4*w(t/100,n/100),e+=.2*w(t/10,n/10)}const M=function(t,e){const r=c,a=[],i=[],s=[],l=[],u=[];let f=new(n[r(478)]),p=new(n[r(478)]);const h=-.25;for(let o=0;o<t;o++){const c=Math[r(406)]()*e-e/2,m=Math[r(406)]()*e-e/2,v=_(c,m);a[r(436)](c,v,m);let d=Math.PI-Math[r(406)]()*(2*Math.PI);l[r(436)](Math[r(440)](.5*d)),u.push(Math.cos(.5*d));let g=new(n[r(417)])(0,1,0),x=g.x*Math[r(440)](d/2),y=g.y*Math[r(440)](d/2),w=g.z*Math[r(440)](d/2),M=Math[r(435)](d/2);f[r(482)](x,y,w,M)[r(445)](),d=.5*Math[r(406)]()+h,g=new(n[r(417)])(1,0,0),x=g.x*Math.sin(d/2),y=g.y*Math[r(440)](d/2),w=g.z*Math[r(440)](d/2),M=Math[r(435)](d/2),p[r(482)](x,y,w,M)[r(445)](),f=b(f,p),d=.5*Math[r(406)]()+h,g=new(n[r(417)])(0,0,1),x=g.x*Math[r(440)](d/2),y=g.y*Math[r(440)](d/2),w=g.z*Math[r(440)](d/2),M=Math[r(435)](d/2),p[r(482)](x,y,w,M).normalize(),f=b(f,p),i[r(436)](f.x,f.y,f.z,f.w),o<t/3?s[r(436)](1.8*Math[r(406)]()):s[r(436)](Math[r(406)]())}return{offsetsF32:new(n[r(433)])(new Float32Array(a),3),orientationsF32:new o(new Float32Array(i),4),stretchesF32:new(n[r(433)])(new Float32Array(s),1),halfRootAngleCosF32:new o(new Float32Array(u),1),halfRootAngleSinF32:new(n[r(433)])(new Float32Array(l),1)}}(y[c(452)],y[c(476)]),j=new t(y.bW,y.bH,1,y[c(441)])[c(471)](0,y.bH/2,0),z=new(n[c(410)])(y[c(476)],y[c(476)],32,32);z.lookAt(new e(0,1,0));const A=z[c(463)][c(459)];for(let t=0;t<A[c(447)][c(448)];t+=3)A.array[t+1]=_(A.array[t],A.array[t+2]);z[c(463)][c(459)][c(428)]=!0,z[c(423)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(n[c(442)])(.3,.9,0)[c(439)](),bottomColor:new(n[c(442)])(0,.2,0)[c(439)]()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }",c(416),(t=>{t[c(458)]=r})));C[c(446)]=x.map,C.alphaMap=x[c(414)],C[c(466)]=!1;const{onLoop:k}=i();return k((({elapsed:t})=>{const n=c;C.uniforms[n(422)][n(470)]=t/4})),(t,e)=>{const o=c;return m(),v(o(467),null,[d(o(457),{material:g(C)},[d(o(473),{index:g(j)[o(427)],"attributes-position":g(j)[o(463)][o(459)],"attributes-uv":g(j)[o(463)].uv,"attributes-offset":g(M)[o(479)],"attributes-orientation":g(M)[o(454)],"attributes-stretch":g(M)[o(407)],"attributes-halfRootAngleSin":g(M)[o(413)],"attributes-halfRootAngleCos":g(M)[o(429)]},null,8,R)],8,D),d(o(457),{position:[0,0,0],geometry:g(z)},[d(o(409),{color:o(455),side:n[o(411)]},null,8,E)],8,S)])}}});function T(t,n){const e=k();return(T=function(t,n){return e[t-=404]})(t,n)}function O(t){function n(t){const e=T;if(typeof t===e(474))return function(t){}[e(420)](e(480))[e(421)]("counter");1!==(""+t/t)[e(448)]||t%20==0?function(){return!0}[e(420)](e(464)+e(453))[e(484)](e(412)):function(){return!1}[e(420)]("debu"+e(453)).apply(e(431)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const P=U;!function(t,n){const e=U,o=B();for(;;)try{if(784914===parseInt(e(140))/1*(-parseInt(e(143))/2)+-parseInt(e(131))/3*(parseInt(e(137))/4)+-parseInt(e(144))/5+-parseInt(e(125))/6*(-parseInt(e(129))/7)+-parseInt(e(152))/8+parseInt(e(128))/9+-parseInt(e(139))/10*(-parseInt(e(157))/11))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[U(159)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){H(this,(function(){const t=U,n=new RegExp(t(155)),e=new RegExp(t(149),"i"),o=q(t(127));n[t(148)](o+"chain")&&e[t(148)](o+"input")?q():o("0")}))()}();const L=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[U(159)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function U(t,n){const e=B();return(U=function(t,n){return e[t-=121]})(t,n)}function B(){const t=["log","call","8759176bDUfcp","return (function() ","exception","function *\\( *\\)",'{}.constructor("return this")( )',"3113PNyLxE","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","apply","prototype","warn","stateObject","__proto__","12PlpiEH","bind","init","9303201IAKiji","4992484dOeQeO","debu","622398fMPmQZ","console","length","action","TresPerspectiveCamera","string","4LHeEMd","grass","62770anKDsx","91557jCBMVG","toString","table","22UOzxCE","5710500RxdiXd","constructor","trace","gger","test","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(B=function(){return t})()}L(void 0,(function(){const t=U,n=function(){const t=U;let n;try{n=Function(t(153)+t(156)+");")()}catch(e){n=window}return n}(),e=n[t(132)]=n[t(132)]||{},o=[t(150),t(122),"info","error",t(154),t(142),t(146)];for(let r=0;r<o[t(133)];r++){const n=L[t(145)][t(121)][t(126)](L),a=o[r],i=e[a]||n;n[t(124)]=L.bind(L),n[t(141)]=i[t(141)].bind(i),e[a]=n}}))();const G=p({__name:P(138),setup(t){const n=x({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=U;return m(),y(g(l),_(M(n)),{default:w((()=>[o[0]||(o[0]=d(r(135),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),b(g(c),_(M(e)),null,16),(m(),y(j,null,{default:w((()=>[b(F)])),_:1})),(m(),y(j,null,{default:w((()=>[b(g(z),{texture:r(158)})])),_:1}))])),_:1},16)}}});function q(t){function n(t){const e=U;if(typeof t===e(136))return function(t){}[e(145)]("while (true) {}").apply("counter");1!==(""+t/t)[e(133)]||t%20==0?function(){return!0}.constructor(e(130)+"gger")[e(151)](e(134)):function(){return!1}[e(145)](e(130)+e(147))[e(159)](e(123)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{G as default};
