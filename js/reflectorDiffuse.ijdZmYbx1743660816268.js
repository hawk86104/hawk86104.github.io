import{a as e,o as r,A as a,E as o}from"./@tresjs.zc7faK4J1743660816268.js";import{P as s}from"./tweakpane.ivGeiIdz1743660816268.js";import{ce as t,ae as l,C as i,V as n}from"./three.2wx8FU0g1743660816268.js";import{R as u}from"./all.three.q3DPAGr01743660816268.js";import{m as f,a as p}from"./reflectorDiffuse.5zy0dW_U1743660816268.js";import{d as m,b as c,a4 as d,a2 as g,o as h,H as v,N as j,m as w,u as M,r as _,e as b,f as x,g as T,j as y,P as k,al as G,aj as S,ak as B}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";import"./oimophysics.WhCxc1Ho1743660816268.js";const R=["rotation-x"],C=["object","visible"],D=m({__name:"reflectorDiffuse",props:{mirror:{default:1},mixStrength:{default:10},showGridHelper:{type:Boolean,default:!0},color:{default:"#ffffff"}},async setup(r){let a,o;const s=r,m=new t(9.5,10),_=c(),b=c(),x=c(),T=new u,y={mirror:{value:s.mirror},mixStrength:{value:s.mixStrength}},k=([a,o]=d((()=>e(["./plugins/floor/image/polished_concrete_basecolor.jpg","./plugins/floor/image/polished_concrete_normal.jpg","./plugins/floor/image/polished_concrete_orm.jpg"]))),a=await a,o(),a);for(var G=0;G<3;G++)k[G].wrapS=l,k[G].wrapT=l,k[G].repeat.set(16,16);const S={color:new i("#444"),metalness:1,roughness:1,map:k[0],metalnessMap:k[2],roughnessMap:k[2],aoMap:k[2],aoMapIntensity:1,normalMap:k[1],normalScale:new n(3,3)},B=e=>{e.uniforms.reflectMap=T.renderTargetUniform,e.uniforms.textureMatrix=T.textureMatrixUniform,e.uniforms=Object.assign(e.uniforms,y),f(e),p(e)};return g((()=>{_.value&&(_.value.attributes.uv1=_.value.attributes.uv),x.value&&(x.value.aoMap.channel=1,x.value.onBeforeCompile=B),b.value&&(b.value.add(T),b.value.onBeforeRender=(e,r,a)=>{T.update(e,r,a)}),s.color&&x.value&&(x.value.color=new i(s.color))})),(e,r)=>(h(),v("TresGroup",null,[j("TresMesh",{ref_key:"tmRef",ref:b,"rotation-x":-Math.PI/2,"position-y":-.1},[j("TresPlaneGeometry",{ref_key:"tpgRef",ref:_,args:[10,10]},null,512),j("TresMeshStandardMaterial",w({ref_key:"tmsmRef",ref:x},S),null,16)],8,R),j("primitive",{object:M(m),visible:e.showGridHelper},null,8,C)]))}}),H={position:[0,8,0],intensity:10,color:"#fff"},P=m({__name:"reflectorDiffuse",setup(e){const t=_({mirror:.9,mixStrength:9,showGridHelper:!0,color:"#69a5c2"}),l=new s({title:"镜面参数",expanded:!0});return l.addBinding(t,"color",{label:"镜面颜色"}),l.addBinding(t,"showGridHelper",{label:"显示网格"}),(e,s)=>{const l=b("TresCanvas");return h(),x(l,{clearColor:"#201919","window-size":""},{default:T((()=>[s[0]||(s[0]=j("TresPerspectiveCamera",{position:[-15,15,-15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(M(r),{enableDamping:""}),s[1]||(s[1]=j("TresAmbientLight",{intensity:10},null,-1)),k(j("TresDirectionalLight",H,null,512),[[M(a)]]),y(M(o),{args:[1,1,1],color:"orange",position:[3,1,0]}),s[2]||(s[2]=j("TresMesh",{position:[0,2,4]},[j("TresBoxGeometry",{args:[1,1,1]}),j("TresMeshNormalMaterial")],-1)),(h(),x(G,null,{default:T((()=>[y(D,S(B(t)),null,16)])),_:1}))])),_:1})}}});export{P as default};
