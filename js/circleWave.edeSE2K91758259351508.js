import{e as a,b as e,a as n}from"./@tresjs.CywMBpUh1758259351508.js";import{P as o}from"./tweakpane.C0HtAJSg1758259351508.js";import{_ as t}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.DxOxDTXj1758259351508.js";import{d as r,b as s,aa as l,r as i,a2 as c,G as u,o as v,I as m,a7 as f,a8 as d,h as p,e as g,f as k,j as S,u as w,a5 as h,m as C}from"./@vue.pEDXJ_3Z1758259351508.js";import{aP as _,C as y,bV as M,a3 as j}from"./three.CtgP63ME1758259351508.js";import"./postprocessing.DJgHFhS91758259351508.js";import"./@vueuse.C5HLo59K1758259351508.js";import"./dither.glsl.tNAdkJUa1758259351508.js";import"./Reflector.B9L45tzA1758259351508.js";import"./OimoPhysicsBuffer.ChpcdjlT1758259351508.js";import"./oimophysics.BBtHVm4j1758259351508.js";import"./vite-plugin-qiankun.B06WoCqG1758259351508.js";const x=["rotation-x","scale"],P=r({__name:"shaderCircleWave",props:{color:{default:"#ffffff"},colorDark:{default:"#000000"},speed:{default:1},scale:{default:2}},async setup(n){let o,t;const r=n,p=s(),{onLoop:g}=a();g((({delta:a})=>{p.value&&(p.value.material.uniforms.uTime.value+=a*r.speed)}));const k=([o,t]=l((()=>e(["./plugins/floor/image/scan.png"]))),o=await o,t(),o);k.wrapS=_,k.wrapT=_;const S=i({side:j,transparent:!0,blending:M,flatShading:!0,depthTest:!1,uniforms:{uTime:{type:"f",value:0},uScanTex:{type:"t",value:k},uScanColor:{type:"v3",value:new y(r.color)},uScanColorDark:{type:"v3",value:new y(r.colorDark)}},vertexShader:"\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvoid main(){\n\tvUv=uv;\n\tvPosition=position;\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}\n",fragmentShader:"\n#define uScanOrigin vec3(0.,0.,0.)\n#define uScanWaveRatio1 3.2\n#define uScanWaveRatio2 2.8\n\nuniform float uTime;\nuniform sampler2D uScanTex;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nuniform vec3 uScanColor;\nuniform vec3 uScanColorDark;\n\nfloat circleWave(vec3 p,vec3 origin,float distRatio){\n    float t=uTime;\n    float dist=distance(p,origin)*distRatio;\n    float radialMove=fract(dist-t);\n    float fadeOutMask=1.-smoothstep(1.,3.,dist);\n    radialMove*=fadeOutMask;\n    float cutInitialMask=1.-step(t,dist);\n    radialMove*=cutInitialMask;\n    return radialMove;\n}\n\nvec3 getScanColor(vec3 worldPos,vec2 uv,vec3 col){\n    // mask\n    float scanMask=texture(uScanTex,uv).r;\n    // waves\n    float cw=circleWave(worldPos,uScanOrigin,uScanWaveRatio1);\n    float cw2=circleWave(worldPos,uScanOrigin,uScanWaveRatio2);\n    // scan\n    float mask1=smoothstep(.3,0.,1.-cw);\n    mask1*=(1.+scanMask*.7);\n    \n    float mask2=smoothstep(.07,0.,1.-cw2)*.8;\n    mask1+=mask2;\n    \n    float mask3=smoothstep(.09,0.,1.-cw)*1.5;\n    mask1+=mask3;\n\n    // color\n    vec3 scanCol=mix(uScanColorDark,uScanColor,mask1);\n    col=mix(col,scanCol,mask1);\n    \n    return col;\n\t\t// return vec3(cw);\n\t\t// return vec3(scanMask);\n\t\t// return worldPos;\n\t\t// return vec3(mask1);\n\t\t// return scanCol;\n}\n\nvoid main()\n{\n    vec3 col=vec3(0.);\n    col=getScanColor(vPosition,vUv*10.0,col);\n    gl_FragColor=vec4(col,1.);\n}\n"});return c((()=>{p.value&&(p.value.material.uniforms.uScanColor.value=new y(r.color),p.value.material.uniforms.uScanColorDark.value=new y(r.colorDark))})),(a,e)=>(v(),u("TresMesh",{ref_key:"tmRef",ref:p,"rotation-x":-Math.PI/2,scale:a.scale},[e[0]||(e[0]=m("TresPlaneGeometry",{args:[1,1]},null,-1)),m("TresShaderMaterial",f(d(S)),null,16)],8,x))}}),T=r({__name:"circleWave",setup(a){const e=i({reflectivity:.1,showGridHelper:!1,scale:1}),r=i({color:"#ffffff",colorDark:"#000000",speed:1,scale:2}),s=new o({title:"shaderCircleWave地面",expanded:!0});return s.addBinding(r,"color",{label:"圈颜色"}),s.addBinding(r,"colorDark",{label:"圈渐变色"}),s.addBinding(r,"speed",{label:"速度",min:.1,max:5,step:.1}),s.addBinding(r,"scale",{label:"大小",min:.1,max:10,step:.1}),(a,o)=>{const s=p("TresCanvas");return v(),g(s,{clearColor:"#201919","window-size":""},{default:k((()=>[o[0]||(o[0]=m("TresPerspectiveCamera",{position:[3,3,0],fov:45,near:.1,far:1e4},null,-1)),S(w(n),{enableDamping:""}),o[1]||(o[1]=m("TresAmbientLight",{intensity:6},null,-1)),(v(),g(h,null,{default:k((()=>[S(P,f(d(r)),null,16)])),_:1})),(v(),g(h,null,{default:k((()=>[S(t,C({position:[0,-.5,0]},e),null,16)])),_:1}))])),_:1})}}});export{T as default};
