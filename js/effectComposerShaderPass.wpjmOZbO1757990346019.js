import{m as e,e as a,a as r}from"./@tresjs.PrijCSbN1757990346019.js";import{cm as s,cn as n,a as l,co as t,n as o,cF as u}from"./three.DHXbQd-f1757990346019.js";import{d as v,b as i,a2 as m,G as d,o as c,I as p,F as f,h as x,e as T,f as h,j as g,u as w}from"./@vue.pEDXJ_3Z1757990346019.js";import"./postprocessing.BxUQ5pTE1757990346019.js";import"./@vueuse.D19fGRfI1757990346019.js";const y=v({__name:"ecLayerShaderPass",setup(r){const v=i(),x=i(),{camera:T,renderer:h,scene:g,sizes:w}=e(),y=.572,_=.51,b=0;let M=null,j=null,P=null;m((()=>{v.value&&v.value.layers.set(0),x.value&&x.value.layers.set(1),w.width.value&&(((e,a,r,o,u)=>{M=new s(e,a);const v=new n(new l(o,u),y,_,b);j=new t(r),j.renderToScreen=!1,j.addPass(M),j.addPass(v)})(g.value,T.value,h.value,w.width.value,w.height.value),(e=>{P=new t(e);const a=new o({uniforms:{baseTexture:{value:null},bloomTexture:{value:j.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( vec4( 1.0 ) *texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n            }\n        ",defines:{}}),r=new u(a,"baseTexture");r.needsSwap=!0,P.addPass(M),P.addPass(r)})(h.value))}));const{onLoop:S}=a();return S((()=>{j&&P&&T.value&&(h.value.clear(),T.value.layers.set(1),j.render(),h.value.clearDepth(),T.value.layers.set(0),P.render(g.value,T.value))})),(e,a)=>(c(),d(f,null,[p("TresMesh",{ref_key:"normalBox",ref:v,position:[3,2,1]},a[0]||(a[0]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)]),512),p("TresMesh",{ref_key:"shineBox",ref:x,position:[0,2,-4]},a[1]||(a[1]=[p("TresBoxGeometry",{args:[1,1,1]},null,-1),p("TresMeshNormalMaterial",null,null,-1)]),512)],64))}}),_=v({__name:"effectComposerShaderPass",setup(e){const a=i();return m((()=>{if(a.value){a.value.context.renderer.value.autoClear=!1}})),(e,s)=>{const n=x("TresCanvas");return c(),T(n,{renderMode:"manual","window-size":"",ref_key:"tcRef",ref:a},{default:h((()=>[s[0]||(s[0]=p("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),s[1]||(s[1]=p("TresAmbientLight",{intensity:1},null,-1)),g(w(r)),s[2]||(s[2]=p("TresGridHelper",{args:[10,10]},null,-1)),g(y)])),_:1},512)}}});export{_ as default};
