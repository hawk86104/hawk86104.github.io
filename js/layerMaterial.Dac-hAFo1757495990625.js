import{a}from"./@tresjs.BaNUTOlS1757495990625.js";import{P as o}from"./tweakpane.C0HtAJSg1757495990625.js";import{_ as e,a as s,b as r}from"./depth.vue_vue_type_script_setup_true_lang.BiPFMzh-1757495990625.js";import"./lamina.D-tb1KBw1757495990625.js";import"./OimoPhysicsBuffer.BGJpCHtP1757495990625.js";import{_ as l}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.CSqPG1RS1757495990625.js";import"./vanilla.esm.5.5.0.Bwd2SVK01757495990625.js";import"./PackedMipMapGenerator.DPVZnX041757495990625.js";import{d as t,r as i,ac as p,h as n,e as m,o as d,f as c,I as f,j as h,u,a7 as g,a8 as j,a5 as _,m as v}from"./@vue.pEDXJ_3Z1757495990625.js";import{_ as B,ce as b,V as k}from"./three.QlBabAUP1757495990625.js";import"./postprocessing.Ct7rpRb51757495990625.js";import"./@vueuse.us9YhBxp1757495990625.js";import"./glsl-tokenizer.BlFekddj1757495990625.js";import"./@amap.CGUF9xH41757495990625.js";import"./glsl-token-descope.CDfUE8tr1757495990625.js";import"./glsl-token-depth.Duvdnvlt1757495990625.js";import"./glsl-token-scope.BdCfdvWe1757495990625.js";import"./glsl-token-properties.DKXemF9b1757495990625.js";import"./glsl-token-assignments.Ctx_yUgS1757495990625.js";import"./glsl-token-string.CFOv3ZjS1757495990625.js";import"./glsl-token-functions.iGfkF_9W1757495990625.js";import"./object-hash.nYwssbk41757495990625.js";import"./jszip.DsRatsjk1757495990625.js";import"./oimophysics.BBtHVm4j1757495990625.js";import"./dither.glsl.tNAdkJUa1757495990625.js";import"./Reflector.CKXQ2y6t1757495990625.js";import"./vite-plugin-qiankun.B06WoCqG1757495990625.js";import"./three-stdlib.CKVSFewE1757495990625.js";const w={position:[0,.5,0]},y=t({__name:"layerMaterial",setup(t){const y=i({clearColor:"#000000",shadows:!0,alpha:!1,antialias:!0,pixelRatio:window.devicePixelRatio,shadowMapType:b,outputColorSpace:B,toneMapping:void 0,useLegacyLights:!0}),x=i({autoRotate:!0}),A=p({color1:"#000000",alpha1:1,colorA:"#ed08ff",colorB:"#1bff00",alpha2:1.1,near:.87,far:299.77}),C=new o({expanded:!0}),M=C.addFolder({title:"Color层"});M.addBinding(A,"color1",{label:"颜色"}),M.addBinding(A,"alpha1",{label:"alpha",step:.1,min:0,max:2});const T=C.addFolder({title:"Depth层"});return T.addBinding(A,"colorA",{label:"颜色A"}),T.addBinding(A,"colorB",{label:"颜色B"}),T.addBinding(A,"alpha2",{label:"alpha",step:.1,min:0,max:2}),T.addBinding(A,"near",{label:"near",step:.01,min:0,max:1}),T.addBinding(A,"far",{label:"far",step:.01,min:299,max:300}),(o,t)=>{const i=n("TresCanvas");return d(),m(i,v(y,{"window-size":""}),{default:c((()=>[t[1]||(t[1]=f("TresPerspectiveCamera",{position:[5,10,5],fov:30,near:1,far:1e3},null,-1)),h(u(a),g(j(x)),null,16),t[2]||(t[2]=f("TresAmbientLight",{color:"#ffffff",intensity:2},null,-1)),(d(),m(_,null,{default:c((()=>[h(u(l),{reflectivity:2.6,showGridHelper:"",position:[0,-.6,0]})])),_:1})),f("TresMesh",w,[t[0]||(t[0]=f("TresSphereGeometry",{args:[1,500,500]},null,-1)),h(u(e),{color:"white",lighting:"physical"},{default:c((()=>[h(u(s),{color:u(A).color1,alpha:u(A).alpha1},null,8,["color","alpha"]),h(u(r),{colorA:u(A).colorA,colorB:u(A).colorB,alpha:u(A).alpha2,mode:"normal",near:u(A).near,far:u(A).far,origin:new k(100,100,100)},null,8,["colorA","colorB","alpha","near","far","origin"])])),_:1})])])),_:1},16)}}});export{y as default};
