import{u as t,_ as n,a as o}from"./mergeTres.V0BkqeHG1736251016080.js";import{l as r}from"./utils.2pE-dga51736251016080.js";import{e}from"./@tresjs.8C7OKmBm1736251016080.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-Mz_IXfk1736251016080.js";import{_ as C}from"./@fesjs.SlXnoRjV1736251016080.js";import"./@amap.RhAVlD5U1736251016080.js";import"./pinia.PKDK8ItA1736251016080.js";import"./vue-demi.C4xddsk91736251016080.js";import"./three.RuuDeeIf1736251016080.js";import"./three-mesh-bvh.-gqSJxGX1736251016080.js";import"./@vueuse.HhUha1mw1736251016080.js";import"./vue-router.JOEPJWPi1736251016080.js";import"./lodash-es.guXTxyfJ1736251016080.js";import"./@qlin.yHhFDldE1736251016080.js";import"./@floating-ui.BPbuo5Gx1736251016080.js";import"./@juggle.7yjBMqoW1736251016080.js";const y=w;!function(t,n){const o=w,r=S();for(;;)try{if(475151===-parseInt(o(263))/1*(-parseInt(o(274))/2)+parseInt(o(258))/3+parseInt(o(295))/4+parseInt(o(255))/5+-parseInt(o(269))/6*(-parseInt(o(282))/7)+-parseInt(o(288))/8*(parseInt(o(278))/9)+parseInt(o(259))/10*(-parseInt(o(281))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[w(293)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function w(t,n){const o=S();return(w=function(t,n){return o[t-=243]})(t,n)}!function(){x(this,(function(){const t=w,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(296),"i"),r=z(t(294));n[t(265)](r+t(279))&&o[t(265)](r+t(299))?z():r("0")}))()}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[w(293)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();b(void 0,(function(){const t=w,n=function(){const t=w;let n;try{n=Function(t(291)+t(286)+");")()}catch(o){n=window}return n}(),o=n[t(256)]=n.console||{},r=["log","warn",t(252),t(247),t(300),t(303),"trace"];for(let e=0;e<r[t(243)];e++){const n=b.constructor[t(254)].bind(b),a=r[e],i=o[a]||n;n[t(292)]=b[t(246)](b),n.toString=i.toString[t(246)](i),o[a]=n}}))();const I=[y(273),y(276),y(271)];function S(){const t=["geometry","position","3268DWhvjq","constructor","faceUv","while (true) {}","6923079rRxCvs","chain","TresShaderMaterial","8765284iOkhcX","4344172jTWXJM","getZoom","stateObject","normalArray",'{}.constructor("return this")( )',"value","8jsFHgR","buildingModels","mapHandle","return (function() ","__proto__","apply","init","2623680zkorzy","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uvArray","TresMesh","input","exception","uniforms","cameraState","table","length","tbgRef","u_near","bind","error","near","lngLatToCoord","TresGroup","debu","info","customCoords","prototype","1996040ltRGsq","console","action","1702710gUhfHa","20hGBzJN","exp","call","push","364plkSgb","counter","test","atan","string","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","6eMPsYC","buildings","normal"];return(S=function(){return t})()}const j=a({__name:y(289),setup(n){const o=t(),a=t=>{const n=w;for(let r=0;r<t[n(243)];r+=3){const e=[t[r],t[r+1]],a=o.mapHandle[n(253)][n(249)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[w(302)]&&(async()=>{const t=w,n=await r(t(268),t(270));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(272)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(276)]),l=new Float32Array(r[t(272)][t(243)]);d[t(262)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=w;o[t(302)]&&(g[t(301)].u_zoom[t(287)]=o[t(290)][t(283)](),g.uniforms[t(245)][t(287)]=o[t(302)][t(248)],g.uniforms.u_far[t(287)]=o.cameraState.far)})),(t,n)=>{const o=w;return c(),s(o(250),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(298),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:r(244),position:[t.positionArray,3],faceUv:[t[r(297)],2],normal:[t[r(285)],3]},null,8,I),p(r(280),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=w;if(typeof t===o(267))return function(t){}[o(275)](o(277)).apply(o(264));1!==(""+t/t).length||t%20==0?function(){return!0}.constructor(o(251)+"gger")[o(261)](o(257)):function(){return!1}.constructor("debugger")[o(293)](o(284)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const F=A;!function(t,n){const o=A,r=U();for(;;)try{if(619202===parseInt(o(323))/1+parseInt(o(346))/2*(parseInt(o(336))/3)+parseInt(o(342))/4*(-parseInt(o(343))/5)+-parseInt(o(335))/6*(-parseInt(o(334))/7)+-parseInt(o(320))/8+parseInt(o(329))/9*(parseInt(o(341))/10)+-parseInt(o(354))/11*(parseInt(o(344))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[A(345)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=A,n=new RegExp(t(326)),o=new RegExp(t(333),"i"),r=M(t(332));n[t(328)](r+t(352))&&o[t(328)](r+t(340))?M():r("0")}))()}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[A(345)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function A(t,n){const o=U();return(A=function(t,n){return o[t-=313]})(t,n)}P(void 0,(function(){const t=A,n=function(){const t=A;let n;try{n=Function(t(330)+t(327)+");")()}catch(o){n=window}return n}(),o=n.console=n[t(350)]||{},r=[t(351),"warn","info",t(314),"exception","table",t(337)];for(let e=0;e<r[t(321)];e++){const n=P[t(353)][t(324)][t(349)](P),a=r[e],i=o[a]||n;n[t(325)]=P[t(349)](P),n[t(339)]=i[t(339)][t(349)](i),o[a]=n}}))();function M(t){function n(t){const o=A;if(typeof t===o(317))return function(t){}[o(353)]("while (true) {}")[o(345)](o(338));1!==(""+t/t)[o(321)]||t%20==0?function(){return!0}[o(353)](o(355)+o(331)).call(o(322)):function(){return!1}[o(353)](o(355)+"gger").apply(o(348)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function U(){const t=["33380kSaVLS","24MqhpjQ","apply","515566PUFEFX","buildings","stateObject","bind","console","log","chain","constructor","8374718DZvuii","debu","tcRef","error","TresCanvas","TresPerspectiveCamera","string","tresCanvas","manual","7149848dvtSVj","length","action","864039FCFiQY","prototype","__proto__","function *\\( *\\)",'{}.constructor("return this")( )',"test","12861cbfASu","return (function() ","gger","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","203mFWrQo","110460AMVFmh","12wcReEu","trace","counter","toString","input","6160sIdVta","164LcNiDj"];return(U=function(){return t})()}const L=C(a({__name:F(347),setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(319)});return(t,i)=>{const l=r,f=d(l(315));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(318),ref:l(313)},a),{default:m((()=>[i[0]||(i[0]=p(l(316),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p("TresAmbientLight",{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{L as default};
