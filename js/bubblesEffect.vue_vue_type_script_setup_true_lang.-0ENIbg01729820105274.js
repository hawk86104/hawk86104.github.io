import{_ as n,C as t,a0 as e,aL as o,cq as i,bX as r}from"./three.0W5n8UBO1729820105274.js";import{p as a,U as s,z as l}from"./@tresjs.S6PXiQcG1729820105274.js";import{d as u,b as c,a4 as f,a3 as p,o as m,E as b,L as g,aj as v,ak as y,u as d}from"./@vue.bvMz0l_u1729820105274.js";const h=z;!function(n,t){const e=z,o=x();for(;;)try{if(262833===-parseInt(e(243))/1+-parseInt(e(218))/2*(-parseInt(e(233))/3)+-parseInt(e(260))/4*(-parseInt(e(215))/5)+-parseInt(e(210))/6*(parseInt(e(240))/7)+parseInt(e(246))/8*(parseInt(e(227))/9)+-parseInt(e(244))/10*(parseInt(e(216))/11)+parseInt(e(205))/12)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(208)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=z,t=new RegExp(n(255)),e=new RegExp(n(214),"i"),o=T(n(206));t[n(234)](o+n(224))&&e[n(234)](o+n(209))?T():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(208)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=x();return(z=function(n,t){return e[n-=202]})(n,t)}function x(){const n=["return (function() ","trace","warn","while (true) {}","position","147iqblYJ","__proto__","model","341156SiXQvZ","140peNfRz","Mesh","8yQemqi","xRayEffect","TresShaderMaterial","map","color","push","gger","console","string","function *\\( *\\)","action","uOpacity","info","counter","3656ZPaZtb","table","toString","call","uTime","prototype","77688WBtBFy","init","exception","apply","input","3732HsSlpI","#84ccff","stateObject","geometry","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","1590vcbvaL","280445QdEsbY","uniforms","86eWsCaz","opacity","length","TresMesh","constructor","Color","chain","error",'{}.constructor("return this")( )',"1379583TSNbjS","TresMeshRef","debu","value","bind","glowColor","36528XWWTWs","test"];return(x=function(){return n})()}_(void 0,(function(){const n=z,t=function(){const n=z;let t;try{t=Function(n(235)+n(226)+");")()}catch(e){t=window}return t}(),e=t[n(253)]=t[n(253)]||{},o=["log",n(237),n(258),n(225),n(207),n(261),n(236)];for(let i=0;i<o[n(220)];i++){const t=_[n(222)][n(204)][n(231)](_),r=o[i],a=e[r]||t;t[n(241)]=_[n(231)](_),t[n(262)]=a.toString[n(231)](a),e[r]=t}}))();const S=g("TresBufferGeometry",null,null,-1),P=u({__name:h(247),props:{model:{},color:{default:h(211)},opacity:{default:1}},async setup(r){const u=h;let d,w;const _=r,z=c(),x=[];_[u(242)].traverse((t=>{const e=u;t instanceof n[e(245)]&&(t[e(213)].verticesNeedUpdate=!0,x[e(251)](t[e(213)]))}));const P=([d,w]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),d=await d,w(),d),T={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(_[u(250)])},lightningTexture:{type:"t",value:P[u(249)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:_[u(219)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e,blending:o,depthWrite:!1};T[u(217)].offsetY[u(230)]=Math.sin(5);const{camera:I}=a(),{onLoop:C}=s();return C((({delta:n})=>{const t=u;I[t(230)][t(239)]&&z[t(230)]&&(T[t(217)][t(203)].value+=n)})),p((()=>{const t=u;z[t(230)]&&(z.value.geometry.dispose(),z[t(230)][t(213)]=i(x)),_[t(250)]&&(T[t(217)][t(232)][t(230)]=new(n[t(223)])(_[t(250)])),_[t(219)]&&(T[t(217)][t(257)][t(230)]=_[t(219)])})),(n,t)=>{const e=u;return m(),b(e(221),{ref_key:e(228),ref:z},[S,g(e(248),v(y(T)),null,16)],512)}}});function T(n){function t(n){const e=z;if(typeof n===e(254))return function(n){}[e(222)](e(238))[e(208)](e(259));1!==(""+n/n)[e(220)]||n%20==0?function(){return!0}.constructor("debu"+e(252))[e(202)](e(256)):function(){return!1}[e(222)](e(229)+e(252))[e(208)](e(212)),t(++n)}try{if(n)return t;t(0)}catch(e){}}function I(n,t){const e=U();return(I=function(n,t){return e[n-=172]})(n,t)}const C=I;!function(n,t){const e=I,o=U();for(;;)try{if(290809===-parseInt(e(230))/1+parseInt(e(196))/2*(parseInt(e(233))/3)+parseInt(e(225))/4+-parseInt(e(224))/5*(-parseInt(e(189))/6)+-parseInt(e(190))/7*(-parseInt(e(229))/8)+-parseInt(e(249))/9*(parseInt(e(211))/10)+-parseInt(e(204))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(176)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){M(this,(function(){const n=I,t=new RegExp(n(193)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=B(n(220));t[n(235)](o+n(222))&&e.test(o+n(187))?B():o("0")}))()}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(176)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();F(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(253)+n(215)+");")()}catch(e){t=window}return t}(),e=t[n(239)]=t[n(239)]||{},o=[n(250),n(175),"info",n(251),n(245),n(242),n(203)];for(let i=0;i<o[n(179)];i++){const t=F.constructor[n(207)][n(173)](F),r=o[i],a=e[r]||t;t[n(208)]=F[n(173)](F),t[n(197)]=a[n(197)].bind(a),e[r]=t}}))();const j=u({__name:C(241),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(t){const e=C,o=t,i=["afective",e(201),e(234),e(248),e(191),e(206),e(221),"cerebellum",e(180)],a={};o[e(254)][e(188)]((t=>{const o=e;t instanceof n[o(217)]&&i[o(216)]((n=>{const e=o;if(t[e(186)][e(214)](n)){if(a[n]){const o=[a[n],t[e(244)]];return a[n]=r[e(178)](o),a}return a[n]=t.geometry}return[]}))}));const l=c(),u=new(n[e(182)])({uniforms:{glowColor:{type:"c",value:new(n[e(200)])(o[e(209)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:o[e(223)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[e(227)],side:n[e(202)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{l[e(181)]&&(()=>{const t=e,o=[],r=[],s=[],u=[];for(let e=0;e<2e4-3*i[t(179)];e+=1){const l=n[t(238)][t(243)](0,i.length-1),c=i[l],f=a[c][t(210)].position.array[3*e+0]||0,p=a[c].attributes[t(237)][t(177)][3*e+1]||0,m=a[c][t(210)][t(237)][t(177)][3*e+2]||0;if(r.push(f,p,m),o[e]=n[t(238)].randFloat(10,20),e%100==0){const e=n[t(238)][t(243)](100,250)+p;u.push(f,e,m,1)}else u[t(231)](f,p,m,0);s[2*e+0]=n[t(238)][t(198)](.5,1.5),s[2*e+1]=2.5}l[t(181)][t(172)](t(184),new(n[t(226)])(s,2)),l[t(181)][t(172)](t(205),new(n[t(226)])(u,4)),l[t(181)][t(172)](t(237),new(n[t(226)])(r,3)),l[t(181)][t(172)](t(209),new(n[t(226)])([],3)),l[t(181)][t(172)]("size",new(n[t(226)])(o,1)),l.value[t(228)]()})()}));const f=c(),{onLoop:h}=s();return h((({delta:t})=>{const i=e;f[i(181)]&&(f.value[i(246)].uniforms[i(183)][i(181)]+=.05,f[i(181)][i(246)].uniforms[i(199)][i(181)]+=1/400),o[i(209)]&&(u[i(213)][i(194)][i(181)]=new(n[i(200)])(o[i(209)])),o[i(223)]&&(u[i(213)][i(240)][i(181)]=o[i(223)])})),(n,t)=>{const o=e;return m(),b(o(232),{ref_key:o(219),ref:f},[g(o(247),{ref_key:o(192),ref:l},null,512),g(o(236),v(y(d(u))),null,16)],512)}}});function B(n){function t(n){const e=I;if(typeof n===e(218))return function(n){}[e(185)]("while (true) {}")[e(176)]("counter");1!==(""+n/n)[e(179)]||n%20==0?function(){return!0}[e(185)]("debu"+e(252))[e(212)]("action"):function(){return!1}[e(185)](e(174)+e(252))[e(176)](e(195)),t(++n)}try{if(n)return t;t(0)}catch(e){}}function U(){const n=["test","TresShaderMaterial","position","MathUtils","console","uOpacity","bubblesEffect","table","randInt","geometry","exception","material","TresBufferGeometry","process","234YZdzIj","log","error","gger","return (function() ","model","setAttribute","bind","debu","warn","apply","array","mergeGeometries","length","analitic","value","ShaderMaterial","uTime","aDelayDuration","constructor","name","input","traverse","6IXdXDY","7twHzWt","amigdala","BufferGeometryRef","function *\\( *\\)","glowColor","stateObject","1015252hhqHyn","toString","randFloat","uSlowTime","Color","semantic","DoubleSide","trace","6982514jPHFwX","bubbles","brainstem","prototype","__proto__","color","attributes","51950AGSfSK","call","uniforms","includes",'{}.constructor("return this")( )',"map","Mesh","string","TresMeshRef","init","bridge","chain","opacity","1204430JOTjGK","1871356zqWqyx","Float32BufferAttribute","AdditiveBlending","computeBoundingSphere","2072200OUChxU","414723BpMhNJ","push","TresPoints","3oPxrAm","episodic"];return(U=function(){return n})()}export{P as _,j as a};
