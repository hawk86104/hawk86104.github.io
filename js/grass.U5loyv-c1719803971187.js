import{a5 as t,s as n,V as e,K as o,aj as r,ab as a}from"./three.BsQyBKrV1719803971187.js";import{r as i,N as s,d as c,P as l}from"./@tresjs.rn1P_YDI1719803971187.js";import"./index.oA5wlt2M1719803971187.js";import{a as u}from"./simplex-noise.MycypUyu1719803971187.js";import{C as f}from"./index.ABG0hjuI1719803971187.js";import{d as p,a3 as h,o as m,D as d,J as v,u as g,r as x,f as y,g as w,j as b,aj as _,ak as j,al as M}from"./@vue.CpOXM7bB1719803971187.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.JdXG2okG1719803971187.js";import"./@vueuse.T5wlwfAk1719803971187.js";import"./tweakpane.qqn77PB81719803971187.js";import"./lamina.XofZTYrA1719803971187.js";import"./glsl-tokenizer.m00Vcg5f1719803971187.js";import"./@amap.cIAWtN1R1719803971187.js";import"./glsl-token-descope.ZU2CIChA1719803971187.js";import"./glsl-token-depth.tVgYLy7r1719803971187.js";import"./glsl-token-scope.tlFoJ5id1719803971187.js";import"./glsl-token-properties.O_7gpAyU1719803971187.js";import"./glsl-token-assignments.YdUdsQP11719803971187.js";import"./glsl-token-string.vSzYTBTq1719803971187.js";import"./glsl-token-functions.HqnkbJtH1719803971187.js";import"./object-hash.4kGk0kP-1719803971187.js";import"./jszip.Q9Kx2fWV1719803971187.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.-jUsENws1719803971187.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.uUMUtqQk1719803971187.js";import"./three-stdlib.vwixL4nl1719803971187.js";import"./@pmndrs.aJsI2n6-1719803971187.js";import"./utils.9FtToc9s1719803971187.js";const A=k;!function(t,n){const e=k,o=R();for(;;)try{if(436528===-parseInt(e(252))/1*(parseInt(e(202))/2)+parseInt(e(255))/3+-parseInt(e(234))/4+parseInt(e(239))/5+parseInt(e(196))/6+-parseInt(e(253))/7+parseInt(e(197))/8*(parseInt(e(208))/9))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(248)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){I(this,(function(){const t=k,n=new RegExp(t(229)),e=new RegExp(t(184),"i"),o=E("init");n[t(241)](o+"chain")&&e[t(241)](o+t(207))?E():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(t,n){const e=R();return(k=function(t,n){return e[t-=179]})(t,n)}function R(){const t=["2745900czAjMM","208WtvqRX","halfRootAngleSinF32","bind","PlaneGeometry","width","1113018gKcXlD","attributes-offset","table","random","InstancedBufferAttribute","input","160713UoomeR","index","joints","DoubleSide","instances","length",'{}.constructor("return this")( )',"attributes-stretch","toString","value","orientationsF32","stretchesF32","convertSRGBToLinear","computeVertexNormals","constructor","set","map","attributes-orientation","push","cos","TresMesh","function *\\( *\\)","log","debu","geometry","#000f00","1690260MaqzOv","attributes","attributes-halfRootAngleSin","Vector4","halfRootAngleCosF32","2310535YMQyEe","grass","test","TresGroup","alphaMap","console","Vector3","normalize","TresInstancedBufferGeometry","apply","material","action","translate","1eUdYpe","3523555YxioHJ","sin","1604784CLtVdT","side","Color","needsUpdate","error","while (true) {}","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","attributes-uv","__proto__","lookAt","return (function() ","offsetsF32","call","gger","position","prototype","attributes-position","array"];return(R=function(){return t})()}C(void 0,(function(){const t=k,n=function(){const t=k;let n;try{n=Function(t(188)+t(214)+");")()}catch(e){n=window}return n}(),e=n[t(244)]=n[t(244)]||{},o=[t(230),"warn","info",t(182),"exception",t(204),"trace"];for(let r=0;r<o[t(213)];r++){const n=C[t(222)][t(193)][t(199)](C),a=o[r],i=e[a]||n;n[t(186)]=C.bind(C),n[t(216)]=i[t(216)].bind(i),e[a]=n}}))();const S=[A(249)],D=[A(209),A(194),A(185),A(203),A(225),A(215),A(236),"attributes-halfRootAngleCos"],F=[A(232)],B=["side"],L=p({__name:A(240),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),y=a,w=u(Math[c(205)]);function b(t,n){const e=t.x*n.w+t.y*n.z-t.z*n.y+t.w*n.x,o=-t.x*n.z+t.y*n.w+t.z*n.x+t.w*n.y,a=t.x*n.y-t.y*n.x+t.z*n.w+t.w*n.z,i=-t.x*n.x-t.y*n.y-t.z*n.z+t.w*n.w;return new r(e,o,a,i)}function _(t,n){var e=2*w(t/50,n/50);return e+=4*w(t/100,n/100),e+=.2*w(t/10,n/10)}const j=function(n,r){const a=c,i=[],s=[],l=[],u=[],f=[];let p=new(t[a(237)]),h=new(t[a(237)]);const m=-.25;for(let o=0;o<n;o++){const c=Math.random()*r-r/2,d=Math.random()*r-r/2,v=_(c,d);i[a(226)](c,v,d);let g=Math.PI-Math[a(205)]()*(2*Math.PI);u[a(226)](Math[a(254)](.5*g)),f[a(226)](Math.cos(.5*g));let x=new e(0,1,0),y=x.x*Math[a(254)](g/2),w=x.y*Math[a(254)](g/2),j=x.z*Math[a(254)](g/2),M=Math[a(227)](g/2);p[a(223)](y,w,j,M)[a(246)](),g=.5*Math[a(205)]()+m,x=new(t[a(245)])(1,0,0),y=x.x*Math[a(254)](g/2),w=x.y*Math[a(254)](g/2),j=x.z*Math[a(254)](g/2),M=Math[a(227)](g/2),h[a(223)](y,w,j,M).normalize(),p=b(p,h),g=.5*Math[a(205)]()+m,x=new e(0,0,1),y=x.x*Math.sin(g/2),w=x.y*Math[a(254)](g/2),j=x.z*Math[a(254)](g/2),M=Math[a(227)](g/2),h[a(223)](y,w,j,M)[a(246)](),p=b(p,h),s.push(p.x,p.y,p.z,p.w),o<n/3?l[a(226)](1.8*Math[a(205)]()):l[a(226)](Math[a(205)]())}return{offsetsF32:new(t[a(206)])(new Float32Array(i),3),orientationsF32:new(t[a(206)])(new Float32Array(s),4),stretchesF32:new o(new Float32Array(l),1),halfRootAngleCosF32:new(t[a(206)])(new Float32Array(f),1),halfRootAngleSinF32:new(t[a(206)])(new Float32Array(u),1)}}(y[c(212)],y[c(201)]),M=new(t[c(200)])(y.bW,y.bH,1,y[c(210)])[c(251)](0,y.bH/2,0),z=new n(y[c(201)],y.width,32,32);z[c(187)](new(t[c(245)])(0,1,0));const I=z[c(235)][c(192)];for(let t=0;t<I[c(195)][c(213)];t+=3)I.array[t+1]=_(I[c(195)][t],I[c(195)][t+2]);z[c(235)][c(192)][c(181)]=!0,z[c(221)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[c(180)])(.3,.9,0)[c(220)](),bottomColor:new(t[c(180)])(0,.2,0)[c(220)]()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=c;n[e(179)]=t[e(211)]})));C[c(224)]=x.map,C[c(243)]=x[c(243)],C.toneMapped=!1;const{onLoop:k}=i();return k((({elapsed:t})=>{const n=c;C.uniforms.time[n(217)]=t/4})),(n,e)=>{const o=c;return m(),d(o(242),null,[v(o(228),{material:g(C)},[v(o(247),{index:g(M)[o(209)],"attributes-position":g(M)[o(235)].position,"attributes-uv":g(M)[o(235)].uv,"attributes-offset":g(j)[o(189)],"attributes-orientation":g(j)[o(218)],"attributes-stretch":g(j)[o(219)],"attributes-halfRootAngleSin":g(j)[o(198)],"attributes-halfRootAngleCos":g(j)[o(238)]},null,8,D)],8,S),v(o(228),{position:[0,0,0],geometry:g(z)},[v("TresMeshStandardMaterial",{color:o(233),side:t[o(211)]},null,8,B)],8,F)])}}});function E(t){function n(t){const e=k;if("string"==typeof t)return function(t){}[e(222)](e(183))[e(248)]("counter");1!==(""+t/t)[e(213)]||t%20==0?function(){return!0}[e(222)](e(231)+e(191))[e(190)](e(250)):function(){return!1}[e(222)]("debugger")[e(248)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const H=V;!function(t,n){const e=V,o=O();for(;;)try{if(844890===-parseInt(e(461))/1+-parseInt(e(463))/2*(-parseInt(e(444))/3)+-parseInt(e(452))/4+parseInt(e(458))/5+-parseInt(e(465))/6*(-parseInt(e(470))/7)+-parseInt(e(456))/8+-parseInt(e(472))/9*(-parseInt(e(457))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){P(this,(function(){const t=V,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(449),"i"),o=U(t(466));n[t(467)](o+t(447))&&e[t(467)](o+t(464))?U():o("0")}))()}();const T=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[V(469)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function O(){const t=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresPerspectiveCamera","while (true) {}","1487536INazVL","console","toString","return (function() ","12765256KyHeLr","4624690BBGDqx","5012410mHBLjF","action","info","57887hkrbrd","trace","2yMWPjq","input","5191332hjCyIC","init","test","length","apply","7hBBJKX","constructor","18VQZcJV","warn","__proto__","bind","error","exception","log","string","233028ByNbNL","stateObject",'{}.constructor("return this")( )',"chain","gger"];return(O=function(){return t})()}T(void 0,(function(){const t=V,n=function(){const t=V;let n;try{n=Function(t(455)+t(446)+");")()}catch(e){n=window}return n}(),e=n[t(453)]=n.console||{},o=[t(442),t(437),t(460),t(440),t(441),"table",t(462)];for(let r=0;r<o[t(468)];r++){const n=T[t(471)].prototype[t(439)](T),a=o[r],i=e[a]||n;n[t(438)]=T[t(439)](T),n.toString=i[t(454)].bind(i),e[a]=n}}))();const q=v(H(450),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1);function V(t,n){const e=O();return(V=function(t,n){return e[t-=437]})(t,n)}const N=p({__name:"grass",setup(t){const n=x({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>(m(),y(g(l),_(j(n)),{default:w((()=>[q,b(g(c),_(j(e)),null,16),(m(),y(M,null,{default:w((()=>[b(L)])),_:1})),(m(),y(M,null,{default:w((()=>[b(g(z),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16))}});function U(t){function n(t){const e=V;if(typeof t===e(443))return function(t){}[e(471)](e(451))[e(469)]("counter");1!==(""+t/t).length||t%20==0?function(){return!0}.constructor("debu"+e(448)).call(e(459)):function(){return!1}[e(471)]("debugger")[e(469)](e(445)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{N as default};
