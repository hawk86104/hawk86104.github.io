import{t as e,cv as t,cw as s,cx as r,a8 as a,G as i,cy as o}from"./three.DvmzhRS91761100244891.js";import{a as n,r as h}from"./@vue.CKlgtJke1761100244891.js";const c={GLTFLoader:i,TextureLoader:a,STLLoader:r,RGBELoader:s,FBXLoader:t,FileLoader:e};const l=new class{constructor({decoderPath:e="./draco/"}={}){this.hasAllFinished=n(!1),this.progress=n(0),this.lenth=0,this.curIndex=0,this.loaderMapping=c,this.decoderPath=e,this.items={},this.reactiveItems=h({}),this.loadingMap={}}loadResources(e){e.forEach(({functionName:e,url:t,resourceID:s})=>{this.loadItem(e,t,s)})}loadItem(e,t,s=""){if(!s){const e=t.match(/[^\\/]+$/);s=e?e[0]:t}if(void 0!==this.loadingMap[s])return this.loadingMap[s];if(this.items[s])return Promise.resolve(this.items[s]);const r=this.loaderMapping[e];if(!r)return console.error(`找不到对应的loader：${e}`),Promise.reject(`找不到对应的loader：${e}`);let a=null;"GLTFLoader"===e&&(a=e=>{const t=new o;t.setDecoderPath(this.decoderPath),t.preload(),e.setDRACOLoader(t)}),this.curIndex++,this.lenth++;const i=async function(e,t,s,r){const a=new e;return s&&s(a),await new Promise((e,s)=>{a.load(t,t=>{const s=t;s.scene&&Object.assign(s,function(e){const t={nodes:{},materials:{}};return e&&e.traverse(e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material)}),t}(s.scene)),e(s)},r,e=>{console.log("[useLoader] - Failed to load resource",e),s(e)})})}(r,t,a).then(e=>(this.items[s]=e,this.reactiveItems[s]=e,this.curIndex--,this.progress.value=Math.floor((this.lenth-this.curIndex)/this.lenth*100),0===this.curIndex&&(this.hasAllFinished.value=!0),e));return this.loadingMap[s]=i,i}getItem(e){return this.items[e]}getReactiveItem(e){return()=>this.reactiveItems[e]}getResource(e,t,s){return this.loadItem(e,t,s)}};export{l as i};
