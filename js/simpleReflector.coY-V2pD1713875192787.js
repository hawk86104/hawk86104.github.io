import{a1 as n,a2 as t,aq as l,r as c,o as d,x as m,E as p,a as r,L as i,ac as _,J as f,cE as g,Y as e,a$ as u,aa as h,ab as C}from"./vendor.w27jK__M1713875192787.js";import{_ as v}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.b1fE42l11713875192787.js";import"./Reflector.LJmLQnnv1713875192787.js";const x=e("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),T=e("TresAmbientLight",{intensity:10},null,-1),B={position:[0,10,0],intensity:10,color:"#ffffff"},b=e("TresMesh",{position:[0,2,-4]},[e("TresBoxGeometry",{args:[1,1,1]}),e("TresMeshNormalMaterial")],-1),y=n({__name:"simpleReflector",setup(z){const o=t({mirrorSize:16,gridSize:15,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),a=new l({title:"地板参数",expanded:!0});return a.addBinding(o,"mirrorColor",{label:"镜面颜色"}),a.addBinding(o,"mirrorSize",{label:"镜面大小",min:10,max:50,step:1}),a.addBinding(o,"gridSize",{label:"网格大小",min:10,max:50,step:1}),(S,w)=>{const s=c("TresCanvas");return d(),m(s,{clearColor:"#201919","window-size":""},{default:p(()=>[x,r(i(_),{enableDamping:""}),T,f(e("TresDirectionalLight",B,null,512),[[i(g)]]),r(i(u),{args:[1,1,1],color:"orange",position:[3,2,1]}),b,r(v,h(C(o)),null,16)]),_:1})}}});export{y as default};
