import{c0 as n,ak as t,am as o,C as e,az as a,a as r}from"./three.RuuDeeIf1736251016080.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.8C7OKmBm1736251016080.js";import{d as u,b as f,w as d,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as y,ak as C,F as P}from"./@vue.-Mz_IXfk1736251016080.js";import"./@vueuse.HhUha1mw1736251016080.js";const b=_;!function(n,t){const o=_,e=I();for(;;)try{if(127818===-parseInt(o(459))/1+parseInt(o(460))/2*(-parseInt(o(489))/3)+-parseInt(o(509))/4+-parseInt(o(481))/5*(parseInt(o(456))/6)+parseInt(o(479))/7+-parseInt(o(505))/8+parseInt(o(498))/9*(parseInt(o(496))/10))break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const x=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[_(499)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){x(this,(function(){const n=_,t=new RegExp("function *\\( *\\)"),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=j(n(492));t[n(466)](e+n(483))&&o[n(466)](e+"input")?j():e("0")}))()}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();z(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(477)+n(484)+");")()}catch(o){t=window}return t}(),o=t[n(511)]=t[n(511)]||{},e=["log",n(506),n(470),n(514),"exception",n(504),"trace"];for(let a=0;a<e[n(464)];a++){const t=z[n(473)][n(467)][n(463)](z),r=e[a],s=o[r]||t;t[n(458)]=z[n(463)](z),t[n(478)]=s[n(478)][n(463)](s),o[r]=t}}))();const T=[b(513),b(515),b(507),b(500)];function _(n,t){const o=I();return(_=function(n,t){return o[n-=452]})(n,t)}function I(){const n=["sin","TresPerspectiveCamera","radius","action","378933KZTQov","TresCanvas","randomnessPower","init","aRandomness","count","clone","4291750LZcoqq","setAttribute","9EqfVuV","apply","a-randomness","material","outsideColor","TresBufferGeometry","table","1418304skIqWe","warn","color","#1b3984","355148LsWJpi","TresShaderMaterial","console","geometry","position","error","a-scale","counter","debu","random","black","branches","14334vLQovw","call","__proto__","19612VMyKfy","2vcKzvz","size","insideColor","bind","length","string","test","prototype","cos","forEach","info","uTime","keys","constructor","value","gger","#b5f28d","return (function() ","toString","1292900eAUQnW","bufferRef","155QLhLIx","lerp","chain",'{}.constructor("return this")( )'];return(I=function(){return n})()}const S=u({__name:"galaxy",setup(u){const x=b,z={clearColor:x(454),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},_={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:x(508)},I=new e(_[x(462)]),S=new e(_.outsideColor),j=new Float32Array(3*_[x(494)]),A=new Float32Array(3*_[x(494)]),F=new Float32Array(_[x(494)]),k=new Float32Array(3*_.count);for(let n=0;n<_[x(494)];n++){const t=3*n,o=Math[x(453)]()*_[x(487)],e=n%_.branches*Math.PI*2/_[x(455)];j[t]=Math[x(468)](e)*o,j[t+1]=0,j[t+2]=Math[x(485)](e)*o;const a=Math[x(453)]()**_[x(491)]*(Math.random()<.5?-1:1),r=Math[x(453)]()**_[x(491)]*(Math.random()<.5?-1:1),s=Math.random()**_[x(491)]*(Math[x(453)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=I[x(495)]();i[x(482)](S,o/_[x(487)]),A[t+0]=i.r,A[t+1]=i.g,A[t+2]=i.b,F[n]=Math[x(453)]()}const L={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:_[x(461)]}}};const R=f(null),{onLoop:q}=s();q((({elapsed:n})=>{const t=x;R.value&&(R[t(474)][t(501)].uniforms[t(471)][t(474)]=n)}));const{count:E,size:O,radius:Q,branches:W,spin:Z,randomness:K,randomnessPower:V,insideColor:J,outsideColor:U}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(476),outsideColor:x(508)});return d([E[x(474)],O[x(474)],Q[x(474)],W.value,Z[x(474)],K[x(474)],V[x(474)],J[x(474)],U.value],(n=>{const t=x;n[t(469)](((n,o)=>{const e=t;_[Object[e(472)](_)[o]]=n[e(474)]})),function(){const n=x;if(R[n(474)]){const t=new e(_[n(462)]),o=new e(_[n(502)]),a=new Float32Array(3*_[n(494)]),s=new Float32Array(3*_[n(494)]),i=new Float32Array(_[n(494)]),c=new Float32Array(3*_[n(494)]);for(let e=0;e<_.count;e++){const r=3*e,l=Math[n(453)]()*_[n(487)],u=e%_[n(455)]*Math.PI*2/_[n(455)];a[r]=Math[n(468)](u)*l,a[r+1]=0,a[r+2]=Math[n(485)](u)*l;const f=Math[n(453)]()**_[n(491)]*(Math[n(453)]()<.5?-1:1),d=Math.random()**_[n(491)]*(Math.random()<.5?-1:1),m=Math.random()**_[n(491)]*(Math.random()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=t[n(495)]();p[n(482)](o,l/_[n(487)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[e]=Math[n(453)]()}R[n(474)][n(512)][n(497)](n(513),new r(a,3)),R[n(474)][n(512)][n(497)](n(493),new r(c,3)),R[n(474)][n(512)][n(497)](n(507),new r(s,3)),R.value.geometry[n(497)]("aScale",new r(i,1))}}()})),(n,t)=>{const o=x,e=m(o(490));return p(),h(P,null,[v(g(c)),v(e,y(C(z)),{default:w((()=>[t[0]||(t[0]=M(o(486),{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:o(480),ref:R},[M(o(503),{position:[g(j),3],"a-scale":[g(F),1],color:[g(A),3],"a-randomness":[g(k),3]},null,8,T),M(o(510),y(C(L)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function j(n){function t(n){const o=_;if(typeof n===o(465))return function(n){}[o(473)]("while (true) {}")[o(499)](o(516));1!==(""+n/n)[o(464)]||n%20==0?function(){return!0}.constructor("debugger")[o(457)](o(488)):function(){return!1}[o(473)](o(452)+o(475))[o(499)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{S as default};
