import{_ as t}from"./index.5uL9VHhl1741594518249.js";import{l as e,_ as n,r,aV as o,J as i,C as a}from"./three.8y0_KTxz1741594518249.js";import{m as c,e as s,a as l,D as u,o as f}from"./@tresjs.gjafZgVK1741594518249.js";import{_ as p}from"./whiteFloorMesh.vue_vue_type_script_setup_true_lang.xkRhjhkW1741594518249.js";import{_ as v}from"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.teE2SXCI1741594518249.js";import{P as d}from"./tweakpane.yDiyAAkA1741594518249.js";import{d as m,a3 as h,a2 as x,w as g,o as y,H as w,u as b,r as C,e as S,j as _,g as F,N as P,f as I,aj as D,ak as j,al as z,m as N,F as k}from"./@vue.NRI7TcgI1741594518249.js";import"./index.VBwWZdua1741594518249.js";import"./@fesjs._tIE6C7-1741594518249.js";import"./vue-router.qtZNKV811741594518249.js";import"./lodash-es.pklfUAS51741594518249.js";import"./@qlin.yHhFDldE1741594518249.js";import"./pinia.3XPyh4eK1741594518249.js";import"./@floating-ui.BPbuo5Gx1741594518249.js";import"./@juggle.7yjBMqoW1741594518249.js";import"./chalk.9FGrMJNn1741594518249.js";/* empty css                                 */import"./iconify-icon.BVOVpC8G1741594518249.js";import"./@iconify.dt4P0LGS1741594518249.js";import"./dompurify.rQUea5mq1741594518249.js";import"./postprocessing.iiPTtJPW1741594518249.js";import"./@vueuse.8xnC6EWf1741594518249.js";import"./utils.9hS315WF1741594518249.js";import"./default.vue_vue_type_script_setup_true_lang.eEJtyQ911741594518249.js";import"./three-mesh-ui.module.acUjWfag1741594518249.js";function T(){var t=["scene","434aNPiDq","camera","2617511SLHYMF","innerHeight","value","72OdNwIA","length","toString","add","chain","while (true) {}","uniforms",'{}.constructor("return this")( )',"  \n                }","PerspectiveCamera","console","call","warn","test","bind","debu","__proto__","9YkhYWY","Scene","setRenderTarget","2577253eDqWFe","material","error","apply","exception","Mesh","gger","prototype","\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position.xy, 0.0, 1.0);    \n                }","gl_FragColor = texture2D(uTexture, vUv);","constructor","innerWidth","4760nGwyiR","6CmKuss","277018gTehoz","10UObtLv","6981mcsyoB","render","renderer","counter","1835592OeIWic","action","8238984JPrwCX","input","info","6017IWaUNa","PlaneGeometry","mesh","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uTexture","log"];return(T=function(){return t})()}!function(t,e){for(var n=R,r=T();;)try{if(619453===parseInt(n(221))/1+parseInt(n(239))/2*(-parseInt(n(223))/3)+-parseInt(n(227))/4*(-parseInt(n(222))/5)+parseInt(n(220))/6*(parseInt(n(207))/7)+parseInt(n(229))/8*(parseInt(n(204))/9)+-parseInt(n(219))/10*(parseInt(n(232))/11)+-parseInt(n(187))/12*(parseInt(n(241))/13))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();var M=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n[R(210)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){M(this,(function(){var t=R,e=new RegExp("function *\\( *\\)"),n=new RegExp(t(235),"i"),r=W("init");e[t(200)](r+t(191))&&n[t(200)](r+t(230))?W():r("0")}))()}();var E=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n[R(210)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function R(t,e){var n=T();return(R=function(t,e){return n[t-=186]})(t,e)}E(void 0,(function(){for(var t=R,e=function(){var t,e=R;try{t=Function("return (function() "+e(194)+");")()}catch(n){t=window}return t}(),n=e.console=e[t(197)]||{},r=[t(237),t(199),t(231),t(209),t(211),"table","trace"],o=0;o<r.length;o++){var i=E[t(217)][t(214)][t(201)](E),a=r[o],c=n[a]||i;i[t(203)]=E.bind(E),i[t(189)]=c[t(189)][t(201)](c),n[a]=i}}))();class B{constructor(t,r){var o=R;this[o(208)]=new e({uniforms:{uTexture:{type:"t",value:null}},vertexShader:o(215),fragmentShader:"\n                uniform sampler2D uTexture;\n\n                varying vec2 vUv;\n\n                void main() {\n                    "+(r||o(216))+o(195),depthTest:!1,depthWrite:!1}),this[o(234)]=new(n[o(212)])(new(n[o(233)])(2,2),this[o(208)]),this[o(240)]=new(n[o(196)])(45,window[o(218)]/window[o(242)],1,1e3),this[o(225)]=t,this[o(238)]=new(n[o(205)]),this[o(238)][o(190)](this.mesh)}blit(t,e){var n=R;this[n(225)][n(206)](e),this[n(208)][n(193)][n(236)][n(186)]=t,this[n(225)][n(224)](this[n(238)],this[n(240)]),this[n(225)].setRenderTarget(null)}}function W(t){function e(t){var n=R;if("string"==typeof t)return function(t){}.constructor(n(192))[n(210)](n(226));1!==(""+t/t)[n(188)]||t%20==0?function(){return!0}[n(217)]("debu"+n(213))[n(198)](n(228)):function(){return!1}[n(217)](n(202)+n(213))[n(210)]("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}const V=X;!function(t,e){const n=X,r=U();for(;;)try{if(286325===-parseInt(n(501))/1+parseInt(n(492))/2*(parseInt(n(457))/3)+parseInt(n(469))/4+parseInt(n(462))/5+parseInt(n(510))/6*(parseInt(n(465))/7)+-parseInt(n(455))/8*(parseInt(n(512))/9)+-parseInt(n(452))/10*(parseInt(n(480))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const H=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n.apply(e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){H(this,(function(){const t=X,e=new RegExp(t(447)),n=new RegExp(t(468),"i"),r=Y(t(507));e[t(484)](r+t(479))&&n[t(484)](r+t(496))?Y():r("0")}))()}();const A=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[X(464)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function X(t,e){const n=U();return(X=function(t,e){return n[t-=446]})(t,e)}A(void 0,(function(){const t=X;let e;try{e=Function(t(485)+'{}.constructor("return this")( ));')()}catch(o){e=window}const n=e[t(502)]=e[t(502)]||{},r=["log",t(474),t(478),"error","exception",t(505),t(460)];for(let i=0;i<r[t(477)];i++){const e=A[t(463)].prototype[t(467)](A),o=r[i],a=n[o]||e;e[t(483)]=A.bind(A),e[t(499)]=a.toString[t(467)](a),n[o]=e}}))();class O{constructor(t,e,r){const o=X;this[o(461)]=t.clone(),this[o(453)]=e,this[o(517)]=r,this.scene=new(n[o(495)]),this[o(493)].add(this[o(461)]),this[o(488)]=new B(this.renderer),this.ping=new(n[o(498)])(innerWidth,innerHeight,{type:n[o(472)],depthBuffer:!1,stencilBuffer:!1}),this[o(494)]=new(n[o(498)])(innerWidth,innerHeight,{type:n[o(472)],depthBuffer:!1,stencilBuffer:!1}),this.frontFaceRT=new(n[o(498)])(innerWidth,innerHeight,{type:n[o(472)]}),this.frontFaceMaterial=new(n[o(482)])({uniforms:{uCameraFarInverse:{value:1/this[o(453)].far}},vertexShader:o(514),fragmentShader:o(454),depthTest:!0,depthWrite:!0,side:n[o(456)]}),this[o(504)]=new(n[o(482)])({uniforms:{uScreenSize:{value:new(n[o(509)])(innerWidth,innerHeight)},uPrevDepth:{type:"t",value:this.ping[o(459)]},uCameraFarInverse:{value:1/this.camera[o(481)]},uSample:{value:0}},vertexShader:o(490),fragmentShader:"\n                uniform sampler2D uPrevDepth;\n                uniform float uCameraFarInverse;\n                uniform float uSample;\n                uniform vec2  uScreenSize;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n\n                    vec2 uv = gl_FragCoord.xy / uScreenSize;\n                    float prevRegisteredDepth = texture2D(uPrevDepth, uv).w;\n                    float currentDepth        = abs(vCameraSpacePos.z) * uCameraFarInverse;\n\n                    if(currentDepth <= prevRegisteredDepth) {\n                        discard;\n                    }\n\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }",depthTest:!1,depthWrite:!1,side:n[o(486)]}),this[o(461)][o(508)]((t=>{const e=o;t instanceof n[e(506)]&&(t[e(504)]=this.material)}))}[V(471)](t){const e=V;this.renderer[e(489)](this.ping),this[e(517)][e(470)](),this[e(517)][e(489)](this[e(494)]),this[e(517)][e(470)](),this[e(461)][e(508)]((t=>{const r=e;t instanceof n[r(506)]&&(t[r(504)]=this[r(504)])})),this[e(504)].uniforms[e(446)].value=1/this[e(453)][e(481)];for(let n=0;n<t;n++){let t=n%2==0?this[e(500)]:this[e(494)],r=n%2==0?this.pong:this[e(500)];this.material[e(475)][e(450)][e(451)]=t[e(459)],this[e(504)].uniforms[e(516)][e(451)]=n,this[e(517)].autoClear=!1,this.renderer[e(489)](r),this.renderer[e(448)](this[e(493)],this[e(453)]),this.renderer.autoClear=!0,this.blitProgram[e(511)](r.texture,t)}t%2==0?this.resultBuffer=this.ping:this[e(476)]=this[e(494)],this[e(461)][e(508)]((t=>{t instanceof r&&(t[e(504)]=this.frontFaceMaterial)})),this[e(517)].setRenderTarget(this[e(473)]),this[e(517)].render(this[e(493)],this.camera)}[V(466)](){const t=V;return this[t(476)][t(459)]}[V(458)](){return this[V(473)].texture}}function U(){const t=["test","return (function() ","DoubleSide","action","blitProgram","setRenderTarget","\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normalize((modelMatrix * vec4(normal, 0.0)).xyz);\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","while (true) {}","6ajGlHH","scene","pong","Scene","input","debu","WebGLRenderTarget","toString","ping","54250CNaGpy","console","string","material","table","Mesh","init","traverse","Vector2","1767498ogjbUp","blit","5070213SQpGIA","call","\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normal;\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","counter","uSample","renderer","uCameraFarInverse","function *\\( *\\)","render","gger","uPrevDepth","value","2351110nsNISC","camera","\n                uniform float uCameraFarInverse;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n                    float currentDepth = abs(vCameraSpacePos.z) * uCameraFarInverse;\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }","8BCjoAy","FrontSide","327333YdjNZJ","getFrontFaceTexture","texture","trace","mesh","124920qNHtRJ","constructor","apply","7fSfqdl","getBackFaceTexture","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","1968572OtEQVx","clear","compute","FloatType","frontFaceRT","warn","uniforms","resultBuffer","length","info","chain","11zmDqOj","far","ShaderMaterial","__proto__"];return(U=function(){return t})()}function Y(t){function e(t){const n=X;if(typeof t===n(503))return function(t){}.constructor(n(491))[n(464)](n(515));1!==(""+t/t)[n(477)]||t%20==0?function(){return!0}[n(463)](n(497)+n(449))[n(513)](n(487)):function(){return!1}[n(463)]("debugger").apply("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}const Z=$;!function(t,e){const n=$,r=L();for(;;)try{if(512549===-parseInt(n(377))/1+-parseInt(n(347))/2*(-parseInt(n(385))/3)+-parseInt(n(353))/4*(-parseInt(n(416))/5)+-parseInt(n(357))/6+-parseInt(n(369))/7*(-parseInt(n(392))/8)+-parseInt(n(387))/9*(parseInt(n(356))/10)+parseInt(n(349))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const q=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[$(428)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){q(this,(function(){const t=$,e=new RegExp("function *\\( *\\)"),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=Q(t(345));e[t(403)](r+"chain")&&n[t(403)](r+t(383))?Q():r("0")}))()}();const G=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n.apply(e,arguments);return n=null,t}}:function(){};return t=!1,r}}();G(void 0,(function(){const t=$;let e;try{e=Function(t(348)+t(404)+");")()}catch(o){e=window}const n=e.console=e[t(427)]||{},r=[t(346),t(384),t(355),t(395),t(390),t(371),t(354)];for(let i=0;i<r.length;i++){const e=G[t(380)][t(408)][t(361)](G),o=r[i],a=n[o]||e;e[t(417)]=G[t(361)](G),e[t(351)]=a[t(351)][t(361)](a),n[o]=e}}))();const J=[Z(407)];function L(){const t=["2eFDtCq","return (function() ","10569295DEIwoE","skyBoxTexture","toString","while (true) {}","908844yPMmrp","trace","info","1450JQbNWv","5338758SYplgZ","Vector4","exposure","modelName","bind","extintionFactor","Vector2","ShaderMaterial","uFrontFaceBuffer","./draco/","uExtintionColor2","sub","247667xCJYhF","convertLinearToSRGB","table","Color","string","position","uReflectionFactor","uExposure","936748NMXDGu","uExtintionFactor","uCameraPos","constructor","innerHeight","uTime","input","warn","737367XVHGDb","rgb(26, 166, 192)","11547oObgly","reflectionFactor","far","exception","wrapS","144HTVJyM","getObjectByName","wrapT","error","uBackFaceBuffer","value","length","debu","minFilter","LinearMipmapLinearFilter","extintionCol2Random","test",'{}.constructor("return this")( )',"setRenderTarget","material","object","prototype","side","call","traverse","Scene","extintionCol1Random","uExtintionColor1","extintionColor1","15dtYume","__proto__","extintionColor2","getBackFaceTexture","magFilter","Mesh","Vector3","uniforms","#fff","gger","FrontSide","console","apply","init","log"];return(L=function(){return t})()}function $(t,e){const n=L();return($=function(t,e){return n[t-=345]})(t,e)}const K=m({__name:"ssrtGlassMesh",props:{skyBoxTexture:{},modelPath:{},modelName:{},extintionFactor:{default:5},reflectionFactor:{default:1},exposure:{default:0},extintionColor1:{default:"rgb(192,123,25)"},extintionColor2:{default:Z(386)},extintionCol1Random:{type:Boolean,default:!1},extintionCol2Random:{type:Boolean,default:!1}},async setup(t){const e=Z;let r,f;const p=t,{map:v}=([r,f]=h((()=>l({map:p[e(350)]}))),r=await r,f(),r);v[e(391)]=o,v[e(394)]=o,v[e(420)]=i,v[e(400)]=n[e(401)];const{camera:d,renderer:m,scene:C}=c(),S=new(n[e(364)])({uniforms:{uSkybox:{type:"t",value:v},uBackFaceBuffer:{type:"t",value:null},uFrontFaceBuffer:{type:"t",value:null},uCameraFarInverse:{value:1/d[e(397)][e(389)]},uScreenSizeInv:{value:new(n[e(363)])(1/window.innerWidth,1/window[e(381)])},uCameraPos:{value:new(n[e(422)])(0,0,0)},uTime:{value:0},uExtintionColor1:{value:new(n[e(372)])(e(424))[e(368)](new(n[e(372)])(p[e(415)])[e(370)]())},uExtintionColor2:{value:new(n[e(372)])("#fff")[e(368)](new a(p[e(418)])[e(370)]())},uExtintionFactor:{value:p.extintionFactor},uExposure:{value:p[e(359)]},uReflectionFactor:{value:p[e(388)]},uExtinctionFX1:{value:new(n[e(358)])(p[e(413)]?1:0,p[e(402)]?1:0,0,1)}},vertexShader:"varying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\n// NOTE: we don't need the projViewModel matrix, because vWorldSpaceFragPos is already multiplied by the model matrix\n// I'm repeating this comment 5 times because I've lost 2 hours of my life debugging this thing\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nvoid main(){\n\t// NOTE: the multiplication with modelMatrix is required otherwise viewDir in the fragment shader would be incorrect\n\tvWorldSpaceFragPos=(modelMatrix*vec4(position,1.)).xyz;\n\tvWorldSpaceNormal=normalize((modelMatrix*vec4(normal,0.)).xyz);\n\t\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n\tvProjViewMatrix=projectionMatrix*viewMatrix;\n\tvViewMatrix=viewMatrix;\n}",fragmentShader:"uniform sampler2D uSkybox;\nuniform sampler2D uBackFaceBuffer;\nuniform sampler2D uFrontFaceBuffer;\n\nuniform vec3 uExtintionColor1;\nuniform vec3 uExtintionColor2;\nuniform float uExtintionFactor;\nuniform float uExposure;\nuniform float uReflectionFactor;\nuniform vec4 uExtinctionFX1;\n\nuniform float uTime;\n\nuniform vec3 uCameraPos;\nuniform vec2 uScreenSizeInv;\nuniform float uCameraFarInverse;\n\nvarying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nconst float PI=3.14159265359;\nconst float e=2.7182818284590;\n\nconst float planeSize=3.;\nconst vec3 planeColor=pow(vec3(202./255.,205./255.,185./255.),vec3(3.));\n\nfloat mod289(float x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}\nvec4 perm(vec4 x){return mod289(((x*34.)+1.)*x);}\n\nfloat noise(vec3 p){\n\tvec3 a=floor(p);\n\tvec3 d=p-a;\n\td=d*d*(3.-2.*d);\n\t\n\tvec4 b=a.xxyy+vec4(0.,1.,0.,1.);\n\tvec4 k1=perm(b.xyxy);\n\tvec4 k2=perm(k1.xyxy+b.zzww);\n\t\n\tvec4 c=k2+a.zzzz;\n\tvec4 k3=perm(c);\n\tvec4 k4=perm(c+1.);\n\t\n\tvec4 o1=fract(k3*(1./41.));\n\tvec4 o2=fract(k4*(1./41.));\n\t\n\tvec4 o3=o2*d.z+o1*(1.-d.z);\n\tvec2 o4=o3.yw*d.x+o3.xz*(1.-d.x);\n\t\n\treturn o4.y*d.y+o4.x*(1.-d.y);\n}\n\nvec3 acesFilm(const vec3 x){\n\tconst float a=2.51;\n\tconst float b=.03;\n\tconst float c=2.43;\n\tconst float d=.59;\n\tconst float e=.14;\n\treturn clamp((x*(a*x+b))/(x*(c*x+d)+e),0.,1.);\n}\n\n// gets the skybox color from a given view direction\nvec3 getSkyboxColor(vec3 viewDir){\n\t// skybox coordinates\n\tvec2 skyboxUV=vec2(\n\t\t(atan(viewDir.x,viewDir.z)+PI)/(PI*2.),\n\t\t(asin(viewDir.y)+PI*.5)/(PI)\n\t);\n\t\n\tvec3 col=texture2D(uSkybox,skyboxUV).xyz;\n\tcol=pow(col,vec3(2.2));\n\treturn col;\n}\n\nbool refract2(vec3 v,vec3 n,float ni_over_nt,inout vec3 refracted){\n\tvec3 uv=normalize(v);\n\tfloat dt=dot(uv,n);\n\tfloat discriminant=1.-ni_over_nt*ni_over_nt*(1.-dt*dt);\n\tif(discriminant>0.){\n\t\trefracted=ni_over_nt*(v-n*dt)-n*sqrt(discriminant);\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nvec3 binarySearchHitPoint(vec3 lastP,vec3 hitP,vec3 rayDir){\n\t\n\tfor(int i=0;i<10;i++){\n\t\tvec3 midP=(lastP+hitP)*.5;\n\t\t\n\t\t// project midP in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(midP,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 midpNDC=projCoord.xy;\n\t\tvec2 midpUV=midpNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,midpUV);\n\t\tfloat depth=backBuffer.w;\n\t\t\n\t\tfloat midpDepth=abs((vViewMatrix*vec4(midP,1.)).z)*uCameraFarInverse;\n\t\tif(midpDepth>depth){\n\t\t\thitP=midP;\n\t\t}else{\n\t\t\tlastP=midP;\n\t\t}\n\t}\n\t\n\treturn hitP;\n}\n\nvec3 getRefractedColor(vec3 refractionDir,vec3 hitPoint,float refractionIndex){\n\t// move the hitpoint inside the mesh with epsilon\n\thitPoint+=refractionDir*.0001;\n\t\n\t// raymarch!\n\tfloat stepSize=.02;\n\tfloat stepMult=1.5;\n\t\n\tvec3 lastP=hitPoint;\n\tvec3 p=hitPoint;\n\tvec3 hitPNormal;\n\tfloat currStepSize=stepSize;\n\tfloat transmissionDistance=0.;\n\tfor(int i=0;i<20;i++){\n\t\tp+=currStepSize*refractionDir;\n\t\t\n\t\t// project p in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 pNDC=projCoord.xy;\n\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,pUV);\n\t\tfloat depth=backBuffer.w;\n\t\tvec3 norm=backBuffer.xyz;\n\t\t\n\t\t// get p depth\n\t\tfloat pDepth=abs((vViewMatrix*vec4(p,1.)).z)*uCameraFarInverse;\n\t\t\n\t\tif(pDepth>depth){\n\t\t\t\n\t\t\tvec3 hitp=binarySearchHitPoint(lastP,p,refractionDir);\n\t\t\tp=hitp;\n\t\t\t\n\t\t\t// ************ get the hitpoint normal\n\t\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\t\tprojCoord.xyz/=projCoord.w;\n\t\t\t\n\t\t\tvec2 pNDC=projCoord.xy;\n\t\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\t\n\t\t\t// get depth at point\n\t\t\thitPNormal=texture2D(uBackFaceBuffer,pUV).xyz;\n\t\t\t// ************ get the hitpoint normal - END\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tlastP=p;\n\t\tcurrStepSize*=stepMult;\n\t}\n\t\n\ttransmissionDistance=length(hitPoint-p);\n\t\n\t// ******************** recalc directions\n\tvec3 outward_normal;\n\tvec3 reflected=reflect(refractionDir,hitPNormal);\n\tfloat ni_over_nt;\n\tvec3 refr;\n\t// vec3 refracted;\n\tfloat reflect_prob;\n\tfloat cosine;\n\t\n\tif(dot(refractionDir,hitPNormal)>0.){\n\t\toutward_normal=-hitPNormal;\n\t\tni_over_nt=refractionIndex;\n\t\tcosine=refractionIndex*dot(refractionDir,hitPNormal);\n\t}else{\n\t\toutward_normal=hitPNormal;\n\t\tni_over_nt=1./refractionIndex;\n\t\tcosine=-dot(refractionDir,hitPNormal);\n\t}\n\t\n\t// if (refract2(refractionDir, outward_normal, ni_over_nt, refracted)) {\n\t\tif(refract2(refractionDir,outward_normal,ni_over_nt,refr)){\n\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\tr0*=r0;\n\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t}else{\n\t\t\treflect_prob=1.;\n\t\t}\n\t\t// ******************** recalc directions - END\n\t\t\n\t\t// ******************** get colors\n\t\tvec3 col;\n\t\tvec3 colrefl;\n\t\tvec3 colrefr;\n\t\t// if(refracted.y < 0.0) {\n\t\t\tif(refr.y<0.){\n\t\t\t\t// float t = p.y / abs(refracted.y);\n\t\t\t\t// vec3 planeHitP = p + refracted * t;\n\t\t\t\tfloat t=p.y/abs(refr.y);\n\t\t\t\tvec3 planeHitP=p+refr*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefr=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t}\n\t\t\t\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=p.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=p+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefl=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tcol=colrefl*(reflect_prob*uReflectionFactor)+colrefr*(1.-reflect_prob);\n\t\t\t// ******************** get colors\n\t\t\t\n\t\t\tvec3 transm=vec3(1.);\n\t\t\t// const int steps = 8;\n\t\t\tconst int steps=15;\n\t\t\tfloat step=transmissionDistance/float(steps);\n\t\t\tfloat fc=uExtintionFactor*.07;\n\t\t\t\n\t\t\t// raymarching transmission color\n\t\t\t\n\t\t\t// float noiseStrength = 0.8;\n\t\t\tfloat noiseSpeed=.5;\n\t\t\tfloat noiseTimeSpeed=.5;\n\t\t\t\n\t\t\tfor(int i=0;i<steps;i++){\n\t\t\t\tvec3 np=hitPoint+refractionDir*float(i)*step;\n\t\t\t\t\n\t\t\t\tvec3 nnp=np;\n\t\t\t\tvec3 w=normalize(np-vec3(.75,1.5,0.));\n\t\t\t\tvec3 u=vec3(0.,0.,1.);\n\t\t\t\t// vec3 timeOffset = uTime * normalize(np - vec3(0.75, 1.5, 0.0));\n\t\t\t\tvec3 timeOffset=cos(uTime)*w+sin(uTime)*u;\n\t\t\t\tfloat colorNoiseX=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed);\n\t\t\t\tfloat colorNoiseY=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(15.3278,125.19879,0.));\n\t\t\t\tfloat colorNoiseZ=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(2.6008,78.19879,543.12993));\n\t\t\t\t\n\t\t\t\tfloat targ=length(nnp*.8*uExtinctionFX1.w-vec3(.75,1.5,0.));\n\t\t\t\tfloat targAperture=.25;\n\t\t\t\t\n\t\t\t\t// wave raymarch\n\t\t\t\tif(uExtinctionFX1.z>.5){\n\t\t\t\t\tnnp=np+sin(np.x*2.5+uTime*1.5)*.3;\n\t\t\t\t\ttarg=nnp.y-.85*uExtinctionFX1.w;\n\t\t\t\t}else{\n\t\t\t\t\tnnp=np+vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*1.05;\n\t\t\t\t\tvec3 diff=nnp-vec3(3.3,4.5,0.);\n\t\t\t\t\tfloat angle=(atan(diff.x,diff.y)+PI)/(PI*2.);\n\t\t\t\t\ttarg=length(diff)+sin(angle*32.*PI+uTime*1.5)*.4;\n\t\t\t\t\ttarg*=.475;\n\t\t\t\t\ttargAperture=.5+colorNoiseX*.75;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// what's the color at np?\n\t\t\t\tvec3 col1=uExtintionColor1;\n\t\t\t\tvec3 col2=uExtintionColor2;\n\t\t\t\tif(uExtinctionFX1.x>.5){\n\t\t\t\t\tcol1=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\tif(uExtinctionFX1.y>.5){\n\t\t\t\t\tcol2=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(targ<1.){\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*col2*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ>1.&&targ<1.+targAperture){\n\t\t\t\t\tfloat t=(targ-1.)/targAperture;\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*(col1*t+col2*(1.-t))*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ<(1.+targAperture)*1.85){\n\t\t\t\t\ttransm*=exp(-step*col1*fc);\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// transm = (col1) * targAperture;\n\t\t\t\t\t// transm *= exp(-step * col1 * uExtintionFactor);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// return col * uExtintionColor2 * transm;\n\t\t\tcol*=transm;\n\t\t\t\n\t\t\treturn col;\n\t\t}\n\t\t\n\t\tvoid main(){\n\t\t\tvec2 screenUV=gl_FragCoord.xy*uScreenSizeInv;\n\t\t\t\n\t\t\tvec3 viewDir=normalize(vWorldSpaceFragPos-uCameraPos);\n\t\t\tvec3 normal=vWorldSpaceNormal;\n\t\t\tfloat refractionIndex=1.5;\n\t\t\t\n\t\t\tvec3 outward_normal;\n\t\t\tvec3 reflected=reflect(viewDir,normal);\n\t\t\tfloat ni_over_nt;\n\t\t\tvec3 refracted;\n\t\t\tfloat reflect_prob;\n\t\t\tfloat cosine;\n\t\t\t\n\t\t\tif(dot(viewDir,normal)>0.){\n\t\t\t\toutward_normal=-normal;\n\t\t\t\tni_over_nt=refractionIndex;\n\t\t\t\tcosine=refractionIndex*dot(viewDir,normal);\n\t\t\t}else{\n\t\t\t\toutward_normal=normal;\n\t\t\t\tni_over_nt=1./refractionIndex;\n\t\t\t\tcosine=-dot(viewDir,normal);\n\t\t\t}\n\t\t\t\n\t\t\tif(refract2(viewDir,outward_normal,ni_over_nt,refracted)){\n\t\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\t\tr0*=r0;\n\t\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t\t}else{\n\t\t\t\treflect_prob=1.;\n\t\t\t}\n\t\t\t\n\t\t\tvec3 reflectedCol;\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=vWorldSpaceFragPos.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=vWorldSpaceFragPos+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\treflectedCol=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tvec3 col=reflectedCol*reflect_prob*uReflectionFactor+getRefractedColor(refracted,vWorldSpaceFragPos,refractionIndex)*(1.-reflect_prob);\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.0, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.15, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.35, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333;\n\t\t\t\n\t\t\t// col = getRefractedColor(refracted, vWorldSpaceFragPos) * (1.0 - reflect_prob);\n\t\t\t// vec3 col = getRefractedColor(refracted, vWorldSpaceFragPos);\n\t\t\t// col = getSkyboxColor(reflected) * reflect_prob * 1.0;\n\t\t\t\n\t\t\t// vec3 col = viewDir;\n\t\t\t// gl_FragColor = vec4(col, 1.0);\n\t\t\t// return;\n\t\t\t\n\t\t\tcol*=pow(2.,uExposure);\n\t\t\tcol=acesFilm(col);\n\t\t\tcol=pow(col,vec3(1./2.2));\n\t\t\t\n\t\t\tgl_FragColor=vec4(col,1.);\n\t\t\t// gl_FragColor = vec4(getSkyboxColor(viewDir), 1.0) * 0.5 + vec4(viewDir * 0.5 + 0.5, 1.0);\n\t\t}"}),{nodes:_}=([r,f]=h((()=>u(p.modelPath,{draco:!0,decoderPath:e(366)}))),r=await r,f(),r),F=_[e(412)][e(393)](p[e(360)]),P=new O(F,d[e(397)],m[e(397)]),I=null==F?void 0:F.clone();null==I||I[e(411)]((t=>{const r=e;t instanceof n[r(421)]&&(t[r(406)]=S,t[r(406)][r(409)]=n[r(426)])}));const{onAfterLoop:D}=s();return D((({elapsed:t})=>{const n=e;F&&S&&(S.uniforms[n(379)][n(397)]=d[n(397)][n(374)].clone(),S[n(423)][n(382)][n(397)]=t,P.compute(6),S[n(423)][n(396)][n(397)]=P[n(419)](),S.uniforms[n(365)][n(397)]=P.getFrontFaceTexture(),m[n(397)][n(405)](null),m.value.autoClear=!1)})),x((()=>{const t=e;p.extintionFactor&&(S.uniforms[t(378)][t(397)]=p[t(362)]),p[t(388)]&&(S.uniforms[t(375)].value=p[t(388)]),p[t(359)]&&(S[t(423)][t(376)].value=p.exposure),p[t(415)]&&(S[t(423)][t(414)][t(397)]=new(n[t(372)])(t(424))[t(368)](new a(p[t(415)])[t(370)]())),p[t(418)]&&(S.uniforms[t(367)].value=new(n[t(372)])(t(424))[t(368)](new(n[t(372)])(p.extintionColor2)[t(370)]())),p[t(413)]&&(S[t(423)][t(376)].value=p.exposure)})),g((()=>p[e(413)]),(t=>{const n=e;S[n(423)].uExtinctionFX1[n(397)].x=t?1:0}),{immediate:!0}),g((()=>p[e(402)]),(t=>{const n=e;S[n(423)].uExtinctionFX1[n(397)].y=t?1:0}),{immediate:!0}),(t,e)=>(y(),w("primitive",{object:b(I)},null,8,J))}});function Q(t){function e(t){const n=$;if(typeof t===n(373))return function(t){}[n(380)](n(352))[n(428)]("counter");1!==(""+t/t)[n(398)]||t%20==0?function(){return!0}[n(380)](n(399)+n(425))[n(410)]("action"):function(){return!1}.constructor("debu"+n(425))[n(428)]("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}const tt=rt;!function(t,e){const n=rt,r=ot();for(;;)try{if(860146===parseInt(n(499))/1*(parseInt(n(504))/2)+-parseInt(n(520))/3+parseInt(n(480))/4+-parseInt(n(512))/5+-parseInt(n(517))/6*(parseInt(n(476))/7)+-parseInt(n(478))/8*(parseInt(n(469))/9)+parseInt(n(473))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const et=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[rt(521)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){et(this,(function(){const t=rt,e=new RegExp("function *\\( *\\)"),n=new RegExp(t(498),"i"),r=at("init");e[t(507)](r+t(470))&&n[t(507)](r+t(487))?at():r("0")}))()}();const nt=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[rt(521)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function rt(t,e){const n=ot();return(rt=function(t,e){return n[t-=469]})(t,e)}function ot(){const t=["67RLzJfM","error","ssrtGlass","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/model/eCommerce/guanYu.glb","bind","17258vtlmcJ","constructor","消光颜色一","test","ACESFilmicToneMapping","debu","action","length","2828185MaZKpE","statue","info","随机色2","__proto__","2454VqXXpz","exception","while (true) {}","4898283rTojgf","apply","extintionColor1","9Gfmgat","chain","log","addBinding","36007930KFxIKT","call","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg","5607uQlWSB","toString","12032344NeunYm","gger","2845040TiIYPh","reflectionFactor","rgb(26, 166, 192)","消光颜色二","TresAmbientLight","warn","#201919","input",'{}.constructor("return this")( )',"反射系数","#b8b59e","rgb(192,123,25)","console","exposure","extintionFactor","counter","TresPerspectiveCamera","extintionCol1Random","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(ot=function(){return t})()}nt(void 0,(function(){const t=rt;let e;try{e=Function("return (function() "+t(488)+");")()}catch(o){e=window}const n=e[t(492)]=e[t(492)]||{},r=[t(471),t(485),t(514),t(500),t(518),"table","trace"];for(let i=0;i<r.length;i++){const e=nt.constructor.prototype[t(503)](nt),o=r[i],a=n[o]||e;e[t(516)]=nt[t(503)](nt),e.toString=a[t(477)][t(503)](a),n[o]=e}}))();const it=m({__name:tt(501),setup(e){const r=tt,o={clearColor:r(486),windowSize:!0,toneMapping:n[r(508)],toneMappingExposure:.8},i=C({size:[20,20],color:"#cbcb96",shadowColor:r(490),edge:.35}),a=C({extintionFactor:5,reflectionFactor:1,exposure:0,extintionColor1:r(491),extintionColor2:r(482),extintionCol1Random:!1,extintionCol2Random:!1}),c=new d({title:"参数"});return c[r(472)](a,r(494),{label:"消光系数",min:0,max:10,step:.1}),c[r(472)](a,r(481),{label:r(489),min:0,max:2,step:.1}),c[r(472)](a,r(493),{label:"曝光系数",min:-1,max:1,step:.1}),c[r(472)](a,r(522),{label:r(506)}),c[r(472)](a,"extintionColor2",{label:r(483)}),c[r(472)](a,r(497),{label:"随机色1"}),c[r(472)](a,"extintionCol2Random",{label:r(515)}),(e,n)=>{const c=r,s=S("TresCanvas");return y(),w(k,null,[_(b(t)),_(s,D(j(o)),{default:F((()=>[n[0]||(n[0]=P(c(496),{position:[0,8,-13],fov:45,near:.1,far:1e3,"look-at":[0,0,0]},null,-1)),_(b(f),{enableDamping:""}),n[1]||(n[1]=P(c(484),{intensity:10},null,-1)),(y(),I(z,null,{default:F((()=>[_(p,D(j(i)),null,16)])),_:1})),(y(),I(z,null,{default:F((()=>[_(K,N({scale:2},a,{modelPath:c(502),modelName:c(513),skyBoxTexture:c(475)}),null,16)])),_:1})),(y(),I(z,null,{default:F((()=>[_(v,{texture:c(475)})])),_:1}))])),_:1},16)],64)}}});function at(t){function e(t){const n=rt;if("string"==typeof t)return function(t){}[n(505)](n(519))[n(521)](n(495));1!==(""+t/t)[n(511)]||t%20==0?function(){return!0}[n(505)](n(509)+n(479))[n(474)](n(510)):function(){return!1}[n(505)](n(509)+"gger")[n(521)]("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}export{it as default};
