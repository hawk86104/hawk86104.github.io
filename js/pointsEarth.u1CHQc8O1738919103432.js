import{_ as e}from"./three.CYhYNU4g1738919103432.js";import{e as n,o as t,a}from"./@tresjs.G4idgyWs1738919103432.js";import{P as o}from"./tweakpane.yDiyAAkA1738919103432.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as v,N as p,j as f,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1738919103432.js";import"./@vueuse.DL3Lluw_1738919103432.js";const x=w;!function(e,n){const t=w,a=S();for(;;)try{if(610518===parseInt(t(307))/1+-parseInt(t(303))/2+parseInt(t(288))/3*(-parseInt(t(287))/4)+-parseInt(t(295))/5*(parseInt(t(285))/6)+-parseInt(t(276))/7*(-parseInt(t(338))/8)+-parseInt(t(319))/9+parseInt(t(313))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(318)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(){const e=["TresPoints","length","18qwLFXD","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","8vPSSHj","246702VcoiZk","error","pointsEarth","set","海浪变化速度","TresShaderMaterial","console","1087035cuSZwS","table","uTime","addFolder","wireframeMaterialRef","action","uWaveHeight","TresGroup","1011292WxJhDn","#080820","uniforms","while (true) {}","1185486LgVlrV","#ffffff","rotation","info","log","SRGBColorSpace","12553310SxxIND","TresMeshBasicMaterial","bind","addBinding","uWaveSpeed","apply","6365349ROYXQK","粒子大小","change","string","toString",'{}.constructor("return this")( )',"FrontSide","trace","value","#17c5a9","stateObject","init","TresIcosahedronGeometry","debu","call","#122148","__proto__","color","constructor","568ncEgmG","test","gger","TresCanvas","counter","exception","19649odbfsl","warn","Debug","return (function() ","size","prototype","TresHemisphereLight"];return(S=function(){return e})()}!function(){y(this,(function(){const e=w,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(286),"i"),a=b(e(330));n.test(a+"chain")&&t[e(339)](a+"input")?b():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(318)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=S();return(w=function(e,n){return t[e-=274]})(e,n)}T(void 0,(function(){const e=w;let n;try{n=Function(e(279)+e(324)+");")()}catch(o){n=window}const t=n[e(294)]=n[e(294)]||{},a=[e(311),e(277),e(310),e(289),e(275),e(296),e(326)];for(let r=0;r<a[e(284)];r++){const n=T[e(337)][e(281)][e(315)](T),o=a[r],i=t[o]||n;n[e(335)]=T[e(315)](T),n[e(323)]=i[e(323)][e(315)](i),t[o]=n}}))();const _=r({__name:x(290),async setup(r){const y=x;let S,T;const w={color:y(328),pointSize:4},_={clearColor:y(334),shadows:!1,alpha:!1,outputColorSpace:e[y(312)]},b={color:w[y(336)],wireframe:!0,transparent:!0,opacity:.2},z=([S,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),S=await S,T(),S),j=z[0],E=z[1],P=z[2],D=z[3],I=z[4],k={uniforms:{size:{type:"f",value:w.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(325)]},A=l(),C=l(),W=(new o)[y(298)]({title:y(278)});W[y(316)](w,y(336),{type:y(336)}).on(y(321),(({value:e})=>{const n=y;C.value.color[n(291)](e)})),W[y(316)](k[y(305)][y(280)],y(327),{min:.1,max:10,step:.1,label:y(320)}),W[y(316)](k[y(305)][y(301)],y(327),{min:.01,max:.5,step:.01,label:"海浪高度"}),W[y(316)](k[y(305)][y(317)],y(327),{min:.01,max:1,step:.01,label:y(292)});const{onLoop:H}=n();return H((({delta:e})=>{const n=y;A.value&&(A[n(327)][n(309)].y+=.002,k[n(305)][n(297)].value+=10*e)})),(e,n)=>{const a=y,o=s(a(341));return u(),c(o,d(_,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=p("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),f(m(t),{autoRotate:!0,autoRotateSpeed:2}),p(a(302),{ref_key:"groupRef",ref:A},[p("TresMesh",null,[n[0]||(n[0]=p("TresIcosahedronGeometry",{args:[1,4]},null,-1)),p(a(314),d({ref_key:a(299),ref:C},b),null,16)]),p(a(283),null,[n[1]||(n[1]=p(a(331),{args:[1,128]},null,-1)),p(a(293),h(g(k)),null,16)])],512),n[3]||(n[3]=p(a(282),{args:[a(308),a(304),3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=w;if(typeof e===t(322))return function(e){}[t(337)](t(306)).apply(t(274));1!==(""+e/e)[t(284)]||e%20==0?function(){return!0}[t(337)](t(332)+t(340))[t(333)](t(300)):function(){return!1}[t(337)](t(332)+t(340)).apply(t(329)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
