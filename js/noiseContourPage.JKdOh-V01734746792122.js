import{m as n,e,b as t,U as r}from"./@tresjs.vA_UT8oy1734746792122.js";import{W as o,k as i,cf as s,c6 as a,c4 as u,a0 as c,n as f,b6 as l}from"./three.1FILWcBb1734746792122.js";import{d as v,a6 as p,a3 as m,o as d,D as h,J as g,u as w,F as x,e as y,f as D,g as S,j as R,al as I,m as b}from"./@vue.-THQH3GC1734746792122.js";import"./@vueuse.lqJslAkC1734746792122.js";function E(){const n=["toString","innerWidth","apply","iTime","prototype","422918BxFVyI","while (true) {}","init","2470734nSgMVY","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","return (function() ","3FCKjcL","tShadow","TresSphereGeometry","TresMesh","constructor","2770254YfkfzA","derivatives","value","debu","render","counter","material","call","innerHeight","side","1624DExFhT","renderToScreen","uniforms","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","rotation-x","16893DioKuo","noiseContourMeshRef2","#ffffff","info","76FQVDqh","table","log","gger","bind","width","7491790MOSDRg","function *\\( *\\)","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","chain","480316ECrfQU","114635nqDBAZ","TresMeshPhongMaterial","input","11ikyBhq"];return(E=function(){return n})()}const _=F;!function(n,e){const t=F,r=E();for(;;)try{if(302834===parseInt(t(138))/1+-parseInt(t(178))/2*(parseInt(t(144))/3)+parseInt(t(168))/4*(parseInt(t(179))/5)+parseInt(t(149))/6+parseInt(t(141))/7+-parseInt(t(159))/8*(parseInt(t(164))/9)+parseInt(t(174))/10*(-parseInt(t(182))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[F(135)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){C(this,(function(){const n=F,e=new RegExp(n(175)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(n(140));e.test(r+n(177))&&t.test(r+n(181))?z():r("0")}))()}();const P=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[F(135)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();P(void 0,(function(){const n=F;let e;try{e=Function(n(143)+'{}.constructor("return this")( ));')()}catch(o){e=window}const t=e.console=e.console||{},r=[n(170),"warn",n(167),"error","exception",n(169),"trace"];for(let i=0;i<r.length;i++){const e=P[n(148)][n(137)].bind(P),o=r[i],s=t[o]||e;e.__proto__=P.bind(P),e[n(183)]=s[n(183)][n(172)](s),t[o]=e}}))();const T=[_(158),_(163)],M=[_(158)];function F(n,e){const t=E();return(F=function(n,e){return t[n-=135]})(n,e)}const N=_(176),U=_(142),j=_(162),k=v({__name:"noiseContour",async setup(r){const v=_;let y,D;const{camera:S,renderer:R,scene:I,sizes:b}=n(),E=([y,D]=p((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),y=await y,D(),y),{onLoop:C,onAfterLoop:P}=e(),F=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),k=new i(window[v(184)],window[v(157)]);let z=null;const A=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:k}},vertexShader:N,fragmentShader:U}),B=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:E}},vertexShader:N,fragmentShader:j});return B[v(160)]=!0,B[v(155)].extensions[v(150)]=!0,m((()=>{const n=v;b[n(173)][n(151)]&&(z=new a(R[n(151)]),z.addPass(new u(I[n(151)],S.value)),z.addPass(A),z.addPass(B))})),C((({elapsed:n})=>{const e=v;R.value[e(153)](I[e(151)],S[e(151)],F),A[e(161)][e(145)][e(151)]=F.texture,B.uniforms[e(136)][e(151)]=n})),P((()=>{z&&z[v(153)]()})),(n,e)=>{const t=v;return d(),h(x,null,[g(t(147),{ref:t(165),side:w(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g("TresBoxGeometry",{args:[400,400,400]},null,-1),g(t(180),{color:t(166),shininess:0},null,-1)]),8,T),g(t(147),{ref:"noiseContourMeshRef1",side:w(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g(t(146),{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:t(166),shininess:0},null,-1)]),8,M)],64)}}});function z(n){function e(n){const t=F;if("string"==typeof n)return function(n){}.constructor(t(139)).apply(t(154));1!==(""+n/n).length||n%20==0?function(){return!0}[t(148)](t(152)+t(171))[t(156)]("action"):function(){return!1}[t(148)](t(152)+t(171)).apply("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const A=Z;!function(n,e){const t=Z,r=Q();for(;;)try{if(331237===-parseInt(t(320))/1*(parseInt(t(325))/2)+-parseInt(t(347))/3+-parseInt(t(331))/4+-parseInt(t(351))/5+parseInt(t(334))/6*(-parseInt(t(345))/7)+-parseInt(t(350))/8+parseInt(t(337))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const B=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Z(355)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){B(this,(function(){const n=Z,e=new RegExp("function *\\( *\\)"),t=new RegExp(n(358),"i"),r=$("init");e[n(344)](r+n(357))&&t.test(r+n(338))?$():r("0")}))()}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Z(355)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function Q(){const n=["20311146ivwItF","input","#ffffff","red","length","prototype","action","test","3598UHxpwQ","table","1841460fiecFR","error","TresDirectionalLight","2958368zgMyrp","999725QqjoMM","trace","return (function() ","gger","apply","stateObject","chain","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","5811kJHtgm","string","constructor","debu","perspectiveCameraRef","226QMFsww","while (true) {}","bind","noiseContourPage","counter","TresPerspectiveCamera","261228VhwzSc","log","toString","234fBeyTL","call","warn"];return(Q=function(){return n})()}L(void 0,(function(){const n=Z,e=function(){const n=Z;let e;try{e=Function(n(353)+'{}.constructor("return this")( ));')()}catch(t){e=window}return e}(),t=e.console=e.console||{},r=[n(332),n(336),"info",n(348),"exception",n(346),n(352)];for(let o=0;o<r[n(341)];o++){const e=L[n(322)][n(342)].bind(L),i=r[o],s=t[i]||e;e[n(319)]=L[n(327)](L),e[n(333)]=s[n(333)][n(327)](s),t[i]=e}}))();const V={ref:A(324),position:[600,750,-1221],fov:45,near:1,far:1e4};function Z(n,e){const t=Q();return(Z=function(n,e){return t[n-=319]})(n,e)}const q=v({__name:A(328),setup(n){const e={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0};return(n,t)=>{const o=Z,i=y("TresCanvas");return d(),D(i,b(e,{"window-size":""}),{default:S((()=>[g(o(330),V,null,512),R(w(r)),t[0]||(t[0]=g("TresAmbientLight",{color:o(339)},null,-1)),t[1]||(t[1]=g(o(349),{position:[400,400,400],intensity:1,color:o(340)},null,-1)),(d(),D(I,null,{default:S((()=>[R(k)])),_:1}))])),_:1},16)}}});function $(n){function e(n){const t=Z;if(typeof n===t(321))return function(n){}.constructor(t(326))[t(355)](t(329));1!==(""+n/n)[t(341)]||n%20==0?function(){return!0}[t(322)](t(323)+t(354))[t(335)](t(343)):function(){return!1}[t(322)](t(323)+t(354))[t(355)](t(356)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{q as default};
