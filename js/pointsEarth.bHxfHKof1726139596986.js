import{_ as e}from"./three.ewwqFbMB1726139596986.js";import{U as n,Y as t,z as a}from"./@tresjs.ml1V726H1726139596986.js";import{P as o}from"./tweakpane.yHWGBmom1726139596986.js";import{d as r,a4 as i,Y as l,e as s,o as u,f as c,g as f,j as v,u as p,L as m,m as d,aj as h,ak as g}from"./@vue.JNsx1iN61726139596986.js";import"./@vueuse.leIfNolX1726139596986.js";const x=j;!function(e,n){const t=j,a=T();for(;;)try{if(777059===parseInt(t(542))/1+-parseInt(t(525))/2+parseInt(t(522))/3+-parseInt(t(531))/4+parseInt(t(538))/5+parseInt(t(537))/6*(-parseInt(t(515))/7)+-parseInt(t(547))/8*(-parseInt(t(535))/9))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(503)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=j,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(495),"i"),a=P(e(502));n[e(529)](a+e(539))&&t[e(529)](a+e(494))?P():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(503)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(){const e=["4513464jPsjKL","change","constructor","1444368GSMMqv","groupRef","#17c5a9","while (true) {}","test","FrontSide","1804784VagHOh","value","TresPerspectiveCamera","length","9lSbUfW","rotation","78rQYKIq","691605KKJtty","chain","set","call","88344qlbCqa","uniforms","uWaveSpeed","TresCanvas","#122148","14002888oKduBP","海浪变化速度","log","info","pointSize","海浪高度","table","addFolder","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresShaderMaterial","TresMesh","exception","__proto__","warn","Debug","init","apply","TresIcosahedronGeometry","SRGBColorSpace","pointsEarth","color","toString","#ffffff","#080820","TresMeshBasicMaterial","gger","size","addBinding","824425BxjKSE","wireframeMaterialRef","bind","prototype","console","string","TresGroup"];return(T=function(){return e})()}S(void 0,(function(){const e=j;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(519)]=n[e(519)]||{},a=[e(488),e(500),e(489),"error",e(498),e(492),"trace"];for(let r=0;r<a[e(534)];r++){const n=S[e(524)][e(518)][e(517)](S),o=a[r],i=t[o]||n;n[e(499)]=S[e(517)](S),n[e(508)]=i[e(508)].bind(i),t[o]=n}}))();const b=m(x(533),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),w=m(x(504),{args:[1,4]},null,-1),_=m(x(504),{args:[1,128]},null,-1),z=m("TresHemisphereLight",{args:[x(509),x(510),3]},null,-1);function j(e,n){const t=T();return(j=function(e,n){return t[e-=488]})(e,n)}const E=r({__name:x(506),async setup(r){const y=x;let S,T;const j={color:y(527),pointSize:4},E={clearColor:y(546),shadows:!1,alpha:!1,outputColorSpace:e[y(505)]},P={color:j[y(507)],wireframe:!0,transparent:!0,opacity:.2},D=([S,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),S=await S,T(),S),C=D[0],I=D[1],k=D[2],A=D[3],B=D[4],M={uniforms:{size:{type:"f",value:j[y(490)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:k},elevTexture:{type:"t",value:A},alphaTexture:{type:"t",value:B},earthTexture:{type:"t",value:C},starTexture:{type:"t",value:I}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(530)]},U=l(),W=l(),H=(new o)[y(493)]({title:y(501)});H.addBinding(j,y(507),{type:y(507)}).on(y(523),(({value:e})=>{const n=y;W[n(532)][n(507)][n(540)](e)})),H.addBinding(M[y(543)][y(513)],"value",{min:.1,max:10,step:.1,label:"粒子大小"}),H[y(514)](M.uniforms.uWaveHeight,y(532),{min:.01,max:.5,step:.01,label:y(491)}),H.addBinding(M.uniforms[y(544)],"value",{min:.01,max:1,step:.01,label:y(548)});const{onLoop:L}=n();return L((({delta:e})=>{const n=y;U[n(532)]&&(U[n(532)][n(536)].y+=.002,M[n(543)].uTime.value+=10*e)})),(e,n)=>{const a=y,o=s(a(545));return u(),c(o,d(E,{"window-size":""}),{default:f((()=>[b,v(p(t),{autoRotate:!0,autoRotateSpeed:2}),m(a(521),{ref_key:a(526),ref:U},[m(a(497),null,[w,m(a(511),d({ref_key:a(516),ref:W},P),null,16)]),m("TresPoints",null,[_,m(a(496),h(g(M)),null,16)])],512),z])),_:1},16)}}});function P(e){function n(e){const t=j;if(typeof e===t(520))return function(e){}.constructor(t(528)).apply("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(524)]("debu"+t(512))[t(541)]("action"):function(){return!1}[t(524)]("debu"+t(512)).apply("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
