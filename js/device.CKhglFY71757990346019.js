import{A as e,cl as a,aC as n,aA as r,aB as s,cm as t,cn as o,a as i,co as c,cF as v,n as d,d2 as l,C as m}from"./three.DHXbQd-f1757990346019.js";let u=new m("#0fb1fb");const w=new e({color:u,transparent:!0,opacity:.3}),p=new s({color:new m(u),depthTest:!0,transparent:!0}),x=e=>{const s=[];e.traverse((e=>{e.isMesh&&(s.push(e.geometry),e.material=w)}));const t=a(s),o=new n(t,6.137*Math.PI),i=new r(o);return p.opacity=1,i.material=p,i},f=0,b=.972,T=.21,g=(e,a,n,r,s)=>{const m=new t(e,a),u=new o(new i(r,s),b,T,f),w=new c(n);w.renderToScreen=!1,w.addPass(m),w.addPass(u);const p=new v(new d({uniforms:{baseTexture:{value:null},bloomTexture:{value:w.renderTarget2.texture}},vertexShader:"varying vec2 vUv;\nvoid main(){\n\tvUv=uv;\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform sampler2D baseTexture;\nuniform sampler2D bloomTexture;\nvarying vec2 vUv;\nvoid main(){\n\tgl_FragColor=(texture2D(baseTexture,vUv)+vec4(1.)*texture2D(bloomTexture,vUv));\n}",defines:{}}),"baseTexture");p.needsSwap=!0;const x=new l,g=new c(n);return g.addPass(m),g.addPass(p),g.addPass(x),{finalComposer:g,effectComposer:w,renderScene:m,bloomPass:u}};export{x as r,g as u};
