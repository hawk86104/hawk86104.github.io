import{_ as e}from"./three.3esZ7Hzr1726652192279.js";import{U as n,Y as t,z as a}from"./@tresjs.UGbbWZf51726652192279.js";import{P as o}from"./tweakpane.yHWGBmom1726652192279.js";import{d as r,a4 as i,Y as l,e as s,o as u,f as c,g as p,j as f,u as v,L as m,m as d,aj as h,ak as g}from"./@vue.JNsx1iN61726652192279.js";import"./@vueuse.OdTlFP151726652192279.js";const x=S;!function(e,n){const t=S,a=j();for(;;)try{if(114710===-parseInt(t(119))/1*(-parseInt(t(148))/2)+-parseInt(t(158))/3*(parseInt(t(115))/4)+parseInt(t(131))/5*(parseInt(t(145))/6)+parseInt(t(120))/7+-parseInt(t(123))/8*(parseInt(t(137))/9)+-parseInt(t(113))/10+parseInt(t(111))/11)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(133)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=S,n=new RegExp(e(124)),t=new RegExp(e(150),"i"),a=P(e(134));n.test(a+e(132))&&t.test(a+e(143))?P():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(e,n){const t=j();return(S=function(e,n){return t[e-=103]})(e,n)}T(void 0,(function(){const e=S;let n;try{n=Function(e(163)+'{}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(155)]=n.console||{},a=[e(136),e(130),"info",e(156),e(159),e(144),e(109)];for(let r=0;r<a.length;r++){const n=T.constructor.prototype[e(118)](T),o=a[r],i=t[o]||n;n[e(151)]=T[e(118)](T),n[e(112)]=i.toString[e(118)](i),t[o]=n}}))();const w=m(x(147),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=m("TresIcosahedronGeometry",{args:[1,4]},null,-1),b=m("TresIcosahedronGeometry",{args:[1,128]},null,-1),z=m(x(108),{args:["#ffffff",x(161),3]},null,-1);function j(){const e=["TresShaderMaterial","uTime","TresMesh","warn","285620suWqyR","chain","apply","init","action","log","16488XWisjA","gger","while (true) {}","addBinding","#17c5a9","TresPoints","input","table","6vRmtUQ","debu","TresPerspectiveCamera","2Rzqmgf","FrontSide","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","value","length","rotation","console","error","Debug","2682iVArXh","exception","set","#080820","size","return (function() ","constructor","stateObject","pointsEarth","counter","uWaveSpeed","TresHemisphereLight","trace","color","3337851owpErG","toString","989880QlFIqR","SRGBColorSpace","268QIqnDG","uniforms","string","bind","21679PQqROi","124320XiDeqS","change","addFolder","552CqmBMi","function *\\( *\\)","TresCanvas","TresMeshBasicMaterial"];return(j=function(){return e})()}const E=r({__name:x(105),async setup(r){const y=x;let T,S;const j={color:y(141),pointSize:4},E={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[y(114)]},P={color:j[y(110)],wireframe:!0,transparent:!0,opacity:.2},D=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),I=D[0],A=D[1],R=D[2],C=D[3],k=D[4],U={uniforms:{size:{type:"f",value:j.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:R},elevTexture:{type:"t",value:C},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:I},starTexture:{type:"t",value:A}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(149)]},W=l(),M=l(),q=(new o)[y(122)]({title:y(157)});q[y(140)](j,y(110),{type:y(110)}).on(y(121),(({value:e})=>{const n=y;M[n(152)][n(110)][n(160)](e)})),q[y(140)](U[y(116)][y(162)],y(152),{min:.1,max:10,step:.1,label:"粒子大小"}),q[y(140)](U[y(116)].uWaveHeight,y(152),{min:.01,max:.5,step:.01,label:"海浪高度"}),q.addBinding(U[y(116)][y(107)],y(152),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:B}=n();return B((({delta:e})=>{const n=y;W.value&&(W[n(152)][n(154)].y+=.002,U[n(116)][n(128)][n(152)]+=10*e)})),(e,n)=>{const a=y,o=s(a(125));return u(),c(o,d(E,{"window-size":""}),{default:p((()=>[w,f(v(t),{autoRotate:!0,autoRotateSpeed:2}),m("TresGroup",{ref_key:"groupRef",ref:W},[m(a(129),null,[_,m(a(126),d({ref_key:"wireframeMaterialRef",ref:M},P),null,16)]),m(a(142),null,[b,m(a(127),h(g(U)),null,16)])],512),z])),_:1},16)}}});function P(e){function n(e){const t=S;if(typeof e===t(117))return function(e){}[t(103)](t(139))[t(133)](t(106));1!==(""+e/e)[t(153)]||e%20==0?function(){return!0}[t(103)](t(146)+t(138)).call(t(135)):function(){return!1}[t(103)]("debu"+t(138))[t(133)](t(104)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
