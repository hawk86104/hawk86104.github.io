import{_ as e}from"./three.GKtOCofD1728446741233.js";import{U as n,Y as t,z as a}from"./@tresjs.2zzrlbpQ1728446741233.js";import{P as o}from"./tweakpane.yHWGBmom1728446741233.js";import{d as r,a4 as i,Y as l,e as s,o as u,f as c,g as f,j as p,u as v,L as m,m as d,aj as h,ak as g}from"./@vue.JNsx1iN61728446741233.js";import"./@vueuse.M29bYW2K1728446741233.js";const x=j;!function(e,n){const t=j,a=T();for(;;)try{if(991682===-parseInt(t(150))/1*(parseInt(t(121))/2)+parseInt(t(146))/3+-parseInt(t(158))/4+parseInt(t(119))/5*(-parseInt(t(149))/6)+parseInt(t(166))/7+-parseInt(t(143))/8*(parseInt(t(114))/9)+parseInt(t(154))/10*(parseInt(t(109))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(){const e=["while (true) {}","toString","color","debu","7517735hKmbJA","TresHemisphereLight","2468IPPbRa","#ffffff","bind","constructor","SRGBColorSpace","counter","TresGroup","trace","exception","info","value","TresMesh",'{}.constructor("return this")( )',"warn","log","TresPoints","set","#122148","addBinding","#080820","size","prototype","8574296FswfSb","uWaveHeight","error","4757970VTGztZ","function *\\( *\\)","Debug","6KyenkR","1127oPZIZR","apply","TresIcosahedronGeometry","gger","22490760TjiaAC","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uniforms","table","2834716AXyzHr","uTime","stateObject","FrontSide","pointsEarth","TresCanvas","init","change","12819429bZfSgQ","rotation","chain","call","海浪变化速度","__proto__","test","TresPerspectiveCamera","11Hvugbx","TresShaderMaterial","console","length","action","9RCXHgs"];return(T=function(){return e})()}!function(){y(this,(function(){const e=j,n=new RegExp(e(147)),t=new RegExp(e(155),"i"),a=E(e(164));n[e(172)](a+e(168))&&t[e(172)](a+"input")?E():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(151)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();S(void 0,(function(){const e=j;let n;try{n=Function("return (function() "+e(133)+");")()}catch(o){n=window}const t=n[e(111)]=n[e(111)]||{},a=[e(135),e(134),e(130),e(145),e(129),e(157),e(128)];for(let r=0;r<a[e(112)];r++){const n=S[e(124)][e(142)][e(123)](S),o=a[r],i=t[o]||n;n[e(171)]=S.bind(S),n[e(116)]=i.toString[e(123)](i),t[o]=n}}))();const b=m(x(173),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),w=m(x(152),{args:[1,4]},null,-1),_=m(x(152),{args:[1,128]},null,-1),z=m(x(120),{args:[x(122),x(140),3]},null,-1);function j(e,n){const t=T();return(j=function(e,n){return t[e-=109]})(e,n)}const P=r({__name:x(162),async setup(r){const y=x;let T,S;const j={color:"#17c5a9",pointSize:4},P={clearColor:y(138),shadows:!1,alpha:!1,outputColorSpace:e[y(125)]},E={color:j.color,wireframe:!0,transparent:!0,opacity:.2},D=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),I=D[0],A=D[1],C=D[2],k=D[3],R=D[4],H={uniforms:{size:{type:"f",value:j.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:C},elevTexture:{type:"t",value:k},alphaTexture:{type:"t",value:R},earthTexture:{type:"t",value:I},starTexture:{type:"t",value:A}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(161)]},U=l(),M=l(),W=(new o).addFolder({title:y(148)});W[y(139)](j,y(117),{type:"color"}).on(y(165),(({value:e})=>{const n=y;M[n(131)][n(117)][n(137)](e)})),W[y(139)](H[y(156)][y(141)],y(131),{min:.1,max:10,step:.1,label:"粒子大小"}),W[y(139)](H.uniforms[y(144)],y(131),{min:.01,max:.5,step:.01,label:"海浪高度"}),W[y(139)](H[y(156)].uWaveSpeed,"value",{min:.01,max:1,step:.01,label:y(170)});const{onLoop:F}=n();return F((({delta:e})=>{const n=y;U[n(131)]&&(U.value[n(167)].y+=.002,H.uniforms[n(159)][n(131)]+=10*e)})),(e,n)=>{const a=y,o=s(a(163));return u(),c(o,d(P,{"window-size":""}),{default:f((()=>[b,p(v(t),{autoRotate:!0,autoRotateSpeed:2}),m(a(127),{ref_key:"groupRef",ref:U},[m(a(132),null,[w,m("TresMeshBasicMaterial",d({ref_key:"wireframeMaterialRef",ref:M},E),null,16)]),m(a(136),null,[_,m(a(110),h(g(H)),null,16)])],512),z])),_:1},16)}}});function E(e){function n(e){const t=j;if("string"==typeof e)return function(e){}[t(124)](t(115)).apply(t(126));1!==(""+e/e)[t(112)]||e%20==0?function(){return!0}.constructor(t(118)+t(153))[t(169)](t(113)):function(){return!1}[t(124)](t(118)+"gger")[t(151)](t(160)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{P as default};
