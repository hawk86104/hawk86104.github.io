import{a1 as C,l as _,aD as g,bj as R,br as k,b3 as v,cl as x,a6 as B,o as f,c as p,G,H as L,Y as h,L as u,b6 as M,az as S,a9 as E}from"./vendor.Ho_QeWdl1716259444403.js";import{l as Y}from"./utils.4h83y7o61716259444403.js";const j=["position","rotation-y","scale"],J={renderOrder:3e3},N=["args"],V=["map","side","color"],y=6e4,D=C({__name:"roadLight",props:{geoJson:{},color:{default:"#ffff00"},position:{default:[1837.0641427711184,30,-457.0929823910632]},radius:{default:2},rotationY:{default:-.3866683251512052},scale:{default:1.5083171193254858},speed:{default:1}},async setup(w){let o,a;const e=w,b=_(),r=_(),{map:t}=([o,a]=g(()=>R({map:"./plugins/digitalCity/image/line.png"})),o=await o,a(),o);t.needsUpdate=!0,t.wrapS=t.wrapT=k,t.repeat.set(1,1);const d=([o,a]=g(()=>Y(e.geoJson)),o=await o,a(),o),n=[-31.258949,0,-121.465782];let m=[];for(var c=0;c<d.length;c++){const l=d[c],i=[];l.geometry.coordinates.forEach(s=>{i.push(new v((s[1]+n[0])*y,n[1],(s[0]+n[2])*y))}),m.push(new x(i))}B(()=>{e.color&&r.value&&(r.value.color=new S(e.color))});const{onLoop:T}=E();return T(({delta:l})=>{t.offset.x-=Math.random()/20*e.speed}),(l,i)=>(f(),p("TresGroup",{ref_key:"tgRef",ref:b,position:e.position,"rotation-y":e.rotationY,scale:e.scale},[(f(!0),p(G,null,L(u(m),s=>(f(),p("TresMesh",J,[h("TresTubeGeometry",{args:[s,64,e.radius,20,!1]},null,8,N),h("TresMeshBasicMaterial",{ref_for:!0,ref_key:"tmbmRef",ref:r,map:u(t),side:u(M),transparent:!0,color:e.color},null,8,V)]))),256))],8,j))}});export{D as _};
