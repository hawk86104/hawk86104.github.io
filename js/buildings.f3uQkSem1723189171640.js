import{u as t,_ as n,a as o}from"./mergeTres.pdkNISC41723189171640.js";import{l as r}from"./utils.ty42eHJj1723189171640.js";import{$ as e}from"./@tresjs.LTwFwASm1723189171640.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.Q1VpS3901723189171640.js";import{_ as x}from"./@fesjs.92jMy6FJ1723189171640.js";import"./@amap.Lu-L8G0q1723189171640.js";import"./pinia.iN3nUGv81723189171640.js";import"./three.5MXJ6W7w1723189171640.js";import"./three-mesh-bvh.DYOnGaSM1723189171640.js";import"./tweakpane.yHWGBmom1723189171640.js";import"./@vueuse.oQlm8k6P1723189171640.js";import"./vue-router.frQYH8jd1723189171640.js";import"./lodash-es.nFpJXAf-1723189171640.js";import"./@qlin.yHhFDldE1723189171640.js";import"./@floating-ui.BPbuo5Gx1723189171640.js";import"./@juggle.7yjBMqoW1723189171640.js";const w=z;function b(){const t=["action","exp","counter","buildings","bind","tbgRef","console","push","positionArray","TresGroup","cameraState","customCoords","chain","uniforms","__proto__","2069728TGvEEs","581tBssMY","exception","trace","273744XTHfik","normal","apply","debu","string","length","toString","TresMesh","test","input","140vhSkCI","u_zoom",'{}.constructor("return this")( )',"constructor","function *\\( *\\)","TresShaderMaterial","TresBufferGeometry","10jfKcRj","u_near","lngLatToCoord","faceUv","853822JDDevi","43458bkNpoG","4796418lYQZsV","u_far","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","gger","while (true) {}","112304eZulyt","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","value","stateObject","table","error","2087136BCxgXr","mapHandle","uvArray","init","prototype","near","info","far","buildingModels"];return(b=function(){return t})()}!function(t,n){const o=z,r=b();for(;;)try{if(991671===-parseInt(o(237))/1+parseInt(o(238))/2+-parseInt(o(239))/3+-parseInt(o(212))/4*(parseInt(o(233))/5)+parseInt(o(216))/6+parseInt(o(213))/7*(parseInt(o(244))/8)+-parseInt(o(250))/9*(-parseInt(o(226))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(218)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){I(this,(function(){const t=z,n=new RegExp(t(230)),o=new RegExp(t(245),"i"),r=P(t(253));n[t(224)](r+t(209))&&o[t(224)](r+t(225))?P():r("0")}))()}();const j=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[z(218)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();j(void 0,(function(){const t=z,n=function(){const t=z;let n;try{n=Function("return (function() "+t(228)+");")()}catch(o){n=window}return n}(),o=n[t(203)]=n[t(203)]||{},r=["log","warn",t(256),t(249),t(214),t(248),t(215)];for(let e=0;e<r[t(221)];e++){const n=j.constructor[t(254)].bind(j),a=r[e],i=o[a]||n;n[t(211)]=j.bind(j),n.toString=i[t(222)][t(201)](i),o[a]=n}}))();const S=["position",w(236),w(217)];function z(t,n){const o=b();return(z=function(t,n){return o[t-=201]})(t,n)}const R=a({__name:w(258),setup(n){const o=t(),a=t=>{const n=z;for(let r=0;r<t[n(221)];r+=3){const e=[t[r],t[r+1]],a=o[n(251)][n(208)][n(235)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[z(207)]&&(async()=>{const t=z,n=await r(t(241),t(262));for(let o=0;o<n[t(221)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(236)]),l=new Float32Array(r.geometry[t(221)]);d[t(204)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;o[t(207)]&&(g[t(210)][t(227)].value=o[t(251)].getZoom(),g[t(210)][t(234)][t(246)]=o[t(207)][t(255)],g[t(210)][t(240)][t(246)]=o[t(207)][t(257)])})),(t,n)=>{const o=z;return c(),s(o(206),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(223),{key:""+n},[p(r(232),{ref_for:!0,ref:r(202),position:[t[r(205)],3],faceUv:[t[r(252)],2],normal:[t.normalArray,3]},null,8,S),p(r(231),v({ref_for:!0},g),null,16)])})),128))])}}});function P(t){function n(t){const o=z;if(typeof t===o(220))return function(t){}.constructor(o(243))[o(218)](o(261));1!==(""+t/t)[o(221)]||t%20==0?function(){return!0}.constructor("debu"+o(242)).call(o(259)):function(){return!1}[o(229)](o(219)+o(242))[o(218)](o(247)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=L;!function(t,n){const o=L,r=D();for(;;)try{if(319859===parseInt(o(422))/1+-parseInt(o(409))/2*(parseInt(o(418))/3)+-parseInt(o(388))/4+-parseInt(o(386))/5+parseInt(o(401))/6*(parseInt(o(398))/7)+-parseInt(o(423))/8*(parseInt(o(400))/9)+-parseInt(o(420))/10*(-parseInt(o(404))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[L(415)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=L,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(410),"i"),r=T("init");n[t(419)](r+t(426))&&o.test(r+t(394))?T():r("0")}))()}();const k=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[L(415)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function D(){const t=["96XqfBev","table","info","11759KZctYm","action","return (function() ","exception","darkblue","678338eNzlrm","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","trace","console","log","apply","toString","tcRef","3PcMJnR","test","11810qCppEE","string","274714DrHqly","4832024jGhGbH","error","while (true) {}","chain","TresCanvas","1788945fqbfdY","__proto__","47740IdVxRc","counter","debu",'{}.constructor("return this")( )',"gger","constructor","input","length","data-v-40288e17","call","41804HXGlhn","stateObject","9HLhfpN"];return(D=function(){return t})()}k(void 0,(function(){const t=L,n=function(){const t=L;let n;try{n=Function(t(406)+t(391)+");")()}catch(o){n=window}return n}(),o=n.console=n[t(413)]||{},r=[t(414),"warn",t(403),t(424),t(407),t(402),t(412)];for(let e=0;e<r.length;e++){const n=k[t(393)].prototype[t(411)](k),a=r[e],i=o[a]||n;n[t(387)]=k[t(411)](k),n[t(416)]=i[t(416)][t(411)](i),o[a]=n}}))();const E=t=>(C(A(396)),t=t(),y(),t),M=E((()=>p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1))),U=E((()=>p("TresAmbientLight",{intensity:.5},null,-1)));function L(t,n){const o=D();return(L=function(t,n){return o[t-=386]})(t,n)}function T(t){function n(t){const o=L;if(typeof t===o(421))return function(t){}[o(393)](o(425))[o(415)](o(389));1!==(""+t/t)[o(395)]||t%20==0?function(){return!0}[o(393)](o(390)+o(392))[o(397)](o(405)):function(){return!1}[o(393)](o(390)+o(392))[o(415)](o(399)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const N=x(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=L,l=d(i(427));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(408)}),g(l,v({id:"tresCanvas",ref:i(417)},e),{default:m((()=>[M,U,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{N as default};
