import{z as t,a6 as e}from"./three.Bhn4-0ry1761276103973.js";import{h as a}from"./heatmap.js-fix.DoJI9SL91761276103973.js";import{d as n,a3 as o,G as s,o as i,I as r,a9 as l,aa as h}from"./@vue.CKlgtJke1761276103973.js";const v=["args","rotate-x"],u=n({__name:"heatmapJS",props:{Plane:{default:[50,50,1e3,1e3]},show2dCanvas:{type:Boolean,default:!0},heightRatio:{default:6}},setup(n,{expose:u}){const p=n;let d=null;const g=(t,e)=>Math.round(10*(Math.random()*(t-e+1)+e))/10;let m=null;const c=t=>{if(t);else{let e=0;for(t=[];e<2e3;)t.push({x:g(1,256),y:g(1,256),value:g(1,6)}),e++}d.setData({max:12,data:t}),f.needsUpdate=!0},f=new t((m=document.createElement("heatmap-canvas"),m.width=100,m.height=100,m.style.position="absolute",m.style.top="0",m.style.left="0",document.body.appendChild(m),d=a.create({container:m,width:256,height:256,blur:".8",radius:10}),d)._renderer.canvas);c();const y={transparent:!0,side:e,vertexShader:"\n\tuniform sampler2D heightMap;\n\tuniform float heightRatio;\n\tvarying vec2 vUv;\n\tvarying float hValue;\n\tvarying vec3 cl;\n\tvoid main() {\n\t  vUv = uv;\n\t  vec3 pos = position;\n\t  cl = texture2D(heightMap, vUv).rgb;\n\t  hValue = texture2D(heightMap, vUv).r;\n\t  pos.y = hValue * heightRatio;\n\t  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\n\t}",fragmentShader:"\n\tvarying float hValue;\n\tvarying vec3 cl;\n\tvoid main() {\n\t\tfloat v = abs(hValue - 1.);\n\t\tgl_FragColor = vec4(cl, .8 - v * v*1.1) ; \n\t}",uniforms:{heightMap:{type:"t",value:f},heightRatio:{value:p.heightRatio}}};return o(()=>{m.style.display=""+(p.show2dCanvas?"block":"none"),p.heightRatio&&(y.uniforms.heightRatio.value=p.heightRatio)}),u({setData:c}),(t,e)=>(i(),s("TresMesh",null,[r("TresPlaneGeometry",{args:p.Plane,"rotate-x":.5*-Math.PI},null,8,v),r("TresShaderMaterial",l(h(y)),null,16)]))}});export{u as _};
