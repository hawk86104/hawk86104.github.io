import{a6 as e,x as n}from"./three.a9V66irq1725721021019.js";import{$ as t,d as a,N as o}from"./@tresjs.bIWdfO9a1725721021019.js";import{P as r}from"./tweakpane.yHWGBmom1725721021019.js";import{d as i,a5 as l,Y as s,e as u,o as c,f,g as p,j as v,u as m,L as d,m as h,aj as g,ak as x}from"./@vue._6MD2XyK1725721021019.js";import"./@vueuse.Ex-1AOlz1725721021019.js";const y=T;!function(e,n){const t=T,a=b();for(;;)try{if(322644===parseInt(t(537))/1*(-parseInt(t(549))/2)+parseInt(t(517))/3+-parseInt(t(530))/4+parseInt(t(522))/5*(parseInt(t(527))/6)+-parseInt(t(524))/7+parseInt(t(509))/8*(parseInt(t(513))/9)+-parseInt(t(500))/10*(-parseInt(t(539))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(516)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(e,n){const t=b();return(T=function(e,n){return t[e-=495]})(e,n)}!function(){w(this,(function(){const e=T,n=new RegExp(e(523)),t=new RegExp(e(518),"i"),a=D("init");n[e(557)](a+"chain")&&t[e(557)](a+e(540))?D():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(516)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function b(){const e=["console","TresShaderMaterial","uWaveHeight","SRGBColorSpace","groupRef","TresMesh","action","256212vvqSGp","TresGroup","stateObject","uWaveSpeed","rotation","trace","TresMeshBasicMaterial","addBinding","test","TresPoints","info","uniforms","__proto__","warn","value","10aVwYiS","gger","prototype","pointSize","wireframeMaterialRef","set","counter","return (function() ","TresHemisphereLight","5992UHyywB","change","#ffffff","uTime","3879Cvfgwc","海浪变化速度","size","apply","296466QAUGKG","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","log","TresIcosahedronGeometry","color","5WnemBH","function *\\( *\\)","1275260GELsux","error","toString","51366XCJjph","debu","exception","332996soKINb","海浪高度","while (true) {}","TresCanvas","pointsEarth","constructor","TresPerspectiveCamera","4NWKwmm","bind","7373245VCdyrl","input","length"];return(b=function(){return e})()}S(void 0,(function(){const e=T;let n;try{n=Function(e(507)+'{}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(542)]=n[e(542)]||{},a=[e(519),e(498),e(495),e(525),e(529),"table",e(554)];for(let r=0;r<a[e(541)];r++){const n=S.constructor[e(502)][e(538)](S),o=a[r],i=t[o]||n;n[e(497)]=S[e(538)](S),n[e(526)]=i[e(526)][e(538)](i),t[o]=n}}))();const _=d(y(536),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),z=d("TresIcosahedronGeometry",{args:[1,4]},null,-1),j=d(y(520),{args:[1,128]},null,-1),E=d(y(508),{args:[y(511),"#080820",3]},null,-1),P=i({__name:y(534),async setup(i){const w=y;let T,S;const b={color:"#17c5a9",pointSize:4},P={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[w(545)]},D={color:b[w(521)],wireframe:!0,transparent:!0,opacity:.2},I=([T,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),C=I[0],k=I[1],A=I[2],U=I[3],W=I[4],H={uniforms:{size:{type:"f",value:b[w(503)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:A},elevTexture:{type:"t",value:U},alphaTexture:{type:"t",value:W},earthTexture:{type:"t",value:C},starTexture:{type:"t",value:k}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},G=s(),L=s(),M=(new r).addFolder({title:"Debug"});M[w(556)](b,w(521),{type:"color"}).on(w(510),(({value:e})=>{const n=w;L[n(499)].color[n(505)](e)})),M[w(556)](H.uniforms[w(515)],w(499),{min:.1,max:10,step:.1,label:"粒子大小"}),M[w(556)](H.uniforms[w(544)],w(499),{min:.01,max:.5,step:.01,label:w(531)}),M[w(556)](H[w(496)][w(552)],w(499),{min:.01,max:1,step:.01,label:w(514)});const{onLoop:B}=t();return B((({delta:e})=>{const n=w;G[n(499)]&&(G[n(499)][n(553)].y+=.002,H.uniforms[n(512)][n(499)]+=10*e)})),(e,n)=>{const t=w,o=u(t(533));return c(),f(o,h(P,{"window-size":""}),{default:p((()=>[_,v(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(550),{ref_key:t(546),ref:G},[d(t(547),null,[z,d(t(555),h({ref_key:t(504),ref:L},D),null,16)]),d(t(558),null,[j,d(t(543),g(x(H)),null,16)])],512),E])),_:1},16)}}});function D(e){function n(e){const t=T;if("string"==typeof e)return function(e){}.constructor(t(532))[t(516)](t(506));1!==(""+e/e)[t(541)]||e%20==0?function(){return!0}[t(535)](t(528)+t(501)).call(t(548)):function(){return!1}[t(535)]("debugger")[t(516)](t(551)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{P as default};
