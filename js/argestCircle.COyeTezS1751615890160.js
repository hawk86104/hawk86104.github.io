import{e as t,a as e}from"./@tresjs.CnmCKMfV1751615890160.js";import{bx as n,ab as o}from"./three.-xXgCQua1751615890160.js";import{s as r}from"./argestCircle.CQftMb9H1751615890160.js";import{d as a,h as s,e as i,o as v,f as l,I as f,j as d,u as m,ak as p,al as c,m as u}from"./@vue.Mugdq9o81751615890160.js";import"./postprocessing.CkX0KHoZ1751615890160.js";import"./@vueuse.DfywP5Cl1751615890160.js";const g={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},h=["rotation-x"],j=a({__name:"argestCircle",setup(a){const j={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},T={autoRotate:!0,enableDamping:!0},x={uniforms:{uTime:{type:"f",value:0}},vertexShader:r,fragmentShader:"varying vec2 vUv;\nuniform float uTime;\nstruct VoronoiData{\n\tfloat dist;\n\tfloat edgedist;\n\tvec2 edgenormal;\n\tvec2 point;\n};\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3=fract(vec3(p.xyx)*vec3(.1031,.1030,.0973));\n\tp3+=dot(p3,p3.yzx+33.33);\n\treturn fract((p3.xx+p3.yz)*p3.zy);\n}\nVoronoiData voronoi2dedges(vec2 uv){\n\tvec2 n=floor(uv);\n\tvec2 f=fract(uv);\n\t\n\tvec2 mg,mr;\n\t\n\tfloat md=8.;\n\tfor(int j=-1;j<=1;j++)\n\tfor(int i=-1;i<=1;i++){\n\t\tvec2 g=vec2(i,j);\n\t\tvec2 o=hash22(n+g);\n\t\tvec2 r=g+o-f;\n\t\tfloat d=dot(r,r);\n\t\t\n\t\tif(d<md){\n\t\t\tmd=d;\n\t\t\tmr=g+o;\n\t\t}\n\t}\n\t\n\tfloat med=8.;\n\tvec2 men=vec2(0);\n\tfor(int j=-2;j<=2;j++)\n\tfor(int i=-2;i<=2;i++){\n\t\tvec2 g=vec2(i,j);\n\t\tg+=hash22(n+g);\n\t\tvec2 k=g-mr;\n\t\t\n\t\tfloat d=dot(k,k);\n\t\tif(d>0.){\n\t\t\tfloat l=dot(g+mr-2.*f,k)*.5/sqrt(d);\n\t\t\tif(l<med){\n\t\t\t\tmen=k;\n\t\t\t\tmed=l;\n\t\t\t}\n\t\t}\n\t}\n\treturn VoronoiData(md,med,normalize(men),mr+n);\n}\n\nvoid main(){\n\tvec2 uv=vUv*10.+vec2(0.,uTime);\n\tvec2 p=voronoi2dedges(uv).point;\n\tVoronoiData v;\n\tfor(int i=0;i<32;i++){\n\t\tVoronoiData v=voronoi2dedges(p);\n\t\tp+=-v.edgenormal*.2/float(i+1);\n\t}\n\tgl_FragColor=vec4(\n\t\tsmoothstep(0.,.1,distance(uv,p))*\n\t\tsmoothstep(0.,.01,voronoi2dedges(uv).edgedist)*\n\t\tsmoothstep(0.,.01,abs(distance(uv,p)-voronoi2dedges(p).edgedist))\n\t);\n}",side:o,blending:n,depthWrite:!1,transparent:!0},{onLoop:y}=t();return y((({delta:t})=>{x.uniforms.uTime.value+=t})),(t,n)=>{const o=s("TresCanvas");return v(),i(o,u(j,{"window-size":""}),{default:l((()=>[f("TresPerspectiveCamera",g,null,512),d(m(e),p(c(T)),null,16),n[1]||(n[1]=f("TresAmbientLight",{color:"#ffffff"},null,-1)),n[2]||(n[2]=f("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1)),f("TresMesh",{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[n[0]||(n[0]=f("TresPlaneGeometry",{args:[400,400]},null,-1)),f("TresShaderMaterial",p(c(x)),null,16)],8,h),n[3]||(n[3]=f("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1)),n[4]||(n[4]=f("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});export{j as default};
