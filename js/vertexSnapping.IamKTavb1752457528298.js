import{as as t,Y as n}from"./three.DOaOWaa_1752457528298.js";import{k as o,a as i,H as e}from"./@tresjs.CutcgRLX1752457528298.js";import{_ as s}from"./index.BK5326_A1752457528298.js";import{P as a}from"./tweakpane.C0HtAJSg1752457528298.js";import{d as r,$ as u,w as l,G as p,o as m,a9 as c,u as d,r as v,e as g,f as S,I as f,j as P,a4 as h,m as R}from"./@vue.CcDZ19ef1752457528298.js";import{_ as x}from"./component.vue_vue_type_script_setup_true_lang.DdrAvaNf1752457528298.js";import"./postprocessing.BhLg8VAN1752457528298.js";import"./@vueuse.D5pFWdqo1752457528298.js";import"./object-hash.i0UzGAXb1752457528298.js";import"./@amap.CGUF9xH41752457528298.js";import"./jszip.D2VcMNWo1752457528298.js";import"./three-stdlib.ck7BW5PC1752457528298.js";const j=["object"],_=r({__name:"com",props:{uSnappingResolution:{default:6},srcMaterial:{default:()=>new t({color:65280,roughness:.5,metalness:.5})}},setup(t){const n=t,o=u(n.uSnappingResolution);return n.srcMaterial.onBeforeCompile=t=>{t.uniforms.uSnappingResolution=o,t.vertexShader=t.vertexShader.replace("#include <common>","\n\t\t\t#include <common>\n\t\t\tuniform float uSnappingResolution;\n\t"),t.vertexShader=t.vertexShader.replace("#include <project_vertex>","\n\t\t\tvec4 mvPosition = vec4( transformed, 1.0 );\n\n\t\t\t#ifdef USE_BATCHING\n\t\t\t\tmvPosition = batchingMatrix * mvPosition;\n\t\t\t#endif\n\n\t\t\t#ifdef USE_INSTANCING\n\t\t\t\tmvPosition = instanceMatrix * mvPosition;\n\t\t\t#endif\n\n\t\t\tmvPosition = modelMatrix * mvPosition;\n\n\t\t\tmvPosition = vec4(\n\t\t\t\tround(mvPosition.x * uSnappingResolution) / uSnappingResolution,\n\t\t\t\tround(mvPosition.y * uSnappingResolution) / uSnappingResolution,\n\t\t\t\tround(mvPosition.z * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t1.0);\n\t\t\tmvPosition = viewMatrix * mvPosition;\n\t\t\tgl_Position = projectionMatrix * mvPosition;\n\t")},l((()=>n.uSnappingResolution),(t=>{o.value=t})),(t,n)=>(m(),p("primitive",{object:t.srcMaterial},null,8,j))}});const M=["object"],y=r({__name:"model",props:{uSnappingResolution:{default:6}},async setup(t){let n,i;const e=t,{scene:s,materials:a}=([n,i]=c((()=>o("https://opensource.cdn.icegl.cn/model/industry4/MRBike.glb",{draco:!0,decoderPath:"./draco/"}))),n=await n,i(),n),r=[];return Object.values(a).forEach((t=>{r.push(function(t,n=6){const o={value:n};return t.onBeforeCompile=t=>{t.uniforms.uSnappingResolution=o,t.vertexShader=t.vertexShader.replace("#include <common>","\n\t\t\t\t#include <common>\n\t\t\t\tuniform float uSnappingResolution;\n\t\t"),t.vertexShader=t.vertexShader.replace("#include <project_vertex>","\n\t\t\t\tvec4 mvPosition = vec4( transformed, 1.0 );\n\t\n\t\t\t\t#ifdef USE_BATCHING\n\t\t\t\t\tmvPosition = batchingMatrix * mvPosition;\n\t\t\t\t#endif\n\t\n\t\t\t\t#ifdef USE_INSTANCING\n\t\t\t\t\tmvPosition = instanceMatrix * mvPosition;\n\t\t\t\t#endif\n\t\n\t\t\t\tmvPosition = modelMatrix * mvPosition;\n\t\n\t\t\t\tmvPosition = vec4(\n\t\t\t\t\tround(mvPosition.x * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\tround(mvPosition.y * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\tround(mvPosition.z * uSnappingResolution) / uSnappingResolution,\n\t\t\t\t\t1.0);\n\t\t\t\tmvPosition = viewMatrix * mvPosition;\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\t\t")},o}(t,e.uSnappingResolution))})),l((()=>e.uSnappingResolution),(t=>{r.forEach((n=>{n.value=t}))})),(t,n)=>(m(),p("primitive",{object:d(s),scale:5,position:[0,-2,0]},null,8,M))}}),b={position:[5,.9,-5],name:"torus"},w=r({__name:"vertexSnapping",setup(t){const o=v({alpha:!0,toneMapping:n,windowSize:!0,clearColor:"#000000"}),r=v({uSnappingResolution:3,modelSnappingResolution:6}),u=new a;return u.addBinding(r,"uSnappingResolution",{label:"圆环扭结-分辨率",min:0,max:20,step:.01}),u.addBinding(r,"modelSnappingResolution",{label:"自行车模型-分辨率",min:0,max:20,step:.01}),(t,n)=>(m(),g(d(e),R(o,{"window-size":""}),{default:S((()=>[n[1]||(n[1]=f("TresPerspectiveCamera",{position:[8,6,8],fov:45,near:1,far:1e3},null,-1)),P(d(i)),n[2]||(n[2]=f("TresAmbientLight",{intensity:.5},null,-1)),n[3]||(n[3]=f("TresDirectionalLight",{position:[7,10,-5.5],intensity:5},null,-1)),n[4]||(n[4]=f("TresMesh",{position:[-5,.5,5],"receive-shadow":"","cast-shadow":"",name:"cube"},[f("TresCylinderGeometry",{args:[1.5,1.5,2]}),f("TresMeshStandardMaterial",{color:16737826,roughness:0,metalness:0})],-1)),f("TresMesh",b,[n[0]||(n[0]=f("TresTorusKnotGeometry",{args:[1,.35,100,32]},null,-1)),P(_,{uSnappingResolution:r.uSnappingResolution},null,8,["uSnappingResolution"])]),(m(),g(h,null,{default:S((()=>[P(y,{uSnappingResolution:r.modelSnappingResolution},null,8,["uSnappingResolution"])])),_:1})),(m(),g(h,null,{default:S((()=>[P(d(x),{resolution:256,blur:1,background:""},{default:S((()=>[P(d(s),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[2,4,0],scale:[1,5,0]},null,8,["rotation-x"]),P(d(s),{intensity:2,form:"circle","rotation-x":Math.PI/2,position:[-6,4,0],scale:[1,5,0]},null,8,["rotation-x"]),P(d(s),{intensity:1,"rotation-y":-Math.PI/2,position:[-1,0,0],scale:[10,.2,1]},null,8,["rotation-y"]),P(d(s),{intensity:1,"rotation-y":-Math.PI/2,position:[1,0,0],scale:[10,.2,1]},null,8,["rotation-y"])])),_:1})])),_:1}))])),_:1},16))}});export{w as default};
