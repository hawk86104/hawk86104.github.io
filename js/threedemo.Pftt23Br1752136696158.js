import"./index.CwmxOU_M1752136696158.js";import{l as e,a as t}from"./initScript.BAMYU5lw1752136696158.js";import{k as o,b as s,e as r,a}from"./@tresjs.DLq12syC1752136696158.js";import{a3 as i,G as n,o as l,u,I as d,j as p,e as m,f as c,am as f,F as g,d as v,b as h,s as j,r as x,h as _,m as y}from"./@vue.BInVSO3Q1752136696158.js";import{C,an as b,ab as M}from"./three.BNH6wr6-1752136696158.js";import"./index.Bxzb_MXf1752136696158.js";import{_ as P}from"./lamboEffect.vue_vue_type_script_setup_true_lang.DqzxFt3M1752136696158.js";import{_ as T}from"./index.B9Z9A2ny1752136696158.js";import{_ as w}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.CC_G2T__1752136696158.js";import{_ as S}from"./component.vue_vue_type_script_setup_true_lang.CASFiL-11752136696158.js";import{l as k}from"./bubbleLoading.DbohumTb1752136696158.js";import{y as I}from"./@fesjs.CApmwxMx1752136696158.js";import"./utils.Bm3_mDTK1752136696158.js";import"./index.coH2xK-x1752136696158.js";import"./three-mesh-ui.module.DoqSn93D1752136696158.js";import"./postprocessing.CPr5BoQh1752136696158.js";import"./@vueuse.BmvRw4vU1752136696158.js";import"./all.three.67DLxSVx1752136696158.js";import"./oimophysics.BBtHVm4j1752136696158.js";import"./reflectorDiffuse.BoFN4B0f1752136696158.js";import"./vite-plugin-qiankun.B06WoCqG1752136696158.js";import"./three-stdlib.xEJufcdC1752136696158.js";import"./whiteFloor.DkbqjjMh1752136696158.js";import"./object-hash.AYVzxFSg1752136696158.js";import"./@amap.CGUF9xH41752136696158.js";import"./jszip.Dfvg2heu1752136696158.js";import"./vue-router.qYamoiMP1752136696158.js";import"./lodash-es.C7pWAXPe1752136696158.js";import"./@qlin.q6OWdsQV1752136696158.js";import"./pinia.CsLPLp3A1752136696158.js";import"./@babel.BPq7uOAK1752136696158.js";import"./@floating-ui.BFjFSAYt1752136696158.js";import"./@juggle.CcBCnTIR1752136696158.js";const D=["object","rotation"],E={__name:"dissolveEffectCar",props:{edgeColor:{default:1118481},edgeWidth:{default:.03},dissolveSpeed:{default:.003},funRef:{appear:null,disappear:null}},async setup(e,{expose:t}){let a,d;const p=e,{scene:m,nodes:c,materials:f}=([a,d]=i((()=>o("https://opensource.cdn.icegl.cn/model/industry4/lambo.glb",{draco:!0,decoderPath:"./draco/"}))),a=await a,d(),a);Object.values(c).forEach((e=>{e.isMesh&&(e.name.startsWith("glass")&&e.geometry.computeVertexNormals(),"silver_001_BreakDiscs_0"===e.name&&(e.material=f.BreakDiscs.clone(),e.material.color=new C("#ddd")))})),c.glass_003.scale.setScalar(2.7),f.FrameBlack.color=new C("black"),f.FrameBlack.roughness=0,f.FrameBlack.metalness=.75,f.Chrome.color=new C("#333"),f.Chrome.metalness=1,f.Chrome.roughness=0,f.BreakDiscs.color=new C("#555"),f.BreakDiscs.metalness=.2,f.BreakDiscs.roughness=.2,f.TiresGum.color=new C("#181818"),f.TiresGum.metalness=0,f.TiresGum.roughness=.4,f.GreyElements.color=new C("#292929"),f.GreyElements.metalness=0,c.yellow_WhiteCar_0.material=new b({roughness:.3,metalness:.05,color:"#111",envMapIntensity:.75,clearcoatRoughness:0,clearcoat:1});const g=([a,d]=i((()=>s(["./plugins/digitalCity/image/smokeparticle.png","./plugins/industry4/image/dissolve.jpg"]))),a=await a,d(),a),v=[];let h=!1;const j={dissolveProgress:1,noiseTexture:g[0],edgeColorTexture:g[1]};let x=p.dissolveSpeed;const _=()=>{if(!h){h=!0,x=p.dissolveSpeed;for(const e of v)e.uniforms.dissolveSpeed={value:x},e.uniforms.dissolveProgress={value:0}}},y=()=>{if(!h){h=!0,x=-p.dissolveSpeed;for(const e of v)e.uniforms.dissolveSpeed={value:x},e.uniforms.dissolveProgress={value:1}}};p.funRef.appear=_,p.funRef.disappear=y,t({appear:_,disappear:y}),Object.values(c).forEach((e=>{if(e.isMesh){e.frustumCulled=!1;const t=e.material;t.transparent=!0,t.onBeforeCompile=e=>{v.push(e),e.uniforms.edgeColor={value:new C(p.edgeColor)},e.uniforms.edgeWidth={value:p.edgeWidth},e.uniforms.dissolveSpeed={value:p.dissolveSpeed},e.uniforms.dissolveProgress={value:j.dissolveProgress},e.uniforms.noiseTexture={value:j.noiseTexture},e.uniforms.edgeColorTexture={value:j.edgeColorTexture},e.vertexShader=e.vertexShader.replace("#include <common>",["varying vec2 xUv;","#include <common>"].join("\n")),e.vertexShader=e.vertexShader.replace("#include <uv_vertex>",["xUv = uv;","#include <uv_vertex>"].join("\n")),e.fragmentShader=e.fragmentShader.replace("#include <common>","#include <common>\n\t\t\t\t\t uniform float dissolveProgress;\n\t\t\t\t\t uniform float edgeWidth;\n\t\t\t\t\t uniform vec3 edgeColor;\n\t\t\t\t\t uniform sampler2D noiseTexture;\n\t\t\t\t\t uniform sampler2D edgeColorTexture;\n\t\t\t\t\t varying vec2 xUv;\n\t\t\t\t\t"),e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n\t\t\t\t\t\t\tfloat noiseValue = texture2D(noiseTexture, xUv).r;\n\t\t\t\t\t\t\tvec4 finalColor = texture2D(edgeColorTexture, xUv);\n\n\t\t\t\t\t\t\tvec3 mixedColor = mix(finalColor.rgb, edgeColor, 0.5);\n\t\t\t\t\t\t\tfinalColor.rgb = mixedColor;\n\n\t\t\t\t\t\t\t// vec4 finalColor = linearToOutputTexel( vec4(edgeColor, gl_FragColor.a) );\n\t\t\t\t\t\t\tfloat alpha = step(noiseValue - edgeWidth, dissolveProgress);\n\t\t\t\t\t\t\tgl_FragColor.a = alpha;\n\t\t\t\t\t\t\tfloat useOrigin = step(noiseValue, dissolveProgress);\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix(finalColor.rgb, gl_FragColor.rgb, useOrigin);")}}}));const{onLoop:M}=r();return M((()=>{if(h)for(const e of v){const{dissolveProgress:t,dissolveSpeed:o}=e.uniforms;t.value+=o.value,t.value<0&&(h=!1,p.funRef.aEnd()),t.value>1&&(h=!1,p.funRef.aEnd())}})),(e,t)=>(l(),n("primitive",{object:u(m),scale:.015,rotation:[0,Math.PI/1.5,0]},null,8,D))}},R=["rotation"],B=["side"],F=["rotation"],G=["side"],W={__name:"otherObject",setup:e=>(e,t)=>(l(),n(g,null,[t[2]||(t[2]=d("TresPerspectiveCamera",{position:[0,10,15],fov:25,near:.1,far:1e4},null,-1)),p(u(a),{autoRotate:""}),t[3]||(t[3]=d("TresHemisphereLight",{intensity:.5},null,-1)),(l(),m(f,null,{default:c((()=>[p(u(w),{position:[0,-1.562,0],reflectivity:2.6,showGridHelper:!1,scale:1.5})])),_:1})),d("TresMesh",{scale:4,position:[3,-1.161,-1.5],rotation:[-Math.PI/2,0,Math.PI/2.5]},[t[0]||(t[0]=d("TresRingGeometry",{args:[.9,1,4,1]},null,-1)),d("TresMeshStandardMaterial",{color:"white",roughness:.75,side:M},null,8,B)],8,R),d("TresMesh",{scale:4,position:[-3,-1.161,-1],rotation:[-Math.PI/2,0,Math.PI/2.5]},[t[1]||(t[1]=d("TresRingGeometry",{args:[.9,1,3,1]},null,-1)),d("TresMeshStandardMaterial",{color:"white",roughness:.75,side:M},null,8,G)],8,F),(l(),m(f,null,{default:c((()=>[p(u(S),{resolution:512},{default:c((()=>[p(u(T),{intensity:2,position:[0,1,3],scale:[10,1,1]}),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-6],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,-3],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,0],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,3],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,6],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-x":Math.PI/2,position:[0,4,9],scale:[10,1,1]},null,8,["rotation-x"]),p(u(T),{intensity:2,"rotation-y":Math.PI/2,position:[-50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),p(u(T),{intensity:2,"rotation-y":-Math.PI/2,position:[50,2,0],scale:[100,2,1]},null,8,["rotation-y"]),p(u(T),{form:"ring",color:"red",intensity:10,scale:2,position:[10,5,10]})])),_:1})])),_:1})),p(P)],64))},O=v({__name:"threedemo",setup(o){const s=h(!1);j((async()=>{console.log("onMounted"),await e(),await t(),s.value=!0,uni.getEnv?uni.getEnv((e=>{I.success(`当前环境：${JSON.stringify(e)}`)})):I.error("当前web浏览器访问无效，请使用小程序或者app访问该页面")}));const r=x({clearColor:"#15151a",antialias:!1,logarithmicDepthBuffer:!0,renderMode:"manual"}),a=x({edgeColor:"#111111",edgeWidth:.03,dissolveSpeed:.003,funRef:{appear:null,disappear:null,aEnd:()=>{}}}),i=h(null),v=()=>{s.value&&(console.log("clickMesh"),uni.postMessage?(i.value.funRef.disappear(),uni.postMessage({data:{action:"三维页面发送了消息"}})):I.error("当前web浏览器访问无效，请使用小程序或者app访问该页面"))};return a.funRef.aEnd=()=>{console.log("aEnd"),uni.navigateBack()},(e,t)=>{const o=_("TresCanvas");return l(),n(g,null,[p(u(k)),p(o,y(r,{"window-size":""}),{default:c((()=>[(l(),m(f,null,{default:c((()=>[p(E,y(a,{ref_key:"dissolveEffectModelRef",ref:i,onClick:v}),null,16)])),_:1})),p(W)])),_:1},16),t[0]||(t[0]=d("h2",{class:"text-center text-white w-full absolute"},"双击车辆消失后回传信息且跳转",-1))],64)}}});export{O as default};
