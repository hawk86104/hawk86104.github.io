import{C as n,c1 as t,ak as o,am as e,aX as a,c as r}from"./three.8tDGqmLF1741309500666.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.yaBKiR-I1741309500666.js";import{d as u,b as d,w as f,e as m,o as p,H as h,j as v,u as g,g as w,N as M,aj as b,ak as P,F as y}from"./@vue.NRI7TcgI1741309500666.js";import"./postprocessing.5pHDeDVF1741309500666.js";import"./@vueuse.7Aa9Vkmy1741309500666.js";const C=T;!function(n,t){const o=T,e=z();for(;;)try{if(526712===-parseInt(o(289))/1*(-parseInt(o(319))/2)+parseInt(o(295))/3*(-parseInt(o(298))/4)+-parseInt(o(328))/5*(parseInt(o(317))/6)+parseInt(o(305))/7+parseInt(o(286))/8*(-parseInt(o(284))/9)+-parseInt(o(296))/10+parseInt(o(283))/11)break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const x=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[T(301)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function z(){const n=["#1b3984","uniforms","exception","TresCanvas","prototype","branches","26140ehaDyC","radius","count","table","return (function() ","bind","call","console","init","outsideColor","cos","#b5f28d","a-scale","keys","value","color","aScale","constructor","log","19644515TaPJqZ","9wbcQwf","toString","4452872hlrQoa","test",'{}.constructor("return this")( )',"52755NfVBLU","uTime","randomnessPower","random","a-randomness","clone","2029401shmBGo","9395470aWzgbo","while (true) {}","4NWqMuI","error","lerp","apply","function *\\( *\\)","gger","forEach","3094021NwIkOX","chain","material","sin","galaxy","info","setAttribute","TresPoints","action","aRandomness","TresPerspectiveCamera","position","246RosiXL","geometry","26FmJjof","length","debu"];return(z=function(){return n})()}!function(){x(this,(function(){const n=T,t=new RegExp(n(302)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=S(n(272));t.test(e+n(306))&&o[n(287)](e+"input")?S():e("0")}))()}();const I=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[T(301)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();I(void 0,(function(){const n=T;let t;try{t=Function(n(268)+n(288)+");")()}catch(a){t=window}const o=t[n(271)]=t[n(271)]||{},e=[n(282),"warn",n(310),n(299),n(324),n(331),"trace"];for(let r=0;r<e[n(320)];r++){const t=I[n(281)][n(326)][n(269)](I),a=e[r],s=o[a]||t;t.__proto__=I.bind(I),t[n(285)]=s[n(285)].bind(s),o[a]=t}}))();const j=["position",C(276),C(279),C(293)];function T(n,t){const o=z();return(T=function(n,t){return o[n-=268]})(n,t)}const _=u({__name:C(309),setup(u){const x=C,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:t,outputColorSpace:o,toneMapping:e,windowSize:!0},I={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(275),outsideColor:x(322)},T=new n(I.insideColor),_=new n(I[x(273)]),S=new Float32Array(3*I.count),F=new Float32Array(3*I.count),A=new Float32Array(I.count),k=new Float32Array(3*I[x(330)]);for(let n=0;n<I.count;n++){const t=3*n,o=Math.random()*I[x(329)],e=n%I[x(327)]*Math.PI*2/I.branches;S[t]=Math.cos(e)*o,S[t+1]=0,S[t+2]=Math[x(308)](e)*o;const a=Math[x(292)]()**I[x(291)]*(Math.random()<.5?-1:1),r=Math[x(292)]()**I[x(291)]*(Math[x(292)]()<.5?-1:1),s=Math[x(292)]()**I[x(291)]*(Math[x(292)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=T[x(294)]();i.lerp(_,o/I.radius),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,A[n]=Math[x(292)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:I.size}}};const O=d(null),{onLoop:N}=s();N((({elapsed:n})=>{const t=x;O[t(278)]&&(O.value[t(307)][t(323)][t(290)][t(278)]=n)}));const{count:B,size:E,radius:L,branches:W,spin:X,randomness:Z,randomnessPower:q,insideColor:G,outsideColor:J}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:"#1b3984"});return f([B.value,E[x(278)],L[x(278)],W.value,X[x(278)],Z[x(278)],q[x(278)],G[x(278)],J[x(278)]],(t=>{const o=x;t[o(304)](((n,t)=>{const e=o;I[Object[e(277)](I)[t]]=n[e(278)]})),function(){const t=x;if(O[t(278)]){const o=new n(I.insideColor),e=new n(I[t(273)]),a=new Float32Array(3*I.count),s=new Float32Array(3*I[t(330)]),i=new Float32Array(I[t(330)]),c=new Float32Array(3*I.count);for(let n=0;n<I[t(330)];n++){const r=3*n,l=Math[t(292)]()*I[t(329)],u=n%I[t(327)]*Math.PI*2/I[t(327)];a[r]=Math[t(274)](u)*l,a[r+1]=0,a[r+2]=Math[t(308)](u)*l;const d=Math[t(292)]()**I[t(291)]*(Math[t(292)]()<.5?-1:1),f=Math[t(292)]()**I[t(291)]*(Math.random()<.5?-1:1),m=Math[t(292)]()**I.randomnessPower*(Math.random()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=o[t(294)]();p[t(300)](e,l/I.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(292)]()}O[t(278)][t(318)][t(311)](t(316),new r(a,3)),O[t(278)].geometry[t(311)](t(314),new r(c,3)),O[t(278)][t(318)][t(311)](t(279),new r(s,3)),O[t(278)][t(318)][t(311)](t(280),new r(i,1))}}()})),(n,t)=>{const o=x,e=m(o(325));return p(),h(y,null,[v(g(c)),v(e,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(o(315),{position:[3,3,3]},null,-1)),M(o(312),{ref_key:"bufferRef",ref:O},[M("TresBufferGeometry",{position:[g(S),3],"a-scale":[g(A),1],color:[g(F),3],"a-randomness":[g(k),3]},null,8,j),M("TresShaderMaterial",b(P(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function S(n){function t(n){const o=T;if("string"==typeof n)return function(n){}.constructor(o(297)).apply("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[o(281)](o(321)+o(303))[o(270)](o(313)):function(){return!1}[o(281)](o(321)+o(303))[o(301)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{_ as default};
