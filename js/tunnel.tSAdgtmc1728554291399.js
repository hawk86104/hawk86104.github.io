import{U as n,Y as e}from"./@tresjs.IlQvaTJ91728554291399.js";import{a0 as t,aN as r}from"./three.YiCjTDWq1728554291399.js";import{_ as o}from"./argestCircle.iQbYZf4A1728554291399.js";import{d as i,e as s,o as a,f as u,g as c,L as f,j as l,u as p,aj as v,ak as d,m}from"./@vue.JNsx1iN61728554291399.js";import"./@vueuse.nb-8z3af1728554291399.js";const g=y;!function(n,e){const t=y,r=A();for(;;)try{if(593506===-parseInt(t(403))/1+-parseInt(t(394))/2+parseInt(t(374))/3+parseInt(t(409))/4*(parseInt(t(406))/5)+-parseInt(t(415))/6+parseInt(t(373))/7+parseInt(t(396))/8*(parseInt(t(370))/9))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[y(385)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){h(this,(function(){const n=y,e=new RegExp(n(388)),t=new RegExp(n(383),"i"),r=R("init");e[n(378)](r+n(401))&&t[n(378)](r+"input")?R():r("0")}))()}();const T=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function y(n,e){const t=A();return(y=function(n,e){return t[n-=369]})(n,e)}T(void 0,(function(){const n=y,e=function(){const n=y;let e;try{e=Function("return (function() "+n(398)+");")()}catch(t){e=window}return e}(),t=e.console=e[n(416)]||{},r=[n(389),n(404),n(391),n(392),"exception",n(390),n(397)];for(let o=0;o<r[n(371)];o++){const e=T[n(381)][n(376)].bind(T),i=r[o],s=t[i]||e;e.__proto__=T[n(382)](T),e[n(369)]=s[n(369)][n(382)](s),t[i]=e}}))();const x={ref:g(414),position:[600,750,-1221],fov:45,near:1,far:1e4},b=f(g(400),{color:g(411)},null,-1),j=f(g(407),{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1),w=[g(384)],_=f(g(375),{args:[1e3,1e3]},null,-1),I=f(g(386),{args:[1e3],position:[0,19,0]},null,-1),C=f("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1),L=g(405);function A(){const n=["call","2221040gDAeEz","uniforms","#ffffff","uTime","string","perspectiveCameraRef","4723734PtXyQL","console","toString","51705TMKpiv","length","stateObject","6137005GSZTaB","1695351fNjQew","TresPlaneGeometry","prototype","gger","test","value","TresCanvas","constructor","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","rotation-x","apply","TresAxesHelper","TresPerspectiveCamera","function *\\( *\\)","log","table","info","error","TresMesh","2186120dyivYD","TresShaderMaterial","1616opmZKx","trace",'{}.constructor("return this")( )',"debu","TresAmbientLight","chain","while (true) {}","683727tyEkvn","warn","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","5NWKvLd","TresDirectionalLight"];return(A=function(){return n})()}const M=i({__name:"tunnel",setup(i){const g={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},h={autoRotate:!0,enableDamping:!0},T={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:L,side:t,blending:r,depthWrite:!1,transparent:!0},{onLoop:A}=n();return A((({delta:n})=>{const e=y;T[e(410)][e(412)][e(379)]+=n})),(n,t)=>{const r=y,o=s(r(380));return a(),u(o,m(g,{"window-size":""}),{default:c((()=>[f(r(387),x,null,512),l(p(e),v(d(h)),null,16),b,j,f(r(393),{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[_,f(r(395),v(d(T)),null,16)],8,w),I,C])),_:1},16)}}});function R(n){function e(n){const t=y;if(typeof n===t(413))return function(n){}[t(381)](t(402))[t(385)]("counter");1!==(""+n/n)[t(371)]||n%20==0?function(){return!0}.constructor(t(399)+t(377))[t(408)]("action"):function(){return!1}[t(381)]("debugger").apply(t(372)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{M as default};
