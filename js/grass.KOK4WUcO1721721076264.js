import{a6 as t,C as n,Z as e,al as o,K as r,a9 as a}from"./three.fnkrvySq1721721076264.js";import{$ as i,N as s,d as c,x as l}from"./@tresjs.tWkmYPO61721721076264.js";import"./index.TKnnSXt01721721076264.js";import{a as u}from"./simplex-noise.MycypUyu1721721076264.js";import{C as f}from"./index.9ahhXQcR1721721076264.js";import{d as p,a4 as h,o as m,D as v,J as d,u as g,r as x,f as w,g as y,j as b,aj as _,ak as j,al as M}from"./@vue.Q1VpS3901721721076264.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.g8k15m6n1721721076264.js";import"./tweakpane.yHWGBmom1721721076264.js";import"./@vueuse._hUvP73U1721721076264.js";import"./lamina.-gCScUL91721721076264.js";import"./glsl-tokenizer.rVSxTaVo1721721076264.js";import"./@amap.b3gYyCW_1721721076264.js";import"./glsl-token-descope.M7c4G_Qv1721721076264.js";import"./glsl-token-depth.ivCdU77S1721721076264.js";import"./glsl-token-scope.7aEgEyJS1721721076264.js";import"./glsl-token-properties.y0W_k4Ho1721721076264.js";import"./glsl-token-assignments.77r9jtIw1721721076264.js";import"./glsl-token-string.qKZvKI-H1721721076264.js";import"./glsl-token-functions.nzsekdRK1721721076264.js";import"./object-hash.n-lQHd521721721076264.js";import"./jszip.vimxEq251721721076264.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang._L67LCDk1721721076264.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.MkNyYE0B1721721076264.js";import"./three-stdlib.Rahz23xb1721721076264.js";import"./@pmndrs.K9H4bZlG1721721076264.js";import"./utils.ExAcMCBP1721721076264.js";const A=k;!function(t,n){const e=k,o=R();for(;;)try{if(444874===parseInt(e(536))/1*(parseInt(e(473))/2)+parseInt(e(504))/3*(-parseInt(e(532))/4)+parseInt(e(480))/5+-parseInt(e(510))/6*(-parseInt(e(516))/7)+-parseInt(e(541))/8*(-parseInt(e(526))/9)+-parseInt(e(545))/10+-parseInt(e(518))/11*(parseInt(e(470))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(466)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){I(this,(function(){const t=k,n=new RegExp(t(509)),e=new RegExp(t(522),"i"),o=B("init");n[t(462)](o+t(525))&&e[t(462)](o+t(528))?B():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(t,n){const e=R();return(k=function(t,n){return e[t-=461]})(t,n)}function R(){const t=["return (function() ","computeVertexNormals","push","geometry","info","normalize","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","133527wRxdxE","__proto__","side","halfRootAngleSinF32","time","function *\\( *\\)","1458546plqpjq","call","attributes-position","length","constructor","table","7MEZjTy","toString","1173227VORuES","Color","material","PlaneGeometry","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","Vector4","stretchesF32","chain","7391871rdAaLm","gger","input","cos","convertSRGBToLinear","TresMesh","60HqluVy","counter","joints","TresGroup","5BhekaN","alphaMap","TresInstancedBufferGeometry","attributes-stretch","#000f00","8NLwFzl","exception","Vector3","instances","4558650KTQvuR","random","TresMeshStandardMaterial","test","needsUpdate","offsetsF32","sin","apply","bind","halfRootAngleCosF32","attributes-halfRootAngleSin","120qfmWUg","attributes-uv","attributes","346934qfNVui","debu","log","string","array","position","grass","3515995esAsew","action","value","index","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","DoubleSide","attributes-offset","width","InstancedBufferAttribute","attributes-halfRootAngleCos","lookAt","set","warn","map","while (true) {}","console","stateObject"];return(R=function(){return t})()}C(void 0,(function(){const t=k;let n;try{n=Function(t(497)+'{}.constructor("return this")( ));')()}catch(r){n=window}const e=n[t(495)]=n[t(495)]||{},o=[t(475),t(492),t(501),"error",t(542),t(515),"trace"];for(let a=0;a<o[t(513)];a++){const n=C[t(514)].prototype[t(467)](C),r=o[a],i=e[r]||n;n[t(505)]=C[t(467)](C),n[t(517)]=i[t(517)][t(467)](i),e[r]=n}}))();const F=[A(520)],S=[A(483),A(512),A(471),A(486),"attributes-orientation",A(539),A(469),A(489)],D=[A(500)],T=[A(506)],E=p({__name:A(479),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),w=a,y=u(Math[c(546)]);function b(n,e){const o=c,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(523)])(r,a,i,s)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const j=function(n,e){const a=c,i=[],s=[],l=[],u=[],f=[];let p=new(t[a(523)]),h=new o;const m=-.25;for(let o=0;o<n;o++){const r=Math[a(546)]()*e-e/2,c=Math[a(546)]()*e-e/2,v=_(r,c);i[a(499)](r,v,c);let d=Math.PI-Math[a(546)]()*(2*Math.PI);u[a(499)](Math.sin(.5*d)),f[a(499)](Math[a(529)](.5*d));let g=new(t[a(543)])(0,1,0),x=g.x*Math[a(465)](d/2),w=g.y*Math.sin(d/2),y=g.z*Math[a(465)](d/2),j=Math[a(529)](d/2);p[a(491)](x,w,y,j)[a(502)](),d=.5*Math.random()+m,g=new(t[a(543)])(1,0,0),x=g.x*Math[a(465)](d/2),w=g.y*Math[a(465)](d/2),y=g.z*Math.sin(d/2),j=Math.cos(d/2),h[a(491)](x,w,y,j)[a(502)](),p=b(p,h),d=.5*Math[a(546)]()+m,g=new(t[a(543)])(0,0,1),x=g.x*Math.sin(d/2),w=g.y*Math.sin(d/2),y=g.z*Math[a(465)](d/2),j=Math[a(529)](d/2),h[a(491)](x,w,y,j)[a(502)](),p=b(p,h),s[a(499)](p.x,p.y,p.z,p.w),o<n/3?l[a(499)](1.8*Math[a(546)]()):l[a(499)](Math[a(546)]())}return{offsetsF32:new(t[a(488)])(new Float32Array(i),3),orientationsF32:new(t[a(488)])(new Float32Array(s),4),stretchesF32:new(t[a(488)])(new Float32Array(l),1),halfRootAngleCosF32:new r(new Float32Array(f),1),halfRootAngleSinF32:new(t[a(488)])(new Float32Array(u),1)}}(w[c(544)],w[c(487)]),M=new(t[c(521)])(w.bW,w.bH,1,w[c(534)]).translate(0,w.bH/2,0),z=new(t[c(521)])(w[c(487)],w[c(487)],32,32);z[c(490)](new(t[c(543)])(0,1,0));const I=z[c(472)][c(478)];for(let t=0;t<I.array[c(513)];t+=3)I[c(477)][t+1]=_(I.array[t],I[c(477)][t+2]);z.attributes[c(478)][c(463)]=!0,z[c(498)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[c(519)])(.3,.9,0).convertSRGBToLinear(),bottomColor:new n(0,.2,0)[c(530)]()},c(503),c(484),(n=>{const e=c;n[e(506)]=t[e(485)]})));C[c(493)]=x[c(493)],C.alphaMap=x[c(537)],C.toneMapped=!1;const{onLoop:k}=i();return k((({elapsed:t})=>{const n=c;C.uniforms[n(508)][n(482)]=t/4})),(t,n)=>{const o=c;return m(),v(o(535),null,[d("TresMesh",{material:g(C)},[d(o(538),{index:g(M)[o(483)],"attributes-position":g(M)[o(472)].position,"attributes-uv":g(M)[o(472)].uv,"attributes-offset":g(j)[o(464)],"attributes-orientation":g(j).orientationsF32,"attributes-stretch":g(j)[o(524)],"attributes-halfRootAngleSin":g(j)[o(507)],"attributes-halfRootAngleCos":g(j)[o(468)]},null,8,S)],8,F),d(o(531),{position:[0,0,0],geometry:g(z)},[d(o(461),{color:o(540),side:e},null,8,T)],8,D)])}}});function B(t){function n(t){const e=k;if(typeof t===e(476))return function(t){}[e(514)](e(494))[e(466)](e(533));1!==(""+t/t)[e(513)]||t%20==0?function(){return!0}[e(514)](e(474)+e(527))[e(511)](e(481)):function(){return!1}[e(514)]("debu"+e(527))[e(466)](e(496)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const L=q;function O(){const t=["627386nIhhWO","call","warn","9bpzFCP","gger","action","411047kRheFk","init","return (function() ","24440640Hopghx","2037324FfwNab","length","log","grass","197981utIGzQ","apply","stateObject","bind","constructor","debu","2568126BUynxX","string","chain","test","prototype","function *\\( *\\)","exception",'{}.constructor("return this")( )',"toString","trace","while (true) {}","error","__proto__","TresPerspectiveCamera","6643430VjMxCj","console"];return(O=function(){return t})()}function q(t,n){const e=O();return(q=function(t,n){return e[t-=420]})(t,n)}!function(t,n){const e=q,o=O();for(;;)try{if(727365===-parseInt(e(448))/1+parseInt(e(434))/2*(-parseInt(e(437))/3)+parseInt(e(444))/4+-parseInt(e(432))/5+-parseInt(e(454))/6+parseInt(e(440))/7+parseInt(e(443))/8)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[q(449)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){H(this,(function(){const t=q,n=new RegExp(t(423)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=G(t(441));n[t(421)](o+t(420))&&e[t(421)](o+"input")?G():o("0")}))()}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[q(449)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();P(void 0,(function(){const t=q,n=function(){const t=q;let n;try{n=Function(t(442)+t(425)+");")()}catch(e){n=window}return n}(),e=n[t(433)]=n[t(433)]||{},o=[t(446),t(436),"info",t(429),t(424),"table",t(427)];for(let r=0;r<o.length;r++){const n=P[t(452)][t(422)][t(451)](P),a=o[r],i=e[a]||n;n[t(430)]=P[t(451)](P),n[t(426)]=i[t(426)][t(451)](i),e[a]=n}}))();const N=d(L(431),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1),V=p({__name:L(447),setup(t){const n=x({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>(m(),w(g(l),_(j(n)),{default:y((()=>[N,b(g(c),_(j(e)),null,16),(m(),w(M,null,{default:y((()=>[b(E)])),_:1})),(m(),w(M,null,{default:y((()=>[b(g(z),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16))}});function G(t){function n(t){const e=q;if(typeof t===e(455))return function(t){}[e(452)](e(428))[e(449)]("counter");1!==(""+t/t)[e(445)]||t%20==0?function(){return!0}[e(452)](e(453)+e(438))[e(435)](e(439)):function(){return!1}[e(452)]("debu"+e(438))[e(449)](e(450)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{V as default};
