!function(){const t=e,r=n();for(;;)try{if(660156===parseInt(t(473))/1+parseInt(t(462))/2+-parseInt(t(457))/3+-parseInt(t(461))/4*(-parseInt(t(439))/5)+-parseInt(t(475))/6+-parseInt(t(458))/7+parseInt(t(437))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const t=function(){let t=!0;return function(n,e){const r=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,r}}();function n(){const t=["function *\\( *\\)","trace","replace",'{}.constructor("return this")( )',"vertexShader","prototype","apply","1304028LBqDJw","3902920Rsings","stateObject","test","696nUgbBY","709834sSGlBl","bind","info","constructor","\n\t\tuniform mat4 textureMatrix;\n\t\tout vec4 vCoord;\n\t\tout vec3 vToEye;\n\n\t\tvoid main() {\n\t\t","input","counter","gger","warn","\n\t\tuniform sampler2D reflectMap;\n\t\tuniform float mirror;\n\t\tuniform float mixStrength;\n\t\tin vec4 vCoord;\n\t\tin vec3 vToEye;\n\n\t\tvoid main() {\n\t\t","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","145787TjsbwR","log","3791328JCKVJZ","fragmentShader","length","\n\t\t#include <project_vertex>\n\n\t\tvCoord = textureMatrix * vec4(transformed, 1.0);\n\t\tvToEye = cameraPosition - (modelMatrix * vec4(transformed, 1.0)).xyz;\n\t\t","void main() {","8245424hhKgFJ","action","21635IShXyx","#include <emissivemap_fragment>","#include <project_vertex>","init","chain","debu","console","error","exception","table","return (function() "];return(n=function(){return t})()}function e(t,r){const o=n();return e=function(t,n){return o[t-=436]},e(t,r)}!function(){t(this,(function(){const t=e,n=new RegExp(t(450)),r=new RegExp(t(472),"i"),o=i(t(442));n[t(460)](o+t(443))&&r.test(o+t(467))?i():o("0")}))()}();const r=function(){let t=!0;return function(n,e){const r=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,r}}();r(void 0,(function(){const t=e,n=function(){const t=e;let n;try{n=Function(t(449)+t(453)+");")()}catch(r){n=window}return n}(),o=n[t(445)]=n.console||{},c=[t(474),t(470),t(464),t(446),t(447),t(448),t(451)];for(let e=0;e<c[t(477)];e++){const n=r[t(465)][t(455)].bind(r),i=c[e],a=o[i]||n;n.__proto__=r[t(463)](r),n.toString=a.toString.bind(a),o[i]=n}}))();const o=t=>{const n=e;t[n(454)]=t[n(454)][n(452)]("void main() {",n(466)),t[n(454)]=t[n(454)].replace(n(441),n(478))},c=t=>{const n=e;t[n(476)]=t[n(476)][n(452)](n(436),n(471)),t[n(476)]=t[n(476)].replace(n(440),"\n\t\t#include <emissivemap_fragment>\n\n\t\tvec4 normalColor = texture2D(normalMap, vNormalMapUv * normalScale);\n\t\tvec3 reflectNormal = normalize(vec3(normalColor.r * 2.0 - 1.0, normalColor.b, normalColor.g * 2.0 - 1.0));\n\t\tvec3 reflectCoord = vCoord.xyz / vCoord.w;\n\t\tvec2 reflectUv = reflectCoord.xy + reflectCoord.z * reflectNormal.xz * 0.05;\n\t\tvec4 reflectColor = texture2D(reflectMap, reflectUv);\n\n\t\t// Fresnel term\n\t\tvec3 toEye = normalize(vToEye);\n\t\tfloat theta = max(dot(toEye, normal), 0.0);\n\t\tfloat reflectance = pow((1.0 - theta), 5.0);\n\n\t\treflectColor = mix(vec4(0), reflectColor, reflectance);\n\n\t\tdiffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + reflectColor.rgb * mixStrength);\n\t\t")};function i(t){function n(t){const r=e;if("string"==typeof t)return function(t){}.constructor("while (true) {}")[r(456)](r(468));1!==(""+t/t)[r(477)]||t%20==0?function(){return!0}[r(465)]("debu"+r(469)).call(r(438)):function(){return!1}[r(465)](r(444)+r(469))[r(456)](r(459)),n(++t)}try{if(t)return n;n(0)}catch(r){}}export{c as a,o as m};
