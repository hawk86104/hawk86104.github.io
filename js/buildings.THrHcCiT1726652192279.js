import{u as t,_ as o,a as n}from"./mergeTres.gghxvXRa1726652192279.js";import{l as r}from"./utils.PP2M0YIY1726652192279.js";import{U as e}from"./@tresjs.UGbbWZf51726652192279.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.JNsx1iN61726652192279.js";import{_ as x}from"./@fesjs.SPWJBM2r1726652192279.js";import"./@amap.-LPMSFvH1726652192279.js";import"./pinia.wYsVO5dS1726652192279.js";import"./three.3esZ7Hzr1726652192279.js";import"./three-mesh-bvh.z6NGMxhR1726652192279.js";import"./@vueuse.OdTlFP151726652192279.js";import"./vue-router.xtoXuUHZ1726652192279.js";import"./lodash-es.kYt-_xTG1726652192279.js";import"./@qlin.yHhFDldE1726652192279.js";import"./@floating-ui.BPbuo5Gx1726652192279.js";import"./@juggle.7yjBMqoW1726652192279.js";const w=b;function b(t,o){const n=z();return(b=function(t,o){return n[t-=262]})(t,o)}!function(t,o){const n=b,r=z();for(;;)try{if(635482===parseInt(n(264))/1+-parseInt(n(286))/2+-parseInt(n(263))/3*(parseInt(n(277))/4)+-parseInt(n(284))/5+-parseInt(n(309))/6*(-parseInt(n(292))/7)+parseInt(n(283))/8*(-parseInt(n(291))/9)+-parseInt(n(293))/10*(-parseInt(n(310))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(308)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){I(this,(function(){const t=b,o=new RegExp(t(294)),n=new RegExp(t(285),"i"),r=P(t(303));o[t(272)](r+t(311))&&n[t(272)](r+t(322))?P():r("0")}))()}();const S=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();S(void 0,(function(){const t=b;let o;try{o=Function(t(307)+t(273)+");")()}catch(e){o=window}const n=o[t(266)]=o[t(266)]||{},r=[t(296),t(276),t(300),t(274),t(314),t(302),t(320)];for(let a=0;a<r[t(270)];a++){const o=S[t(280)].prototype.bind(S),e=r[a],i=n[e]||o;o[t(324)]=S[t(295)](S),o[t(281)]=i[t(281)][t(295)](i),n[e]=o}}))();const j=[w(290),w(312),w(287)];function z(){const t=["call","console","uniforms","exp","cameraState","length","gger","test",'{}.constructor("return this")( )',"error","tbgRef","warn","2788LoRUOQ","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","value","constructor","toString","geometry","8xvvqCo","1219195qyrKHK","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","40752EulTeo","normal","u_zoom","stateObject","position","6081696OslNHI","212835VjFbGO","10zYmIeQ","function *\\( *\\)","bind","log","u_near","uvArray","getZoom","info","positionArray","table","init","TresBufferGeometry","debu","lngLatToCoord","return (function() ","apply","30pwPPUm","17965101ecWdxH","chain","faceUv","counter","exception","normalArray","customCoords","atan","TresGroup","action","trace","far","input","buildingModels","__proto__","near","mapHandle","4140AISmEw","752085bfdEUd"];return(z=function(){return t})()}const U=a({__name:w(323),setup(o){const n=t(),a=t=>{const o=b;for(let r=0;r<t[o(270)];r+=3){const e=[t[r],t[r+1]],a=n[o(262)].customCoords[o(306)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[b(269)]&&(async()=>{const t=b,o=await r(t(278),"buildings");for(let n=0;n<o[t(270)];n++){const r=o[n];a(r[t(282)]);const e=new Float32Array(r[t(282)]),i=new Float32Array(r[t(312)]),l=new Float32Array(r[t(282)][t(270)]);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;n[t(269)]&&(g[t(267)][t(288)][t(279)]=n[t(262)][t(299)](),g[t(267)][t(297)][t(279)]=n[t(269)][t(325)],g[t(267)].u_far[t(279)]=n[t(269)][t(321)])})),(t,o)=>{const n=b;return c(),s(n(318),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s("TresMesh",{key:""+o},[p(r(304),{ref_for:!0,ref:r(275),position:[t[r(301)],3],faceUv:[t[r(298)],2],normal:[t[r(315)],3]},null,8,j),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function P(t){function o(t){const n=b;if("string"==typeof t)return function(t){}[n(280)]("while (true) {}")[n(308)](n(313));1!==(""+t/t)[n(270)]||t%20==0?function(){return!0}[n(280)](n(305)+n(271))[n(265)](n(319)):function(){return!1}.constructor(n(305)+n(271))[n(308)](n(289)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const F=T;!function(t,o){const n=T,r=M();for(;;)try{if(789770===-parseInt(n(358))/1+-parseInt(n(357))/2*(parseInt(n(360))/3)+-parseInt(n(362))/4+-parseInt(n(386))/5*(parseInt(n(344))/6)+-parseInt(n(381))/7*(parseInt(n(373))/8)+parseInt(n(349))/9*(parseInt(n(367))/10)+parseInt(n(375))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[T(382)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=T,o=new RegExp(t(374)),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=D(t(384));o[t(356)](r+t(354))&&n[t(356)](r+t(348))?D():r("0")}))()}();const A=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();A(void 0,(function(){const t=T;let o;try{o=Function(t(359)+'{}.constructor("return this")( ));')()}catch(e){o=window}const n=o[t(363)]=o[t(363)]||{},r=[t(347),t(351),"info",t(369),t(352),t(353),t(366)];for(let a=0;a<r[t(350)];a++){const o=A[t(370)][t(378)][t(355)](A),e=r[a],i=n[e]||o;o[t(376)]=A[t(355)](A),o[t(379)]=i[t(379)][t(355)](i),n[e]=o}}))();const L=t=>(y(F(361)),t=t(),C(),t),W=L((()=>p(F(383),{fov:60,near:.1,far:2e3},null,-1))),E=L((()=>p("TresAmbientLight",{intensity:.5},null,-1)));function T(t,o){const n=M();return(T=function(t,o){return n[t-=344]})(t,o)}function M(){const t=["__proto__","buildings","prototype","toString","manual","21QhuOat","apply","TresPerspectiveCamera","init","while (true) {}","4663445FXzQrk","6yTYPGz","gger","string","log","input","11673036uboZBe","length","warn","exception","table","chain","bind","test","203402LwRXJh","329879gBwTCF","return (function() ","15GdKzDU","data-v-f2059998","3083120yntUQj","console","stateObject","TresCanvas","trace","10WKQOTy","tcRef","error","constructor","tresCanvas","debu","1547448avHVDx","function *\\( *\\)","28764032yNUoWc"];return(M=function(){return t})()}function D(t){function o(t){const n=T;if(typeof t===n(346))return function(t){}.constructor(n(385))[n(382)]("counter");1!==(""+t/t).length||t%20==0?function(){return!0}[n(370)](n(372)+n(345)).call("action"):function(){return!1}[n(370)](n(372)+n(345))[n(382)](n(364)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const k=x(a({__name:F(377),setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(380)});return(t,i)=>{const l=r,f=d(l(365));return c(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(371),ref:l(368)},a),{default:m((()=>[W,E,g(n,{center:e}),(c(),h(_,null,{default:m((()=>[g(U)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{k as default};
