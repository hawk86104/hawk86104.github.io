import{ak as e,_ as n}from"./three.Vxh8Czkt1741490461506.js";import{e as t,o as a,a as o}from"./@tresjs.rE98Wm941741490461506.js";import{P as r}from"./tweakpane.yDiyAAkA1741490461506.js";import{d as i,a3 as l,v as s,e as u,o as p,f as c,g as v,N as f,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.NRI7TcgI1741490461506.js";import"./postprocessing.wUw4_rsV1741490461506.js";import"./@vueuse.9Z-Ayxy41741490461506.js";const y=S;!function(e,n){const t=S,a=_();for(;;)try{if(567614===-parseInt(t(297))/1*(-parseInt(t(300))/2)+-parseInt(t(301))/3+-parseInt(t(342))/4*(parseInt(t(330))/5)+parseInt(t(331))/6+-parseInt(t(289))/7*(parseInt(t(298))/8)+parseInt(t(328))/9+parseInt(t(344))/10*(parseInt(t(296))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=S,n=new RegExp(e(327)),t=new RegExp(e(326),"i"),a=z(e(287));n[e(338)](a+"chain")&&t.test(a+e(294))?z():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(e,n){const t=_();return(S=function(e,n){return t[e-=287]})(e,n)}function _(){const e=["input","addBinding","16071AUpalD","567353wgjNlC","7089096BFmiBB","exception","2pUGmLt","217857SraSJG","FrontSide","#17c5a9","table","return (function() ","TresCanvas","uWaveSpeed","groupRef","trace","pointsEarth","#080820","TresIcosahedronGeometry","length","change","gger","debu","size","toString","Debug","value","call","prototype","color","TresPerspectiveCamera","warn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","1194156vEzrCy","apply","170PjeHqg","4431144zwgRZT","action","stateObject","bind","pointSize","海浪高度","console","test","TresPoints","addFolder","uWaveHeight","32812WsNSby","constructor","2510hDaGXx","rotation","wireframeMaterialRef","counter","TresHemisphereLight","#122148","init",'{}.constructor("return this")( )',"7Ipdmrl","uniforms","TresMesh","__proto__","#ffffff"];return(_=function(){return e})()}w(void 0,(function(){const e=S;let n;try{n=Function(e(305)+e(288)+");")()}catch(o){n=window}const t=n[e(337)]=n[e(337)]||{},a=["log",e(325),"info","error",e(299),e(304),e(309)];for(let r=0;r<a[e(313)];r++){const n=w[e(343)][e(322)][e(334)](w),o=a[r],i=t[o]||n;n[e(292)]=w[e(334)](w),n[e(318)]=i.toString[e(334)](i),t[o]=n}}))();const b=i({__name:y(310),async setup(i){const T=y;let w,S;const _={color:T(303),pointSize:4},b={clearColor:T(349),shadows:!1,alpha:!1,outputColorSpace:e},z={color:_[T(323)],wireframe:!0,transparent:!0,opacity:.2},j=([w,S]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,S(),w),E=j[0],P=j[1],D=j[2],I=j[3],k=j[4],A={uniforms:{size:{type:"f",value:_[T(335)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n[T(302)]},C=s(),U=s(),W=(new r)[T(340)]({title:T(319)});W[T(295)](_,T(323),{type:"color"}).on(T(314),(({value:e})=>{const n=T;U.value[n(323)].set(e)})),W[T(295)](A[T(290)][T(317)],T(320),{min:.1,max:10,step:.1,label:"粒子大小"}),W.addBinding(A[T(290)][T(341)],T(320),{min:.01,max:.5,step:.01,label:T(336)}),W[T(295)](A.uniforms[T(307)],T(320),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:B}=t();return B((({delta:e})=>{const n=T;C.value&&(C[n(320)][n(345)].y+=.002,A.uniforms.uTime.value+=10*e)})),(e,n)=>{const t=T,o=u(t(306));return p(),c(o,h(b,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=f(t(324),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),f("TresGroup",{ref_key:t(308),ref:C},[f(t(291),null,[n[0]||(n[0]=f(t(312),{args:[1,4]},null,-1)),f("TresMeshBasicMaterial",h({ref_key:t(346),ref:U},z),null,16)]),f(t(339),null,[n[1]||(n[1]=f(t(312),{args:[1,128]},null,-1)),f("TresShaderMaterial",g(x(A)),null,16)])],512),n[3]||(n[3]=f(t(348),{args:[t(293),t(311),3]},null,-1))])),_:1},16)}}});function z(e){function n(e){const t=S;if("string"==typeof e)return function(e){}[t(343)]("while (true) {}")[t(329)](t(347));1!==(""+e/e).length||e%20==0?function(){return!0}.constructor(t(316)+"gger")[t(321)](t(332)):function(){return!1}[t(343)](t(316)+t(315)).apply(t(333)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
