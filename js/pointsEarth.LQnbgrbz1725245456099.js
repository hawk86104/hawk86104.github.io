import{a6 as e,ab as n}from"./three.KG2-8r0_1725245456099.js";import{$ as t,d as a,N as o}from"./@tresjs.j5vdYITq1725245456099.js";import{P as r}from"./tweakpane.yHWGBmom1725245456099.js";import{d as i,a4 as l,X as s,e as u,o as c,f,g as p,j as v,u as m,J as d,m as h,aj as g,ak as x}from"./@vue.Q1VpS3901725245456099.js";import"./@vueuse.whMtq_7M1725245456099.js";const y=b;!function(e,n){const t=b,a=E();for(;;)try{if(733340===-parseInt(t(453))/1*(parseInt(t(424))/2)+-parseInt(t(472))/3*(parseInt(t(462))/4)+parseInt(t(456))/5*(-parseInt(t(474))/6)+parseInt(t(469))/7+parseInt(t(435))/8+parseInt(t(430))/9+-parseInt(t(458))/10*(-parseInt(t(415))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=b,n=new RegExp(e(441)),t=new RegExp(e(465),"i"),a=D(e(461));n[e(446)](a+e(427))&&t[e(446)](a+"input")?D():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(423)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function b(e,n){const t=E();return(b=function(e,n){return t[e-=415]})(e,n)}w(void 0,(function(){const e=b,n=function(){const e=b;let n;try{n=Function("return (function() "+e(428)+");")()}catch(t){n=window}return n}(),t=n[e(421)]=n[e(421)]||{},a=[e(454),e(457),"info",e(432),"exception",e(438),e(471)];for(let o=0;o<a.length;o++){const n=w.constructor[e(450)][e(436)](w),r=a[o],i=t[r]||n;n[e(451)]=w.bind(w),n[e(416)]=i[e(416)][e(436)](i),t[r]=n}}))();const S=d(y(452),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=d("TresIcosahedronGeometry",{args:[1,4]},null,-1),z=d(y(429),{args:[1,128]},null,-1),j=d(y(433),{args:[y(468),"#080820",3]},null,-1);function E(){const e=["console","size","apply","102044sovTZa","TresMeshBasicMaterial","color","chain",'{}.constructor("return this")( )',"TresIcosahedronGeometry","12349683wRSOba","constructor","error","TresHemisphereLight","call","5765272ushEff","bind","while (true) {}","table","groupRef","addFolder","function *\\( *\\)","stateObject","TresGroup","counter","#17c5a9","test","value","uniforms","海浪高度","prototype","__proto__","TresPerspectiveCamera","21GIpZDN","log","length","5HwYRjv","warn","7610HXGHlM","addBinding","gger","init","52whDhFR","TresShaderMaterial","TresCanvas","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","pointSize","wireframeMaterialRef","#ffffff","8133139vkWTTj","rotation","trace","318057MggqEn","粒子大小","1000794LxzWpX","TresPoints","set","debu","FrontSide","1375IKjayK","toString","海浪变化速度","uWaveHeight","pointsEarth","TresMesh"];return(E=function(){return e})()}const P=i({__name:y(419),async setup(i){const T=y;let w,b;const E={color:T(445),pointSize:4},P={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:n},D={color:E[T(426)],wireframe:!0,transparent:!0,opacity:.2},I=([w,b]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,b(),w),k=I[0],A=I[1],H=I[2],M=I[3],W=I[4],C={uniforms:{size:{type:"f",value:E[T(466)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:H},elevTexture:{type:"t",value:M},alphaTexture:{type:"t",value:W},earthTexture:{type:"t",value:k},starTexture:{type:"t",value:A}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[T(478)]},R=s(),U=s(),F=(new r)[T(440)]({title:"Debug"});F.addBinding(E,T(426),{type:T(426)}).on("change",(({value:e})=>{const n=T;U[n(447)][n(426)][n(476)](e)})),F[T(459)](C.uniforms[T(422)],T(447),{min:.1,max:10,step:.1,label:T(473)}),F[T(459)](C.uniforms[T(418)],T(447),{min:.01,max:.5,step:.01,label:T(449)}),F[T(459)](C[T(448)].uWaveSpeed,T(447),{min:.01,max:1,step:.01,label:T(417)});const{onLoop:L}=t();return L((({delta:e})=>{const n=T;R[n(447)]&&(R[n(447)][n(470)].y+=.002,C[n(448)].uTime[n(447)]+=10*e)})),(e,n)=>{const t=T,o=u(t(464));return c(),f(o,h(P,{"window-size":""}),{default:p((()=>[S,v(m(a),{autoRotate:!0,autoRotateSpeed:2}),d(t(443),{ref_key:t(439),ref:R},[d(t(420),null,[_,d(t(425),h({ref_key:t(467),ref:U},D),null,16)]),d(t(475),null,[z,d(t(463),g(x(C)),null,16)])],512),j])),_:1},16)}}});function D(e){function n(e){const t=b;if("string"==typeof e)return function(e){}[t(431)](t(437))[t(423)](t(444));1!==(""+e/e)[t(455)]||e%20==0?function(){return!0}.constructor(t(477)+t(460))[t(434)]("action"):function(){return!1}[t(431)]("debu"+t(460)).apply(t(442)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{P as default};
