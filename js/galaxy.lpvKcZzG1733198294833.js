import{C as n,aB as t,bU as e,ak as o,am as a,a as r}from"./three.8iJMi2lU1733198294833.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.sklxXn0u1733198294833.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as b,aj as M,ak as P,F as C}from"./@vue.-THQH3GC1733198294833.js";import"./@vueuse.N_fQXUYA1733198294833.js";const x=_;!function(n,t){const e=_,o=T();for(;;)try{if(990543===-parseInt(e(331))/1*(-parseInt(e(396))/2)+-parseInt(e(335))/3+parseInt(e(366))/4*(-parseInt(e(364))/5)+-parseInt(e(382))/6+-parseInt(e(348))/7*(-parseInt(e(390))/8)+parseInt(e(375))/9+-parseInt(e(360))/10)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const y=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(391)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){y(this,(function(){const n=_,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(379),"i"),o=A(n(381));t[n(336)](o+n(365))&&e[n(336)](o+n(330))?A():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(391)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function T(){const n=["4FGeXnR","outsideColor","#b5f28d","input","752482PobBeN","#1b3984","TresCanvas","setAttribute","1487610RNdWwU","test","stateObject","a-scale","geometry","aRandomness","clone","lerp","bind","a-randomness","return (function() ","forEach","material","1365QfAzzH","cos","debu","while (true) {}","sin","prototype","action","branches","bufferRef","warn","length","random","12474240BnXvLo","value","table","error","8045DgaEGj","chain","776UHbfKT","uniforms","uTime","galaxy","toString","string","count","size","log","6217488NzxQsG","position","trace","console","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor","init","4017858ShMWBe","randomnessPower","call","radius","color","aScale","counter","TresShaderMaterial","62352TTZprk","apply","insideColor","info","gger","TresBufferGeometry"];return(T=function(){return n})()}z(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(345)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t.console=t[n(378)]||{},o=[n(374),n(357),n(393),n(363),"exception",n(362),n(377)];for(let a=0;a<o.length;a++){const t=z.constructor[n(353)].bind(z),r=o[a],s=e[r]||t;t.__proto__=z.bind(z),t[n(370)]=s[n(370)][n(343)](s),e[r]=t}}))();const S=[x(376),x(338),x(386),x(344)];function _(n,t){const e=T();return(_=function(n,t){return e[n-=330]})(n,t)}const j=u({__name:x(369),setup(u){const y=x,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a,windowSize:!0},T={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:y(332)},_=new n(T[y(392)]),j=new n(T[y(397)]),A=new Float32Array(3*T[y(372)]),F=new Float32Array(3*T[y(372)]),I=new Float32Array(T.count),R=new Float32Array(3*T[y(372)]);for(let n=0;n<T[y(372)];n++){const t=3*n,e=Math[y(359)]()*T.radius,o=n%T[y(355)]*Math.PI*2/T.branches;A[t]=Math[y(349)](o)*e,A[t+1]=0,A[t+2]=Math[y(352)](o)*e;const a=Math[y(359)]()**T.randomnessPower*(Math[y(359)]()<.5?-1:1),r=Math[y(359)]()**T[y(383)]*(Math.random()<.5?-1:1),s=Math[y(359)]()**T[y(383)]*(Math[y(359)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=_[y(341)]();i[y(342)](j,e/T[y(385)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,I[n]=Math.random()}const k={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:T[y(373)]}}};const B=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=y;B[t(361)]&&(B[t(361)][t(347)][t(367)][t(368)][t(361)]=n)}));const{count:G,size:O,radius:U,branches:N,spin:W,randomness:Z,randomnessPower:D,insideColor:H,outsideColor:L}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:y(398),outsideColor:y(332)});return f([G[y(361)],O[y(361)],U[y(361)],N[y(361)],W[y(361)],Z.value,D[y(361)],H[y(361)],L[y(361)]],(t=>{const e=y;t[e(346)](((n,t)=>{const o=e;T[Object.keys(T)[t]]=n[o(361)]})),function(){const t=y;if(B.value){const e=new n(T[t(392)]),o=new n(T.outsideColor),a=new Float32Array(3*T[t(372)]),s=new Float32Array(3*T[t(372)]),i=new Float32Array(T[t(372)]),c=new Float32Array(3*T.count);for(let n=0;n<T[t(372)];n++){const r=3*n,l=Math[t(359)]()*T[t(385)],u=n%T[t(355)]*Math.PI*2/T[t(355)];a[r]=Math[t(349)](u)*l,a[r+1]=0,a[r+2]=Math[t(352)](u)*l;const d=Math[t(359)]()**T[t(383)]*(Math.random()<.5?-1:1),f=Math[t(359)]()**T.randomnessPower*(Math[t(359)]()<.5?-1:1),m=Math.random()**T[t(383)]*(Math[t(359)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=e[t(341)]();p.lerp(o,l/T[t(385)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(359)]()}B.value[t(339)][t(334)](t(376),new r(a,3)),B[t(361)][t(339)].setAttribute(t(340),new r(c,3)),B[t(361)][t(339)][t(334)](t(386),new r(s,3)),B.value[t(339)].setAttribute(t(387),new r(i,1))}}()})),(n,t)=>{const e=y,o=m(e(333));return p(),h(C,null,[v(g(c)),v(o,M(P(z)),{default:w((()=>[t[0]||(t[0]=b("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),b("TresPoints",{ref_key:e(356),ref:B},[b(e(395),{position:[g(A),3],"a-scale":[g(I),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,S),b(e(389),M(P(k)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const e=_;if(typeof n===e(371))return function(n){}[e(380)](e(351))[e(391)](e(388));1!==(""+n/n)[e(358)]||n%20==0?function(){return!0}[e(380)](e(350)+e(394))[e(384)](e(354)):function(){return!1}.constructor("debu"+e(394))[e(391)](e(337)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
