import{_ as e}from"./three._P_a_E_Z1730886807320.js";import{e as n,U as t,b as a}from"./@tresjs.iUmyNPdW1730886807320.js";import{P as o}from"./tweakpane.yHWGBmom1730886807320.js";import{d as r,a6 as i,X as l,e as s,o as u,f as c,g as v,J as f,j as p,u as m,m as d,aj as h,ak as g}from"./@vue.-THQH3GC1730886807320.js";import"./@vueuse.Uoe2bW0Q1730886807320.js";const x=S;!function(e,n){const t=S,a=w();for(;;)try{if(814342===-parseInt(t(342))/1*(-parseInt(t(350))/2)+parseInt(t(360))/3+parseInt(t(366))/4+-parseInt(t(351))/5*(-parseInt(t(321))/6)+-parseInt(t(335))/7*(parseInt(t(339))/8)+parseInt(t(356))/9+-parseInt(t(320))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(336)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(e,n){const t=w();return(S=function(e,n){return t[e-=303]})(e,n)}!function(){y(this,(function(){const e=S,n=new RegExp(e(330)),t=new RegExp(e(317),"i"),a=b(e(348));n[e(323)](a+e(347))&&t[e(323)](a+e(352))?b():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(336)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(){const e=["海浪高度","#17c5a9","table","warn","trace","function *\\( *\\)","uWaveSpeed","info",'{}.constructor("return this")( )',"TresMeshBasicMaterial","35JAuQOm","apply","pointsEarth","粒子大小","1342112GgYYYN","TresGroup","bind","53APOFyM","#ffffff","error","SRGBColorSpace","stateObject","chain","init","TresPerspectiveCamera","46542oCJomq","14885WtTjWP","input","gger","TresCanvas","TresHemisphereLight","13922523vSepQI","color","__proto__","string","4399134SvhXyZ","set","TresPoints","call","console","addBinding","4646124HKJSPQ","debu","toString","pointSize","FrontSide","return (function() ","TresShaderMaterial","change","value","uniforms","constructor","action","uTime","groupRef","prototype","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresIcosahedronGeometry","uWaveHeight","40259640hJWxGv","546HwkqdP","addFolder","test","length"];return(w=function(){return e})()}T(void 0,(function(){const e=S,n=function(){const e=S;let n;try{n=Function(e(307)+e(333)+");")()}catch(t){n=window}return n}(),t=n[e(364)]=n[e(364)]||{},a=["log",e(328),e(332),e(344),"exception",e(327),e(329)];for(let o=0;o<a[e(324)];o++){const n=T[e(312)][e(316)][e(341)](T),r=a[o],i=t[r]||n;n[e(358)]=T[e(341)](T),n[e(304)]=i.toString[e(341)](i),t[r]=n}}))();const _=r({__name:x(337),async setup(r){const y=x;let S,T;const w={color:y(326),pointSize:4},_={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[y(345)]},b={color:w[y(357)],wireframe:!0,transparent:!0,opacity:.2},z=([S,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),S=await S,T(),S),P=z[0],j=z[1],E=z[2],D=z[3],A=z[4],I={uniforms:{size:{type:"f",value:w[y(305)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:E},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:A},earthTexture:{type:"t",value:P},starTexture:{type:"t",value:j}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(306)]},k=l(),C=l(),W=(new o)[y(322)]({title:"Debug"});W[y(365)](w,y(357),{type:y(357)}).on(y(309),(({value:e})=>{const n=y;C.value.color[n(361)](e)})),W[y(365)](I[y(311)].size,y(310),{min:.1,max:10,step:.1,label:y(338)}),W[y(365)](I.uniforms[y(319)],y(310),{min:.01,max:.5,step:.01,label:y(325)}),W.addBinding(I[y(311)][y(331)],y(310),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:H}=n();return H((({delta:e})=>{const n=y;k[n(310)]&&(k.value.rotation.y+=.002,I.uniforms[n(314)][n(310)]+=10*e)})),(e,n)=>{const a=y,o=s(a(354));return u(),c(o,d(_,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=f(a(349),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),p(m(t),{autoRotate:!0,autoRotateSpeed:2}),f(a(340),{ref_key:a(315),ref:k},[f("TresMesh",null,[n[0]||(n[0]=f(a(318),{args:[1,4]},null,-1)),f(a(334),d({ref_key:"wireframeMaterialRef",ref:C},b),null,16)]),f(a(362),null,[n[1]||(n[1]=f(a(318),{args:[1,128]},null,-1)),f(a(308),h(g(I)),null,16)])],512),n[3]||(n[3]=f(a(355),{args:[a(343),"#080820",3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=S;if(typeof e===t(359))return function(e){}.constructor("while (true) {}")[t(336)]("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(312)]("debu"+t(353))[t(363)](t(313)):function(){return!1}.constructor(t(303)+"gger")[t(336)](t(346)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
