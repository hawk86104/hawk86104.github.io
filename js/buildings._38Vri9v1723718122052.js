import{u as t,_ as n,a as o}from"./mergeTres.rbz2zxqh1723718122052.js";import{l as r}from"./utils.5XL1i0441723718122052.js";import{$ as e}from"./@tresjs.GO-cpSrO1723718122052.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.Q1VpS3901723718122052.js";import{_ as w}from"./@fesjs.KgfPPsKU1723718122052.js";import"./@amap.r0EhX7fK1723718122052.js";import"./pinia.p23gk2AF1723718122052.js";import"./three.eXhPIzTa1723718122052.js";import"./three-mesh-bvh.WfZkfET01723718122052.js";import"./tweakpane.yHWGBmom1723718122052.js";import"./@vueuse.z522fCYR1723718122052.js";import"./vue-router.U0DG8FfS1723718122052.js";import"./lodash-es.nFpJXAf-1723718122052.js";import"./@qlin.yHhFDldE1723718122052.js";import"./@floating-ui.BPbuo5Gx1723718122052.js";import"./@juggle.7yjBMqoW1723718122052.js";const x=S;!function(t,n){const o=S,r=z();for(;;)try{if(121720===-parseInt(o(281))/1+parseInt(o(312))/2+-parseInt(o(264))/3*(-parseInt(o(288))/4)+-parseInt(o(296))/5+-parseInt(o(268))/6+parseInt(o(293))/7*(parseInt(o(283))/8)+parseInt(o(295))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(273)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=S,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(263),"i"),r=R("init");n[t(262)](r+"chain")&&o.test(r+t(261))?R():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(273)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function S(t,n){const o=z();return(S=function(t,n){return o[t-=261]})(t,n)}I(void 0,(function(){const t=S;let n;try{n=Function(t(279)+t(302)+");")()}catch(e){n=window}const o=n[t(314)]=n[t(314)]||{},r=[t(294),"warn",t(285),"error",t(315),"table","trace"];for(let a=0;a<r.length;a++){const n=I.constructor[t(292)].bind(I),e=r[a],i=o[e]||n;n.__proto__=I[t(272)](I),n[t(270)]=i[t(270)].bind(i),o[e]=n}}))();const j=[x(310),x(289),x(308)];function z(){const t=["return (function() ","length","139394haXcNg","constructor","516632rTJSPz","TresBufferGeometry","info","string","geometry","363348ZnMABy","faceUv","u_zoom","mapHandle","prototype","14dRhkAg","log","93888UlkcuP","264800ypluMp","debu","lngLatToCoord","value","action","positionArray",'{}.constructor("return this")( )',"u_near","normalArray","tbgRef","cameraState","buildings","normal","customCoords","position","while (true) {}","293074fiwziP","push","console","exception","input","test","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","3QPbrXk","gger","near","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","377340gOtHVE","uniforms","toString","u_far","bind","apply","buildingModels","TresShaderMaterial","counter","far","TresMesh"];return(z=function(){return t})()}const P=a({__name:x(274),setup(n){const o=t(),a=t=>{const n=S;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(291)].customCoords[n(298)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[S(306)]&&(async()=>{const t=S,n=await r(t(267),t(307));for(let o=0;o<n[t(280)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r[t(287)]),i=new Float32Array(r.faceUv),l=new Float32Array(r.geometry.length);d[t(313)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;o[t(306)]&&(g.uniforms[t(290)][t(299)]=o[t(291)].getZoom(),g[t(269)][t(303)].value=o.cameraState[t(266)],g[t(269)][t(271)].value=o[t(306)][t(277)])})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,n)=>{const o=S;return c(),s(o(278),{key:""+n},[p(o(284),{ref_for:!0,ref:o(305),position:[t[o(301)],3],faceUv:[t.uvArray,2],normal:[t[o(304)],3]},null,8,j),p(o(275),v({ref_for:!0},g),null,16)])})),128))]))}});function R(t){function n(t){const o=S;if(typeof t===o(286))return function(t){}[o(282)](o(311)).apply(o(276));1!==(""+t/t)[o(280)]||t%20==0?function(){return!0}[o(282)]("debu"+o(265)).call(o(300)):function(){return!1}[o(282)](o(297)+o(265)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}function A(){const t=["20SMMDcT","constructor","apply","stateObject","warn","counter","3398800iwEMLi","tresCanvas","table","console","log","chain","call",'{}.constructor("return this")( )',"2803395Bvzqgw","14cWFbdh","79740UaBYJd","TresCanvas","tcRef","52573nKImJC","data-v-40288e17","info","1194660YYpMOj","exception","prototype","bind","test","debu","length","darkblue","12vZzhKk","gger","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresPerspectiveCamera","1683224aSzaTH","function *\\( *\\)","TresAmbientLight","toString","string","while (true) {}","action","__proto__","2302704nOvEog","return (function() "];return(A=function(){return t})()}const M=k;!function(t,n){const o=k,r=A();for(;;)try{if(417529===-parseInt(o(206))/1*(-parseInt(o(217))/2)+parseInt(o(185))/3+-parseInt(o(222))/4+parseInt(o(201))/5+-parseInt(o(209))/6*(parseInt(o(202))/7)+-parseInt(o(193))/8+-parseInt(o(203))/9*(-parseInt(o(187))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[k(189)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=k,n=new RegExp(t(223)),o=new RegExp(t(220),"i"),r=D("init");n[t(213)](r+t(198))&&o[t(213)](r+t(219))?D():r("0")}))()}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[k(189)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function k(t,n){const o=A();return(k=function(t,n){return o[t-=180]})(t,n)}U(void 0,(function(){const t=k;let n;try{n=Function(t(186)+t(200)+");")()}catch(e){n=window}const o=n.console=n[t(196)]||{},r=[t(197),t(191),t(208),"error",t(210),t(195),"trace"];for(let a=0;a<r[t(215)];a++){const n=U[t(188)][t(211)][t(212)](U),e=r[a],i=o[e]||n;n[t(184)]=U[t(212)](U),n[t(180)]=i[t(180)][t(212)](i),o[e]=n}}))();const T=t=>(y(M(207)),t=t(),C(),t),E=T((()=>p(M(221),{fov:60,near:.1,far:2e3},null,-1))),L=T((()=>p(M(224),{intensity:.5},null,-1)));function D(t){function n(t){const o=k;if(typeof t===o(181))return function(t){}[o(188)](o(182)).apply(o(192));1!==(""+t/t).length||t%20==0?function(){return!0}[o(188)](o(214)+"gger")[o(199)](o(183)):function(){return!1}[o(188)](o(214)+o(218)).apply(o(190)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const W=w(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=k,l=d(i(204));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(216)}),g(l,v({id:i(194),ref:i(205)},e),{default:m((()=>[E,L,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{W as default};
