import{u as t,_ as o,a as n}from"./mergeTres.XyYnwpAG1723628107012.js";import{l as r}from"./utils.-HfbVRfT1723628107012.js";import{$ as e}from"./@tresjs.SUe87xao1723628107012.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.9bHx4gg21723628107012.js";import{_ as x}from"./@fesjs.BuhZYZEQ1723628107012.js";import"./@amap.XsUkMUkF1723628107012.js";import"./pinia.nipTyfok1723628107012.js";import"./three.LOnTLfxo1723628107012.js";import"./three-mesh-bvh.-U140OdV1723628107012.js";import"./tweakpane.yHWGBmom1723628107012.js";import"./@vueuse.t-c8gU4-1723628107012.js";import"./vue-router.XBF1ZL3N1723628107012.js";import"./lodash-es.nFpJXAf-1723628107012.js";import"./@qlin.yHhFDldE1723628107012.js";import"./@floating-ui.BPbuo5Gx1723628107012.js";import"./@juggle.7yjBMqoW1723628107012.js";const w=S;function b(){const t=["test","getZoom","error","TresBufferGeometry","init","161676oHYhsR","u_far","apply","geometry","value","cameraState","exception","uvArray","72OvyxWq","gger","1LpHLZw","function *\\( *\\)","u_zoom","12uPxCCy","tbgRef","table","u_near","__proto__","stateObject","TresShaderMaterial","TresGroup","toString","5731979zzbelA","prototype","far","32idkAuP","exp","655518ChsGgX","constructor","12NUAMGW","TresMesh","debu","mapHandle","length","warn","string","console","position","290937dkEgbo","action","lngLatToCoord","customCoords","faceUv","return (function() ","while (true) {}","trace","counter","bind","chain","515220wLMYMq","1449975dxKGpO","516369DkjZTk","buildingModels","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","positionArray","info"];return(b=function(){return t})()}!function(t,o){const n=S,r=b();for(;;)try{if(243548===parseInt(n(305))/1*(parseInt(n(260))/2)+-parseInt(n(271))/3*(-parseInt(n(308))/4)+parseInt(n(283))/5+-parseInt(n(295))/6+-parseInt(n(284))/7*(-parseInt(n(258))/8)+-parseInt(n(303))/9*(parseInt(n(282))/10)+parseInt(n(255))/11*(-parseInt(n(262))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function S(t,o){const n=b();return(S=function(t,o){return n[t-=250]})(t,o)}!function(){I(this,(function(){const t=S,o=new RegExp(t(306)),n=new RegExp(t(286),"i"),r=P(t(294));o[t(290)](r+t(281))&&n.test(r+"input")?P():r("0")}))()}();const j=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[S(297)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();j(void 0,(function(){const t=S;let o;try{o=Function(t(276)+'{}.constructor("return this")( ));')()}catch(e){o=window}const n=o[t(269)]=o[t(269)]||{},r=["log",t(267),t(289),t(292),t(301),t(310),t(278)];for(let a=0;a<r[t(266)];a++){const o=j[t(261)][t(256)].bind(j),e=r[a],i=n[e]||o;o[t(250)]=j.bind(j),o[t(254)]=i[t(254)][t(280)](i),n[e]=o}}))();const z=[w(270),w(275),"normal"],A=a({__name:w(285),setup(o){const n=t(),a=t=>{const o=S;for(let r=0;r<t[o(266)];r+=3){const e=[t[r],t[r+1]],a=n[o(265)].customCoords[o(273)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[S(300)]&&(async()=>{const t=S,o=await r(t(287),"buildings");for(let n=0;n<o[t(266)];n++){const r=o[n];a(r[t(298)]);const e=new Float32Array(r[t(298)]),i=new Float32Array(r.faceUv),l=new Float32Array(r.geometry.length);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;n[t(300)]&&(g.uniforms[t(307)][t(299)]=n[t(265)][t(291)](),g.uniforms[t(311)][t(299)]=n[t(300)].near,g.uniforms[t(296)][t(299)]=n.cameraState[t(257)])})),(t,o)=>{const n=S;return c(),s(n(253),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(263),{key:""+o},[p(r(293),{ref_for:!0,ref:r(309),position:[t[r(288)],3],faceUv:[t[r(302)],2],normal:[t.normalArray,3]},null,8,z),p(r(252),v({ref_for:!0},g),null,16)])})),128))])}}});function P(t){function o(t){const n=S;if(typeof t===n(268))return function(t){}[n(261)](n(277))[n(297)](n(279));1!==(""+t/t)[n(266)]||t%20==0?function(){return!0}[n(261)](n(264)+n(304)).call(n(272)):function(){return!1}.constructor("debu"+n(304))[n(297)](n(251)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const R=D;!function(t,o){const n=D,r=W();for(;;)try{if(371053===parseInt(n(177))/1+parseInt(n(199))/2*(parseInt(n(165))/3)+parseInt(n(190))/4+-parseInt(n(163))/5+parseInt(n(178))/6+parseInt(n(195))/7+-parseInt(n(198))/8*(parseInt(n(172))/9))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const U=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[D(194)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){U(this,(function(){const t=D,o=new RegExp(t(170)),n=new RegExp(t(188),"i"),r=T("init");o.test(r+"chain")&&n.test(r+t(171))?T():r("0")}))()}();const k=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();k(void 0,(function(){const t=D;let o;try{o=Function(t(181)+t(189)+");")()}catch(e){o=window}const n=o[t(168)]=o.console||{},r=["log","warn",t(182),t(193),t(197),t(180),t(169)];for(let a=0;a<r[t(175)];a++){const o=k[t(184)][t(187)][t(202)](k),e=r[a],i=n[e]||o;o[t(201)]=k[t(202)](k),o[t(167)]=i[t(167)][t(202)](i),n[e]=o}}))();const F=t=>(C(R(200)),t=t(),y(),t),L=F((()=>p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1))),M=F((()=>p(R(164),{intensity:.5},null,-1)));function D(t,o){const n=W();return(D=function(t,o){return n[t-=163]})(t,o)}function W(){const t=["buildings","tresCanvas","prototype","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)",'{}.constructor("return this")( )',"51064TlHVPp","debu","counter","error","apply","3139367SnboZV","darkblue","exception","928Sexgwj","726XaBqlX","data-v-40288e17","__proto__","bind","100865DYAYVP","TresAmbientLight","27EAHNqe","gger","toString","console","trace","function *\\( *\\)","input","44685OlOcUr","tcRef","string","length","TresCanvas","498594sJJZbD","24348WcKXtb","action","table","return (function() ","info","stateObject","constructor"];return(W=function(){return t})()}function T(t){function o(t){const n=D;if(typeof t===n(174))return function(t){}[n(184)]("while (true) {}")[n(194)](n(192));1!==(""+t/t)[n(175)]||t%20==0?function(){return!0}[n(184)]("debu"+n(166)).call(n(179)):function(){return!1}[n(184)](n(191)+n(166))[n(194)](n(183)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const E=x(a({__name:R(185),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=D,l=d(i(176));return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(196)}),g(l,v({id:i(186),ref:i(173)},e),{default:m((()=>[L,M,g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(A)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{E as default};
