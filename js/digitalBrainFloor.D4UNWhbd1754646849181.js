import{cf as o,N as s,_ as e,ce as a}from"./three.BWo_6did1754646849181.js";import{a as i}from"./@tresjs.EkZ_QTfE1754646849181.js";import{P as t}from"./tweakpane.C0HtAJSg1754646849181.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.BQCfYYYu1754646849181.js";import"./index.DuRViGas1754646849181.js";import{l}from"./util.BBS57ZEn1754646849181.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.BzlaMAup1754646849181.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BjANtU-_1754646849181.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DtQknfzm1754646849181.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as b,u as h,f as y,I as v,a7 as w,a8 as B,e as x,H as L,m as k,a5 as C,F as P}from"./@vue.BzMISRrV1754646849181.js";import"./postprocessing.DILjcRc91754646849181.js";import"./@vueuse.uWD-2GR_1754646849181.js";import"./utils.DnJ-RFK_1754646849181.js";import"./@fesjs.C_xmqVvB1754646849181.js";import"./vue-router.bKRZXZZg1754646849181.js";import"./lodash-es.C7pWAXPe1754646849181.js";import"./@qlin.q6OWdsQV1754646849181.js";import"./pinia.C_jiKjvU1754646849181.js";import"./@babel.BPq7uOAK1754646849181.js";import"./@floating-ui.BFjFSAYt1754646849181.js";import"./@juggle.CcBCnTIR1754646849181.js";import"./index.qnYdS7XQ1754646849181.js";import"./three-mesh-ui.module.Bqi_8VPG1754646849181.js";/* empty css                                                              */import"./starLoading.Cdr7aycT1754646849181.js";import"./cssLoaders.DtQQ_sv01754646849181.js";import"./bubbleLoading.BMQhBZUj1754646849181.js";import"./yangyangLoading.do8-xdPL1754646849181.js";const T={position:[0,120,0]},S=u({__name:"digitalBrainFloor",async setup(u){let S,z;const G=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),M=c({color:"#fff",show:!0,opacity:1}),q=new t({title:"参数"});q.addBinding(M,"show",{label:"点云显示"}),q.addBinding(M,"color",{label:"点云颜色"}),q.addBinding(M,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});q.addBinding(F,"show",{label:"脑轮廓显示"}),q.addBinding(F,"color",{label:"脑轮廓颜色"}),q.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const O=c({color:"#9e00af",show:!0,opacity:1});q.addBinding(O,"show",{label:"脑组织显示"}),q.addBinding(O,"color",{label:"脑组织颜色"}),q.addBinding(O,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const R=new o,A=([S,z]=_((()=>l("./plugins/medical/model/brainparts.OBJ",R))),S=await S,z(),S),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:e,toneMapping:s}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const e=j("TresCanvas");return g(),f(P,null,[b(h(d)),b(e,k(E,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),w(B(H)),null,16),s[1]||(s[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",T,[M.show?(g(),x(n,k({key:0,model:h(A)},M),null,16,["model"])):L("",!0),(g(),x(C,null,{default:y((()=>[F.show?(g(),x(p,k({key:0,model:h(A)},F),null,16,["model"])):L("",!0)])),_:1})),O.show?(g(),x(m,k({key:1,model:h(A)},O),null,16,["model"])):L("",!0)]),b(r,w(B(G)),null,16)])),_:1},16)],64)}}});export{S as default};
