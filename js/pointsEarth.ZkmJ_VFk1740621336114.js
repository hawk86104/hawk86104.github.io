import{_ as e}from"./three.sXv6UbbL1740621336114.js";import{e as n,o as t,a}from"./@tresjs.Td0X-dew1740621336114.js";import{P as o}from"./tweakpane.yDiyAAkA1740621336114.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as p,N as v,j as f,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1740621336114.js";import"./@vueuse.cgJUSr_21740621336114.js";const x=w;!function(e,n){const t=w,a=S();for(;;)try{if(610022===parseInt(t(368))/1*(parseInt(t(339))/2)+-parseInt(t(351))/3*(-parseInt(t(377))/4)+-parseInt(t(384))/5+parseInt(t(337))/6+-parseInt(t(372))/7*(-parseInt(t(382))/8)+parseInt(t(365))/9+-parseInt(t(390))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=w,n=new RegExp(e(383)),t=new RegExp(e(348),"i"),a=b(e(394));n.test(a+e(349))&&t.test(a+e(364))?b():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=S();return(w=function(e,n){return t[e-=334]})(e,n)}function S(){const e=["#ffffff","65358bTMXlz","warn","addBinding","debu","addFolder","TresIcosahedronGeometry","TresPerspectiveCamera","apply","TresPoints","wireframeMaterialRef","gger","pointSize","海浪高度","input","9423432lsWqwL","#17c5a9","uWaveHeight","1fuROUJ","uniforms","set","counter","14MSBOcv","call","change","stateObject","pointsEarth","124Oezevp",'{}.constructor("return this")( )',"console","return (function() ","length","4547656TVjGOa","function *\\( *\\)","1974030YZeveI","SRGBColorSpace","error","Debug","string","uTime","25582270QdPLqI","bind","info","TresMeshBasicMaterial","init","FrontSide","color","size","1598208uMaIJt","action","874718mHmDAJ","toString","log","value","trace","exception","TresCanvas","TresHemisphereLight","TresGroup","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","chain"];return(S=function(){return e})()}T(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function(e(380)+e(378)+");")()}catch(t){n=window}return n}(),t=n[e(379)]=n[e(379)]||{},a=[e(341),e(352),e(392),e(386),e(344),"table",e(343)];for(let o=0;o<a[e(381)];o++){const n=T.constructor.prototype[e(391)](T),r=a[o],i=t[r]||n;n.__proto__=T.bind(T),n[e(340)]=i[e(340)][e(391)](i),t[r]=n}}))();const _=r({__name:x(376),async setup(r){const y=x;let T,w;const S={color:y(366),pointSize:4},_={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[y(385)]},b={color:S[y(335)],wireframe:!0,transparent:!0,opacity:.2},z=([T,w]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),j=z[0],E=z[1],P=z[2],D=z[3],I=z[4],A={uniforms:{size:{type:"f",value:S[y(362)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(334)]},M=l(),k=l(),C=(new o)[y(355)]({title:y(387)});C[y(353)](S,y(335),{type:y(335)}).on(y(374),(({value:e})=>{const n=y;k[n(342)][n(335)][n(370)](e)})),C[y(353)](A.uniforms[y(336)],"value",{min:.1,max:10,step:.1,label:"粒子大小"}),C[y(353)](A.uniforms[y(367)],y(342),{min:.01,max:.5,step:.01,label:y(363)}),C[y(353)](A[y(369)].uWaveSpeed,"value",{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:U}=n();return U((({delta:e})=>{const n=y;M[n(342)]&&(M[n(342)].rotation.y+=.002,A.uniforms[n(389)].value+=10*e)})),(e,n)=>{const a=y,o=s(a(345));return u(),c(o,d(_,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=v(a(357),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),f(m(t),{autoRotate:!0,autoRotateSpeed:2}),v(a(347),{ref_key:"groupRef",ref:M},[v("TresMesh",null,[n[0]||(n[0]=v(a(356),{args:[1,4]},null,-1)),v(a(393),d({ref_key:a(360),ref:k},b),null,16)]),v(a(359),null,[n[1]||(n[1]=v(a(356),{args:[1,128]},null,-1)),v("TresShaderMaterial",h(g(A)),null,16)])],512),n[3]||(n[3]=v(a(346),{args:[a(350),"#080820",3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=w;if(typeof e===t(388))return function(e){}.constructor("while (true) {}").apply(t(371));1!==(""+e/e).length||e%20==0?function(){return!0}.constructor(t(354)+t(361))[t(373)](t(338)):function(){return!1}.constructor(t(354)+t(361))[t(358)](t(375)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
