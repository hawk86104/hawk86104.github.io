import{u as t,_ as n,a as o}from"./mergeTres.dHCXwyNV1726273176332.js";import{l as r}from"./utils.3r2MlQfg1726273176332.js";import{U as e}from"./@tresjs.BFyWuCYn1726273176332.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.JNsx1iN61726273176332.js";import{_ as w}from"./@fesjs.Le0G27v81726273176332.js";import"./@amap.5r4w7xpt1726273176332.js";import"./pinia.sTdGQtra1726273176332.js";import"./three.874nNzAX1726273176332.js";import"./three-mesh-bvh.qZ1iQe8O1726273176332.js";import"./@vueuse.NxhkGURn1726273176332.js";import"./vue-router.QsvKvlu81726273176332.js";import"./lodash-es.kYt-_xTG1726273176332.js";import"./@qlin.yHhFDldE1726273176332.js";import"./@floating-ui.BPbuo5Gx1726273176332.js";import"./@juggle.7yjBMqoW1726273176332.js";function x(t,n){const o=z();return(x=function(t,n){return o[t-=229]})(t,n)}const b=x;!function(t,n){const o=x,r=z();for(;;)try{if(323060===parseInt(o(276))/1+-parseInt(o(247))/2*(-parseInt(o(253))/3)+-parseInt(o(254))/4*(-parseInt(o(266))/5)+parseInt(o(281))/6*(parseInt(o(252))/7)+parseInt(o(275))/8+-parseInt(o(282))/9+-parseInt(o(260))/10*(parseInt(o(243))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){I(this,(function(){const t=x,n=new RegExp(t(251)),o=new RegExp(t(234),"i"),r=F(t(236));n[t(255)](r+t(250))&&o[t(255)](r+t(233))?F():r("0")}))()}();const S=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();S(void 0,(function(){const t=x;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(248)]=n[t(248)]||{},r=[t(270),t(246),t(242),t(265),"exception",t(264),"trace"];for(let a=0;a<r[t(278)];a++){const n=S[t(249)].prototype[t(239)](S),e=r[a],i=o[e]||n;n[t(235)]=S[t(239)](S),n[t(232)]=i[t(232)][t(239)](i),o[e]=n}}))();const j=[b(283),b(279),"normal"];function z(){const t=["497hElnzI","1887RkpeTd","876952OWeXtF","test","debu","uvArray","positionArray","value","13547230DpdRZT","exp","mapHandle","counter","table","error","10NMrtuw","call","customCoords","action","log","lngLatToCoord","u_near","push","normalArray","2240720QpdlgY","84719rMkFXR","cameraState","length","faceUv","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","50940KvuaQJ","1738107DpoDnJ","position","while (true) {}","apply","getZoom","atan","geometry","stateObject","toString","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","init","uniforms","near","bind","TresShaderMaterial","u_far","info","11nsiSqb","buildings","TresMesh","warn","1478ewnaew","console","constructor","chain","function *\\( *\\)"];return(z=function(){return t})()}const R=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=x;for(let r=0;r<t[n(278)];r+=3){const e=[t[r],t[r+1]],a=o[n(262)][n(268)][n(271)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=x,n=await r(t(280),t(244));for(let o=0;o<n[t(278)];o++){const r=n[o];a(r[t(230)]);const e=new Float32Array(r[t(230)]),i=new Float32Array(r[t(279)]),l=new Float32Array(r[t(230)][t(278)]);d[t(273)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=x;o[t(277)]&&(g[t(237)].u_zoom.value=o.mapHandle[t(286)](),g[t(237)][t(272)].value=o[t(277)][t(238)],g[t(237)][t(241)][t(259)]=o[t(277)].far)})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,n)=>{const o=x;return c(),s(o(245),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:"tbgRef",position:[t[o(258)],3],faceUv:[t[o(257)],2],normal:[t[o(274)],3]},null,8,j),p(o(240),v({ref_for:!0},g),null,16)])})),128))]))}});function F(t){function n(t){const o=x;if("string"==typeof t)return function(t){}[o(249)](o(284)).apply(o(263));1!==(""+t/t)[o(278)]||t%20==0?function(){return!0}.constructor(o(256)+"gger")[o(267)](o(269)):function(){return!1}[o(249)]("debugger")[o(285)](o(231)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function P(){const t=["48jbPsiY","657114DCeTct","length",'{}.constructor("return this")( )',"425430BCthNI","1952032sBRnzk","buildings","debu","TresCanvas","44190HjfAgp","123764wWgbuX","string","gger","function *\\( *\\)","test","exception","data-v-f2059998","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","apply","bind","__proto__","prototype","chain","call","error","action","console","return (function() ","73200yRyioz","init","27503BtFSQV","warn","TresAmbientLight","info","trace","6TXKhVF","constructor","stateObject","while (true) {}","tcRef"];return(P=function(){return t})()}const A=M;function M(t,n){const o=P();return(M=function(t,n){return o[t-=156]})(t,n)}!function(t,n){const o=M,r=P();for(;;)try{if(216644===parseInt(o(185))/1*(parseInt(o(160))/2)+parseInt(o(178))/3*(parseInt(o(190))/4)+-parseInt(o(194))/5+-parseInt(o(191))/6+-parseInt(o(180))/7+-parseInt(o(195))/8+-parseInt(o(159))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[M(168)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){U(this,(function(){const t=M,n=new RegExp(t(163)),o=new RegExp(t(167),"i"),r=L(t(179));n[t(164)](r+t(172))&&o.test(r+"input")?L():r("0")}))()}();const D=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[M(168)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();D(void 0,(function(){const t=M;let n;try{n=Function(t(177)+t(193)+");")()}catch(e){n=window}const o=n[t(176)]=n[t(176)]||{},r=["log",t(181),t(183),t(174),t(165),"table",t(184)];for(let a=0;a<r.length;a++){const n=D[t(186)][t(171)][t(169)](D),e=r[a],i=o[e]||n;n[t(170)]=D.bind(D),n.toString=i.toString[t(169)](i),o[e]=n}}))();const T=t=>(y(A(166)),t=t(),C(),t),W=T((()=>p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1))),k=T((()=>p(A(182),{intensity:.5},null,-1)));function L(t){function n(t){const o=M;if(typeof t===o(161))return function(t){}[o(186)](o(188))[o(168)]("counter");1!==(""+t/t)[o(192)]||t%20==0?function(){return!0}[o(186)](o(157)+"gger")[o(173)](o(175)):function(){return!1}[o(186)](o(157)+o(162))[o(168)](o(187)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const E=w(a({__name:A(156),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=M,l=d(i(158));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:"tresCanvas",ref:i(189)},e),{default:m((()=>[W,k,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{E as default};
