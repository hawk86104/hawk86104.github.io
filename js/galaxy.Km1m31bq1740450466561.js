import{c0 as n,ak as t,am as o,C as e,aX as r,c as a}from"./three.HaMTRCf61740450466561.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.9lmhsV6t1740450466561.js";import{d as u,b as f,w as d,e as m,o as p,H as h,j as v,u as g,g as w,N as P,aj as M,ak as y,F as C}from"./@vue.NRI7TcgI1740450466561.js";import"./@vueuse.q8gKo7tC1740450466561.js";const b=z;!function(n,t){const o=z,e=I();for(;;)try{if(699022===parseInt(o(439))/1*(-parseInt(o(467))/2)+-parseInt(o(474))/3+-parseInt(o(438))/4+-parseInt(o(444))/5+-parseInt(o(475))/6+-parseInt(o(432))/7*(parseInt(o(446))/8)+-parseInt(o(478))/9*(-parseInt(o(486))/10))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const x=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function z(n,t){const o=I();return(z=function(n,t){return o[n-=423]})(n,t)}function I(){const n=['{}.constructor("return this")( )',"log","value","constructor","1515308OGjffD","9yGkffK","setAttribute","call","chain","black","2833840fXhAnI","geometry","115592aYDZPu","action","lerp","init","return (function() ","TresShaderMaterial","apply","random","branches","size","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","cos","TresBufferGeometry","forEach","galaxy","input","TresPoints","uniforms","clone","string","console","538GEnDBE","randomnessPower","test","function *\\( *\\)","aRandomness","aScale","position","3278418lQDcEo","2537034ePJqvO","outsideColor","table","33714GZLPlo","bind","count","a-scale","length","sin","debu","exception","11490EHXnIw","gger","color","bufferRef","insideColor","uTime","toString","radius","error","#b5f28d","a-randomness","553UTPgGm","while (true) {}"];return(I=function(){return n})()}!function(){x(this,(function(){const n=z,t=new RegExp(n(470)),o=new RegExp(n(456),"i"),e=j(n(449));t.test(e+n(442))&&o[n(469)](e+n(461))?j():e("0")}))()}();const S=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[z(452)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();S(void 0,(function(){const n=z,t=function(){const n=z;let t;try{t=Function(n(450)+n(434)+");")()}catch(o){t=window}return t}(),o=t[n(466)]=t[n(466)]||{},e=[n(435),"warn","info",n(429),n(485),n(477),"trace"];for(let r=0;r<e[n(482)];r++){const t=S[n(437)].prototype.bind(S),a=e[r],s=o[a]||t;t.__proto__=S[n(479)](S),t.toString=s[n(427)][n(479)](s),o[a]=t}}))();const T=[b(473),b(481),b(423),b(431)],_=u({__name:b(460),setup(u){const x=b,z={clearColor:x(443),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},I={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(430),outsideColor:"#1b3984"},S=new e(I.insideColor),_=new e(I[x(476)]),j=new Float32Array(3*I[x(480)]),A=new Float32Array(3*I[x(480)]),F=new Float32Array(I[x(480)]),k=new Float32Array(3*I[x(480)]);for(let n=0;n<I[x(480)];n++){const t=3*n,o=Math[x(453)]()*I[x(428)],e=n%I[x(454)]*Math.PI*2/I[x(454)];j[t]=Math[x(457)](e)*o,j[t+1]=0,j[t+2]=Math[x(483)](e)*o;const r=Math[x(453)]()**I[x(468)]*(Math.random()<.5?-1:1),a=Math[x(453)]()**I[x(468)]*(Math[x(453)]()<.5?-1:1),s=Math[x(453)]()**I[x(468)]*(Math[x(453)]()<.5?-1:1);k[t]=r,k[t+1]=a,k[t+2]=s;const i=S[x(464)]();i[x(448)](_,o/I[x(428)]),A[t+0]=i.r,A[t+1]=i.g,A[t+2]=i.b,F[n]=Math[x(453)]()}const E={transparent:!0,depthWrite:!1,blending:r,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:I[x(455)]}}};const G=f(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=x;G[t(436)]&&(G.value.material[t(463)][t(426)][t(436)]=n)}));const{count:R,size:D,radius:Z,branches:X,spin:B,randomness:H,randomnessPower:K,insideColor:L,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(430),outsideColor:"#1b3984"});return d([R[x(436)],D[x(436)],Z[x(436)],X.value,B.value,H[x(436)],K[x(436)],L[x(436)],$[x(436)]],(n=>{const t=x;n[t(459)](((n,o)=>{const e=t;I[Object.keys(I)[o]]=n[e(436)]})),function(){const n=x;if(G[n(436)]){const t=new e(I[n(425)]),o=new e(I.outsideColor),r=new Float32Array(3*I[n(480)]),s=new Float32Array(3*I[n(480)]),i=new Float32Array(I[n(480)]),c=new Float32Array(3*I[n(480)]);for(let e=0;e<I.count;e++){const a=3*e,l=Math[n(453)]()*I.radius,u=e%I[n(454)]*Math.PI*2/I[n(454)];r[a]=Math.cos(u)*l,r[a+1]=0,r[a+2]=Math[n(483)](u)*l;const f=Math[n(453)]()**I[n(468)]*(Math[n(453)]()<.5?-1:1),d=Math.random()**I[n(468)]*(Math[n(453)]()<.5?-1:1),m=Math[n(453)]()**I[n(468)]*(Math[n(453)]()<.5?-1:1);c[a]=f,c[a+1]=d,c[a+2]=m;const p=t[n(464)]();p[n(448)](o,l/I[n(428)]),s[a+0]=p.r,s[a+1]=p.g,s[a+2]=p.b,i[e]=Math[n(453)]()}G[n(436)].geometry[n(440)](n(473),new a(r,3)),G[n(436)][n(445)][n(440)](n(471),new a(c,3)),G[n(436)].geometry.setAttribute(n(423),new a(s,3)),G[n(436)][n(445)][n(440)](n(472),new a(i,1))}}()})),(n,t)=>{const o=x,e=m("TresCanvas");return p(),h(C,null,[v(g(c)),v(e,M(y(z)),{default:w((()=>[t[0]||(t[0]=P("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),P(o(462),{ref_key:o(424),ref:G},[P(o(458),{position:[g(j),3],"a-scale":[g(F),1],color:[g(A),3],"a-randomness":[g(k),3]},null,8,T),P(o(451),M(y(E)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function j(n){function t(n){const o=z;if(typeof n===o(465))return function(n){}.constructor(o(433))[o(452)]("counter");1!==(""+n/n)[o(482)]||n%20==0?function(){return!0}.constructor("debugger")[o(441)](o(447)):function(){return!1}.constructor(o(484)+o(487))[o(452)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{_ as default};
