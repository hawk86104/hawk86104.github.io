import{ae as e,K as a,bY as o,C as r,ab as s}from"./three.2wx8FU0g1743660816268.js";import{a as t}from"./@tresjs.zc7faK4J1743660816268.js";import{g as l,a as u}from"./whiteFloor.45lmiqp31743660816268.js";import{d as i,b as n,a4 as d,w as f,o as m,H as h,N as p,aj as w,ak as g}from"./@vue.B5PFBfKs1743660816268.js";const v=["rotation-x"],C=["args"],c=i({__name:"whiteFloorMesh",props:{size:{default:[20,20]},color:{default:"#990"},shadowColor:{default:"#999"},edge:{default:.35}},async setup(i){let c,j;const S=i,x=n(),{map:y}=([c,j]=d((()=>t({map:"./plugins/floor/image/whiteFloor.jpg"}))),c=await c,j(),c);y.wrapS=y.wrapT=e;const T={uniforms:a.merge([o.lights,{uTexture:{type:"t",value:y},uColor:{value:new r(S.color)},uShadowColor:{value:new r(S.shadowColor)},fEdge:{type:"f",value:S.edge}}]),side:s,vertexShader:l(),fragmentShader:u(),lights:!0,transparent:!0};return f((()=>S.edge),(e=>{T.uniforms.fEdge.value=e})),f((()=>S.color),(e=>{T.uniforms.uColor.value=new r(S.color)})),f((()=>S.shadowColor),(e=>{T.uniforms.uShadowColor.value=new r(S.shadowColor)})),(e,a)=>(m(),h("TresMesh",{ref_key:"tmRef",ref:x,"rotation-x":-Math.PI/2},[p("TresPlaneGeometry",{args:S.size},null,8,C),p("TresShaderMaterial",w(g(T)),null,16)],8,v))}});export{c as _};
