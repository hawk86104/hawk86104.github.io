import{m as n,e as t,o as e}from"./@tresjs.ZmhvXhx31741583630766.js";import{_ as o,m as r,a3 as a}from"./three.sQDbNBks1741583630766.js";import{P as i}from"./tweakpane.yDiyAAkA1741583630766.js";import{d as c,b as l,r as u,w as s,q as p,o as m,H as v,N as f,u as _,e as g,z as d,j as h,g as x,aj as y,ak as b,f as S,al as w,m as z,F as j}from"./@vue.NRI7TcgI1741583630766.js";import{_ as k}from"./@fesjs.0Tn1apcA1741583630766.js";import"./postprocessing.7Yq_IN-m1741583630766.js";import"./@vueuse.Z9_WSajh1741583630766.js";import"./vue-router.bRqEeVtN1741583630766.js";import"./lodash-es.pklfUAS51741583630766.js";import"./@qlin.yHhFDldE1741583630766.js";import"./pinia.GzvRmFm31741583630766.js";import"./@floating-ui.BPbuo5Gx1741583630766.js";import"./@juggle.7yjBMqoW1741583630766.js";const D=M;!function(n,t){const e=M,o=R();for(;;)try{if(820404===-parseInt(e(293))/1+parseInt(e(300))/2+-parseInt(e(236))/3+parseInt(e(238))/4+-parseInt(e(299))/5+parseInt(e(261))/6+-parseInt(e(242))/7)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const V=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(288)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){V(this,(function(){const n=M,t=new RegExp(n(285)),e=new RegExp(n(260),"i"),o=E(n(249));t[n(287)](o+n(294))&&e[n(287)](o+n(283))?E():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(288)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();I(void 0,(function(){const n=M,t=function(){const n=M;let t;try{t=Function(n(258)+n(301)+");")()}catch(e){t=window}return t}(),e=t[n(248)]=t[n(248)]||{},o=[n(240),n(253),"info",n(291),n(244),"table",n(265)];for(let r=0;r<o[n(264)];r++){const t=I[n(289)][n(290)][n(278)](I),a=o[r],i=e[a]||t;t[n(237)]=I[n(278)](I),t[n(252)]=i.toString[n(278)](i),e[a]=t}}))();const O=[D(259)],P=[D(246),D(277),D(297)];function R(){const n=["string","RedFormat","catch","vertexShader","bind","TresSphereGeometry","meshRef","start","color","input","Clock","function *\\( *\\)","Data3DTexture","test","apply","constructor","prototype","error","arrayBuffer","837203NqqGnZ","chain","u_alphaVal","position","fragmentShader","debu","2041165UJoUER","779792gLClnW",'{}.constructor("return this")( )',"1102332POHtfG","__proto__","5661740hsotqT","Algorithm Settings","log","value","4290209hwwuUT","call","exception","while (true) {}","uniforms","needsUpdate","console","init","innerWidth","then","toString","warn","innerHeight","gger","addBinding","addFolder","return (function() ","rotation-x","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","7445040Eisazr","Vector3","Error fetching volume data:","length","trace","LinearFilter","u_time","u_color","format","u_dt","action","alphaVal","TresMesh"];return(R=function(){return n})()}function M(n,t){const e=R();return(M=function(n,t){return e[n-=236]})(n,t)}const T=41,F=c({__name:"basicVolumeRendering",setup(e){var c;const g=D,d=window[g(250)],h=window[g(254)],x=l(null),y=l(null),b=new(o[g(284)]);b[g(281)]();const S=(new i).addFolder({title:"Display Settings"}),w=S[g(257)]({title:"Cross Section Settings"}),z=new(o[g(262)])(.5,.5,.5);w[g(256)](z,"x",{label:"X",min:.02,max:.5,step:.02}),w[g(256)](z,"y",{label:"Y",min:.02,max:.5,step:.02}),w[g(256)](z,"z",{label:"Z",min:.02,max:.5,step:.02}),w.expanded=!0;const{camera:j}=n(),k=u({u_camera:{value:null==(c=j[g(241)])?void 0:c[g(296)]},u_resolution:{value:new(o[g(262)])(d,h,1)},u_dt:{value:.004},u_time:{value:0},u_crossSectionSize:{value:z},u_color:{value:1},u_volume:{value:null},u_isoValue:{value:.2},u_alphaVal:{value:.2}}),V=S[g(257)]({title:g(239)});V[g(256)](k[g(270)],g(241),{label:"dt",min:4e-4,max:.016,step:2e-4}),V[g(256)](k[g(268)],g(241),{label:g(282),min:1,max:3,step:1}),V.addBinding(k[g(295)],g(241),{label:g(272),min:.01,max:1,step:.01}),V[g(256)](k.u_isoValue,g(241),{label:"isoValue",min:0,max:1,step:.04}),s(y,(n=>{const t=g;if(n){const e=new(o[t(286)])(n,T,T,T);e[t(269)]=o[t(275)],e.minFilter=r,e.magFilter=o[t(266)],e.wrapT=a,e[t(247)]=!0,k.u_volume.value=e}}));const{onLoop:I}=t();return I((()=>{const n=g;k[n(267)][n(241)]=b.getElapsedTime()})),p((()=>{(()=>{const n=g;fetch("/plugins/volumeRendering/image/nucleon_41x41x41_uint8.raw")[n(251)]((t=>t[n(292)]()))[n(251)]((t=>{const e=n,o=new Uint8Array(t),r=new Uint8Array(68921);for(let n=0;n<o[e(264)];n++)r[n]=o[n];y[e(241)]=r}))[n(276)]((t=>{const e=n;console[e(291)](e(263),t)}))})()})),(n,t)=>{const e=g;return m(),v(e(273),{ref_key:e(280),ref:x,"rotation-x":Math.PI/-2},[t[0]||(t[0]=f(e(279),{args:[1,16,16]},null,-1)),f("TresShaderMaterial",{uniforms:k,vertexShader:_("precision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform float u_time;\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvoid main() {\n  vec3 pos = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\n  v_hitPos = position.xyz;\n\n  v_hitPosWorldSpace = (modelMatrix * vec4(position, 1.0)).xyz;\n\n  v_cameraObjectSpace = (inverse(modelMatrix) * vec4(u_camera, 1.0)).xyz;\n}"),fragmentShader:_("precision mediump int;\nprecision mediump float;\n\nuniform vec3 u_camera;\nuniform vec3 u_resolution;\nuniform mediump sampler3D u_volume;\nuniform vec3 u_crossSectionSize;\nuniform float u_dt;\nuniform float u_time;\nuniform float u_color;\nuniform float u_isoValue;\nuniform float u_alphaVal;\n\nvec3 palette(in float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.00, 0.33, 0.67);\n\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvarying vec3 v_hitPos;\nvarying vec3 v_hitPosWorldSpace;\nvarying vec3 v_cameraObjectSpace;\n\nvec2 intersect_box(vec3 orig, vec3 dir) {\n\n  vec3 box_min = vec3(-u_crossSectionSize);\n  vec3 box_max = vec3(u_crossSectionSize);\n  vec3 inv_dir = 1.0 / dir;\n  vec3 tmin_tmp = (box_min - orig) * inv_dir;\n  vec3 tmax_tmp = (box_max - orig) * inv_dir;\n  vec3 tmin = min(tmin_tmp, tmax_tmp);\n  vec3 tmax = max(tmin_tmp, tmax_tmp);\n  float t0 = max(tmin.x, max(tmin.y, tmin.z));\n  float t1 = min(tmax.x, min(tmax.y, tmax.z));\n  return vec2(t0, t1);\n}\n\nvoid main() {\n  vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n  rayOrigin = v_cameraObjectSpace;\n\n  vec2 uv = 2.0 * gl_FragCoord.xy / u_resolution.xy - 1.0;\n  vec3 rayDir = normalize(vec3(uv, 1.0));\n  rayDir = normalize(v_hitPos - rayOrigin);\n\n  vec2 t_hit = intersect_box(rayOrigin, rayDir);\n  if (t_hit.x > t_hit.y) {\n    discard;\n  }\n\n  t_hit.x = max(t_hit.x, 0.0);\n\n  float dt = u_dt;\n\n  vec4 color = vec4(0.0);\n\n  vec3 p = rayOrigin + t_hit.x * rayDir + 0.5;\n  for (float t = t_hit.x; t < t_hit.y; t += dt) {\n\n    float textureVal = texture(u_volume, p).r;\n\n    vec4 val_color = vec4(0.0);\n    float val_color_alpha = textureVal * 0.1;\n\n    val_color_alpha = smoothstep(0.0, u_alphaVal, val_color_alpha);\n\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 white = vec3(1.0);\n    if (abs(u_color - 1.0) <= 0.01) {\n      val_color = vec4(white, val_color_alpha);\n    } else if (abs(u_color - 2.0) <= 0.01) {\n      val_color = vec4(mix(red, white, val_color_alpha), val_color_alpha);\n    } else {\n      val_color = vec4(palette(textureVal), val_color_alpha);\n    }\n\n    color.rgb += (1.0 - color.a) * val_color.a * val_color.rgb;\n    color.a += (1.0 - color.a) * val_color.a;\n\n    if (textureVal > u_isoValue) {\n      float gxLess = texture(u_volume, vec3(p.x - rayDir.x * u_dt, p.y, p.z)).r;\n      float gxMore = texture(u_volume, vec3(p.x + rayDir.x * u_dt, p.y, p.z)).r;\n      float dgx = gxMore - gxLess;\n\n      float gyLess = texture(u_volume, vec3(p.x, p.y - rayDir.y * u_dt, p.z)).r;\n      float gyMore = texture(u_volume, vec3(p.x, p.y + rayDir.y * u_dt, p.z)).r;\n      float dgy = gyMore - gyLess;\n\n      float gzLess = texture(u_volume, vec3(p.x, p.y, p.z - rayDir.z * u_dt)).r;\n      float gzMore = texture(u_volume, vec3(p.x, p.y, p.z + rayDir.z * u_dt)).r;\n      float dgz = gzMore - gzLess;\n      vec3 n = normalize(vec3(dgx, dgy, dgz));\n\n      vec3 lightSource = vec3(1.0);\n      vec3 lightDir = normalize(lightSource);\n      float diffuseStrength = max(dot(n, lightDir), 0.0);\n\n      vec3 viewSource = normalize(rayOrigin);\n      vec3 reflectSource = normalize(reflect(-lightSource, n));\n      float specularStrength = max(0.0, dot(viewSource, reflectSource));\n      specularStrength = pow(specularStrength, 64.0);\n\n      color.rgb = diffuseStrength * val_color.rgb + specularStrength * val_color.rgb;\n      color.rgb *= val_color.rgb;\n      color.a = 0.95;\n      break;\n    }\n\n    if (color.a >= 0.95) {\n      break;\n    }\n\n    p += rayDir * dt;\n  }\n\n  gl_FragColor = color;\n}")},null,8,P)],8,O)}}});function E(n){function t(n){const e=M;if(typeof n===e(274))return function(n){}[e(289)](e(245)).apply("counter");1!==(""+n/n)[e(264)]||n%20==0?function(){return!0}[e(289)](e(298)+e(255))[e(243)](e(271)):function(){return!1}[e(289)](e(298)+"gger").apply("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const L=Z;!function(n,t){const e=Z,o=U();for(;;)try{if(643345===parseInt(e(259))/1+parseInt(e(263))/2+-parseInt(e(268))/3+parseInt(e(269))/4+-parseInt(e(252))/5+parseInt(e(266))/6+parseInt(e(278))/7)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=Z,t=new RegExp(n(258)),e=new RegExp(n(283),"i"),o=q(n(264));t[n(279)](o+"chain")&&e[n(279)](o+n(260))?q():o("0")}))()}();const A=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[Z(290)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function Z(n,t){const e=U();return(Z=function(n,t){return e[n-=251]})(n,t)}A(void 0,(function(){const n=Z;let t;try{t=Function(n(282)+n(255)+");")()}catch(r){t=window}const e=t[n(274)]=t.console||{},o=["log","warn","info",n(287),n(277),n(261),n(280)];for(let a=0;a<o[n(286)];a++){const t=A[n(251)][n(253)].bind(A),r=o[a],i=e[r]||t;t[n(262)]=A[n(284)](A),t[n(267)]=i.toString[n(284)](i),e[r]=t}}))();function q(n){function t(n){const e=Z;if(typeof n===e(293))return function(n){}[e(251)](e(256)).apply(e(292));1!==(""+n/n).length||n%20==0?function(){return!0}[e(251)](e(270)+e(265))[e(289)](e(257)):function(){return!1}[e(251)](e(270)+e(265))[e(290)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}function U(){const n=["apply","TresCanvas","counter","string","#201919","constructor","2516840EXYDaI","prototype","basicVolume",'{}.constructor("return this")( )',"while (true) {}","action","function *\\( *\\)","237002Nylnov","input","table","__proto__","1430588SqboOb","init","gger","419868yobOPJ","toString","2788998BhGVPx","3655628XuRyIW","debu","https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw","TresGridHelper"," https://klacansky.com/open-scivis-datasets/skull/skull_256x256x256_uint8.raw ","console","TresAmbientLight","info","exception","981386EOJSRe","test","trace","div","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","_blank","length","error","TresPerspectiveCamera","call"];return(U=function(){return n})()}const W=k(c({__name:L(254),setup(n){const t=u({windowSize:!0,alpha:!0,antialias:!0,autoClear:!1,disableRender:!0}),o=u({enableDamping:!0,enableZoom:!0,enablePan:!0,enableRotate:!0,makeDefault:!0});return(n,r)=>{const a=Z,i=g(a(291));return m(),v(j,null,[r[3]||(r[3]=f(a(281),{class:a(276)},[f("a",{href:a(271),target:a(285)},a(273)),f("br"),d(" 请自行下载数据集, 复制到 /plugins/volumeRendering/image/skull_256x256x256_uint8.raw 并更改文件请求指向和 dim 大小 ")],-1)),h(i,z({clearColor:a(294)},t),{default:x((()=>[r[0]||(r[0]=f(a(288),{fov:75,near:.001,far:1e3,position:[-1,.4,-1],"look-at":[0,0,0],up:[0,1,0]},null,-1)),r[1]||(r[1]=f(a(275),{intensity:2},null,-1)),h(_(e),y(b(o)),null,16),(m(),S(w,null,{default:x((()=>[h(F,{position:[0,0,0]})])),_:1})),r[2]||(r[2]=f(a(272),{args:[50,50],position:[0,-5,0]},null,-1))])),_:1},16)],64)}}}),[["__scopeId","data-v-925b4c37"]]);export{W as default};
