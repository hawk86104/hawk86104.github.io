import{A as e,cg as a,az as n,ax as r,ay as s,ch as t,ci as o,a as i,cj as c,cw as v,n as d,c_ as u,C as l}from"./three.QlBabAUP1755506146924.js";let m=new l("#0fb1fb");const w=new e({color:m,transparent:!0,opacity:.3}),p=new s({color:new l(m),depthTest:!0,transparent:!0}),x=e=>{const s=[];e.traverse((e=>{e.isMesh&&(s.push(e.geometry),e.material=w)}));const t=a(s),o=new n(t,6.137*Math.PI),i=new r(o);return p.opacity=1,i.material=p,i},f=0,b=.972,T=.21,g=(e,a,n,r,s)=>{const l=new t(e,a),m=new o(new i(r,s),b,T,f),w=new c(n);w.renderToScreen=!1,w.addPass(l),w.addPass(m);const p=new v(new d({uniforms:{baseTexture:{value:null},bloomTexture:{value:w.renderTarget2.texture}},vertexShader:"varying vec2 vUv;\nvoid main(){\n\tvUv=uv;\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform sampler2D baseTexture;\nuniform sampler2D bloomTexture;\nvarying vec2 vUv;\nvoid main(){\n\tgl_FragColor=(texture2D(baseTexture,vUv)+vec4(1.)*texture2D(bloomTexture,vUv));\n}",defines:{}}),"baseTexture");p.needsSwap=!0;const x=new u,g=new c(n);return g.addPass(l),g.addPass(p),g.addPass(x),{finalComposer:g,effectComposer:w,renderScene:l,bloomPass:m}};export{x as r,g as u};
