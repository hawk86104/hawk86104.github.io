import{p as n,$ as e,N as t,d as r}from"./@tresjs.SUe87xao1723628107012.js";import{W as o,j as i,c6 as s,bY as a,bW as u,Z as c,l as f,aV as l}from"./three.LOnTLfxo1723628107012.js";import{d as p,a4 as v,a1 as m,o as d,D as h,J as g,u as x,F as y,e as w,f as D,g as S,j as b,al as I,m as E}from"./@vue.9bHx4gg21723628107012.js";import"./tweakpane.yHWGBmom1723628107012.js";import"./@vueuse.t-c8gU4-1723628107012.js";const R=U;!function(n,e){const t=U,r=k();for(;;)try{if(715749===-parseInt(t(184))/1*(parseInt(t(202))/2)+parseInt(t(200))/3*(parseInt(t(183))/4)+-parseInt(t(218))/5*(parseInt(t(173))/6)+-parseInt(t(186))/7+parseInt(t(221))/8+-parseInt(t(185))/9*(-parseInt(t(199))/10)+-parseInt(t(207))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[U(205)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){_(this,(function(){const n=U,e=new RegExp(n(180)),t=new RegExp(n(194),"i"),r=F(n(219));e[n(172)](r+"chain")&&t[n(172)](r+n(220))?F():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[U(205)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();C(void 0,(function(){const n=U,e=function(){const n=U;let e;try{e=Function(n(187)+n(209)+");")()}catch(t){e=window}return e}(),t=e[n(208)]=e[n(208)]||{},r=[n(191),"warn","info",n(182),n(198),n(190),n(203)];for(let o=0;o<r[n(196)];o++){const e=C[n(222)][n(195)][n(211)](C),i=r[o],s=t[i]||e;e.__proto__=C[n(211)](C),e[n(214)]=s[n(214)][n(211)](s),t[i]=e}}))();const N=[R(197),R(223)],T=[g(R(188),{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:R(189),shininess:0},null,-1)],P=[R(197)],M=[g(R(226),{args:[50,32,32]},null,-1),g(R(210),{color:R(189),shininess:0},null,-1)],j=R(213),z=R(201);function k(){const n=["bind","derivatives","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","toString","counter","noiseContourMeshRef2","value","405ZddjrA","init","input","11031680bLtpIA","constructor","rotation-x","addPass","render","TresSphereGeometry","action","uniforms","noiseContourMeshRef1","call","innerHeight","test","7734tcaMXi","width","string","stateObject","renderToScreen","debu","gger","function *\\( *\\)","TresMesh","error","1334948nmIvPk","251987fMGzVm","54wuhXtN","3160948OqmzJB","return (function() ","TresBoxGeometry","#ffffff","table","log","iTime","texture","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","prototype","length","side","exception","1831950xJhxzy","3GnZkWX","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","10KpBDWH","trace","while (true) {}","apply","extensions","3082310txJqHZ","console",'{}.constructor("return this")( )',"TresMeshPhongMaterial"];return(k=function(){return n})()}const A=p({__name:"noiseContour",async setup(r){const p=R;let w,D;const{camera:S,renderer:b,scene:I,sizes:E}=n(),_=([w,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),w=await w,D(),w),{onLoop:C,onAfterLoop:k}=e(),A=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),U=new i(window.innerWidth,window[p(171)]);let F=null;const B=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:U}},vertexShader:j,fragmentShader:z}),Z=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:j,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return Z[p(177)]=!0,Z.material[p(206)][p(212)]=!0,m((()=>{const n=p;E[n(174)][n(217)]&&(F=new a(b[n(217)]),F[n(224)](new u(I.value,S[n(217)])),F[n(224)](B),F[n(224)](Z))})),C((({elapsed:n})=>{const e=p;b[e(217)][e(225)](I[e(217)],S[e(217)],A),B[e(168)].tShadow[e(217)]=A[e(193)],Z[e(168)][e(192)][e(217)]=n})),k((()=>{F&&F[p(225)]()})),(n,e)=>{const t=p;return d(),h(y,null,[g(t(181),{ref:t(216),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},T,8,N),g(t(181),{ref:t(169),side:x(c),position:[0,150,0],"cast-shadow":""},M,8,P)],64)}}});function U(n,e){const t=k();return(U=function(n,e){return t[n-=167]})(n,e)}function F(n){function e(n){const t=U;if(typeof n===t(175))return function(n){}[t(222)](t(204)).apply(t(215));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(t(178)+t(179))[t(170)](t(167)):function(){return!1}.constructor("debu"+t(179))[t(205)](t(176)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const B=Z;function Z(n,e){const t=J();return(Z=function(n,e){return t[n-=125]})(n,e)}!function(n,e){const t=Z,r=J();for(;;)try{if(574219===-parseInt(t(131))/1*(parseInt(t(126))/2)+parseInt(t(151))/3+parseInt(t(138))/4*(-parseInt(t(148))/5)+parseInt(t(157))/6+-parseInt(t(136))/7+parseInt(t(167))/8*(-parseInt(t(146))/9)+parseInt(t(129))/10*(parseInt(t(143))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){L(this,(function(){const n=Z,e=new RegExp(n(142)),t=new RegExp(n(140),"i"),r=$(n(125));e[n(149)](r+n(130))&&t[n(149)](r+"input")?$():r("0")}))()}();const G=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();G(void 0,(function(){const n=Z;let e;try{e=Function(n(150)+n(135)+");")()}catch(o){e=window}const t=e[n(133)]=e[n(133)]||{},r=["log",n(159),n(164),n(165),n(144),n(128),"trace"];for(let i=0;i<r[n(153)];i++){const e=G.constructor.prototype[n(154)](G),o=r[i],s=t[o]||e;e.__proto__=G[n(154)](G),e[n(155)]=s[n(155)].bind(s),t[o]=e}}))();const q={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},H=g(B(134),{color:B(132)},null,-1),V=g(B(162),{position:[400,400,400],intensity:1,color:B(161)},null,-1),W=p({__name:B(141),setup(n){const e=B,t={clearColor:e(152),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=w(e(127));return d(),D(i,E(t,{"window-size":""}),{default:S((()=>[g("TresPerspectiveCamera",q,null,512),b(x(r)),H,V,(d(),D(I,null,{default:S((()=>[b(A)])),_:1}))])),_:1},16)}}});function $(n){function e(n){const t=Z;if(typeof n===t(163))return function(n){}[t(147)](t(158)).apply(t(156));1!==(""+n/n)[t(153)]||n%20==0?function(){return!0}[t(147)]("debu"+t(160))[t(139)](t(137)):function(){return!1}[t(147)]("debugger")[t(166)](t(145)),e(++n)}try{if(n)return e;e(0)}catch(t){}}function J(){const n=["stateObject","3541383xvUqCQ","constructor","1605875SqcyAz","test","return (function() ","650838rxEiGS","#000000","length","bind","toString","counter","192372pQHffB","while (true) {}","warn","gger","red","TresDirectionalLight","string","info","error","apply","16ubNzND","init","14qbmpSi","TresCanvas","table","1992820rMAvdS","chain","159933pVOnlk","#ffffff","console","TresAmbientLight",'{}.constructor("return this")( )',"7781018HizFiV","action","8srTvTE","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","noiseContourPage","function *\\( *\\)","220MvlsFB","exception"];return(J=function(){return n})()}export{W as default};
