import{a6 as n,bR as t,C as o}from"./three.a9V66irq1725721021019.js";import{$ as e}from"./@tresjs.bIWdfO9a1725721021019.js";import{g as r}from"./utils.topX00vP1725721021019.js";import{d as i,b as s,a2 as a,o as c,E as u,L as l,u as f,aj as p,ak as v}from"./@vue._6MD2XyK1725721021019.js";const m=h;!function(n,t){const o=h,e=g();for(;;)try{if(453318===-parseInt(o(424))/1+-parseInt(o(420))/2*(parseInt(o(405))/3)+parseInt(o(416))/4+-parseInt(o(398))/5*(-parseInt(o(406))/6)+-parseInt(o(440))/7*(-parseInt(o(409))/8)+parseInt(o(419))/9+-parseInt(o(444))/10)break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const y=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){y(this,(function(){const n=h,t=new RegExp(n(439)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=_(n(442));t[n(422)](e+"chain")&&o[n(422)](e+n(423))?_():e("0")}))()}();const d=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[h(441)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function g(){const n=["1468607FAAIgG","apply","init","length","3088290svqEcd","__proto__","color","fog_vertex","height","bind","action","stateObject","DoubleSide","pv2","position","speed","653515kTKslG","string","tresMeshRef","Color","positionSrc","debu","rippleMesh","1336074uKzmGm","6IfQqsK","prototype","warn","16CfnuvP",'{}.constructor("return this")( )',"num","uniforms","uvs","\nprecision lowp float;\nprecision lowp int;\n","table","539428WqhWGX","console","#ffff00","6978069daZAMB","2LRnkeW","error","test","input","252998XgcYbC","trace","toString","fog_pars_vertex","constructor","value","gger","counter","opacity","set","return (function() ","\n}\n","info","while (true) {}","\nvarying vec2 vUv;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    ","function *\\( *\\)"];return(g=function(){return n})()}function h(n,t){const o=g();return(h=function(n,t){return o[n-=397]})(n,t)}d(void 0,(function(){const n=h;let t;try{t=Function(n(434)+n(410)+");")()}catch(r){t=window}const o=t.console=t[n(417)]||{},e=["log",n(408),n(436),n(421),"exception",n(415),n(425)];for(let i=0;i<e[n(443)];i++){const t=d[n(428)][n(407)][n(449)](d),r=e[i],s=o[r]||t;t[n(445)]=d[n(449)](d),t[n(426)]=s.toString[n(449)](s),o[r]=t}}))();const x=[m(454),"uv"],w=i({__name:m(404),props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:m(418)},opacity:{default:.8},height:{default:100},num:{default:8},speed:{default:.15}},setup(i){const y=m,d=i,g=s(),h={side:n[y(452)],transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:y(414)+t[y(427)]+y(438)+t[y(447)]+y(435),fragmentShader:"\n  precision lowp float;\n  precision lowp int;\n  uniform float time;\n  uniform float opacity;\n  uniform vec3 color;\n  uniform float num;\n  uniform float speed;\n  varying vec2 vUv;\n  void main() {\n    vec4 fragColor = vec4(0.);\n    float sin = sin((vUv.y - time * speed) * 10. * num);\n    float high = 0.92;\n    float medium = 0.4;\n    if (sin > high) {\n      fragColor = vec4(mix(vec3(.8, 1., 1.), color, (1. - sin) / (1. - high)), 1.);\n    } else if(sin > medium) {\n      fragColor = vec4(color, mix(1., 0., 1.-(sin - medium) / (high - medium)));\n    } else {\n      fragColor = vec4(color, 0.);\n    }\n    vec3 fade = mix(color, vec3(0., 0., 0.), vUv.y);\n    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n  }\n\t",uniforms:{time:{type:y(453),value:0},color:{type:y(413),value:new(n[y(401)])(d[y(446)])},opacity:{type:y(453),value:d[y(432)]},num:{type:y(453),value:d.num},speed:{type:"pv2",value:d[y(397)]}}};let w=null,_=null;const{centerPoint:C,points:I}=r(d[y(402)]);!function(n=[],t){const o=y,e=[],r=[];for(let i=0,s=e[o(443)],a=r[o(443)];i<n[o(443)]-1;i++){let o=1,c=n[i],u=n[i+1];e[s++]=c.x,e[s++]=0,e[s++]=c.y,r[a++]=0,r[a++]=0,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=u.x,e[s++]=t,e[s++]=u.y,r[a++]=1,r[a++]=o}w=new Float32Array(e),_=new Float32Array(r)}(I,d[y(448)]);const{onLoop:b}=e();return b((({delta:n})=>{const t=y;h[t(412)].time[t(429)]+=n})),a((()=>{const n=y;d[n(446)]&&(h[n(412)][n(446)][n(429)]=new o(d[n(446)])),d.opacity&&(h[n(412)][n(432)][n(429)]=d.opacity),d[n(411)]&&(h[n(412)][n(411)].value=d[n(411)]),d[n(397)]&&(h[n(412)][n(397)][n(429)]=d.speed),g[n(429)]&&g[n(429)].position[n(433)](C.x,g.value[n(454)].y,C.y)})),(n,t)=>{const o=y;return c(),u("TresMesh",{renderOrder:2200,ref_key:o(400),ref:g},[l("TresBufferGeometry",{position:[f(w),3],uv:[f(_),2]},null,8,x),l("TresShaderMaterial",p(v(h)),null,16)],512)}}});function _(n){function t(n){const o=h;if(typeof n===o(399))return function(n){}[o(428)](o(437)).apply(o(431));1!==(""+n/n).length||n%20==0?function(){return!0}[o(428)](o(403)+"gger").call(o(450)):function(){return!1}[o(428)](o(403)+o(430)).apply(o(451)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{w as _};
