import{ak as e,z as n}from"./three.8H01GNxA1736128832096.js";import{e as t,U as a,b as o}from"./@tresjs.pA0fT6uQ1736128832096.js";import{P as r}from"./tweakpane.yHWGBmom1736128832096.js";import{d as i,a4 as l,X as s,e as u,o as c,f,g as p,J as v,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.yG49nQHr1736128832096.js";import"./@vueuse.iB8cUOAP1736128832096.js";!function(e,n){const t=b,a=w();for(;;)try{if(397676===parseInt(t(466))/1+-parseInt(t(494))/2*(parseInt(t(442))/3)+parseInt(t(443))/4*(parseInt(t(460))/5)+-parseInt(t(476))/6+-parseInt(t(478))/7*(-parseInt(t(462))/8)+-parseInt(t(456))/9+-parseInt(t(467))/10*(-parseInt(t(450))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[b(457)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=b,n=new RegExp(e(455)),t=new RegExp(e(491),"i"),a=_("init");n[e(481)](a+e(440))&&t.test(a+"input")?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function b(e,n){const t=w();return(b=function(e,n){return t[e-=440]})(e,n)}function w(){const e=["value","TresPerspectiveCamera","color","info","trace","error","2827jmxsci","toString","wireframeMaterialRef","#17c5a9","海浪高度","function *\\( *\\)","4063185WQBcmU","apply","TresHemisphereLight","size","1031175NdmOCk","Debug","88aFWTxD","addBinding","粒子大小","length","231558oKjQob","33610zaFcox","TresMeshBasicMaterial","stateObject","console","海浪变化速度","constructor","set","prototype","string","799752qBbFNO","TresShaderMaterial","98077ZyjUgZ","exception","while (true) {}","test","gger","bind","uWaveHeight","#080820","action","counter","table","warn","change","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","rotation","uWaveSpeed","33146UhrDGj","TresMesh","return (function() ","TresIcosahedronGeometry","uniforms","chain","TresPoints","123RuPskZ","8ygMcnt"];return(w=function(){return e})()}T(void 0,(function(){const e=b,n=function(){const e=b;let n;try{n=Function(e(496)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(470)]=n.console||{},a=["log",e(489),e(447),e(449),e(479),e(488),e(448)];for(let o=0;o<a[e(465)];o++){const n=T.constructor[e(474)][e(483)](T),r=a[o],i=t[r]||n;n.__proto__=T.bind(T),n[e(451)]=i.toString[e(483)](i),t[r]=n}}))();const S=i({__name:"pointsEarth",async setup(i){const y=b;let T,w;const S={color:y(453),pointSize:4},_={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e},z={color:S[y(446)],wireframe:!0,transparent:!0,opacity:.2},j=([T,w]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),E=j[0],P=j[1],D=j[2],k=j[3],I=j[4],U={uniforms:{size:{type:"f",value:S.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:k},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n},A=s(),C=s(),W=(new r).addFolder({title:y(461)});W.addBinding(S,"color",{type:y(446)}).on(y(490),(({value:e})=>{const n=y;C[n(444)][n(446)][n(473)](e)})),W[y(463)](U.uniforms[y(459)],y(444),{min:.1,max:10,step:.1,label:y(464)}),W.addBinding(U[y(498)][y(484)],y(444),{min:.01,max:.5,step:.01,label:y(454)}),W[y(463)](U[y(498)][y(493)],"value",{min:.01,max:1,step:.01,label:y(471)});const{onLoop:M}=t();return M((({delta:e})=>{const n=y;A[n(444)]&&(A[n(444)][n(492)].y+=.002,U[n(498)].uTime.value+=10*e)})),(e,n)=>{const t=y,o=u("TresCanvas");return c(),f(o,h(_,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=v(t(445),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),v("TresGroup",{ref_key:"groupRef",ref:A},[v(t(495),null,[n[0]||(n[0]=v(t(497),{args:[1,4]},null,-1)),v(t(468),h({ref_key:t(452),ref:C},z),null,16)]),v(t(441),null,[n[1]||(n[1]=v(t(497),{args:[1,128]},null,-1)),v(t(477),g(x(U)),null,16)])],512),n[3]||(n[3]=v(t(458),{args:["#ffffff",t(485),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=b;if(typeof e===t(475))return function(e){}[t(472)](t(480))[t(457)](t(487));1!==(""+e/e)[t(465)]||e%20==0?function(){return!0}[t(472)]("debugger").call(t(486)):function(){return!1}.constructor("debu"+t(482))[t(457)](t(469)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{S as default};
