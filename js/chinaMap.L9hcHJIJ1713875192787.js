import{aD as S,bM as $,l as R,a6 as B,o as c,c as g,G as A,H as N,Y as l,au as T,aw as z,cf as D,a9 as M,a1 as F,a2 as x,r as O,x as E,E as b,a8 as V,a as w,aa as Y,ab as H,L as I,ac as J,ag as X}from"./vendor.w27jK__M1713875192787.js";import{l as q}from"./utils.mIBcKYe61713875192787.js";import{c as K,d as Q,a as U}from"./ExtensionUtilities.FSTJsEjN1713875192787.js";import{m as W}from"./mercator.a2Hae4Rp1713875192787.js";import"./Water2.Ezb0Q9Dh1713875192787.js";import"./Reflector.LJmLQnnv1713875192787.js";const Z=["properties","renderOrder"],ee=["args"],te=l("TresMeshBasicMaterial",{color:"#2defff",transparent:!0,opacity:.6},null,-1),oe={__name:"chinaMapMesh",async setup(C){let o,r;(()=>{T.prototype.computeBoundsTree=K,T.prototype.disposeBoundsTree=Q,z.prototype.raycast=U})();const f=W().center([104,37.5]).translate([0,0]),h=([o,r]=S(()=>q("./plugins/simpleGIS/json/china.json","features")),o=await o,r(),o),p={depth:10,bevelEnabled:!1},_=[];(()=>{h.forEach(e=>{e.geometry.coordinates.forEach(n=>{n.forEach(s=>{const m=new D;for(let i=0;i<s.length;i++){const[y,v]=f(s[i]);i===0&&m.moveTo(y,-v),m.lineTo(y,-v)}_.push({shape:m,properties:e.properties})})})})})();const P=new $({color:"#3480C4",linewidth:1,linecap:"round"}),d=R();B(()=>{d.value&&d.value.children.forEach(e=>{e.geometry.computeBoundsTree();const t=[e.material,P];e.material=t})});let a=null;(()=>{const e=document.createElement("div");e.className="tooltip",e.style.border="1px solid white",e.style.position="absolute",e.style.color="white",e.style.padding="0px 6px",e.style.whiteSpace="no-wrap",e.style.visibility="hidden",document.body.appendChild(e),a=e})();const k=(e,t)=>{e.object.material[0].color.set(16711680),a.innerText=e.object.properties.name,a.style.visibility="visible"},L=(e,t)=>{console.log("pointer-leave",e,t),e.material[0].color.set(3010559),a.style.visibility="hidden"},j=(e,t)=>{a.style.left="".concat(t.clientX+6,"px"),a.style.top="".concat(t.clientY+6,"px")},{onLoop:G}=M();return G(()=>{}),(e,t)=>(c(),g("TresGroup",{ref_key:"tgRef",ref:d},[(c(),g(A,null,N(_,(n,s)=>l("TresMesh",{key:"".concat(s),properties:n.properties,renderOrder:s,onPointerEnter:k,onPointerLeave:L,onPointerMove:j},[l("TresExtrudeGeometry",{args:[n.shape,p]},null,8,ee),te],40,Z)),64))],512))}},ae=l("TresPerspectiveCamera",{position:[0,0,166],fov:75,near:.1,far:1e3,"look-at":[0,0,0]},null,-1),me=F({__name:"chinaMap",setup(C){const o=x({clearColor:"#201919"}),r=x({enableDamping:!0,dampingFactor:.05}),{onLoop:u}=M();return u(()=>{}),B(()=>{}),(f,h)=>{const p=O("TresCanvas");return c(),E(p,V(o,{"window-size":""}),{default:b(()=>[ae,w(I(J),Y(H(r)),null,16),(c(),E(X,null,{default:b(()=>[w(oe)]),_:1}))]),_:1},16)}}});export{me as default};
