import{u as t,_ as o,a as n}from"./mergeTres.ld1WlTp41741594518249.js";import{l as r}from"./utils.RKdb_ZkT1741594518249.js";import{e}from"./@tresjs.gjafZgVK1741594518249.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741594518249.js";import{_ as C}from"./@fesjs._tIE6C7-1741594518249.js";import"./@amap.gPFcnYXF1741594518249.js";import"./pinia.3XPyh4eK1741594518249.js";import"./three.8y0_KTxz1741594518249.js";import"./three-mesh-bvh.BGX00vVS1741594518249.js";import"./postprocessing.iiPTtJPW1741594518249.js";import"./@vueuse.8xnC6EWf1741594518249.js";import"./vue-router.qtZNKV811741594518249.js";import"./lodash-es.pklfUAS51741594518249.js";import"./@qlin.yHhFDldE1741594518249.js";import"./@floating-ui.BPbuo5Gx1741594518249.js";import"./@juggle.7yjBMqoW1741594518249.js";const y=I;!function(t,o){const n=I,r=j();for(;;)try{if(137210===parseInt(n(371))/1*(parseInt(n(413))/2)+-parseInt(n(389))/3*(-parseInt(n(368))/4)+-parseInt(n(362))/5+-parseInt(n(363))/6+parseInt(n(373))/7*(parseInt(n(392))/8)+-parseInt(n(376))/9+parseInt(n(384))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[I(370)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){w(this,(function(){const t=I,o=new RegExp(t(400)),n=new RegExp(t(407),"i"),r=z(t(379));o[t(404)](r+t(394))&&n[t(404)](r+t(405))?z():r("0")}))()}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[I(370)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();x(void 0,(function(){const t=I;let o;try{o=Function(t(353)+t(361)+");")()}catch(e){o=window}const n=o.console=o[t(411)]||{},r=[t(358),t(397),t(399),"error",t(349),"table",t(367)];for(let a=0;a<r[t(412)];a++){const o=x.constructor[t(354)][t(387)](x),e=r[a],i=n[e]||o;o[t(383)]=x.bind(x),o[t(352)]=i[t(352)][t(387)](i),n[e]=o}}))();const b=[y(350),y(388),y(360)];function I(t,o){const n=j();return(I=function(t,o){return n[t-=349]})(t,o)}const S=a({__name:"buildingModels",setup(o){const n=t(),a=t=>{const o=I;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=n[o(377)].customCoords[o(359)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[I(398)]&&(async()=>{const t=I,o=await r(t(381),t(391));for(let n=0;n<o[t(412)];n++){const r=o[n];a(r[t(365)]);const e=new Float32Array(r[t(365)]),i=new Float32Array(r[t(388)]),l=new Float32Array(r[t(365)][t(412)]);d[t(410)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;n.cameraState&&(g[t(403)][t(357)][t(402)]=n[t(377)][t(380)](),g[t(403)][t(356)].value=n[t(398)].near,g[t(403)][t(409)][t(402)]=n[t(398)][t(386)])})),(t,o)=>{const n=I;return c(),s(n(375),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(378),{key:""+o},[p(r(408),{ref_for:!0,ref:r(374),position:[t.positionArray,3],faceUv:[t[r(366)],2],normal:[t.normalArray,3]},null,8,b),p(r(382),v({ref_for:!0},g),null,16)])})),128))])}}});function j(){const t=["far","bind","faceUv","72117WbaIGw","while (true) {}","buildings","40eVLpTQ","exp","chain","counter","action","warn","cameraState","info","function *\\( *\\)","customCoords","value","uniforms","test","input","atan","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresBufferGeometry","u_far","push","console","length","34qdqEBm","exception","position","stateObject","toString","return (function() ","prototype","string","u_near","u_zoom","log","lngLatToCoord","normal",'{}.constructor("return this")( )',"495230mFJmxG","231804MHIkeJ","call","geometry","uvArray","trace","4CHAuHr","debu","apply","1669phHFyp","gger","114177yzPBgF","tbgRef","TresGroup","2393127KSUCBU","mapHandle","TresMesh","init","getZoom","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","TresShaderMaterial","__proto__","4068260gXRVHb","constructor"];return(j=function(){return t})()}function z(t){function o(t){const n=I;if(typeof t===n(355))return function(t){}[n(385)](n(390))[n(370)](n(395));1!==(""+t/t)[n(412)]||t%20==0?function(){return!0}[n(385)]("debu"+n(372))[n(364)](n(396)):function(){return!1}[n(385)](n(369)+n(372))[n(370)](n(351)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const F=P;function P(t,o){const n=U();return(P=function(t,o){return n[t-=179]})(t,o)}!function(t,o){const n=P,r=U();for(;;)try{if(801771===-parseInt(n(182))/1*(parseInt(n(215))/2)+parseInt(n(193))/3*(parseInt(n(189))/4)+parseInt(n(191))/5*(-parseInt(n(204))/6)+-parseInt(n(212))/7+parseInt(n(217))/8+-parseInt(n(188))/9*(parseInt(n(196))/10)+-parseInt(n(214))/11*(-parseInt(n(197))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[P(180)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=P,o=new RegExp(t(202)),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=E(t(221));o[t(187)](r+t(207))&&n[t(187)](r+t(201))?E():r("0")}))()}();const R=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[P(180)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function U(){const t=["action","prototype","return (function() ","exception","1807694EfqsXP","darkblue","451qdvlto","2DAuEjm","bind","11450384wQbUDT","__proto__","while (true) {}","tcRef","init","counter","apply","constructor","202443FNlyya","log","trace","TresAmbientLight","gger","test","851310cacMjz","1374256qEzhKU","string","555prHsJZ","console","6hkrcEC","toString","table","20LTwwtu","184332pcfJjc","length","info","call","input","function *\\( *\\)","buildings","70086WlrDLw","tresCanvas","debu","chain"];return(U=function(){return t})()}R(void 0,(function(){const t=P,o=function(){const t=P;let o;try{o=Function(t(210)+'{}.constructor("return this")( ));')()}catch(n){o=window}return o}(),n=o[t(192)]=o[t(192)]||{},r=[t(183),"warn",t(199),"error",t(211),t(195),t(184)];for(let e=0;e<r[t(198)];e++){const o=R[t(181)][t(209)][t(216)](R),a=r[e],i=n[a]||o;o[t(218)]=R.bind(R),o.toString=i[t(194)][t(216)](i),n[a]=o}}))();function E(t){function o(t){const n=P;if(typeof t===n(190))return function(t){}.constructor(n(219)).apply(n(179));1!==(""+t/t)[n(198)]||t%20==0?function(){return!0}[n(181)]("debugger")[n(200)](n(208)):function(){return!1}[n(181)](n(206)+n(186)).apply("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const L=C(a({__name:F(203),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=P,l=d("TresCanvas");return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(213)}),g(l,v({id:i(205),ref:i(220)},e),{default:m((()=>[a[0]||(a[0]=p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p(i(185),{intensity:.5},null,-1)),g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{L as default};
