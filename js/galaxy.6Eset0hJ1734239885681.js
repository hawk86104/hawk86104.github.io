import{c0 as n,ak as t,am as o,C as e,aB as a,a as r}from"./three.NPKhDGTA1734239885681.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.qWeugQU61734239885681.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as g,u as v,g as w,J as M,aj as b,ak as C,F as y}from"./@vue.-THQH3GC1734239885681.js";import"./@vueuse.GyFlY0FM1734239885681.js";function P(n,t){const o=T();return(P=function(n,t){return o[n-=291]})(n,t)}const x=P;!function(n,t){const o=P,e=T();for(;;)try{if(963057===-parseInt(o(299))/1+-parseInt(o(328))/2+parseInt(o(321))/3+parseInt(o(357))/4+-parseInt(o(330))/5*(-parseInt(o(343))/6)+parseInt(o(296))/7+-parseInt(o(346))/8*(parseInt(o(360))/9))break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[P(295)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){z(this,(function(){const n=P,t=new RegExp(n(333)),o=new RegExp(n(332),"i"),e=S(n(317));t.test(e+"chain")&&o[n(334)](e+n(312))?S():e("0")}))()}();const A=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function T(){const n=["galaxy","info","geometry","material","#1b3984","branches","forEach","randomnessPower","__proto__","4737404XWhIAp","gger","uTime","57402ENTrlu","a-randomness","TresBufferGeometry","#b5f28d","prototype","apply","5904024YomhXR","value","radius","1027068xNIAiv","exception","while (true) {}","setAttribute","aRandomness","color",'{}.constructor("return this")( )',"outsideColor","position","aScale","bufferRef","lerp","bind","input","sin","counter","stateObject","length","init","black","table","error","3406635Uchfxh","log","trace","TresPoints","a-scale","cos","clone","3029348aggmzp","size","155605knwfwG","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","test","toString","TresPerspectiveCamera","debu","insideColor","console","action","TresShaderMaterial","uniforms","222kuFzFQ","constructor","random","1016narGDi","count"];return(T=function(){return n})()}A(void 0,(function(){const n=P;let t;try{t=Function(n(331)+n(305)+");")()}catch(a){t=window}const o=t[n(339)]=t.console||{},e=[n(322),"warn",n(349),n(320),n(300),n(319),n(323)];for(let r=0;r<e.length;r++){const t=A[n(344)][n(294)][n(311)](A),a=e[r],s=o[a]||t;t[n(356)]=A.bind(A),t[n(335)]=s[n(335)][n(311)](s),o[a]=t}}))();const _=[x(307),x(325),x(304),x(291)],F=u({__name:x(348),setup(u){const P=x,z={clearColor:P(318),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},A={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:P(293),outsideColor:P(352)},T=new e(A[P(338)]),F=new e(A.outsideColor),S=new Float32Array(3*A[P(347)]),j=new Float32Array(3*A[P(347)]),I=new Float32Array(A.count),k=new Float32Array(3*A.count);for(let n=0;n<A[P(347)];n++){const t=3*n,o=Math[P(345)]()*A[P(298)],e=n%A[P(353)]*Math.PI*2/A.branches;S[t]=Math[P(326)](e)*o,S[t+1]=0,S[t+2]=Math[P(313)](e)*o;const a=Math[P(345)]()**A[P(355)]*(Math[P(345)]()<.5?-1:1),r=Math.random()**A[P(355)]*(Math.random()<.5?-1:1),s=Math[P(345)]()**A[P(355)]*(Math[P(345)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=T[P(327)]();i[P(310)](F,o/A[P(298)]),j[t+0]=i.r,j[t+1]=i.g,j[t+2]=i.b,I[n]=Math.random()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:A[P(329)]}}};const E=d(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=P;E[t(297)]&&(E.value[t(351)][t(342)][t(359)][t(297)]=n)}));const{count:G,size:B,radius:D,branches:N,spin:U,randomness:W,randomnessPower:X,insideColor:Z,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:P(293),outsideColor:P(352)});return f([G[P(297)],B[P(297)],D[P(297)],N[P(297)],U[P(297)],W[P(297)],X[P(297)],Z[P(297)],$[P(297)]],(n=>{const t=P;n[t(354)](((n,o)=>{const e=t;A[Object.keys(A)[o]]=n[e(297)]})),function(){const n=P;if(E[n(297)]){const t=new e(A.insideColor),o=new e(A[n(306)]),a=new Float32Array(3*A[n(347)]),s=new Float32Array(3*A[n(347)]),i=new Float32Array(A.count),c=new Float32Array(3*A[n(347)]);for(let e=0;e<A.count;e++){const r=3*e,l=Math[n(345)]()*A.radius,u=e%A[n(353)]*Math.PI*2/A.branches;a[r]=Math[n(326)](u)*l,a[r+1]=0,a[r+2]=Math[n(313)](u)*l;const d=Math[n(345)]()**A[n(355)]*(Math[n(345)]()<.5?-1:1),f=Math[n(345)]()**A[n(355)]*(Math[n(345)]()<.5?-1:1),m=Math.random()**A[n(355)]*(Math[n(345)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=t[n(327)]();p[n(310)](o,l/A[n(298)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[e]=Math[n(345)]()}E[n(297)].geometry.setAttribute(n(307),new r(a,3)),E[n(297)][n(350)].setAttribute(n(303),new r(c,3)),E[n(297)][n(350)][n(302)](n(304),new r(s,3)),E[n(297)][n(350)][n(302)](n(308),new r(i,1))}}()})),(n,t)=>{const o=P,e=m("TresCanvas");return p(),h(y,null,[g(v(c)),g(e,b(C(z)),{default:w((()=>[t[0]||(t[0]=M(o(336),{position:[3,3,3]},null,-1)),M(o(324),{ref_key:o(309),ref:E},[M(o(292),{position:[v(S),3],"a-scale":[v(I),1],color:[v(j),3],"a-randomness":[v(k),3]},null,8,_),M(o(341),b(C(R)),null,16)],512),g(v(l))])),_:1},16)],64)}}});function S(n){function t(n){const o=P;if("string"==typeof n)return function(n){}[o(344)](o(301))[o(295)](o(314));1!==(""+n/n)[o(316)]||n%20==0?function(){return!0}.constructor(o(337)+o(358)).call(o(340)):function(){return!1}[o(344)]("debu"+o(358))[o(295)](o(315)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{F as default};
