import{z as e,K as t}from"./@tresjs.B_KjVy0E1761276103973.js";import{V as n,M as s,C as a,Q as o,ak as r,bi as i,c9 as l,bk as c,I as u,bc as d,k as m,dG as p,dH as h,y,o as f,i as g,ae as w,ao as M,bJ as v,aJ as D,f as _}from"./three.Bhn4-0ry1761276103973.js";import{d as b,ac as x,q as L,G as R,o as I,F as S,I as T,u as P,a as X,w as j,h as k,b as z,ap as C,e as B,H as E,r as A,g as G,a9 as q,aa as H}from"./@vue.CKlgtJke1761276103973.js";import{_ as F}from"./XRcom.vue_vue_type_script_setup_true_lang.CiLd487e1761276103973.js";import"./postprocessing.CeTFUAN_1761276103973.js";import"./@vueuse.wtfleElW1761276103973.js";const V=new n(1,1,1),J=new n;let N=null;async function Q(){null===N&&(N=await import("https://cdn.skypack.dev/@dimforge/rapier3d-compat@0.15.0"),await N.init());const e=new n(0,-9.81,0),t=new N.World(e),r=[],i=new WeakMap,l=new n,c=new o,u=new s;function d(e,t=0,n=0){const s=function(e){const t=e.parameters;if("BoxGeometry"===e.type){const e=void 0!==t.width?t.width/2:.5,n=void 0!==t.height?t.height/2:.5,s=void 0!==t.depth?t.depth/2:.5;return N.ColliderDesc.cuboid(e,n,s)}if("SphereGeometry"===e.type||"IcosahedronGeometry"===e.type){const e=void 0!==t.radius?t.radius:1;return N.ColliderDesc.ball(e)}return null}(e.geometry);if(null===s)return;s.setMass(t),s.setRestitution(n);const a=e.isInstancedMesh?function(e,t,n){const s=e.instanceMatrix.array,a=[];for(let o=0;o<e.count;o++){const e=l.fromArray(s,16*o+12);a.push(m(e,null,t,n))}return a}(e,t,s):m(e.position,e.quaternion,t,s);t>0&&(r.push(e),i.set(e,a))}function m(e,n,s,a){const o=s>0?N.RigidBodyDesc.dynamic():N.RigidBodyDesc.fixed();o.setTranslation(...e),null!==n&&o.setRotation(n);const r=t.createRigidBody(o);return t.createCollider(a,r),r}const p=new a;return setInterval(function(){t.timestep=p.getDelta(),t.step();for(let e=0,t=r.length;e<t;e++){const t=r[e];if(t.isInstancedMesh){const e=t.instanceMatrix.array,n=i.get(t);for(let t=0;t<n.length;t++){const s=n[t],a=s.translation();c.copy(s.rotation()),u.compose(a,c,V).toArray(e,16*t)}t.instanceMatrix.needsUpdate=!0,t.computeBoundingSphere()}else{const e=i.get(t);t.position.copy(e.translation()),t.quaternion.copy(e.rotation())}}},1e3/60),{addScene:function(e){e.traverse(e=>{if(e.isMesh){const t=e.userData.physics;t&&d(e,t.mass,t.restitution)}})},addMesh:d,setMeshPosition:function(e,t,n=0){let s=i.get(e);e.isInstancedMesh&&(s=s[n]),s.setAngvel(J),s.setLinvel(J),s.setTranslation(t)},setMeshVelocity:function(e,t,n=0){let s=i.get(e);e.isInstancedMesh&&(s=s[n]),s.setLinvel(t)}}}const U=["geometry","material"],W=["rotation-z","geometry","material"],Z=["rotation-z","geometry","material"],K=["rotation-x","geometry","material"],O=["rotation-x","geometry","material"],Y=["object"],$=b({__name:"physicsBalls",props:{XRcom:{default:null}},async setup(t){let a,o;const p=t,h=new r(6,2,6),y=new i({visible:!1}),f={physics:{mass:0}},g=new l(.08,3),w=new c,M=new u(g,w,800);M.instanceMatrix.setUsage(d),M.userData.physics={mass:1,restitution:1.1};const v=new s,D=new m;for(let e=0;e<M.count;e++){const t=4*Math.random()-2,n=4*Math.random(),s=4*Math.random()-2;v.setPosition(t,n,s),M.setMatrixAt(e,v),M.setColorAt(e,D.setHex(16777215*Math.random()))}const{scene:_}=e(),b=([a,o]=x(()=>Q()),a=await a,o(),a);L(()=>{b.addScene(_.value)});let X=0;const j=new n;function k(e){e.userData.isSelecting&&(b.setMeshPosition(M,e.position,X),j.x=2*(Math.random()-.5),j.y=2*(Math.random()-.5),j.z=Math.random()-9,j.applyQuaternion(e.quaternion),b.setMeshVelocity(M,j,X),++X===M.count&&(X=0))}return p.XRcom.onBeforeLoop(()=>{k(p.XRcom.controller0),k(p.XRcom.controller1)}),(e,t)=>(I(),R(S,null,[T("TresMesh",{name:"floor",position:[0,-1,0],geometry:P(h),material:P(y),userData:f},null,8,U),T("TresMesh",{name:"wallPX",position:[4,3,0],"rotation-z":Math.PI/2,geometry:P(h),material:P(y),userData:f},null,8,W),T("TresMesh",{name:"wallNX",position:[-4,3,0],"rotation-z":Math.PI/2,geometry:P(h),material:P(y),userData:f},null,8,Z),T("TresMesh",{name:"wallPZ",position:[0,3,4],"rotation-x":Math.PI/2,geometry:P(h),material:P(y),userData:f},null,8,K),T("TresMesh",{name:"wallNZ",position:[0,3,-4],"rotation-x":Math.PI/2,geometry:P(h),material:P(y),userData:f},null,8,O),T("primitive",{object:P(M)},null,8,Y)],64))}}),ee=["geometry"],te=b({__name:"ballShooterSence",setup(e){const t=new p(6,6,6,10,10,10),n=function(){this?.userData&&(this.userData.isSelecting=!0)},s=function(){this?.userData&&(this.userData.isSelecting=!1)},a=function(e){let t,n;switch(e.targetRayMode){case"tracked-pointer":return t=new g,t.setAttribute("position",new w([0,0,0,0,0,-1],3)),t.setAttribute("color",new w([.5,.5,.5,0,0,0],3)),n=new M({vertexColors:!0,blending:v}),new D(t,n);case"gaze":return t=new h(.02,.04,32).translate(0,0,-1),n=new y({opacity:.5,transparent:!0}),new f(t,n)}return new _},o=X(null);return j(o,e=>{e&&(e.controller0.addEventListener("selectstart",n),e.controller0.addEventListener("selectend",s),e.controller0.addEventListener("connected",function(e){this.add(a(e.data))}),e.controller0.addEventListener("disconnected",function(){this.remove(this.children[0])}),e.controller1.addEventListener("selectstart",n),e.controller1.addEventListener("selectend",s),e.controller1.addEventListener("connected",function(e){this.add(a(e.data))}),e.controller1.addEventListener("disconnected",function(){this.remove(this.children[0])}))}),(e,n)=>(I(),R(S,null,[T("TresLineSegments",{position:[0,3,0],geometry:P(t)},[...n[0]||(n[0]=[T("TresLineBasicMaterial",{color:8421504},null,-1)])],8,ee),k(F,{ref_key:"XRcomRef",ref:o,sessionInit:{optionalFeatures:["depth-sensing"],depthSensing:{usagePreference:["gpu-optimized"],dataFormatPreference:[]}}},null,512),(I(),z(C,null,{default:B(()=>[o.value?(I(),z($,{key:0,XRcom:o.value},null,8,["XRcom"])):E("",!0)]),_:1}))],64))}}),ne=b({__name:"ballShooter",setup(e){const n=A({clearColor:"#444444",antialias:!0,renderMode:"demand",windowSize:!0});return(e,s)=>{const a=G("TresCanvas");return I(),z(a,q(H(n)),{default:B(()=>[s[0]||(s[0]=T("TresPerspectiveCamera",{position:[0,1.6,3],fov:50,near:.1,far:100},null,-1)),k(P(t)),s[1]||(s[1]=T("TresHemisphereLight",{args:[12303291,8947848,3]},null,-1)),s[2]||(s[2]=T("TresDirectionalLight",{position:[1,1,1],intensity:3},null,-1)),k(te)]),_:1},16)}}});export{ne as default};
