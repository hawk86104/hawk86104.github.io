import{_ as n,C as t,c2 as e,cv as o,aX as i,a as r,ab as a}from"./three.CYhYNU4g1738919103432.js";import{m as s,e as l,a as u}from"./@tresjs.G4idgyWs1738919103432.js";import{d as c,b as f,a3 as p,a2 as m,o as b,H as g,N as v,aj as y,ak as d,u as h}from"./@vue.NRI7TcgI1738919103432.js";const w=T;!function(n,t){const e=T,o=z();for(;;)try{if(243662===-parseInt(e(180))/1+parseInt(e(176))/2*(parseInt(e(218))/3)+parseInt(e(182))/4*(-parseInt(e(206))/5)+-parseInt(e(186))/6*(parseInt(e(200))/7)+parseInt(e(193))/8*(parseInt(e(197))/9)+-parseInt(e(185))/10+parseInt(e(226))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(208)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){_(this,(function(){const n=T,t=new RegExp(n(214)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=S(n(207));t.test(o+"chain")&&e[n(211)](o+n(224))?S():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(208)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["Color","TresMeshRef","constructor","284897Giwpvx","DoubleSide","56AlITOq","error","TresBufferGeometry","2981820BvAdcW","666PzogPz","Mesh","log","debu",'{}.constructor("return this")( )',"trace","color","8muVjlH","#84ccff","table","gger","4067793ibAcTf","model","info","13720YtrTDk","warn","prototype","geometry","sin","stateObject","126125cCKPpQ","init","apply","TresShaderMaterial","value","test","AdditiveBlending","__proto__","function *\\( *\\)","toString","length","bind","2073xwoIBt","console","counter","call","offsetY","verticesNeedUpdate","input","dispose","8385949pxpdZF","opacity","uniforms","530HYIvbS"];return(z=function(){return n})()}function T(n,t){const e=z();return(T=function(n,t){return e[n-=175]})(n,t)}x(void 0,(function(){const n=T;let t;try{t=Function("return (function() "+n(190)+");")()}catch(i){t=window}const e=t.console=t[n(219)]||{},o=[n(188),n(201),n(199),n(183),"exception",n(195),n(191)];for(let r=0;r<o[n(216)];r++){const t=x[n(179)][n(202)][n(217)](x),i=o[r],a=e[i]||t;t[n(213)]=x.bind(x),t[n(215)]=a[n(215)][n(217)](a),e[i]=t}}))();const P=c({__name:"xRayEffect",props:{model:{},color:{default:w(194)},opacity:{default:1}},async setup(o){const i=w;let r,a;const c=o,h=f(),_=[];c[i(198)].traverse((t=>{const e=i;t instanceof n[e(187)]&&(t[e(203)][e(223)]=!0,_.push(t[e(203)]))}));const x=([r,a]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,a(),r),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(c[i(192)])},lightningTexture:{type:"t",value:x.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:c.opacity}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(181)],blending:n[i(212)],depthWrite:!1};z[i(175)][i(222)][i(210)]=Math[i(204)](5);const{camera:T}=s(),{onLoop:P}=l();return P((({delta:n})=>{const t=i;T[t(210)].position&&h.value&&(z[t(175)].uTime[t(210)]+=n)})),m((()=>{const t=i;h.value&&(h[t(210)].geometry[t(225)](),h[t(210)][t(203)]=e(_)),c[t(192)]&&(z.uniforms.glowColor[t(210)]=new(n[t(177)])(c[t(192)])),c[t(227)]&&(z[t(175)].uOpacity.value=c[t(227)])})),(n,t)=>{const e=i;return b(),g("TresMesh",{ref_key:e(178),ref:h},[t[0]||(t[0]=v(e(184),null,null,-1)),v(e(209),y(d(z)),null,16)],512)}}});function S(n){function t(n){const e=T;if("string"==typeof n)return function(n){}[e(179)]("while (true) {}")[e(208)](e(220));1!==(""+n/n)[e(216)]||n%20==0?function(){return!0}[e(179)](e(189)+e(196))[e(221)]("action"):function(){return!1}[e(179)]("debugger")[e(208)](e(205)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const I=B;!function(n,t){const e=B,o=U();for(;;)try{if(200364===-parseInt(e(270))/1+parseInt(e(291))/2*(parseInt(e(288))/3)+-parseInt(e(327))/4*(-parseInt(e(298))/5)+parseInt(e(313))/6*(parseInt(e(338))/7)+-parseInt(e(311))/8+-parseInt(e(305))/9+parseInt(e(320))/10*(parseInt(e(278))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[B(304)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=B,t=new RegExp(n(271)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A(n(319));t.test(o+n(335))&&e.test(o+n(323))?A():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();M(void 0,(function(){const n=B;let t;try{t=Function(n(287)+n(273)+");")()}catch(i){t=window}const e=t[n(279)]=t[n(279)]||{},o=["log","warn","info",n(285),n(315),n(306),n(318)];for(let r=0;r<o[n(330)];r++){const t=M[n(297)].prototype.bind(M),i=o[r],a=e[i]||t;t.__proto__=M[n(293)](M),t[n(334)]=a.toString.bind(a),e[i]=t}}))();const F=c({__name:"bubblesEffect",props:{model:{},color:{default:I(307)},opacity:{default:1}},setup(e){const s=I,u=e,c=["afective",s(282),s(303),"process","amigdala",s(302),"bridge",s(272),s(308)],p={};u[s(284)][s(310)]((t=>{const e=s;t instanceof n[e(275)]&&c.map((n=>{const i=e;if(t[i(289)][i(329)](n)){if(p[n]){const e=[p[n],t[i(333)]];return p[n]=o[i(337)](e),p}return p[n]=t[i(333)]}return[]}))}));const w=f(),_=new(n[s(312)])({uniforms:{glowColor:{type:"c",value:new(n[s(339)])(u[s(296)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:u[s(322)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:i,side:n[s(324)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{w[s(280)]&&(()=>{const t=s,e=[],o=[],i=[],l=[];for(let a=0;a<2e4-3*c.length;a+=1){const s=n[t(300)][t(325)](0,c[t(330)]-1),u=c[s],f=p[u][t(328)].position[t(294)][3*a+0]||0,m=p[u][t(328)][t(309)][t(294)][3*a+1]||0,b=p[u].attributes.position.array[3*a+2]||0;if(o[t(336)](f,m,b),e[a]=r[t(274)](10,20),a%100==0){const e=n[t(300)][t(325)](100,250)+m;l[t(336)](f,e,b,1)}else l[t(336)](f,m,b,0);i[2*a+0]=n[t(300)][t(274)](.5,1.5),i[2*a+1]=2.5}w.value.setAttribute("aDelayDuration",new(n[t(332)])(i,2)),w[t(280)][t(295)](t(281),new(n[t(332)])(l,4)),w[t(280)].setAttribute("position",new(n[t(332)])(o,3)),w[t(280)][t(295)](t(296),new(n[t(332)])([],3)),w[t(280)][t(295)]("size",new a(e,1)),w[t(280)].computeBoundingSphere()})()}));const x=f(),{onLoop:z}=l();return z((({delta:n})=>{const e=s;x[e(280)]&&(x.value[e(299)].uniforms[e(316)][e(280)]+=.05,x[e(280)][e(299)].uniforms[e(331)][e(280)]+=1/400),u[e(296)]&&(_[e(286)][e(314)][e(280)]=new t(u[e(296)])),u[e(322)]&&(_.uniforms[e(326)][e(280)]=u[e(322)])})),(n,t)=>{const e=s;return b(),g(e(276),{ref_key:e(277),ref:x},[v("TresBufferGeometry",{ref_key:e(301),ref:w},null,512),v(e(290),y(d(h(_))),null,16)],512)}}});function B(n,t){const e=U();return(B=function(n,t){return e[n-=270]})(n,t)}function A(n){function t(n){const e=B;if(typeof n===e(283))return function(n){}.constructor(e(292)).apply(e(317));1!==(""+n/n)[e(330)]||n%20==0?function(){return!0}[e(297)]("debugger")[e(321)]("action"):function(){return!1}[e(297)]("debugger")[e(304)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}function U(){const n=["Float32BufferAttribute","geometry","toString","chain","push","mergeGeometries","127302VJuhXT","Color","135748uTMTHl","function *\\( *\\)","cerebellum",'{}.constructor("return this")( )',"randFloat","Mesh","TresPoints","TresMeshRef","341UAvKjO","console","value","bubbles","semantic","string","model","error","uniforms","return (function() ","6189aIuHFK","name","TresShaderMaterial","160fTZCPS","while (true) {}","bind","array","setAttribute","color","constructor","13315FXsxAa","material","MathUtils","BufferGeometryRef","brainstem","episodic","apply","2505348eBzmXo","table","#FFF","analitic","position","traverse","1008640PbxBtA","ShaderMaterial","18DGZhEH","glowColor","exception","uTime","counter","trace","init","46930mVSKWf","call","opacity","input","DoubleSide","randInt","uOpacity","564XTDQMb","attributes","includes","length","uSlowTime"];return(U=function(){return n})()}export{P as _,F as a};
