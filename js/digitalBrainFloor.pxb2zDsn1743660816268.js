import{c5 as o,c4 as s,ar as a,at as e}from"./three.2wx8FU0g1743660816268.js";import{o as i}from"./@tresjs.zc7faK4J1743660816268.js";import{P as t}from"./tweakpane.ivGeiIdz1743660816268.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.0Y8GW8SD1743660816268.js";import"./index.T-vY6kZg1743660816268.js";import{l}from"./util.9Mf3e0Eu1743660816268.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.0ttWFCZx1743660816268.js";import{_ as p,a as d}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.OBF5oKkm1743660816268.js";import{_ as m}from"./randomLoading.vue_vue_type_script_setup_true_lang.HuXlgv2z1743660816268.js";import{d as u,r as c,a4 as j,e as _,o as f,H as g,j as b,u as h,g as w,m as y,F as v,N as B,aj as L,ak as k,f as C,M as T,al as x}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";import"./utils.J8F9Jo-01743660816268.js";import"./@fesjs.9AUNBPBQ1743660816268.js";import"./vue-router.K4ys0Z-O1743660816268.js";import"./lodash-es.IJc9G_SW1743660816268.js";import"./@qlin.o0hjOMCg1743660816268.js";import"./pinia.0dYyFDku1743660816268.js";import"./@floating-ui.HzHndBae1743660816268.js";import"./@juggle.4EyLec-41743660816268.js";import"./three-mesh-ui.module._G62nyeC1743660816268.js";import"./starLoading.cJyZWFHa1743660816268.js";import"./cssLoaders.bhHKUWvv1743660816268.js";import"./bubbleLoading.rC3bW8Z-1743660816268.js";import"./yangyangLoading.yRjR1R_U1743660816268.js";const S={position:[0,120,0]},M=u({__name:"digitalBrainFloor",async setup(u){let M,P;const z=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),F=c({color:"#fff",show:!0,opacity:1}),G=new t({title:"参数"});G.addBinding(F,"show",{label:"点云显示"}),G.addBinding(F,"color",{label:"点云颜色"}),G.addBinding(F,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const O=c({color:"#84ccff",show:!0,opacity:1});G.addBinding(O,"show",{label:"脑轮廓显示"}),G.addBinding(O,"color",{label:"脑轮廓颜色"}),G.addBinding(O,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=c({color:"#9e00af",show:!0,opacity:1});G.addBinding(R,"show",{label:"脑组织显示"}),G.addBinding(R,"color",{label:"脑组织颜色"}),G.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const q=new o,A=([M,P]=j((()=>l("./plugins/medical/model/brainparts.OBJ",q))),M=await M,P(),M),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:s,outputColorSpace:a,toneMapping:e}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=_("TresCanvas");return f(),g(v,null,[b(h(m)),b(a,y(E,{"window-size":""}),{default:w((()=>[s[0]||(s[0]=B("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),L(k(H)),null,16),s[1]||(s[1]=B("TresAmbientLight",{intensity:.5},null,-1)),B("TresGroup",S,[F.show?(f(),C(n,y({key:0,model:h(A)},F),null,16,["model"])):T("",!0),(f(),C(x,null,{default:w((()=>[O.show?(f(),C(p,y({key:0,model:h(A)},O),null,16,["model"])):T("",!0)])),_:1})),R.show?(f(),C(d,y({key:1,model:h(A)},R),null,16,["model"])):T("",!0)]),b(r,L(k(z)),null,16)])),_:1},16)],64)}}});export{M as default};
