import{U as e,Y as n}from"./@tresjs.IlQvaTJ91728554291399.js";import{C as t,_ as o,bU as r,am as i}from"./three.YiCjTDWq1728554291399.js";import{P as a}from"./tweakpane.yHWGBmom1728554291399.js";import{d as l,w as u,o as c,E as s,L as v,u as f,r as p,e as g,f as d,g as y,j as m,aj as x,ak as P,m as z}from"./@vue.JNsx1iN61728554291399.js";import"./@vueuse.nb-8z3af1728554291399.js";const W=h;function w(){const e=["uTime","18636zaxdJu","2308530wTxVfK","gger","colorDamping","warn","7098hiNgYM","prototype","call","wireframe","valleyColor","bind","Color","sinWaveFrequency","set","log","252iaSOQX","vertexShader","perlinWaveIterations","action","waveC","stateObject","uValleyColor","uPerlinWaveIterations","perlinWaveAmplitude","uSinWaveFrequency","debu","string","28YdBhnx","139959DwUUqE","uPerlinWaveFrequency","#b367ff","TresMesh","table","uPeakColor","__proto__","input","rotation-x","DoubleSide","perlinWaveSpeed","waveAmplitude","length","perlinWaveFrequency","42MBOlXu","570oaBGlc","uColorDamping","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","723560snQlQp","apply","9097skPmWO","sinWaveSpeed","1199805gyibuY","constructor","value","uWaveAmplitude","colorOffset","console","45742kCQSkP","uPerlinWaveSpeed","Vector2","uColorOffset","test","return (function() ","TresPlaneGeometry","init","chain","toString","setStyle","exception","side"];return(w=function(){return e})()}!function(e,n){const t=h,o=w();for(;;)try{if(491378===parseInt(t(471))/1*(parseInt(t(500))/2)+-parseInt(t(519))/3*(parseInt(t(459))/4)+-parseInt(t(494))/5+parseInt(t(515))/6+-parseInt(t(486))/7*(parseInt(t(490))/8)+parseInt(t(472))/9*(-parseInt(t(487))/10)+parseInt(t(492))/11*(parseInt(t(514))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[h(491)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){S(this,(function(){const e=h,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(489),"i"),o=q(e(507));n[e(504)](o+e(508))&&t.test(o+e(479))?q():o("0")}))()}();const C=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[h(491)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function h(e,n){const t=w();return(h=function(e,n){return t[e-=453]})(e,n)}C(void 0,(function(){const e=h;let n;try{n=Function(e(505)+'{}.constructor("return this")( ));')()}catch(r){n=window}const t=n[e(499)]=n.console||{},o=[e(458),e(518),"info","error",e(511),e(476),"trace"];for(let i=0;i<o[e(484)];i++){const n=C.constructor[e(520)][e(454)](C),r=o[i],a=t[r]||n;n[e(478)]=C.bind(C),n[e(509)]=a[e(509)][e(454)](a),t[r]=n}}))();const I=[W(480)],b=v(W(506),{args:[10,10,512,512]},null,-1),_=[W(512),W(460),"fragmentShader",W(522)],A=l({__name:W(463),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:W(474)},valleyColor:{default:"#184650"},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=W,i=n,a={uTime:{value:0},uPeakColor:{value:new t(i.peakColor)},uValleyColor:{value:new(o[r(455)])(i.valleyColor)},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i[r(517)]},uSinWaveFrequency:{value:new(o[r(502)])(i[r(456)].x,i.sinWaveFrequency.y)},uWaveAmplitude:{value:i[r(483)]},uSinWaveSpeed:{value:new(o[r(502)])(i[r(493)].x,i[r(493)].y)},uPerlinWaveIterations:{value:i[r(461)]},uPerlinWaveFrequency:{value:i[r(485)]},uPerlinWaveAmplitude:{value:i[r(467)]},uPerlinWaveSpeed:{value:i.perlinWaveSpeed}},{onLoop:l}=e();return l((({elapsed:e})=>{const n=r;a[n(513)][n(496)]=e})),u((()=>i),(()=>{const e=r;a[e(477)][e(496)][e(510)](i.peakColor),a[e(465)][e(496)][e(510)](i[e(453)]),a[e(503)][e(496)]=i[e(498)],a[e(488)][e(496)]=i[e(517)],a[e(468)][e(496)][e(457)](i.sinWaveFrequency.x,i[e(456)].y),a[e(497)][e(496)]=i[e(483)],a.uSinWaveSpeed[e(496)][e(457)](i[e(493)].x,i[e(493)].y),a[e(466)][e(496)]=i.perlinWaveIterations,a[e(473)][e(496)]=i[e(485)],a.uPerlinWaveAmplitude[e(496)]=i[e(467)],a[e(501)][e(496)]=i[e(482)]}),{deep:!0}),(e,n)=>{const t=r;return c(),s(t(475),{"rotation-x":-Math.PI/2,"position-y":1},[b,v("TresShaderMaterial",{side:o[t(481)],vertexShader:f("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:f("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[t(522)]},null,8,_)],8,I)}}});function q(e){function n(e){const t=h;if(typeof e===t(470))return function(e){}[t(495)]("while (true) {}").apply("counter");1!==(""+e/e)[t(484)]||e%20==0?function(){return!0}[t(495)](t(469)+t(516))[t(521)](t(462)):function(){return!1}[t(495)]("debu"+t(516))[t(491)](t(464)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const F=M;!function(e,n){const t=M,o=E();for(;;)try{if(132824===-parseInt(t(491))/1+-parseInt(t(495))/2*(-parseInt(t(484))/3)+-parseInt(t(457))/4*(-parseInt(t(498))/5)+-parseInt(t(453))/6*(-parseInt(t(488))/7)+-parseInt(t(456))/8+parseInt(t(485))/9*(-parseInt(t(494))/10)+-parseInt(t(506))/11*(-parseInt(t(465))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[M(478)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){k(this,(function(){const e=M,n=new RegExp(e(481)),t=new RegExp(e(450),"i"),o=D(e(487));n[e(479)](o+"chain")&&t[e(479)](o+e(461))?D():o("0")}))()}();const T=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[M(478)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();T(void 0,(function(){const e=M,n=function(){const e=M;let n;try{n=Function(e(477)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n.console=n[e(499)]||{},o=[e(500),e(471),e(474),e(476),e(486),e(460),e(458)];for(let r=0;r<o.length;r++){const n=T[e(502)][e(509)][e(493)](T),i=o[r],a=t[i]||n;n[e(508)]=T[e(493)](T),n[e(482)]=a[e(482)][e(493)](a),t[i]=n}}))();const O=v("TresPerspectiveCamera",{position:[10,10,10]},null,-1),j=v(F(489),{args:[10,10]},null,-1);function M(e,n){const t=E();return(M=function(e,n){return t[e-=445]})(e,n)}function E(){const e=["peakColor","constructor","小波浪频率","颜色抑制","inline","275AVMnzZ","length","__proto__","prototype","#222","#310039","perlinWaveIterations","debu","stateObject","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","sinWaveFrequency","网格化","24cfHplm","山峰颜色","action","1586512QWNiZM","944bOZqEA","trace","colorOffset","table","input","valleyColor","小波浪幅度","TresCanvas","123348eAooqj","小波浪层数","SRGBColorSpace","string","正弦波速度","counter","warn","addBinding","#ff6767","info","waveC","error","return (function() ","apply","test","正弦波频率","function *\\( *\\)","toString","call","241614FfcjeP","129159yRkldB","exception","init","101227AsyxtL","TresGridHelper","wireframe","211180VbuyRM","while (true) {}","bind","10UCRhdb","6hsEtLy","colorDamping","gger","5FHDAps","console","log"];return(E=function(){return e})()}const B=l({__name:F(475),setup(e){const t=F,l={clearColor:t(445),shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:o[t(467)],toneMapping:i,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},u=p({peakColor:t(473),valleyColor:t(446),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),s=new a({title:"参数",expanded:!0});return s[t(472)](u,t(490),{label:t(452)}),s[t(472)](u,t(501),{label:t(454)}),s.addBinding(u,t(462),{label:"山谷颜色"}),s[t(472)](u,t(459),{label:"颜色偏移",min:.01,max:3,step:.01}),s[t(472)](u,t(496),{label:t(504),min:.01,max:6,step:.01}),s[t(472)](u,t(451),{label:t(480),picker:t(505),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),s[t(472)](u,"waveAmplitude",{label:"正弦波振幅",min:0,max:2,step:.01}),s.addBinding(u,"sinWaveSpeed",{label:t(469),picker:t(505),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),s[t(472)](u,t(447),{label:t(466),min:1,max:7,step:.1}),s.addBinding(u,"perlinWaveFrequency",{label:t(503),min:0,max:5,step:.01}),s.addBinding(u,"perlinWaveAmplitude",{label:t(463),min:0,max:2,step:.01}),s[t(472)](u,"perlinWaveSpeed",{label:"小波浪速度",min:0,max:2,step:.01}),(e,o)=>{const r=g(t(464));return c(),d(r,z(l,{"window-size":""}),{default:y((()=>[O,m(f(n)),j,m(A,x(P(u)),null,16)])),_:1},16)}}});function D(e){function n(e){const t=M;if(typeof e===t(468))return function(e){}[t(502)](t(492))[t(478)](t(470));1!==(""+e/e)[t(507)]||e%20==0?function(){return!0}[t(502)](t(448)+t(497))[t(483)](t(455)):function(){return!1}[t(502)](t(448)+t(497))[t(478)](t(449)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{B as default};
