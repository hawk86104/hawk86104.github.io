import{a0 as _,k as f,b1 as o,b2 as l,a5 as h,ap as g,r as w,o as d,v as x,D as b,a as v,K as s,ab as C,X as e,c as T,G as B,aS as i,ao as I,E as k}from"./vendor.dUBjHEtG1712557423713.js";const M=e("TresPerspectiveCamera",{fov:40,near:.1,far:200,position:[-1.5,2.5,3]},null,-1),P=e("TresGridHelper",{args:[2,10]},null,-1),y=e("TresHemisphereLight",{args:[16777215,526344,4.5],position:[-1.25,1,1.25]},null,-1),E=["args"],G=["color","side","clipIntersection"],V=_({__name:"clippingMaterial",setup(L){const t=f(),c=[];for(let n=1;n<30;n+=2)c.push(n);const a=[new o(new l(1,0,0),0),new o(new l(0,-1,0),0),new o(new l(0,0,-1),0)],u={clipIntersection:!0,planeConstant:0,showHelpers:!1};h(()=>{if(t.value){const n=t.value.context.renderer.value;n.localClippingEnabled=!0}});const r=new g({title:"裁剪参数",expanded:!0});return r.addBinding(a[0],"constant",{label:"x",min:-1,max:1,step:.1}),r.addBinding(a[1],"constant",{label:"y",min:-1,max:1,step:.1}),r.addBinding(a[2],"constant",{label:"z",min:-1,max:1,step:.1}),(n,H)=>{const m=w("TresCanvas");return d(),x(m,{ref_key:"tcRef",ref:t,"window-size":""},{default:b(()=>[M,P,y,v(s(C)),e("TresGroup",null,[(d(),T(k,null,B(c,p=>e("TresMesh",{key:p},[e("TresSphereGeometry",{args:[p/30,48,24]},null,8,E),e("TresMeshLambertMaterial",{color:[s(i).randInt(.1,1),s(i).randInt(0,1),s(i).randInt(0,1)],side:s(I),clippingPlanes:a,clipIntersection:u.clipIntersection},null,8,G)])),64))])]),_:1},512)}}});export{V as default};
