import{ax as m,c9 as a,az as s,aA as h,ap as g,a1 as v,aq as _,a2 as y,bx as t,aw as x,ca as S,b6 as b,a6 as C,r as T,o as r,x as d,E as f,a as c,L as i,ac as M,Y as n,ag as k,cb as B}from"./vendor.tzPtBocu1714290878896.js";class G extends m{constructor(o={}){super(),this.vertexShader="\n      varying vec3 vPosition;\n      varying vec3 vNormal;\n\n      void main() {\n        vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix * viewMatrix * modelPosition;\n        vec4 modelNormal = modelMatrix * vec4(normal, 0.0);\n        vPosition = modelPosition.xyz;\n        vNormal = modelNormal.xyz;\n\n      }\n    ",this.fragmentShader="\n      uniform vec3 glowColor;\n      uniform float falloff;\n      uniform float glowSharpness;\n      uniform float glowInternalRadius;\n      uniform float opacity;\n\n      varying vec3 vPosition;\n      varying vec3 vNormal;\n\n      void main()\n      {\n        // Normal\n        vec3 normal = normalize(vNormal);\n        if(!gl_FrontFacing)\n            normal *= - 1.0;\n        vec3 viewDirection = normalize(cameraPosition - vPosition);\n        float fresnel = dot(viewDirection, normal);\n        fresnel = pow(fresnel, glowInternalRadius + 0.1);\n        float falloff = smoothstep(0., falloff, fresnel);\n        float fakeGlow = fresnel;\n        fakeGlow += fresnel * glowSharpness;\n        fakeGlow *= falloff;\n        gl_FragColor = vec4(clamp(glowColor * fresnel, 0., 1.0), clamp(fakeGlow, 0., opacity));\n\n        #include <tonemapping_fragment>\n        #include <colorspace_fragment>\n      } \n      ",this.uniforms={opacity:new a(o.opacity!==void 0?o.opacity:1),glowInternalRadius:new a(o.glowInternalRadius!==void 0?o.glowInternalRadius:6),glowSharpness:new a(o.glowSharpness!==void 0?o.glowSharpness:.5),falloff:new a(o.falloff!==void 0?o.falloff:.1),glowColor:new a(o.glowColor!==void 0?new s(o.glowColor):new s("#00d5ff"))},this.setValues(o),this.depthTest=o.depthTest!==void 0?o.depthTest:!1,this.blending=o.blendMode!==void 0?o.blendMode:h,this.transparent=!0,this.side=o.side!==void 0?o.side:g}}const P=G,j=n("TresPerspectiveCamera",{position:[0,25,25],near:.1,fov:65},null,-1),R=n("TresAmbientLight",{intensity:1.5},null,-1),I=n("TresDirectionalLight",{position:[100,100,60],intensity:20},null,-1),N=n("TresGridHelper",{args:[20,10]},null,-1),z={position:[0,6,0]},F=n("TresMesh",null,[n("TresTorusKnotGeometry",{args:[4,.5,128,128]}),n("TresMeshPhysicalMaterial",{color:"blue",roughness:.2,clearcoat:1})],-1),D=["object"],q=v({__name:"fakeGlow",setup(u){const o=new _({title:"辉光参数",expanded:!0}),e=y({glowColor:"#a058c1",falloff:1.4,glowInternalRadius:3.7,glowSharpness:0,opacity:1,side:t,depthTest:!1}),l=new P,w=new x(new S(4,3.8,128,128),l);return o.addBinding(e,"glowColor",{label:"颜色"}),o.addBinding(e,"falloff",{label:"衰减",min:0,max:10,step:.1}),o.addBinding(e,"glowInternalRadius",{label:"内半径",min:-5,max:5,step:.1}),o.addBinding(e,"glowSharpness",{label:"清晰度",min:0,max:10,step:.1}),o.addBinding(e,"opacity",{label:"透明",min:0,max:1,step:.1}),o.addBinding(e,"side",{label:"材质面",options:{FrontSide:t,BackSide:b,DoubleSide:g}}),C(()=>{l.uniforms.falloff.value=e.falloff,l.uniforms.glowColor.value=new s(e.glowColor),l.uniforms.glowInternalRadius.value=e.glowInternalRadius,l.uniforms.glowSharpness.value=e.glowSharpness,l.uniforms.opacity.value=e.opacity,l.side=e.side}),(A,L)=>{const p=T("TresCanvas");return r(),d(p,{"window-size":""},{default:f(()=>[j,R,I,c(i(M),{autoRotate:""}),N,n("TresGroup",z,[F,n("primitive",{object:i(w)},null,8,D)]),(r(),d(k,null,{default:f(()=>[c(i(B),{files:["pos-x.jpg","neg-x.jpg","pos-y.jpg","neg-y.jpg","pos-z.jpg","neg-z.jpg"],path:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/6jpg/"},null,8,["files"])]),_:1}))]),_:1})}}});export{q as default};
