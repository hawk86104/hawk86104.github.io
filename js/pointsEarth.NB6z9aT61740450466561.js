import{_ as e}from"./three.HaMTRCf61740450466561.js";import{e as n,o as t,a}from"./@tresjs.9lmhsV6t1740450466561.js";import{P as o}from"./tweakpane.yDiyAAkA1740450466561.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as f,N as v,j as p,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1740450466561.js";import"./@vueuse.q8gKo7tC1740450466561.js";const x=S;!function(e,n){const t=S,a=w();for(;;)try{if(817851===-parseInt(t(425))/1+-parseInt(t(406))/2+-parseInt(t(434))/3*(parseInt(t(422))/4)+-parseInt(t(393))/5+-parseInt(t(446))/6+-parseInt(t(417))/7+parseInt(t(442))/8*(parseInt(t(437))/9))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(390)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=S,n=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),a=_(e(396));n[e(433)](a+"chain")&&t[e(433)](a+"input")?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(390)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(e,n){const t=w();return(S=function(e,n){return t[e-=388]})(e,n)}function w(){const e=["gger","525804NUeibP","constructor","SRGBColorSpace","addBinding","apply","uniforms","action","719250rjuVto","uTime","wireframeMaterialRef","init","#122148","string","海浪高度","__proto__","FrontSide","TresMeshBasicMaterial","warn","value","TresMesh","1615310ikCehb","counter","TresPoints","color","TresCanvas","TresHemisphereLight","pointsEarth","length","info","while (true) {}","Debug","946778ZbfpOr","rotation","#17c5a9","海浪变化速度","粒子大小","4Xzmhbn","log","bind","1422905AALgSa","TresShaderMaterial","TresPerspectiveCamera","groupRef","toString","#080820","uWaveSpeed","TresIcosahedronGeometry","test","1318269OrPxYR","size","debu","17345574oOODUE","change","return (function() ","console","exception","16NCSCBv","set",'{}.constructor("return this")( )'];return(w=function(){return e})()}T(void 0,(function(){const e=S,n=function(){const e=S;let n;try{n=Function(e(439)+e(444)+");")()}catch(t){n=window}return n}(),t=n[e(440)]=n[e(440)]||{},a=[e(423),e(403),e(414),"error",e(441),"table","trace"];for(let o=0;o<a[e(413)];o++){const n=T.constructor.prototype[e(424)](T),r=a[o],i=t[r]||n;n[e(400)]=T[e(424)](T),n[e(429)]=i[e(429)][e(424)](i),t[r]=n}}))();const b=r({__name:x(412),async setup(r){const y=x;let T,S;const w={color:y(419),pointSize:4},b={clearColor:y(397),shadows:!1,alpha:!1,outputColorSpace:e[y(388)]},_={color:w[y(409)],wireframe:!0,transparent:!0,opacity:.2},z=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),j=z[0],E=z[1],P=z[2],D=z[3],C=z[4],A={uniforms:{size:{type:"f",value:w.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:C},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(401)]},k=l(),I=l(),U=(new o).addFolder({title:y(416)});U[y(389)](w,y(409),{type:y(409)}).on(y(438),(({value:e})=>{const n=y;I[n(404)][n(409)][n(443)](e)})),U[y(389)](A[y(391)][y(435)],"value",{min:.1,max:10,step:.1,label:y(421)}),U[y(389)](A.uniforms.uWaveHeight,y(404),{min:.01,max:.5,step:.01,label:y(399)}),U[y(389)](A[y(391)][y(431)],y(404),{min:.01,max:1,step:.01,label:y(420)});const{onLoop:M}=n();return M((({delta:e})=>{const n=y;k[n(404)]&&(k[n(404)][n(418)].y+=.002,A[n(391)][n(394)][n(404)]+=10*e)})),(e,n)=>{const a=y,o=s(a(410));return u(),c(o,d(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v(a(427),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),p(m(t),{autoRotate:!0,autoRotateSpeed:2}),v("TresGroup",{ref_key:a(428),ref:k},[v(a(405),null,[n[0]||(n[0]=v(a(432),{args:[1,4]},null,-1)),v(a(402),d({ref_key:a(395),ref:I},_),null,16)]),v(a(408),null,[n[1]||(n[1]=v("TresIcosahedronGeometry",{args:[1,128]},null,-1)),v(a(426),h(g(A)),null,16)])],512),n[3]||(n[3]=v(a(411),{args:["#ffffff",a(430),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=S;if(typeof e===t(398))return function(e){}[t(447)](t(415)).apply(t(407));1!==(""+e/e)[t(413)]||e%20==0?function(){return!0}[t(447)](t(436)+t(445)).call(t(392)):function(){return!1}[t(447)](t(436)+t(445))[t(390)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
