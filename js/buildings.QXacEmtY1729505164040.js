import{u as t,_ as n,a as o}from"./mergeTres.ZsuSG0121729505164040.js";import{l as r}from"./utils.VE4qwlzk1729505164040.js";import{U as e}from"./@tresjs.IsKybBdF1729505164040.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.JNsx1iN61729505164040.js";import{_ as w}from"./@fesjs.ysb1R5mQ1729505164040.js";import"./@amap.-tZv8Pyx1729505164040.js";import"./pinia.LeDA9WVb1729505164040.js";import"./three.YREzp-_G1729505164040.js";import"./three-mesh-bvh.GSW9toAC1729505164040.js";import"./@vueuse.9dhnH8nd1729505164040.js";import"./vue-router.xkfjO_BL1729505164040.js";import"./lodash-es.kYt-_xTG1729505164040.js";import"./@qlin.yHhFDldE1729505164040.js";import"./@floating-ui.BPbuo5Gx1729505164040.js";import"./@juggle.7yjBMqoW1729505164040.js";const x=j;!function(t,n){const o=j,r=z();for(;;)try{if(364731===parseInt(o(180))/1+parseInt(o(208))/2*(-parseInt(o(216))/3)+-parseInt(o(190))/4+-parseInt(o(199))/5*(-parseInt(o(186))/6)+-parseInt(o(178))/7*(parseInt(o(225))/8)+-parseInt(o(191))/9+parseInt(o(204))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(182)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=j,n=new RegExp(t(215)),o=new RegExp(t(229),"i"),r=P(t(209));n.test(r+"chain")&&o[t(213)](r+t(230))?P():r("0")}))()}();const S=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(182)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();S(void 0,(function(){const t=j;let n;try{n=Function(t(198)+t(220)+");")()}catch(e){n=window}const o=n[t(226)]=n[t(226)]||{},r=["log",t(202),t(196),t(232),"exception","table","trace"];for(let a=0;a<r[t(223)];a++){const n=S.constructor[t(192)][t(185)](S),e=r[a],i=o[e]||n;n[t(187)]=S.bind(S),n.toString=i[t(179)].bind(i),o[e]=n}}))();const I=[x(205),x(227),"normal"];function j(t,n){const o=z();return(j=function(t,n){return o[t-=176]})(t,n)}function z(){const t=["u_near","10071090HfJKSG","position","TresShaderMaterial","while (true) {}","416qdndgy","init","near","gger","TresGroup","test","exp","function *\\( *\\)","5823KNsWWs","tbgRef","constructor","TresMesh",'{}.constructor("return this")( )',"buildings","value","length","far","400OWmsvy","console","faceUv","push","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","atan","error","mapHandle","customCoords","13153LUFwPK","toString","91385wfHnML","u_zoom","apply","string","call","bind","132kqwqOy","__proto__","geometry","buildingModels","834660DgbLNZ","1228068oTsQfy","prototype","uvArray","uniforms","normalArray","info","lngLatToCoord","return (function() ","24780iAIGrn","debu","action","warn"];return(z=function(){return t})()}const A=a({__name:x(189),setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t[n(223)];r+=3){const e=[t[r],t[r+1]],a=o[n(176)][n(177)][n(197)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=j,n=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(221));for(let o=0;o<n[t(223)];o++){const r=n[o];a(r[t(188)]);const e=new Float32Array(r[t(188)]),i=new Float32Array(r[t(227)]),l=new Float32Array(r[t(188)][t(223)]);d[t(228)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o.cameraState&&(g.uniforms[t(181)][t(222)]=o[t(176)].getZoom(),g.uniforms[t(203)][t(222)]=o.cameraState[t(210)],g[t(194)].u_far[t(222)]=o.cameraState[t(224)])})),(t,n)=>{const o=j;return c(),s(o(212),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(219),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:r(217),position:[t.positionArray,3],faceUv:[t[r(193)],2],normal:[t[r(195)],3]},null,8,I),p(r(206),v({ref_for:!0},g),null,16)])})),128))])}}});function P(t){function n(t){const o=j;if(typeof t===o(183))return function(t){}[o(218)](o(207)).apply("counter");1!==(""+t/t)[o(223)]||t%20==0?function(){return!0}[o(218)](o(200)+"gger")[o(184)](o(201)):function(){return!1}[o(218)](o(200)+o(211))[o(182)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const F=R;!function(t,n){const o=R,r=T();for(;;)try{if(144538===-parseInt(o(450))/1+parseInt(o(443))/2+-parseInt(o(449))/3+-parseInt(o(473))/4+parseInt(o(467))/5+parseInt(o(474))/6*(-parseInt(o(481))/7)+parseInt(o(483))/8)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const L=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(445)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function R(t,n){const o=T();return(R=function(t,n){return o[t-=442]})(t,n)}!function(){L(this,(function(){const t=R,n=new RegExp(t(477)),o=new RegExp(t(478),"i"),r=k(t(464));n[t(476)](r+t(466))&&o[t(476)](r+t(472))?k():r("0")}))()}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(445)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();U(void 0,(function(){const t=R,n=function(){const t=R;let n;try{n=Function(t(455)+t(462)+");")()}catch(o){n=window}return n}(),o=n[t(451)]=n.console||{},r=[t(463),t(453),t(460),"error",t(444),t(471),t(454)];for(let e=0;e<r[t(485)];e++){const n=U[t(447)][t(480)][t(457)](U),a=r[e],i=o[a]||n;n[t(448)]=U[t(457)](U),n[t(475)]=i[t(475)].bind(i),o[a]=n}}))();const M=t=>(y("data-v-f2059998"),t=t(),C(),t),W=M((()=>p(F(461),{fov:60,near:.1,far:2e3},null,-1))),N=M((()=>p(F(468),{intensity:.5},null,-1)));function T(){const t=["prototype","21TYNZNE","call","4530328lMnkJz","manual","length","tresCanvas","250246vxgNiI","exception","apply","buildings","constructor","__proto__","475101STyAgv","242062rSnjvO","console","debu","warn","trace","return (function() ","counter","bind","tcRef","string","info","TresPerspectiveCamera",'{}.constructor("return this")( )',"log","init","TresCanvas","chain","451975ZgvOIL","TresAmbientLight","stateObject","while (true) {}","table","input","663556NmpygA","141906mgGpVc","toString","test","function *\\( *\\)","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","gger"];return(T=function(){return t})()}function k(t){function n(t){const o=R;if(typeof t===o(459))return function(t){}[o(447)](o(470)).apply(o(456));1!==(""+t/t)[o(485)]||t%20==0?function(){return!0}[o(447)](o(452)+"gger")[o(482)]("action"):function(){return!1}.constructor(o(452)+o(479)).apply(o(469)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const E=w(a({__name:F(446),setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(484)});return(t,i)=>{const l=r,f=d(l(465));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:l(442),ref:l(458)},a),{default:m((()=>[W,N,g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(A)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{E as default};
