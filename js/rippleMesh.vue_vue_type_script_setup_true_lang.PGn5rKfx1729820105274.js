import{_ as n}from"./three.0W5n8UBO1729820105274.js";import{U as t}from"./@tresjs.S6PXiQcG1729820105274.js";import{g as o}from"./utils.jsETr34q1729820105274.js";import{d as e,b as r,a3 as i,o as s,E as c,L as a,u,aj as l,ak as f}from"./@vue.bvMz0l_u1729820105274.js";!function(n,t){const o=h,e=v();for(;;)try{if(432526===parseInt(o(305))/1*(-parseInt(o(317))/2)+-parseInt(o(316))/3*(-parseInt(o(315))/4)+parseInt(o(296))/5*(parseInt(o(313))/6)+-parseInt(o(353))/7*(parseInt(o(332))/8)+-parseInt(o(300))/9*(-parseInt(o(337))/10)+parseInt(o(342))/11+-parseInt(o(326))/12*(-parseInt(o(302))/13))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const p=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function v(){const n=["chain","position","set","constructor","return (function() ","2973832AsJuxr","bind","\n}\n","error","height","4652960KRxPCD","\nvarying vec2 vUv;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    ","console","action","call","4108324zPGWGi","function *\\( *\\)","counter","trace","length","string","TresBufferGeometry","apply","stateObject","TresMesh","debu","7wShUwv","uvs","toString","speed","5pQdEGs","test","pv2","tresMeshRef","9fNeYOT","log","228917zBRPNt","num","fog_pars_vertex","117064iNwdOm","value","fog_vertex","gger","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","color","table","warn","2367744ejgUCp","Color","19112ujuEEt","87BBeAuo","10DHEjza","info","DoubleSide","exception","ShaderChunk","prototype","opacity","uniforms","__proto__","12Upeqgd"];return(v=function(){return n})()}!function(){p(this,(function(){const n=h,t=new RegExp(n(343)),o=new RegExp(n(309),"i"),e=g("init");t[n(297)](e+n(327))&&o[n(297)](e+"input")?g():e("0")}))()}();const m=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();m(void 0,(function(){const n=h;let t;try{t=Function(n(331)+'{}.constructor("return this")( ));')()}catch(r){t=window}const o=t.console=t[n(339)]||{},e=[n(301),n(312),n(318),n(335),n(320),n(311),n(345)];for(let i=0;i<e.length;i++){const t=m[n(330)][n(322)][n(333)](m),r=e[i],s=o[r]||t;t[n(325)]=m[n(333)](m),t[n(294)]=s[n(294)].bind(s),o[r]=t}}))();const d=["position","uv"];function h(n,t){const o=v();return(h=function(n,t){return o[n-=293]})(n,t)}const y=e({__name:"rippleMesh",props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:"#ffff00"},opacity:{default:.8},height:{default:100},num:{default:8},speed:{default:.15}},setup(e){const p=h,v=e,m=r(),y={side:n[p(319)],transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:"\nprecision lowp float;\nprecision lowp int;\n"+n[p(321)][p(304)]+p(338)+n[p(321)][p(307)]+p(334),fragmentShader:"\n  precision lowp float;\n  precision lowp int;\n  uniform float time;\n  uniform float opacity;\n  uniform vec3 color;\n  uniform float num;\n  uniform float speed;\n  varying vec2 vUv;\n  void main() {\n    vec4 fragColor = vec4(0.);\n    float sin = sin((vUv.y - time * speed) * 10. * num);\n    float high = 0.92;\n    float medium = 0.4;\n    if (sin > high) {\n      fragColor = vec4(mix(vec3(.8, 1., 1.), color, (1. - sin) / (1. - high)), 1.);\n    } else if(sin > medium) {\n      fragColor = vec4(color, mix(1., 0., 1.-(sin - medium) / (high - medium)));\n    } else {\n      fragColor = vec4(color, 0.);\n    }\n    vec3 fade = mix(color, vec3(0., 0., 0.), vUv.y);\n    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n  }\n\t",uniforms:{time:{type:p(298),value:0},color:{type:p(293),value:new(n[p(314)])(v[p(310)])},opacity:{type:p(298),value:v[p(323)]},num:{type:p(298),value:v[p(303)]},speed:{type:p(298),value:v[p(295)]}}};let g=null,x=null;const{centerPoint:w,points:_}=o(v.positionSrc);!function(n=[],t){const o=p,e=[],r=[];for(let i=0,s=e[o(346)],c=r[o(346)];i<n[o(346)]-1;i++){let o=1,a=n[i],u=n[i+1];e[s++]=a.x,e[s++]=0,e[s++]=a.y,r[c++]=0,r[c++]=0,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[c++]=1,r[c++]=0,e[s++]=a.x,e[s++]=t,e[s++]=a.y,r[c++]=0,r[c++]=o,e[s++]=a.x,e[s++]=t,e[s++]=a.y,r[c++]=0,r[c++]=o,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[c++]=1,r[c++]=0,e[s++]=u.x,e[s++]=t,e[s++]=u.y,r[c++]=1,r[c++]=o}g=new Float32Array(e),x=new Float32Array(r)}(_,v[p(336)]);const{onLoop:C}=t();return C((({delta:n})=>{const t=p;y[t(324)].time[t(306)]+=n})),i((()=>{const t=p;v[t(310)]&&(y[t(324)][t(310)][t(306)]=new(n[t(314)])(v.color)),v[t(323)]&&(y[t(324)][t(323)][t(306)]=v[t(323)]),v[t(303)]&&(y[t(324)][t(303)][t(306)]=v.num),v[t(295)]&&(y[t(324)][t(295)][t(306)]=v[t(295)]),m[t(306)]&&m.value[t(328)][t(329)](w.x,m[t(306)].position.y,w.y)})),(n,t)=>{const o=p;return s(),c(o(351),{renderOrder:2200,ref_key:o(299),ref:m},[a(o(348),{position:[u(g),3],uv:[u(x),2]},null,8,d),a("TresShaderMaterial",l(f(y)),null,16)],512)}}});function g(n){function t(n){const o=h;if(typeof n===o(347))return function(n){}.constructor("while (true) {}")[o(349)](o(344));1!==(""+n/n)[o(346)]||n%20==0?function(){return!0}[o(330)](o(352)+o(308))[o(341)](o(340)):function(){return!1}.constructor(o(352)+o(308))[o(349)](o(350)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{y as _};
