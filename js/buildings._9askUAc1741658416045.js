import{u as t,_ as n,a as o}from"./mergeTres.TpthOQvu1741658416045.js";import{l as r}from"./utils.2o1PLPEO1741658416045.js";import{e}from"./@tresjs.W3PFJhMo1741658416045.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741658416045.js";import{_ as y}from"./@fesjs.hAnhKQG-1741658416045.js";import"./@amap.smZgnC9y1741658416045.js";import"./pinia.Iw2DqQac1741658416045.js";import"./three.FyUEtfsR1741658416045.js";import"./three-mesh-bvh.FHydkdim1741658416045.js";import"./postprocessing.llR5x4wQ1741658416045.js";import"./@vueuse.5uFvLf9q1741658416045.js";import"./vue-router.qhodDV9M1741658416045.js";import"./lodash-es.pklfUAS51741658416045.js";import"./@qlin.yHhFDldE1741658416045.js";import"./@floating-ui.BPbuo5Gx1741658416045.js";import"./@juggle.7yjBMqoW1741658416045.js";const C=I;!function(t,n){const o=I,r=x();for(;;)try{if(953689===-parseInt(o(495))/1+parseInt(o(478))/2*(parseInt(o(462))/3)+-parseInt(o(506))/4*(-parseInt(o(511))/5)+-parseInt(o(475))/6*(parseInt(o(485))/7)+parseInt(o(499))/8*(parseInt(o(482))/9)+-parseInt(o(517))/10*(parseInt(o(483))/11)+parseInt(o(481))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function x(){const t=["TresMesh","4ZeWehl","normalArray","geometry","customCoords","debu","589430mcAwhE","position","apply",'{}.constructor("return this")( )',"while (true) {}","u_far","3242630JLlzhq","function *\\( *\\)","u_near","table","uvArray","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","exception","exp","TresGroup","267TSZUMm","buildings","prototype","constructor","info","input","value","test","gger","length","toString","string","lngLatToCoord","351942JGlWch","uniforms","log","14202MseQpH","counter","atan","34212972WLtCzi","81YMDLVB","44wyfyrR","getZoom","119AIGTbb","trace","buildingModels","error","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","push","warn","bind","cameraState","positionArray","1254504GDwGAU","return (function() ","console","init","801296eTXkYT","mapHandle","near","action","u_zoom","faceUv"];return(x=function(){return t})()}!function(){w(this,(function(){const t=I,n=new RegExp(t(518)),o=new RegExp(t(522),"i"),r=z(t(498));n.test(r+"chain")&&o[t(469)](r+t(467))?z():r("0")}))()}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(513)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function I(t,n){const o=x();return(I=function(t,n){return o[t-=460]})(t,n)}b(void 0,(function(){const t=I,n=function(){const t=I;let n;try{n=Function(t(496)+t(514)+");")()}catch(o){n=window}return n}(),o=n.console=n[t(497)]||{},r=[t(477),t(491),t(466),t(488),t(523),t(520),t(486)];for(let e=0;e<r[t(471)];e++){const n=b[t(465)][t(464)][t(492)](b),a=r[e],i=o[a]||n;n.__proto__=b[t(492)](b),n[t(472)]=i[t(472)][t(492)](i),o[a]=n}}))();const S=[C(512),"faceUv","normal"],j=a({__name:C(487),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=o[n(500)][n(509)][n(474)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[I(493)]&&(async()=>{const t=I,n=await r(t(489),t(463));for(let o=0;o<n[t(471)];o++){const r=n[o];a(r[t(508)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(504)]),l=new Float32Array(r[t(508)].length);d[t(490)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;o[t(493)]&&(g.uniforms[t(503)][t(468)]=o[t(500)][t(484)](),g[t(476)][t(519)][t(468)]=o[t(493)][t(501)],g.uniforms[t(516)].value=o[t(493)].far)})),(t,n)=>{const o=I;return c(),s(o(461),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(505),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:"tbgRef",position:[t[r(494)],3],faceUv:[t[r(521)],2],normal:[t[r(507)],3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=I;if(typeof t===o(473))return function(t){}[o(465)](o(515))[o(513)](o(479));1!==(""+t/t)[o(471)]||t%20==0?function(){return!0}[o(465)](o(510)+o(470)).call(o(502)):function(){return!1}[o(465)]("debu"+o(470)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}!function(t,n){const o=P,r=U();for(;;)try{if(575154===parseInt(o(135))/1*(parseInt(o(128))/2)+parseInt(o(138))/3*(-parseInt(o(117))/4)+parseInt(o(108))/5*(parseInt(o(133))/6)+-parseInt(o(120))/7+-parseInt(o(114))/8*(parseInt(o(115))/9)+parseInt(o(142))/10*(-parseInt(o(152))/11)+parseInt(o(127))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(109)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function P(t,n){const o=U();return(P=function(t,n){return o[t-=108]})(t,n)}!function(){A(this,(function(){const t=P,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(150),"i"),r=D(t(141));n[t(125)](r+"chain")&&o[t(125)](r+t(123))?D():r("0")}))()}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(109)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();R(void 0,(function(){const t=P,n=function(){const t=P;let n;try{n=Function(t(111)+t(140)+");")()}catch(o){n=window}return n}(),o=n[t(148)]=n[t(148)]||{},r=[t(139),t(113),t(110),"error",t(143),t(137),t(118)];for(let e=0;e<r.length;e++){const n=R.constructor[t(121)].bind(R),a=r[e],i=o[a]||n;n[t(116)]=R[t(122)](R),n[t(134)]=i[t(134)][t(122)](i),o[a]=n}}))();function U(){const t=["44418ppZWci","call","1029615LDVggD","apply","info","return (function() ","TresAmbientLight","warn","16pPGQWd","2694501OzIEzx","__proto__","4oUwfKf","trace","darkblue","2002595GpdIfT","prototype","bind","input","tresCanvas","test","while (true) {}","9122124EJbSwP","46wUqIey","tcRef","TresPerspectiveCamera","action","gger","12DtxakD","toString","41387ctYyRh","length","table","1906923hGCYgI","log",'{}.constructor("return this")( )',"init","70xBylMN","exception","stateObject","debu","TresCanvas","counter","console","manual","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor"];return(U=function(){return t})()}function D(t){function n(t){const o=P;if("string"==typeof t)return function(t){}.constructor(o(126))[o(109)](o(147));1!==(""+t/t)[o(136)]||t%20==0?function(){return!0}[o(151)](o(145)+o(132))[o(153)](o(131)):function(){return!1}[o(151)](o(145)+o(132)).apply(o(144)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=y(a({__name:"buildings",setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(149)});return(t,i)=>{const l=r,f=d(l(146));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(119)}),g(f,v({id:l(124),ref:l(129)},a),{default:m((()=>[i[0]||(i[0]=p(l(130),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(112),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
