import{aH as G,bN as $,q as A,aa as w,o as c,c as T,K as N,L as R,a1 as l,ay as g,aA as z,cz as F,ad as M,a5 as J,a6 as x,r as O,C as B,J as E,ac as V,a as b,ae as q,af as D,T as H,ag as I,ak as K}from"./vendor.DmiBkafs1717143910253.js";import{l as X}from"./utils.hmGydZGW1717143910253.js";import{c as Y,d as Q,a as U}from"./ExtensionUtilities.J7YjJgDK1717143910253.js";import{m as W}from"./mercator.a2Hae4Rp1717143910253.js";import"./Water2.djFnBMSL1717143910253.js";import"./Reflector.fGqO6TqT1717143910253.js";const Z=["properties","renderOrder"],ee=["args"],te=l("TresMeshBasicMaterial",{color:"#2defff",transparent:!0,opacity:.6},null,-1),oe={__name:"chinaMapMesh",async setup(C){let o,r;(()=>{g.prototype.computeBoundsTree=Y,g.prototype.disposeBoundsTree=Q,z.prototype.raycast=U})();const f=W().center([104,37.5]).translate([0,0]),h=([o,r]=G(()=>X("./plugins/simpleGIS/json/china.json","features")),o=await o,r(),o),p={depth:10,bevelEnabled:!1},_=[];(()=>{h.forEach(e=>{e.geometry.coordinates.forEach(n=>{n.forEach(s=>{const m=new F;for(let i=0;i<s.length;i++){const[y,v]=f(s[i]);i===0&&m.moveTo(y,-v),m.lineTo(y,-v)}_.push({shape:m,properties:e.properties})})})})})();const k=new $({color:"#3480C4",linewidth:1,linecap:"round"}),d=A();w(()=>{d.value&&d.value.children.forEach(e=>{e.geometry.computeBoundsTree();const t=[e.material,k];e.material=t})});let a=null;(()=>{const e=document.createElement("div");e.className="tooltip",e.style.border="1px solid white",e.style.position="absolute",e.style.color="white",e.style.padding="0px 6px",e.style.whiteSpace="no-wrap",e.style.visibility="hidden",document.body.appendChild(e),a=e})();const P=(e,t)=>{e.object.material[0].color.set(16711680),a.innerText=e.object.properties.name,a.style.visibility="visible"},L=(e,t)=>{console.log("pointer-leave",e,t),e.material[0].color.set(3010559),a.style.visibility="hidden"},j=(e,t)=>{a.style.left="".concat(t.clientX+6,"px"),a.style.top="".concat(t.clientY+6,"px")},{onLoop:S}=M();return S(()=>{}),(e,t)=>(c(),T("TresGroup",{ref_key:"tgRef",ref:d},[(c(),T(N,null,R(_,(n,s)=>l("TresMesh",{key:"".concat(s),properties:n.properties,renderOrder:s,onPointerEnter:P,onPointerLeave:L,onPointerMove:j},[l("TresExtrudeGeometry",{args:[n.shape,p]},null,8,ee),te],40,Z)),64))],512))}},ae=l("TresPerspectiveCamera",{position:[0,0,166],fov:75,near:.1,far:1e3,"look-at":[0,0,0]},null,-1),me=J({__name:"chinaMap",setup(C){const o=x({clearColor:"#201919"}),r=x({enableDamping:!0,dampingFactor:.05}),{onLoop:u}=M();return u(()=>{}),w(()=>{}),(f,h)=>{const p=O("TresCanvas");return c(),B(p,V(o,{"window-size":""}),{default:E(()=>[ae,b(H(I),q(D(r)),null,16),(c(),B(K,null,{default:E(()=>[b(oe)]),_:1}))]),_:1},16)}}});export{me as default};
