import{a5 as x,at as f,aD as u,B as h,o as l,c as _,a as o,ac as y,b6 as g,T as t,bc as b,a1 as i,ad as z,a6 as w,au as C,r as P,C as m,J as c,a7 as M,a8 as q,a9 as B,ae as T,af as S,ag as N,ak as D}from"./vendor.V7oUbPUv1718333718672.js";import{_ as I}from"./component.vue_vue_type_script_setup_true_lang.CB6FG_p21718333718672.js";import{_ as s}from"./vanilla.esm.5.5.0.55F13Ysq1718333718672.js";import"./object_hash.CiQf2gtE1718333718672.js";import"./_commonjsHelpers.5-cIlDoe1718333718672.js";import"./_commonjs-dynamic-modules.h-SxKiO41718333718672.js";var k="uniform float time;\nuniform float amplitude;\nuniform float speed;\nuniform float frequency;\n\nvec3 mod289(vec3 x){\n	return x-floor(x*(1./289.))*289.;\n}\n\nvec4 mod289(vec4 x){\n	return x-floor(x*(1./289.))*289.;\n}\n\nvec4 permute(vec4 x){\n	return mod289(((x*34.)+1.)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r){\n	return 1.79284291400159-.85373472095314*r;\n}\n\nfloat noise(vec3 v){\n	const vec2 C=vec2(1./6.,1./3.);\n	const vec4 D=vec4(0.,.5,1.,2.);\n	\n	\n	vec3 i=floor(v+dot(v,C.yyy));\n	vec3 x0=v-i+dot(i,C.xxx);\n	\n	\n	vec3 g=step(x0.yzx,x0.xyz);\n	vec3 l=1.-g;\n	vec3 i1=min(g.xyz,l.zxy);\n	vec3 i2=max(g.xyz,l.zxy);\n	\n	vec3 x1=x0-i1+C.xxx;\n	vec3 x2=x0-i2+C.yyy;\n	vec3 x3=x0-D.yyy;\n	\n	\n	i=mod289(i);\n	vec4 p=permute(permute(permute(\n				i.z+vec4(0.,i1.z,i2.z,1.))\n				+i.y+vec4(0.,i1.y,i2.y,1.))\n				+i.x+vec4(0.,i1.x,i2.x,1.));\n				\n				float n_=.142857142857;\n				vec3 ns=n_*D.wyz-D.xzx;\n				\n				vec4 j=p-49.*floor(p*ns.z*ns.z);\n				\n				vec4 x_=floor(j*ns.z);\n				vec4 y_=floor(j-7.*x_);\n				\n				vec4 x=x_*ns.x+ns.yyyy;\n				vec4 y=y_*ns.x+ns.yyyy;\n				vec4 h=1.-abs(x)-abs(y);\n				\n				vec4 b0=vec4(x.xy,y.xy);\n				vec4 b1=vec4(x.zw,y.zw);\n				\n				vec4 s0=floor(b0)*2.+1.;\n				vec4 s1=floor(b1)*2.+1.;\n				vec4 sh=-step(h,vec4(0.));\n				\n				vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n				vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n				\n				vec3 p0=vec3(a0.xy,h.x);\n				vec3 p1=vec3(a0.zw,h.y);\n				vec3 p2=vec3(a1.xy,h.z);\n				vec3 p3=vec3(a1.zw,h.w);\n				\n				\n				vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n				p0*=norm.x;\n				p1*=norm.y;\n				p2*=norm.z;\n				p3*=norm.w;\n				\n				\n				vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n				m=m*m;\n				return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n				dot(p2,x2),dot(p3,x3)));\n			}\n			\n			\n			float displace(vec3 point){\n				return noise(vec3(point.x*frequency,point.y*frequency,time*speed))*amplitude;\n			}\n			\n			vec3 orthogonal(vec3 v){\n				return normalize(abs(v.x)>abs(v.z)\n				?vec3(-v.y,v.x,0.)\n				:vec3(0.,-v.z,v.y));\n			}\n			\n			void main(){\n				vec3 displacedPosition=position+normal*displace(position);\n				\n				float offset=.0001;\n				vec3 tangent=orthogonal(normal);\n				vec3 bitangent=normalize(cross(normal,tangent));\n				vec3 neighbour1=position+tangent*offset;\n				vec3 neighbour2=position+bitangent*offset;\n				vec3 displacedNeighbour1=neighbour1+normal*displace(neighbour1);\n				vec3 displacedNeighbour2=neighbour2+normal*displace(neighbour2);\n				\n				vec3 displacedTangent=displacedNeighbour1-displacedPosition;\n				vec3 displacedBitangent=displacedNeighbour2-displacedPosition;\n				\n				vec3 displacedNormal=normalize(cross(displacedTangent,displacedBitangent));\n				\n				\n				\n				csm_Normal=normalMatrix*displacedNormal;\n				\n				\n				csm_Position=displacedPosition;\n			}";const G=["rotation-x"],$=i("TresPlaneGeometry",{args:[1,1,64,64]},null,-1),L=x({__name:"waterGlass",props:{color:{default:"#fff"},amplitude:{default:.066},frequency:{default:5}},setup(p){const e=p,n={time:{type:"f",value:.1},amplitude:{type:"f",value:e.amplitude},speed:{type:"f",value:.277},frequency:{type:"f",value:e.frequency}},a={side:f,color:new u(e.color),metalness:.087,roughness:0,transmission:1,thickness:1.5,refractionRatio:1.5},{onLoop:d}=z();return d(({delta:r})=>{n.time.value+=r}),h(()=>e,()=>{a.color=new u(e.color),n.amplitude.value=e.amplitude,n.frequency.value=e.frequency},{deep:!0}),(r,v)=>(l(),_("TresMesh",{"rotation-x":-Math.PI/2,"position-y":.1},[$,o(t(b),y(a,{baseMaterial:g,vertexShader:t(k),uniforms:n,silent:""}),null,16,["baseMaterial","vertexShader"])],8,G))}}),j=i("TresPerspectiveCamera",{position:[1,1,1]},null,-1),R=i("TresAmbientLight",{intensity:1},null,-1),V=i("TresGridHelper",{args:[1,10]},null,-1),O=x({__name:"waterGlass",setup(p){const e={clearColor:"#222",shadows:!0,alpha:!1,shadowMapType:M,outputColorSpace:q,toneMapping:B,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},n=w({color:"#b367ff",amplitude:.066,frequency:5}),a=new C({title:"参数",expanded:!0});return a.addBinding(n,"color",{label:"颜色"}),a.addBinding(n,"amplitude",{label:"amplitude",min:.01,max:.2,step:.01}),a.addBinding(n,"frequency",{label:"frequency",min:.1,max:10,step:.1}),(d,r)=>{const v=P("TresCanvas");return l(),m(v,y(e,{"window-size":""}),{default:c(()=>[j,R,o(L,T(S(n)),null,16),o(t(N)),V,(l(),m(D,null,{default:c(()=>[o(t(I),{intensity:16,resolution:256,background:"",blur:.6},{default:c(()=>[o(t(s),{intensity:10,form:"circle","rotation-x":Math.PI/2,position:[2*4-3*4/2,4,0],scale:[1,5,0]},null,8,["rotation-x"]),o(t(s),{intensity:10,form:"circle","rotation-x":Math.PI/2,position:[-(3*4)/2,4,0],scale:[1,5,0]},null,8,["rotation-x"]),o(t(s),{intensity:5,"rotation-y":-Math.PI/2,position:[-1,0,0],scale:[10,.2,1]},null,8,["rotation-y"]),o(t(s),{intensity:5,"rotation-y":-Math.PI/2,position:[1,0,0],scale:[10,.2,1]},null,8,["rotation-y"])]),_:1})]),_:1}))]),_:1},16)}}});export{O as default};
