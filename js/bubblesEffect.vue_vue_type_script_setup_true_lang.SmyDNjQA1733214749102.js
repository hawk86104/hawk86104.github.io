import{_ as n,bW as t,s as e,C as o,h as i,ab as r}from"./three.aWgA1gea1733214749102.js";import{m as a,e as s,b as l}from"./@tresjs.lftldzUe1733214749102.js";import{d as u,b as c,a6 as f,a3 as p,o as m,D as b,J as g,aj as v,ak as y,u as d}from"./@vue.-THQH3GC1733214749102.js";const h=x;!function(n,t){const e=x,o=z();for(;;)try{if(976691===parseInt(e(353))/1+-parseInt(e(339))/2+-parseInt(e(316))/3*(parseInt(e(355))/4)+parseInt(e(352))/5+parseInt(e(334))/6+-parseInt(e(306))/7*(parseInt(e(311))/8)+parseInt(e(348))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[x(317)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=x,t=new RegExp(n(343)),e=new RegExp(n(321),"i"),o=T(n(323));t.test(o+n(307))&&e[n(335)](o+n(319))?T():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function x(n,t){const e=z();return(x=function(n,t){return e[n-=300]})(n,t)}function z(){const n=["uniforms","geometry","5237544UPcUiy","test","TresMeshRef","gger",'{}.constructor("return this")( )',"276480TMtyrF","__proto__","trace","error","function *\\( *\\)","counter","return (function() ","TresShaderMaterial","while (true) {}","11729367ogyArx","console","color","traverse","1641440SZEbAj","928138qstwAv","toString","421164mUijkW","Color","mergeGeometries","map","dispose","string","offsetY","debu","1582stJoEN","chain","TresBufferGeometry","uTime","info","22408tjWCed","AdditiveBlending","opacity","Mesh","length","48bdgBbq","apply","xRayEffect","input","DoubleSide","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor","init","verticesNeedUpdate","exception","value","stateObject","model","#84ccff","glowColor","warn"];return(z=function(){return n})()}_(void 0,(function(){const n=x,t=function(){const n=x;let t;try{t=Function(n(345)+n(338)+");")()}catch(e){t=window}return t}(),e=t[n(349)]=t.console||{},o=["log",n(331),n(310),n(342),n(325),"table",n(341)];for(let i=0;i<o[n(315)];i++){const t=_[n(322)].prototype.bind(_),r=o[i],a=e[r]||t;t[n(340)]=_.bind(_),t[n(354)]=a[n(354)].bind(a),e[r]=t}}))();const P=u({__name:h(318),props:{model:{},color:{default:h(329)},opacity:{default:1}},async setup(e){const o=h;let i,r;const u=e,d=c(),w=[];u[o(328)][o(351)]((t=>{const e=o;t instanceof n[e(314)]&&(t.geometry[e(324)]=!0,w.push(t[e(333)]))}));const _=([i,r]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),i=await i,r(),i),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(356)])(u.color)},lightningTexture:{type:"t",value:_[o(301)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:u[o(313)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(320)],blending:n[o(312)],depthWrite:!1};x[o(332)][o(304)][o(326)]=Math.sin(5);const{camera:z}=a(),{onLoop:P}=s();return P((({delta:n})=>{const t=o;z[t(326)].position&&d[t(326)]&&(x.uniforms[t(309)][t(326)]+=n)})),p((()=>{const e=o;d[e(326)]&&(d.value.geometry[e(302)](),d.value[e(333)]=t[e(300)](w)),u.color&&(x[e(332)][e(330)][e(326)]=new(n[e(356)])(u[e(350)])),u[e(313)]&&(x[e(332)].uOpacity.value=u[e(313)])})),(n,t)=>{const e=o;return m(),b("TresMesh",{ref_key:e(336),ref:d},[t[0]||(t[0]=g(e(308),null,null,-1)),g(e(346),v(y(x)),null,16)],512)}}});function T(n){function t(n){const e=x;if(typeof n===e(303))return function(n){}.constructor(e(347))[e(317)](e(344));1!==(""+n/n)[e(315)]||n%20==0?function(){return!0}[e(322)](e(305)+e(337)).call("action"):function(){return!1}.constructor(e(305)+e(337))[e(317)](e(327)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const S=U;!function(n,t){const e=U,o=I();for(;;)try{if(495280===-parseInt(e(224))/1+parseInt(e(253))/2*(-parseInt(e(190))/3)+parseInt(e(240))/4+-parseInt(e(252))/5+parseInt(e(181))/6+parseInt(e(183))/7*(-parseInt(e(186))/8)+parseInt(e(208))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(248)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=U,t=new RegExp(n(184)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=j(n(231));t[n(235)](o+n(188))&&e.test(o+n(210))?j():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(248)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(){const n=["uTime","trace","TresShaderMaterial","value","debu","position","episodic","982700aXOXsD","MathUtils","material","model","geometry","TresBufferGeometry","bubblesEffect","init","uniforms","attributes","Float32BufferAttribute","test","opacity","aDelayDuration","array","uOpacity","1168516UytMyM","includes","size","bridge",'{}.constructor("return this")( )',"process","length","afective","apply","semantic","#FFF","ShaderMaterial","57160WjcNqR","1163874lOyeLu","Color","toString","setAttribute","prototype","stateObject","bubbles","push","info","3406278mGPZAW","while (true) {}","6433hKsbNr","function *\\( *\\)","console","3928nDRaph","gger","chain","analitic","3JnsoaL","constructor","TresMeshRef","brainstem","bind","AdditiveBlending","action","cerebellum","glowColor","map","log","uSlowTime","randFloat","randInt","error","computeBoundingSphere","DoubleSide","traverse","14964624YUaJXI","name","input","return (function() ","table","color","__proto__","mergeGeometries","TresPoints"];return(I=function(){return n})()}function U(n,t){const e=I();return(U=function(n,t){return e[n-=175]})(n,t)}M(void 0,(function(){const n=U;let t;try{t=Function(n(211)+n(244)+");")()}catch(i){t=window}const e=t[n(185)]=t[n(185)]||{},o=[n(200),"warn",n(180),n(204),"exception",n(212),n(218)];for(let r=0;r<o[n(246)];r++){const t=M[n(191)][n(176)].bind(M),i=o[r],a=e[i]||t;t[n(214)]=M[n(194)](M),t[n(255)]=a[n(255)][n(194)](a),e[i]=t}}))();const F=u({__name:S(230),props:{model:{},color:{default:S(250)},opacity:{default:1}},setup(a){const l=S,u=a,f=[l(247),l(249),l(223),l(245),"amigdala",l(193),l(243),l(197),l(189)],h={};u[l(227)][l(207)]((n=>{const o=l;n instanceof e&&f[o(199)]((e=>{const i=o;if(n[i(209)][i(241)](e)){if(h[e]){const o=[h[e],n[i(228)]];return h[e]=t[i(215)](o),h}return h[e]=n[i(228)]}return[]}))}));const w=c(),_=new(n[l(251)])({uniforms:{glowColor:{type:"c",value:new(n[l(254)])(u[l(213)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:u.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[l(195)],side:n[l(206)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{w[l(220)]&&(()=>{const t=l,e=[],o=[],a=[],s=[];for(let r=0;r<2e4-3*f[t(246)];r+=1){const l=n[t(225)][t(203)](0,f[t(246)]-1),u=f[l],c=h[u][t(233)][t(222)][t(238)][3*r+0]||0,p=h[u][t(233)][t(222)].array[3*r+1]||0,m=h[u][t(233)].position.array[3*r+2]||0;if(o[t(179)](c,p,m),e[r]=i[t(202)](10,20),r%100==0){const n=i[t(203)](100,250)+p;s[t(179)](c,n,m,1)}else s[t(179)](c,p,m,0);a[2*r+0]=n[t(225)][t(202)](.5,1.5),a[2*r+1]=2.5}w[t(220)][t(175)](t(237),new(n[t(234)])(a,2)),w[t(220)][t(175)](t(178),new(n[t(234)])(s,4)),w[t(220)][t(175)](t(222),new(n[t(234)])(o,3)),w[t(220)][t(175)](t(213),new(n[t(234)])([],3)),w[t(220)][t(175)](t(242),new r(e,1)),w[t(220)][t(205)]()})()}));const x=c(),{onLoop:z}=s();return z((({delta:n})=>{const t=l;x[t(220)]&&(x[t(220)].material.uniforms[t(217)][t(220)]+=.05,x[t(220)][t(226)][t(232)][t(201)][t(220)]+=1/400),u[t(213)]&&(_[t(232)][t(198)][t(220)]=new o(u.color)),u[t(236)]&&(_[t(232)][t(239)][t(220)]=u[t(236)])})),(n,t)=>{const e=l;return m(),b(e(216),{ref_key:e(192),ref:x},[g(e(229),{ref_key:"BufferGeometryRef",ref:w},null,512),g(e(219),v(y(d(_))),null,16)],512)}}});function j(n){function t(n){const e=U;if("string"==typeof n)return function(n){}[e(191)](e(182))[e(248)]("counter");1!==(""+n/n)[e(246)]||n%20==0?function(){return!0}[e(191)](e(221)+e(187)).call(e(196)):function(){return!1}[e(191)](e(221)+e(187))[e(248)](e(177)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,F as a};
