import{e,o}from"./@tresjs.zc7faK4J1743660816268.js";import{a$ as i}from"./three.2wx8FU0g1743660816268.js";import{d as n,r as a,e as t,o as s,f as r,g as l,m as u,N as m,j as d,u as c,aj as p,ak as f}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";const v={position:[-2,-2,-2]},P=["position","a-scale"],h=3e3,g=n({__name:"shaderParticles",setup(n){const g=a({clearColor:"black",shadows:!0,alpha:!1}),T={transparent:!0,blending:i,depthWrite:!1,vertexShader:"\n  uniform float uPixelRatio;\n  uniform float uSize;\n  uniform float uTime;\n  attribute float aScale;\n\n  void main()\n  {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n      modelPosition.y += sin(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectionPosition = projectionMatrix * viewPosition;\n\n      gl_Position = projectionPosition;\n      gl_PointSize = aScale * uSize * uPixelRatio;\n      gl_PointSize *= (1.0 / - viewPosition.z);\n  }\n  ",fragmentShader:"\n  void main()\n    {\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n      float strength = 0.05 / distanceToCenter - 0.1;\n\n      gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n    }\n  ",uniforms:{uSize:{value:100},uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uTime:{value:0}}},j=new Float32Array(9e3),w=new Float32Array(h);for(let e=0;e<h;e++)j[3*e+0]=4*Math.random(),j[3*e+1]=4*Math.random(),j[3*e+2]=4*Math.random(),w[e]=Math.random();const{onLoop:S}=e();return S((({elapsed:e})=>{T.uniforms.uTime.value=e})),(e,i)=>{const n=t("TresCanvas");return s(),r(n,u(g,{"window-size":""}),{default:l((()=>[i[0]||(i[0]=m("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:.1,far:1e3,"look-at":[-8,3,-3]},null,-1)),d(c(o)),i[1]||(i[1]=m("TresAmbientLight",{intensity:.5},null,-1)),m("TresPoints",v,[m("TresBufferGeometry",{position:[c(j),3],"a-scale":[c(w),1]},null,8,P),m("TresShaderMaterial",p(f(T)),null,16)]),i[2]||(i[2]=m("TresDirectionalLight",{position:[0,2,4],intensity:1,"cast-shadow":""},null,-1)),i[3]||(i[3]=m("TresGridHelper",null,null,-1))])),_:1},16)}}});export{g as default};
