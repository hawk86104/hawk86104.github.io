import{c7 as o,ap as s,as as a,c6 as e}from"./three.Bj3hPI0l1746335712058.js";import{a as i}from"./@tresjs.CIKSfeCC1746335712058.js";import{P as t}from"./tweakpane.C0HtAJSg1746335712058.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.CNIC8jjG1746335712058.js";import"./index.Cc8pz8tY1746335712058.js";import{l}from"./util.5EKUaFvO1746335712058.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.6tdtUUU81746335712058.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.DuBlupJf1746335712058.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.Dqhi0AUz1746335712058.js";import{d as u,r as c,a5 as _,h as j,H as f,o as g,j as b,u as h,f as y,J as w,ak as v,al as B,e as k,I as L,m as C,am as T,F as x}from"./@vue.DK6ok9LJ1746335712058.js";import"./postprocessing.Dxg1zmor1746335712058.js";import"./@vueuse.BtSShokC1746335712058.js";import"./utils.Be-dtOEb1746335712058.js";import"./@fesjs.B__Hyo051746335712058.js";import"./vue-router.CeDYLsLY1746335712058.js";import"./lodash-es.BOsRjQhS1746335712058.js";import"./@qlin.q6OWdsQV1746335712058.js";import"./pinia.C9yokyLV1746335712058.js";import"./@babel.BPq7uOAK1746335712058.js";import"./@floating-ui.BFjFSAYt1746335712058.js";import"./@juggle.CcBCnTIR1746335712058.js";import"./three-mesh-ui.module.BrFms4Gh1746335712058.js";import"./starLoading.UGiFEFlD1746335712058.js";import"./cssLoaders.BHizIqzP1746335712058.js";import"./bubbleLoading.Tyzqb3Vl1746335712058.js";import"./yangyangLoading.Dl6VE1Q81746335712058.js";const S={position:[0,120,0]},z=u({__name:"digitalBrainFloor",async setup(u){let z,M;const P=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),F=c({color:"#fff",show:!0,opacity:1}),G=new t({title:"参数"});G.addBinding(F,"show",{label:"点云显示"}),G.addBinding(F,"color",{label:"点云颜色"}),G.addBinding(F,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const J=c({color:"#84ccff",show:!0,opacity:1});G.addBinding(J,"show",{label:"脑轮廓显示"}),G.addBinding(J,"color",{label:"脑轮廓颜色"}),G.addBinding(J,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=c({color:"#9e00af",show:!0,opacity:1});G.addBinding(R,"show",{label:"脑组织显示"}),G.addBinding(R,"color",{label:"脑组织颜色"}),G.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const q=new o,A=([z,M]=_((()=>l("./plugins/medical/model/brainparts.OBJ",q))),z=await z,M(),z),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=j("TresCanvas");return g(),f(x,null,[b(h(d)),b(a,C(E,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),v(B(H)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",S,[F.show?(g(),k(n,C({key:0,model:h(A)},F),null,16,["model"])):L("",!0),(g(),k(T,null,{default:y((()=>[J.show?(g(),k(p,C({key:0,model:h(A)},J),null,16,["model"])):L("",!0)])),_:1})),R.show?(g(),k(m,C({key:1,model:h(A)},R),null,16,["model"])):L("",!0)]),b(r,v(B(P)),null,16)])),_:1},16)],64)}}});export{z as default};
