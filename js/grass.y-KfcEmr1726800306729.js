import{t,_ as n,C as e,at as o,T as r,ai as a}from"./three.ZddO3ejJ1726800306729.js";import{U as i,z as s,Y as c,L as l}from"./@tresjs.pv1MNfNv1726800306729.js";import"./index.nYeowUtx1726800306729.js";import{a as u}from"./simplex-noise.P9JMzoHY1726800306729.js";import{C as f}from"./index.nd3onaEF1726800306729.js";import{d as p,a4 as h,o as m,E as v,L as d,u as g,r as x,f as y,g as w,j as b,aj as _,ak as j,al as z}from"./@vue.bvMz0l_u1726800306729.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.PFp7hePw1726800306729.js";import"./@vueuse.bZHkTEeA1726800306729.js";import"./lamina.DM3BhF4d1726800306729.js";import"./glsl-tokenizer.0YDyBMML1726800306729.js";import"./@amap.soyOEMuN1726800306729.js";import"./glsl-token-descope.zNIlyVau1726800306729.js";import"./glsl-token-depth.HHIHs98I1726800306729.js";import"./glsl-token-scope.nD39uZHI1726800306729.js";import"./glsl-token-properties.zLBI1J_d1726800306729.js";import"./glsl-token-assignments.ImGmJSd31726800306729.js";import"./glsl-token-string.ZdNsnbc61726800306729.js";import"./glsl-token-functions.dtMvnwCZ1726800306729.js";import"./object-hash.4nPceUw51726800306729.js";import"./jszip.1BnN4Vdj1726800306729.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.TnYFCYS81726800306729.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.LMhMWbI41726800306729.js";import"./three-stdlib.nCzhm4Z61726800306729.js";import"./@pmndrs.b0vWz2y51726800306729.js";import"./utils.ByQg8cdQ1726800306729.js";const A=C;!function(t,n){const e=C,o=L();for(;;)try{if(933614===parseInt(e(401))/1+-parseInt(e(373))/2+-parseInt(e(387))/3+parseInt(e(350))/4+-parseInt(e(382))/5*(-parseInt(e(365))/6)+-parseInt(e(379))/7*(parseInt(e(381))/8)+parseInt(e(385))/9*(parseInt(e(370))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[C(347)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function C(t,n){const e=L();return(C=function(t,n){return e[t-=328]})(t,n)}!function(){I(this,(function(){const t=C,n=new RegExp(t(390)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=E("init");n[t(384)](o+t(386))&&e.test(o+t(332))?E():o("0")}))()}();const S=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[C(347)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();S(void 0,(function(){const t=C;let n;try{n=Function(t(395)+t(378)+");")()}catch(r){n=window}const e=n[t(398)]=n[t(398)]||{},o=[t(341),t(380),"info",t(334),t(351),t(383),t(333)];for(let a=0;a<o[t(391)];a++){const n=S[t(372)][t(376)][t(352)](S),r=o[a],i=e[r]||n;n[t(340)]=S[t(352)](S),n[t(345)]=i[t(345)][t(352)](i),e[r]=n}}))();const R=["material"],k=[A(397),"attributes-position","attributes-uv","attributes-offset",A(399),A(337),A(362),A(368)],F=[A(330)],T=[A(363)],D=p({__name:"grass",props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),y=a,w=u(Math[c(343)]);function b(t,e){const o=c,r=t.x*e.w+t.y*e.z-t.z*e.y+t.w*e.x,a=-t.x*e.z+t.y*e.w+t.z*e.x+t.w*e.y,i=t.x*e.y-t.y*e.x+t.z*e.w+t.w*e.z,s=-t.x*e.x-t.y*e.y-t.z*e.z+t.w*e.w;return new(n[o(402)])(r,a,i,s)}function _(t,n){var e=2*w(t/50,n/50);return e+=4*w(t/100,n/100),e+=.2*w(t/10,n/10)}const j=function(t,e){const a=c,i=[],s=[],l=[],u=[],f=[];let p=new o,h=new o;const m=-.25;for(let o=0;o<t;o++){const r=Math[a(343)]()*e-e/2,c=Math[a(343)]()*e-e/2,v=_(r,c);i[a(388)](r,v,c);let d=Math.PI-Math.random()*(2*Math.PI);u[a(388)](Math[a(396)](.5*d)),f[a(388)](Math[a(367)](.5*d));let g=new(n[a(357)])(0,1,0),x=g.x*Math[a(396)](d/2),y=g.y*Math.sin(d/2),w=g.z*Math.sin(d/2),j=Math.cos(d/2);p[a(336)](x,y,w,j)[a(331)](),d=.5*Math.random()+m,g=new(n[a(357)])(1,0,0),x=g.x*Math[a(396)](d/2),y=g.y*Math[a(396)](d/2),w=g.z*Math.sin(d/2),j=Math[a(367)](d/2),h[a(336)](x,y,w,j)[a(331)](),p=b(p,h),d=.5*Math[a(343)]()+m,g=new(n[a(357)])(0,0,1),x=g.x*Math[a(396)](d/2),y=g.y*Math.sin(d/2),w=g.z*Math[a(396)](d/2),j=Math[a(367)](d/2),h[a(336)](x,y,w,j)[a(331)](),p=b(p,h),s[a(388)](p.x,p.y,p.z,p.w),o<t/3?l[a(388)](1.8*Math[a(343)]()):l[a(388)](Math.random())}return{offsetsF32:new(n[a(335)])(new Float32Array(i),3),orientationsF32:new(n[a(335)])(new Float32Array(s),4),stretchesF32:new(n[a(335)])(new Float32Array(l),1),halfRootAngleCosF32:new r(new Float32Array(f),1),halfRootAngleSinF32:new r(new Float32Array(u),1)}}(y[c(377)],y[c(364)]),z=new t(y.bW,y.bH,1,y.joints).translate(0,y.bH/2,0),M=new(n[c(328)])(y[c(364)],y[c(364)],32,32);M[c(355)](new(n[c(357)])(0,1,0));const I=M.attributes[c(346)];for(let t=0;t<I.array[c(391)];t+=3)I.array[t+1]=_(I.array[t],I[c(358)][t+2]);M[c(361)][c(346)].needsUpdate=!0,M[c(349)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new e(.3,.9,0)[c(329)](),bottomColor:new(n[c(403)])(0,.2,0).convertSRGBToLinear()},c(366),c(360),(t=>{const e=c;t.side=n[e(392)]})));C.map=x.map,C[c(344)]=x[c(344)],C[c(400)]=!1;const{onLoop:S}=i();return S((({elapsed:t})=>{const n=c;C.uniforms[n(338)][n(359)]=t/4})),(t,e)=>{const o=c;return m(),v("TresGroup",null,[d(o(393),{material:g(C)},[d(o(369),{index:g(z)[o(397)],"attributes-position":g(z)[o(361)].position,"attributes-uv":g(z).attributes.uv,"attributes-offset":g(j)[o(339)],"attributes-orientation":g(j)[o(374)],"attributes-stretch":g(j)[o(348)],"attributes-halfRootAngleSin":g(j)[o(354)],"attributes-halfRootAngleCos":g(j)[o(404)]},null,8,k)],8,R),d("TresMesh",{position:[0,0,0],geometry:g(M)},[d(o(342),{color:o(371),side:n[o(392)]},null,8,T)],8,F)])}}});function E(t){function n(t){const e=C;if("string"==typeof t)return function(t){}[e(372)]("while (true) {}")[e(347)](e(375));1!==(""+t/t)[e(391)]||t%20==0?function(){return!0}.constructor(e(389)+e(353))[e(394)](e(356)):function(){return!1}[e(372)](e(389)+e(353))[e(347)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}function L(){const t=["3611142nZeIJk","orientationsF32","counter","prototype","instances",'{}.constructor("return this")( )',"153265vqRXng","warn","504tZxteb","5bTITpa","table","test","2507013jNRjfq","chain","4774239QcDQFS","push","debu","function *\\( *\\)","length","DoubleSide","TresMesh","call","return (function() ","sin","index","console","attributes-orientation","toneMapped","1209220QjcCnX","Vector4","Color","halfRootAngleCosF32","PlaneGeometry","convertSRGBToLinear","geometry","normalize","input","trace","error","InstancedBufferAttribute","set","attributes-stretch","time","offsetsF32","__proto__","log","TresMeshStandardMaterial","random","alphaMap","toString","position","apply","stretchesF32","computeVertexNormals","476580ypwOIv","exception","bind","gger","halfRootAngleSinF32","lookAt","action","Vector3","array","value","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","attributes","attributes-halfRootAngleSin","side","width","1219578eoXAUJ","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","cos","attributes-halfRootAngleCos","TresInstancedBufferGeometry","150qYNtas","#000f00","constructor"];return(L=function(){return t})()}function P(t,n){const e=U();return(P=function(t,n){return e[t-=454]})(t,n)}const B=P;!function(t,n){const e=P,o=U();for(;;)try{if(594482===parseInt(e(455))/1+parseInt(e(454))/2+-parseInt(e(461))/3*(-parseInt(e(480))/4)+-parseInt(e(464))/5*(-parseInt(e(481))/6)+parseInt(e(457))/7+parseInt(e(470))/8+parseInt(e(466))/9*(-parseInt(e(488))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[P(471)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){H(this,(function(){const t=P,n=new RegExp(t(469)),e=new RegExp(t(483),"i"),o=G(t(484));n.test(o+t(458))&&e.test(o+t(487))?G():o("0")}))()}();const O=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();O(void 0,(function(){const t=P;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(r){n=window}const e=n[t(475)]=n[t(475)]||{},o=[t(468),t(479),t(474),"error","exception",t(472),"trace"];for(let a=0;a<o.length;a++){const n=O[t(463)][t(473)][t(482)](O),r=o[a],i=e[r]||n;n[t(486)]=O[t(482)](O),n[t(460)]=i[t(460)][t(482)](i),e[r]=n}}))();const q=d(B(485),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1);function U(){const t=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","init","TresPerspectiveCamera","__proto__","input","727790lHQJcE","1330482APeJfT","787257gSTdBA","action","52108oeWHSN","chain","call","toString","844527mpzEfc","string","constructor","238340IcoxdP","debu","369SXxdzy","grass","log","function *\\( *\\)","8666240jjzCyP","apply","table","prototype","info","console","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","gger","while (true) {}","warn","12qYzllW","24JxVDtE","bind"];return(U=function(){return t})()}const N=p({__name:B(467),setup(t){const n=x({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=P;return m(),y(g(l),_(j(n)),{default:w((()=>[q,b(g(c),_(j(e)),null,16),(m(),y(z,null,{default:w((()=>[b(D)])),_:1})),(m(),y(z,null,{default:w((()=>[b(g(M),{texture:r(476)})])),_:1}))])),_:1},16)}}});function G(t){function n(t){const e=P;if(typeof t===e(462))return function(t){}[e(463)](e(478))[e(471)]("counter");1!==(""+t/t).length||t%20==0?function(){return!0}[e(463)](e(465)+e(477))[e(459)](e(456)):function(){return!1}[e(463)](e(465)+e(477))[e(471)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{N as default};
