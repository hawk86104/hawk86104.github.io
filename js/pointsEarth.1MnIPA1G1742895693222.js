import{_ as e}from"./three.DqHgeVY11742895693222.js";import{e as n,o as t,a}from"./@tresjs.xCsT8yve1742895693222.js";import{P as o}from"./tweakpane.ivGeiIdz1742895693222.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as p,N as f,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.C4dqouNn1742895693222.js";import"./postprocessing.vTwfsnPH1742895693222.js";import"./@vueuse.q8TRDI1e1742895693222.js";const x=w;!function(e,n){const t=w,a=S();for(;;)try{if(830674===-parseInt(t(271))/1*(-parseInt(t(275))/2)+-parseInt(t(272))/3*(-parseInt(t(268))/4)+-parseInt(t(264))/5+-parseInt(t(260))/6+parseInt(t(298))/7+-parseInt(t(312))/8+parseInt(t(304))/9)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(266)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=w,n=new RegExp(e(274)),t=new RegExp(e(291),"i"),a=_("init");n[e(269)](a+"chain")&&t.test(a+e(284))?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(){const e=["warn","uTime","counter","SRGBColorSpace","while (true) {}","groupRef","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","debu","console","rotation","#122148","log","info","11570979WcaeBC","size","exception","__proto__","Debug","action","6813153hnfIpL","TresIcosahedronGeometry","bind","TresMeshBasicMaterial","stateObject","uniforms","#080820","value","8112600lZFlSb","constructor","TresHemisphereLight","toString","7156716luILTG","gger","TresMesh","pointsEarth","151120fuYJto","TresCanvas","apply","string","17676leKbMV","test","color","72742NgEnOH","249NSpdnH","prototype","function *\\( *\\)","8IHIbwl","error","call","#17c5a9","TresPoints","FrontSide","addBinding","pointSize","return (function() ","input"];return(S=function(){return e})()}function w(e,n){const t=S();return w=function(e,n){return t[e-=258]},w(e,n)}T(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function(e(283)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(293)]=n[e(293)]||{},a=[e(296),e(285),e(297),e(276),e(300),"table","trace"];for(let o=0;o<a.length;o++){const n=T.constructor[e(273)][e(306)](T),r=a[o],i=t[r]||n;n[e(301)]=T[e(306)](T),n.toString=i[e(259)][e(306)](i),t[r]=n}}))();const b=r({__name:x(263),async setup(r){const y=x;let T,S;const w={color:y(278),pointSize:4},b={clearColor:y(295),shadows:!1,alpha:!1,outputColorSpace:e[y(288)]},_={color:w[y(270)],wireframe:!0,transparent:!0,opacity:.2},z=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),j=z[0],E=z[1],P=z[2],I=z[3],D=z[4],k={uniforms:{size:{type:"f",value:w[y(282)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:D},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(280)]},C=l(),A=l(),H=(new o).addFolder({title:y(302)});H[y(281)](w,"color",{type:y(270)}).on("change",(({value:e})=>{const n=y;A[n(311)][n(270)].set(e)})),H[y(281)](k[y(309)][y(299)],y(311),{min:.1,max:10,step:.1,label:"粒子大小"}),H.addBinding(k[y(309)].uWaveHeight,y(311),{min:.01,max:.5,step:.01,label:"海浪高度"}),H[y(281)](k[y(309)].uWaveSpeed,y(311),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:M}=n();return M((({delta:e})=>{const n=y;C.value&&(C[n(311)][n(294)].y+=.002,k[n(309)][n(286)][n(311)]+=10*e)})),(e,n)=>{const a=y,o=s(a(265));return u(),c(o,d(b,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=f("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),f("TresGroup",{ref_key:a(290),ref:C},[f(a(262),null,[n[0]||(n[0]=f(a(305),{args:[1,4]},null,-1)),f(a(307),d({ref_key:"wireframeMaterialRef",ref:A},_),null,16)]),f(a(279),null,[n[1]||(n[1]=f("TresIcosahedronGeometry",{args:[1,128]},null,-1)),f("TresShaderMaterial",h(g(k)),null,16)])],512),n[3]||(n[3]=f(a(258),{args:["#ffffff",a(310),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=w;if(typeof e===t(267))return function(e){}[t(313)](t(289))[t(266)](t(287));1!==(""+e/e).length||e%20==0?function(){return!0}[t(313)](t(292)+"gger")[t(277)](t(303)):function(){return!1}[t(313)](t(292)+t(261))[t(266)](t(308)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
