import{e,U as n}from"./@tresjs.FlKhQDQ71735866388381.js";import{_ as t,c0 as o,am as r}from"./three.Rja0AEnA1735866388381.js";import{P as i}from"./tweakpane.yHWGBmom1735866388381.js";import{d as a,w as l,o as u,D as c,J as s,u as v,r as f,e as p,f as g,g as y,j as d,aj as m,ak as x,m as P}from"./@vue.yG49nQHr1735866388381.js";import"./@vueuse.YI3Exu6_1735866388381.js";const z=S;!function(e,n){const t=S,o=I();for(;;)try{if(795076===-parseInt(t(435))/1*(parseInt(t(415))/2)+parseInt(t(453))/3*(parseInt(t(404))/4)+-parseInt(t(461))/5+-parseInt(t(396))/6+parseInt(t(389))/7*(parseInt(t(394))/8)+-parseInt(t(408))/9*(parseInt(t(417))/10)+parseInt(t(449))/11*(parseInt(t(419))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[S(393)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=S,n=new RegExp(e(405)),t=new RegExp(e(454),"i"),o=b("init");n[e(438)](o+e(420))&&t[e(438)](o+e(413))?b():o("0")}))()}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[S(393)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(e,n){const t=I();return(S=function(e,n){return t[e-=389]})(e,n)}w(void 0,(function(){const e=S,n=function(){const e=S;let n;try{n=Function(e(426)+e(398)+");")()}catch(t){n=window}return n}(),t=n[e(448)]=n.console||{},o=[e(395),e(433),e(391),e(452),e(406),"table",e(456)];for(let r=0;r<o[e(411)];r++){const n=w[e(447)][e(430)][e(410)](w),i=o[r],a=t[i]||n;n[e(428)]=w[e(410)](w),n[e(407)]=a[e(407)][e(410)](a),t[i]=n}}))();const h=[z(432)],C=[z(446),z(442),z(425),z(392)];function I(){const e=["function *\\( *\\)","exception","toString","63KehAiQ","uTime","bind","length","value","input","uPerlinWaveIterations","480286pVYhWv","set","98330tTPcPo","action","4654380QyZcyo","chain","call","uSinWaveFrequency","uColorOffset","stateObject","fragmentShader","return (function() ","colorOffset","__proto__","perlinWaveFrequency","prototype","uPerlinWaveAmplitude","rotation-x","warn","Vector2","4CWkyli","sinWaveFrequency","uColorDamping","test","Color","colorDamping","waveAmplitude","vertexShader","uPeakColor","uSinWaveSpeed","perlinWaveSpeed","side","constructor","console","55Poowvu","while (true) {}","sinWaveSpeed","error","936579kYhsVP","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uWaveAmplitude","trace","counter","uValleyColor","TresMesh","uPerlinWaveSpeed","3168825jpSYlw","valleyColor","string","#b367ff","56HxIPcL","uPerlinWaveFrequency","info","wireframe","apply","814992ObNZDX","log","9269070FKkVsB","gger",'{}.constructor("return this")( )',"peakColor","perlinWaveIterations","DoubleSide","perlinWaveAmplitude","setStyle","16DZqStc"];return(I=function(){return e})()}const _=a({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(464)},valleyColor:{default:"#184650"},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const o=z,r=n,i={uTime:{value:0},uPeakColor:{value:new(t[o(439)])(r[o(399)])},uValleyColor:{value:new(t[o(439)])(r[o(462)])},uColorOffset:{value:r.colorOffset},uColorDamping:{value:r[o(440)]},uSinWaveFrequency:{value:new(t[o(434)])(r[o(436)].x,r[o(436)].y)},uWaveAmplitude:{value:r[o(441)]},uSinWaveSpeed:{value:new(t[o(434)])(r[o(451)].x,r[o(451)].y)},uPerlinWaveIterations:{value:r[o(400)]},uPerlinWaveFrequency:{value:r[o(429)]},uPerlinWaveAmplitude:{value:r[o(402)]},uPerlinWaveSpeed:{value:r[o(445)]}},{onLoop:a}=e();return a((({elapsed:e})=>{i[o(409)].value=e})),l((()=>r),(()=>{const e=o;i[e(443)][e(412)][e(403)](r[e(399)]),i[e(458)][e(412)].setStyle(r.valleyColor),i[e(423)].value=r[e(427)],i[e(437)][e(412)]=r[e(440)],i[e(422)][e(412)][e(416)](r[e(436)].x,r.sinWaveFrequency.y),i[e(455)][e(412)]=r[e(441)],i[e(444)].value[e(416)](r[e(451)].x,r[e(451)].y),i[e(414)][e(412)]=r[e(400)],i[e(390)][e(412)]=r[e(429)],i[e(431)].value=r[e(402)],i[e(460)][e(412)]=r.perlinWaveSpeed}),{deep:!0}),(e,n)=>{const r=o;return u(),c(r(459),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=s("TresPlaneGeometry",{args:[10,10,512,512]},null,-1)),s("TresShaderMaterial",{side:t[r(401)],vertexShader:v("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:v("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:i,wireframe:e[r(392)]},null,8,C)],8,h)}}});function b(e){function n(e){const t=S;if(typeof e===t(463))return function(e){}[t(447)](t(450))[t(393)](t(457));1!==(""+e/e)[t(411)]||e%20==0?function(){return!0}[t(447)]("debu"+t(397))[t(421)](t(418)):function(){return!1}[t(447)]("debu"+t(397)).apply(t(424)),n(++e)}try{if(e)return n;n(0)}catch(t){}}!function(e,n){const t=k,o=j();for(;;)try{if(176262===parseInt(t(214))/1*(-parseInt(t(237))/2)+-parseInt(t(206))/3*(parseInt(t(240))/4)+-parseInt(t(199))/5*(parseInt(t(232))/6)+parseInt(t(246))/7+-parseInt(t(196))/8+parseInt(t(236))/9*(parseInt(t(209))/10)+parseInt(t(190))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(245)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){A(this,(function(){const e=k,n=new RegExp(e(231)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=T("init");n[e(203)](o+e(221))&&t.test(o+e(235))?T():o("0")}))()}();const F=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(245)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function k(e,n){const t=j();return(k=function(e,n){return t[e-=188]})(e,n)}F(void 0,(function(){const e=k;let n;try{n=Function("return (function() "+e(226)+");")()}catch(r){n=window}const t=n[e(222)]=n[e(222)]||{},o=[e(228),e(211),"info","error",e(194),e(225),"trace"];for(let i=0;i<o[e(201)];i++){const n=F.constructor.prototype[e(204)](F),r=o[i],a=t[r]||n;n.__proto__=F[e(204)](F),n[e(210)]=a[e(210)][e(204)](a),t[r]=n}}))();const q=a({__name:"waveC",setup(e){const a=k,l={clearColor:a(189),shadows:!0,alpha:!1,shadowMapType:o,outputColorSpace:t[a(229)],toneMapping:r,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},c=f({peakColor:a(234),valleyColor:a(219),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),z=new i({title:"参数",expanded:!0});return z.addBinding(c,a(227),{label:a(200)}),z[a(215)](c,"peakColor",{label:"山峰颜色"}),z[a(215)](c,a(191),{label:a(192)}),z[a(215)](c,a(230),{label:a(198),min:.01,max:3,step:.01}),z[a(215)](c,a(216),{label:a(243),min:.01,max:6,step:.01}),z[a(215)](c,a(217),{label:a(223),picker:a(205),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),z.addBinding(c,a(242),{label:"正弦波振幅",min:0,max:2,step:.01}),z[a(215)](c,a(193),{label:a(233),picker:"inline",x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),z[a(215)](c,"perlinWaveIterations",{label:a(208),min:1,max:7,step:.1}),z[a(215)](c,a(244),{label:a(238),min:0,max:5,step:.01}),z.addBinding(c,a(241),{label:"小波浪幅度",min:0,max:2,step:.01}),z[a(215)](c,a(202),{label:"小波浪速度",min:0,max:2,step:.01}),(e,t)=>{const o=a,r=p(o(207));return u(),g(r,P(l,{"window-size":""}),{default:y((()=>[t[0]||(t[0]=s("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),d(v(n)),t[1]||(t[1]=s(o(213),{args:[10,10]},null,-1)),d(_,m(x(c)),null,16)])),_:1},16)}}});function T(e){function n(e){const t=k;if(typeof e===t(218))return function(e){}[t(239)](t(224))[t(245)](t(195));1!==(""+e/e)[t(201)]||e%20==0?function(){return!0}[t(239)](t(197)+"gger")[t(188)](t(212)):function(){return!1}[t(239)](t(197)+t(220))[t(245)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}function j(){const e=["function *\\( *\\)","480kxoDRZ","正弦波速度","#ff6767","input","2839311fJlbZF","106rnwxRT","小波浪频率","constructor","426956cXzJhL","perlinWaveAmplitude","waveAmplitude","颜色抑制","perlinWaveFrequency","apply","1313242JtnzTW","call","#222","7468868YwTXsG","valleyColor","山谷颜色","sinWaveSpeed","exception","counter","2620792BsZZof","debu","颜色偏移","11195BZxYhy","网格化","length","perlinWaveSpeed","test","bind","inline","9xrhKTK","TresCanvas","小波浪层数","10ExQnSV","toString","warn","action","TresGridHelper","3375DBLZfp","addBinding","colorDamping","sinWaveFrequency","string","#310039","gger","chain","console","正弦波频率","while (true) {}","table",'{}.constructor("return this")( )',"wireframe","log","SRGBColorSpace","colorOffset"];return(j=function(){return e})()}export{q as default};
