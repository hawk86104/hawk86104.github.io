import{e,U as n}from"./@tresjs.pA0fT6uQ1736128832096.js";import{_ as t,k as o,a0 as r}from"./three.8H01GNxA1736128832096.js";import{P as i}from"./tweakpane.yHWGBmom1736128832096.js";import{d as a,w as l,o as u,D as c,J as v,u as s,r as f,e as p,f as g,g as d,j as m,aj as y,ak as x,m as P}from"./@vue.yG49nQHr1736128832096.js";import"./@vueuse.iB8cUOAP1736128832096.js";const z=C;!function(e,n){const t=C,o=w();for(;;)try{if(312190===parseInt(t(247))/1+-parseInt(t(206))/2+-parseInt(t(223))/3+parseInt(t(238))/4+-parseInt(t(214))/5+-parseInt(t(250))/6+parseInt(t(218))/7*(parseInt(t(234))/8))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(210)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function w(){const e=["toString","exception","Color","waveAmplitude","Vector2","uPeakColor","setStyle","init","colorOffset","fragmentShader","159340rNgxZh","perlinWaveSpeed","stateObject","string","apply","uSinWaveFrequency","colorDamping","valleyColor","1395310ottETF","uColorOffset","#184650","sinWaveFrequency","7RMcmOb","perlinWaveFrequency","TresPlaneGeometry","TresMesh","return (function() ","1526238BxTbvR","debu","error","perlinWaveIterations","sinWaveSpeed","perlinWaveAmplitude","table","constructor","call","length","value","5133784gEDjdn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","bind","1635916fzrxKy","counter","trace","action","waveC","vertexShader","gger","console","chain","348069vGatDZ","uSinWaveSpeed","uPerlinWaveSpeed","1314618nrqjmK","rotation-x","function *\\( *\\)","prototype","peakColor","uTime","TresShaderMaterial","info","test","wireframe"];return(w=function(){return e})()}!function(){W(this,(function(){const e=C,n=new RegExp(e(188)),t=new RegExp(e(235),"i"),o=_(e(203));n.test(o+e(246))&&t[e(194)](o+"input")?_():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function C(e,n){const t=w();return(C=function(e,n){return t[e-=188]})(e,n)}S(void 0,(function(){const e=C,n=function(){const e=C;let n;try{n=Function(e(222)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(245)]=n[e(245)]||{},o=["log","warn",e(193),e(225),e(197),e(229),e(240)];for(let r=0;r<o[e(232)];r++){const n=S[e(230)][e(189)][e(237)](S),i=o[r],a=t[i]||n;n[e(236)]=S.bind(S),n[e(196)]=a[e(196)].bind(a),t[i]=n}}))();const h=[z(251)],I=["side",z(243),z(205),z(195)],b=a({__name:z(242),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:"#b367ff"},valleyColor:{default:z(216)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const i=z,a=n,f={uTime:{value:0},uPeakColor:{value:new(t[i(198)])(a[i(190)])},uValleyColor:{value:new(t[i(198)])(a[i(213)])},uColorOffset:{value:a[i(204)]},uColorDamping:{value:a[i(212)]},uSinWaveFrequency:{value:new(t[i(200)])(a[i(217)].x,a[i(217)].y)},uWaveAmplitude:{value:a[i(199)]},uSinWaveSpeed:{value:new o(a[i(227)].x,a[i(227)].y)},uPerlinWaveIterations:{value:a[i(226)]},uPerlinWaveFrequency:{value:a[i(219)]},uPerlinWaveAmplitude:{value:a.perlinWaveAmplitude},uPerlinWaveSpeed:{value:a[i(207)]}},{onLoop:p}=e();return p((({elapsed:e})=>{const n=i;f[n(191)][n(233)]=e})),l((()=>a),(()=>{const e=i;f[e(201)][e(233)][e(202)](a.peakColor),f.uValleyColor[e(233)][e(202)](a[e(213)]),f[e(215)][e(233)]=a[e(204)],f.uColorDamping[e(233)]=a.colorDamping,f[e(211)][e(233)].set(a[e(217)].x,a[e(217)].y),f.uWaveAmplitude[e(233)]=a.waveAmplitude,f[e(248)].value.set(a[e(227)].x,a.sinWaveSpeed.y),f.uPerlinWaveIterations[e(233)]=a[e(226)],f.uPerlinWaveFrequency[e(233)]=a.perlinWaveFrequency,f.uPerlinWaveAmplitude[e(233)]=a[e(228)],f[e(249)][e(233)]=a[e(207)]}),{deep:!0}),(e,n)=>{const t=i;return u(),c(t(221),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v(t(220),{args:[10,10,512,512]},null,-1)),v(t(192),{side:r,vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:f,wireframe:e.wireframe},null,8,I)],8,h)}}});function _(e){function n(e){const t=C;if(typeof e===t(209))return function(e){}[t(230)]("while (true) {}")[t(210)](t(239));1!==(""+e/e)[t(232)]||e%20==0?function(){return!0}[t(230)]("debu"+t(244))[t(231)](t(241)):function(){return!1}[t(230)](t(224)+t(244))[t(210)](t(208)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const A=k;!function(e,n){const t=k,o=q();for(;;)try{if(540407===parseInt(t(352))/1*(-parseInt(t(368))/2)+-parseInt(t(328))/3+parseInt(t(379))/4*(-parseInt(t(323))/5)+-parseInt(t(319))/6*(parseInt(t(349))/7)+-parseInt(t(380))/8*(-parseInt(t(318))/9)+parseInt(t(347))/10*(parseInt(t(360))/11)+-parseInt(t(336))/12*(-parseInt(t(339))/13))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const F=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(348)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function q(){const e=["constructor","init","172MrWJpX","145648YNhYQv","山峰颜色","SRGBColorSpace","input","addBinding","toString","stateObject","perlinWaveSpeed","网格化",'{}.constructor("return this")( )',"#222","513KCVcsV","6xCOazi","正弦波频率","inline","山谷颜色","51505sVenms","waveAmplitude","小波浪层数","test","__proto__","2255589naFItu","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","action","function *\\( *\\)","return (function() ","log","#310039","gger","540gHhUTG","wireframe","bind","538863NVVDTe","warn","perlinWaveFrequency","#ff6767","BasicShadowMap","正弦波振幅","sinWaveFrequency","table","372290NgbFhz","apply","7060802lAQCvg","perlinWaveAmplitude","colorOffset","1015405LzwSBy","waveC","length","debu","小波浪幅度","info","TresCanvas","while (true) {}","253IotzlU","颜色偏移","perlinWaveIterations","NoToneMapping","sinWaveSpeed","counter","colorDamping","valleyColor","2igMrNi","TresPerspectiveCamera","string","error","chain","call","正弦波速度","trace","exception"];return(q=function(){return e})()}!function(){F(this,(function(){const e=k,n=new RegExp(e(331)),t=new RegExp(e(329),"i"),o=M(e(378));n[e(326)](o+e(372))&&t.test(o+e(383))?M():o("0")}))()}();const T=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[k(348)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function k(e,n){const t=q();return(k=function(e,n){return t[e-=311]})(e,n)}T(void 0,(function(){const e=k,n=function(){const e=k;let n;try{n=Function(e(332)+e(316)+");")()}catch(t){n=window}return n}(),t=n.console=n.console||{},o=[e(333),e(340),e(357),e(371),e(376),e(346),e(375)];for(let r=0;r<o.length;r++){const n=T.constructor.prototype.bind(T),i=o[r],a=t[i]||n;n[e(327)]=T.bind(T),n[e(312)]=a[e(312)][e(338)](a),t[i]=n}}))();const j=a({__name:A(353),setup(e){const o=A,r={clearColor:o(317),shadows:!0,alpha:!1,shadowMapType:t[o(343)],outputColorSpace:t[o(382)],toneMapping:t[o(363)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},a=f({peakColor:o(342),valleyColor:o(334),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),l=new i({title:"参数",expanded:!0});return l[o(311)](a,o(337),{label:o(315)}),l[o(311)](a,"peakColor",{label:o(381)}),l[o(311)](a,o(367),{label:o(322)}),l.addBinding(a,o(351),{label:o(361),min:.01,max:3,step:.01}),l[o(311)](a,o(366),{label:"颜色抑制",min:.01,max:6,step:.01}),l[o(311)](a,o(345),{label:o(320),picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),l[o(311)](a,o(324),{label:o(344),min:0,max:2,step:.01}),l[o(311)](a,o(364),{label:o(374),picker:o(321),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),l.addBinding(a,o(362),{label:o(325),min:1,max:7,step:.1}),l[o(311)](a,o(341),{label:"小波浪频率",min:0,max:5,step:.01}),l[o(311)](a,o(350),{label:o(356),min:0,max:2,step:.01}),l.addBinding(a,o(314),{label:"小波浪速度",min:0,max:2,step:.01}),(e,t)=>{const i=o,l=p(i(358));return u(),g(l,P(r,{"window-size":""}),{default:d((()=>[t[0]||(t[0]=v(i(369),{position:[10,10,10]},null,-1)),m(s(n)),t[1]||(t[1]=v("TresGridHelper",{args:[10,10]},null,-1)),m(b,y(x(a)),null,16)])),_:1},16)}}});function M(e){function n(e){const t=k;if(typeof e===t(370))return function(e){}[t(377)](t(359))[t(348)](t(365));1!==(""+e/e)[t(354)]||e%20==0?function(){return!0}[t(377)]("debugger")[t(373)](t(330)):function(){return!1}[t(377)](t(355)+t(335)).apply(t(313)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{j as default};
