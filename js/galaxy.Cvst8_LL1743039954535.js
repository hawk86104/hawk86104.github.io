import{c4 as n,ar as t,at as e,C as o,a$ as a,c as r}from"./three.XuMWWlrU1743039954535.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.05J-Im0t1743039954535.js";import{d as u,b as f,w as d,e as p,o as m,H as h,j as g,u as v,g as w,N as M,aj as b,ak as C,F as P}from"./@vue.C4dqouNn1743039954535.js";import"./postprocessing.YRVqsIkW1743039954535.js";import"./@vueuse.NzAeD-Dt1743039954535.js";function y(){const n=["apply","2943eagpVq","chain","clone","info","size","a-scale","radius","return (function() ","material","lerp","call","#1b3984","217441FKhLpm","length","stateObject","count","aRandomness","a-randomness","black","input","random","setAttribute","counter",'{}.constructor("return this")( )',"2jjaGpN","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","position","branches","log","outsideColor","toString","constructor","galaxy","string","826324HJgoWf","#b5f28d","forEach","init","__proto__","TresPerspectiveCamera","warn","TresCanvas","value","uniforms","bind","console","6qdWfrT","geometry","TresPoints","uTime","gger","TresBufferGeometry","debu","TresShaderMaterial","12102onAGwp","color","randomnessPower","test","cos","48iNoDEI","insideColor","485995MKZvbJ","trace","1033980sBKMUe","323934zkHVOB","sin"];return(y=function(){return n})()}const x=_;!function(n,t){const e=_,o=y();for(;;)try{if(109403===parseInt(e(241))/1*(-parseInt(e(210))/2)+-parseInt(e(251))/3+parseInt(e(221))/4+parseInt(e(248))/5+-parseInt(e(233))/6*(-parseInt(e(266))/7)+parseInt(e(246))/8*(-parseInt(e(254))/9)+-parseInt(e(250))/10)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(253)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){z(this,(function(){const n=_,t=new RegExp(n(212)),e=new RegExp(n(211),"i"),o=I(n(224));t[n(244)](o+n(255))&&e[n(244)](o+n(205))?I():o("0")}))()}();const j=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(253)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();j(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(261)+n(209)+");")()}catch(e){t=window}return t}(),e=t[n(232)]=t.console||{},o=[n(215),n(227),n(257),"error","exception","table",n(249)];for(let a=0;a<o[n(267)];a++){const t=j[n(218)].prototype[n(231)](j),r=o[a],s=e[r]||t;t[n(225)]=j[n(231)](j),t[n(217)]=s[n(217)].bind(s),e[r]=t}}))();const T=[x(213),x(259),x(242),x(203)];function _(n,t){const e=y();return _=function(n,t){return e[n-=203]},_(n,t)}const A=u({__name:x(219),setup(u){const y=x,z={clearColor:y(204),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:y(222),outsideColor:y(265)},_=new o(j[y(247)]),A=new o(j.outsideColor),I=new Float32Array(3*j.count),S=new Float32Array(3*j[y(269)]),F=new Float32Array(j[y(269)]),k=new Float32Array(3*j[y(269)]);for(let n=0;n<j[y(269)];n++){const t=3*n,e=Math[y(206)]()*j.radius,o=n%j[y(214)]*Math.PI*2/j.branches;I[t]=Math[y(245)](o)*e,I[t+1]=0,I[t+2]=Math.sin(o)*e;const a=Math[y(206)]()**j[y(243)]*(Math[y(206)]()<.5?-1:1),r=Math[y(206)]()**j[y(243)]*(Math[y(206)]()<.5?-1:1),s=Math.random()**j[y(243)]*(Math[y(206)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_[y(256)]();i[y(263)](A,e/j[y(260)]),S[t+0]=i.r,S[t+1]=i.g,S[t+2]=i.b,F[n]=Math[y(206)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[y(258)]}}};const O=f(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=y;O.value&&(O[t(229)][t(262)][t(230)][t(236)][t(229)]=n)}));const{count:K,size:B,radius:G,branches:H,spin:N,randomness:W,randomnessPower:Z,insideColor:$,outsideColor:q}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:y(222),outsideColor:"#1b3984"});return d([K[y(229)],B[y(229)],G[y(229)],H[y(229)],N[y(229)],W[y(229)],Z.value,$.value,q[y(229)]],(n=>{const t=y;n[t(223)](((n,e)=>{const o=t;j[Object.keys(j)[e]]=n[o(229)]})),function(){const n=y;if(O[n(229)]){const t=new o(j[n(247)]),e=new o(j[n(216)]),a=new Float32Array(3*j.count),s=new Float32Array(3*j.count),i=new Float32Array(j[n(269)]),c=new Float32Array(3*j[n(269)]);for(let o=0;o<j[n(269)];o++){const r=3*o,l=Math[n(206)]()*j[n(260)],u=o%j.branches*Math.PI*2/j[n(214)];a[r]=Math[n(245)](u)*l,a[r+1]=0,a[r+2]=Math[n(252)](u)*l;const f=Math[n(206)]()**j[n(243)]*(Math[n(206)]()<.5?-1:1),d=Math[n(206)]()**j[n(243)]*(Math[n(206)]()<.5?-1:1),p=Math[n(206)]()**j[n(243)]*(Math[n(206)]()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=p;const m=t[n(256)]();m[n(263)](e,l/j[n(260)]),s[r+0]=m.r,s[r+1]=m.g,s[r+2]=m.b,i[o]=Math[n(206)]()}O[n(229)][n(234)].setAttribute(n(213),new r(a,3)),O[n(229)][n(234)].setAttribute(n(270),new r(c,3)),O[n(229)][n(234)][n(207)]("color",new r(s,3)),O[n(229)].geometry[n(207)]("aScale",new r(i,1))}}()})),(n,t)=>{const e=y,o=p(e(228));return m(),h(P,null,[g(v(c)),g(o,b(C(z)),{default:w((()=>[t[0]||(t[0]=M(e(226),{position:[3,3,3]},null,-1)),M(e(235),{ref_key:"bufferRef",ref:O},[M(e(238),{position:[v(I),3],"a-scale":[v(F),1],color:[v(S),3],"a-randomness":[v(k),3]},null,8,T),M(e(240),b(C(R)),null,16)],512),g(v(l))])),_:1},16)],64)}}});function I(n){function t(n){const e=_;if(typeof n===e(220))return function(n){}[e(218)]("while (true) {}")[e(253)](e(208));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(e(239)+"gger")[e(264)]("action"):function(){return!1}[e(218)](e(239)+e(237))[e(253)](e(268)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{A as default};
