import{co as o,N as e,_ as s,cj as a}from"./three.BsQcsDwn1757909965456.js";import{a as t}from"./@tresjs.SQYUeS5s1757909965456.js";import{P as i}from"./tweakpane.C0HtAJSg1757909965456.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.B2hvnT7b1757909965456.js";import"./@fesjs.DwhQ5GG81757909965456.js";import"./Resource.BKvoMwnh1757909965456.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.DXxrz-IU1757909965456.js";import"./three-mesh-ui.module.Ca340WMJ1757909965456.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1757909965456.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.vOHh47DT1757909965456.js";import{_ as d,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BdbKdAPx1757909965456.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as x,m as C,a5 as T,F as k}from"./@vue.pEDXJ_3Z1757909965456.js";import"./postprocessing.B119XRU11757909965456.js";import"./@vueuse.CbmzGplN1757909965456.js";import"./vue-router.CEtjFKE_1757909965456.js";import"./lodash-es.C7pWAXPe1757909965456.js";import"./pinia.CFww4I2n1757909965456.js";import"./@qlin.q6OWdsQV1757909965456.js";import"./@babel.BPq7uOAK1757909965456.js";import"./@floating-ui.BFjFSAYt1757909965456.js";import"./@juggle.CcBCnTIR1757909965456.js";import"./starLoading.XZuFzNOu1757909965456.js";import"./utils.BElsmUrO1757909965456.js";import"./cssLoaders.Dx7jrsn81757909965456.js";import"./bubbleLoading.C8dRTJnh1757909965456.js";import"./yangyangLoading.CDdOC7x21757909965456.js";const P={position:[0,120,0]},R=u({__name:"digitalBrainFloor",async setup(u){let R,S;const z=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),G=c({color:"#fff",show:!0,opacity:1}),M=new i({title:"参数"});M.addBinding(G,"show",{label:"点云显示"}),M.addBinding(G,"color",{label:"点云颜色"}),M.addBinding(G,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const q=c({color:"#84ccff",show:!0,opacity:1});M.addBinding(q,"show",{label:"脑轮廓显示"}),M.addBinding(q,"color",{label:"脑轮廓颜色"}),M.addBinding(q,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const F=c({color:"#9e00af",show:!0,opacity:1});M.addBinding(F,"show",{label:"脑组织显示"}),M.addBinding(F,"color",{label:"脑组织颜色"}),M.addBinding(F,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const H=new o,I=([R,S]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",H))),R=await R,S(),R),A=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),E=c({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(k,null,[y(h(l)),y(s,C(A,{"window-size":""}),{default:b((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(E)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[G.show?(g(),L(p,C({key:0,model:h(I)},G),null,16,["model"])):x("",!0),(g(),L(T,null,{default:b((()=>[q.show?(g(),L(d,C({key:0,model:h(I)},q),null,16,["model"])):x("",!0)])),_:1})),F.show?(g(),L(m,C({key:1,model:h(I)},F),null,16,["model"])):x("",!0)]),y(r,w(B(z)),null,16)])),_:1},16)],64)}}});export{R as default};
