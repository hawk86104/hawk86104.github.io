import{_ as e}from"./three.VhLXWX0H1735906732968.js";import{e as n,U as t,b as a}from"./@tresjs.XlmHwCPa1735906732968.js";import{P as o}from"./tweakpane.yHWGBmom1735906732968.js";import{d as r,a4 as i,X as l,e as s,o as u,f as c,g as p,J as f,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.yG49nQHr1735906732968.js";import"./@vueuse.HCIFcVWX1735906732968.js";const x=S;!function(e,n){const t=S,a=w();for(;;)try{if(659771===-parseInt(t(195))/1+parseInt(t(174))/2*(parseInt(t(228))/3)+parseInt(t(180))/4+parseInt(t(207))/5*(-parseInt(t(177))/6)+parseInt(t(215))/7+parseInt(t(166))/8*(parseInt(t(196))/9)+parseInt(t(206))/10*(-parseInt(t(181))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(199)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=S,n=new RegExp(e(183)),t=new RegExp(e(203),"i"),a=_(e(193));n.test(a+"chain")&&t.test(a+e(188))?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[S(199)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(){const e=["5578300WpQmGW","pointsEarth","addBinding","#122148","SRGBColorSpace","info","log","color","海浪高度","change","exception","addFolder","TresCanvas","227364wFfURA","length","stateObject","gger","968PypmCT","console","wireframeMaterialRef","call","counter","groupRef","TresMesh","table","8gZUWpE","warn","action","30bIsWia","size","#17c5a9","2001128UVGfXp","58872xoilkK","prototype","function *\\( *\\)","#080820","TresPoints","海浪变化速度","string","input","constructor","rotation","debu","value","init","uWaveSpeed","879017KaLNcL","9855byKQvn","uWaveHeight","Debug","apply","uniforms","uTime","bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","error","trace","180jEdtBN","97705rUEVFq","TresIcosahedronGeometry","FrontSide","return (function() ","TresPerspectiveCamera","粒子大小","#ffffff","toString"];return(w=function(){return e})()}function S(e,n){const t=w();return(S=function(e,n){return t[e-=164]})(e,n)}T(void 0,(function(){const e=S;let n;try{n=Function(e(210)+'{}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(167)]=n[e(167)]||{},a=[e(221),e(175),e(220),e(204),e(225),e(173),e(205)];for(let r=0;r<a[e(229)];r++){const n=T[e(189)][e(182)][e(202)](T),o=a[r],i=t[o]||n;n.__proto__=T[e(202)](T),n[e(214)]=i[e(214)][e(202)](i),t[o]=n}}))();const b=r({__name:x(216),async setup(r){const y=x;let T,w;const S={color:y(179),pointSize:4},b={clearColor:y(218),shadows:!1,alpha:!1,outputColorSpace:e[y(219)]},_={color:S[y(222)],wireframe:!0,transparent:!0,opacity:.2},z=([T,w]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),E=z[0],j=z[1],P=z[2],D=z[3],I=z[4],U={uniforms:{size:{type:"f",value:S.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:E},starTexture:{type:"t",value:j}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(209)]},W=l(),k=l(),A=(new o)[y(226)]({title:y(198)});A[y(217)](S,"color",{type:"color"}).on(y(224),(({value:e})=>{const n=y;k[n(192)][n(222)].set(e)})),A[y(217)](U[y(200)][y(178)],y(192),{min:.1,max:10,step:.1,label:y(212)}),A[y(217)](U[y(200)][y(197)],y(192),{min:.01,max:.5,step:.01,label:y(223)}),A[y(217)](U.uniforms[y(194)],y(192),{min:.01,max:1,step:.01,label:y(186)});const{onLoop:C}=n();return C((({delta:e})=>{const n=y;W[n(192)]&&(W[n(192)][n(190)].y+=.002,U.uniforms[n(201)].value+=10*e)})),(e,n)=>{const a=y,o=s(a(227));return u(),c(o,d(b,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=f(a(211),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),f("TresGroup",{ref_key:a(171),ref:W},[f(a(172),null,[n[0]||(n[0]=f(a(208),{args:[1,4]},null,-1)),f("TresMeshBasicMaterial",d({ref_key:a(168),ref:k},_),null,16)]),f(a(185),null,[n[1]||(n[1]=f(a(208),{args:[1,128]},null,-1)),f("TresShaderMaterial",h(g(U)),null,16)])],512),n[3]||(n[3]=f("TresHemisphereLight",{args:[a(213),a(184),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=S;if(typeof e===t(187))return function(e){}[t(189)]("while (true) {}")[t(199)](t(170));1!==(""+e/e).length||e%20==0?function(){return!0}[t(189)](t(191)+t(165))[t(169)](t(176)):function(){return!1}[t(189)](t(191)+t(165))[t(199)](t(164)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
