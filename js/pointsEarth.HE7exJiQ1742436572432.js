import{_ as e}from"./three.RUAk_tvU1742436572432.js";import{e as n,o as t,a}from"./@tresjs.Uh9iM8du1742436572432.js";import{P as o}from"./tweakpane.yDiyAAkA1742436572432.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as f,N as v,j as p,u as m,m as d,aj as h,ak as g}from"./@vue.deO5D3Lf1742436572432.js";import"./postprocessing.5QD_59xS1742436572432.js";import"./@vueuse.F4UpVCIS1742436572432.js";function x(){const e=["#122148","set","value","#ffffff","Debug","bind","toString","pointSize","3lstAIR","addBinding","1124722bzVJSv","TresIcosahedronGeometry","海浪高度","function *\\( *\\)","uWaveHeight","3157170OEdNhq","call","warn","3279906YovJZi","test","return (function() ","counter","constructor","TresShaderMaterial","string","TresHemisphereLight","粒子大小","32LeQINd","gger","990108rhRisN","125iATThb","TresPerspectiveCamera","table","__proto__","apply","1386765yLJvjE","size","while (true) {}","TresMesh","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","wireframeMaterialRef","#080820","66224HcKGpJ","pointsEarth","change","exception","color","action","debu","287349OTccUI","uTime","init","length","error","TresPoints","海浪变化速度","input","FrontSide","SRGBColorSpace","console","log",'{}.constructor("return this")( )',"stateObject","uniforms"];return(x=function(){return e})()}const y=T;function T(e,n){const t=x();return(T=function(e,n){return t[e-=145]})(e,n)}!function(e,n){const t=T,a=x();for(;;)try{if(293303===parseInt(t(201))/1+parseInt(t(162))/2*(parseInt(t(160))/3)+-parseInt(t(194))/4*(parseInt(t(182))/5)+-parseInt(t(170))/6+parseInt(t(181))/7*(parseInt(t(179))/8)+parseInt(t(187))/9+-parseInt(t(167))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(186)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){S(this,(function(){const e=T,n=new RegExp(e(165)),t=new RegExp(e(191),"i"),a=b(e(203));n[e(171)](a+"chain")&&t.test(a+e(208))?b():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(186)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();w(void 0,(function(){const e=T,n=function(){const e=T;let n;try{n=Function(e(172)+e(149)+");")()}catch(t){n=window}return n}(),t=n[e(147)]=n[e(147)]||{},a=[e(148),e(169),"info",e(205),e(197),e(184),"trace"];for(let o=0;o<a[e(204)];o++){const n=w.constructor.prototype[e(157)](w),r=a[o],i=t[r]||n;n[e(185)]=w[e(157)](w),n[e(158)]=i[e(158)][e(157)](i),t[r]=n}}))();const _=r({__name:y(195),async setup(r){const x=y;let T,S;const w={color:"#17c5a9",pointSize:4},_={clearColor:x(152),shadows:!1,alpha:!1,outputColorSpace:e[x(146)]},b={color:w[x(198)],wireframe:!0,transparent:!0,opacity:.2},z=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),j=z[0],E=z[1],P=z[2],I=z[3],D=z[4],A={uniforms:{size:{type:"f",value:w[x(159)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:D},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[x(145)]},k=l(),C=l(),R=(new o).addFolder({title:x(156)});R[x(161)](w,"color",{type:"color"}).on(x(196),(({value:e})=>{const n=x;C[n(154)][n(198)][n(153)](e)})),R[x(161)](A.uniforms[x(188)],x(154),{min:.1,max:10,step:.1,label:x(178)}),R[x(161)](A[x(151)][x(166)],"value",{min:.01,max:.5,step:.01,label:x(164)}),R[x(161)](A.uniforms.uWaveSpeed,x(154),{min:.01,max:1,step:.01,label:x(207)});const{onLoop:U}=n();return U((({delta:e})=>{const n=x;k[n(154)]&&(k[n(154)].rotation.y+=.002,A.uniforms[n(202)][n(154)]+=10*e)})),(e,n)=>{const a=x,o=s("TresCanvas");return u(),c(o,d(_,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v(a(183),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),p(m(t),{autoRotate:!0,autoRotateSpeed:2}),v("TresGroup",{ref_key:"groupRef",ref:k},[v(a(190),null,[n[0]||(n[0]=v("TresIcosahedronGeometry",{args:[1,4]},null,-1)),v("TresMeshBasicMaterial",d({ref_key:a(192),ref:C},b),null,16)]),v(a(206),null,[n[1]||(n[1]=v(a(163),{args:[1,128]},null,-1)),v(a(175),h(g(A)),null,16)])],512),n[3]||(n[3]=v(a(177),{args:[a(155),a(193),3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=T;if(typeof e===t(176))return function(e){}[t(174)](t(189))[t(186)](t(173));1!==(""+e/e)[t(204)]||e%20==0?function(){return!0}[t(174)](t(200)+t(180))[t(168)](t(199)):function(){return!1}[t(174)](t(200)+t(180))[t(186)](t(150)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
