import{u as t,_ as n,a as o}from"./mergeTres.cDGQA6CX1735275234726.js";import{l as r}from"./utils.kAQQYNep1735275234726.js";import{e}from"./@tresjs.fCqPNEAw1735275234726.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.u2cBPEWn1735275234726.js";import{_ as C}from"./@fesjs.Okr_vpx41735275234726.js";import"./@amap.Ndko9EDY1735275234726.js";import"./pinia.BXllYoho1735275234726.js";import"./vue-demi.C4xddsk91735275234726.js";import"./three.jpi2UCEx1735275234726.js";import"./three-mesh-bvh.4sDkzARF1735275234726.js";import"./@vueuse.8jEBPPFT1735275234726.js";import"./vue-router.bq4JfoTS1735275234726.js";import"./lodash-es.guXTxyfJ1735275234726.js";import"./@qlin.yHhFDldE1735275234726.js";import"./@floating-ui.BPbuo5Gx1735275234726.js";import"./@juggle.7yjBMqoW1735275234726.js";const y=b;!function(t,n){const o=b,r=j();for(;;)try{if(893075===parseInt(o(301))/1+-parseInt(o(330))/2*(-parseInt(o(287))/3)+-parseInt(o(325))/4*(-parseInt(o(323))/5)+parseInt(o(316))/6*(parseInt(o(297))/7)+-parseInt(o(324))/8*(parseInt(o(288))/9)+parseInt(o(300))/10*(-parseInt(o(309))/11)+-parseInt(o(335))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(319)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=b,n=new RegExp(t(344)),o=new RegExp(t(311),"i"),r=z(t(343));n[t(338)](r+"chain")&&o[t(338)](r+t(299))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(319)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(t,n){const o=j();return(b=function(t,n){return o[t-=286]})(t,n)}w(void 0,(function(){const t=b;let n;try{n=Function(t(332)+t(313)+");")()}catch(e){n=window}const o=n[t(310)]=n.console||{},r=[t(336),t(308),"info",t(315),t(317),t(302),t(294)];for(let a=0;a<r.length;a++){const n=w[t(350)].prototype.bind(w),e=r[a],i=o[e]||n;n[t(295)]=w[t(347)](w),n[t(298)]=i[t(298)][t(347)](i),o[e]=n}}))();const I=[y(339),y(346),y(337)],S=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=b;for(let r=0;r<t[n(340)];r+=3){const e=[t[r],t[r+1]],a=o[n(341)][n(303)][n(290)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[b(342)]&&(async()=>{const t=b,n=await r(t(349),t(327));for(let o=0;o<n[t(340)];o++){const r=n[o];a(r[t(331)]);const e=new Float32Array(r[t(331)]),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(331)][t(340)]);d[t(318)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;o[t(342)]&&(g.uniforms[t(304)][t(307)]=o.mapHandle[t(314)](),g[t(334)][t(296)][t(307)]=o[t(342)][t(293)],g[t(334)][t(348)][t(307)]=o.cameraState[t(326)])})),(t,n)=>{const o=b;return c(),s(o(321),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(322),{key:""+n},[p(r(291),{ref_for:!0,ref:r(328),position:[t.positionArray,3],faceUv:[t[r(292)],2],normal:[t.normalArray,3]},null,8,I),p(r(286),v({ref_for:!0},g),null,16)])})),128))])}}});function j(){const t=["atan","TresGroup","TresMesh","2280465zpXEFA","2456eOObxu","4zeBJAE","far","buildings","tbgRef","counter","163978ENNFFs","geometry","return (function() ","gger","uniforms","8945676EmtLZR","log","normal","test","position","length","mapHandle","cameraState","init","function *\\( *\\)","action","faceUv","bind","u_far","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","constructor","TresShaderMaterial","3ZArAaB","14922mZlLmw","debu","lngLatToCoord","TresBufferGeometry","uvArray","near","trace","__proto__","u_near","116669IUtnPp","toString","input","3853630ziXFvQ","794811vQoIeC","table","customCoords","u_zoom","string","while (true) {}","value","warn","11yOxBEN","console","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","exp",'{}.constructor("return this")( )',"getZoom","error","432viluVy","exception","push","apply"];return(j=function(){return t})()}function z(t){function n(t){const o=b;if(typeof t===o(305))return function(t){}.constructor(o(306))[o(319)](o(329));1!==(""+t/t)[o(340)]||t%20==0?function(){return!0}.constructor("debu"+o(333)).call(o(345)):function(){return!1}[o(350)](o(289)+o(333))[o(319)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=R;!function(t,n){const o=R,r=U();for(;;)try{if(203455===parseInt(o(397))/1+-parseInt(o(399))/2+parseInt(o(408))/3+parseInt(o(383))/4+-parseInt(o(398))/5+-parseInt(o(379))/6*(parseInt(o(380))/7)+-parseInt(o(409))/8*(-parseInt(o(376))/9))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(391)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=R,n=new RegExp(t(403)),o=new RegExp(t(388),"i"),r=E(t(416));n[t(410)](r+t(382))&&o[t(410)](r+"input")?E():r("0")}))()}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[R(391)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function R(t,n){const o=U();return(R=function(t,n){return o[t-=376]})(t,n)}function U(){const t=["warn","function *\\( *\\)","TresCanvas","info","darkblue","toString","30207XMHJrq","16Worvgq","test","stateObject","tcRef","error","debu","__proto__","init","2028528QMiHJk","buildings","trace","2106sRaqOX","35qUAQKe",'{}.constructor("return this")( )',"chain","141380kWtrEE","string","gger","return (function() ","constructor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","TresPerspectiveCamera","apply","tresCanvas","exception","console","while (true) {}","counter","54543JMInDV","857875dmTdvz","347912ZqMPdU","table","manual"];return(U=function(){return t})()}P(void 0,(function(){const t=R;let n;try{n=Function(t(386)+t(381)+");")()}catch(e){n=window}const o=n[t(394)]=n.console||{},r=["log",t(402),t(405),t(413),t(393),t(400),t(378)];for(let a=0;a<r.length;a++){const n=P[t(387)].prototype[t(389)](P),e=r[a],i=o[e]||n;n[t(415)]=P[t(389)](P),n.toString=i[t(407)][t(389)](i),o[e]=n}}))();function E(t){function n(t){const o=R;if(typeof t===o(384))return function(t){}[o(387)](o(395))[o(391)](o(396));1!==(""+t/t).length||t%20==0?function(){return!0}[o(387)](o(414)+o(385)).call("action"):function(){return!1}.constructor(o(414)+"gger").apply(o(411)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=C(a({__name:A(377),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(401)});return(t,i)=>{const l=r,f=d(l(404));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(406)}),g(f,v({id:l(392),ref:l(412)},a),{default:m((()=>[i[0]||(i[0]=p(l(390),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p("TresAmbientLight",{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
