import{a1 as d,l as u,ad as r,w as h,r as f,o as g,x as m,E as l,a8 as T,a3 as M,a4 as C,a5 as w,Y as e,a,L as s,am as i,aZ as x,a$ as v,ap as y,ac as B}from"./vendor.Bhln4awG1717067357907.js";const R=e("TresPerspectiveCamera",{position:[3,3,3]},null,-1),S={"position-x":3},k=e("TresTorusKnotGeometry",{args:[1,.4,256,20]},null,-1),G={position:[0,0,-1]},b=e("TresPlaneGeometry",{args:[3,3]},null,-1),D=["side"],L=e("TresGridHelper",{args:[10,10]},null,-1),N=e("TresAmbientLight",{intensity:1},null,-1),P=e("TresDirectionalLight",{intensity:1,position:[2,2,2]},null,-1),E=d({__name:"glassMaterial",setup(V){const c={clearColor:"#82DBC5",shadows:!0,alpha:!1,shadowMapType:M,outputColorSpace:C,toneMapping:w},_=u(),t=r(),o=r();return h(t,n=>{o.value.value.material.dispose(),o.value.value.material=n.MeshGlassMaterialClass}),(n,z)=>{const p=f("TresCanvas");return g(),m(p,T(c,{ref_key:"context",ref:_,"window-size":""}),{default:l(()=>[R,e("TresMesh",S,[k,a(s(i),{ref_key:"glassMaterialRef",ref:t},null,512)]),a(s(x),{scale:.5},{default:l(()=>[a(s(i))]),_:1}),a(s(v),{ref_key:"boxRef",ref:o,"position-x":-3},null,512),e("TresMesh",G,[b,e("TresMeshBasicMaterial",{side:s(y),color:16716049},null,8,D)]),L,N,P,a(s(B))]),_:1},16)}}});export{E as default};
