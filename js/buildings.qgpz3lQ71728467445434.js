import{u as t,_ as o,a as n}from"./mergeTres.H_xgt_bA1728467445434.js";import{l as r}from"./utils.vBDEvGnt1728467445434.js";import{U as e}from"./@tresjs.ED4ePb8T1728467445434.js";import{d as a,r as i,a3 as l,o as c,E as s,F as u,W as f,L as p,m as v,e as d,j as m,g,f as h,al as _,am as y,an as C}from"./@vue.JNsx1iN61728467445434.js";import{_ as w}from"./@fesjs.BZc1KM0D1728467445434.js";import"./@amap.lDXqmBX01728467445434.js";import"./pinia.Y0XmpKlm1728467445434.js";import"./three.5octV-9b1728467445434.js";import"./three-mesh-bvh.tsDD7Nj61728467445434.js";import"./@vueuse.G8I04tzi1728467445434.js";import"./vue-router.2EyA_Lnc1728467445434.js";import"./lodash-es.kYt-_xTG1728467445434.js";import"./@qlin.yHhFDldE1728467445434.js";import"./@floating-ui.BPbuo5Gx1728467445434.js";import"./@juggle.7yjBMqoW1728467445434.js";const x=b;function b(t,o){const n=I();return(b=function(t,o){return n[t-=254]})(t,o)}function I(){const t=["24uDbEso","positionArray","1456115QVwRRw","action","buildingModels","4666937RpywRN","while (true) {}","init","u_far","lngLatToCoord",'{}.constructor("return this")( )',"far","trace","input","customCoords","warn","return (function() ","test","mapHandle","buildings","gger","bind","error","constructor","info","cameraState","TresMesh","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","93TlVPME","value","stateObject","normalArray","length","getZoom","toString","__proto__","function *\\( *\\)","table","uniforms","prototype","3148920hZbJIP","console","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","exp","48woIiJH","267575Yvyvac","TresBufferGeometry","8236jDajdE","u_near","geometry","TresShaderMaterial","position","near","apply","debu","212292mMPbXO","exception","TresGroup","faceUv","atan","502TyVjSD","log","2kWrcdm"];return(I=function(){return t})()}!function(t,o){const n=b,r=I();for(;;)try{if(229893===-parseInt(n(285))/1*(-parseInt(n(283))/2)+parseInt(n(314))/3*(parseInt(n(270))/4)+parseInt(n(288))/5+parseInt(n(267))/6*(-parseInt(n(268))/7)+-parseInt(n(286))/8*(-parseInt(n(278))/9)+-parseInt(n(262))/10+parseInt(n(291))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const S=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(276)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){S(this,(function(){const t=b,o=new RegExp(t(258)),n=new RegExp(t(265),"i"),r=R(t(293));o[t(303)](r+"chain")&&n[t(303)](r+t(299))?R():r("0")}))()}();const j=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();j(void 0,(function(){const t=b;let o;try{o=Function(t(302)+t(296)+");")()}catch(e){o=window}const n=o.console=o[t(263)]||{},r=[t(284),t(301),t(310),t(308),t(279),t(259),t(298)];for(let a=0;a<r[t(254)];a++){const o=j[t(309)][t(261)].bind(j),e=r[a],i=n[e]||o;o[t(257)]=j[t(307)](j),o[t(256)]=i[t(256)][t(307)](i),n[e]=o}}))();const z=[x(274),x(281),"normal"],P=a({__name:x(290),setup(o){const n=t(),a=t=>{const o=b;for(let r=0;r<t[o(254)];r+=3){const e=[t[r],t[r+1]],a=n[o(304)].customCoords[o(295)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),m={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n.cameraState&&(async()=>{const t=b,o=await r(t(313),t(305));for(let n=0;n<o[t(254)];n++){const r=o[n];a(r[t(272)]);const e=new Float32Array(r[t(272)]),i=new Float32Array(r[t(281)]),l=new Float32Array(r[t(272)][t(254)]);d.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:g}=e();return g((()=>{const t=b;n.cameraState&&(m.uniforms.u_zoom[t(315)]=n[t(304)][t(255)](),m.uniforms[t(271)][t(315)]=n[t(311)][t(275)],m[t(260)][t(294)][t(315)]=n[t(311)][t(297)])})),(t,o)=>{const n=b;return c(),s(n(280),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(312),{key:""+o},[p(r(269),{ref_for:!0,ref:"tbgRef",position:[t[r(287)],3],faceUv:[t.uvArray,2],normal:[t[r(317)],3]},null,8,z),p(r(273),v({ref_for:!0},m),null,16)])})),128))])}}});function R(t){function o(t){const n=b;if("string"==typeof t)return function(t){}[n(309)](n(292))[n(276)]("counter");1!==(""+t/t)[n(254)]||t%20==0?function(){return!0}[n(309)](n(277)+n(306))[n(264)](n(289)):function(){return!1}[n(309)]("debugger")[n(276)](n(316)),o(++t)}try{if(t)return o;o(0)}catch(n){}}function A(){const t=["test","__proto__","gger","6173176VQUwSE","5SbqHQO","debu","log","toString","4wHxqmw","chain","return (function() ","warn","6011215kxESAI","prototype","144400xkuwQC","table","TresAmbientLight","length","call","3783894LkLfYs","string","manual","bind","data-v-f2059998",'{}.constructor("return this")( )',"apply","stateObject","console","input","while (true) {}","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresCanvas","exception","init","tresCanvas","1910056sjqbkz","976077yzZsih","20333889xfPXTl"];return(A=function(){return t})()}const E=k;!function(t,o){const n=k,r=A();for(;;)try{if(439235===parseInt(n(478))/1*(parseInt(n(484))/2)+-parseInt(n(506))/3+parseInt(n(505))/4*(parseInt(n(512))/5)+-parseInt(n(489))/6+-parseInt(n(482))/7+-parseInt(n(511))/8+parseInt(n(507))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[k(495)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=k,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(500),"i"),r=T(t(503));o[t(508)](r+t(479))&&n[t(508)](r+t(498))?T():r("0")}))()}();const U=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[k(495)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function k(t,o){const n=A();return(k=function(t,o){return n[t-=478]})(t,o)}U(void 0,(function(){const t=k,o=function(){const t=k;let o;try{o=Function(t(480)+t(494)+");")()}catch(n){o=window}return o}(),n=o[t(497)]=o.console||{},r=[t(514),t(481),"info","error",t(502),t(485),"trace"];for(let e=0;e<r[t(487)];e++){const o=U.constructor[t(483)][t(492)](U),a=r[e],i=n[a]||o;o[t(509)]=U.bind(U),o[t(515)]=i[t(515)][t(492)](i),n[a]=o}}))();const L=t=>(y(E(493)),t=t(),C(),t),M=L((()=>p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1))),D=L((()=>p(E(486),{intensity:.5},null,-1)));function T(t){function o(t){const n=k;if(typeof t===n(490))return function(t){}.constructor(n(499)).apply("counter");1!==(""+t/t)[n(487)]||t%20==0?function(){return!0}.constructor(n(513)+n(510))[n(488)]("action"):function(){return!1}.constructor(n(513)+n(510))[n(495)](n(496)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const W=w(a({__name:"buildings",setup(t){const r=E,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(491)});return(t,i)=>{const l=r,f=d(l(501));return c(),s(u,null,[m(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),m(f,v({id:l(504),ref:"tcRef"},a),{default:g((()=>[M,D,m(n,{center:e}),(c(),h(_,null,{default:g((()=>[m(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{W as default};
