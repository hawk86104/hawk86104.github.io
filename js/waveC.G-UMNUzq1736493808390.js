import{e,U as n}from"./@tresjs.g7tJPOCI1736493808390.js";import{_ as t,k as o,c0 as r}from"./three.lAfZYOpc1736493808390.js";import{P as i}from"./tweakpane.yHWGBmom1736493808390.js";import{d as a,w as l,o as u,D as c,J as s,u as v,r as f,e as p,f as g,g as y,j as d,aj as m,ak as x,m as P}from"./@vue.-Mz_IXfk1736493808390.js";import"./@vueuse.kU-N6GoC1736493808390.js";const z=I;function W(){const e=["uPerlinWaveSpeed","valleyColor","call","uSinWaveSpeed","sinWaveFrequency","wireframe","Vector2","exception","vertexShader","TresMesh","chain","uValleyColor","304932guKyxo","uTime","127940vDJVbM","log","5006NEkDCY","action","204405ifMFBg","value","warn","uColorDamping","counter","uPeakColor","error","waveAmplitude","debu","uColorOffset","651225aRXeCp","perlinWaveAmplitude","uPerlinWaveFrequency","prototype","set","37eERUCz","fragmentShader","perlinWaveSpeed","43631PhODLy","apply","colorDamping","DoubleSide","1443632orSKaO","function *\\( *\\)","peakColor","#b367ff","setStyle","perlinWaveFrequency","info","sinWaveSpeed","perlinWaveIterations","test","constructor","toString","trace","uPerlinWaveIterations","console","colorOffset","string","uSinWaveFrequency","__proto__","Color","table",'{}.constructor("return this")( )',"init","gger","9bPlQrH","#184650","side","while (true) {}","bind","60hOAmyd","length"];return(W=function(){return e})()}!function(e,n){const t=I,o=W();for(;;)try{if(110660===parseInt(t(342))/1*(-parseInt(t(325))/2)+parseInt(t(337))/3+parseInt(t(321))/4+parseInt(t(327))/5+-parseInt(t(378))/6*(-parseInt(t(345))/7)+-parseInt(t(349))/8+-parseInt(t(373))/9*(parseInt(t(323))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[I(346)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){S(this,(function(){const e=I,n=new RegExp(e(350)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=b(e(371));n[e(358)](o+e(319))&&t.test(o+"input")?b():o("0")}))()}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[I(346)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();w(void 0,(function(){const e=I,n=function(){const e=I;let n;try{n=Function("return (function() "+e(370)+");")()}catch(t){n=window}return n}(),t=n.console=n[e(363)]||{},o=[e(324),e(329),e(355),e(333),e(316),e(369),e(361)];for(let r=0;r<o.length;r++){const n=w.constructor[e(340)][e(377)](w),i=o[r],a=t[i]||n;n[e(367)]=w[e(377)](w),n[e(360)]=a[e(360)][e(377)](a),t[i]=n}}))();const C=["rotation-x"],h=[z(375),z(317),z(343),z(314)];function I(e,n){const t=W();return(I=function(e,n){return t[e-=312]})(e,n)}const _=a({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:z(352)},valleyColor:{default:z(374)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,i=n,a={uTime:{value:0},uPeakColor:{value:new(t[r(368)])(i.peakColor)},uValleyColor:{value:new(t[r(368)])(i.valleyColor)},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i[r(347)]},uSinWaveFrequency:{value:new o(i[r(313)].x,i[r(313)].y)},uWaveAmplitude:{value:i[r(334)]},uSinWaveSpeed:{value:new(t[r(315)])(i[r(356)].x,i[r(356)].y)},uPerlinWaveIterations:{value:i[r(357)]},uPerlinWaveFrequency:{value:i[r(354)]},uPerlinWaveAmplitude:{value:i[r(338)]},uPerlinWaveSpeed:{value:i.perlinWaveSpeed}},{onLoop:f}=e();return f((({elapsed:e})=>{const n=r;a[n(322)][n(328)]=e})),l((()=>i),(()=>{const e=r;a[e(332)][e(328)].setStyle(i[e(351)]),a[e(320)][e(328)][e(353)](i[e(381)]),a[e(336)].value=i[e(364)],a[e(330)].value=i[e(347)],a[e(366)][e(328)][e(341)](i[e(313)].x,i.sinWaveFrequency.y),a.uWaveAmplitude[e(328)]=i[e(334)],a[e(312)].value[e(341)](i[e(356)].x,i[e(356)].y),a[e(362)][e(328)]=i.perlinWaveIterations,a[e(339)][e(328)]=i[e(354)],a.uPerlinWaveAmplitude.value=i[e(338)],a[e(380)][e(328)]=i[e(344)]}),{deep:!0}),(e,n)=>{const o=r;return u(),c(o(318),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=s("TresPlaneGeometry",{args:[10,10,512,512]},null,-1)),s("TresShaderMaterial",{side:t[o(348)],vertexShader:v("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:v("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[o(314)]},null,8,h)],8,C)}}});function b(e){function n(e){const t=I;if(typeof e===t(365))return function(e){}[t(359)](t(376)).apply(t(331));1!==(""+e/e)[t(379)]||e%20==0?function(){return!0}.constructor(t(335)+t(372))[t(382)](t(326)):function(){return!1}[t(359)](t(335)+t(372)).apply("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}!function(e,n){const t=F,o=q();for(;;)try{if(548188===-parseInt(t(256))/1+-parseInt(t(244))/2+parseInt(t(235))/3*(parseInt(t(236))/4)+parseInt(t(245))/5*(parseInt(t(234))/6)+-parseInt(t(218))/7*(-parseInt(t(225))/8)+-parseInt(t(217))/9*(parseInt(t(214))/10)+-parseInt(t(251))/11*(-parseInt(t(237))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(224)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){k(this,(function(){const e=F,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(220),"i"),o=j(e(227));n[e(210)](o+e(201))&&t.test(o+e(229))?j():o("0")}))()}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(224)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(e,n){const t=q();return(F=function(e,n){return t[e-=200]})(e,n)}function q(){const e=["333WcfqvB","203pSndoG","action","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","warn","山谷颜色","#ff6767","apply","104984JBnNTN","return (function() ","init","小波浪速度","input","info","sinWaveFrequency","length","gger","1128kWTxBf","66159ljVFtB","116NshUdB","854772wAkupe","perlinWaveSpeed","call","SRGBColorSpace","exception","小波浪幅度","小波浪频率","469216GpUUgI","17885IEnPIu","perlinWaveIterations","TresPerspectiveCamera","while (true) {}","table","正弦波频率","99jtcehY","counter","debu","小波浪层数","perlinWaveFrequency","851082PnRkSK","toString","log","colorOffset","wireframe","peakColor","trace","chain","网格化","#310039","inline","addBinding","__proto__","console","山峰颜色","TresGridHelper","test","waveAmplitude","正弦波振幅","constructor","189130kVEGQU","prototype","NoToneMapping"];return(q=function(){return e})()}A(void 0,(function(){const e=F,n=function(){const e=F;let n;try{n=Function(e(226)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(207)]=n[e(207)]||{},o=[e(258),e(221),e(230),"error",e(241),e(249),e(200)];for(let r=0;r<o[e(232)];r++){const n=A[e(213)][e(215)].bind(A),i=o[r],a=t[i]||n;n[e(206)]=A.bind(A),n[e(257)]=a[e(257)].bind(a),t[i]=n}}))();const T=a({__name:"waveC",setup(e){const o=F,a={clearColor:"#222",shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:t[o(240)],toneMapping:t[o(216)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:o(223),valleyColor:o(203),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c[o(205)](l,o(260),{label:o(202)}),c[o(205)](l,o(261),{label:o(208)}),c[o(205)](l,"valleyColor",{label:o(222)}),c[o(205)](l,o(259),{label:"颜色偏移",min:.01,max:3,step:.01}),c[o(205)](l,"colorDamping",{label:"颜色抑制",min:.01,max:6,step:.01}),c[o(205)](l,o(231),{label:o(250),picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c[o(205)](l,o(211),{label:o(212),min:0,max:2,step:.01}),c[o(205)](l,"sinWaveSpeed",{label:"正弦波速度",picker:o(204),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c.addBinding(l,o(246),{label:o(254),min:1,max:7,step:.1}),c[o(205)](l,o(255),{label:o(243),min:0,max:5,step:.01}),c[o(205)](l,"perlinWaveAmplitude",{label:o(242),min:0,max:2,step:.01}),c.addBinding(l,o(238),{label:o(228),min:0,max:2,step:.01}),(e,t)=>{const r=o,i=p("TresCanvas");return u(),g(i,P(a,{"window-size":""}),{default:y((()=>[t[0]||(t[0]=s(r(247),{position:[10,10,10]},null,-1)),d(v(n)),t[1]||(t[1]=s(r(209),{args:[10,10]},null,-1)),d(_,m(x(l)),null,16)])),_:1},16)}}});function j(e){function n(e){const t=F;if("string"==typeof e)return function(e){}[t(213)](t(248))[t(224)](t(252));1!==(""+e/e)[t(232)]||e%20==0?function(){return!0}[t(213)](t(253)+t(233))[t(239)](t(219)):function(){return!1}.constructor(t(253)+"gger")[t(224)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{T as default};
