import{a1 as m,a2 as d,aq as p,r as c,o,x as s,E as n,a as t,L as i,ac as _,a$ as g,ag as f,aa as u,ab as h,Y as a}from"./vendor.wxHBbIdo1713352787897.js";import{_ as x}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.wvcQWR4z1713352787897.js";import"./ReflectorMaterial.7XWctrDC1713352787897.js";import"./dither.glsl.y2WXw1t-1713352787897.js";import"./Reflector.MG2myN1M1713352787897.js";import"./OimoPhysicsBuffer.b5DejoFC1713352787897.js";const v=a("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),B=a("TresAmbientLight",{intensity:10},null,-1),C=a("TresMesh",{position:[0,2,-4]},[a("TresBoxGeometry",{args:[1,1,1]}),a("TresMeshNormalMaterial")],-1),N=m({__name:"reflectorShader",setup(b){const e=d({reflectivity:.49,mirror:.25,mixStrength:26,showGridHelper:!0}),r=new p({title:"镜面参数",expanded:!0});return r.addBinding(e,"reflectivity",{label:"反射率",min:.01,max:1,step:.01}),r.addBinding(e,"mirror",{label:"镜面化",min:0,max:1,step:.01}),r.addBinding(e,"mixStrength",{label:"混合",min:0,max:100,step:1}),r.addBinding(e,"showGridHelper",{label:"显示网格"}),(T,w)=>{const l=c("TresCanvas");return o(),s(l,{clearColor:"#201919","window-size":""},{default:n(()=>[v,t(i(_),{enableDamping:""}),B,t(i(g),{args:[1,1,1],color:"orange",position:[3,1,0]}),C,(o(),s(f,null,{default:n(()=>[t(x,u(h(e)),null,16)]),_:1}))]),_:1})}}});export{N as default};
