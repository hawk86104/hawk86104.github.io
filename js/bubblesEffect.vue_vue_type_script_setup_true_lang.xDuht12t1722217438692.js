import{a6 as n,Z as t,bV as e,C as o,h as i,aB as r}from"./three.ej3u8izI1722217438692.js";import{p as a,$ as l,N as s}from"./@tresjs.vs5lCFs11722217438692.js";import{d as u,b as c,a4 as f,a1 as p,o as m,D as g,J as b,aj as v,ak as y,u as d}from"./@vue.Q1VpS3901722217438692.js";function h(n,t){const e=z();return(h=function(n,t){return e[n-=339]})(n,t)}const w=h;!function(n,t){const e=h,o=z();for(;;)try{if(153417===-parseInt(e(371))/1*(parseInt(e(360))/2)+parseInt(e(394))/3+-parseInt(e(385))/4*(-parseInt(e(383))/5)+parseInt(e(344))/6+parseInt(e(359))/7+parseInt(e(368))/8*(parseInt(e(375))/9)+parseInt(e(347))/10*(-parseInt(e(389))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["init","info","error","exception","counter","uTime","string","1434307lwhWFm","2JfCgpk","uOpacity","glowColor","log","geometry","#84ccff","TresMeshRef","uniforms","35592MKdyoQ","dispose","table","260929TIFqen","return (function() ","Mesh","console","9BrnAzk","position","action",'{}.constructor("return this")( )',"AdditiveBlending","color","opacity","gger","50PQMMVP","sin","99536seaXuT","model","apply","warn","11crwCnT","toString","debu","test","function *\\( *\\)","684084MxnOXw","push","TresBufferGeometry","length","chain","bind","value","constructor","18354CNVOlD","TresShaderMaterial","Color","2749310ZiZzyA","while (true) {}","input","verticesNeedUpdate","map"];return(z=function(){return n})()}!function(){_(this,(function(){const n=h,t=new RegExp(n(393)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=C(n(352));t.test(o+n(340))&&e[n(392)](o+n(349))?C():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(387)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();x(void 0,(function(){const n=h;let t;try{t=Function(n(372)+n(378)+");")()}catch(i){t=window}const e=t[n(374)]=t.console||{},o=[n(363),n(388),n(353),n(354),n(355),n(370),"trace"];for(let r=0;r<o[n(339)];r++){const t=x[n(343)].prototype[n(341)](x),i=o[r],a=e[i]||t;t.__proto__=x.bind(x),t.toString=a[n(390)][n(341)](a),e[i]=t}}))();const P=b(w(396),null,null,-1),T=u({__name:"xRayEffect",props:{model:{},color:{default:w(365)},opacity:{default:1}},async setup(o){const i=w;let r,u;const d=o,h=c(),_=[];d[i(386)].traverse((t=>{const e=i;t instanceof n[e(373)]&&(t.geometry[e(350)]=!0,_[e(395)](t[e(364)]))}));const z=([r,u]=f((()=>s({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(346)])(d[i(380)])},lightningTexture:{type:"t",value:z[i(351)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(381)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:t,blending:n[i(379)],depthWrite:!1};x[i(367)].offsetY[i(342)]=Math[i(384)](5);const{camera:T}=a(),{onLoop:C}=l();return C((({delta:n})=>{const t=i;T[t(342)][t(376)]&&h.value&&(x[t(367)][t(357)][t(342)]+=n)})),p((()=>{const t=i;h.value&&(h[t(342)].geometry[t(369)](),h[t(342)][t(364)]=e(_)),d[t(380)]&&(x.uniforms[t(362)][t(342)]=new(n[t(346)])(d[t(380)])),d[t(381)]&&(x[t(367)][t(361)][t(342)]=d[t(381)])})),(n,t)=>{const e=i;return m(),g("TresMesh",{ref_key:e(366),ref:h},[P,b(e(345),v(y(x)),null,16)],512)}}});function C(n){function t(n){const e=h;if(typeof n===e(358))return function(n){}.constructor(e(348))[e(387)](e(356));1!==(""+n/n)[e(339)]||n%20==0?function(){return!0}[e(343)](e(391)+e(382)).call(e(377)):function(){return!1}[e(343)](e(391)+e(382))[e(387)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const M=B;!function(n,t){const e=B,o=j();for(;;)try{if(546724===parseInt(e(467))/1*(parseInt(e(478))/2)+-parseInt(e(415))/3+parseInt(e(436))/4*(parseInt(e(456))/5)+-parseInt(e(428))/6+parseInt(e(445))/7+parseInt(e(425))/8*(parseInt(e(413))/9)+-parseInt(e(457))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[B(426)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){S(this,(function(){const n=B,t=new RegExp(n(470)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A(n(418));t[n(449)](o+"chain")&&e.test(o+"input")?A():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(n,t){const e=j();return(B=function(n,t){return e[n-=413]})(n,t)}I(void 0,(function(){const n=B;let t;try{t=Function(n(441)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(439)]=t[n(439)]||{},o=["log","warn",n(424),"error",n(462),"table",n(437)];for(let r=0;r<o[n(435)];r++){const t=I[n(465)].prototype[n(419)](I),i=o[r],a=e[i]||t;t[n(420)]=I[n(419)](I),t[n(477)]=a.toString[n(419)](a),e[i]=t}}))();const F=u({__name:M(414),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(a){const s=M,u=a,f=[s(442),"semantic",s(448),s(474),"amigdala",s(482),s(427),s(431),"analitic"],h={};u[s(459)][s(421)]((t=>{const o=s;t instanceof n[o(455)]&&f[o(422)]((n=>{const i=o;if(t.name[i(464)](n)){if(h[n]){const o=[h[n],t[i(466)]];return h[n]=e(o),h}return h[n]=t[i(466)]}return[]}))}));const w=c(),_=new(n[s(444)])({uniforms:{glowColor:{type:"c",value:new(n[s(460)])(u[s(483)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:u.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[s(472)],side:t,depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{w[s(451)]&&(()=>{const t=s,e=[],o=[],a=[],l=[];for(let r=0;r<2e4-3*f.length;r+=1){const s=i.randInt(0,f.length-1),u=f[s],c=h[u][t(473)][t(430)][t(432)][3*r+0]||0,p=h[u][t(473)][t(430)].array[3*r+1]||0,m=h[u][t(473)][t(430)].array[3*r+2]||0;if(o[t(468)](c,p,m),e[r]=n[t(475)].randFloat(10,20),r%100==0){const n=i[t(440)](100,250)+p;l.push(c,n,m,1)}else l[t(468)](c,p,m,0);a[2*r+0]=n[t(475)].randFloat(.5,1.5),a[2*r+1]=2.5}w.value.setAttribute(t(446),new r(a,2)),w.value[t(461)](t(447),new(n[t(452)])(l,4)),w.value.setAttribute(t(430),new r(o,3)),w[t(451)][t(461)](t(483),new r([],3)),w.value[t(461)](t(416),new(n[t(452)])(e,1)),w[t(451)][t(434)]()})()}));const z=c(),{onLoop:x}=l();return x((({delta:n})=>{const t=s;z[t(451)]&&(z.value[t(423)][t(417)][t(453)][t(451)]+=.05,z[t(451)][t(423)][t(417)].uSlowTime.value+=1/400),u[t(483)]&&(_[t(417)][t(443)][t(451)]=new o(u[t(483)])),u[t(471)]&&(_[t(417)][t(450)][t(451)]=u[t(471)])})),(n,t)=>{const e=s;return m(),g(e(458),{ref_key:e(433),ref:z},[b(e(438),{ref_key:e(454),ref:w},null,512),b(e(476),v(y(d(_))),null,16)],512)}}});function j(){const n=["size","uniforms","init","bind","__proto__","traverse","map","material","info","72afyctB","apply","bridge","298842uIPgLv","while (true) {}","position","cerebellum","array","TresMeshRef","computeBoundingSphere","length","115524lLoLHM","trace","TresBufferGeometry","console","randInt","return (function() ","afective","glowColor","ShaderMaterial","5539968peKcoT","aDelayDuration","bubbles","episodic","test","uOpacity","value","Float32BufferAttribute","uTime","BufferGeometryRef","Mesh","170BHMmvB","10032380aQFbMu","TresPoints","model","Color","setAttribute","exception","debu","includes","constructor","geometry","7460CYArbj","push","stateObject","function *\\( *\\)","opacity","AdditiveBlending","attributes","process","MathUtils","TresShaderMaterial","toString","146IyQcwV","call","gger","action","brainstem","color","71289BlcKlj","bubblesEffect","2368434oKEAtf"];return(j=function(){return n})()}function A(n){function t(n){const e=B;if("string"==typeof n)return function(n){}[e(465)](e(429))[e(426)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(465)]("debu"+e(480))[e(479)](e(481)):function(){return!1}.constructor(e(463)+e(480)).apply(e(469)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as _,F as a};
