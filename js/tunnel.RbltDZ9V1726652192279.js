import{U as n,Y as e}from"./@tresjs.UGbbWZf51726652192279.js";import{a0 as t,aN as r}from"./three.3esZ7Hzr1726652192279.js";import{_ as o}from"./argestCircle.iQbYZf4A1726652192279.js";import{d as s,e as i,o as a,f as u,g as c,L as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.JNsx1iN61726652192279.js";import"./@vueuse.OdTlFP151726652192279.js";const g=A;!function(n,e){const t=A,r=C();for(;;)try{if(618213===-parseInt(t(464))/1*(-parseInt(t(465))/2)+-parseInt(t(468))/3*(-parseInt(t(499))/4)+parseInt(t(488))/5+parseInt(t(460))/6*(parseInt(t(456))/7)+-parseInt(t(462))/8*(-parseInt(t(461))/9)+-parseInt(t(490))/10+-parseInt(t(453))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[A(500)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){h(this,(function(){const n=A,e=new RegExp(n(480)),t=new RegExp(n(459),"i"),r=S(n(501));e[n(484)](r+n(476))&&t.test(r+n(492))?S():r("0")}))()}();const T=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[A(500)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();T(void 0,(function(){const n=A;let e;try{e=Function(n(493)+n(452)+");")()}catch(o){e=window}const t=e[n(466)]=e[n(466)]||{},r=[n(486),n(491),n(498),n(454),n(483),n(458),n(481)];for(let s=0;s<r[n(477)];s++){const e=T[n(469)].prototype.bind(T),o=r[s],i=t[o]||e;e[n(496)]=T[n(470)](T),e[n(473)]=i[n(473)][n(470)](i),t[o]=e}}))();const x={ref:g(479),position:[600,750,-1221],fov:45,near:1,far:1e4},y=l("TresAmbientLight",{color:g(472)},null,-1),b=l(g(489),{position:[100,100,0],intensity:.5,color:g(472)},null,-1),w=[g(497)],I=l("TresPlaneGeometry",{args:[1e3,1e3]},null,-1),j=l("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1),_=l("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1);function C(){const n=['{}.constructor("return this")( )',"5176776UhNKsb","error","gger","257999SGvjJT","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","table","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","36FyWxee","18BxywYB","1882984RCMmkH","TresPerspectiveCamera","51OhwXAk","6662OLLEOg","console","tunnel","1104AgzRJx","constructor","bind","call","#ffffff","toString","TresMesh","action","chain","length","counter","perspectiveCameraRef","function *\\( *\\)","trace","while (true) {}","exception","test","uTime","log","TresShaderMaterial","4274295lDAsew","TresDirectionalLight","7485030hZWYxS","warn","input","return (function() ","value","string","__proto__","rotation-x","info","1312ywPtdL","apply","init"];return(C=function(){return n})()}const L=g(457);function A(n,e){const t=C();return(A=function(n,e){return t[n-=452]})(n,e)}const R=s({__name:g(467),setup(s){const g={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},h={autoRotate:!0,enableDamping:!0},T={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:L,side:t,blending:r,depthWrite:!1,transparent:!0},{onLoop:C}=n();return C((({delta:n})=>{const e=A;T.uniforms[e(485)][e(494)]+=n})),(n,t)=>{const r=A,o=i("TresCanvas");return a(),u(o,m(g,{"window-size":""}),{default:c((()=>[l(r(463),x,null,512),f(p(e),v(d(h)),null,16),y,b,l(r(474),{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[I,l(r(487),v(d(T)),null,16)],8,w),j,_])),_:1},16)}}});function S(n){function e(n){const t=A;if(typeof n===t(495))return function(n){}[t(469)](t(482)).apply(t(478));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor("debugger")[t(471)](t(475)):function(){return!1}[t(469)]("debu"+t(455)).apply("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{R as default};
