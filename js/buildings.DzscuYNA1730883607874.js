import{u as t,_ as o,a as n}from"./mergeTres.fE_k0qLp1730883607874.js";import{l as r}from"./utils.DqGdOV081730883607874.js";import{e}from"./@tresjs.C3WO4ZW41730883607874.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as m,g,f as h,al as _}from"./@vue.Cfu43fwq1730883607874.js";import{_ as C}from"./@fesjs.DQmvwjPe1730883607874.js";import"./@amap.CXRRqiLY1730883607874.js";import"./pinia.DKpn0rzI1730883607874.js";import"./vue-demi.Dq6ymT-81730883607874.js";import"./three.fIUcjaNz1730883607874.js";import"./three-mesh-bvh.yJpBh0Yi1730883607874.js";import"./@vueuse.BSum2YDk1730883607874.js";import"./vue-router.BDLCs4Ld1730883607874.js";import"./lodash-es.BBTWvufR1730883607874.js";import"./@qlin.BIlp8Yi21730883607874.js";import"./@babel.BBWsvBIa1730883607874.js";import"./@floating-ui.B75jtkXD1730883607874.js";import"./@juggle.BnTvdTVm1730883607874.js";function y(t,o){const n=j();return(y=function(t,o){return n[t-=170]})(t,o)}const w=y;!function(t,o){const n=y,r=j();for(;;)try{if(517201===parseInt(n(193))/1*(parseInt(n(217))/2)+-parseInt(n(216))/3+-parseInt(n(199))/4*(-parseInt(n(195))/5)+-parseInt(n(223))/6*(parseInt(n(185))/7)+parseInt(n(204))/8+parseInt(n(179))/9+-parseInt(n(225))/10*(parseInt(n(180))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[y(230)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=y,o=new RegExp(t(224)),n=new RegExp(t(227),"i"),r=z("init");o[t(210)](r+t(233))&&n[t(210)](r+t(226))?z():r("0")}))()}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();b(void 0,(function(){const t=y,o=function(){const t=y;let o;try{o=Function(t(188)+'{}.constructor("return this")( ));')()}catch(n){o=window}return o}(),n=o[t(201)]=o.console||{},r=[t(232),"warn",t(184),t(214),t(208),t(213),t(229)];for(let e=0;e<r[t(219)];e++){const o=b[t(174)][t(192)][t(197)](b),a=r[e],i=n[a]||o;o[t(190)]=b[t(197)](b),o[t(191)]=i[t(191)][t(197)](i),n[a]=o}}))();const I=[w(194),w(189),w(211)];function j(){const t=["function *\\( *\\)","10yqzjqU","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresGroup","trace","apply","stateObject","log","chain","action","uniforms","counter","buildings","lngLatToCoord","constructor","push","gger","near","cameraState","4641345rrCSKj","11897413LzPsvq","mapHandle","value","geometry","info","1687dojeIs","TresBufferGeometry","TresShaderMaterial","return (function() ","faceUv","__proto__","toString","prototype","52uwfMeu","position","4348145TorAur","u_zoom","bind","TresMesh","4dlifRV","debu","console","getZoom","string","5521304TobYEd","call","uvArray","far","exception","tbgRef","test","normal","exp","table","error","while (true) {}","1410660bDuahj","27938WwYImT","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","length","customCoords","u_near","u_far","18246LTYHKe"];return(j=function(){return t})()}const S=a({__name:"buildingModels",setup(o){const n=t(),a=t=>{const o=y;for(let r=0;r<t[o(219)];r+=3){const e=[t[r],t[r+1]],a=n[o(181)].customCoords[o(173)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),m={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[y(178)]&&(async()=>{const t=y,o=await r(t(218),t(172));for(let n=0;n<o[t(219)];n++){const r=o[n];a(r.geometry);const e=new Float32Array(r[t(183)]),i=new Float32Array(r[t(189)]),l=new Float32Array(r.geometry[t(219)]);d[t(175)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:g}=e();return g((()=>{const t=y;n[t(178)]&&(m.uniforms[t(196)].value=n[t(181)][t(202)](),m.uniforms[t(221)][t(182)]=n.cameraState[t(177)],m[t(170)][t(222)][t(182)]=n[t(178)][t(207)])})),(t,o)=>{const n=y;return c(),s(n(228),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(198),{key:""+o},[p(r(186),{ref_for:!0,ref:r(209),position:[t.positionArray,3],faceUv:[t[r(206)],2],normal:[t.normalArray,3]},null,8,I),p(r(187),v({ref_for:!0},m),null,16)])})),128))])}}});function z(t){function o(t){const n=y;if(typeof t===n(203))return function(t){}[n(174)](n(215))[n(230)](n(171));1!==(""+t/t)[n(219)]||t%20==0?function(){return!0}.constructor("debu"+n(176))[n(205)](n(234)):function(){return!1}[n(174)](n(200)+"gger")[n(230)](n(231)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const R=P;function P(t,o){const n=F();return(P=function(t,o){return n[t-=439]})(t,o)}!function(t,o){const n=P,r=F();for(;;)try{if(201895===parseInt(n(476))/1+-parseInt(n(471))/2+parseInt(n(450))/3+parseInt(n(441))/4*(-parseInt(n(458))/5)+parseInt(n(479))/6*(-parseInt(n(470))/7)+-parseInt(n(475))/8*(-parseInt(n(456))/9)+parseInt(n(439))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[P(473)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=P,o=new RegExp(t(466)),n=new RegExp(t(459),"i"),r=L(t(452));o[t(455)](r+t(477))&&n.test(r+t(462))?L():r("0")}))()}();const U=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[P(473)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function F(){const t=["function *\\( *\\)","toString","trace","TresCanvas","14KqUzrh","557446RzGRmd","length","apply","info","64TQOIct","221255wMCkCw","chain","prototype","1202874lswtwa","tcRef","constructor",'{}.constructor("return this")( )',"3544300xtLrRF","action","118344AizHho","gger","bind","tresCanvas","darkblue","return (function() ","stateObject","console","while (true) {}","400299PfEzBD","manual","init","TresPerspectiveCamera","debu","test","293868UepUXX","buildings","15pmVDxQ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","__proto__","call","input","counter","log","exception"];return(F=function(){return t})()}U(void 0,(function(){const t=P;let o;try{o=Function(t(446)+t(482)+");")()}catch(e){o=window}const n=o[t(448)]=o[t(448)]||{},r=[t(464),"warn",t(474),"error",t(465),"table",t(468)];for(let a=0;a<r[t(472)];a++){const o=U[t(481)][t(478)].bind(U),e=r[a],i=n[e]||o;o[t(460)]=U.bind(U),o[t(467)]=i[t(467)][t(443)](i),n[e]=o}}))();function L(t){function o(t){const n=P;if("string"==typeof t)return function(t){}[n(481)](n(449))[n(473)](n(463));1!==(""+t/t)[n(472)]||t%20==0?function(){return!0}[n(481)](n(454)+n(442))[n(461)](n(440)):function(){return!1}[n(481)]("debu"+n(442))[n(473)](n(447)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const M=C(a({__name:R(457),setup(t){const r=R,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(451)});return(t,i)=>{const l=r,f=d(l(469));return c(),s(u,null,[m(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(445)}),m(f,v({id:l(444),ref:l(480)},a),{default:g((()=>[i[0]||(i[0]=p(l(453),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p("TresAmbientLight",{intensity:.5},null,-1)),m(n,{center:e}),(c(),h(_,null,{default:g((()=>[m(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
