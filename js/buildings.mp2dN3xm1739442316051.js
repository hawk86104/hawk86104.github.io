import{u as t,_ as n,a as o}from"./mergeTres.34hkcIWX1739442316051.js";import{l as r}from"./utils.jKidLUsI1739442316051.js";import{e}from"./@tresjs.4XV_x0mI1739442316051.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as v,m as p,e as g,j as d,g as m,f as h,al as _}from"./@vue.NRI7TcgI1739442316051.js";import{_ as C}from"./@fesjs.DgjXCZoG1739442316051.js";import"./@amap.VoZ91NZx1739442316051.js";import"./pinia.ptJyy4pp1739442316051.js";import"./three.OosFxi571739442316051.js";import"./three-mesh-bvh.ZvwtLaXH1739442316051.js";import"./@vueuse.u4XqlOuT1739442316051.js";import"./vue-router.bqZmV3c61739442316051.js";import"./lodash-es.pklfUAS51739442316051.js";import"./@qlin.yHhFDldE1739442316051.js";import"./@floating-ui.BPbuo5Gx1739442316051.js";import"./@juggle.7yjBMqoW1739442316051.js";const y=I;!function(t,n){const o=I,r=x();for(;;)try{if(749022===parseInt(o(229))/1+-parseInt(o(245))/2+parseInt(o(268))/3+parseInt(o(236))/4*(-parseInt(o(266))/5)+-parseInt(o(226))/6+-parseInt(o(249))/7+-parseInt(o(234))/8*(-parseInt(o(265))/9))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(231)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function x(){const t=["2684498ngwsgM","cameraState","buildings","call","2686187MBlthS","uvArray","bind","far","normalArray","faceUv","toString","__proto__","lngLatToCoord","warn","console","string","length","getZoom","near","function *\\( *\\)","5564043XxEsxk","5555945mNINFy","action","2908284jOmvDS","positionArray","init","gger","exception","atan","normal","buildingModels","u_zoom","trace","TresShaderMaterial","constructor","mapHandle","tbgRef","3658482jEJhQZ","TresGroup","table","135385lCbwQK","value","apply","error","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","40eUacXT","while (true) {}","4DYzYTJ","geometry","info","TresMesh","debu","customCoords","input","prototype","uniforms"];return(x=function(){return t})()}!function(){w(this,(function(){const t=I,n=new RegExp(t(264)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(t(270));n.test(r+"chain")&&o.test(r+t(242))?z():r("0")}))()}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(231)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function I(t,n){const o=x();return(I=function(t,n){return o[t-=224]})(t,n)}b(void 0,(function(){const t=I;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(259)]=n[t(259)]||{},r=["log",t(258),t(238),t(232),t(272),t(228),t(277)];for(let a=0;a<r[t(261)];a++){const n=b[t(279)][t(243)][t(251)](b),e=r[a],i=o[e]||n;n[t(256)]=b[t(251)](b),n.toString=i[t(255)].bind(i),o[e]=n}}))();const S=["position",y(254),y(274)],j=a({__name:y(275),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t[n(261)];r+=3){const e=[t[r],t[r+1]],a=o[n(224)][n(241)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},g=i([]),d={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[I(246)]&&(async()=>{const t=I,n=await r(t(233),t(247));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(237)]);const e=new Float32Array(r[t(237)]),i=new Float32Array(r[t(254)]),l=new Float32Array(r[t(237)].length);g.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;o[t(246)]&&(d[t(244)][t(276)][t(230)]=o[t(224)][t(262)](),d[t(244)].u_near[t(230)]=o[t(246)][t(263)],d[t(244)].u_far.value=o[t(246)][t(252)])})),(t,n)=>{const o=I;return c(),s(o(227),null,[(c(!0),s(u,null,f(g,((t,n)=>{const r=o;return c(),s(r(239),{key:""+n},[v("TresBufferGeometry",{ref_for:!0,ref:r(225),position:[t[r(269)],3],faceUv:[t[r(250)],2],normal:[t[r(253)],3]},null,8,S),v(r(278),p({ref_for:!0},d),null,16)])})),128))])}}});function z(t){function n(t){const o=I;if(typeof t===o(260))return function(t){}[o(279)](o(235))[o(231)]("counter");1!==(""+t/t)[o(261)]||t%20==0?function(){return!0}[o(279)](o(240)+"gger")[o(248)](o(267)):function(){return!1}.constructor(o(240)+o(271))[o(231)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=P;!function(t,n){const o=P,r=U();for(;;)try{if(243001===parseInt(o(317))/1*(-parseInt(o(323))/2)+parseInt(o(294))/3*(parseInt(o(325))/4)+parseInt(o(297))/5+parseInt(o(320))/6+-parseInt(o(324))/7+-parseInt(o(327))/8*(-parseInt(o(296))/9)+-parseInt(o(311))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(307)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=P,n=new RegExp(t(316)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=L("init");n[t(330)](r+"chain")&&o.test(r+"input")?L():r("0")}))()}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(307)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function P(t,n){const o=U();return(P=function(t,n){return o[t-=291]})(t,n)}R(void 0,(function(){const t=P,n=function(){const t=P;let n;try{n=Function(t(305)+t(332)+");")()}catch(o){n=window}return n}(),o=n[t(318)]=n[t(318)]||{},r=[t(304),t(328),t(326),"error",t(303),t(302),t(309)];for(let e=0;e<r.length;e++){const n=R.constructor[t(295)].bind(R),a=r[e],i=o[a]||n;n[t(312)]=R[t(299)](R),n[t(321)]=i[t(321)][t(299)](i),o[a]=n}}))();function U(){const t=["manual","8fgqdhA","1388576DviwEL","398672UaKmBw","info","8TBGdDg","warn","gger","test","darkblue",'{}.constructor("return this")( )',"tcRef","stateObject","TresPerspectiveCamera","string","9vFaQIQ","prototype","2751669LgZMNg","1419530wAkTcZ","TresCanvas","bind","tresCanvas","debu","table","exception","log","return (function() ","TresAmbientLight","apply","length","trace","buildings","4552090fQdolr","__proto__","call","while (true) {}","constructor","function *\\( *\\)","71681UFjiLB","console","action","1767906BjBRTH","toString"];return(U=function(){return t})()}function L(t){function n(t){const o=P;if(typeof t===o(293))return function(t){}[o(315)](o(314))[o(307)]("counter");1!==(""+t/t)[o(308)]||t%20==0?function(){return!0}.constructor(o(301)+o(329))[o(313)](o(319)):function(){return!1}[o(315)](o(301)+o(329))[o(307)](o(291)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=C(a({__name:A(310),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(322)});return(t,i)=>{const l=r,f=g(l(298));return c(),s(u,null,[d(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(331)}),d(f,p({id:l(300),ref:l(333)},a),{default:m((()=>[i[0]||(i[0]=v(l(292),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=v(l(306),{intensity:.5},null,-1)),d(o,{center:e}),(c(),h(_,null,{default:m((()=>[d(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
