import{_ as n,a0 as t,c3 as e,C as o,r as i,l as r,a,ab as s}from"./three.sQDbNBks1741583630766.js";import{m as l,e as u,a as c}from"./@tresjs.ZmhvXhx31741583630766.js";import{d as f,b as p,a3 as m,a2 as g,o as b,H as v,N as y,aj as d,ak as h,u as w}from"./@vue.NRI7TcgI1741583630766.js";function _(n,t){const e=P();return(_=function(n,t){return e[n-=500]})(n,t)}const x=_;!function(n,t){const e=_,o=P();for(;;)try{if(885488===-parseInt(e(541))/1*(parseInt(e(542))/2)+parseInt(e(551))/3*(-parseInt(e(539))/4)+-parseInt(e(555))/5*(-parseInt(e(518))/6)+parseInt(e(543))/7*(-parseInt(e(508))/8)+parseInt(e(516))/9*(parseInt(e(538))/10)+parseInt(e(540))/11*(-parseInt(e(505))/12)+parseInt(e(533))/13)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(511)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function P(){const n=["mergeGeometries","info","init","trace","1812ySttxw","AdditiveBlending","debu","41576PMPelu","TresMesh","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","apply","toString","offsetY","stateObject","call","9MKysnr","position","174EFvMwk","console","TresBufferGeometry","bind","TresMeshRef","geometry","TresShaderMaterial","glowColor","value","uniforms","action","return (function() ","verticesNeedUpdate","error","gger","29434171MULOjc","uTime","opacity","traverse","while (true) {}","7470440clWVxA","28BWrENL","54109YaDWLQ","753679xrDOzP","4GaAUyP","350JIrmyK","model","chain","#84ccff",'{}.constructor("return this")( )',"length","constructor","string","509781NqNiWQ","Mesh","prototype","sin","271335oOQkgN","Color","function *\\( *\\)","color"];return(P=function(){return n})()}!function(){z(this,(function(){const n=_,t=new RegExp(n(557)),e=new RegExp(n(510),"i"),o=S(n(503));t.test(o+n(545))&&e.test(o+"input")?S():o("0")}))()}();const T=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();T(void 0,(function(){const n=_;let t;try{t=Function(n(529)+n(547)+");")()}catch(i){t=window}const e=t[n(519)]=t[n(519)]||{},o=["log","warn",n(502),n(531),"exception","table",n(504)];for(let r=0;r<o.length;r++){const t=T.constructor[n(553)][n(521)](T),i=o[r],a=e[i]||t;t.__proto__=T[n(521)](T),t[n(512)]=a[n(512)].bind(a),e[i]=t}}))();const I=f({__name:"xRayEffect",props:{model:{},color:{default:x(546)},opacity:{default:1}},async setup(i){const r=x;let a,s;const f=i,w=p(),_=[];f[r(544)][r(536)]((t=>{const e=r;t instanceof n[e(552)]&&(t[e(523)][e(530)]=!0,_.push(t[e(523)]))}));const z=([a,s]=m((()=>c({map:"./plugins/medical/image/brainXRayLight.png"}))),a=await a,s(),a),P={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[r(556)])(f.color)},lightningTexture:{type:"t",value:z.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:f[r(535)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:t,blending:n[r(506)],depthWrite:!1};P.uniforms[r(513)][r(526)]=Math[r(554)](5);const{camera:T}=l(),{onLoop:I}=u();return I((({delta:n})=>{const t=r;T.value[t(517)]&&w[t(526)]&&(P.uniforms[t(534)].value+=n)})),g((()=>{const n=r;w[n(526)]&&(w.value.geometry.dispose(),w[n(526)][n(523)]=e[n(501)](_)),f[n(500)]&&(P[n(527)][n(525)][n(526)]=new o(f[n(500)])),f[n(535)]&&(P.uniforms.uOpacity[n(526)]=f.opacity)})),(n,t)=>{const e=r;return b(),v(e(509),{ref_key:e(522),ref:w},[t[0]||(t[0]=y(e(520),null,null,-1)),y(e(524),d(h(P)),null,16)],512)}}});function S(n){function t(n){const e=_;if(typeof n===e(550))return function(n){}[e(549)](e(537))[e(511)]("counter");1!==(""+n/n)[e(548)]||n%20==0?function(){return!0}[e(549)]("debu"+e(532))[e(515)](e(528)):function(){return!1}[e(549)](e(507)+"gger")[e(511)](e(514)),t(++n)}try{if(n)return t;t(0)}catch(e){}}function C(n,t){const e=B();return(C=function(n,t){return e[n-=444]})(n,t)}const M=C;function B(){const n=["push","input","error","string","mergeGeometries","console","chain","material","array","Color","info","attributes","Float32BufferAttribute","value","return (function() ","bind","cerebellum","warn","TresBufferGeometry","2901878fgnIxL","computeBoundingSphere","position","DoubleSide","constructor","log","464183nnifjs","bridge","uniforms","360248eMxchl","9xbBEXG","init","uSlowTime","size","traverse","bubblesEffect","process","11516200IBHhBf","TresMeshRef","afective","3228392hcAsBW","name","opacity","includes","aDelayDuration","analitic","exception","uOpacity","25xAbyzU","episodic","debu","MathUtils","brainstem","glowColor","color","994668OwIqKy","model","randInt","TresShaderMaterial","geometry","action","test","prototype","bubbles","length","AdditiveBlending","setAttribute","#FFF","randFloat","call","trace","gger",'{}.constructor("return this")( )',"297750GTZrVz","apply","map","toString"];return(B=function(){return n})()}!function(n,t){const e=C,o=B();for(;;)try{if(501706===-parseInt(e(505))/1+-parseInt(e(508))/2+parseInt(e(476))/3+-parseInt(e(519))/4+-parseInt(e(451))/5*(-parseInt(e(458))/6)+-parseInt(e(499))/7+parseInt(e(516))/8*(parseInt(e(509))/9))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(477)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){F(this,(function(){const n=C,t=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=j(n(510));t[n(464)](o+n(486))&&e.test(o+n(481))?j():o("0")}))()}();const U=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[C(477)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();U(void 0,(function(){const n=C;let t;try{t=Function(n(494)+n(475)+");")()}catch(i){t=window}const e=t[n(485)]=t[n(485)]||{},o=[n(504),n(497),n(490),n(482),n(449),"table",n(473)];for(let r=0;r<o.length;r++){const t=U[n(503)][n(465)][n(495)](U),i=o[r],a=e[i]||t;t.__proto__=U[n(495)](U),t[n(479)]=a[n(479)][n(495)](a),e[i]=t}}))();const O=f({__name:M(514),props:{model:{},color:{default:M(470)},opacity:{default:1}},setup(t){const l=M,c=t,f=[l(518),"semantic",l(452),l(515),"amigdala",l(455),l(506),l(496),l(448)],m={};c[l(459)][l(513)]((n=>{const t=l;n instanceof i&&f[t(478)]((o=>{const i=t;if(n[i(444)][i(446)](o)){if(m[o]){const t=[m[o],n.geometry];return m[o]=e[i(484)](t),m}return m[o]=n[i(462)]}return[]}))}));const _=p(),x=new r({uniforms:{glowColor:{type:"c",value:new o(c[l(457)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:c.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[l(468)],side:n[l(502)],depthTest:!1,vertexColors:!1,transparent:!0});g((()=>{_[l(493)]&&(()=>{const t=l,e=[],o=[],i=[],r=[];for(let s=0;s<2e4-3*f[t(467)];s+=1){const l=n[t(454)].randInt(0,f[t(467)]-1),u=f[l],c=m[u][t(491)][t(501)].array[3*s+0]||0,p=m[u].attributes[t(501)][t(488)][3*s+1]||0,g=m[u][t(491)][t(501)].array[3*s+2]||0;if(o[t(480)](c,p,g),e[s]=a.randFloat(10,20),s%100==0){const e=n[t(454)][t(460)](100,250)+p;r.push(c,e,g,1)}else r[t(480)](c,p,g,0);i[2*s+0]=n[t(454)][t(471)](.5,1.5),i[2*s+1]=2.5}_[t(493)][t(469)](t(447),new(n[t(492)])(i,2)),_[t(493)].setAttribute(t(466),new s(r,4)),_[t(493)][t(469)]("position",new(n[t(492)])(o,3)),_[t(493)][t(469)](t(457),new(n[t(492)])([],3)),_[t(493)][t(469)](t(512),new s(e,1)),_.value[t(500)]()})()}));const z=p(),{onLoop:P}=u();return P((({delta:t})=>{const e=l;z[e(493)]&&(z[e(493)][e(487)][e(507)].uTime.value+=.05,z[e(493)][e(487)][e(507)][e(511)].value+=1/400),c[e(457)]&&(x.uniforms[e(456)][e(493)]=new(n[e(489)])(c.color)),c[e(445)]&&(x[e(507)][e(450)][e(493)]=c[e(445)])})),(n,t)=>{const e=l;return b(),v("TresPoints",{ref_key:e(517),ref:z},[y(e(498),{ref_key:"BufferGeometryRef",ref:_},null,512),y(e(461),d(h(w(x))),null,16)],512)}}});function j(n){function t(n){const e=C;if(typeof n===e(483))return function(n){}[e(503)]("while (true) {}").apply("counter");1!==(""+n/n)[e(467)]||n%20==0?function(){return!0}[e(503)](e(453)+e(474))[e(472)](e(463)):function(){return!1}[e(503)](e(453)+e(474)).apply("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{I as _,O as a};
