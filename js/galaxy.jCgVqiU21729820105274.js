import{bU as n,ak as t,am as o,C as e,aL as a,a as r}from"./three.0W5n8UBO1729820105274.js";import{U as s,e as i,F as c,Y as l}from"./@tresjs.S6PXiQcG1729820105274.js";import{d as u,b as d,w as m,e as f,o as p,E as h,j as v,u as g,g as w,L as b,aj as M,ak as P,F as C}from"./@vue.bvMz0l_u1729820105274.js";import"./@vueuse.3M_MDcJc1729820105274.js";const y=S;!function(n,t){const o=S,e=j();for(;;)try{if(424869===parseInt(o(492))/1+parseInt(o(526))/2+parseInt(o(482))/3+parseInt(o(518))/4+-parseInt(o(546))/5*(-parseInt(o(487))/6)+parseInt(o(541))/7*(parseInt(o(527))/8)+-parseInt(o(494))/9)break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const x=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[S(498)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){x(this,(function(){const n=S,t=new RegExp(n(530)),o=new RegExp(n(504),"i"),e=I(n(544));t.test(e+n(484))&&o[n(496)](e+n(497))?I():e("0")}))()}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function S(n,t){const o=j();return(S=function(n,t){return o[n-=482]})(n,t)}z(void 0,(function(){const n=S;let t;try{t=Function(n(535)+n(513)+");")()}catch(a){t=window}const o=t.console=t[n(528)]||{},e=[n(525),n(489),"info",n(509),"exception",n(523),n(540)];for(let r=0;r<e[n(493)];r++){const t=z[n(507)].prototype[n(529)](z),a=e[r],s=o[a]||t;t.__proto__=z.bind(z),t[n(485)]=s.toString.bind(s),o[a]=t}}))();const F=b(y(491),{position:[3,3,3]},null,-1),_=[y(502),y(536),y(490),y(539)];function j(){const n=["2322120GorIJB","debu","gger","galaxy","lerp","table","TresShaderMaterial","log","119266tBFiDg","8NDDqbV","console","bind","function *\\( *\\)","geometry","call","material","insideColor","return (function() ","a-scale","bufferRef","black","a-randomness","trace","704711OqYPpV","counter","#1b3984","init","clone","3224495ZzmrSe","value","2057307smuFFW","branches","chain","toString","size","6vhUjUv","aScale","warn","color","TresPerspectiveCamera","708068RdRvkv","length","21192327BUeSWK","TresPoints","test","input","apply","random","setAttribute","string","position","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","cos","outsideColor","constructor","count","error","action","#b5f28d","sin",'{}.constructor("return this")( )',"while (true) {}","randomnessPower","radius","aRandomness"];return(j=function(){return n})()}const T=u({__name:y(521),setup(u){const x=y,z={clearColor:x(538),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:o,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(511),outsideColor:x(543)},T=new e(j[x(534)]),I=new e(j.outsideColor),A=new Float32Array(3*j[x(508)]),R=new Float32Array(3*j.count),k=new Float32Array(j[x(508)]),O=new Float32Array(3*j.count);for(let n=0;n<j[x(508)];n++){const t=3*n,o=Math[x(499)]()*j.radius,e=n%j[x(483)]*Math.PI*2/j[x(483)];A[t]=Math[x(505)](e)*o,A[t+1]=0,A[t+2]=Math[x(512)](e)*o;const a=Math[x(499)]()**j.randomnessPower*(Math.random()<.5?-1:1),r=Math[x(499)]()**j[x(515)]*(Math[x(499)]()<.5?-1:1),s=Math.random()**j[x(515)]*(Math[x(499)]()<.5?-1:1);O[t]=a,O[t+1]=r,O[t+2]=s;const i=T[x(545)]();i[x(522)](I,o/j[x(516)]),R[t+0]=i.r,R[t+1]=i.g,R[t+2]=i.b,k[n]=Math.random()}const U={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[x(486)]}}};const B=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;B[t(547)]&&(B[t(547)][t(533)][t(503)].uTime[t(547)]=n)}));const{count:D,size:L,radius:W,branches:Z,spin:q,randomness:G,randomnessPower:V,insideColor:Y,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(511),outsideColor:x(543)});return m([D.value,L.value,W[x(547)],Z[x(547)],q[x(547)],G[x(547)],V[x(547)],Y[x(547)],$[x(547)]],(n=>{n.forEach(((n,t)=>{const o=S;j[Object.keys(j)[t]]=n[o(547)]})),function(){const n=x;if(B.value){const t=new e(j[n(534)]),o=new e(j[n(506)]),a=new Float32Array(3*j.count),s=new Float32Array(3*j.count),i=new Float32Array(j[n(508)]),c=new Float32Array(3*j[n(508)]);for(let e=0;e<j[n(508)];e++){const r=3*e,l=Math[n(499)]()*j[n(516)],u=e%j.branches*Math.PI*2/j[n(483)];a[r]=Math[n(505)](u)*l,a[r+1]=0,a[r+2]=Math[n(512)](u)*l;const d=Math.random()**j[n(515)]*(Math[n(499)]()<.5?-1:1),m=Math[n(499)]()**j[n(515)]*(Math[n(499)]()<.5?-1:1),f=Math[n(499)]()**j[n(515)]*(Math[n(499)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t.clone();p[n(522)](o,l/j.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[e]=Math.random()}B[n(547)][n(531)][n(500)](n(502),new r(a,3)),B[n(547)][n(531)][n(500)](n(517),new r(c,3)),B[n(547)][n(531)][n(500)](n(490),new r(s,3)),B[n(547)][n(531)][n(500)](n(488),new r(i,1))}}()})),(n,t)=>{const o=x,e=f("TresCanvas");return p(),h(C,null,[v(g(c)),v(e,M(P(z)),{default:w((()=>[F,b(o(495),{ref_key:o(537),ref:B},[b("TresBufferGeometry",{position:[g(A),3],"a-scale":[g(k),1],color:[g(R),3],"a-randomness":[g(O),3]},null,8,_),b(o(524),M(P(U)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function I(n){function t(n){const o=S;if(typeof n===o(501))return function(n){}[o(507)](o(514))[o(498)](o(542));1!==(""+n/n)[o(493)]||n%20==0?function(){return!0}[o(507)](o(519)+o(520))[o(532)](o(510)):function(){return!1}[o(507)]("debu"+o(520))[o(498)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{T as default};
