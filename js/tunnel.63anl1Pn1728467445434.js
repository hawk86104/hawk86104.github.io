import{U as n,Y as t}from"./@tresjs.ED4ePb8T1728467445434.js";import{a0 as e,aN as r}from"./three.5octV-9b1728467445434.js";import{_ as o}from"./argestCircle.iQbYZf4A1728467445434.js";import{d as i,e as s,o as a,f as u,g as c,L as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.JNsx1iN61728467445434.js";import"./@vueuse.G8I04tzi1728467445434.js";const g=x;function h(){const n=["warn","counter","log","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresPlaneGeometry","2346ovTLTN","return (function() ","string","#000000","834378VKkDul","589652beltma","error","TresCanvas","63117SHxUhP","quanMeshRef",'{}.constructor("return this")( )',"1939128ybENAf","info","debu","chain","while (true) {}","TresGridHelper","TresShaderMaterial","uTime","value","TresAxesHelper","#ffffff","25Rwalaf","console","690zXMdwG","gger","apply","test","toString","128187frLXFB","TresAmbientLight","trace","11753MDNpkd","length","2341356CJSYLV","uniforms","function *\\( *\\)","exception","stateObject","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","bind","prototype","tunnel","constructor"];return(h=function(){return n})()}!function(n,t){const e=x,r=h();for(;;)try{if(468542===-parseInt(e(400))/1+-parseInt(e(396))/2+parseInt(e(426))/3+parseInt(e(397))/4*(parseInt(e(414))/5)+-parseInt(e(392))/6*(-parseInt(e(424))/7)+-parseInt(e(403))/8+-parseInt(e(421))/9*(parseInt(e(416))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const T=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){T(this,(function(){const n=x,t=new RegExp(n(428)),e=new RegExp(n(390),"i"),r=R("init");t[n(419)](r+n(406))&&e.test(r+"input")?R():r("0")}))()}();const b=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[x(418)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function x(n,t){const e=h();return(x=function(n,t){return e[n-=380]})(n,t)}b(void 0,(function(){const n=x,t=function(){const n=x;let t;try{t=Function(n(393)+n(402)+");")()}catch(e){t=window}return t}(),e=t.console=t[n(415)]||{},r=[n(389),n(387),n(404),n(398),n(380),"table",n(423)];for(let o=0;o<r[n(425)];o++){const t=b[n(386)][n(384)][n(383)](b),i=r[o],s=e[i]||t;t.__proto__=b[n(383)](b),t.toString=s[n(420)].bind(s),e[i]=t}}))();const y={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},w=l(g(422),{color:g(413)},null,-1),I=l("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:g(413)},null,-1),_=["rotation-x"],j=l(g(391),{args:[1e3,1e3]},null,-1),C=l(g(412),{args:[1e3],position:[0,19,0]},null,-1),L=l(g(408),{args:[6e3,100],position:[0,19,0]},null,-1),S=g(382),M=i({__name:g(385),setup(i){const h=g,T={clearColor:h(395),shadows:!0,alpha:!1,useLegacyLights:!0},b={autoRotate:!0,enableDamping:!0},x={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:S,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:M}=n();return M((({delta:n})=>{const t=h;x[t(427)][t(410)][t(411)]+=n})),(n,e)=>{const r=h,o=s(r(399));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[l("TresPerspectiveCamera",y,null,512),f(p(t),v(d(b)),null,16),w,I,l("TresMesh",{ref:r(401),position:[0,100,0],"rotation-x":2*Math.PI/360*90},[j,l(r(409),v(d(x)),null,16)],8,_),C,L])),_:1},16)}}});function R(n){function t(n){const e=x;if(typeof n===e(394))return function(n){}[e(386)](e(407)).apply(e(388));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(e(405)+e(417)).call("action"):function(){return!1}[e(386)](e(405)+e(417))[e(418)](e(381)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{M as default};
