import{u as t,_ as n,a as o}from"./mergeTres.9XybAJHP1721721076264.js";import{l as r}from"./utils.rTaeW1AE1721721076264.js";import{$ as e}from"./@tresjs.tWkmYPO61721721076264.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.Q1VpS3901721721076264.js";import{_ as x}from"./@fesjs.ODHTSx0A1721721076264.js";import"./@amap.b3gYyCW_1721721076264.js";import"./pinia.G6Yd8Ztp1721721076264.js";import"./three.fnkrvySq1721721076264.js";import"./three-mesh-bvh.TXD2-bq71721721076264.js";import"./tweakpane.yHWGBmom1721721076264.js";import"./@vueuse._hUvP73U1721721076264.js";import"./vue-router.wK6Z5ZPK1721721076264.js";import"./lodash-es.nFpJXAf-1721721076264.js";import"./@qlin.yHhFDldE1721721076264.js";import"./@floating-ui.BPbuo5Gx1721721076264.js";import"./@juggle.7yjBMqoW1721721076264.js";const w=j;!function(t,n){const o=j,r=S();for(;;)try{if(847818===parseInt(o(229))/1*(-parseInt(o(235))/2)+-parseInt(o(190))/3*(-parseInt(o(212))/4)+parseInt(o(213))/5*(parseInt(o(183))/6)+parseInt(o(203))/7+-parseInt(o(238))/8+parseInt(o(220))/9+-parseInt(o(239))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(223)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=j,n=new RegExp(t(231)),o=new RegExp(t(201),"i"),r=U(t(226));n[t(230)](r+t(192))&&o[t(230)](r+t(186))?U():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[j(223)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function S(){const t=["atan","counter","7687728FcPwEW","5141680BGYrin","constructor","string","__proto__","u_zoom","5154DXlAoh","console",'{}.constructor("return this")( )',"input","trace","bind","near","1202832trQrBK","cameraState","chain","value","while (true) {}","positionArray","uniforms","error","mapHandle","buildingModels","prototype","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","geometry","8955800bkUDlp","info","customCoords","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","stateObject","length","return (function() ","log","tbgRef","4BqipPl","6330BBtBUz","uvArray","TresBufferGeometry","push","normal","u_far","TresMesh","10186830LUkBpB","debu","lngLatToCoord","apply","buildings","action","init","gger","far","1576756sTEeLy","test","function *\\( *\\)","u_near","faceUv","toString","2xngymK"];return(S=function(){return t})()}function j(t,n){const o=S();return(j=function(t,n){return o[t-=183]})(t,n)}I(void 0,(function(){const t=j;let n;try{n=Function(t(209)+t(185)+");")()}catch(e){n=window}const o=n[t(184)]=n[t(184)]||{},r=[t(210),"warn",t(204),t(197),"exception","table",t(187)];for(let a=0;a<r[t(208)];a++){const n=I.constructor[t(200)].bind(I),e=r[a],i=o[e]||n;n[t(242)]=I[t(188)](I),n.toString=i[t(234)].bind(i),o[e]=n}}))();const z=["position",w(233),w(217)],P=a({__name:w(199),setup(n){const o=t(),a=t=>{const n=j;for(let r=0;r<t[n(208)];r+=3){const e=[t[r],t[r+1]],a=o.mapHandle[n(205)][n(222)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[j(191)]&&(async()=>{const t=j,n=await r(t(206),t(224));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(202)]);const e=new Float32Array(r[t(202)]),i=new Float32Array(r[t(233)]),l=new Float32Array(r[t(202)].length);d[t(216)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=j;o[t(191)]&&(g.uniforms[t(243)].value=o[t(198)].getZoom(),g[t(196)][t(232)][t(193)]=o.cameraState[t(189)],g[t(196)][t(218)][t(193)]=o[t(191)][t(228)])})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,n)=>{const o=j;return c(),s(o(219),{key:""+n},[p(o(215),{ref_for:!0,ref:o(211),position:[t[o(195)],3],faceUv:[t[o(214)],2],normal:[t.normalArray,3]},null,8,z),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))]))}});function U(t){function n(t){const o=j;if(typeof t===o(241))return function(t){}[o(240)](o(194))[o(223)](o(237));1!==(""+t/t)[o(208)]||t%20==0?function(){return!0}[o(240)](o(221)+o(227)).call(o(225)):function(){return!1}[o(240)](o(221)+o(227))[o(223)](o(207)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=W;!function(t,n){const o=W,r=B();for(;;)try{if(394428===parseInt(o(392))/1+-parseInt(o(370))/2*(-parseInt(o(371))/3)+parseInt(o(367))/4*(parseInt(o(403))/5)+parseInt(o(365))/6*(parseInt(o(372))/7)+parseInt(o(381))/8*(parseInt(o(373))/9)+-parseInt(o(383))/10+-parseInt(o(379))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[W(380)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=W,n=new RegExp(t(399)),o=new RegExp(t(391),"i"),r=E(t(368));n[t(374)](r+t(390))&&o.test(r+t(393))?E():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[W(380)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();F(void 0,(function(){const t=W;let n;try{n=Function(t(382)+t(394)+");")()}catch(e){n=window}const o=n[t(375)]=n[t(375)]||{},r=["log",t(389),"info",t(364),t(388),t(404),"trace"];for(let a=0;a<r[t(396)];a++){const n=F[t(397)][t(398)][t(385)](F),e=r[a],i=o[e]||n;n[t(384)]=F[t(385)](F),n[t(402)]=i.toString.bind(i),o[e]=n}}))();const L=t=>(C(A(387)),t=t(),y(),t),D=L((()=>p(A(401),{fov:60,near:.1,far:2e3},null,-1))),k=L((()=>p(A(363),{intensity:.5},null,-1)));function W(t,n){const o=B();return(W=function(t,n){return o[t-=363]})(t,n)}function B(){const t=["init","call","255706LDLlBv","3foQbDW","7tfbitG","57933UGDnsA","test","console","counter","while (true) {}","TresCanvas","4741143uxtYaU","apply","88uymIlA","return (function() ","3024030TCCjfP","__proto__","bind","tresCanvas","data-v-40288e17","exception","warn","chain","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","343812zYVUYl","input",'{}.constructor("return this")( )',"gger","length","constructor","prototype","function *\\( *\\)","tcRef","TresPerspectiveCamera","toString","65BGLXdQ","table","TresAmbientLight","error","1532202GGmufs","string","101540QXIWuq"];return(B=function(){return t})()}function E(t){function n(t){const o=W;if(typeof t===o(366))return function(t){}.constructor(o(377))[o(380)](o(376));1!==(""+t/t)[o(396)]||t%20==0?function(){return!0}[o(397)]("debu"+o(395))[o(369)]("action"):function(){return!1}[o(397)]("debu"+o(395)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=x(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=W,l=d(i(378));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(386),ref:i(400)},e),{default:m((()=>[D,k,g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(P)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{M as default};
