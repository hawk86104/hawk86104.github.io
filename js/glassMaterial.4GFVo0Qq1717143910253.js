import{a5 as d,q as u,ah as r,B as h,r as f,o as g,C as T,J as l,ac as m,a7 as M,a8 as C,a9 as w,a1 as e,a,T as s,aq as i,b1 as x,b3 as v,at as y,ag as B}from"./vendor.DmiBkafs1717143910253.js";const b=e("TresPerspectiveCamera",{position:[3,3,3]},null,-1),R={"position-x":3},S=e("TresTorusKnotGeometry",{args:[1,.4,256,20]},null,-1),k={position:[0,0,-1]},G=e("TresPlaneGeometry",{args:[3,3]},null,-1),D=["side"],N=e("TresGridHelper",{args:[10,10]},null,-1),P=e("TresAmbientLight",{intensity:1},null,-1),q=e("TresDirectionalLight",{intensity:1,position:[2,2,2]},null,-1),A=d({__name:"glassMaterial",setup(L){const c={clearColor:"#82DBC5",shadows:!0,alpha:!1,shadowMapType:M,outputColorSpace:C,toneMapping:w},_=u(),t=r(),o=r();return h(t,n=>{o.value.value.material.dispose(),o.value.value.material=n.MeshGlassMaterialClass}),(n,V)=>{const p=f("TresCanvas");return g(),T(p,m(c,{ref_key:"context",ref:_,"window-size":""}),{default:l(()=>[b,e("TresMesh",R,[S,a(s(i),{ref_key:"glassMaterialRef",ref:t},null,512)]),a(s(x),{scale:.5},{default:l(()=>[a(s(i))]),_:1}),a(s(v),{ref_key:"boxRef",ref:o,"position-x":-3},null,512),e("TresMesh",k,[G,e("TresMeshBasicMaterial",{side:s(y),color:16716049},null,8,D)]),N,P,q,a(s(B))]),_:1},16)}}});export{A as default};
