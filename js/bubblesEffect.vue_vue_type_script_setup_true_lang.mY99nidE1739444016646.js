import{_ as n,cA as t,a0 as e,C as o,a as i}from"./three.W6GmiHfn1739444016646.js";import{m as r,e as a,a as s}from"./@tresjs.Q4_KYO2a1739444016646.js";import{d as l,b as u,a3 as c,a2 as f,o as p,H as m,N as b,aj as g,ak as v,u as y}from"./@vue.NRI7TcgI1739444016646.js";const d=_;!function(n,t){const e=_,o=x();for(;;)try{if(363793===parseInt(e(351))/1+parseInt(e(376))/2*(-parseInt(e(392))/3)+parseInt(e(372))/4*(parseInt(e(382))/5)+parseInt(e(408))/6+parseInt(e(383))/7*(parseInt(e(393))/8)+-parseInt(e(391))/9+-parseInt(e(363))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(400)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){h(this,(function(){const n=_,t=new RegExp(n(377)),e=new RegExp(n(358),"i"),o=P(n(390));t.test(o+n(374))&&e.test(o+n(360))?P():o("0")}))()}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(400)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(n,t){const e=x();return(_=function(n,t){return e[n-=350]})(n,t)}function x(){const n=["table","1587912TDLbyz","call","106482aGjlVX","exception","#84ccff","TresShaderMaterial","sin","Color","uTime","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","input","verticesNeedUpdate","debu","2532040SrsrXT","TresBufferGeometry","offsetY","opacity","TresMesh","trace","value","color","constructor","4raPOZn","glowColor","chain","while (true) {}","41534EbvqQy","function *\\( *\\)","prototype","counter","return (function() ","__proto__","2123670NejnCf","4550378Bixlaa","warn","AdditiveBlending","model","log","traverse","bind","init","3722265tdHORV","60GAETcQ","8cqcDaE","push","map","DoubleSide","error","geometry","uniforms","apply","position","Mesh","action","gger","string","console"];return(x=function(){return n})()}w(void 0,(function(){const n=_;let t;try{t=Function(n(380)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(406)]=t[n(406)]||{},o=[n(387),n(384),"info",n(397),n(352),n(407),n(368)];for(let r=0;r<o[n(359)];r++){const t=w[n(371)][n(378)].bind(w),i=o[r],a=e[i]||t;t[n(381)]=w[n(389)](w),t.toString=a.toString[n(389)](a),e[i]=t}}))();const z=l({__name:"xRayEffect",props:{model:{},color:{default:d(353)},opacity:{default:1}},async setup(e){const o=d;let i,l;const y=e,h=u(),w=[];y[o(386)][o(388)]((t=>{const e=o;t instanceof n[e(402)]&&(t[e(398)][e(361)]=!0,w[e(394)](t[e(398)]))}));const _=([i,l]=c((()=>s({map:"./plugins/medical/image/brainXRayLight.png"}))),i=await i,l(),i),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(356)])(y.color)},lightningTexture:{type:"t",value:_[o(395)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:y[o(366)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(396)],blending:n[o(385)],depthWrite:!1};x[o(399)][o(365)][o(369)]=Math[o(355)](5);const{camera:z}=r(),{onLoop:P}=a();return P((({delta:n})=>{const t=o;z[t(369)][t(401)]&&h[t(369)]&&(x[t(399)][t(357)][t(369)]+=n)})),f((()=>{const e=o;h[e(369)]&&(h.value.geometry.dispose(),h[e(369)][e(398)]=t(w)),y[e(370)]&&(x[e(399)][e(373)][e(369)]=new(n[e(356)])(y.color)),y[e(366)]&&(x.uniforms.uOpacity[e(369)]=y[e(366)])})),(n,t)=>{const e=o;return p(),m(e(367),{ref_key:"TresMeshRef",ref:h},[t[0]||(t[0]=b(e(364),null,null,-1)),b(e(354),g(v(x)),null,16)],512)}}});function P(n){function t(n){const e=_;if(typeof n===e(405))return function(n){}[e(371)](e(375))[e(400)](e(379));1!==(""+n/n).length||n%20==0?function(){return!0}[e(371)](e(362)+e(404))[e(350)](e(403)):function(){return!1}[e(371)](e(362)+e(404))[e(400)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=I;!function(n,t){const e=I,o=j();for(;;)try{if(271606===parseInt(e(463))/1+parseInt(e(447))/2+parseInt(e(407))/3*(parseInt(e(395))/4)+parseInt(e(402))/5*(-parseInt(e(467))/6)+parseInt(e(469))/7*(parseInt(e(448))/8)+-parseInt(e(446))/9*(parseInt(e(468))/10)+-parseInt(e(401))/11*(parseInt(e(430))/12))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(435)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){S(this,(function(){const n=I,t=new RegExp(n(443)),e=new RegExp(n(417),"i"),o=B(n(465));t[n(458)](o+"chain")&&e[n(458)](o+"input")?B():o("0")}))()}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(435)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=j();return(I=function(n,t){return e[n-=394]})(n,t)}C(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(442)+n(422)+");")()}catch(e){t=window}return t}(),e=t[n(429)]=t.console||{},o=[n(419),n(424),n(398),n(412),"exception",n(455),n(399)];for(let i=0;i<o[n(410)];i++){const t=C[n(445)][n(444)].bind(C),r=o[i],a=e[r]||t;t[n(449)]=C[n(440)](C),t.toString=a[n(403)][n(440)](a),e[r]=t}}))();const M=l({__name:T(441),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(r){const s=T,l=r,c=[s(400),s(409),s(470),s(431),s(434),"brainstem",s(394),s(406),s(450)],d={};l.model[s(396)]((e=>{const o=s;e instanceof n[o(454)]&&c.map((n=>{const i=o;if(e.name.includes(n)){if(d[n]){const o=[d[n],e[i(464)]];return d[n]=t(o),d}return d[n]=e[i(464)]}return[]}))}));const h=u(),w=new(n[s(405)])({uniforms:{glowColor:{type:"c",value:new(n[s(397)])(l[s(421)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[s(414)],side:e,depthTest:!1,vertexColors:!1,transparent:!0});f((()=>{h.value&&(()=>{const t=s,e=[],o=[],r=[],a=[];for(let s=0;s<2e4-3*c[t(410)];s+=1){const l=n[t(426)][t(425)](0,c[t(410)]-1),u=c[l],f=d[u].attributes[t(466)][t(462)][3*s+0]||0,p=d[u][t(461)][t(466)][t(462)][3*s+1]||0,m=d[u].attributes.position[t(462)][3*s+2]||0;if(o[t(411)](f,p,m),e[s]=n[t(426)].randFloat(10,20),s%100==0){const e=n[t(426)][t(425)](100,250)+p;a[t(411)](f,e,m,1)}else a[t(411)](f,p,m,0);r[2*s+0]=i[t(438)](.5,1.5),r[2*s+1]=2.5}h[t(427)][t(457)](t(459),new(n[t(432)])(r,2)),h.value[t(457)](t(428),new(n[t(432)])(a,4)),h[t(427)].setAttribute(t(466),new(n[t(432)])(o,3)),h[t(427)][t(457)](t(421),new(n[t(432)])([],3)),h[t(427)][t(457)](t(423),new(n[t(432)])(e,1)),h[t(427)][t(413)]()})()}));const _=u(),{onLoop:x}=a();return x((({delta:n})=>{const t=s;_[t(427)]&&(_.value[t(439)][t(460)][t(420)][t(427)]+=.05,_[t(427)][t(439)].uniforms[t(453)].value+=1/400),l[t(421)]&&(w[t(460)].glowColor[t(427)]=new o(l.color)),l[t(416)]&&(w.uniforms[t(452)].value=l.opacity)})),(n,t)=>{const e=s;return p(),m("TresPoints",{ref_key:"TresMeshRef",ref:_},[b(e(433),{ref_key:"BufferGeometryRef",ref:h},null,512),b(e(418),g(v(y(w))),null,16)],512)}}});function j(){const n=["traverse","Color","info","trace","afective","11TOEuAk","5rjRPog","toString","action","ShaderMaterial","cerebellum","1482105HKjSRi","stateObject","semantic","length","push","error","computeBoundingSphere","AdditiveBlending","call","opacity","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresShaderMaterial","log","uTime","color",'{}.constructor("return this")( )',"size","warn","randInt","MathUtils","value","bubbles","console","1747476jjqaZU","process","Float32BufferAttribute","TresBufferGeometry","amigdala","apply","counter","while (true) {}","randFloat","material","bind","bubblesEffect","return (function() ","function *\\( *\\)","prototype","constructor","24417cKCHBd","85112Zjfxdf","16pQcvyM","__proto__","analitic","gger","uOpacity","uSlowTime","Mesh","table","string","setAttribute","test","aDelayDuration","uniforms","attributes","array","153830KbceYp","geometry","init","position","2987298LLaPAc","290uXsLkL","1061788AmNHhD","episodic","bridge","4KvVPrt"];return(j=function(){return n})()}function B(n){function t(n){const e=I;if(typeof n===e(456))return function(n){}[e(445)](e(437)).apply(e(436));1!==(""+n/n)[e(410)]||n%20==0?function(){return!0}[e(445)]("debugger")[e(415)](e(404)):function(){return!1}[e(445)]("debu"+e(451)).apply(e(408)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{z as _,M as a};
