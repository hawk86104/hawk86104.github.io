import{cf as s,N as a,_ as o,ce as e}from"./three.0XnumNGx1753438381880.js";import{a as t}from"./@tresjs.CL21cZKR1753438381880.js";import{P as i}from"./tweakpane.C0HtAJSg1753438381880.js";import"./index.3YF1ftF11753438381880.js";import{l}from"./util.BdkO13uJ1753438381880.js";import{_ as r}from"./cloudPoints.vue_vue_type_script_setup_true_lang.J-PGd_ZK1753438381880.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.B_93CdQN1753438381880.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DEpvjsJ21753438381880.js";import{d as m,r as u,aa as c,h as j,G as g,o as f,j as _,u as b,f as h,I as w,a7 as y,a8 as v,e as B,H as x,m as L,a5 as T,F as k}from"./@vue.BzMISRrV1753438381880.js";import"./postprocessing.Bts7n4b31753438381880.js";import"./@vueuse.B7eBfla_1753438381880.js";import"./utils.BYPsKfP61753438381880.js";import"./@fesjs.Dp_6UiTt1753438381880.js";import"./vue-router.C4RxDKc01753438381880.js";import"./lodash-es.C7pWAXPe1753438381880.js";import"./@qlin.q6OWdsQV1753438381880.js";import"./pinia.DxBg6W7y1753438381880.js";import"./@babel.BPq7uOAK1753438381880.js";import"./@floating-ui.BFjFSAYt1753438381880.js";import"./@juggle.CcBCnTIR1753438381880.js";import"./index.Cp049VOq1753438381880.js";import"./three-mesh-ui.module.CE3wHlBQ1753438381880.js";import"./starLoading.DgJMNOgx1753438381880.js";import"./cssLoaders.BOWWyhX-1753438381880.js";import"./bubbleLoading.CZtxOxL91753438381880.js";import"./yangyangLoading.DPMKG6cS1753438381880.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,H;const P=u({color:"#fff",show:!0,opacity:1}),I=new i({title:"参数"});I.addBinding(P,"show",{label:"点云显示"}),I.addBinding(P,"color",{label:"点云颜色"}),I.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const M=u({color:"#84ccff",show:!0,opacity:1});I.addBinding(M,"show",{label:"脑轮廓显示"}),I.addBinding(M,"color",{label:"脑轮廓颜色"}),I.addBinding(M,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=u({color:"#9e00af",show:!0,opacity:1});I.addBinding(R,"show",{label:"脑组织显示"}),I.addBinding(R,"color",{label:"脑组织颜色"}),I.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const S=new s,q=([G,H]=c((()=>l("./plugins/medical/model/brainparts.OBJ",S))),G=await G,H(),G),z=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a}),A=u({autoRotate:!0,autoRotateSpeed:2});return(s,a)=>{const o=j("TresCanvas");return f(),g(k,null,[_(b(d)),_(o,L(z,{"window-size":""}),{default:h((()=>[a[0]||(a[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),_(b(t),y(v(A)),null,16),a[1]||(a[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",C,[P.show?(f(),B(r,L({key:0,model:b(q)},P),null,16,["model"])):x("",!0),(f(),B(T,null,{default:h((()=>[M.show?(f(),B(n,L({key:0,model:b(q)},M),null,16,["model"])):x("",!0)])),_:1})),R.show?(f(),B(p,L({key:1,model:b(q)},R),null,16,["model"])):x("",!0)]),a[2]||(a[2]=w("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
