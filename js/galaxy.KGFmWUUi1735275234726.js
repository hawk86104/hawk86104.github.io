import{c0 as n,ak as t,am as e,C as o,az as a,a as r}from"./three.jpi2UCEx1735275234726.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.fCqPNEAw1735275234726.js";import{d as u,b as d,w as m,e as f,o as p,D as h,j as g,u as v,g as w,J as M,aj as P,ak as b,F as C}from"./@vue.u2cBPEWn1735275234726.js";import"./@vueuse.8jEBPPFT1735275234726.js";const y=_;!function(n,t){const e=_,o=F();for(;;)try{if(984307===parseInt(e(191))/1*(-parseInt(e(164))/2)+parseInt(e(174))/3*(parseInt(e(208))/4)+-parseInt(e(210))/5+parseInt(e(206))/6*(-parseInt(e(169))/7)+parseInt(e(203))/8*(-parseInt(e(166))/9)+-parseInt(e(220))/10+parseInt(e(162))/11*(parseInt(e(182))/12))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(193)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=_,t=new RegExp(n(155)),e=new RegExp(n(181),"i"),o=I(n(204));t.test(o+n(165))&&e[n(187)](o+n(158))?I():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(193)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function F(){const n=["info","action","count","17440000TXKcjw","gger","randomnessPower","error","counter","black","toString","function *\\( *\\)","sin","table","input","trace","warn","color","1045374MBgHwm","material","565394fFefkP","chain","14641974HOulxD","forEach","position","7dcGeea","string","cos","random","uTime","2714508CtuULE","value","size","outsideColor","a-randomness","bufferRef","keys","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","468ytzqKe","while (true) {}","TresCanvas","insideColor",'{}.constructor("return this")( )',"test","setAttribute","constructor","TresBufferGeometry","2rdbgFK","call","apply","__proto__","exception","a-scale","geometry","stateObject","aRandomness","lerp","console","TresShaderMaterial","8tWgmFJ","init","#b5f28d","1939362FaMDro","clone","8GZTOse","return (function() ","1360920PVFCYO","length","uniforms","radius","bind","branches","aScale"];return(F=function(){return n})()}z(void 0,(function(){const n=_;let t;try{t=Function(n(209)+n(186)+");")()}catch(a){t=window}const e=t[n(201)]=t[n(201)]||{},o=["log",n(160),n(217),n(223),n(195),n(157),n(159)];for(let r=0;r<o[n(211)];r++){const t=z[n(189)].prototype[n(214)](z),a=o[r],s=e[a]||t;t[n(194)]=z.bind(z),t[n(154)]=s[n(154)][n(214)](s),e[a]=t}}))();const T=[y(168),y(196),"color",y(178)];function _(n,t){const e=F();return(_=function(n,t){return e[n-=154]})(n,t)}const j=u({__name:"galaxy",setup(u){const x=y,z={clearColor:x(225),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},F={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(205),outsideColor:"#1b3984"},_=new o(F[x(185)]),j=new o(F.outsideColor),I=new Float32Array(3*F[x(219)]),S=new Float32Array(3*F.count),A=new Float32Array(F.count),k=new Float32Array(3*F[x(219)]);for(let n=0;n<F[x(219)];n++){const t=3*n,e=Math.random()*F[x(213)],o=n%F[x(215)]*Math.PI*2/F.branches;I[t]=Math.cos(o)*e,I[t+1]=0,I[t+2]=Math[x(156)](o)*e;const a=Math[x(172)]()**F.randomnessPower*(Math[x(172)]()<.5?-1:1),r=Math[x(172)]()**F[x(222)]*(Math.random()<.5?-1:1),s=Math[x(172)]()**F[x(222)]*(Math.random()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_[x(207)]();i[x(200)](j,e/F[x(213)]),S[t+0]=i.r,S[t+1]=i.g,S[t+2]=i.b,A[n]=Math.random()}const O={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:F[x(176)]}}};const R=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;R[t(175)]&&(R[t(175)][t(163)][t(212)][t(173)].value=n)}));const{count:D,size:G,radius:K,branches:Z,spin:B,randomness:H,randomnessPower:J,insideColor:L,outsideColor:U}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:"#1b3984"});return m([D[x(175)],G.value,K[x(175)],Z[x(175)],B[x(175)],H[x(175)],J[x(175)],L[x(175)],U.value],(n=>{const t=x;n[t(167)](((n,e)=>{const o=t;F[Object[o(180)](F)[e]]=n[o(175)]})),function(){const n=x;if(R[n(175)]){const t=new o(F[n(185)]),e=new o(F[n(177)]),a=new Float32Array(3*F[n(219)]),s=new Float32Array(3*F.count),i=new Float32Array(F.count),c=new Float32Array(3*F[n(219)]);for(let o=0;o<F[n(219)];o++){const r=3*o,l=Math[n(172)]()*F[n(213)],u=o%F[n(215)]*Math.PI*2/F[n(215)];a[r]=Math[n(171)](u)*l,a[r+1]=0,a[r+2]=Math[n(156)](u)*l;const d=Math[n(172)]()**F[n(222)]*(Math.random()<.5?-1:1),m=Math[n(172)]()**F.randomnessPower*(Math.random()<.5?-1:1),f=Math[n(172)]()**F.randomnessPower*(Math[n(172)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(207)]();p[n(200)](e,l/F.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math[n(172)]()}R.value[n(197)][n(188)](n(168),new r(a,3)),R[n(175)].geometry[n(188)](n(199),new r(c,3)),R[n(175)][n(197)][n(188)](n(161),new r(s,3)),R.value[n(197)].setAttribute(n(216),new r(i,1))}}()})),(n,t)=>{const e=x,o=f(e(184));return p(),h(C,null,[g(v(c)),g(o,P(b(z)),{default:w((()=>[t[0]||(t[0]=M("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),M("TresPoints",{ref_key:e(179),ref:R},[M(e(190),{position:[v(I),3],"a-scale":[v(A),1],color:[v(S),3],"a-randomness":[v(k),3]},null,8,T),M(e(202),P(b(O)),null,16)],512),g(v(l))])),_:1},16)],64)}}});function I(n){function t(n){const e=_;if(typeof n===e(170))return function(n){}.constructor(e(183)).apply(e(224));1!==(""+n/n).length||n%20==0?function(){return!0}[e(189)]("debugger")[e(192)](e(218)):function(){return!1}[e(189)]("debu"+e(221))[e(193)](e(198)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
