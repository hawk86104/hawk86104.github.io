import{P as t}from"./tweakpane.C0HtAJSg1757909965456.js";import{b as e}from"./pagesShow.vue_vue_type_script_setup_true_lang.r9dzWDs21757909965456.js";import{e as i,b as s}from"./@tresjs.SQYUeS5s1757909965456.js";import{B as a,M as r,n,ar as o,as as u,a as h,C as l,V as p,c as f,R as c,S as d,aA as m,cR as v,aP as y,bQ as g,aa as b}from"./three.BsQcsDwn1757909965456.js";import{d as x,aa as _,w,G as A,o as P,u as M,r as W,e as C,f as F,a5 as z,j,m as V}from"./@vue.pEDXJ_3Z1757909965456.js";import"./three-custom-shader-material.DdcNfqRA1757909965456.js";import"./buildingsCustomShaderMaterial.DyBo--wu1757909965456.js";import"./postprocessing.B119XRU11757909965456.js";import"./@vueuse.CbmzGplN1757909965456.js";class U extends a{constructor(){super(),this.isMeshLine=!0,this.type="MeshLine",this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._points=[],this._geom=null,this.widthCallback=null,this.matrixWorld=new r,Object.defineProperties(this,{geometry:{enumerable:!0,get:function(){return this}},geom:{enumerable:!0,get:function(){return this._geom},set:function(t){this.setGeometry(t,this.widthCallback)}},points:{enumerable:!0,get:function(){return this._points},set:function(t){this.setPoints(t,this.widthCallback)}}})}}function R(t,e,i,s,a){var r;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,a&&e+a):t.slice(e,a&&e+a):t,i.set)i.set(t,s);else for(r=0;r<t.length;r++)i[r+s]=t[r];return i}U.prototype.setMatrixWorld=function(t){this.matrixWorld=t},U.prototype.setGeometry=function(t,e){this._geometry=t,this.setPoints(t.getAttribute("position").array,e)},U.prototype.setPoints=function(t,e){if(t instanceof Float32Array||t instanceof Array){if(this._points=t,this.widthCallback=e,this.positions=[],this.counters=[],t.length&&t[0]instanceof p)for(var i=0;i<t.length;i++){var s=t[i],a=i/t.length;this.positions.push(s.x,s.y,s.z),this.positions.push(s.x,s.y,s.z),this.counters.push(a),this.counters.push(a)}else for(i=0;i<t.length;i+=3){a=i/t.length;this.positions.push(t[i],t[i+1],t[i+2]),this.positions.push(t[i],t[i+1],t[i+2]),this.counters.push(a),this.counters.push(a)}this.process()}else console.error("ERROR: The BufferArray of points is not instancied correctly.")},U.prototype.raycast=function(t,e){var i=new r,s=new c,a=new d,n=new p,o=this.geometry;if(o.boundingSphere||o.computeBoundingSphere(),a.copy(o.boundingSphere),a.applyMatrix4(this.matrixWorld),!1!==t.ray.intersectSphere(a,n)){i.copy(this.matrixWorld).invert(),s.copy(t.ray).applyMatrix4(i);var u=new p,h=new p,l=new p,f=this instanceof m?2:1,v=o.index,y=o.attributes;if(null!==v)for(var g=v.array,b=y.position.array,x=y.width.array,_=0,w=g.length-1;_<w;_+=f){var A=g[_],P=g[_+1];u.fromArray(b,3*A),h.fromArray(b,3*P);var M=void 0!==x[Math.floor(_/3)]?x[Math.floor(_/3)]:1,W=t.params.Line.threshold+this.material.lineWidth*M/2,C=W*W;if(!(s.distanceSqToSegment(u,h,n,l)>C)){n.applyMatrix4(this.matrixWorld);var F=t.ray.origin.distanceTo(n);F<t.near||F>t.far||(e.push({distance:F,point:l.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this}),_=w)}}}},U.prototype.compareV3=function(t,e){var i=6*t,s=6*e;return this.positions[i]===this.positions[s]&&this.positions[i+1]===this.positions[s+1]&&this.positions[i+2]===this.positions[s+2]},U.prototype.copyV3=function(t){var e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]},U.prototype.process=function(){var t,e,i=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],e=this.compareV3(0,i-1)?this.copyV3(i-2):this.copyV3(0),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);for(var s=0;s<i;s++){if(this.side.push(1),this.side.push(-1),t=this.widthCallback?this.widthCallback(s/(i-1)):1,this.width.push(t),this.width.push(t),this.uvs.push(s/(i-1),0),this.uvs.push(s/(i-1),1),s<i-1){e=this.copyV3(s),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);var a=2*s;this.indices_array.push(a,a+1,a+2),this.indices_array.push(a+2,a+1,a+3)}s>0&&(e=this.copyV3(s),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]))}e=this.compareV3(i-1,0)?this.copyV3(1):this.copyV3(i-1),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]),this._attributes&&this._attributes.position.count===this.positions.length?(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0):this._attributes={position:new f(new Float32Array(this.positions),3),previous:new f(new Float32Array(this.previous),3),next:new f(new Float32Array(this.next),3),side:new f(new Float32Array(this.side),1),width:new f(new Float32Array(this.width),1),uv:new f(new Float32Array(this.uvs),2),index:new f(new Uint16Array(this.indices_array),1),counters:new f(new Float32Array(this.counters),1)},this.setAttribute("position",this._attributes.position),this.setAttribute("previous",this._attributes.previous),this.setAttribute("next",this._attributes.next),this.setAttribute("side",this._attributes.side),this.setAttribute("width",this._attributes.width),this.setAttribute("uv",this._attributes.uv),this.setAttribute("counters",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox(),this._geometry.attributes=this.attributes,this._geometry.index=this.index,this._geometry.computeBoundingSphere(),this._geometry.computeBoundingBox()},U.prototype.advance=function(t){var e=this._attributes.position.array,i=this._attributes.previous.array,s=this._attributes.next.array,a=e.length;R(e,0,i,0,a),R(e,6,e,0,a-6),e[a-6]=t.x,e[a-5]=t.y,e[a-4]=t.z,e[a-3]=t.x,e[a-2]=t.y,e[a-1]=t.z,R(e,6,s,0,a-6),s[a-6]=t.x,s[a-5]=t.y,s[a-4]=t.z,s[a-3]=t.x,s[a-2]=t.y,s[a-1]=t.z,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0},o.meshline_vert=["",o.logdepthbuf_pars_vertex,o.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float near;","uniform float far;","uniform float sizeAttenuation;","uniform vec2 offset;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","    float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);","","    vColor = vec4( color, opacity );","    vUV = uv + offset;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float pixelWidth = finalPosition.w * pixelWidthRatio;","    float w = 1.8 * pixelWidth * lineWidth * width;","","    if( sizeAttenuation == 1. ) {","        w = 1.8 * lineWidth * width;","    }","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec2 normal = vec2( -dir.y, dir.x );","    normal.x /= aspect;","    normal *= .5 * w;","","    vec4 offset = vec4( normal * side, 0.0, 1.0 );","    finalPosition.xy += offset.xy;","","    gl_Position = finalPosition;","",o.logdepthbuf_vertex,o.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",o.fog_vertex,"}"].join("\r\n"),o.meshline_frag=["",o.fog_pars_fragment,o.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",o.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",o.fog_fragment,"}"].join("\r\n");class S extends n{constructor(t){super({uniforms:Object.assign({},u.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new l(16777215)},opacity:{value:1},resolution:{value:new h(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new h(1,1)},offset:{value:new h(1,1)}}),vertexShader:o.meshline_vert,fragmentShader:o.meshline_frag}),this.isMeshLineMaterial=!0,this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(t){this.uniforms.repeat.value.copy(t)}},offset:{enumerable:!0,get:function(){return this.uniforms.offset.value},set:function(t){this.uniforms.offset.value.copy(t)}}}),this.setValues(t)}}S.prototype.copy=function(t){return n.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this};const T=["geometry","material"],B=x({__name:"arrowFlyLine",props:{linePoints:{default:[[500,0,500],[0,0,0]]},speed:{default:.01},style:{default:1},color:{default:"#fff"},opacity:{default:1},height:{default:330},lineWidth:{default:40}},async setup(t){let e,r;const n=t,o=["./plugins/digitalCity/image/flyLine1.png","./plugins/digitalCity/image/flyLine2.png","./plugins/digitalCity/image/flyLine3.png","./plugins/digitalCity/image/flyLine4.png","./plugins/digitalCity/image/flyLine5.png"],u=(n.linePoints[1][0]+n.linePoints[0][0])/2,l=(n.linePoints[1][2]+n.linePoints[0][2])/2,f=new v((new p).fromArray(n.linePoints[0]),new p(u,n.height,l),new p(u,n.height,l),(new p).fromArray(n.linePoints[1])),c=new a;c.setFromPoints(f.getPoints(100));const d=new U;d.setGeometry(c);const m=([e,r]=_((()=>s({map:o[n.style]}))),e=await e,r(),e);m.map.anisotropy=16,m.map.wrapS=y,m.map.wrapT=y;const x=new S({color:n.color,map:m.map,useMap:!0,lineWidth:n.lineWidth,resolution:new h(100,100),dashArray:0,dashRatio:.7,dashOffset:1,transparent:!0,sizeAttenuation:1,side:b,depthTest:!1,blending:g,opacity:n.opacity});x.depthWrite=!1,x.depthTest=!0;const{onLoop:W}=i();return W((()=>{x.uniforms.offset.value.x-=n.speed})),w((()=>[n.color,n.opacity,n.lineWidth]),(([t,e,i])=>{x.uniforms.color.value.setStyle(t),x.uniforms.opacity.value=e,x.uniforms.lineWidth.value=i})),(t,e)=>(P(),A("TresMesh",{geometry:M(d)._geometry,material:M(x),"render-order":99999},null,8,T))}}),D=x({__name:"flyLines",setup(i){const s=W({color:"#FFF",speed:.01,opacity:1,lineWidth:40}),a=new t({title:"效果参数",expanded:!0});return a.addBinding(s,"color",{label:"线颜色"}),a.addBinding(s,"speed",{label:"速度",min:.001,max:.05,step:.001}),a.addBinding(s,"opacity",{label:"透明度",min:0,max:1,step:.01}),a.addBinding(s,"lineWidth",{label:"线宽度",min:10,max:200,step:1}),(t,i)=>(P(),C(e,null,{ability:F((()=>[(P(),C(z,null,{default:F((()=>[j(B,V(s,{linePoints:[[500,20,500],[0,20,0]]}),null,16)])),_:1})),(P(),C(z,null,{default:F((()=>[j(B,{style:0,linePoints:[[-500,20,-500],[0,20,0]]})])),_:1})),(P(),C(z,null,{default:F((()=>[j(B,{style:2,linePoints:[[500,20,-500],[0,20,0]]})])),_:1})),(P(),C(z,null,{default:F((()=>[j(B,{style:3,linePoints:[[-500,20,500],[0,20,0]],opacity:.8,lineWidth:10})])),_:1})),(P(),C(z,null,{default:F((()=>[j(B,{style:4,linePoints:[[200,60,600],[0,20,0]]})])),_:1}))])),_:1}))}});export{D as default};
