import{u as t,_ as n,a as o}from"./mergeTres.niWnV9i71743039954535.js";import{l as r}from"./utils.PeWXTIGY1743039954535.js";import{e}from"./@tresjs.05J-Im0t1743039954535.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.C4dqouNn1743039954535.js";import{_ as y}from"./@fesjs.q_HvOfeM1743039954535.js";import"./@amap.7j9kjwBk1743039954535.js";import"./pinia.MiZyWHUj1743039954535.js";import"./three.XuMWWlrU1743039954535.js";import"./three-mesh-bvh.0PiL0XIM1743039954535.js";import"./postprocessing.YRVqsIkW1743039954535.js";import"./@vueuse.NzAeD-Dt1743039954535.js";import"./vue-router.F5lDLjOj1743039954535.js";import"./lodash-es.p1wj6C0b1743039954535.js";import"./@qlin.o0hjOMCg1743039954535.js";import"./@floating-ui.HzHndBae1743039954535.js";import"./@juggle.4EyLec-41743039954535.js";const C=I;!function(t,n){const o=I,r=b();for(;;)try{if(312882===parseInt(o(293))/1+parseInt(o(248))/2+parseInt(o(291))/3*(parseInt(o(275))/4)+parseInt(o(294))/5*(parseInt(o(264))/6)+-parseInt(o(280))/7+-parseInt(o(292))/8+parseInt(o(285))/9*(-parseInt(o(279))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=I,n=new RegExp(t(250)),o=new RegExp(t(244),"i"),r=z("init");n[t(272)](r+"chain")&&o[t(272)](r+t(258))?z():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(){const t=["buildingModels","action","getZoom","debu","gger","u_zoom","constructor","test","normal","https://opensource.cdn.icegl.cn","364PLnZzJ","apply","info","TresBufferGeometry","20FIRRiA","2845801FYlhdh","trace","TresGroup","uniforms","error","2151711adxXxn","length","log","TresShaderMaterial","customCoords","u_near","18021hneRLS","341344EsxtFS","102010ROdQuA","25pjPmXu","stateObject","cameraState","positionArray","prototype","string","push","near","table","/json/AMapGIS/latlngbuildings.geojson","lngLatToCoord","uvArray","return (function() ","mapHandle","resource.cos","counter","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","tbgRef","bind","call","1164788GHlBEW","exception","function *\\( *\\)","TresMesh","geometry","toString","u_far",'{}.constructor("return this")( )',"normalArray","console","input","faceUv","position","far","value","atan","11052PoYIIV"];return(b=function(){return t})()}function I(t,n){const o=b();return I=function(t,n){return o[t-=237]},I(t,n)}w(void 0,(function(){const t=I;let n;try{n=Function(t(240)+t(255)+");")()}catch(e){n=window}const o=n[t(257)]=n[t(257)]||{},r=[t(287),"warn",t(277),t(284),t(249),t(302),t(281)];for(let a=0;a<r[t(286)];a++){const n=w.constructor[t(298)].bind(w),e=r[a],i=o[e]||n;n.__proto__=w[t(246)](w),n[t(253)]=i[t(253)].bind(i),o[e]=n}}))();const S=[C(260),C(259),C(273)],j=a({__name:C(265),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t[n(286)];r+=3){const e=[t[r],t[r+1]],a=o[n(241)][n(289)][n(238)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=I,n=await r(t(274)+t(237),"buildings");for(let o=0;o<n[t(286)];o++){const r=n[o];a(r[t(252)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(259)]),l=new Float32Array(r[t(252)][t(286)]);d[t(300)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;o[t(296)]&&(g[t(283)][t(270)][t(262)]=o[t(241)][t(267)](),g[t(283)][t(290)].value=o[t(296)][t(301)],g[t(283)][t(254)][t(262)]=o[t(296)][t(261)])})),(t,n)=>{const o=I;return c(),s(o(282),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(251),{key:""+n},[p(r(278),{ref_for:!0,ref:r(245),position:[t[r(297)],3],faceUv:[t[r(239)],2],normal:[t[r(256)],3]},null,8,S),p(r(288),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=I;if(typeof t===o(299))return function(t){}[o(271)]("while (true) {}").apply(o(243));1!==(""+t/t)[o(286)]||t%20==0?function(){return!0}.constructor(o(268)+"gger")[o(247)](o(266)):function(){return!1}[o(271)]("debu"+o(269))[o(276)](o(295)),n(++t)}try{if(t)return n;n(0)}catch(o){}}!function(t,n){const o=A,r=R();for(;;)try{if(113553===-parseInt(o(291))/1*(parseInt(o(285))/2)+-parseInt(o(298))/3+-parseInt(o(307))/4+parseInt(o(274))/5+-parseInt(o(306))/6*(parseInt(o(283))/7)+-parseInt(o(310))/8+-parseInt(o(279))/9*(-parseInt(o(292))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[A(300)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){P(this,(function(){const t=A,n=new RegExp(t(281)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=L(t(297));n[t(289)](r+t(286))&&o[t(289)](r+t(304))?L():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[A(300)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function R(){const t=["darkblue","debu","1541384KfxULT","length","stateObject","915275EvpcpN","info","__proto__","constructor","gger","4764537bPqPBz","console","function *\\( *\\)","manual","161sFFWmB","call","22098kodIzy","chain","warn","prototype","test","while (true) {}","9xbqAWz","10LqWquI","exception","tcRef","toString","string","init","130803NMjYBB","return (function() ","apply","bind","TresAmbientLight","log","input","error","48066MIMBUr","315708bJenkP"];return(R=function(){return t})()}function A(t,n){const o=R();return A=function(t,n){return o[t-=273]},A(t,n)}F(void 0,(function(){const t=A,n=function(){const t=A;let n;try{n=Function(t(299)+'{}.constructor("return this")( ));')()}catch(o){n=window}return n}(),o=n[t(280)]=n[t(280)]||{},r=[t(303),t(287),t(275),t(305),t(293),"table","trace"];for(let e=0;e<r[t(311)];e++){const n=F[t(277)][t(288)][t(301)](F),a=r[e],i=o[a]||n;n[t(276)]=F[t(301)](F),n.toString=i[t(295)][t(301)](i),o[a]=n}}))();function L(t){function n(t){const o=A;if(typeof t===o(296))return function(t){}[o(277)](o(290))[o(300)]("counter");1!==(""+t/t)[o(311)]||t%20==0?function(){return!0}[o(277)](o(309)+o(278))[o(284)]("action"):function(){return!1}.constructor(o(309)+o(278))[o(300)](o(273)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=y(a({__name:"buildings",setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(282)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(308)}),g(f,v({id:"tresCanvas",ref:l(294)},a),{default:m((()=>[i[0]||(i[0]=p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(302),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
