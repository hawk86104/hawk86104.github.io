import{_ as e}from"./three.LxxvsMJG1742205305014.js";import{e as n,o as t,a}from"./@tresjs.nk0nhZ9a1742205305014.js";import{P as o}from"./tweakpane.yDiyAAkA1742205305014.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as p,N as f,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1742205305014.js";import"./postprocessing.lrLv6HE21742205305014.js";import"./@vueuse.w6JAmAgA1742205305014.js";const x=T;!function(e,n){const t=T,a=S();for(;;)try{if(131205===parseInt(t(182))/1+-parseInt(t(162))/2+-parseInt(t(189))/3*(-parseInt(t(196))/4)+-parseInt(t(165))/5+parseInt(t(202))/6*(parseInt(t(153))/7)+parseInt(t(144))/8*(-parseInt(t(163))/9)+-parseInt(t(146))/10)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(180)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=T,n=new RegExp(e(193)),t=new RegExp(e(192),"i"),a=_(e(183));n[e(176)](a+e(200))&&t[e(176)](a+e(178))?_():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(180)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(e,n){const t=S();return(T=function(e,n){return t[e-=144]})(e,n)}function S(){const e=["TresGroup","SRGBColorSpace","__proto__","808458Nrrgvw","bind","call","warn","uniforms","addFolder","海浪高度","counter","TresPoints","57602vKmprB","45nLwZco","FrontSide","427725LRVDQL","Debug","toString","TresMeshBasicMaterial","gger","set","error","color","info","change","size","test","prototype","input","TresPerspectiveCamera","apply","table","259420akMxbg","init","TresMesh","TresIcosahedronGeometry","addBinding","TresCanvas","console","12VjhDdR","value","debu","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","function *\\( *\\)","log","uTime","164516RUDfCM","pointSize","pointsEarth","constructor","chain","while (true) {}","6KjShUi","48376BHwxYr","uWaveHeight","2636440tKDpJM","#122148","length","TresShaderMaterial"];return(S=function(){return e})()}w(void 0,(function(){const e=T,n=function(){let e;try{e=Function('return (function() {}.constructor("return this")( ));')()}catch(n){e=window}return e}(),t=n[e(188)]=n[e(188)]||{},a=[e(194),e(156),e(173),e(171),"exception",e(181),"trace"];for(let o=0;o<a[e(148)];o++){const n=w[e(199)][e(177)].bind(w),r=a[o],i=t[r]||n;n[e(152)]=w.bind(w),n[e(167)]=i[e(167)][e(154)](i),t[r]=n}}))();const b=r({__name:x(198),async setup(r){const y=x;let w,T;const S={color:"#17c5a9",pointSize:4},b={clearColor:y(147),shadows:!1,alpha:!1,outputColorSpace:e[y(151)]},_={color:S[y(172)],wireframe:!0,transparent:!0,opacity:.2},j=([w,T]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,T(),w),z=j[0],D=j[1],E=j[2],P=j[3],k=j[4],C={uniforms:{size:{type:"f",value:S[y(197)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:E},elevTexture:{type:"t",value:P},alphaTexture:{type:"t",value:k},earthTexture:{type:"t",value:z},starTexture:{type:"t",value:D}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(164)]},I=l(),M=l(),A=(new o)[y(158)]({title:y(166)});A[y(186)](S,y(172),{type:y(172)}).on(y(174),(({value:e})=>{const n=y;M.value[n(172)][n(170)](e)})),A[y(186)](C.uniforms[y(175)],y(190),{min:.1,max:10,step:.1,label:"粒子大小"}),A[y(186)](C[y(157)][y(145)],y(190),{min:.01,max:.5,step:.01,label:y(159)}),A[y(186)](C[y(157)].uWaveSpeed,y(190),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:R}=n();return R((({delta:e})=>{const n=y;I[n(190)]&&(I[n(190)].rotation.y+=.002,C[n(157)][n(195)][n(190)]+=10*e)})),(e,n)=>{const a=y,o=s(a(187));return u(),c(o,d(b,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=f(a(179),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),f(a(150),{ref_key:"groupRef",ref:I},[f(a(184),null,[n[0]||(n[0]=f(a(185),{args:[1,4]},null,-1)),f(a(168),d({ref_key:"wireframeMaterialRef",ref:M},_),null,16)]),f(a(161),null,[n[1]||(n[1]=f(a(185),{args:[1,128]},null,-1)),f(a(149),h(g(C)),null,16)])],512),n[3]||(n[3]=f("TresHemisphereLight",{args:["#ffffff","#080820",3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=T;if("string"==typeof e)return function(e){}.constructor(t(201)).apply(t(160));1!==(""+e/e)[t(148)]||e%20==0?function(){return!0}.constructor(t(191)+t(169))[t(155)]("action"):function(){return!1}[t(199)](t(191)+t(169)).apply("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
