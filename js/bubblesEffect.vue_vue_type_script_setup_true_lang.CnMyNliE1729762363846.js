import{_ as n,aN as t,cr as e,C as o,h as i,ad as r}from"./three.CQvcOG671729762363846.js";import{z as a,p as s,U as l}from"./@tresjs.CmAaFQUS1729762363846.js";import{d as u,b as c,a5 as f,a2 as p,o as m,E as g,L as b,aj as v,ak as y,u as d}from"./@vue.n8X62v121729762363846.js";function h(n,t){const e=z();return(h=function(n,t){return e[n-=344]})(n,t)}const w=h;!function(n,t){const e=h,o=z();for(;;)try{if(375863===parseInt(e(369))/1+parseInt(e(394))/2+-parseInt(e(392))/3*(parseInt(e(388))/4)+-parseInt(e(399))/5+-parseInt(e(380))/6*(parseInt(e(347))/7)+-parseInt(e(378))/8+parseInt(e(374))/9*(parseInt(e(391))/10))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){_(this,(function(){const n=h,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(362),"i"),o=T(n(400));t[n(384)](o+"chain")&&e[n(384)](o+n(390))?T():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[h(363)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["model","info","Mesh","gger","#84ccff","stateObject","constructor","mergeGeometries","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","apply","debu","sin","TresMeshRef","map","exception","32416kdzkEl","trace","glowColor","geometry","value","9SFfKhd","TresShaderMaterial","counter","push","5428080CWWpAa","uOpacity","984Sjhyso","verticesNeedUpdate","prototype","table","test","offsetY","DoubleSide","uTime","10156oyQlTf","call","input","14533170eTogVJ","36BDfhIO","warn","14652JDvrEf","toString",'{}.constructor("return this")( )',"dispose","action","1058730seuFHB","init","__proto__","while (true) {}","console","log","8386fEcvyx","length","opacity","Color","color","bind"];return(z=function(){return n})()}x(void 0,(function(){const n=h;let t;try{t=Function("return (function() "+n(396)+");")()}catch(i){t=window}const e=t[n(345)]=t[n(345)]||{},o=[n(346),n(393),n(354),"error",n(368),n(383),n(370)];for(let r=0;r<o[n(348)];r++){const t=x.constructor[n(382)][n(352)](x),i=o[r],a=e[i]||t;t[n(401)]=x[n(352)](x),t.toString=a[n(395)][n(352)](a),e[i]=t}}))();const P=b("TresBufferGeometry",null,null,-1),S=u({__name:"xRayEffect",props:{model:{},color:{default:w(357)},opacity:{default:1}},async setup(o){const i=w;let r,u;const d=o,h=c(),_=[];d[i(353)].traverse((t=>{const e=i;t instanceof n[e(355)]&&(t[e(372)][e(381)]=!0,_[e(377)](t[e(372)]))}));const x=([r,u]=f((()=>a({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(350)])(d.color)},lightningTexture:{type:"t",value:x[i(367)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(349)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(386)],blending:t,depthWrite:!1};z[i(361)][i(385)][i(373)]=Math[i(365)](5);const{camera:S}=s(),{onLoop:T}=l();return T((({delta:n})=>{const t=i;S[t(373)].position&&h.value&&(z.uniforms[t(387)][t(373)]+=n)})),p((()=>{const t=i;h.value&&(h.value[t(372)][t(397)](),h[t(373)][t(372)]=e[t(360)](_)),d.color&&(z[t(361)][t(371)][t(373)]=new(n[t(350)])(d[t(351)])),d[t(349)]&&(z[t(361)][t(379)][t(373)]=d[t(349)])})),(n,t)=>{const e=i;return m(),g("TresMesh",{ref_key:e(366),ref:h},[P,b(e(375),v(y(z)),null,16)],512)}}});function T(n){function t(n){const e=h;if("string"==typeof n)return function(n){}.constructor(e(344))[e(363)](e(376));1!==(""+n/n)[e(348)]||n%20==0?function(){return!0}[e(359)](e(364)+e(356))[e(389)](e(398)):function(){return!1}[e(359)](e(364)+e(356)).apply(e(358)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const C=M;function I(){const n=["stateObject","warn","DoubleSide","call","mergeGeometries","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","BufferGeometryRef","gger","name","471976ExhRJy","string","action","material","position","toString","16OZXClP","array","model","return (function() ","log","ShaderMaterial","TresMeshRef","counter","computeBoundingSphere","glowColor","geometry","Float32BufferAttribute","bubblesEffect","1585495rFdxQX","randFloat","randInt","constructor","color","uSlowTime","bind","bridge","brainstem","chain","push","opacity","2450042EptvnT","size","while (true) {}","TresBufferGeometry","172646ALPdLJ","apply","console","65955ovmOIg","uniforms","amigdala","input","info","attributes","map","semantic","Mesh","uOpacity","debu","analitic","value","exception","init","Color","error","test","setAttribute","function *\\( *\\)","cerebellum","trace","MathUtils","bubbles","afective","338906HsMtxO","#FFF","length","TresPoints","813210rbODla"];return(I=function(){return n})()}function M(n,t){const e=I();return(M=function(n,t){return e[n-=268]})(n,t)}!function(n,t){const e=M,o=I();for(;;)try{if(169856===-parseInt(e(308))/1+parseInt(e(280))/2+parseInt(e(283))/3+-parseInt(e(322))/4+-parseInt(e(341))/5+parseInt(e(312))/6+-parseInt(e(276))/7*(-parseInt(e(328))/8))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(281)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){F(this,(function(){const n=M,t=new RegExp(n(302)),e=new RegExp(n(318),"i"),o=U(n(297));t[n(300)](o+n(273))&&e[n(300)](o+n(286))?U():o("0")}))()}();const O=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[M(281)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();O(void 0,(function(){const n=M;let t;try{t=Function(n(331)+'{}.constructor("return this")( ));')()}catch(i){t=window}const e=t.console=t[n(282)]||{},o=[n(332),n(314),n(287),n(299),n(296),"table",n(304)];for(let r=0;r<o[n(310)];r++){const t=O.constructor.prototype[n(270)](O),i=o[r],a=e[i]||t;t.__proto__=O[n(270)](O),t.toString=a[n(327)].bind(a),e[i]=t}}))();const B=u({__name:C(340),props:{model:{},color:{default:C(309)},opacity:{default:1}},setup(a){const s=C,u=a,f=[s(307),s(290),"episodic","process",s(285),s(272),s(271),s(303),s(294)],h={};u[s(330)].traverse((t=>{const o=s;t instanceof n[o(291)]&&f[o(289)]((n=>{const i=o;if(t[i(321)].includes(n)){if(h[n]){const o=[h[n],t[i(338)]];return h[n]=e[i(317)](o),h}return h[n]=t.geometry}return[]}))}));const w=c(),_=new(n[s(333)])({uniforms:{glowColor:{type:"c",value:new(n[s(298)])(u[s(268)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:u[s(275)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t,side:n[s(315)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{w[s(295)]&&(()=>{const t=s,e=[],o=[],a=[],l=[];for(let r=0;r<2e4-3*f.length;r+=1){const s=n[t(305)][t(343)](0,f[t(310)]-1),u=f[s],c=h[u][t(288)][t(326)][t(329)][3*r+0]||0,p=h[u][t(288)][t(326)][t(329)][3*r+1]||0,m=h[u][t(288)].position.array[3*r+2]||0;if(o.push(c,p,m),e[r]=i[t(342)](10,20),r%100==0){const e=n[t(305)][t(343)](100,250)+p;l[t(274)](c,e,m,1)}else l[t(274)](c,p,m,0);a[2*r+0]=i[t(342)](.5,1.5),a[2*r+1]=2.5}w[t(295)][t(301)]("aDelayDuration",new(n[t(339)])(a,2)),w[t(295)][t(301)](t(306),new(n[t(339)])(l,4)),w[t(295)][t(301)](t(326),new r(o,3)),w[t(295)][t(301)]("color",new(n[t(339)])([],3)),w.value[t(301)](t(277),new(n[t(339)])(e,1)),w.value[t(336)]()})()}));const x=c(),{onLoop:z}=l();return z((({delta:n})=>{const t=s;x[t(295)]&&(x[t(295)][t(325)][t(284)].uTime[t(295)]+=.05,x.value[t(325)].uniforms[t(269)][t(295)]+=1/400),u[t(268)]&&(_[t(284)][t(337)][t(295)]=new o(u[t(268)])),u[t(275)]&&(_[t(284)][t(292)][t(295)]=u[t(275)])})),(n,t)=>{const e=s;return m(),g(e(311),{ref_key:e(334),ref:x},[b(e(279),{ref_key:e(319),ref:w},null,512),b("TresShaderMaterial",v(y(d(_))),null,16)],512)}}});function U(n){function t(n){const e=M;if(typeof n===e(323))return function(n){}[e(344)](e(278))[e(281)](e(335));1!==(""+n/n)[e(310)]||n%20==0?function(){return!0}[e(344)](e(293)+e(320))[e(316)](e(324)):function(){return!1}[e(344)]("debugger")[e(281)](e(313)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as _,B as a};
