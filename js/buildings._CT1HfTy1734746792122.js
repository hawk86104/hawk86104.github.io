import{u as t,_ as o,a as n}from"./mergeTres.qChm9eI21734746792122.js";import{l as r}from"./utils.bDGdWJWR1734746792122.js";import{e}from"./@tresjs.vA_UT8oy1734746792122.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-THQH3GC1734746792122.js";import{_ as C}from"./@fesjs.Y0rSBxCv1734746792122.js";import"./@amap.zNgKkCGX1734746792122.js";import"./pinia.fA-Uqav61734746792122.js";import"./vue-demi.C4xddsk91734746792122.js";import"./three.1FILWcBb1734746792122.js";import"./three-mesh-bvh.VBrofT861734746792122.js";import"./@vueuse.lqJslAkC1734746792122.js";import"./vue-router.PPpNBBl21734746792122.js";import"./lodash-es.kYt-_xTG1734746792122.js";import"./@qlin.yHhFDldE1734746792122.js";import"./@floating-ui.BPbuo5Gx1734746792122.js";import"./@juggle.7yjBMqoW1734746792122.js";const y=w;function w(t,o){const n=S();return(w=function(t,o){return n[t-=301]})(t,o)}!function(t,o){const n=w,r=S();for(;;)try{if(769715===-parseInt(n(349))/1+-parseInt(n(366))/2*(-parseInt(n(339))/3)+parseInt(n(310))/4+parseInt(n(322))/5+parseInt(n(347))/6*(-parseInt(n(307))/7)+-parseInt(n(345))/8+-parseInt(n(350))/9*(parseInt(n(337))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[w(348)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=w,o=new RegExp(t(356)),n=new RegExp(t(364),"i"),r=z(t(309));o.test(r+t(333))&&n[t(362)](r+t(316))?z():r("0")}))()}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[w(348)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();b(void 0,(function(){const t=w,o=function(){const t=w;let o;try{o=Function(t(357)+t(311)+");")()}catch(n){o=window}return o}(),n=o[t(329)]=o[t(329)]||{},r=[t(355),t(354),t(303),t(340),t(332),t(359),t(352)];for(let e=0;e<r[t(334)];e++){const o=b[t(305)].prototype[t(331)](b),a=r[e],i=n[a]||o;o.__proto__=b[t(331)](b),o[t(306)]=i.toString[t(331)](i),n[a]=o}}))();const I=[y(351),y(301),y(338)];function S(){const t=["constructor","toString","119dnDUPa","gger","init","2674152WhnBDs",'{}.constructor("return this")( )',"u_near","uniforms","uvArray","getZoom","input","string","call","geometry","far","TresBufferGeometry","3806425NoPnHG","lngLatToCoord","TresGroup","u_far","positionArray","near","while (true) {}","console","debu","bind","exception","chain","length","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","action","10wVOZOF","normal","3qNwzFk","error","cameraState","value","atan","TresShaderMaterial","8233912LpKERR","buildingModels","46776IhcOCT","apply","26968VcijzT","8539866vxEZQA","position","trace","push","warn","log","function *\\( *\\)","return (function() ","TresMesh","table","counter","normalArray","test","u_zoom","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","customCoords","2955010BcBafY","faceUv","mapHandle","info","exp"];return(S=function(){return t})()}const j=a({__name:y(346),setup(o){const n=t(),a=t=>{const o=w;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=n.mapHandle[o(365)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[w(341)]&&(async()=>{const t=w,o=await r(t(335),"buildings");for(let n=0;n<o[t(334)];n++){const r=o[n];a(r[t(319)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(301)]),l=new Float32Array(r.geometry[t(334)]);d[t(353)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=w;n[t(341)]&&(g[t(313)][t(363)][t(342)]=n[t(302)][t(315)](),g[t(313)][t(312)].value=n.cameraState[t(327)],g.uniforms[t(325)][t(342)]=n.cameraState[t(320)])})),(t,o)=>{const n=w;return c(),s(n(324),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(358),{key:""+o},[p(r(321),{ref_for:!0,ref:"tbgRef",position:[t[r(326)],3],faceUv:[t[r(314)],2],normal:[t[r(361)],3]},null,8,I),p(r(344),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=w;if(typeof t===n(317))return function(t){}.constructor(n(328)).apply(n(360));1!==(""+t/t)[n(334)]||t%20==0?function(){return!0}[n(305)](n(330)+n(308))[n(318)](n(336)):function(){return!1}[n(305)](n(330)+n(308))[n(348)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}!function(t,o){const n=F,r=R();for(;;)try{if(605043===parseInt(n(229))/1*(-parseInt(n(215))/2)+parseInt(n(238))/3*(-parseInt(n(247))/4)+-parseInt(n(237))/5*(-parseInt(n(210))/6)+-parseInt(n(209))/7+parseInt(n(220))/8+-parseInt(n(213))/9+parseInt(n(214))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function R(){const t=["console","4zcowsi","error","5243602VvXdNf","18IOcfBL","debu","init","2265651WVYOHh","7042850oGdfbY","12NQCMgP","darkblue","tcRef","while (true) {}","apply","9229424iTiBii","prototype","TresAmbientLight","toString","input","length","function *\\( *\\)","action","tresCanvas","42450ZOMsaJ","TresPerspectiveCamera","test","manual","exception","warn","bind","TresCanvas","1125095kMtmiM","2017356lPriyK",'{}.constructor("return this")( )',"info","constructor","log","gger","chain","__proto__"];return(R=function(){return t})()}function F(t,o){const n=R();return(F=function(t,o){return n[t-=209]})(t,o)}!function(){P(this,(function(){const t=F,o=new RegExp(t(226)),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=A(t(212));o[t(231)](r+t(244))&&n[t(231)](r+t(224))?A():r("0")}))()}();const M=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[F(219)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();M(void 0,(function(){const t=F;let o;try{o=Function("return (function() "+t(239)+");")()}catch(e){o=window}const n=o[t(246)]=o.console||{},r=[t(242),t(234),t(240),t(248),t(233),"table","trace"];for(let a=0;a<r.length;a++){const o=M[t(241)][t(221)][t(235)](M),e=r[a],i=n[e]||o;o[t(245)]=M.bind(M),o[t(223)]=i.toString[t(235)](i),n[e]=o}}))();function A(t){function o(t){const n=F;if("string"==typeof t)return function(t){}.constructor(n(218))[n(219)]("counter");1!==(""+t/t)[n(225)]||t%20==0?function(){return!0}[n(241)]("debu"+n(243)).call(n(227)):function(){return!1}.constructor(n(211)+n(243))[n(219)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const L=C(a({__name:"buildings",setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(232)});return(t,i)=>{const l=r,f=d(l(236));return c(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(216)}),g(f,v({id:l(228),ref:l(217)},a),{default:m((()=>[i[0]||(i[0]=p(l(230),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(222),{intensity:.5},null,-1)),g(n,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{L as default};
