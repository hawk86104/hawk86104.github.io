import{U as n,Y as t}from"./@tresjs.JhHPALEY1728703368826.js";import{a0 as e,aN as r}from"./three.VoknrmS61728703368826.js";import{_ as o}from"./argestCircle.iQbYZf4A1728703368826.js";import{d as i,e as s,o as a,f as u,g as c,L as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.JNsx1iN61728703368826.js";import"./@vueuse.yeA714RM1728703368826.js";function g(){const n=["error","debu","toString","perspectiveCameraRef","531175OvZbxv","exception","TresAmbientLight","#ffffff","console","8QRzouZ","trace","TresCanvas","table","TresGridHelper","constructor","warn","counter","290jvzCjI","tunnel","action","uniforms","info","length","value","gger","bind","apply","1552476QoQLau","init","23tMGsTE","TresAxesHelper","rotation-x","TresMesh","chain","stateObject","call","395185vgLSDu","TresDirectionalLight","#000000","__proto__","53654iLoEnw","2408004CtKgAP","uTime","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","TresPlaneGeometry","49412rMhZnR","return (function() ","input","test","TresPerspectiveCamera","prototype","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","24RMfRCN","848781ITLOXM"];return(g=function(){return n})()}const h=x;!function(n,t){const e=x,r=g();for(;;)try{if(367390===parseInt(e(397))/1*(-parseInt(e(408))/2)+-parseInt(e(367))/3+parseInt(e(395))/4+-parseInt(e(372))/5*(-parseInt(e(366))/6)+parseInt(e(404))/7+parseInt(e(377))/8*(parseInt(e(409))/9)+-parseInt(e(385))/10*(-parseInt(e(413))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const T=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[x(394)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){T(this,(function(){const n=x,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(365),"i"),r=z(n(396));t[n(416)](r+n(401))&&e.test(r+n(415))?z():r("0")}))()}();const b=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function x(n,t){const e=g();return(x=function(n,t){return e[n-=364]})(n,t)}b(void 0,(function(){const n=x;let t;try{t=Function(n(414)+'{}.constructor("return this")( ));')()}catch(o){t=window}const e=t[n(376)]=t[n(376)]||{},r=["log",n(383),n(389),n(368),n(373),n(380),n(378)];for(let i=0;i<r[n(390)];i++){const t=b[n(382)][n(364)].bind(b),o=r[i],s=e[o]||t;t[n(407)]=b[n(393)](b),t[n(370)]=s[n(370)][n(393)](s),e[o]=t}}))();const y={ref:h(371),position:[600,750,-1221],fov:45,near:1,far:1e4},I=l(h(374),{color:h(375)},null,-1),j=l(h(405),{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1),C=[h(399)],w=l(h(412),{args:[1e3,1e3]},null,-1),_=l(h(398),{args:[1e3],position:[0,19,0]},null,-1),L=l(h(381),{args:[6e3,100],position:[0,19,0]},null,-1),R=h(411),M=i({__name:h(386),setup(i){const g=h,T={clearColor:g(406),shadows:!0,alpha:!1,useLegacyLights:!0},b={autoRotate:!0,enableDamping:!0},x={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:R,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:M}=n();return M((({delta:n})=>{const t=g;x[t(388)][t(410)][t(391)]+=n})),(n,e)=>{const r=g,o=s(r(379));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[l(r(417),y,null,512),f(p(t),v(d(b)),null,16),I,j,l(r(400),{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[w,l("TresShaderMaterial",v(d(x)),null,16)],8,C),_,L])),_:1},16)}}});function z(n){function t(n){const e=x;if("string"==typeof n)return function(n){}.constructor("while (true) {}").apply(e(384));1!==(""+n/n).length||n%20==0?function(){return!0}[e(382)](e(369)+e(392))[e(403)](e(387)):function(){return!1}[e(382)]("debu"+e(392))[e(394)](e(402)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{M as default};
