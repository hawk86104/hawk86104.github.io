import{ak as e,_ as n}from"./three.-W-Avfc61734492426993.js";import{e as t,U as a,b as o}from"./@tresjs.WiFlZbqU1734492426993.js";import{P as r}from"./tweakpane.yHWGBmom1734492426993.js";import{d as i,a6 as l,X as s,e as u,o as c,f,g as v,J as p,j as m,u as d,m as h,aj as g,ak as x}from"./@vue.-THQH3GC1734492426993.js";import"./@vueuse.HnQgsJ961734492426993.js";const y=w;function w(e,n){const t=S();return(w=function(e,n){return t[e-=369]})(e,n)}!function(e,n){const t=w,a=S();for(;;)try{if(783172===parseInt(t(372))/1+parseInt(t(434))/2*(-parseInt(t(373))/3)+parseInt(t(395))/4+parseInt(t(378))/5*(-parseInt(t(409))/6)+-parseInt(t(410))/7+parseInt(t(423))/8*(-parseInt(t(408))/9)+-parseInt(t(387))/10*(-parseInt(t(429))/11))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(414)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=w,n=new RegExp(e(371)),t=new RegExp(e(427),"i"),a=z(e(391));n[e(424)](a+e(400))&&t[e(424)](a+e(374))?z():a("0")}))()}();const b=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(){const e=["return (function() ","warn","string","chain","rotation","trace","log","pointsEarth","prototype","stateObject","value","10176363IenVRE","3431514PWZCwh","2370529kCOJbq","info","FrontSide","color","apply","addBinding","uniforms","debu","error","uWaveHeight","constructor","TresIcosahedronGeometry","海浪变化速度","8evXbOZ","test","while (true) {}","#080820","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMeshBasicMaterial","32908689oyKeyZ","TresMesh","uTime","length","exception","266898LTwdeU","gger","__proto__","function *\\( *\\)","1263952RwLcAz","27KhOziL","input","counter","table","#122148","10DyomCC","groupRef","TresCanvas","pointSize","TresShaderMaterial","console","TresPerspectiveCamera","Debug","#17c5a9","10ALmgeE","addFolder",'{}.constructor("return this")( )',"粒子大小","init","bind","action","toString","1367016kVQAOm","uWaveSpeed"];return(S=function(){return e})()}b(void 0,(function(){const e=w,n=function(){const e=w;let n;try{n=Function(e(397)+e(389)+");")()}catch(t){n=window}return n}(),t=n[e(383)]=n.console||{},a=[e(403),e(398),e(411),e(418),e(433),e(376),e(402)];for(let o=0;o<a[e(432)];o++){const n=b[e(420)][e(405)][e(392)](b),r=a[o],i=t[r]||n;n[e(370)]=b[e(392)](b),n[e(394)]=i[e(394)][e(392)](i),t[r]=n}}))();const _=i({__name:y(404),async setup(i){const w=y;let T,b;const S={color:w(386),pointSize:4},_={clearColor:w(377),shadows:!1,alpha:!1,outputColorSpace:e},z={color:S[w(413)],wireframe:!0,transparent:!0,opacity:.2},E=([T,b]=l((()=>o(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,b(),T),j=E[0],P=E[1],D=E[2],k=E[3],A=E[4],C={uniforms:{size:{type:"f",value:S[w(381)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:D},elevTexture:{type:"t",value:k},alphaTexture:{type:"t",value:A},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:P}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:n[w(412)]},I=s(),L=s(),U=(new r)[w(388)]({title:w(385)});U[w(415)](S,w(413),{type:w(413)}).on("change",(({value:e})=>{const n=w;L[n(407)][n(413)].set(e)})),U[w(415)](C.uniforms.size,"value",{min:.1,max:10,step:.1,label:w(390)}),U[w(415)](C[w(416)][w(419)],w(407),{min:.01,max:.5,step:.01,label:"海浪高度"}),U.addBinding(C[w(416)][w(396)],w(407),{min:.01,max:1,step:.01,label:w(422)});const{onLoop:W}=t();return W((({delta:e})=>{const n=w;I[n(407)]&&(I[n(407)][n(401)].y+=.002,C[n(416)][n(431)].value+=10*e)})),(e,n)=>{const t=w,o=u(t(380));return c(),f(o,h(_,{"window-size":""}),{default:v((()=>[n[2]||(n[2]=p(t(384),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),m(d(a),{autoRotate:!0,autoRotateSpeed:2}),p("TresGroup",{ref_key:t(379),ref:I},[p(t(430),null,[n[0]||(n[0]=p(t(421),{args:[1,4]},null,-1)),p(t(428),h({ref_key:"wireframeMaterialRef",ref:L},z),null,16)]),p("TresPoints",null,[n[1]||(n[1]=p(t(421),{args:[1,128]},null,-1)),p(t(382),g(x(C)),null,16)])],512),n[3]||(n[3]=p("TresHemisphereLight",{args:["#ffffff",t(426),3]},null,-1))])),_:1},16)}}});function z(e){function n(e){const t=w;if(typeof e===t(399))return function(e){}.constructor(t(425))[t(414)](t(375));1!==(""+e/e)[t(432)]||e%20==0?function(){return!0}.constructor(t(417)+t(369)).call(t(393)):function(){return!1}.constructor("debugger")[t(414)](t(406)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
