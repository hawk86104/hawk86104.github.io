import{p as n,U as e,z as t,Y as r}from"./@tresjs.ED4ePb8T1728467445434.js";import{W as o,k as i,c7 as s,b_ as a,bY as u,a0 as c,n as f,b6 as l}from"./three.5octV-9b1728467445434.js";import{d as v,a4 as p,a3 as m,o as d,E as h,L as g,u as x,F as w,e as y,f as D,g as b,j as I,al as R,m as S}from"./@vue.JNsx1iN61728467445434.js";import"./@vueuse.G8I04tzi1728467445434.js";const E=P;!function(n,e){const t=P,r=T();for(;;)try{if(123094===-parseInt(t(333))/1*(-parseInt(t(323))/2)+parseInt(t(366))/3+-parseInt(t(324))/4*(parseInt(t(321))/5)+parseInt(t(345))/6+-parseInt(t(342))/7+-parseInt(t(360))/8+parseInt(t(343))/9*(-parseInt(t(332))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(n,e){const t=T();return(P=function(n,e){return t[n-=319]})(n,e)}!function(){_(this,(function(){const n=P,e=new RegExp(n(334)),t=new RegExp(n(320),"i"),r=j(n(355));e.test(r+"chain")&&t[n(336)](r+n(339))?j():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[P(322)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function T(){const n=["354907hZEAsx","621PIRebI","return (function() ","112704eGrTsY","warn","side","uniforms","prototype","bind","__proto__","render","error","tShadow","init","action","console","while (true) {}","width","523560XaxsfY","addPass","exception","log","innerHeight","constructor","517224dbiPhg","toString","gger","value","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","80AoTmcW","apply","311530HNjNxz","19460UxuEpk","material","noiseContourMeshRef1","noiseContourMeshRef2","rotation-x","length","debu",'{}.constructor("return this")( )',"4330VkKmLV","1ePWuMG","function *\\( *\\)","#ffffff","test","derivatives","table","input","TresBoxGeometry","TresMesh"];return(T=function(){return n})()}C(void 0,(function(){const n=P;let e;try{e=Function(n(344)+n(331)+");")()}catch(o){e=window}const t=e[n(357)]=e[n(357)]||{},r=[n(363),n(346),"info",n(353),n(362),n(338),"trace"];for(let i=0;i<r[n(329)];i++){const e=C.constructor[n(349)][n(350)](C),o=r[i],s=t[o]||e;e[n(351)]=C[n(350)](C),e[n(367)]=s[n(367)].bind(s),t[o]=e}}))();const N=[E(347),E(328)],U=[g(E(340),{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:"#ffffff",shininess:0},null,-1)],k=[E(347)],z=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:E(335),shininess:0},null,-1)],A="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",M=v({__name:"noiseContour",async setup(r){const v=E;let y,D;const{camera:b,renderer:I,scene:R,sizes:S}=n(),_=([y,D]=p((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),y=await y,D(),y),{onLoop:P,onAfterLoop:C}=e(),T=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),M=new i(window.innerWidth,window[v(364)]);let j=null;const F=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:M}},vertexShader:A,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),L=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:A,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return L.renderToScreen=!0,L[v(325)].extensions[v(337)]=!0,m((()=>{const n=v;S[n(359)].value&&(j=new a(I[n(369)]),j[n(361)](new u(R[n(369)],b[n(369)])),j[n(361)](F),j[n(361)](L))})),P((({elapsed:n})=>{const e=v;I.value[e(352)](R[e(369)],b.value,T),F[e(348)][e(354)][e(369)]=T.texture,L[e(348)].iTime[e(369)]=n})),C((()=>{j&&j.render()})),(n,e)=>{const t=v;return d(),h(w,null,[g(t(341),{ref:t(327),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},U,8,N),g(t(341),{ref:t(326),side:x(c),position:[0,150,0],"cast-shadow":""},z,8,k)],64)}}});function j(n){function e(n){const t=P;if("string"==typeof n)return function(n){}[t(365)](t(358))[t(322)]("counter");1!==(""+n/n)[t(329)]||n%20==0?function(){return!0}[t(365)]("debu"+t(368))[t(319)](t(356)):function(){return!1}[t(365)](t(330)+t(368))[t(322)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const F=Z;!function(n,e){const t=Z,r=B();for(;;)try{if(201510===-parseInt(t(280))/1+-parseInt(t(270))/2*(-parseInt(t(282))/3)+parseInt(t(274))/4+parseInt(t(286))/5+-parseInt(t(278))/6+parseInt(t(257))/7*(parseInt(t(264))/8)+-parseInt(t(251))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Z(281)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function Z(n,e){const t=B();return(Z=function(n,e){return t[n-=249]})(n,e)}!function(){L(this,(function(){const n=Z,e=new RegExp(n(276)),t=new RegExp(n(262),"i"),r=V("init");e.test(r+n(260))&&t[n(253)](r+n(273))?V():r("0")}))()}();const G=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[Z(281)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function B(){const n=["test","info","stateObject","error","2755879Zqakwz","exception","table","chain","perspectiveCameraRef","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","8dnFsIv","gger","action","TresDirectionalLight","console","length","477706JkUqRd","log","#ffffff","input","518232nAaDFz","debu","function *\\( *\\)","return (function() ","789048JZMYWg","counter","218077bAqxyP","apply","3QaIarQ","constructor","toString","trace","570510zuUywb","while (true) {}","call","2926035GACrKf","warn"];return(B=function(){return n})()}G(void 0,(function(){const n=Z,e=function(){const n=Z;let e;try{e=Function(n(277)+'{}.constructor("return this")( ));')()}catch(t){e=window}return e}(),t=e[n(268)]=e[n(268)]||{},r=[n(271),n(252),n(254),n(256),n(258),n(259),n(285)];for(let o=0;o<r.length;o++){const e=G.constructor.prototype[n(263)](G),i=r[o],s=t[i]||e;e.__proto__=G[n(263)](G),e[n(284)]=s.toString.bind(s),t[i]=e}}))();const W={ref:F(261),position:[600,750,-1221],fov:45,near:1,far:1e4},Y=g("TresAmbientLight",{color:F(272)},null,-1),$=g(F(267),{position:[400,400,400],intensity:1,color:"red"},null,-1),q=v({__name:"noiseContourPage",setup(n){const e={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0};return(n,t)=>{const o=y("TresCanvas");return d(),D(o,S(e,{"window-size":""}),{default:b((()=>[g("TresPerspectiveCamera",W,null,512),I(x(r)),Y,$,(d(),D(R,null,{default:b((()=>[I(M)])),_:1}))])),_:1},16)}}});function V(n){function e(n){const t=Z;if("string"==typeof n)return function(n){}[t(283)](t(249))[t(281)](t(279));1!==(""+n/n)[t(269)]||n%20==0?function(){return!0}[t(283)](t(275)+t(265))[t(250)](t(266)):function(){return!1}[t(283)](t(275)+t(265))[t(281)](t(255)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{q as default};
