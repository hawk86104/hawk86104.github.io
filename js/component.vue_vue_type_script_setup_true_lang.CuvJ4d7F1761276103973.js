import{a2 as e,a1 as a,o as t,bx as r,bB as s,a9 as u,b3 as l,bs as n,bt as o,U as i,aD as d}from"./three.Bhn4-0ry1761276103973.js";import{F as v,_ as c}from"./@tresjs.B_KjVy0E1761276103973.js";import{R as m}from"./three-stdlib.tb53t5ki1761276103973.js";import"./vanilla.esm.5.5.0.CRlEbOMK1761276103973.js";import"./Resource.CSaxGSPI1761276103973.js";import{u as p}from"./useLoader.DWT9Jk041761276103973.js";import{w as h,_ as f,a as _,c as y,u as b,d as g,V as k,ac as w,a4 as x,G as S,H as j,o as A,L as B,ad as D}from"./@vue.CKlgtJke1761276103973.js";class E extends e{constructor(){super(),this.virtualScene=null,this.virtualScene=new a}add(...e){return this.virtualScene.add(...e),this}destructor(){this.virtualScene.traverse(e=>{e instanceof t&&(e.geometry.dispose(),e.material.dispose(),e.material.map&&e.material.map.dispose(),this.virtualScene.remove(e))}),this.virtualScene=null}}const F={sunset:"venice/venice_sunset_1k.hdr",studio:"studio/poly_haven_studio_1k.hdr",city:"city/canary_wharf_1k.hdr",umbrellas:"outdoor/outdoor_umbrellas_1k.hdr",night:"outdoor/satara_night_1k.hdr",forest:"outood/mossy_forest_1k.hdr",snow:"outdoor/snowy_forest_path_01_1k.hdr",dawn:"kiara/kiara_1_dawn_1k.hdr",hangar:"indoor/small_hangar_01_1k.hdr",urban:"indoor/abandoned_games_room_02_1k.hdr",modern:"city/modern_buildings_2_1k.hdr",shangai:"city/shanghai_bund_1k.hdr"};const $=g({__name:"component",props:{background:{type:[Boolean,String],default:!1},blur:{default:0},files:{default:[]},path:{default:""},preset:{default:void 0},resolution:{default:256},near:{default:1},far:{default:1e3},frames:{default:1/0},useDefaultScene:{type:Boolean,default:!1}},async setup(e,{expose:a}){let t,g;const $=e,P=_(null);a({texture:P});const{extend:R,renderer:L,scene:T}=v();let C=null,G=_(null),H=null;const M=_(null);k(()=>{M.value?.destructor(),G.value?.dispose()});const{onBeforeRender:O}=c();let U=1;O(()=>{H&&M.value&&G.value&&($.frames===1/0||U<$.frames)&&($.useDefaultScene?H.update(L,T.value):H.update(L,D(M.value.virtualScene)),U++)});const V=([t,g]=w(()=>async function(e,a){const{scene:t,invalidate:l}=v();h(e,()=>{l()});const{preset:n,blur:o,files:i=_([]),path:d=_(""),background:c}=f(e),g=_(null),k=y(()=>Array.isArray(i.value)),w=y(()=>k.value?r:m);return h([i,d],async([e,a])=>{if(e&&e.length>0&&!n?.value){try{g.value=await p(w.value,k.value?[...b(e)]:b(e),e=>{a&&e.setPath(b(a))})}catch(t){throw new Error(`Failed to load environment map: ${t}`)}g.value&&(g.value.mapping=k.value?s:u),l()}},{immediate:!0}),h(g,e=>{t.value&&e&&(t.value.environment=e)},{immediate:!0}),h([c,g],([e,r])=>{if(t.value){let s=a?.value?a.value.texture:r,u=t.value.background;u?.isColor||(u=void 0),t.value.background=e?s:u}},{immediate:!0}),h(()=>o?.value,e=>{t.value&&e&&(t.value.backgroundBlurriness=e)},{immediate:!0}),h(()=>n?.value,async e=>{if(e&&e in F){const t="https://raw.githubusercontent.com/Tresjs/assets/main/textures/hdr/",r=F[e];try{g.value=await p(m,r,e=>{t&&e.setPath(t)})}catch(a){throw new Error(`Failed to load environment map: ${a}`)}g.value&&g.value&&(g.value.mapping=u),l()}else if(e&&!(e in F))throw new Error(`Preset must be one of: ${Object.keys(F).join(", ")}`)},{immediate:!0}),g}($,G)),t=await t,g(),t),Z=e=>{e?(T.value.environment=e.texture,$.background&&(T.value.background=e.texture)):(T.value.environment=V.value,$.background&&(T.value.background=V.value))};h(V,e=>{G.value&&Z(G.value)},{immediate:!0,deep:!0}),R({EnvSence:E});const q=()=>{G.value?.dispose(),G.value=new n($.resolution),H=new o($.near,$.far,G.value),$.useDefaultScene?(G.value.texture.type=i,G.value.texture.generateMipmaps=!1,G.value.texture.minFilter=d,G.value.texture.magFilter=d):G.value.texture.type=l,Z(G.value)};return h(()=>x().default,e=>{e&&(!G.value||G.value.texture.type!==l)&&(C=e(),Array.isArray(C)&&C.length>0&&"symbol"!=typeof C[0]?.type)?q():(G.value?.dispose(),G.value=null,Z(null))},{immediate:!0,deep:!0}),P.value=V,h(()=>$.useDefaultScene,e=>{G.value&&q()}),(e,a)=>b(G)?(A(),S("TresEnvSence",{key:0,ref_key:"envSence",ref:M},[B(e.$slots,"default")],512)):j("",!0)}});export{$ as _};
