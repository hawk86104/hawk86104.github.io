import{e,U as n}from"./@tresjs.dTM0HLnZ1735031078130.js";import{C as t,_ as o,ak as r}from"./three.bc6MLGU_1735031078130.js";import{P as i}from"./tweakpane.yHWGBmom1735031078130.js";import{d as a,w as l,o as u,D as c,J as s,u as v,r as f,e as p,f as g,g as d,j as y,aj as m,ak as x,m as P}from"./@vue.-THQH3GC1735031078130.js";import"./@vueuse.COyzlgw71735031078130.js";function z(){const e=["uTime","test","uPerlinWaveAmplitude","uColorDamping","uColorOffset","table","5626912cBcfgj","while (true) {}","debu","4890tUTPxR","colorOffset","6dHWzhD","uValleyColor","peakColor","valleyColor","stateObject","TresMesh","Color","sinWaveFrequency","12024ZzqXkY","trace","#b367ff","23brpzdD","uPeakColor","set","uPerlinWaveIterations","uWaveAmplitude","wireframe","perlinWaveSpeed","fragmentShader","exception","perlinWaveFrequency","uSinWaveSpeed","4448255KunRnf","7eCpOhL","action","DoubleSide","gger","apply","string","side","waveC","1618314VRYhfV","uPerlinWaveSpeed","rotation-x","log","11475068dcFpBG","sinWaveSpeed","colorDamping","bind","prototype","constructor","uPerlinWaveFrequency","perlinWaveIterations","toString","#184650","11191208DlmmLe",'{}.constructor("return this")( )',"console","waveAmplitude","setStyle","2792KkpPIU","uSinWaveFrequency","Vector2","value","input","TresShaderMaterial","TresPlaneGeometry"];return(z=function(){return e})()}const W=S;!function(e,n){const t=S,o=z();for(;;)try{if(726816===parseInt(t(182))/1*(-parseInt(t(221))/2)+parseInt(t(202))/3+parseInt(t(166))/4+parseInt(t(193))/5*(-parseInt(t(171))/6)+parseInt(t(194))/7*(parseInt(t(216))/8)+-parseInt(t(179))/9*(parseInt(t(169))/10)+-parseInt(t(206))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(e,n){const t=z();return(S=function(e,n){return t[e-=156]})(e,n)}!function(){w(this,(function(){const e=S,n=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=b("init");n[e(161)](o+"chain")&&t[e(161)](o+e(157))?b():o("0")}))()}();const C=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();C(void 0,(function(){const e=S;let n;try{n=Function("return (function() "+e(217)+");")()}catch(r){n=window}const t=n[e(218)]=n[e(218)]||{},o=[e(205),"warn","info","error",e(190),e(165),e(180)];for(let i=0;i<o.length;i++){const n=C[e(211)][e(210)][e(209)](C),r=o[i],a=t[r]||n;n.__proto__=C.bind(C),n.toString=a[e(214)].bind(a),t[r]=n}}))();const h=[W(204)],I=[W(200),"vertexShader",W(189),W(187)],_=a({__name:W(201),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:W(181)},valleyColor:{default:W(215)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=W,i=n,a={uTime:{value:0},uPeakColor:{value:new t(i[r(173)])},uValleyColor:{value:new(o[r(177)])(i.valleyColor)},uColorOffset:{value:i[r(170)]},uColorDamping:{value:i[r(208)]},uSinWaveFrequency:{value:new(o[r(223)])(i[r(178)].x,i[r(178)].y)},uWaveAmplitude:{value:i[r(219)]},uSinWaveSpeed:{value:new(o[r(223)])(i[r(207)].x,i[r(207)].y)},uPerlinWaveIterations:{value:i[r(213)]},uPerlinWaveFrequency:{value:i[r(191)]},uPerlinWaveAmplitude:{value:i.perlinWaveAmplitude},uPerlinWaveSpeed:{value:i[r(188)]}},{onLoop:f}=e();return f((({elapsed:e})=>{const n=r;a[n(160)][n(156)]=e})),l((()=>i),(()=>{const e=r;a[e(183)][e(156)][e(220)](i.peakColor),a[e(172)][e(156)][e(220)](i[e(174)]),a[e(164)][e(156)]=i[e(170)],a[e(163)][e(156)]=i.colorDamping,a[e(222)][e(156)][e(184)](i[e(178)].x,i[e(178)].y),a[e(186)][e(156)]=i[e(219)],a[e(192)][e(156)].set(i.sinWaveSpeed.x,i.sinWaveSpeed.y),a[e(185)][e(156)]=i[e(213)],a[e(212)].value=i.perlinWaveFrequency,a[e(162)][e(156)]=i.perlinWaveAmplitude,a[e(203)][e(156)]=i[e(188)]}),{deep:!0}),(e,n)=>{const t=r;return u(),c(t(176),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=s(t(159),{args:[10,10,512,512]},null,-1)),s(t(158),{side:o[t(196)],vertexShader:v("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:v("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[t(187)]},null,8,I)],8,h)}}});function b(e){function n(e){const t=S;if(typeof e===t(199))return function(e){}[t(211)](t(167))[t(198)]("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(211)](t(168)+t(197)).call(t(195)):function(){return!1}[t(211)](t(168)+t(197))[t(198)](t(175)),n(++e)}try{if(e)return n;n(0)}catch(t){}}!function(e,n){const t=F,o=k();for(;;)try{if(391613===parseInt(t(204))/1*(parseInt(t(212))/2)+parseInt(t(187))/3*(parseInt(t(209))/4)+parseInt(t(173))/5*(-parseInt(t(216))/6)+parseInt(t(183))/7+-parseInt(t(202))/8*(-parseInt(t(180))/9)+-parseInt(t(186))/10+-parseInt(t(170))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(220)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(e,n){const t=k();return(F=function(e,n){return t[e-=159]})(e,n)}!function(){A(this,(function(){const e=F,n=new RegExp(e(198)),t=new RegExp(e(174),"i"),o=j(e(164));n[e(167)](o+e(191))&&t.test(o+e(185))?j():o("0")}))()}();const q=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(220)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function k(){const e=["perlinWaveAmplitude","18lCOEdg","perlinWaveFrequency","TresCanvas","exception","山峰颜色","1608036bHzXUb","console","NoToneMapping","75518pJCMcU","peakColor","#ff6767","wireframe","6hxFRoX","colorOffset","#222","table","apply","action","小波浪速度","小波浪幅度","sinWaveFrequency","BasicShadowMap","constructor","counter","颜色抑制","toString","init","#310039","warn","test","bind","debu","7581266SFIwdO",'{}.constructor("return this")( )',"TresGridHelper","873445IyBsgM","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","prototype","while (true) {}","正弦波速度","正弦波振幅","waveAmplitude","12501sWHLxw","valleyColor","sinWaveSpeed","5208070jtAEYw","addBinding","input","7271300WanAoe","3neFIaX","正弦波频率","info","error","chain","山谷颜色","length","perlinWaveSpeed","call","log","perlinWaveIterations","function *\\( *\\)","gger","网格化","__proto__","904ujqFde"];return(k=function(){return e})()}q(void 0,(function(){const e=F;let n;try{n=Function("return (function() "+e(171)+");")()}catch(r){n=window}const t=n[e(210)]=n.console||{},o=[e(196),e(166),e(189),e(190),e(207),e(219),"trace"];for(let i=0;i<o[e(193)];i++){const n=q.constructor[e(175)][e(168)](q),r=o[i],a=t[r]||n;n[e(201)]=q[e(168)](q),n.toString=a[e(163)].bind(a),t[r]=n}}))();const T=a({__name:"waveC",setup(e){const t=F,a={clearColor:t(218),shadows:!0,alpha:!1,shadowMapType:o[t(159)],outputColorSpace:r,toneMapping:o[t(211)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:t(214),valleyColor:t(165),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c.addBinding(l,t(215),{label:t(200)}),c[t(184)](l,t(213),{label:t(208)}),c.addBinding(l,t(181),{label:t(192)}),c[t(184)](l,t(217),{label:"颜色偏移",min:.01,max:3,step:.01}),c[t(184)](l,"colorDamping",{label:t(162),min:.01,max:6,step:.01}),c.addBinding(l,t(224),{label:t(188),picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c[t(184)](l,t(179),{label:t(178),min:0,max:2,step:.01}),c[t(184)](l,t(182),{label:t(177),picker:"inline",x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c[t(184)](l,t(197),{label:"小波浪层数",min:1,max:7,step:.1}),c[t(184)](l,t(205),{label:"小波浪频率",min:0,max:5,step:.01}),c[t(184)](l,t(203),{label:t(223),min:0,max:2,step:.01}),c.addBinding(l,t(194),{label:t(222),min:0,max:2,step:.01}),(e,o)=>{const r=t,i=p(r(206));return u(),g(i,P(a,{"window-size":""}),{default:d((()=>[o[0]||(o[0]=s("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),y(v(n)),o[1]||(o[1]=s(r(172),{args:[10,10]},null,-1)),y(_,m(x(l)),null,16)])),_:1},16)}}});function j(e){function n(e){const t=F;if("string"==typeof e)return function(e){}[t(160)](t(176)).apply(t(161));1!==(""+e/e)[t(193)]||e%20==0?function(){return!0}.constructor(t(169)+t(199))[t(195)](t(221)):function(){return!1}.constructor(t(169)+t(199))[t(220)]("stateObject"),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{T as default};
