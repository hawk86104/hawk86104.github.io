import{m as e,e as o}from"./@tresjs.Cox_Ej0K1757562434473.js";import{a as t,b as i}from"./utils.DiuuUsQy1757562434473.js";import{z as a}from"./three-custom-shader-material.Bhmd8dgL1757562434473.js";import{cD as r,a3 as n,C as l,bD as s,az as u,cC as d,cE as m}from"./three.CMHPKQCP1757562434473.js";import{T as f}from"./3d-tiles-renderer.B-A5aZam1757562434473.js";import{d as p,w as c,G as v,o as h,I as C,u as g}from"./@vue.pEDXJ_3Z1757562434473.js";const y=["rotation-x"],w=["object"],x=p({__name:"tilesCom",props:{tilesUrl:{default:"./plugins/geokit/tiles/tileset.json"},isRotation:{type:Boolean,default:!0},isRranslation:{type:Boolean,default:!0},bulidingsColor:{default:"#e523ff"},topColor:{default:"#ffff00"},lightColor:{default:"#ffffff"},borderWidth:{default:5},opacity:{default:.8},gradient:{type:Boolean,default:!0},speed:{default:1},lineOpacity:{default:1},linewidth:{default:1},lineColor:{default:"#000000"}},setup(p){const x=p,b={value:0},M=new r({color:x.lineColor,linewidth:x.linewidth,opacity:x.lineOpacity,transparent:!0,depthWrite:!1,depthTest:!0});M.resolution.set(window.innerWidth,window.innerHeight);const T=({scene:e})=>{e.traverse((e=>{e.isMesh&&e.material&&((e=>{e.userData.builds=!0;const{geometry:o}=e;o.computeBoundingBox(),o.computeBoundingSphere();const{max:t,min:i}=o.boundingBox,r=new a({baseMaterial:new s,vertexShader:"varying vec3 vPosition;\nvoid main(){\n\t\n\tvPosition = position;\n\tcsm_Position=position*vec3(1.);\n}",fragmentShader:"varying vec3 vPosition; \nuniform vec3 uMax;      \nuniform vec3 uMin;      \nuniform float uOpacity;\nuniform float uBorderWidth;\nuniform vec3 uLightColor;\nuniform vec3 uColor;\nuniform float uCircleTime;\nuniform float uTime;\nuniform vec3 uTopColor; \nuniform bool uGradient;\n\nvoid main() {\n  vec3 distColor = uColor;\n\n  \n  float residue = mod(uTime, uCircleTime);\n  float rate = residue / uCircleTime;\n  float lightOffset = rate * (uMax.z - uMin.z);\n\n  if (uMin.z + lightOffset < vPosition.z &&\n      uMin.z + lightOffset + uBorderWidth > vPosition.z) {\n    csm_DiffuseColor = vec4(uLightColor, uOpacity);\n  } else {\n    csm_DiffuseColor = vec4(distColor, uOpacity);\n  }\n\n  \n  if (uGradient) {\n    float rateHeight = (vPosition.z - uMin.z) / (uMax.z - uMin.z);\n    float mixNumber = clamp(rateHeight * 2.3 - 1.5, 0.1, 1.);\n    vec3 outColor = mix(csm_DiffuseColor.xyz, uTopColor, mixNumber);\n    csm_DiffuseColor = vec4(outColor, uOpacity);\n  }\n}",silent:!0,uniforms:{uMax:{value:t},uMin:{value:i},uBorderWidth:{value:x.borderWidth},uCircleTime:{value:5},uColor:{value:new l(x.bulidingsColor)},uOpacity:{value:x.opacity},uLightColor:{value:new l(x.lightColor)},uTopColor:{value:new l(x.topColor)},uTime:b,uGradient:{value:x.gradient}},depthWrite:!0,depthTest:!0,transparent:!0,side:n});e.material.dispose(),e.material=r})(e),(e=>{const o=new u(e.geometry.clone());let t=(new d).fromEdgesGeometry(o);const i=new m(t,M);i.userData.lines=!0,i.applyMatrix4(e.matrix.clone()),e.parent.add(i)})(e))}))},{camera:z,renderer:O,sizes:B}=e(),D=(e,o,t)=>{e.setCamera(o),e.setResolutionFromRenderer(o,t)},R=()=>{let e=new f(x.tilesUrl);return e.fetchOptions.mode="cors",e.errorTarget=12,e.addEventListener("load-model",T),e.addEventListener("load-tile-set",(()=>{i(e,x.isRotation,x.isRranslation)})),e.addEventListener("dispose-model",(({scene:e})=>{e.traverse((e=>{e.material&&e.material.dispose(),e.userData&&e.userData.lines&&(e.geometry.dispose(),e.material.dispose())}))})),D(e,z.value,O.value),e};let W=R();c(z,(()=>{z.value&&D(W,z.value,O.value)}),{immediate:!0});const{onBeforeLoop:j}=o();return j((({delta:e})=>{z.value&&B.width.value&&W.update&&(z.value.updateMatrixWorld(),W.update(),b.value+=e*x.speed)})),c((()=>[x.bulidingsColor,x.topColor,x.lightColor,x.borderWidth,x.opacity,x.gradient]),(([e,o,t,i,a])=>{W.group.traverse((r=>{r.isMesh&&r.userData&&r.userData.builds&&(r.material.uniforms.uColor.value.set(e),r.material.uniforms.uTopColor.value.set(o),r.material.uniforms.uLightColor.value.set(t),r.material.uniforms.uBorderWidth.value=i,r.material.uniforms.uOpacity.value=a,r.material.uniforms.uGradient.value=x.gradient,r.material.needsUpdate=!0)}))})),c((()=>[x.lineColor,x.linewidth,x.lineOpacity]),(([e,o,t])=>{M.color.set(e),M.linewidth=o,M.opacity=t,M.needsUpdate=!0})),c((()=>x.tilesUrl),(e=>{e!==W.rootURL&&(W.dispose(),W=R())})),c((()=>[x.isRotation,x.isRranslation]),(()=>{W.group&&t(W.group,x.isRotation,x.isRranslation)})),(e,o)=>(h(),v("TresGroup",{"rotation-x":e.isRotation?-Math.PI/2:0},[C("primitive",{object:g(W).group},null,8,w)],8,y))}});export{x as _};
