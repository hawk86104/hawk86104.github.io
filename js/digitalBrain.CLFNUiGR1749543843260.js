import{c9 as s,ap as a,as as o,c7 as e}from"./three.kJWQzRuG1749543843260.js";import{a as t}from"./@tresjs.B7HgpUgk1749543843260.js";import{P as i}from"./tweakpane.C0HtAJSg1749543843260.js";import"./index.C4limgAo1749543843260.js";import{l}from"./util.t83ryfGW1749543843260.js";import{_ as r}from"./cloudPoints.vue_vue_type_script_setup_true_lang.N1b4WYDQ1749543843260.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.CAABNPx41749543843260.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.Co9tHeHm1749543843260.js";import{d as m,r as u,a3 as c,h as j,G as g,o as f,j as _,u as b,f as h,I as w,ak as y,al as v,e as B,H as k,m as x,am as L,F as T}from"./@vue.Mugdq9o81749543843260.js";import"./postprocessing.BNwMO2k31749543843260.js";import"./@vueuse.CFMnmcVj1749543843260.js";import"./utils.B8fZpjFO1749543843260.js";import"./@fesjs.GF0e4gCn1749543843260.js";import"./vue-router.ChKX7qjM1749543843260.js";import"./lodash-es.C7pWAXPe1749543843260.js";import"./@qlin.q6OWdsQV1749543843260.js";import"./pinia.DjOwqdUM1749543843260.js";import"./@babel.BPq7uOAK1749543843260.js";import"./@floating-ui.BFjFSAYt1749543843260.js";import"./@juggle.CcBCnTIR1749543843260.js";import"./index.vp_O5Gcy1749543843260.js";import"./three-mesh-ui.module.CKDdo_bo1749543843260.js";import"./starLoading.7opMa-Cp1749543843260.js";import"./cssLoaders.GVjh2sUj1749543843260.js";import"./bubbleLoading.CuuVRHr01749543843260.js";import"./yangyangLoading.Dd5RhJia1749543843260.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,P;const H=u({color:"#fff",show:!0,opacity:1}),M=new i({title:"参数"});M.addBinding(H,"show",{label:"点云显示"}),M.addBinding(H,"color",{label:"点云颜色"}),M.addBinding(H,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const R=u({color:"#84ccff",show:!0,opacity:1});M.addBinding(R,"show",{label:"脑轮廓显示"}),M.addBinding(R,"color",{label:"脑轮廓颜色"}),M.addBinding(R,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const S=u({color:"#9e00af",show:!0,opacity:1});M.addBinding(S,"show",{label:"脑组织显示"}),M.addBinding(S,"color",{label:"脑组织颜色"}),M.addBinding(S,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const q=new s,z=([G,P]=c((()=>l("./plugins/medical/model/brainparts.OBJ",q))),G=await G,P(),G),A=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a}),E=u({autoRotate:!0,autoRotateSpeed:2});return(s,a)=>{const o=j("TresCanvas");return f(),g(T,null,[_(b(d)),_(o,x(A,{"window-size":""}),{default:h((()=>[a[0]||(a[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),_(b(t),y(v(E)),null,16),a[1]||(a[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",C,[H.show?(f(),B(r,x({key:0,model:b(z)},H),null,16,["model"])):k("",!0),(f(),B(L,null,{default:h((()=>[R.show?(f(),B(n,x({key:0,model:b(z)},R),null,16,["model"])):k("",!0)])),_:1})),S.show?(f(),B(p,x({key:1,model:b(z)},S),null,16,["model"])):k("",!0)]),a[2]||(a[2]=w("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
