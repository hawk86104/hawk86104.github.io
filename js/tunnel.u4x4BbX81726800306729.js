import{U as n,Y as t}from"./@tresjs.pv1MNfNv1726800306729.js";import{a0 as e,aL as r}from"./three.ZddO3ejJ1726800306729.js";import{_ as o}from"./argestCircle.iQbYZf4A1726800306729.js";import{d as i,e as s,o as a,f as u,g as c,L as f,j as l,u as p,aj as v,ak as d,m}from"./@vue.bvMz0l_u1726800306729.js";import"./@vueuse.bZHkTEeA1726800306729.js";const g=x;!function(n,t){const e=x,r=T();for(;;)try{if(781363===parseInt(e(140))/1+-parseInt(e(136))/2+-parseInt(e(124))/3+parseInt(e(141))/4*(-parseInt(e(149))/5)+-parseInt(e(135))/6+-parseInt(e(155))/7*(parseInt(e(134))/8)+parseInt(e(133))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function T(){const n=["uTime","__proto__","debu","TresCanvas","4242486HHRYmX","TresPerspectiveCamera","call","log","info","TresAmbientLight","test","prototype","gger","45241353CUQLgo","1879464XKdaiw","3865032iBUbGd","3059812UivckD","input","TresGridHelper","while (true) {}","1043059TqIpgW","1051216uBgzvS","bind","perspectiveCameraRef","length","tunnel","#ffffff","TresDirectionalLight","stateObject","10QvdFSy","string","apply","TresPlaneGeometry","action","constructor","35jshLWR","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","trace","exception","chain","toString","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#000000","function *\\( *\\)","init"];return(T=function(){return n})()}!function(){h(this,(function(){const n=x,t=new RegExp(n(118)),e=new RegExp(n(116),"i"),r=U(n(119));t[n(130)](r+n(159))&&e.test(r+n(137))?U():r("0")}))()}();const b=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[x(151)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function x(n,t){const e=T();return(x=function(n,t){return e[n-=114]})(n,t)}b(void 0,(function(){const n=x,t=function(){const n=x;let t;try{t=Function(n(115)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t.console=t.console||{},r=[n(127),"warn",n(128),"error",n(158),"table",n(157)];for(let o=0;o<r[n(144)];o++){const t=b.constructor[n(131)][n(142)](b),i=r[o],s=e[i]||t;t[n(121)]=b.bind(b),t[n(114)]=s[n(114)].bind(s),e[i]=t}}))();const y={ref:g(143),position:[600,750,-1221],fov:45,near:1,far:1e4},j=f(g(129),{color:"#ffffff"},null,-1),w=f(g(147),{position:[100,100,0],intensity:.5,color:g(146)},null,-1),I=["rotation-x"],_=f(g(152),{args:[1e3,1e3]},null,-1),C=f("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1),L=f(g(138),{args:[6e3,100],position:[0,19,0]},null,-1),R=g(156),S=i({__name:g(145),setup(i){const h=g,T={clearColor:h(117),shadows:!0,alpha:!1,useLegacyLights:!0},b={autoRotate:!0,enableDamping:!0},x={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:R,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:S}=n();return S((({delta:n})=>{const t=h;x.uniforms[t(120)].value+=n})),(n,e)=>{const r=h,o=s(r(123));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[f(r(125),y,null,512),l(p(t),v(d(b)),null,16),j,w,f("TresMesh",{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[_,f("TresShaderMaterial",v(d(x)),null,16)],8,I),C,L])),_:1},16)}}});function U(n){function t(n){const e=x;if(typeof n===e(150))return function(n){}[e(154)](e(139))[e(151)]("counter");1!==(""+n/n)[e(144)]||n%20==0?function(){return!0}.constructor(e(122)+e(132))[e(126)](e(153)):function(){return!1}.constructor(e(122)+e(132))[e(151)](e(148)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as default};
