import{e,o as n}from"./@tresjs.8SAr0PX_1741857949183.js";import{_ as t,V as o,a0 as r,am as i}from"./three.Gi_-4zeu1741857949183.js";import{P as a}from"./tweakpane.yDiyAAkA1741857949183.js";import{d as l,w as u,o as c,H as s,N as v,u as f,r as p,e as g,f as m,g as y,j as d,aj as x,ak as P,m as z}from"./@vue.NRI7TcgI1741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";const W=C;!function(e,n){const t=C,o=_();for(;;)try{if(785789===parseInt(t(129))/1*(parseInt(t(171))/2)+parseInt(t(136))/3+parseInt(t(151))/4*(parseInt(t(133))/5)+-parseInt(t(175))/6+-parseInt(t(122))/7*(parseInt(t(148))/8)+parseInt(t(162))/9+-parseInt(t(124))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(163)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){w(this,(function(){const e=C,n=new RegExp(e(144)),t=new RegExp(e(126),"i"),o=A("init");n.test(o+"chain")&&t.test(o+e(132))?A():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(163)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function C(e,n){const t=_();return(C=function(e,n){return t[e-=117]})(e,n)}S(void 0,(function(){const e=C,n=function(){const e=C;let n;try{n=Function(e(135)+e(139)+");")()}catch(t){n=window}return n}(),t=n[e(157)]=n.console||{},o=["log",e(119),"info",e(167),"exception","table","trace"];for(let r=0;r<o[e(159)];r++){const n=S[e(123)][e(169)][e(170)](S),i=o[r],a=t[i]||n;n.__proto__=S.bind(S),n[e(141)]=a[e(141)][e(170)](a),t[i]=n}}))();const h=[W(156)],I=["side",W(137),W(152),"wireframe"];function _(){const e=["uTime","4933992oHYuTm","Vector2","wireframe","warn","uPeakColor","#184650","21vHkIec","constructor","8678870JTWjBD","perlinWaveIterations","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","setStyle","debu","1hmNSyP","string","uSinWaveSpeed","input","1465TFDUOJ","peakColor","return (function() ","4064676HSkSPq","vertexShader","set",'{}.constructor("return this")( )',"TresMesh","toString","#b367ff","perlinWaveSpeed","function *\\( *\\)","uColorDamping","value","gger","2094376CkrOSF","sinWaveSpeed","stateObject","9700RRZyMV","fragmentShader","while (true) {}","TresShaderMaterial","uValleyColor","rotation-x","console","perlinWaveFrequency","length","valleyColor","waveAmplitude","3272814TjGMVO","apply","sinWaveFrequency","colorDamping","uSinWaveFrequency","error","TresPlaneGeometry","prototype","bind","1664672OwcBJg","Color","colorOffset"];return(_=function(){return e})()}const b=l({__name:"waveC",props:{wireframe:{type:Boolean,default:!1},peakColor:{default:W(142)},valleyColor:{default:W(121)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const i=W,a=n,l={uTime:{value:0},uPeakColor:{value:new(t[i(172)])(a.peakColor)},uValleyColor:{value:new(t[i(172)])(a.valleyColor)},uColorOffset:{value:a[i(173)]},uColorDamping:{value:a[i(165)]},uSinWaveFrequency:{value:new(t[i(117)])(a[i(164)].x,a[i(164)].y)},uWaveAmplitude:{value:a.waveAmplitude},uSinWaveSpeed:{value:new o(a[i(149)].x,a.sinWaveSpeed.y)},uPerlinWaveIterations:{value:a[i(125)]},uPerlinWaveFrequency:{value:a[i(158)]},uPerlinWaveAmplitude:{value:a.perlinWaveAmplitude},uPerlinWaveSpeed:{value:a[i(143)]}},{onLoop:p}=e();return p((({elapsed:e})=>{const n=i;l[n(174)][n(146)]=e})),u((()=>a),(()=>{const e=i;l[e(120)][e(146)][e(127)](a[e(134)]),l[e(155)].value[e(127)](a[e(160)]),l.uColorOffset.value=a[e(173)],l[e(145)][e(146)]=a.colorDamping,l[e(166)][e(146)][e(138)](a[e(164)].x,a[e(164)].y),l.uWaveAmplitude[e(146)]=a[e(161)],l[e(131)][e(146)].set(a[e(149)].x,a[e(149)].y),l.uPerlinWaveIterations[e(146)]=a[e(125)],l.uPerlinWaveFrequency[e(146)]=a[e(158)],l.uPerlinWaveAmplitude[e(146)]=a.perlinWaveAmplitude,l.uPerlinWaveSpeed[e(146)]=a.perlinWaveSpeed}),{deep:!0}),(e,n)=>{const t=i;return c(),s(t(140),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v(t(168),{args:[10,10,512,512]},null,-1)),v(t(154),{side:r,vertexShader:f("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:f("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:l,wireframe:e[t(118)]},null,8,I)],8,h)}}});function A(e){function n(e){const t=C;if(typeof e===t(130))return function(e){}[t(123)](t(153)).apply("counter");1!==(""+e/e).length||e%20==0?function(){return!0}[t(123)](t(128)+t(147)).call("action"):function(){return!1}.constructor("debu"+t(147)).apply(t(150)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const F=q;!function(e,n){const t=q,o=T();for(;;)try{if(102140===-parseInt(t(119))/1*(-parseInt(t(144))/2)+parseInt(t(154))/3+-parseInt(t(122))/4*(-parseInt(t(126))/5)+-parseInt(t(150))/6*(parseInt(t(138))/7)+parseInt(t(116))/8*(-parseInt(t(143))/9)+parseInt(t(145))/10*(-parseInt(t(133))/11)+parseInt(t(153))/12)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[q(168)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function q(e,n){const t=T();return(q=function(e,n){return t[e-=112]})(e,n)}function T(){const e=["31568yAceSi","正弦波频率","BasicShadowMap","125639kCsdHe","正弦波振幅","constructor","332jCGWvF","stateObject","function *\\( *\\)","error","925Qobcsm","bind","call",'{}.constructor("return this")( )',"waveC","inline","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","165ycCLrI","debu","perlinWaveAmplitude","正弦波速度","gger","7jOuHoK","小波浪幅度","perlinWaveIterations","小波浪频率","exception","306PbPvfD","2PQVXUN","45030gRFNoy","counter","__proto__","#310039","init","36168WhnJPn","test","山峰颜色","314244bBgwgZ","428088BoFZgU","toString","网格化","input","colorOffset","颜色抑制","SRGBColorSpace","TresCanvas","颜色偏移","while (true) {}","length","prototype","peakColor","table","apply","小波浪层数","log","addBinding","TresGridHelper","info","console","string","waveAmplitude","#222"];return(T=function(){return e})()}!function(){k(this,(function(){const e=q,n=new RegExp(e(124)),t=new RegExp(e(132),"i"),o=M(e(149));n[e(151)](o+"chain")&&t[e(151)](o+e(157))?M():o("0")}))()}();const j=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[q(168)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();j(void 0,(function(){const e=q;let n;try{n=Function("return (function() "+e(129)+");")()}catch(r){n=window}const t=n[e(112)]=n[e(112)]||{},o=[e(170),"warn",e(173),e(125),e(142),e(167),"trace"];for(let i=0;i<o[e(164)];i++){const n=j[e(121)][e(165)][e(127)](j),r=o[i],a=t[r]||n;n[e(147)]=j.bind(j),n[e(155)]=a[e(155)].bind(a),t[r]=n}}))();const O=l({__name:F(130),setup(e){const o=F,r={clearColor:o(115),shadows:!0,alpha:!1,shadowMapType:t[o(118)],outputColorSpace:t[o(160)],toneMapping:i,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=p({peakColor:"#ff6767",valleyColor:o(148),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),u=new a({title:"参数",expanded:!0});return u[o(171)](l,"wireframe",{label:o(156)}),u[o(171)](l,o(166),{label:o(152)}),u[o(171)](l,"valleyColor",{label:"山谷颜色"}),u[o(171)](l,o(158),{label:o(162),min:.01,max:3,step:.01}),u[o(171)](l,"colorDamping",{label:o(159),min:.01,max:6,step:.01}),u[o(171)](l,"sinWaveFrequency",{label:o(117),picker:o(131),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),u[o(171)](l,o(114),{label:o(120),min:0,max:2,step:.01}),u[o(171)](l,"sinWaveSpeed",{label:o(136),picker:o(131),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),u[o(171)](l,o(140),{label:o(169),min:1,max:7,step:.1}),u[o(171)](l,"perlinWaveFrequency",{label:o(141),min:0,max:5,step:.01}),u[o(171)](l,o(135),{label:o(139),min:0,max:2,step:.01}),u[o(171)](l,"perlinWaveSpeed",{label:"小波浪速度",min:0,max:2,step:.01}),(e,t)=>{const i=o,a=g(i(161));return c(),m(a,z(r,{"window-size":""}),{default:y((()=>[t[0]||(t[0]=v("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),d(f(n)),t[1]||(t[1]=v(i(172),{args:[10,10]},null,-1)),d(b,x(P(l)),null,16)])),_:1},16)}}});function M(e){function n(e){const t=q;if(typeof e===t(113))return function(e){}[t(121)](t(163))[t(168)](t(146));1!==(""+e/e)[t(164)]||e%20==0?function(){return!0}[t(121)](t(134)+"gger")[t(128)]("action"):function(){return!1}[t(121)](t(134)+t(137)).apply(t(123)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{O as default};
