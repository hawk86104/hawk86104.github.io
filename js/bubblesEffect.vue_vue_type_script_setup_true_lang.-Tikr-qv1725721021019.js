import{a6 as n,cl as t,bV as e,aK as o,h as i,ay as r}from"./three.a9V66irq1725721021019.js";import{p as a,$ as s,N as l}from"./@tresjs.bIWdfO9a1725721021019.js";import{d as u,b as c,a5 as f,a2 as p,o as m,E as g,L as b,aj as v,ak as y,u as d}from"./@vue._6MD2XyK1725721021019.js";const h=z;!function(n,t){const e=z,o=T();for(;;)try{if(709972===-parseInt(e(343))/1*(parseInt(e(344))/2)+-parseInt(e(353))/3+-parseInt(e(350))/4+parseInt(e(358))/5*(parseInt(e(364))/6)+parseInt(e(347))/7*(-parseInt(e(398))/8)+parseInt(e(386))/9*(-parseInt(e(352))/10)+parseInt(e(363))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(393)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=z,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(396),"i"),o=S(n(365));t[n(375)](o+"chain")&&e[n(375)](o+n(359))?S():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=T();return(z=function(n,t){return e[n-=339]})(n,t)}_(void 0,(function(){const n=z;let t;try{t=Function(n(370)+n(390)+");")()}catch(i){t=window}const e=t.console=t[n(373)]||{},o=[n(381),n(385),n(366),n(355),n(356),n(346),n(340)];for(let r=0;r<o.length;r++){const t=_[n(339)][n(380)].bind(_),i=o[r],a=e[i]||t;t[n(389)]=_.bind(_),t[n(387)]=a[n(387)][n(371)](a),e[i]=t}}))();const x=b(h(383),null,null,-1);function T(){const n=["init","info","traverse","AdditiveBlending","TresShaderMaterial","return (function() ","bind","counter","console","length","test","push","debu","Mesh","geometry","prototype","log","dispose","TresBufferGeometry","offsetY","warn","189306kuYomy","toString","TresMeshRef","__proto__",'{}.constructor("return this")( )',"uOpacity","stateObject","apply","glowColor","value","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","while (true) {}","2824yGYkLg","uniforms","call","constructor","trace","opacity","uTime","3jIZssz","85086glZdCf","TresMesh","table","15631nxYvwi","mergeGeometries","position","2367448tzDgHZ","action","560iBkHQl","481788JPvUdi","Color","error","exception","color","123100mYgneE","input","xRayEffect","DoubleSide","gger","38305872CwEhSO","18CeThOT"];return(T=function(){return n})()}const P=u({__name:h(360),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(e){const o=h;let i,r;const u=e,d=c(),w=[];u.model[o(367)]((t=>{const e=o;t instanceof n[e(378)]&&(t.geometry.verticesNeedUpdate=!0,w[e(376)](t.geometry))}));const _=([i,r]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),i=await i,r(),i),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[o(354)])(u[o(357)])},lightningTexture:{type:"t",value:_.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:u[o(341)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[o(361)],blending:n[o(368)],depthWrite:!1};z.uniforms[o(384)][o(395)]=Math.sin(5);const{camera:T}=a(),{onLoop:P}=s();return P((({delta:n})=>{const t=o;T.value[t(349)]&&d[t(395)]&&(z.uniforms[t(342)].value+=n)})),p((()=>{const e=o;d.value&&(d[e(395)].geometry[e(382)](),d[e(395)][e(379)]=t[e(348)](w)),u[e(357)]&&(z.uniforms[e(394)][e(395)]=new(n[e(354)])(u[e(357)])),u[e(341)]&&(z[e(399)][e(391)][e(395)]=u[e(341)])})),(n,t)=>{const e=o;return m(),g(e(345),{ref_key:e(388),ref:d},[x,b(e(369),v(y(z)),null,16)],512)}}});function S(n){function t(n){const e=z;if("string"==typeof n)return function(n){}[e(339)](e(397)).apply(e(372));1!==(""+n/n)[e(374)]||n%20==0?function(){return!0}[e(339)](e(377)+"gger")[e(400)](e(351)):function(){return!1}[e(339)]("debu"+e(362))[e(393)](e(392)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const I=U;!function(n,t){const e=U,o=B();for(;;)try{if(686533===-parseInt(e(217))/1*(parseInt(e(173))/2)+parseInt(e(185))/3*(-parseInt(e(200))/4)+-parseInt(e(181))/5*(-parseInt(e(152))/6)+parseInt(e(218))/7*(parseInt(e(159))/8)+parseInt(e(171))/9+-parseInt(e(224))/10+parseInt(e(191))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(180)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=U,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(213),"i"),o=j(n(212));t.test(o+n(204))&&e[n(154)](o+n(220))?j():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[U(180)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function U(n,t){const e=B();return(U=function(n,t){return e[n-=148]})(n,t)}function B(){const n=["uOpacity","stateObject","bubbles","attributes","12237599hNWNTF","while (true) {}","computeBoundingSphere","#FFF","model","counter",'{}.constructor("return this")( )',"trace","TresBufferGeometry","16cftoLU","string","error","warn","chain","gger","log","call","info","Mesh","name","setAttribute","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uniforms","geometry","uSlowTime","1015806BRablt","7084WGsUUA","opacity","input","BufferGeometryRef","MathUtils","DoubleSide","4712060JIVWut","brainstem","Color","cerebellum","length","18gqooks","value","test","action","color","randFloat","episodic","1304EqbkTW","process","afective","glowColor","push","table","amigdala","uTime","Float32BufferAttribute","prototype","bind","toString","4967352nrmrJl","return (function() ","2XTEIgB","TresMeshRef","material","includes","ShaderMaterial","bridge","array","apply","1202460AKjgWl","position","exception","constructor","282993NrvhHY","__proto__"];return(B=function(){return n})()}M(void 0,(function(){const n=U;let t;try{t=Function(n(172)+n(197)+");")()}catch(i){t=window}const e=t.console=t.console||{},o=[n(206),n(203),n(208),n(202),n(183),n(164),n(198)];for(let r=0;r<o.length;r++){const t=M[n(184)][n(168)][n(169)](M),i=o[r],a=e[i]||t;t[n(186)]=M[n(169)](M),t[n(170)]=a[n(170)][n(169)](a),e[i]=t}}))();const F=u({__name:"bubblesEffect",props:{model:{},color:{default:I(194)},opacity:{default:1}},setup(t){const a=I,l=t,u=[a(161),"semantic",a(158),a(160),a(165),a(148),a(178),a(150),"analitic"],f={};l[a(195)].traverse((t=>{const o=a;t instanceof n[o(209)]&&u.map((n=>{const i=o;if(t[i(210)][i(176)](n)){if(f[n]){const o=[f[n],t[i(215)]];return f[n]=e(o),f}return f[n]=t[i(215)]}return[]}))}));const h=c(),w=new(n[a(177)])({uniforms:{glowColor:{type:"c",value:new(n[a(149)])(l.color)},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l[a(219)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:o,side:n[a(223)],depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h.value&&(()=>{const t=a,e=[],o=[],s=[],l=[];for(let r=0;r<2e4-3*u[t(151)];r+=1){const a=n[t(222)].randInt(0,u[t(151)]-1),c=u[a],p=f[c][t(190)][t(182)][t(179)][3*r+0]||0,m=f[c][t(190)][t(182)][t(179)][3*r+1]||0,g=f[c][t(190)][t(182)][t(179)][3*r+2]||0;if(o[t(163)](p,m,g),e[r]=n[t(222)][t(157)](10,20),r%100==0){const n=i.randInt(100,250)+m;l[t(163)](p,n,g,1)}else l[t(163)](p,m,g,0);s[2*r+0]=n[t(222)][t(157)](.5,1.5),s[2*r+1]=2.5}h[t(153)].setAttribute("aDelayDuration",new r(s,2)),h[t(153)][t(211)](t(189),new(n[t(167)])(l,4)),h[t(153)][t(211)](t(182),new r(o,3)),h[t(153)].setAttribute(t(156),new(n[t(167)])([],3)),h[t(153)][t(211)]("size",new(n[t(167)])(e,1)),h[t(153)][t(193)]()})()}));const _=c(),{onLoop:z}=s();return z((({delta:t})=>{const e=a;_[e(153)]&&(_[e(153)][e(175)][e(214)][e(166)][e(153)]+=.05,_[e(153)][e(175)][e(214)][e(216)].value+=1/400),l[e(156)]&&(w.uniforms[e(162)].value=new(n[e(149)])(l.color)),l[e(219)]&&(w[e(214)][e(187)][e(153)]=l[e(219)])})),(n,t)=>{const e=a;return m(),g("TresPoints",{ref_key:e(174),ref:_},[b(e(199),{ref_key:e(221),ref:h},null,512),b("TresShaderMaterial",v(y(d(w))),null,16)],512)}}});function j(n){function t(n){const e=U;if(typeof n===e(201))return function(n){}[e(184)](e(192)).apply(e(196));1!==(""+n/n)[e(151)]||n%20==0?function(){return!0}[e(184)]("debugger")[e(207)](e(155)):function(){return!1}.constructor("debu"+e(205))[e(180)](e(188)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,F as a};
