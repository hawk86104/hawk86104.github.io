import{u as t,_ as n,a as o}from"./mergeTres.zw0M7YtM1732177334649.js";import{l as r}from"./utils.9G0q9eRY1732177334649.js";import{e}from"./@tresjs.ty5XF8T_1732177334649.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.-THQH3GC1732177334649.js";import{_ as C}from"./@fesjs.jFXTKHIV1732177334649.js";import"./@amap.IbXCphpR1732177334649.js";import"./pinia.gDmc4Bet1732177334649.js";import"./vue-demi.C4xddsk91732177334649.js";import"./three.rV-MfnQb1732177334649.js";import"./three-mesh-bvh.sWE2ZLZZ1732177334649.js";import"./@vueuse.n223N0GC1732177334649.js";import"./vue-router.mzGhX2Y31732177334649.js";import"./lodash-es.kYt-_xTG1732177334649.js";import"./@qlin.yHhFDldE1732177334649.js";import"./@floating-ui.BPbuo5Gx1732177334649.js";import"./@juggle.7yjBMqoW1732177334649.js";const y=b;!function(t,n){const o=b,r=z();for(;;)try{if(162248===parseInt(o(446))/1+-parseInt(o(468))/2+-parseInt(o(465))/3*(parseInt(o(434))/4)+-parseInt(o(422))/5+-parseInt(o(415))/6*(-parseInt(o(432))/7)+parseInt(o(436))/8*(parseInt(o(445))/9)+parseInt(o(430))/10*(-parseInt(o(452))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(423)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=b,n=new RegExp(t(453)),o=new RegExp(t(462),"i"),r=j(t(460));n.test(r+t(440))&&o[t(409)](r+t(439))?j():r("0")}))()}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(423)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(t,n){const o=z();return(b=function(t,n){return o[t-=409]})(t,n)}w(void 0,(function(){const t=b;let n;try{n=Function(t(411)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(431)]=n[t(431)]||{},r=[t(417),"warn",t(454),"error",t(449),t(413),"trace"];for(let a=0;a<r[t(418)];a++){const n=w[t(438)].prototype[t(429)](w),e=r[a],i=o[e]||n;n[t(424)]=w.bind(w),n[t(427)]=i.toString[t(429)](i),o[e]=n}}))();const I=[y(447),"faceUv","normal"],S=a({__name:y(461),setup(n){const o=t(),a=t=>{const n=b;for(let r=0;r<t[n(418)];r+=3){const e=[t[r],t[r+1]],a=o[n(420)][n(458)][n(466)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[b(410)]&&(async()=>{const t=b,n=await r(t(419),t(412));for(let o=0;o<n[t(418)];o++){const r=n[o];a(r.geometry);const e=new Float32Array(r[t(463)]),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(463)].length);d[t(450)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;o[t(410)]&&(g.uniforms[t(433)][t(441)]=o[t(420)][t(457)](),g.uniforms[t(414)][t(441)]=o[t(410)][t(425)],g[t(428)].u_far[t(441)]=o[t(410)][t(443)])})),(t,n)=>{const o=b;return c(),s(o(455),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(448),{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:r(416),position:[t[r(437)],3],faceUv:[t[r(459)],2],normal:[t[r(435)],3]},null,8,I),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function j(t){function n(t){const o=b;if(typeof t===o(451))return function(t){}[o(438)](o(421))[o(423)]("counter");1!==(""+t/t)[o(418)]||t%20==0?function(){return!0}[o(438)]("debu"+o(464))[o(426)](o(442)):function(){return!1}[o(438)]("debu"+o(464))[o(423)](o(444)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function z(){const t=["geometry","gger","3QqLJXe","lngLatToCoord","atan","158724exJCPt","test","cameraState","return (function() ","buildings","table","u_near","30HdLQOo","tbgRef","log","length","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","mapHandle","while (true) {}","583575TfBzjd","apply","__proto__","near","call","toString","uniforms","bind","175630SNEdCZ","console","343105OkVVpe","u_zoom","258568zeIkLW","normalArray","24352TgGHja","positionArray","constructor","input","chain","value","action","far","stateObject","765ZzLbPk","147471zJwDTL","position","TresMesh","exception","push","string","143YbqUyR","function *\\( *\\)","info","TresGroup","exp","getZoom","customCoords","uvArray","init","buildingModels","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(z=function(){return t})()}const P=A;!function(t,n){const o=A,r=L();for(;;)try{if(284316===-parseInt(o(324))/1*(-parseInt(o(333))/2)+-parseInt(o(332))/3*(parseInt(o(346))/4)+parseInt(o(334))/5+-parseInt(o(347))/6*(-parseInt(o(328))/7)+parseInt(o(366))/8*(-parseInt(o(358))/9)+parseInt(o(325))/10+-parseInt(o(365))/11*(-parseInt(o(339))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function A(t,n){const o=L();return(A=function(t,n){return o[t-=324]})(t,n)}!function(){R(this,(function(){const t=A,n=new RegExp(t(360)),o=new RegExp(t(350),"i"),r=U(t(336));n.test(r+"chain")&&o[t(329)](r+t(344))?U():r("0")}))()}();const F=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[A(364)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function L(){const t=["while (true) {}","action","console","tcRef","buildings","9cpLlWX","error","function *\\( *\\)","toString","TresCanvas","bind","apply","11hnZPrt","188304YTyGFK","tresCanvas","1RrsbeH","748550vcPiSB","table",'{}.constructor("return this")( )',"13748cgtCMc","test","TresPerspectiveCamera","gger","880701TmntsQ","273822QYMSAW","293190WHRVEG","length","init","string","return (function() ","1049772fQUYBV","debu","__proto__","prototype","info","input","constructor","4flFAQs","744bVNnqq","trace","log","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","darkblue","counter"];return(L=function(){return t})()}F(void 0,(function(){const t=A,n=function(){const t=A;let n;try{n=Function(t(338)+t(327)+");")()}catch(o){n=window}return n}(),o=n[t(355)]=n.console||{},r=[t(349),"warn",t(343),t(359),"exception",t(326),t(348)];for(let e=0;e<r[t(335)];e++){const n=F[t(345)][t(342)][t(363)](F),a=r[e],i=o[a]||n;n[t(341)]=F[t(363)](F),n[t(361)]=i.toString[t(363)](i),o[a]=n}}))();function U(t){function n(t){const o=A;if(typeof t===o(337))return function(t){}[o(345)](o(353))[o(364)](o(352));1!==(""+t/t).length||t%20==0?function(){return!0}[o(345)]("debu"+o(331)).call(o(354)):function(){return!1}.constructor(o(340)+o(331))[o(364)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=C(a({__name:P(357),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=A,l=d(i(362));return c(),s(u,null,[g(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(351)}),g(l,v({id:i(367),ref:i(356)},e),{default:m((()=>[a[0]||(a[0]=p(i(330),{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p("TresAmbientLight",{intensity:.5},null,-1)),g(o,{center:r}),(c(),h(_,null,{default:m((()=>[g(S)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
