import{_ as t}from"./index.CVieFNGr1730883607874.js";import{_ as e,q as n,W as r,J as o,m as i,k as a,C as c,s}from"./three.fIUcjaNz1730883607874.js";import{a as l,m as u,b as f,e as p,U as v}from"./@tresjs.C3WO4ZW41730883607874.js";import{m as d}from"./index.D3-O3Ya61730883607874.js";import{_ as m}from"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.BGWOVkfw1730883607874.js";import{P as h}from"./tweakpane.BCjFYDHx1730883607874.js";import{d as x,a6 as g,a3 as y,w,o as b,D as S,u as C,r as _,e as F,j as P,g as j,J as I,f as z,al as D,aj as k,ak as T,m as N,F as B}from"./@vue.Cfu43fwq1730883607874.js";import"./utils.DZn_exdt1730883607874.js";import"./@fesjs.DQmvwjPe1730883607874.js";import"./vue-router.BDLCs4Ld1730883607874.js";import"./lodash-es.BBTWvufR1730883607874.js";import"./@qlin.BIlp8Yi21730883607874.js";import"./pinia.DKpn0rzI1730883607874.js";import"./vue-demi.Dq6ymT-81730883607874.js";import"./@babel.BBWsvBIa1730883607874.js";import"./@floating-ui.B75jtkXD1730883607874.js";import"./@juggle.BnTvdTVm1730883607874.js";import"./default.vue_vue_type_script_setup_true_lang.ZAggwT5g1730883607874.js";import"./three-mesh-ui.module.CnYVgkR-1730883607874.js";import"./@vueuse.BSum2YDk1730883607874.js";import"./chalk.B3MNILV41730883607874.js";/* empty css                                 */import"./iconify-icon.DK1S_nhj1730883607874.js";import"./@iconify.CkmZGMLx1730883607874.js";import"./dompurify.MwRjsY0L1730883607874.js";import"./oimophysics.B0i2NtyE1730883607874.js";import"./three-stdlib.oW8T3I_Q1730883607874.js";import"./@pmndrs.CQZPv3U_1730883607874.js";import"./object-hash.c-ODBdIv1730883607874.js";import"./@amap.CXRRqiLY1730883607874.js";import"./jszip.V4H7zZUl1730883607874.js";import"./three-custom-shader-material.DD5mBNmu1730883607874.js";import"./three.quarks.BwNiiDXj1730883607874.js";import"./quarks.core.C7CDonSm1730883607874.js";function E(){var t=["prototype","1734166pQwQXD","4498376GDBKKp","Mesh","exception","setRenderTarget","warn","return (function() ","add","test","PlaneGeometry","ShaderMaterial","string","length","value","table","scene","976938qQimZA","2416972SsHvwt","gl_FragColor = texture2D(uTexture, vUv);","info","counter","bind","83586AXCFtI","blit","render","PerspectiveCamera","220FWPtly","44174115ddLVsm","uniforms","chain","toString","mesh","console","innerHeight","function *\\( *\\)","call",'{}.constructor("return this")( )',"init","camera","debu","action","input","log","constructor","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","gger","7hQVKlp","\n                uniform sampler2D uTexture;\n\n                varying vec2 vUv;\n\n                void main() {\n                    ","uTexture","15793256TyfhFu","innerWidth","apply","  \n                }","\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position.xy, 0.0, 1.0);    \n                }","renderer"];return(E=function(){return t})()}function M(t,e){var n=E();return(M=function(t,e){return n[t-=209]})(t,e)}var W=M;!function(t,e){for(var n=M,r=E();;)try{if(996486===-parseInt(n(216))/1+parseInt(n(233))/2+parseInt(n(232))/3+-parseInt(n(217))/4+parseInt(n(242))/5*(-parseInt(n(238))/6)+parseInt(n(262))/7*(-parseInt(n(209))/8)+parseInt(n(243))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();var R=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n[M(211)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){var t=M,e=new RegExp(t(250)),n=new RegExp(t(260),"i"),r=H(t(253));e.test(r+t(245))&&n[t(224)](r+t(257))?H():r("0")}))()}();var V=function(){var t=!0;return function(e,n){var r=t?function(){if(n){var t=n[M(211)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();V(void 0,(function(){var t,e=M;try{t=Function(e(222)+e(252)+");")()}catch(s){t=window}for(var n=t[e(248)]=t[e(248)]||{},r=[e(258),e(221),e(235),"error",e(219),e(230),"trace"],o=0;o<r[e(228)];o++){var i=V[e(259)][e(215)][e(237)](V),a=r[o],c=n[a]||i;i.__proto__=V[e(237)](V),i[e(246)]=c[e(246)][e(237)](c),n[a]=i}}))();class A{constructor(t,r){var o=M;this.material=new(e[o(226)])({uniforms:{uTexture:{type:"t",value:null}},vertexShader:o(213),fragmentShader:o(263)+(r||o(234))+o(212),depthTest:!1,depthWrite:!1}),this.mesh=new(e[o(218)])(new(e[o(225)])(2,2),this.material),this.camera=new(e[o(241)])(45,window[o(210)]/window[o(249)],1,1e3),this[o(214)]=t,this[o(231)]=new n,this[o(231)][o(223)](this[o(247)])}[W(239)](t,e){var n=W;this.renderer[n(220)](e),this.material[n(244)][n(264)][n(229)]=t,this[n(214)][n(240)](this[n(231)],this[n(254)]),this[n(214)][n(220)](null)}}function H(t){function e(t){var n=M;if(typeof t===n(227))return function(t){}[n(259)]("while (true) {}")[n(211)](n(236));1!==(""+t/t)[n(228)]||t%20==0?function(){return!0}[n(259)](n(255)+"gger")[n(251)](n(256)):function(){return!1}[n(259)](n(255)+n(261)).apply("stateObject"),e(++t)}try{if(t)return e;e(0)}catch(n){}}const X=U;function U(t,e){const n=q();return(U=function(t,e){return n[t-=326]})(t,e)}!function(t,e){const n=U,r=q();for(;;)try{if(562707===parseInt(n(369))/1*(-parseInt(n(337))/2)+parseInt(n(352))/3+-parseInt(n(353))/4+-parseInt(n(339))/5+-parseInt(n(374))/6+-parseInt(n(330))/7+parseInt(n(344))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const Z=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[U(370)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){Z(this,(function(){const t=U,e=new RegExp("function *\\( *\\)"),n=new RegExp(t(383),"i"),r=L("init");e[t(333)](r+"chain")&&n.test(r+"input")?L():r("0")}))()}();const O=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[U(370)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function q(){const t=["blit","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","string","getFrontFaceTexture","FrontSide","\n                uniform float uCameraFarInverse;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n                    float currentDepth = abs(vCameraSpacePos.z) * uCameraFarInverse;\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }","render","mesh","compute","material","toString","constructor","WebGLRenderTarget","FloatType","__proto__","uPrevDepth","blitProgram","resultBuffer","return (function() ","5458796hxJVdB","clear","error","test","ShaderMaterial","autoClear","traverse","7446dCWLZp","clone","854600ajhbYS",'{}.constructor("return this")( )',"uSample","debu","frontFaceMaterial","14652432Mmodzc","renderer","far","console","\n                uniform sampler2D uPrevDepth;\n                uniform float uCameraFarInverse;\n                uniform float uSample;\n                uniform vec2  uScreenSize;\n\n                varying vec3 vWorldSpaceNormal;\n                varying vec3 vCameraSpacePos;\n\n                void main() {\n\n                    vec2 uv = gl_FragCoord.xy / uScreenSize;\n                    float prevRegisteredDepth = texture2D(uPrevDepth, uv).w;\n                    float currentDepth        = abs(vCameraSpacePos.z) * uCameraFarInverse;\n\n                    if(currentDepth <= prevRegisteredDepth) {\n                        discard;\n                    }\n\n                    gl_FragColor = vec4(vWorldSpaceNormal, currentDepth);    \n                }","pong","camera","value","1019538ygwqzD","1345992OMeWzn","warn","Vector2","exception","stateObject","\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normal;\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","\n                varying vec3 vCameraSpacePos;\n                varying vec3 vWorldSpaceNormal;\n\n                void main() {\n                    vCameraSpacePos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n                    vWorldSpaceNormal = normalize((modelMatrix * vec4(normal, 0.0)).xyz);\n\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n                }","frontFaceRT","counter","uCameraFarInverse","table","Mesh","setRenderTarget","prototype","call","scene","2BAvTfH","apply","uniforms","DoubleSide","log","1884006PKlTiZ","gger","ping","Scene","bind","trace","while (true) {}","texture"];return(q=function(){return t})()}O(void 0,(function(){const t=U;let e;try{e=Function(t(329)+t(340)+");")()}catch(o){e=window}const n=e[t(347)]=e[t(347)]||{},r=[t(373),t(354),"info",t(332),t(356),t(363),t(379)];for(let i=0;i<r.length;i++){const e=O.constructor[t(366)].bind(O),o=r[i],a=n[o]||e;e[t(396)]=O[t(378)](O),e.toString=a[t(392)].bind(a),n[o]=e}}))();class G{constructor(t,n,o){const i=U;this[i(389)]=t[i(338)](),this[i(350)]=n,this.renderer=o,this.scene=new(e[i(377)]),this[i(368)].add(this.mesh),this[i(327)]=new A(this[i(345)]),this[i(376)]=new r(innerWidth,innerHeight,{type:e[i(395)],depthBuffer:!1,stencilBuffer:!1}),this[i(349)]=new r(innerWidth,innerHeight,{type:e[i(395)],depthBuffer:!1,stencilBuffer:!1}),this[i(360)]=new(e[i(394)])(innerWidth,innerHeight,{type:e[i(395)]}),this[i(343)]=new(e[i(334)])({uniforms:{uCameraFarInverse:{value:1/this[i(350)].far}},vertexShader:i(358),fragmentShader:i(387),depthTest:!0,depthWrite:!0,side:e[i(386)]}),this[i(391)]=new(e[i(334)])({uniforms:{uScreenSize:{value:new(e[i(355)])(innerWidth,innerHeight)},uPrevDepth:{type:"t",value:this.ping[i(381)]},uCameraFarInverse:{value:1/this.camera[i(346)]},uSample:{value:0}},vertexShader:i(359),fragmentShader:i(348),depthTest:!1,depthWrite:!1,side:e[i(372)]}),this[i(389)][i(336)]((t=>{const n=i;t instanceof e[n(364)]&&(t[n(391)]=this[n(391)])}))}[X(390)](t){const n=X;this.renderer[n(365)](this[n(376)]),this[n(345)].clear(),this[n(345)][n(365)](this[n(349)]),this[n(345)][n(331)](),this[n(389)][n(336)]((t=>{const r=n;t instanceof e[r(364)]&&(t.material=this[r(391)])})),this[n(391)][n(371)][n(362)].value=1/this[n(350)][n(346)];for(let e=0;e<t;e++){let t=e%2==0?this[n(376)]:this[n(349)],r=e%2==0?this[n(349)]:this[n(376)];this[n(391)].uniforms[n(326)].value=t[n(381)],this[n(391)][n(371)][n(341)][n(351)]=e,this[n(345)][n(335)]=!1,this.renderer[n(365)](r),this[n(345)][n(388)](this.scene,this[n(350)]),this.renderer.autoClear=!0,this[n(327)][n(382)](r[n(381)],t)}t%2==0?this.resultBuffer=this.ping:this[n(328)]=this[n(349)],this[n(389)][n(336)]((t=>{const r=n;t instanceof e[r(364)]&&(t[r(391)]=this[r(343)])})),this.renderer.setRenderTarget(this.frontFaceRT),this[n(345)][n(388)](this[n(368)],this[n(350)])}getBackFaceTexture(){const t=X;return this[t(328)][t(381)]}[X(385)](){const t=X;return this[t(360)][t(381)]}}function L(t){function e(t){const n=U;if(typeof t===n(384))return function(t){}[n(393)](n(380))[n(370)](n(361));1!==(""+t/t).length||t%20==0?function(){return!0}[n(393)](n(342)+n(375))[n(367)]("action"):function(){return!1}[n(393)](n(342)+"gger")[n(370)](n(357)),e(++t)}try{if(t)return e;e(0)}catch(n){}}const Q=K;!function(t,e){const n=K,r=et();for(;;)try{if(400835===parseInt(n(168))/1+parseInt(n(172))/2*(parseInt(n(123))/3)+parseInt(n(181))/4+-parseInt(n(169))/5*(-parseInt(n(122))/6)+-parseInt(n(120))/7+-parseInt(n(132))/8+parseInt(n(194))/9*(parseInt(n(159))/10))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const $=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n.apply(e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){$(this,(function(){const t=K,e=new RegExp("function *\\( *\\)"),n=new RegExp(t(182),"i"),r=nt(t(184));e.test(r+t(141))&&n.test(r+"input")?nt():r("0")}))()}();const Y=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[K(190)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();Y(void 0,(function(){const t=K;let e;try{e=Function(t(149)+'{}.constructor("return this")( ));')()}catch(o){e=window}const n=e.console=e[t(183)]||{},r=[t(175),t(180),t(187),t(173),t(158),t(162),"trace"];for(let i=0;i<r.length;i++){const e=Y[t(193)][t(124)][t(161)](Y),o=r[i],a=n[o]||e;e[t(142)]=Y[t(161)](Y),e[t(165)]=a[t(165)][t(161)](a),n[o]=e}}))();const J=["object"];function K(t,e){const n=et();return(K=function(t,e){return n[t-=117]})(t,e)}const tt=x({__name:Q(156),props:{skyBoxTexture:{},modelPath:{},modelName:{},extintionFactor:{default:5},reflectionFactor:{default:1},exposure:{default:0},extintionColor1:{default:Q(119)},extintionColor2:{default:Q(140)},extintionCol1Random:{type:Boolean,default:!1},extintionCol2Random:{type:Boolean,default:!1}},async setup(t){const n=Q;let r,v;const d=t,{map:m}=([r,v]=g((()=>l({map:d[n(145)]}))),r=await r,v(),r);m[n(195)]=e[n(130)],m[n(135)]=e[n(130)],m[n(154)]=o,m[n(121)]=o;const{camera:h,renderer:x,scene:_}=u(),F=new i({uniforms:{uSkybox:{type:"t",value:m},uBackFaceBuffer:{type:"t",value:null},uFrontFaceBuffer:{type:"t",value:null},uCameraFarInverse:{value:1/h.value.far},uScreenSizeInv:{value:new a(1/window[n(170)],1/window[n(128)])},uCameraPos:{value:new(e[n(131)])(0,0,0)},uTime:{value:0},uExtintionColor1:{value:new(e[n(151)])(n(188))[n(192)](new(e[n(151)])(d[n(129)]).convertLinearToSRGB())},uExtintionColor2:{value:new c(n(188))[n(192)](new(e[n(151)])(d.extintionColor2)[n(185)]())},uExtintionFactor:{value:d[n(125)]},uExposure:{value:d.exposure},uReflectionFactor:{value:d.reflectionFactor},uExtinctionFX1:{value:new(e[n(196)])(d[n(186)]?1:0,d[n(166)]?1:0,0,1)}},vertexShader:"varying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\n// NOTE: we don't need the projViewModel matrix, because vWorldSpaceFragPos is already multiplied by the model matrix\n// I'm repeating this comment 5 times because I've lost 2 hours of my life debugging this thing\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nvoid main(){\n\t// NOTE: the multiplication with modelMatrix is required otherwise viewDir in the fragment shader would be incorrect\n\tvWorldSpaceFragPos=(modelMatrix*vec4(position,1.)).xyz;\n\tvWorldSpaceNormal=normalize((modelMatrix*vec4(normal,0.)).xyz);\n\t\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n\tvProjViewMatrix=projectionMatrix*viewMatrix;\n\tvViewMatrix=viewMatrix;\n}",fragmentShader:"uniform sampler2D uSkybox;\nuniform sampler2D uBackFaceBuffer;\nuniform sampler2D uFrontFaceBuffer;\n\nuniform vec3 uExtintionColor1;\nuniform vec3 uExtintionColor2;\nuniform float uExtintionFactor;\nuniform float uExposure;\nuniform float uReflectionFactor;\nuniform vec4 uExtinctionFX1;\n\nuniform float uTime;\n\nuniform vec3 uCameraPos;\nuniform vec2 uScreenSizeInv;\nuniform float uCameraFarInverse;\n\nvarying vec3 vWorldSpaceFragPos;\nvarying vec3 vWorldSpaceNormal;\nvarying mat4 vProjViewMatrix;\nvarying mat4 vViewMatrix;\n\nconst float PI=3.14159265359;\nconst float e=2.7182818284590;\n\nconst float planeSize=3.;\nconst vec3 planeColor=pow(vec3(202./255.,205./255.,185./255.),vec3(3.));\n\nfloat mod289(float x){return x-floor(x*(1./289.))*289.;}\nvec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}\nvec4 perm(vec4 x){return mod289(((x*34.)+1.)*x);}\n\nfloat noise(vec3 p){\n\tvec3 a=floor(p);\n\tvec3 d=p-a;\n\td=d*d*(3.-2.*d);\n\t\n\tvec4 b=a.xxyy+vec4(0.,1.,0.,1.);\n\tvec4 k1=perm(b.xyxy);\n\tvec4 k2=perm(k1.xyxy+b.zzww);\n\t\n\tvec4 c=k2+a.zzzz;\n\tvec4 k3=perm(c);\n\tvec4 k4=perm(c+1.);\n\t\n\tvec4 o1=fract(k3*(1./41.));\n\tvec4 o2=fract(k4*(1./41.));\n\t\n\tvec4 o3=o2*d.z+o1*(1.-d.z);\n\tvec2 o4=o3.yw*d.x+o3.xz*(1.-d.x);\n\t\n\treturn o4.y*d.y+o4.x*(1.-d.y);\n}\n\nvec3 acesFilm(const vec3 x){\n\tconst float a=2.51;\n\tconst float b=.03;\n\tconst float c=2.43;\n\tconst float d=.59;\n\tconst float e=.14;\n\treturn clamp((x*(a*x+b))/(x*(c*x+d)+e),0.,1.);\n}\n\n// gets the skybox color from a given view direction\nvec3 getSkyboxColor(vec3 viewDir){\n\t// skybox coordinates\n\tvec2 skyboxUV=vec2(\n\t\t(atan(viewDir.x,viewDir.z)+PI)/(PI*2.),\n\t\t(asin(viewDir.y)+PI*.5)/(PI)\n\t);\n\t\n\tvec3 col=texture2D(uSkybox,skyboxUV).xyz;\n\tcol=pow(col,vec3(2.2));\n\treturn col;\n}\n\nbool refract2(vec3 v,vec3 n,float ni_over_nt,inout vec3 refracted){\n\tvec3 uv=normalize(v);\n\tfloat dt=dot(uv,n);\n\tfloat discriminant=1.-ni_over_nt*ni_over_nt*(1.-dt*dt);\n\tif(discriminant>0.){\n\t\trefracted=ni_over_nt*(v-n*dt)-n*sqrt(discriminant);\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\nvec3 binarySearchHitPoint(vec3 lastP,vec3 hitP,vec3 rayDir){\n\t\n\tfor(int i=0;i<10;i++){\n\t\tvec3 midP=(lastP+hitP)*.5;\n\t\t\n\t\t// project midP in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(midP,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 midpNDC=projCoord.xy;\n\t\tvec2 midpUV=midpNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,midpUV);\n\t\tfloat depth=backBuffer.w;\n\t\t\n\t\tfloat midpDepth=abs((vViewMatrix*vec4(midP,1.)).z)*uCameraFarInverse;\n\t\tif(midpDepth>depth){\n\t\t\thitP=midP;\n\t\t}else{\n\t\t\tlastP=midP;\n\t\t}\n\t}\n\t\n\treturn hitP;\n}\n\nvec3 getRefractedColor(vec3 refractionDir,vec3 hitPoint,float refractionIndex){\n\t// move the hitpoint inside the mesh with epsilon\n\thitPoint+=refractionDir*.0001;\n\t\n\t// raymarch!\n\tfloat stepSize=.02;\n\tfloat stepMult=1.5;\n\t\n\tvec3 lastP=hitPoint;\n\tvec3 p=hitPoint;\n\tvec3 hitPNormal;\n\tfloat currStepSize=stepSize;\n\tfloat transmissionDistance=0.;\n\tfor(int i=0;i<20;i++){\n\t\tp+=currStepSize*refractionDir;\n\t\t\n\t\t// project p in uv space\n\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\tprojCoord.xyz/=projCoord.w;\n\t\t\n\t\tvec2 pNDC=projCoord.xy;\n\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\n\t\t// get depth at point\n\t\tvec4 backBuffer=texture2D(uBackFaceBuffer,pUV);\n\t\tfloat depth=backBuffer.w;\n\t\tvec3 norm=backBuffer.xyz;\n\t\t\n\t\t// get p depth\n\t\tfloat pDepth=abs((vViewMatrix*vec4(p,1.)).z)*uCameraFarInverse;\n\t\t\n\t\tif(pDepth>depth){\n\t\t\t\n\t\t\tvec3 hitp=binarySearchHitPoint(lastP,p,refractionDir);\n\t\t\tp=hitp;\n\t\t\t\n\t\t\t// ************ get the hitpoint normal\n\t\t\tvec4 projCoord=vProjViewMatrix*vec4(p,1.);\n\t\t\tprojCoord.xyz/=projCoord.w;\n\t\t\t\n\t\t\tvec2 pNDC=projCoord.xy;\n\t\t\tvec2 pUV=pNDC*.5+.5;\n\t\t\t\n\t\t\t// get depth at point\n\t\t\thitPNormal=texture2D(uBackFaceBuffer,pUV).xyz;\n\t\t\t// ************ get the hitpoint normal - END\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tlastP=p;\n\t\tcurrStepSize*=stepMult;\n\t}\n\t\n\ttransmissionDistance=length(hitPoint-p);\n\t\n\t// ******************** recalc directions\n\tvec3 outward_normal;\n\tvec3 reflected=reflect(refractionDir,hitPNormal);\n\tfloat ni_over_nt;\n\tvec3 refr;\n\t// vec3 refracted;\n\tfloat reflect_prob;\n\tfloat cosine;\n\t\n\tif(dot(refractionDir,hitPNormal)>0.){\n\t\toutward_normal=-hitPNormal;\n\t\tni_over_nt=refractionIndex;\n\t\tcosine=refractionIndex*dot(refractionDir,hitPNormal);\n\t}else{\n\t\toutward_normal=hitPNormal;\n\t\tni_over_nt=1./refractionIndex;\n\t\tcosine=-dot(refractionDir,hitPNormal);\n\t}\n\t\n\t// if (refract2(refractionDir, outward_normal, ni_over_nt, refracted)) {\n\t\tif(refract2(refractionDir,outward_normal,ni_over_nt,refr)){\n\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\tr0*=r0;\n\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t}else{\n\t\t\treflect_prob=1.;\n\t\t}\n\t\t// ******************** recalc directions - END\n\t\t\n\t\t// ******************** get colors\n\t\tvec3 col;\n\t\tvec3 colrefl;\n\t\tvec3 colrefr;\n\t\t// if(refracted.y < 0.0) {\n\t\t\tif(refr.y<0.){\n\t\t\t\t// float t = p.y / abs(refracted.y);\n\t\t\t\t// vec3 planeHitP = p + refracted * t;\n\t\t\t\tfloat t=p.y/abs(refr.y);\n\t\t\t\tvec3 planeHitP=p+refr*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefr=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// colrefr = getSkyboxColor(refracted);\n\t\t\t\tcolrefr=getSkyboxColor(refr);\n\t\t\t}\n\t\t\t\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=p.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=p+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\tcolrefl=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcolrefl=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tcol=colrefl*(reflect_prob*uReflectionFactor)+colrefr*(1.-reflect_prob);\n\t\t\t// ******************** get colors\n\t\t\t\n\t\t\tvec3 transm=vec3(1.);\n\t\t\t// const int steps = 8;\n\t\t\tconst int steps=15;\n\t\t\tfloat step=transmissionDistance/float(steps);\n\t\t\tfloat fc=uExtintionFactor*.07;\n\t\t\t\n\t\t\t// raymarching transmission color\n\t\t\t\n\t\t\t// float noiseStrength = 0.8;\n\t\t\tfloat noiseSpeed=.5;\n\t\t\tfloat noiseTimeSpeed=.5;\n\t\t\t\n\t\t\tfor(int i=0;i<steps;i++){\n\t\t\t\tvec3 np=hitPoint+refractionDir*float(i)*step;\n\t\t\t\t\n\t\t\t\tvec3 nnp=np;\n\t\t\t\tvec3 w=normalize(np-vec3(.75,1.5,0.));\n\t\t\t\tvec3 u=vec3(0.,0.,1.);\n\t\t\t\t// vec3 timeOffset = uTime * normalize(np - vec3(0.75, 1.5, 0.0));\n\t\t\t\tvec3 timeOffset=cos(uTime)*w+sin(uTime)*u;\n\t\t\t\tfloat colorNoiseX=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed);\n\t\t\t\tfloat colorNoiseY=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(15.3278,125.19879,0.));\n\t\t\t\tfloat colorNoiseZ=noise(np*noiseSpeed+timeOffset*noiseTimeSpeed+vec3(2.6008,78.19879,543.12993));\n\t\t\t\t\n\t\t\t\tfloat targ=length(nnp*.8*uExtinctionFX1.w-vec3(.75,1.5,0.));\n\t\t\t\tfloat targAperture=.25;\n\t\t\t\t\n\t\t\t\t// wave raymarch\n\t\t\t\tif(uExtinctionFX1.z>.5){\n\t\t\t\t\tnnp=np+sin(np.x*2.5+uTime*1.5)*.3;\n\t\t\t\t\ttarg=nnp.y-.85*uExtinctionFX1.w;\n\t\t\t\t}else{\n\t\t\t\t\tnnp=np+vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*1.05;\n\t\t\t\t\tvec3 diff=nnp-vec3(3.3,4.5,0.);\n\t\t\t\t\tfloat angle=(atan(diff.x,diff.y)+PI)/(PI*2.);\n\t\t\t\t\ttarg=length(diff)+sin(angle*32.*PI+uTime*1.5)*.4;\n\t\t\t\t\ttarg*=.475;\n\t\t\t\t\ttargAperture=.5+colorNoiseX*.75;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// what's the color at np?\n\t\t\t\tvec3 col1=uExtintionColor1;\n\t\t\t\tvec3 col2=uExtintionColor2;\n\t\t\t\tif(uExtinctionFX1.x>.5){\n\t\t\t\t\tcol1=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\tif(uExtinctionFX1.y>.5){\n\t\t\t\t\tcol2=vec3(colorNoiseX,colorNoiseY,colorNoiseZ)*.85;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(targ<1.){\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*col2*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ>1.&&targ<1.+targAperture){\n\t\t\t\t\tfloat t=(targ-1.)/targAperture;\n\t\t\t\t\t\n\t\t\t\t\ttransm*=exp(-step*(col1*t+col2*(1.-t))*fc);\n\t\t\t\t\t\n\t\t\t\t}else if(targ<(1.+targAperture)*1.85){\n\t\t\t\t\ttransm*=exp(-step*col1*fc);\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// transm = (col1) * targAperture;\n\t\t\t\t\t// transm *= exp(-step * col1 * uExtintionFactor);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// return col * uExtintionColor2 * transm;\n\t\t\tcol*=transm;\n\t\t\t\n\t\t\treturn col;\n\t\t}\n\t\t\n\t\tvoid main(){\n\t\t\tvec2 screenUV=gl_FragCoord.xy*uScreenSizeInv;\n\t\t\t\n\t\t\tvec3 viewDir=normalize(vWorldSpaceFragPos-uCameraPos);\n\t\t\tvec3 normal=vWorldSpaceNormal;\n\t\t\tfloat refractionIndex=1.5;\n\t\t\t\n\t\t\tvec3 outward_normal;\n\t\t\tvec3 reflected=reflect(viewDir,normal);\n\t\t\tfloat ni_over_nt;\n\t\t\tvec3 refracted;\n\t\t\tfloat reflect_prob;\n\t\t\tfloat cosine;\n\t\t\t\n\t\t\tif(dot(viewDir,normal)>0.){\n\t\t\t\toutward_normal=-normal;\n\t\t\t\tni_over_nt=refractionIndex;\n\t\t\t\tcosine=refractionIndex*dot(viewDir,normal);\n\t\t\t}else{\n\t\t\t\toutward_normal=normal;\n\t\t\t\tni_over_nt=1./refractionIndex;\n\t\t\t\tcosine=-dot(viewDir,normal);\n\t\t\t}\n\t\t\t\n\t\t\tif(refract2(viewDir,outward_normal,ni_over_nt,refracted)){\n\t\t\t\tfloat r0=(1.-refractionIndex)/(1.+refractionIndex);\n\t\t\t\tr0*=r0;\n\t\t\t\treflect_prob=r0+(1.-r0)*pow((1.-cosine),5.);\n\t\t\t}else{\n\t\t\t\treflect_prob=1.;\n\t\t\t}\n\t\t\t\n\t\t\tvec3 reflectedCol;\n\t\t\tif(reflected.y<0.){\n\t\t\t\tfloat t=vWorldSpaceFragPos.y/abs(reflected.y);\n\t\t\t\tvec3 planeHitP=vWorldSpaceFragPos+reflected*t;\n\t\t\t\tif(abs(planeHitP.x)<planeSize&&abs(planeHitP.z)<planeSize){\n\t\t\t\t\treflectedCol=planeColor;\n\t\t\t\t}else{\n\t\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treflectedCol=getSkyboxColor(reflected);\n\t\t\t}\n\t\t\t\n\t\t\tvec3 col=reflectedCol*reflect_prob*uReflectionFactor+getRefractedColor(refracted,vWorldSpaceFragPos,refractionIndex)*(1.-reflect_prob);\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.0, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.15, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333 +\n\t\t\t// getRefractedColor(normalize(refracted + vec3(0.0, 0.35, 0.0)), vWorldSpaceFragPos) * (1.0 - reflect_prob) * 0.333;\n\t\t\t\n\t\t\t// col = getRefractedColor(refracted, vWorldSpaceFragPos) * (1.0 - reflect_prob);\n\t\t\t// vec3 col = getRefractedColor(refracted, vWorldSpaceFragPos);\n\t\t\t// col = getSkyboxColor(reflected) * reflect_prob * 1.0;\n\t\t\t\n\t\t\t// vec3 col = viewDir;\n\t\t\t// gl_FragColor = vec4(col, 1.0);\n\t\t\t// return;\n\t\t\t\n\t\t\tcol*=pow(2.,uExposure);\n\t\t\tcol=acesFilm(col);\n\t\t\tcol=pow(col,vec3(1./2.2));\n\t\t\t\n\t\t\tgl_FragColor=vec4(col,1.);\n\t\t\t// gl_FragColor = vec4(getSkyboxColor(viewDir), 1.0) * 0.5 + vec4(viewDir * 0.5 + 0.5, 1.0);\n\t\t}"}),{nodes:P}=([r,v]=g((()=>f(d[n(198)],{draco:!0,decoderPath:n(163)}))),r=await r,v(),r),j=P[n(174)][n(157)](d[n(179)]),I=new G(j,h[n(176)],x.value),z=null==j?void 0:j[n(117)]();null==z||z[n(167)]((t=>{const r=n;t instanceof s&&(t[r(178)]=F,t[r(178)][r(189)]=e[r(160)])}));const{onAfterLoop:D}=p();return D((({elapsed:t})=>{const e=n;j&&F&&(F[e(134)][e(171)][e(176)]=h[e(176)].position[e(117)](),F[e(134)][e(153)][e(176)]=t,I.compute(6),F[e(134)].uBackFaceBuffer[e(176)]=I.getBackFaceTexture(),F[e(134)][e(126)][e(176)]=I.getFrontFaceTexture(),x[e(176)][e(148)](null),x[e(176)][e(139)]=!1)})),y((()=>{const t=n;d.extintionFactor&&(F[t(134)][t(127)][t(176)]=d[t(125)]),d[t(146)]&&(F.uniforms[t(138)][t(176)]=d[t(146)]),d[t(133)]&&(F[t(134)][t(197)].value=d[t(133)]),d[t(129)]&&(F[t(134)].uExtintionColor1[t(176)]=new(e[t(151)])(t(188))[t(192)](new(e[t(151)])(d[t(129)])[t(185)]())),d[t(177)]&&(F.uniforms[t(136)][t(176)]=new(e[t(151)])(t(188))[t(192)](new(e[t(151)])(d.extintionColor2).convertLinearToSRGB())),d[t(186)]&&(F.uniforms[t(197)][t(176)]=d[t(133)])})),w((()=>d.extintionCol1Random),(t=>{const e=n;F[e(134)][e(118)][e(176)].x=t?1:0}),{immediate:!0}),w((()=>d[n(166)]),(t=>{F[n(134)].uExtinctionFX1.value.y=t?1:0}),{immediate:!0}),(t,e)=>(b(),S("primitive",{object:C(z)},null,8,J))}});function et(){const t=["uReflectionFactor","autoClear","rgb(26, 166, 192)","chain","__proto__","stateObject","action","skyBoxTexture","reflectionFactor","debu","setRenderTarget","return (function() ","length","Color","string","uTime","magFilter","while (true) {}","ssrtGlassMesh","getObjectByName","exception","50JzmMHV","FrontSide","bind","table","./draco/","call","toString","extintionCol2Random","traverse","498414ALtOxa","4955jZtcbv","innerWidth","uCameraPos","78KmoKpy","error","Scene","log","value","extintionColor2","material","modelName","warn","1056332ArwIom","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","console","init","convertLinearToSRGB","extintionCol1Random","info","#fff","side","apply","gger","sub","constructor","440631ZfXvEJ","wrapS","Vector4","uExposure","modelPath","clone","uExtinctionFX1","rgb(192,123,25)","3759938euNTcB","minFilter","1788QSGegm","6651OthpQX","prototype","extintionFactor","uFrontFaceBuffer","uExtintionFactor","innerHeight","extintionColor1","ClampToEdgeWrapping","Vector3","3608832WNehtN","exposure","uniforms","wrapT","uExtintionColor2","counter"];return(et=function(){return t})()}function nt(t){function e(t){const n=K;if(typeof t===n(152))return function(t){}[n(193)](n(155))[n(190)](n(137));1!==(""+t/t)[n(150)]||t%20==0?function(){return!0}[n(193)](n(147)+"gger")[n(164)](n(144)):function(){return!1}[n(193)](n(147)+n(191)).apply(n(143)),e(++t)}try{if(t)return e;e(0)}catch(n){}}const rt=at;!function(t,e){const n=at,r=ct();for(;;)try{if(408607===-parseInt(n(494))/1+parseInt(n(516))/2*(parseInt(n(498))/3)+-parseInt(n(503))/4+parseInt(n(549))/5+-parseInt(n(542))/6*(parseInt(n(500))/7)+-parseInt(n(539))/8+parseInt(n(548))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const ot=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[at(512)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){ot(this,(function(){const t=at,e=new RegExp(t(508)),n=new RegExp(t(540),"i"),r=lt(t(523));e[t(520)](r+t(501))&&n.test(r+t(511))?lt():r("0")}))()}();const it=function(){let t=!0;return function(e,n){const r=t?function(){if(n){const t=n[at(512)](e,arguments);return n=null,t}}:function(){};return t=!1,r}}();function at(t,e){const n=ct();return(at=function(t,e){return n[t-=492]})(t,e)}function ct(){const t=["消光颜色一","7842GLHGHF","info","TresCanvas","length","extintionFactor","#201919","5755590SQITja","1955735qbgFpl","error","trace","__proto__","table","counter","reflectionFactor","187735cdUdpY","exposure","消光颜色二","action","63XmxoSE","extintionCol1Random","287cinykh","chain","statue","642932WwqQJd","消光系数","extintionCol2Random","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg","bind","function *\\( *\\)","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/model/eCommerce/guanYu.glb","log","input","apply","随机色2","exception","console","51034MyinMy","constructor","call","rgb(26, 166, 192)","test","extintionColor2","ssrtGlass","init","toString","#b8b59e","gger","TresPerspectiveCamera","rgb(192,123,25)","反射系数","prototype","warn","ACESFilmicToneMapping","extintionColor1","string","addBinding","return (function() ","debu","stateObject","6046816fDiUop","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(ct=function(){return t})()}it(void 0,(function(){const t=at;let e;try{e=Function(t(536)+'{}.constructor("return this")( ));')()}catch(o){e=window}const n=e[t(515)]=e[t(515)]||{},r=[t(510),t(531),t(543),t(550),t(514),t(553),t(551)];for(let i=0;i<r[t(545)];i++){const e=it[t(517)][t(530)][t(507)](it),o=r[i],a=n[o]||e;e[t(552)]=it[t(507)](it),e[t(524)]=a[t(524)][t(507)](a),n[o]=e}}))();const st=x({__name:rt(522),setup(n){const r=rt,o={clearColor:r(547),windowSize:!0,toneMapping:e[r(532)],toneMappingExposure:.8},i=_({size:[20,20],color:"#cbcb96",shadowColor:r(525),edge:.35}),a=_({extintionFactor:5,reflectionFactor:1,exposure:0,extintionColor1:r(528),extintionColor2:r(519),extintionCol1Random:!1,extintionCol2Random:!1}),c=new h({title:"参数"});return c.addBinding(a,r(546),{label:r(504),min:0,max:10,step:.1}),c[r(535)](a,r(493),{label:r(529),min:0,max:2,step:.1}),c[r(535)](a,r(495),{label:"曝光系数",min:-1,max:1,step:.1}),c.addBinding(a,r(533),{label:r(541)}),c[r(535)](a,r(521),{label:r(496)}),c[r(535)](a,r(499),{label:"随机色1"}),c[r(535)](a,r(505),{label:r(513)}),(e,n)=>{const c=r,s=F(c(544));return b(),S(B,null,[P(C(t)),P(s,k(T(o)),{default:j((()=>[n[0]||(n[0]=I(c(527),{position:[0,8,-13],fov:45,near:.1,far:1e3,"look-at":[0,0,0]},null,-1)),P(C(v),{enableDamping:""}),n[1]||(n[1]=I("TresAmbientLight",{intensity:10},null,-1)),(b(),z(D,null,{default:j((()=>[P(d,k(T(i)),null,16)])),_:1})),(b(),z(D,null,{default:j((()=>[P(tt,N({scale:2},a,{modelPath:c(509),modelName:c(502),skyBoxTexture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg"}),null,16)])),_:1})),(b(),z(D,null,{default:j((()=>[P(m,{texture:c(506)})])),_:1}))])),_:1},16)],64)}}});function lt(t){function e(t){const n=at;if(typeof t===n(534))return function(t){}.constructor("while (true) {}")[n(512)](n(492));1!==(""+t/t)[n(545)]||t%20==0?function(){return!0}.constructor(n(537)+"gger")[n(518)](n(497)):function(){return!1}.constructor(n(537)+n(526))[n(512)](n(538)),e(++t)}try{if(t)return e;e(0)}catch(n){}}export{st as default};
