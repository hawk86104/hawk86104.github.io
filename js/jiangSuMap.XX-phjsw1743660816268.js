import{a as e,m as s,e as t,x as o,o as r}from"./@tresjs.zc7faK4J1743660816268.js";import{l as i}from"./utils.G6Ajo17E1743660816268.js";import{f as n}from"./utils.jUcBBpbc1743660816268.js";import{a4 as a,b as p,a2 as l,o as m,H as c,F as u,X as d,f as h,g as j,N as y,L as f,m as g,u as T,M as v,d as w,r as M,e as b,j as L,aj as x,ak as z,al as C}from"./@vue.B5PFBfKs1743660816268.js";import{m as S}from"./d3-geo.WZZXsDsg1743660816268.js";import{ct as _,ab as k,B as E,l as B,C as O,h as G,b as D,cE as P}from"./three.2wx8FU0g1743660816268.js";import{c as H,d as F,a as I}from"./three-mesh-bvh.HGLjHqG91743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";import"./@fesjs.9AUNBPBQ1743660816268.js";import"./vue-router.K4ys0Z-O1743660816268.js";import"./lodash-es.IJc9G_SW1743660816268.js";import"./@qlin.o0hjOMCg1743660816268.js";import"./pinia.0dYyFDku1743660816268.js";import"./@floating-ui.HzHndBae1743660816268.js";import"./@juggle.4EyLec-41743660816268.js";import"./@tweenjs.l8nCRm4N1743660816268.js";import"./axios.fZsiU0571743660816268.js";import"./axios.FtfblEUV1743660816268.js";import"./color.eB7PxDAY1743660816268.js";import"./@amap.c8pGcSIC1743660816268.js";import"./color-string.wv1C2Y7s1743660816268.js";import"./color-name.uE2j7_hh1743660816268.js";import"./simple-swizzle.LczVDJz41743660816268.js";import"./is-arrayish.NpDrW2FW1743660816268.js";import"./color-convert.p3ZlKkC71743660816268.js";import"./lodash.54IT1-z-1743660816268.js";import"./d3-array.dSwsClwB1743660816268.js";const $=["position"],A=["blending","map"],q=["name","renderOrder","pCenter"],K=["args"],N=["color","side"],R=["renderOrder","position-z"],X=["position"],J=["renderOrder"],Q=["position"],U={__name:"jiangSuMapMesh",async setup(r){let w,M;E.prototype.computeBoundsTree=H,E.prototype.disposeBoundsTree=F,B.prototype.raycast=I;const b=([w,M]=a((()=>i("./plugins/simpleGIS/json/320000_full.json","features"))),w=await w,M(),w),{map:L}=([w,M]=a((()=>e({map:"./plugins/simpleGIS/image/icon.png"}))),w=await w,M(),w),x=b[0].properties.centroid,z=S();z.center(x).translate([0,0]);const C=[];b.forEach((e=>{const s=new O(`hsl( 16, ${30*Math.random()+55}%, ${30*Math.random()+55}%)`).getHex(),t=.3*Math.random()+.3,{centroid:o,oneCenter:r,center:i,name:n}=e.properties,{coordinates:a,type:p}=e.geometry,l=o||r||i||[0,0],m=z(l);m[1]=-m[1],m[2]=t,C.push({type:"Html",position:m,name:n});const c=z(l);c[1]=.2-c[1],c[2]=t+.22,C.push({type:"Sprite",position:c}),a.forEach((e=>{function o(e){const o=new P;e.forEach(((e,s)=>{const[t,r]=z(e);0===s?o.moveTo(t,-r):o.lineTo(t,-r)})),C.push({type:"Shape",shape:o,name:n,color:s,depth:t,pCenter:c});const r=[];e.forEach((e=>{const[s,t]=z(e);r.push(s,-t,0)})),C.push({type:"Line",points:new Float32Array(r),depth:t})}"MultiPolygon"===p&&e.forEach((e=>o(e))),"Polygon"===p&&o(e)}))}));const U=p();l((()=>{U.value&&((e=>{e.rotation.x=-Math.PI/2;const s=(new G).setFromObject(e).getCenter(new D),t=[0,0];e.position.x=e.position.x-s.x-t[0],e.position.z=e.position.z-s.z-t[1]})(U.value),U.value.children.forEach((e=>{"Mesh"===e.type&&e.geometry.computeBoundsTree()})))}));const V=e=>{e.object.material.opacity=.4},W=e=>{e.eventObject.material.opacity=1},{camera:Y,controls:Z}=s();let ee=null;const se=e=>{const s=new D;s.x=e.point.x,s.y=e.point.y+10,s.z=e.point.z,ee=n(Y,s,Z)},{onBeforeLoop:te}=t();te((()=>{ee?.update()}));const oe={wrapperClass:"wrapper",as:"div",center:!0,sprite:!0,prepend:!0,transform:!0};return(e,s)=>(m(),c("TresGroup",{ref_key:"tgRef",ref:U},[(m(),c(u,null,d(C,((e,t)=>(m(),c(u,{key:`${t}`},["Html"===e.type?(m(),h(T(o),g({key:0,ref_for:!0},oe,{position:e.position}),{default:j((()=>[y("span",null,f(e.name),1)])),_:2},1040,["position"])):v("",!0),"Sprite"===e.type?(m(),c("TresSprite",{key:1,position:e.position,scale:.3,renderOrder:1e3},[y("TresSpriteMaterial",{color:16711680,blending:_,map:T(L)},null,8,A)],8,$)):v("",!0),"Shape"===e.type?(m(),c("TresMesh",{key:2,name:e.name,renderOrder:t,pCenter:e.pCenter,onPointerEnter:V,onPointerLeave:W,onClick:se},[y("TresExtrudeGeometry",{args:[e.shape,{depth:e.depth,bevelEnabled:!1}]},null,8,K),y("TresMeshStandardMaterial",{color:e.color,emissive:0,roughness:.45,metalness:.8,transparent:!0,side:k},null,8,N)],40,q)):v("",!0),"Line"===e.type?(m(),c(u,{key:3},[y("TresLine",{renderOrder:t,"position-z":e.depth+1e-4},[y("TresBufferGeometry",{position:[e.points,3]},null,8,X),s[0]||(s[0]=y("TresLineBasicMaterial",{color:16777215,linewidth:.5},null,-1))],8,R),y("TresLine",{renderOrder:t,"position-z":-1e-4},[y("TresBufferGeometry",{position:[e.points,3]},null,8,Q),s[1]||(s[1]=y("TresLineBasicMaterial",{color:0,linewidth:.5},null,-1))],8,J)],64)):v("",!0)],64)))),64))],512))}},V=w({__name:"jiangSuMap",setup(e){const s=M({clearColor:"#ffdbd1",alpha:!0,antialias:!0}),t=M({enableDamping:!0,dampingFactor:.05,makeDefault:!0});return(e,o)=>{const i=b("TresCanvas");return m(),h(i,g(s,{"window-size":""}),{default:j((()=>[o[0]||(o[0]=y("TresPerspectiveCamera",{position:[0,12,0],fov:75,near:.1,far:1e3,up:[0,0,-1]},null,-1)),L(T(r),x(z(t)),null,16),o[1]||(o[1]=y("TresAmbientLight",{intensity:8.8},null,-1)),o[2]||(o[2]=y("TresDirectionalLight",{position:[0,10,5],intensity:.2},null,-1)),o[3]||(o[3]=y("TresDirectionalLight",{position:[0,10,-5],intensity:.2},null,-1)),o[4]||(o[4]=y("TresDirectionalLight",{position:[5,10,0],intensity:.2},null,-1)),o[5]||(o[5]=y("TresDirectionalLight",{position:[-5,10,0],intensity:.2},null,-1)),o[6]||(o[6]=y("TresGridHelper",{args:[20,10]},null,-1)),(m(),h(C,null,{default:j((()=>[L(U)])),_:1}))])),_:1},16)}}});export{V as default};
