import{u as t,_ as n,a as o}from"./mergeTres.j3l96Znx1720750938663.js";import{l as r}from"./utils.w2KUWsKA1720750938663.js";import{r as e}from"./@tresjs.toBU36DO1720750938663.js";import{d as a,r as i,a2 as l,o as c,D as s,F as u,V as f,J as v,aj as p,ak as d,e as g,j as m,g as h,f as _,al as C,m as y,am as w,an as x}from"./@vue.ApkyOKE71720750938663.js";import{_ as b}from"./@fesjs.hPzU4o281720750938663.js";import"./@amap.aVWyhucH1720750938663.js";import"./pinia.1mscjV6X1720750938663.js";import"./three.c_4mN3mZ1720750938663.js";import"./three-mesh-bvh.q2XDEzjn1720750938663.js";import"./@vueuse.NiHn2U_k1720750938663.js";import"./tweakpane.yHWGBmom1720750938663.js";import"./vue-router.cSmWJIl41720750938663.js";import"./lodash-es.nFpJXAf-1720750938663.js";import"./@qlin.yHhFDldE1720750938663.js";import"./@floating-ui.BPbuo5Gx1720750938663.js";import"./@juggle.7yjBMqoW1720750938663.js";function I(t,n){const o=P();return(I=function(t,n){return o[t-=257]})(t,n)}const S=I;!function(t,n){const o=I,r=P();for(;;)try{if(881571===-parseInt(o(271))/1+-parseInt(o(260))/2+-parseInt(o(264))/3*(-parseInt(o(312))/4)+parseInt(o(272))/5*(-parseInt(o(296))/6)+parseInt(o(286))/7+parseInt(o(309))/8+parseInt(o(276))/9*(parseInt(o(292))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const j=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(298)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){j(this,(function(){const t=I,n=new RegExp(t(270)),o=new RegExp(t(301),"i"),r=L("init");n[t(305)](r+t(257))&&o.test(r+"input")?L():r("0")}))()}();const z=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(298)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();z(void 0,(function(){const t=I;let n;try{n=Function(t(267)+t(282)+");")()}catch(e){n=window}const o=n.console=n[t(277)]||{},r=[t(294),t(291),t(284),t(303),t(299),"table","trace"];for(let a=0;a<r[t(310)];a++){const n=z.constructor.prototype[t(295)](z),e=r[a],i=o[e]||n;n.__proto__=z.bind(z),n.toString=i[t(288)][t(295)](i),o[e]=n}}))();const R=[S(290),"faceUv",S(306)];function P(){const t=["chain","u_far","TresBufferGeometry","3180546vzcFOE","uniforms","TresShaderMaterial","atan","1497JEjkvj","exp","call","return (function() ","string","TresGroup","function *\\( *\\)","328455iBvSrY","132145gXBlii","value","cameraState","buildingModels","5134203JLLZUH","console","constructor","stateObject","while (true) {}","push",'{}.constructor("return this")( )',"debu","info","getZoom","6335126gGhvbL","faceUv","toString","tbgRef","position","warn","30RjaQkI","customCoords","log","bind","348vUqipR","counter","apply","exception","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","action","error","lngLatToCoord","test","normal","geometry","mapHandle","8061464hiKtmB","length","far","5684MhbaOx","near","TresMesh"];return(P=function(){return t})()}const F=a({__name:S(275),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t[n(310)];r+=3){const e=[t[r],t[r+1]],a=o[n(308)][n(293)][n(304)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},g=i([]),m={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[I(274)]&&(async()=>{const t=I,n=await r(t(300),"buildings");for(let o=0;o<n.length;o++){const r=n[o];a(r[t(307)]);const e=new Float32Array(r[t(307)]),i=new Float32Array(r[t(287)]),l=new Float32Array(r[t(307)][t(310)]);g[t(281)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:h}=e();return h((()=>{const t=I;o[t(274)]&&(m[t(261)].u_zoom[t(273)]=o.mapHandle[t(285)](),m[t(261)].u_near[t(273)]=o[t(274)][t(313)],m.uniforms[t(258)][t(273)]=o[t(274)][t(311)])})),(t,n)=>{const o=I;return c(),s(o(269),null,[(c(!0),s(u,null,f(g,((t,n)=>{const r=o;return c(),s(r(314),{key:""+n},[v(r(259),{ref_for:!0,ref:r(289),position:[t.positionArray,3],faceUv:[t.uvArray,2],normal:[t.normalArray,3]},null,8,R),v(r(262),p(d(m)),null,16)])})),128))])}}});function L(t){function n(t){const o=I;if(typeof t===o(268))return function(t){}.constructor(o(280))[o(298)](o(297));1!==(""+t/t)[o(310)]||t%20==0?function(){return!0}[o(278)](o(283)+"gger")[o(266)](o(302)):function(){return!1}[o(278)](o(283)+"gger")[o(298)](o(279)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const U=T;!function(t,n){const o=T,r=k();for(;;)try{if(355058===parseInt(o(298))/1*(-parseInt(o(287))/2)+parseInt(o(313))/3*(parseInt(o(316))/4)+-parseInt(o(286))/5+parseInt(o(321))/6+parseInt(o(295))/7+parseInt(o(292))/8+-parseInt(o(288))/9*(parseInt(o(315))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[T(310)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function k(){const t=["__proto__","counter","console","3353142eQyRDl","while (true) {}","tcRef","string","chain","log","data-v-40288e17","length","gger","2968165fHDbQN","2898wOgbQG","7479engCEO","toString","table","init","4525176SzBBWH","trace","bind","527625BvYWIx","info","function *\\( *\\)","211OmYWTB","TresCanvas","input","prototype",'{}.constructor("return this")( )',"constructor","call","darkblue","warn","TresAmbientLight","TresPerspectiveCamera","stateObject","apply","action","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","3OlPXKc","debu","6940GLwrff","2525060vQywLh","test"];return(k=function(){return t})()}!function(){A(this,(function(){const t=T,n=new RegExp(t(297)),o=new RegExp(t(312),"i"),r=B(t(291));n[t(317)](r+t(281))&&o[t(317)](r+t(300))?B():r("0")}))()}();const W=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[T(310)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();W(void 0,(function(){const t=T;let n;try{n=Function("return (function() "+t(302)+");")()}catch(e){n=window}const o=n[t(320)]=n[t(320)]||{},r=[t(282),t(306),t(296),"error","exception",t(290),t(293)];for(let a=0;a<r[t(284)];a++){const n=W.constructor[t(301)][t(294)](W),e=r[a],i=o[e]||n;n[t(318)]=W[t(294)](W),n.toString=i[t(289)][t(294)](i),o[e]=n}}))();const D=t=>(w(U(283)),t=t(),x(),t),E=D((()=>v(U(308),{fov:60,near:.1,far:2e3},null,-1))),M=D((()=>v(U(307),{intensity:.5},null,-1)));function T(t,n){const o=k();return(T=function(t,n){return o[t-=278]})(t,n)}function B(t){function n(t){const o=T;if(typeof t===o(280))return function(t){}.constructor(o(278))[o(310)](o(319));1!==(""+t/t)[o(284)]||t%20==0?function(){return!0}[o(303)]("debu"+o(285))[o(304)](o(311)):function(){return!1}[o(303)](o(314)+o(285))[o(310)](o(309)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const N=b(a({__name:"buildings",setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=T,l=g(i(299));return c(),s(u,null,[m(n,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(305)}),m(l,y({id:"tresCanvas",ref:i(279)},e),{default:h((()=>[E,M,m(o,{center:r}),(c(),_(C,null,{default:h((()=>[m(F)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{N as default};
