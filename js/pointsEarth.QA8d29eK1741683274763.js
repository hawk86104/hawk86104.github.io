import{_ as e}from"./three.3wvNjL8W1741683274763.js";import{e as n,o as t,a}from"./@tresjs.tqalU7S21741683274763.js";import{P as o}from"./tweakpane.yDiyAAkA1741683274763.js";import{d as r,a3 as i,v as l,e as s,o as u,f as c,g as f,N as p,j as v,u as m,m as d,aj as h,ak as g}from"./@vue.NRI7TcgI1741683274763.js";import"./postprocessing.D4QJINSY1741683274763.js";import"./@vueuse.lt4-M8RL1741683274763.js";const x=w;!function(e,n){const t=w,a=S();for(;;)try{if(826076===parseInt(t(176))/1+parseInt(t(130))/2+-parseInt(t(157))/3*(parseInt(t(180))/4)+-parseInt(t(131))/5*(parseInt(t(174))/6)+parseInt(t(124))/7+parseInt(t(150))/8+-parseInt(t(128))/9*(-parseInt(t(136))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(142)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=w,n=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),a=_(e(132));n[e(154)](a+"chain")&&t.test(a+e(186))?_():a("0")}))()}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(142)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=S();return(w=function(e,n){return t[e-=122]})(e,n)}function S(){const e=["toString","set","#ffffff","965808tNzPGi","uWaveSpeed","change","size","test","log","__proto__","1117005XxRRAM","stateObject","pointSize","TresIcosahedronGeometry","prototype","TresMeshBasicMaterial","color","TresShaderMaterial","console","海浪变化速度","debu","TresPerspectiveCamera","table","exception","bind","wireframeMaterialRef",'{}.constructor("return this")( )',"1559154IijktI","海浪高度","340294GZislB","#122148","TresCanvas","TresMesh","8hLBVlZ","length","call","while (true) {}","value","Debug","input","pointsEarth","action","7159719JMWHfM","#17c5a9","SRGBColorSpace","TresHemisphereLight","1179gECbzI","info","2182212gzibPi","20fgFGoU","init","addBinding","TresGroup","addFolder","2690fBFkKs","uWaveHeight","constructor","#080820","FrontSide","gger","apply","string","uniforms","groupRef","error"];return(S=function(){return e})()}T(void 0,(function(){const e=w;let n;try{n=Function("return (function() "+e(173)+");")()}catch(o){n=window}const t=n[e(165)]=n[e(165)]||{},a=[e(155),"warn",e(129),e(146),e(170),e(169),"trace"];for(let r=0;r<a.length;r++){const n=T[e(138)][e(161)].bind(T),o=a[r],i=t[o]||n;n[e(156)]=T[e(171)](T),n[e(147)]=i[e(147)][e(171)](i),t[o]=n}}))();const b=r({__name:x(122),async setup(r){const y=x;let T,w;const S={color:y(125),pointSize:4},b={clearColor:y(177),shadows:!1,alpha:!1,outputColorSpace:e[y(126)]},_={color:S.color,wireframe:!0,transparent:!0,opacity:.2},z=([T,w]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),j=z[0],E=z[1],P=z[2],I=z[3],D=z[4],k={uniforms:{size:{type:"f",value:S[y(159)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:D},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(140)]},A=l(),C=l(),M=(new o)[y(135)]({title:y(185)});M[y(133)](S,y(163),{type:"color"}).on(y(152),(({value:e})=>{const n=y;C[n(184)][n(163)][n(148)](e)})),M[y(133)](k[y(144)][y(153)],"value",{min:.1,max:10,step:.1,label:"粒子大小"}),M[y(133)](k[y(144)][y(137)],y(184),{min:.01,max:.5,step:.01,label:y(175)}),M[y(133)](k[y(144)][y(151)],y(184),{min:.01,max:1,step:.01,label:y(166)});const{onLoop:R}=n();return R((({delta:e})=>{const n=y;A[n(184)]&&(A.value.rotation.y+=.002,k[n(144)].uTime[n(184)]+=10*e)})),(e,n)=>{const a=y,o=s(a(178));return u(),c(o,d(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=p(a(168),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),v(m(t),{autoRotate:!0,autoRotateSpeed:2}),p(a(134),{ref_key:a(145),ref:A},[p(a(179),null,[n[0]||(n[0]=p(a(160),{args:[1,4]},null,-1)),p(a(162),d({ref_key:a(172),ref:C},_),null,16)]),p("TresPoints",null,[n[1]||(n[1]=p("TresIcosahedronGeometry",{args:[1,128]},null,-1)),p(a(164),h(g(k)),null,16)])],512),n[3]||(n[3]=p(a(127),{args:[a(149),a(139),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=w;if(typeof e===t(143))return function(e){}[t(138)](t(183))[t(142)]("counter");1!==(""+e/e)[t(181)]||e%20==0?function(){return!0}.constructor("debugger")[t(182)](t(123)):function(){return!1}.constructor(t(167)+t(141))[t(142)](t(158)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
