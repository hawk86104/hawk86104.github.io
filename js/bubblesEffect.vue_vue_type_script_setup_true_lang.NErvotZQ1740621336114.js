import{_ as n,C as t,cB as e,a as o,ab as i}from"./three.sXv6UbbL1740621336114.js";import{m as r,e as a,a as l}from"./@tresjs.Td0X-dew1740621336114.js";import{d as s,b as u,a3 as c,a2 as f,o as p,H as m,N as b,aj as g,ak as v,u as y}from"./@vue.NRI7TcgI1740621336114.js";function d(n,t){const e=z();return(d=function(n,t){return e[n-=210]})(n,t)}const h=d;!function(n,t){const e=d,o=z();for(;;)try{if(275386===-parseInt(e(258))/1+-parseInt(e(257))/2+parseInt(e(224))/3*(parseInt(e(234))/4)+parseInt(e(232))/5*(-parseInt(e(235))/6)+parseInt(e(221))/7*(parseInt(e(271))/8)+parseInt(e(260))/9*(-parseInt(e(216))/10)+parseInt(e(231))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){w(this,(function(){const n=d,t=new RegExp(n(249)),e=new RegExp(n(264),"i"),o=P(n(211));t.test(o+n(220))&&e[n(233)](o+n(262))?P():o("0")}))()}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","debu","length","toString","constructor","__proto__","Mesh","64MNCfbC","while (true) {}","init","action","dispose","bind","model","10eWIPTI","Color","error","offsetY","chain","403585FlhsZZ","traverse","return (function() ","246lGrHRn","sin","call","TresShaderMaterial","string","gger","DoubleSide","8610558RYzqDw","1942620CiDHpv","test","10356wgImXj","6OFwzuO","warn","glowColor","verticesNeedUpdate","AdditiveBlending","table",'{}.constructor("return this")( )',"uTime","uOpacity","value","#84ccff","TresMesh","log","console","function *\\( *\\)","opacity","stateObject","apply","push","geometry","map","TresBufferGeometry","661522PhGYJz","39527ytvCgd","color","3799062RRIqgu","uniforms","input","info"];return(z=function(){return n})()}_(void 0,(function(){const n=d,t=function(){const n=d;let t;try{t=Function(n(223)+n(241)+");")()}catch(e){t=window}return t}(),e=t[n(248)]=t[n(248)]||{},o=[n(247),n(236),n(263),n(218),"exception",n(240),"trace"];for(let i=0;i<o[n(266)];i++){const t=_[n(268)].prototype[n(214)](_),r=o[i],a=e[r]||t;t[n(269)]=_[n(214)](_),t[n(267)]=a[n(267)][n(214)](a),e[r]=t}}))();const x=s({__name:"xRayEffect",props:{model:{},color:{default:h(245)},opacity:{default:1}},async setup(o){const i=h;let s,y;const d=o,w=u(),_=[];d[i(215)][i(222)]((t=>{const e=i;t instanceof n[e(270)]&&(t[e(254)][e(238)]=!0,_[e(253)](t.geometry))}));const z=([s,y]=c((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),s=await s,y(),s),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new t(d[i(259)])},lightningTexture:{type:"t",value:z[i(255)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(250)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(230)],blending:n[i(239)],depthWrite:!1};x[i(261)][i(219)][i(244)]=Math[i(225)](5);const{camera:P}=r(),{onLoop:T}=a();return T((({delta:n})=>{const t=i;P[t(244)].position&&w[t(244)]&&(x[t(261)][t(242)].value+=n)})),f((()=>{const t=i;w[t(244)]&&(w[t(244)][t(254)][t(213)](),w.value[t(254)]=e(_)),d[t(259)]&&(x[t(261)][t(237)][t(244)]=new(n[t(217)])(d.color)),d.opacity&&(x[t(261)][t(243)][t(244)]=d[t(250)])})),(n,t)=>{const e=i;return p(),m(e(246),{ref_key:"TresMeshRef",ref:w},[t[0]||(t[0]=b(e(256),null,null,-1)),b(e(227),g(v(x)),null,16)],512)}}});function P(n){function t(n){const e=d;if(typeof n===e(228))return function(n){}[e(268)](e(210))[e(252)]("counter");1!==(""+n/n)[e(266)]||n%20==0?function(){return!0}[e(268)](e(265)+e(229))[e(226)](e(212)):function(){return!1}[e(268)](e(265)+e(229))[e(252)](e(251)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=I;!function(n,t){const e=I,o=F();for(;;)try{if(709729===parseInt(e(479))/1*(parseInt(e(501))/2)+-parseInt(e(496))/3*(-parseInt(e(469))/4)+-parseInt(e(432))/5+parseInt(e(480))/6+-parseInt(e(497))/7+-parseInt(e(444))/8*(-parseInt(e(464))/9)+parseInt(e(486))/10*(-parseInt(e(437))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(425)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=I,t=new RegExp(n(474)),e=new RegExp(n(481),"i"),o=B(n(440));t.test(o+"chain")&&e[n(487)](o+n(443))?B():o("0")}))()}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=F();return(I=function(n,t){return e[n-=424]})(n,t)}S(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(456)+n(483)+");")()}catch(e){t=window}return t}(),e=t[n(490)]=t[n(490)]||{},o=[n(442),"warn","info",n(492),n(451),n(424),n(450)];for(let i=0;i<o[n(462)];i++){const t=S.constructor[n(489)][n(475)](S),r=o[i],a=e[r]||t;t[n(460)]=S[n(475)](S),t[n(467)]=a[n(467)][n(475)](a),e[r]=t}}))();const M=s({__name:T(477),props:{model:{},color:{default:T(468)},opacity:{default:1}},setup(r){const l=T,s=r,c=["afective",l(494),l(485),"process",l(491),l(449),"bridge",l(435),l(438)],d={};s[l(428)][l(446)]((t=>{const o=l;t instanceof n[o(445)]&&c[o(426)]((n=>{const i=o;if(t[i(488)][i(429)](n)){if(d[n]){const o=[d[n],t[i(441)]];return d[n]=e(o),d}return d[n]=t[i(441)]}return[]}))}));const h=u(),w=new(n[l(498)])({uniforms:{glowColor:{type:"c",value:new(n[l(482)])(s[l(457)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s[l(470)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[l(476)],side:n[l(436)],depthTest:!1,vertexColors:!1,transparent:!0});f((()=>{h[l(502)]&&(()=>{const t=l,e=[],r=[],a=[],s=[];for(let i=0;i<2e4-3*c[t(462)];i+=1){const l=n[t(500)][t(493)](0,c[t(462)]-1),u=c[l],f=d[u][t(458)][t(452)].array[3*i+0]||0,p=d[u][t(458)][t(452)][t(459)][3*i+1]||0,m=d[u][t(458)][t(452)][t(459)][3*i+2]||0;if(r[t(499)](f,p,m),e[i]=o[t(448)](10,20),i%100==0){const e=n[t(500)][t(493)](100,250)+p;s.push(f,e,m,1)}else s[t(499)](f,p,m,0);a[2*i+0]=n[t(500)][t(448)](.5,1.5),a[2*i+1]=2.5}h[t(502)][t(473)](t(431),new(n[t(430)])(a,2)),h[t(502)][t(473)]("bubbles",new i(s,4)),h[t(502)][t(473)](t(452),new(n[t(430)])(r,3)),h[t(502)][t(473)](t(457),new(n[t(430)])([],3)),h[t(502)].setAttribute("size",new(n[t(430)])(e,1)),h.value[t(433)]()})()}));const _=u(),{onLoop:z}=a();return z((({delta:n})=>{const e=l;_.value&&(_.value[e(484)][e(447)][e(455)].value+=.05,_.value[e(484)][e(447)].uSlowTime[e(502)]+=1/400),s[e(457)]&&(w[e(447)][e(461)].value=new t(s[e(457)])),s[e(470)]&&(w.uniforms.uOpacity.value=s.opacity)})),(n,t)=>{const e=l;return p(),m(e(465),{ref_key:e(439),ref:_},[b(e(466),{ref_key:e(478),ref:h},null,512),b(e(472),g(v(y(w))),null,16)],512)}}});function F(){const n=["glowColor","length","while (true) {}","3828753nMXJEe","TresPoints","TresBufferGeometry","toString","#FFF","88tdoUnD","opacity","gger","TresShaderMaterial","setAttribute","function *\\( *\\)","bind","AdditiveBlending","bubblesEffect","BufferGeometryRef","115OskNmN","7991226uRhCbL","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","Color",'{}.constructor("return this")( )',"material","episodic","10lZexGX","test","name","prototype","console","amigdala","error","randInt","semantic","counter","23094ufGpSr","4034296YqYMJD","ShaderMaterial","push","MathUtils","19984ltDAqk","value","table","apply","map","stateObject","model","includes","Float32BufferAttribute","aDelayDuration","1927270Afnzik","computeBoundingSphere","debu","cerebellum","DoubleSide","15446343UeqGPL","analitic","TresMeshRef","init","geometry","log","input","8uNdVYy","Mesh","traverse","uniforms","randFloat","brainstem","trace","exception","position","constructor","string","uTime","return (function() ","color","attributes","array","__proto__"];return(F=function(){return n})()}function B(n){function t(n){const e=I;if(typeof n===e(454))return function(n){}.constructor(e(463))[e(425)](e(495));1!==(""+n/n)[e(462)]||n%20==0?function(){return!0}[e(453)](e(434)+e(471)).call("action"):function(){return!1}[e(453)](e(434)+e(471)).apply(e(427)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{x as _,M as a};
