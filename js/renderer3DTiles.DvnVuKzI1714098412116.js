import{a1 as m,ak as w,a6 as _,o as f,c as T,Y as t,L as h,bw as x,bv as B,a9 as g,a2 as u,ad as C,r as L,x as S,E as b,a8 as y,a as d,aa as D,ab as k,ac as M}from"./vendor.33RuSNcm1714098412116.js";import{T as R}from"./TilesRenderer.Z7_UuYl91714098412116.js";import"./BufferGeometryUtils.5iWA0G1M1714098412116.js";const j=["object"],P=m({__name:"tilesMesh",setup(v){const e=new R("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/3Dtiles/simpleGIS/data/tileset.json");e.errorTarget=0;const n=s=>{s.traverse(r=>{r.isMesh&&(r.material.side=2,r.receiveShadow=!1,r.castShadow=!1)});const l=new x,p=new B;e.getBoundingBox(l)?(l.getCenter(e.group.position),e.group.position.multiplyScalar(-1)):e.getBoundingSphere(p)&&(e.group.position.copy(p.center),e.group.position.multiplyScalar(-1))};e.onLoadModel=n;const{camera:o,renderer:a,sizes:i}=w();_(()=>{i.width.value&&(e.setCamera(o.value),e.setResolutionFromRenderer(o.value,a.value))});const{onBeforeLoop:c}=g();return c(()=>{o.value&&i.width.value&&(o.value.updateMatrixWorld(),e.update())}),(s,l)=>(f(),T("TresGroup",null,[t("primitive",{object:h(e).group},null,8,j)]))}}),z=t("TresPerspectiveCamera",{position:[400,400,400],fov:60,near:.1,far:4e3},null,-1),E=t("TresAmbientLight",{intensity:.5},null,-1),A=t("TresAxesHelper",{args:[100]},null,-1),V=m({__name:"renderer3DTiles",setup(v){const e=u({clearColor:"#201919"}),n=u({enableDamping:!0,dampingFactor:.05}),{onLoop:o}=g();o(()=>{});const a=C();return _(()=>{a.value&&a.value.position.set(1,2,3).multiplyScalar(40)}),(i,c)=>{const s=L("TresCanvas");return f(),S(s,y(e,{"window-size":""}),{default:b(()=>[z,d(h(M),D(k(n)),null,16),E,t("TresDirectionalLight",{ref_key:"TDirectionalLight",ref:a,position:[1,2,3],intensity:1.25},null,512),d(P),A]),_:1},16)}}});export{V as default};
