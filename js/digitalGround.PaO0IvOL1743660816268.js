import{a as e,e as a,o as n}from"./@tresjs.zc7faK4J1743660816268.js";import{P as o}from"./tweakpane.ivGeiIdz1743660816268.js";import{_ as r}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.HokDQ1tw1743660816268.js";import{d as t,a4 as i,w as l,o as s,H as u,N as v,aj as p,ak as f,r as m,e as d,f as g,g as c,j as x,u as h,al as w,m as j}from"./@vue.B5PFBfKs1743660816268.js";import{bG as _,ae as C,r as P,a4 as b,C as D,ab as G}from"./three.2wx8FU0g1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";import"./all.three.q3DPAGr01743660816268.js";import"./oimophysics.WhCxc1Ho1743660816268.js";import"./vite-plugin-qiankun.DT7p3NC_1743660816268.js";const y=["rotateX"],F=["args"],U=t({__name:"digitalGround",props:{size:{default:10},speed:{default:1},color:{default:"#FFFFFF"}},async setup(n){let o,r;const t=n,m=([o,r]=i((()=>e(["./plugins/floor/image/digitalGround1.png","./plugins/floor/image/digitalGround2.png","./plugins/floor/image/digitalGround3.png","./plugins/floor/image/digitalGround4.png"]))),o=await o,r(),o);for(let e=0;e<m.length;e++)m[e].colorSpace=_,m[e].wrapS=C,m[e].wrapT=C,m[e].magFilter=P,m[e].minFilter=b;const d={uniforms:{time:{value:0},radius:{value:t.size},uColor:{value:new D(t.color)},texture0:{value:m[0]},texture1:{value:m[1]},texture2:{value:m[2]},texture3:{value:m[3]}},vertexShader:"\n        varying vec3 vPosition;\n        varying vec2 vUv;\n        void main(){\n            vPosition = position;\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n    ",fragmentShader:"\n        uniform float time;\n        uniform float radius;\n\n        uniform sampler2D texture0;\n        uniform sampler2D texture1;\n        uniform sampler2D texture2;\n        uniform sampler2D texture3;\n\n        varying vec3 vPosition;\n        uniform vec3 uColor;\n        varying vec2 vUv;\n\n        float wave(float a, float l, float s, float second, float val) {\n            float PI = 3.141592653;\n            float wave = a * sin(- val * 2.0 * PI / l + second * s * 2.0 * PI / l);\n            return (wave + 1.0) / 2.0;\n        }\n        void main(){\n            vec4 basceColor = vec4(uColor, 1.0);\n            vec4 back = texture2D( texture0, vUv * 16.0);\n\n            vec4 ori1 = texture2D( texture1, vUv * 4.0); // 电子元件\n            vec4 ori2 = texture2D( texture2, vUv * 16.0 ); // 点\n            vec4 ori3 = texture2D( texture3, vUv * 16.0 ); // 网格\n\n            float length = length( vec2(vPosition.x, vPosition.y) );\n            // 应用波函数蒙版\n            float flag1 = wave(1.0, radius / 2.0, 45.0, time, length);\n            if (flag1 < 0.5) {\n                flag1 = 0.0;\n            }\n            ori1.a = ori1.a * (flag1 * 0.8 + 0.2);\n            float flag2 = wave(1.0, radius / 3.0, 30.0, time, length);\n            ori2.a = ori2.a * (flag2 * 0.8 + 0.2);\n            float flag3 = wave(1.0, 60.0, 20.0, time, length);\n            ori3.a = ori3.a * (flag3 * 2.0 - 1.5);\n            // 应用蒙版\n            float alpha = clamp(ori1.a + ori2.a + ori3.a + back.a * 0.01, 0.0, 1.0);\n            basceColor.a = alpha*2.0;\n\n            gl_FragColor = basceColor * clamp((2.0 - (length * 2.0 / radius)), 0.0, 1.0);\n        }\n    ",side:G,transparent:!0};l((()=>t.color),(e=>{d.uniforms.uColor.value=new D(e)}));const{onLoop:g}=a();return g((({elapsed:e})=>{d.uniforms.time.value=e/10*t.speed})),(e,a)=>(s(),u("TresGroup",null,[v("TresMesh",{rotateX:-Math.PI/2},[v("TresCircleGeometry",{args:[e.size]},null,8,F),v("TresShaderMaterial",p(f(d)),null,16)],8,y)]))}}),k=t({__name:"digitalGround",setup(e){const a=m({reflectivity:.1,showGridHelper:!1,scale:1}),t=m({color:"#de62f2",speed:.8,size:10}),i=new o({title:"digitalGround",expanded:!0});return i.addBinding(t,"color",{label:"颜色"}),i.addBinding(t,"speed",{label:"速度",min:.1,max:5,step:.1}),i.addBinding(t,"size",{label:"大小",min:.1,max:20,step:.1}),(e,o)=>{const i=d("TresCanvas");return s(),g(i,{clearColor:"#666666","window-size":""},{default:c((()=>[o[0]||(o[0]=v("TresPerspectiveCamera",{position:[3,3,0],fov:45,near:.1,far:1e4},null,-1)),x(h(n),{enableDamping:"",autoRotate:""}),(s(),g(w,null,{default:c((()=>[x(U,p(f(t)),null,16)])),_:1})),(s(),g(w,null,{default:c((()=>[x(r,j({position:[0,-.5,0]},a),null,16)])),_:1}))])),_:1})}}});export{k as default};
