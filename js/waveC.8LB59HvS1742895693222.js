import{e,o as n}from"./@tresjs.xCsT8yve1742895693222.js";import{_ as t,C as o,V as i}from"./three.DqHgeVY11742895693222.js";import{P as r}from"./tweakpane.ivGeiIdz1742895693222.js";import{d as a,w as l,o as u,H as c,N as v,u as s,r as f,e as p,f as g,g as d,j as y,aj as m,ak as x,m as P}from"./@vue.C4dqouNn1742895693222.js";import"./postprocessing.vTwfsnPH1742895693222.js";import"./@vueuse.q8TRDI1e1742895693222.js";const z=C;!function(e,n){const t=C,o=w();for(;;)try{if(995222===parseInt(t(177))/1+-parseInt(t(228))/2*(-parseInt(t(225))/3)+-parseInt(t(215))/4*(parseInt(t(244))/5)+-parseInt(t(212))/6+parseInt(t(224))/7+-parseInt(t(223))/8+parseInt(t(211))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(217)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=C,n=new RegExp(e(234)),t=new RegExp(e(205),"i"),o=_(e(193));n[e(231)](o+e(197))&&t[e(231)](o+e(222))?_():o("0")}))()}();const S=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[C(217)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function w(){const e=["uSinWaveSpeed","uColorDamping","uPeakColor","wireframe","input","1971832weRaKK","8593522cLqfMv","327VZOrKb","info","TresMesh","288GktxYX","sinWaveSpeed","call","test","__proto__","bind","function *\\( *\\)","constructor","gger","set","setStyle","vertexShader","uValleyColor","perlinWaveSpeed","Vector2","DoubleSide","8571235UTSxeQ","table","exception","150852oqzKxA","colorOffset","fragmentShader","perlinWaveFrequency","console","Color","waveC","toString","action","side","value","peakColor","prototype","perlinWaveAmplitude","sinWaveFrequency","log","init","while (true) {}","#184650","length","chain","waveAmplitude","return (function() ","stateObject","perlinWaveIterations","debu","colorDamping","error","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","uTime",'{}.constructor("return this")( )',"string","uPerlinWaveFrequency","warn","21257181diUOrj","4800930knWxle","TresPlaneGeometry","uPerlinWaveIterations","4nDZBgl","uSinWaveFrequency","apply"];return(w=function(){return e})()}function C(e,n){const t=w();return C=function(e,n){return t[e-=176]},C(e,n)}S(void 0,(function(){const e=C,n=function(){const e=C;let n;try{n=Function(e(199)+e(207)+");")()}catch(t){n=window}return n}(),t=n[e(181)]=n[e(181)]||{},o=[e(192),e(210),e(226),e(204),e(176),e(245),"trace"];for(let i=0;i<o[e(196)];i++){const n=S[e(235)][e(189)][e(233)](S),r=o[i],a=t[r]||n;n[e(232)]=S[e(233)](S),n.toString=a[e(184)].bind(a),t[r]=n}}))();const h=["rotation-x"],I=[z(186),z(239),z(179),z(221)],b=a({__name:z(183),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:"#b367ff"},valleyColor:{default:z(195)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,a=n,f={uTime:{value:0},uPeakColor:{value:new(t[r(182)])(a[r(188)])},uValleyColor:{value:new o(a.valleyColor)},uColorOffset:{value:a[r(178)]},uColorDamping:{value:a[r(203)]},uSinWaveFrequency:{value:new i(a.sinWaveFrequency.x,a[r(191)].y)},uWaveAmplitude:{value:a.waveAmplitude},uSinWaveSpeed:{value:new(t[r(242)])(a[r(229)].x,a.sinWaveSpeed.y)},uPerlinWaveIterations:{value:a.perlinWaveIterations},uPerlinWaveFrequency:{value:a[r(180)]},uPerlinWaveAmplitude:{value:a[r(190)]},uPerlinWaveSpeed:{value:a[r(241)]}},{onLoop:p}=e();return p((({elapsed:e})=>{const n=r;f[n(206)][n(187)]=e})),l((()=>a),(()=>{const e=r;f[e(220)][e(187)][e(238)](a[e(188)]),f[e(240)].value.setStyle(a.valleyColor),f.uColorOffset[e(187)]=a[e(178)],f[e(219)][e(187)]=a[e(203)],f[e(216)].value[e(237)](a.sinWaveFrequency.x,a[e(191)].y),f.uWaveAmplitude.value=a[e(198)],f[e(218)][e(187)].set(a.sinWaveSpeed.x,a[e(229)].y),f[e(214)][e(187)]=a[e(201)],f[e(209)].value=a[e(180)],f.uPerlinWaveAmplitude.value=a[e(190)],f.uPerlinWaveSpeed.value=a[e(241)]}),{deep:!0}),(e,n)=>{const o=r;return u(),c(o(227),{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=v(o(213),{args:[10,10,512,512]},null,-1)),v("TresShaderMaterial",{side:t[o(243)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:f,wireframe:e[o(221)]},null,8,I)],8,h)}}});function _(e){function n(e){const t=C;if(typeof e===t(208))return function(e){}[t(235)](t(194))[t(217)]("counter");1!==(""+e/e)[t(196)]||e%20==0?function(){return!0}[t(235)](t(202)+t(236))[t(230)](t(185)):function(){return!1}.constructor("debu"+t(236))[t(217)](t(200)),n(++e)}try{if(e)return n;n(0)}catch(t){}}const q=T;!function(e,n){const t=T,o=F();for(;;)try{if(816868===parseInt(t(212))/1+-parseInt(t(211))/2*(-parseInt(t(225))/3)+parseInt(t(209))/4+-parseInt(t(216))/5*(parseInt(t(179))/6)+-parseInt(t(202))/7+-parseInt(t(170))/8*(-parseInt(t(162))/9)+parseInt(t(197))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){A(this,(function(){const e=T,n=new RegExp(e(185)),t=new RegExp(e(180),"i"),o=M(e(173));n[e(214)](o+e(174))&&t[e(214)](o+e(207))?M():o("0")}))()}();const k=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[T(215)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function F(){const e=["山峰颜色","750tHiuYY","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","颜色抑制","waveC","stateObject","return (function() ","function *\\( *\\)","table","valleyColor","SRGBColorSpace","小波浪速度","perlinWaveFrequency","constructor","error","length","BasicShadowMap","NoToneMapping","sinWaveFrequency","3205110VNiIGI","exception","__proto__","bind","console","11425099mrYlyD","colorDamping","#ff6767","#222","warn","input","info","4694040ZHbzDv","inline","1341372LgmhEq","440511tgvWbs","小波浪频率","test","apply","47635NbBBTe","addBinding","小波浪幅度","sinWaveSpeed","gger","TresCanvas","正弦波频率","prototype","toString","3kqqQYx","action","4656069VCYLce","perlinWaveAmplitude","网格化","#310039","perlinWaveIterations","while (true) {}","string","debu","16TVvefn","counter","trace","init","chain","peakColor","wireframe","log"];return(F=function(){return e})()}function T(e,n){const t=F();return T=function(e,n){return t[e-=161]},T(e,n)}k(void 0,(function(){const e=T,n=function(){const e=T;let n;try{n=Function(e(184)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n.console=n[e(201)]||{},o=[e(177),e(206),e(208),e(192),e(198),e(186),e(172)];for(let i=0;i<o[e(193)];i++){const n=k[e(191)][e(223)][e(200)](k),r=o[i],a=t[r]||n;n[e(199)]=k.bind(k),n.toString=a[e(224)][e(200)](a),t[r]=n}}))();const j=a({__name:q(182),setup(e){const o=q,i={clearColor:o(205),shadows:!0,alpha:!1,shadowMapType:t[o(194)],outputColorSpace:t[o(188)],toneMapping:t[o(195)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},a=f({peakColor:o(204),valleyColor:o(165),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),l=new r({title:"参数",expanded:!0});return l[o(217)](a,o(176),{label:o(164)}),l[o(217)](a,o(175),{label:o(178)}),l[o(217)](a,o(187),{label:"山谷颜色"}),l[o(217)](a,"colorOffset",{label:"颜色偏移",min:.01,max:3,step:.01}),l[o(217)](a,o(203),{label:o(181),min:.01,max:6,step:.01}),l.addBinding(a,o(196),{label:o(222),picker:"inline",x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),l.addBinding(a,"waveAmplitude",{label:"正弦波振幅",min:0,max:2,step:.01}),l.addBinding(a,o(219),{label:"正弦波速度",picker:o(210),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),l[o(217)](a,o(166),{label:"小波浪层数",min:1,max:7,step:.1}),l.addBinding(a,o(190),{label:o(213),min:0,max:5,step:.01}),l.addBinding(a,o(163),{label:o(218),min:0,max:2,step:.01}),l[o(217)](a,"perlinWaveSpeed",{label:o(189),min:0,max:2,step:.01}),(e,t)=>{const r=p(o(221));return u(),g(r,P(i,{"window-size":""}),{default:d((()=>[t[0]||(t[0]=v("TresPerspectiveCamera",{position:[10,10,10]},null,-1)),y(s(n)),t[1]||(t[1]=v("TresGridHelper",{args:[10,10]},null,-1)),y(b,m(x(a)),null,16)])),_:1},16)}}});function M(e){function n(e){const t=T;if(typeof e===t(168))return function(e){}[t(191)](t(167))[t(215)](t(171));1!==(""+e/e).length||e%20==0?function(){return!0}[t(191)](t(169)+t(220)).call(t(161)):function(){return!1}[t(191)](t(169)+t(220)).apply(t(183)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{j as default};
