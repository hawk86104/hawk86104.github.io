import{a1 as S,a2 as o,aq as x,aD as v,a3 as k,a4 as T,a5 as P,r as R,o as n,c as $,a as l,L as r,E as f,a8 as c,G as z,ac as G,aa as g,ab as h,Y as _,x as d,Z as p,ag as L}from"./vendor.lj85K5ev1716383888730.js";import{O as M,l as N}from"./util.ApuRGXOs1716383888730.js";import{_ as O}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.gwkkDjuj1716383888730.js";/* empty css                                                                                 */import{_ as J}from"./randomLoading.vue_vue_type_script_setup_true_lang.q3zeIIy21716383888730.js";import{_ as V}from"./cloudPoints.vue_vue_type_script_setup_true_lang.bBYiN8At1716383888730.js";import{_ as A,a as E}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.VXkm53UP1716383888730.js";import"./Reflector.7sqvGIzm1716383888730.js";import"./starLoading.dtOMzgCV1716383888730.js";import"./cssLoaders.D5oUw6ps1716383888730.js";import"./bubbleLoading.qr8Qw9R_1716383888730.js";import"./BufferGeometryUtils.__11lPDO1716383888730.js";const F=_("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),q=_("TresAmbientLight",{intensity:.5},null,-1),D={position:[0,120,0]},Y="./plugins/medical/model/brainparts.OBJ",ra=S({__name:"digitalBrainFloor",async setup(Z){let i,u;const w=o({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),e=o({color:"#fff",show:!0,opacity:1}),a=new x({title:"参数"});a.addBinding(e,"show",{label:"点云显示"}),a.addBinding(e,"color",{label:"点云颜色"}),a.addBinding(e,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const t=o({color:"#84ccff",show:!0,opacity:1});a.addBinding(t,"show",{label:"脑轮廓显示"}),a.addBinding(t,"color",{label:"脑轮廓颜色"}),a.addBinding(t,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const s=o({color:"#9e00af",show:!0,opacity:1});a.addBinding(s,"show",{label:"脑组织显示"}),a.addBinding(s,"color",{label:"脑组织颜色"}),a.addBinding(s,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const B=new M,m=([i,u]=v(()=>N(Y,B)),i=await i,u(),i),b=o({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:k,outputColorSpace:T,toneMapping:P}),y=o({autoRotate:!0,autoRotateSpeed:2});return(j,H)=>{const C=R("TresCanvas");return n(),$(z,null,[l(r(J)),l(C,c(b,{"window-size":""}),{default:f(()=>[F,l(r(G),g(h(y)),null,16),q,_("TresGroup",D,[e.show?(n(),d(V,c({key:0,model:r(m)},e),null,16,["model"])):p("",!0),(n(),d(L,null,{default:f(()=>[t.show?(n(),d(A,c({key:0,model:r(m)},t),null,16,["model"])):p("",!0)]),_:1})),s.show?(n(),d(E,c({key:1,model:r(m)},s),null,16,["model"])):p("",!0)]),l(O,g(h(w)),null,16)]),_:1},16)],64)}}});export{ra as default};
