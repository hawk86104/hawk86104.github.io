import{_ as t,C as n,a0 as e,ar as o,T as r,ai as i}from"./three.8tDGqmLF1741309500666.js";import{e as a,a as s,o as c,f as l}from"./@tresjs.yaBKiR-I1741309500666.js";import"./index.B5SALhi91741309500666.js";import{c as u}from"./simplex-noise.jB2HxhHB1741309500666.js";import{C as f}from"./index.cCquCM7w1741309500666.js";import{d as p,a3 as h,o as m,H as v,N as d,u as g,r as x,f as w,g as y,j as b,aj as _,ak as j,al as M}from"./@vue.NRI7TcgI1741309500666.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.fVIClEG21741309500666.js";import"./postprocessing.5pHDeDVF1741309500666.js";import"./@vueuse.7Aa9Vkmy1741309500666.js";import"./lamina.W8pOyVto1741309500666.js";import"./glsl-tokenizer.43JuFDpe1741309500666.js";import"./@amap.dm2alPWO1741309500666.js";import"./glsl-token-descope.w6PPrPJv1741309500666.js";import"./glsl-token-depth.7oukbwMD1741309500666.js";import"./glsl-token-scope.Dq7F3z_R1741309500666.js";import"./glsl-token-properties.hGOsJ0U41741309500666.js";import"./glsl-token-assignments.d9de3itJ1741309500666.js";import"./glsl-token-string.MeExREMz1741309500666.js";import"./glsl-token-functions.GGW4IW4s1741309500666.js";import"./object-hash.X-alA6w11741309500666.js";import"./jszip.ht5xKzrl1741309500666.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.Mi4P_XKm1741309500666.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.FVp3CvwU1741309500666.js";import"./three-stdlib.sJO3Q2ZV1741309500666.js";import"./@pmndrs.RQWNONeU1741309500666.js";import"./utils.n3_6G5BT1741309500666.js";const A=k;!function(t,n){const e=k,o=E();for(;;)try{if(180034===parseInt(e(137))/1*(parseInt(e(136))/2)+parseInt(e(171))/3+-parseInt(e(138))/4*(parseInt(e(132))/5)+parseInt(e(153))/6+-parseInt(e(198))/7*(parseInt(e(191))/8)+-parseInt(e(148))/9+parseInt(e(194))/10*(parseInt(e(167))/11))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){I(this,(function(){const t=k,n=new RegExp(t(185)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=P(t(144));n.test(o+"chain")&&e.test(o+t(131))?P():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(151)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(t,n){const e=E();return(k=function(t,n){return e[t-=124]})(t,n)}C(void 0,(function(){const t=k;let n;try{n=Function(t(203)+t(135)+");")()}catch(r){n=window}const e=n.console=n[t(200)]||{},o=[t(195),t(169),t(126),t(177),"exception","table",t(202)];for(let i=0;i<o.length;i++){const n=C[t(141)][t(174)][t(130)](C),r=o[i],a=e[r]||n;n.__proto__=C[t(130)](C),n[t(154)]=a[t(154)].bind(a),e[r]=n}}))();const S=[A(134)],R=["index",A(152),"attributes-uv",A(188),A(142),"attributes-stretch",A(125),"attributes-halfRootAngleCos"],D=["geometry"],F=["side"],T=p({__name:A(166),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const c=A;let l,p;const x=([l,p]=h((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),l=await l,p(),l),w=i,y=u(Math[c(196)]);function b(n,e){const o=c,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,i=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,a=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(179)])(r,i,a,s)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const j=function(n,e){const i=c,a=[],s=[],l=[],u=[],f=[];let p=new(t[i(179)]),h=new o;const m=-.25;for(let o=0;o<n;o++){const r=Math[i(196)]()*e-e/2,c=Math[i(196)]()*e-e/2,v=_(r,c);a.push(r,v,c);let d=Math.PI-Math[i(196)]()*(2*Math.PI);u[i(190)](Math[i(178)](.5*d)),f[i(190)](Math[i(133)](.5*d));let g=new(t[i(159)])(0,1,0),x=g.x*Math[i(178)](d/2),w=g.y*Math[i(178)](d/2),y=g.z*Math[i(178)](d/2),j=Math.cos(d/2);p[i(139)](x,w,y,j)[i(168)](),d=.5*Math.random()+m,g=new(t[i(159)])(1,0,0),x=g.x*Math.sin(d/2),w=g.y*Math[i(178)](d/2),y=g.z*Math[i(178)](d/2),j=Math.cos(d/2),h[i(139)](x,w,y,j)[i(168)](),p=b(p,h),d=.5*Math[i(196)]()+m,g=new(t[i(159)])(0,0,1),x=g.x*Math[i(178)](d/2),w=g.y*Math[i(178)](d/2),y=g.z*Math[i(178)](d/2),j=Math[i(133)](d/2),h[i(139)](x,w,y,j)[i(168)](),p=b(p,h),s.push(p.x,p.y,p.z,p.w),o<n/3?l[i(190)](1.8*Math[i(196)]()):l[i(190)](Math[i(196)]())}return{offsetsF32:new(t[i(128)])(new Float32Array(a),3),orientationsF32:new r(new Float32Array(s),4),stretchesF32:new(t[i(128)])(new Float32Array(l),1),halfRootAngleCosF32:new(t[i(128)])(new Float32Array(f),1),halfRootAngleSinF32:new(t[i(128)])(new Float32Array(u),1)}}(w[c(162)],w[c(161)]),M=new(t[c(150)])(w.bW,w.bH,1,w[c(143)])[c(129)](0,w.bH/2,0),z=new(t[c(150)])(w[c(161)],w.width,32,32);z[c(201)](new(t[c(159)])(0,1,0));const I=z[c(158)].position;for(let t=0;t<I[c(192)][c(176)];t+=3)I[c(192)][t+1]=_(I[c(192)][t],I[c(192)][t+2]);z[c(158)].position[c(156)]=!0,z[c(189)]();const C=new(f({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[c(164)])(.3,.9,0)[c(163)](),bottomColor:new n(0,.2,0)[c(163)]()},c(146),c(173),(n=>{const e=c;n[e(175)]=t[e(193)]})));C[c(145)]=x[c(145)],C[c(149)]=x[c(149)],C[c(127)]=!1;const{onLoop:k}=a();return k((({elapsed:t})=>{const n=c;C[n(155)].time[n(170)]=t/4})),(t,n)=>{const o=c;return m(),v(o(182),null,[d("TresMesh",{material:g(C)},[d(o(124),{index:g(M)[o(180)],"attributes-position":g(M).attributes[o(197)],"attributes-uv":g(M)[o(158)].uv,"attributes-offset":g(j).offsetsF32,"attributes-orientation":g(j).orientationsF32,"attributes-stretch":g(j)[o(183)],"attributes-halfRootAngleSin":g(j)[o(187)],"attributes-halfRootAngleCos":g(j).halfRootAngleCosF32},null,8,R)],8,S),d(o(184),{position:[0,0,0],geometry:g(z)},[d(o(157),{color:o(199),side:e},null,8,F)],8,D)])}}});function E(){const t=["lookAt","trace","return (function() ","TresInstancedBufferGeometry","attributes-halfRootAngleSin","info","toneMapped","InstancedBufferAttribute","translate","bind","input","440390SPSErB","cos","material",'{}.constructor("return this")( )',"58690HCuCiT","11kdWTXR","12gDbwhZ","set","call","constructor","attributes-orientation","joints","init","map","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","gger","2526129MCALhO","alphaMap","PlaneGeometry","apply","attributes-position","1281090crpLXk","toString","uniforms","needsUpdate","TresMeshStandardMaterial","attributes","Vector3","action","width","instances","convertSRGBToLinear","Color","debu","grass","22NJxyWA","normalize","warn","value","260568uqZXON","counter","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","prototype","side","length","error","sin","Vector4","index","while (true) {}","TresGroup","stretchesF32","TresMesh","function *\\( *\\)","string","halfRootAngleSinF32","attributes-offset","computeVertexNormals","push","1624tvoted","array","DoubleSide","1092540ZfOnxk","log","random","position","4025vpDmZJ","#000f00","console"];return(E=function(){return t})()}function P(t){function n(t){const e=k;if(typeof t===e(186))return function(t){}[e(141)](e(181))[e(151)](e(172));1!==(""+t/t)[e(176)]||t%20==0?function(){return!0}[e(141)](e(165)+e(147))[e(140)](e(160)):function(){return!1}.constructor(e(165)+e(147))[e(151)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}function B(){const t=["toString","length","call","debu","input","return (function() ","918856NtVPCY","counter","4lpyjKC",'{}.constructor("return this")( )',"apply","214294eCAxQy","chain","while (true) {}","constructor","exception","3392285IBcEJB","13256010JhLtjM","info","test","bind","stateObject","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","9885753aLRThx","990heuivn","2991831EZINUB","trace","action","8YCNVVD","warn","prototype","console","grass","41153KgcPlq"];return(B=function(){return t})()}const L=N;!function(t,n){const e=N,o=B();for(;;)try{if(746800===-parseInt(e(289))/1+-parseInt(e(294))/2+parseInt(e(309))/3+-parseInt(e(291))/4*(parseInt(e(299))/5)+-parseInt(e(308))/6*(parseInt(e(317))/7)+parseInt(e(312))/8*(parseInt(e(307))/9)+parseInt(e(300))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const O=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[N(293)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){O(this,(function(){const t=N,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(306),"i"),o=U(t(305));n[t(302)](o+t(295))&&e[t(302)](o+t(287))?U():o("0")}))()}();const H=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[N(293)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function N(t,n){const e=B();return(N=function(t,n){return e[t-=283]})(t,n)}H(void 0,(function(){const t=N,n=function(){const t=N;let n;try{n=Function(t(288)+t(292)+");")()}catch(e){n=window}return n}(),e=n[t(315)]=n.console||{},o=["log",t(313),t(301),"error",t(298),"table",t(310)];for(let r=0;r<o[t(284)];r++){const n=H[t(297)][t(314)][t(303)](H),i=o[r],a=e[i]||n;n.__proto__=H.bind(H),n.toString=a[t(283)][t(303)](a),e[i]=n}}))();const q=p({__name:L(316),setup(t){const n=x({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=x({enableDamping:!0,autoRotate:!1});return(t,o)=>(m(),w(g(l),_(j(n)),{default:y((()=>[o[0]||(o[0]=d("TresPerspectiveCamera",{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),b(g(c),_(j(e)),null,16),(m(),w(M,null,{default:y((()=>[b(T)])),_:1})),(m(),w(M,null,{default:y((()=>[b(g(z),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16))}});function U(t){function n(t){const e=N;if("string"==typeof t)return function(t){}.constructor(e(296))[e(293)](e(290));1!==(""+t/t)[e(284)]||t%20==0?function(){return!0}[e(297)](e(286)+"gger")[e(285)](e(311)):function(){return!1}[e(297)](e(286)+"gger").apply(e(304)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{q as default};
