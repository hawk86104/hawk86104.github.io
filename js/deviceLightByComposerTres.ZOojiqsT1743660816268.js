import{A as e,C as a,c4 as t,ar as s,at as r}from"./three.2wx8FU0g1743660816268.js";import{D as l,m as o,e as i,o as n}from"./@tresjs.zc7faK4J1743660816268.js";import{P as d}from"./tweakpane.ivGeiIdz1743660816268.js";import{r as u,u as m}from"./device.eXP1Gn9a1743660816268.js";import{d as p,a4 as h,a2 as c,o as f,H as g,N as v,u as b,F as j,r as _,e as w,f as y,g as C,m as k,j as B,aj as T,ak as x,al as L}from"./@vue.B5PFBfKs1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";const P=["object"],S=["object"],M=p({__name:"ByComposerTres",props:{threshold:{default:0},strength:{default:.972},radius:{default:.21}},async setup(t){let s,r;const n=t,{nodes:d}=([s,r]=h((()=>l("./plugins/industry4/model/modelDraco.glb",{draco:!0,decoderPath:"./draco/"}))),s=await s,r(),s),p=u(d.Sketchfab_model),{camera:_,renderer:w,scene:y,sizes:C}=o();let k=null,B=null,T=null;const x=new e({color:"black"});c((()=>{if(_.value){const{finalComposer:e,effectComposer:a,bloomPass:t}=m(y.value,_.value,w.value,C.width.value,C.height.value);k=e,B=a,T=t,T.threshold=n.threshold,T.strength=n.strength,T.radius=n.radius}n.threshold&&(T.threshold=n.threshold),n.strength&&(T.strength=n.strength),n.radius&&(T.radius=n.radius)}));const L={},{onLoop:M,onAfterLoop:A}=i();let D=d.Sketchfab_model.getObjectByName("canister_turbine_011_Nickel-Light-PBR_0"),N=D.material.clone(),z=new e({color:new a("red"),transparent:!0,opacity:1});return M((({elapsed:e})=>{d.hull_turbine&&(d.hull_turbine.rotation.x+=.03,d.blades_turbine_003.rotation.x+=.03),Math.floor(e)%2?D.material=N:D.material=z})),A((({elapsed:e})=>{B&&(y.value.traverse((e=>{var a;(a=e).isMesh&&(L[a.uuid]=a.material,a.material=x)})),B.render(e)),k&&(y.value.traverse((e=>{var a;L[(a=e).uuid]&&(a.material=L[a.uuid],delete L[a.uuid])})),k.render(e))})),(e,a)=>(f(),g(j,null,[v("primitive",{object:b(d).Sketchfab_model},null,8,P),v("primitive",{object:b(p)},null,8,S)],64))}}),A=p({__name:"deviceLightByComposerTres",setup(e){const a=_({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:t,outputColorSpace:s,toneMapping:r}),l=_({autoRotate:!0}),o=_({threshold:0,strength:.972,radius:.21}),i=new d({title:"参数"});return i.addBinding(o,"threshold",{label:"阈值",min:0,max:1,step:.1}),i.addBinding(o,"strength",{label:"强度",min:0,max:3,step:.2}),i.addBinding(o,"radius",{label:"半径",min:0,max:1,step:.1}),i.addBlade({view:"text",label:"post-processing",parse:e=>String(e),value:"未完成：等待Tresjs库更新"}),(e,t)=>{const s=w("TresCanvas");return f(),y(s,k(a,{"window-size":""}),{default:C((()=>[t[0]||(t[0]=v("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1)),B(b(n),T(x(l)),null,16),t[1]||(t[1]=v("TresAmbientLight",{color:"#ffffff",intensity:"40"},null,-1)),t[2]||(t[2]=v("TresDirectionalLight",{position:[0,2,-4],intensity:1},null,-1)),(f(),y(L,null,{default:C((()=>[B(M,T(x(o)),null,16)])),_:1}))])),_:1},16)}}});export{A as default};
