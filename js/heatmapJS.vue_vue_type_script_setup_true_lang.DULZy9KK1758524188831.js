import{ah as t,a3 as e}from"./three.CC50Wz7a1758524188831.js";import{h as a}from"./heatmap.js-fix.B-4wXC0W1758524188831.js";import{d as n,a2 as o,G as i,o as s,I as r,a7 as l,a8 as h}from"./@vue.pEDXJ_3Z1758524188831.js";const p=["position"],v=["args","rotate-x"],u=n({__name:"heatmapJS",props:{position:{default:[0,0,0]},Plane:{default:[50,50,1e3,1e3]},show2dCanvas:{type:Boolean,default:!0},heightRatio:{default:6}},setup(n,{expose:u}){const d=n;let g=null;const m=(t,e)=>Math.round(10*(Math.random()*(t-e+1)+e))/10;let c=null;const f=t=>{if(t);else{let e=0;for(t=[];e<2e3;)t.push({x:m(1,256),y:m(1,256),value:m(1,6)}),e++}g.setData({max:12,data:t}),y.needsUpdate=!0},y=new t((c=document.createElement("heatmap-canvas"),c.width=100,c.height=100,c.style.position="absolute",c.style.top="0",c.style.left="0",document.body.appendChild(c),g=a.create({container:c,width:256,height:256,blur:".8",radius:10}),g)._renderer.canvas);f();const x={transparent:!0,side:e,vertexShader:"\n\tuniform sampler2D heightMap;\n\tuniform float heightRatio;\n\tvarying vec2 vUv;\n\tvarying float hValue;\n\tvarying vec3 cl;\n\tvoid main() {\n\t  vUv = uv;\n\t  vec3 pos = position;\n\t  cl = texture2D(heightMap, vUv).rgb;\n\t  hValue = texture2D(heightMap, vUv).r;\n\t  pos.y = hValue * heightRatio;\n\t  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\n\t}",fragmentShader:"\n\tvarying float hValue;\n\tvarying vec3 cl;\n\tvoid main() {\n\t\tfloat v = abs(hValue - 1.);\n\t\tgl_FragColor = vec4(cl, .8 - v * v*1.1) ; \n\t}",uniforms:{heightMap:{type:"t",value:y},heightRatio:{value:d.heightRatio}}};return o((()=>{c.style.display=""+(d.show2dCanvas?"block":"none"),d.heightRatio&&(x.uniforms.heightRatio.value=d.heightRatio)})),u({setData:f}),(t,e)=>(s(),i("TresMesh",{position:d.position},[r("TresPlaneGeometry",{args:d.Plane,"rotate-x":.5*-Math.PI},null,8,v),r("TresShaderMaterial",l(h(x)),null,16)],8,p))}});export{u as _};
