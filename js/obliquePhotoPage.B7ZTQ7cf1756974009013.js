import{m as e,e as s,a as t}from"./@tresjs.C2b5OFct1756974009013.js";import{P as i}from"./tweakpane.C0HtAJSg1756974009013.js";import{a as o,b as a,i as r}from"./utils.Ad0m5DZu1756974009013.js";import{T as l}from"./3d-tiles-renderer.1pOh180W1756974009013.js";import{d as n,b as p,w as u,G as d,o as m,I as j,u as c,r as g,h as v,e as f,f as h,j as b,m as R}from"./@vue.pEDXJ_3Z1756974009013.js";import{X as w,Y as T}from"./three.QlBabAUP1756974009013.js";import"./postprocessing.DuMTjsTx1756974009013.js";import"./@vueuse.BbWOQEYU1756974009013.js";import"./@tweenjs.Dhzs71lh1756974009013.js";import"./utils.MFxA3x6c1756974009013.js";import"./@fesjs.BxH8SrKG1756974009013.js";import"./vue-router.BzNOprYp1756974009013.js";import"./lodash-es.C7pWAXPe1756974009013.js";import"./pinia.Cod4x9ah1756974009013.js";import"./@qlin.q6OWdsQV1756974009013.js";import"./@babel.BPq7uOAK1756974009013.js";import"./@floating-ui.BFjFSAYt1756974009013.js";import"./@juggle.CcBCnTIR1756974009013.js";import"./three-mesh-bvh.DVIvx3oK1756974009013.js";import"./d3-geo.D2Fk1Txq1756974009013.js";const B=["object"],U=n({__name:"obliquePhoto",props:{tilesUrl:{default:"./plugins/geokit/tiles/tileset.json"},isRotation:{type:Boolean,default:!1},isRranslation:{type:Boolean,default:!0}},setup(t,{expose:i}){const r=t,n=p(null),{camera:g,renderer:v,sizes:f}=e(),h=(e,s,t)=>{e.setCamera(s),e.setResolutionFromRenderer(s,t)},b=()=>{let e=new l(r.tilesUrl);return e.fetchOptions.mode="cors",e.addEventListener("load-tile-set",(()=>{a(e,r.isRotation,r.isRranslation)})),e.addEventListener("dispose-model",(({scene:e})=>{e.traverse((e=>{e.material&&e.material.dispose()}))})),h(e,g.value,v.value),e};let R=b();u((()=>[r.isRotation,r.isRranslation]),(()=>{R.group&&o(R.group,r.isRotation,r.isRranslation)})),u(g,(()=>{g.value&&h(R,g.value,v.value)}),{immediate:!0});const{onBeforeLoop:w}=s();return w((()=>{g.value&&f.width.value&&R.update&&(g.value.updateMatrixWorld(),R.update())})),u((()=>r.tilesUrl),(e=>{e!==R.rootURL&&(R.dispose(),R=b())})),i({group:n,tilesGroup:R.group}),(e,s)=>(m(),d("TresGroup",{ref_key:"groupRef",ref:n},[j("primitive",{object:c(R).group},null,8,B)],512))}}),x=n({__name:"obliquePhotoPage",setup(e){const s={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:T,toneMappingExposure:1,shadowMapType:w},o=g({tilesUrl:"https://opensource.cdn.icegl.cn/3Dtiles/simpleGIS/TilesetWithDiscreteLOD/tileset.json",isRotation:!0,isRranslation:!0}),a=p(o.tilesUrl),l=new i;l.addBinding(a,"value",{label:"tiles地址"});return l.addButton({title:"应用",label:"从url读取tiles"}).on("click",(()=>{a.value!==o.tilesUrl&&(l.disabled=!0,r(a.value).then((e=>{e?o.tilesUrl=a.value:alert("这不是一个有效的3D Tiles地址"),l.disabled=!1})))})),l.addBinding(o,"isRotation",{label:"地心旋转"}),l.addBinding(o,"isRranslation",{label:"居中展示"}),(e,i)=>{const a=v("TresCanvas");return m(),f(a,R(s,{"window-size":""}),{default:h((()=>[i[0]||(i[0]=j("TresPerspectiveCamera",{position:[800,800,800],fov:60,near:1,far:2e4},null,-1)),b(c(t)),i[1]||(i[1]=j("TresAmbientLight",{intensity:1},null,-1)),i[2]||(i[2]=j("TresDirectionalLight",{position:[1,2,3],intensity:1.25},null,-1)),i[3]||(i[3]=j("TresAxesHelper",{args:[100]},null,-1)),b(U,R(o,{"rotation-x":o.isRotation?-Math.PI/2:0}),null,16,["rotation-x"])])),_:1},16)}}});export{x as default};
