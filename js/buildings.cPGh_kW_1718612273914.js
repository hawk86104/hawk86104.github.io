import{u as t,_ as n,a as o}from"./mergeTres.Ck3BC4G-1718612273914.js";import{l as e}from"./utils.CJ4f1P4x1718612273914.js";import{r}from"./@tresjs.W42D3qe_1718612273914.js";import{d as a,r as i,a2 as l,o as c,D as s,F as u,V as f,J as p,aj as v,ak as d,e as g,j as m,g as h,f as _,al as y,m as C,am as x,an as w}from"./@vue.CpOXM7bB1718612273914.js";import{_ as b}from"./@fesjs.K6L2Ptsw1718612273914.js";import"./@amap.zA6BxCQR1718612273914.js";import"./pinia.Io9o2y5w1718612273914.js";import"./three.HHcT7YAr1718612273914.js";import"./three-mesh-bvh.EwUvM4mC1718612273914.js";import"./@vueuse.YjRg4c7n1718612273914.js";import"./tweakpane.qqn77PB81718612273914.js";import"./vue-router.8CWAXHk21718612273914.js";import"./lodash-es.nFpJXAf-1718612273914.js";import"./@qlin.yHhFDldE1718612273914.js";import"./@floating-ui.BPbuo5Gx1718612273914.js";import"./@juggle.7yjBMqoW1718612273914.js";const S=F;function I(){const t=["20KagedU","lngLatToCoord","constructor","console","far","13599govMKi","mapHandle","faceUv","gger","cameraState","warn","uvArray","geometry","position","194766snNYQe","bind","58041naRXqY","6080BQrVVK","u_zoom","TresMesh","debu","u_far","normal","TresBufferGeometry","uniforms","counter","chain","4388624EyXZCO","string","test","627160zQpezv","1080060IBxlZx","table","tbgRef","exp","action","value","prototype","843306poApkU","init","near","stateObject","error","trace","function *\\( *\\)","exception","toString","apply","14uKtqXv","length","TresShaderMaterial",'{}.constructor("return this")( )',"buildings","__proto__","customCoords","log","atan"];return(I=function(){return t})()}!function(t,n){const o=F,e=I();for(;;)try{if(340559===-parseInt(o(243))/1+parseInt(o(260))/2+parseInt(o(245))/3+parseInt(o(259))/4*(parseInt(o(229))/5)+-parseInt(o(267))/6*(parseInt(o(220))/7)+parseInt(o(256))/8+parseInt(o(234))/9*(-parseInt(o(246))/10))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const j=function(){let t=!0;return function(n,o){const e=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,e}}();!function(){j(this,(function(){const t=F,n=new RegExp(t(216)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=P(t(268));n[t(258)](e+t(255))&&o[t(258)](e+"input")?P():e("0")}))()}();const z=function(){let t=!0;return function(n,o){const e=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,e}}();z(void 0,(function(){const t=F;let n;try{n=Function("return (function() "+t(223)+");")()}catch(r){n=window}const o=n[t(232)]=n[t(232)]||{},e=[t(227),t(239),"info",t(271),t(217),t(261),t(215)];for(let a=0;a<e.length;a++){const n=z[t(231)][t(266)].bind(z),r=e[a],i=o[r]||n;n[t(225)]=z[t(244)](z),n.toString=i[t(218)][t(244)](i),o[r]=n}}))();const A=[S(242),S(236),S(251)],R=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=F;for(let e=0;e<t[n(221)];e+=3){const r=[t[e],t[e+1]],a=o[n(235)][n(226)][n(230)](r);t[e]=a[0],t[e+1]=a[1],t[e+2]=.2*t[e+2]}},g=i([]),m={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[F(238)]&&(async()=>{const t=F,n=await e("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(224));for(let o=0;o<n[t(221)];o++){const e=n[o];a(e.geometry);const r=new Float32Array(e.geometry),i=new Float32Array(e[t(236)]),l=new Float32Array(e[t(241)][t(221)]);g.push({positionArray:r,uvArray:i,normalArray:l})}})()}));const{onLoop:h}=r();return h((()=>{const t=F;o.cameraState&&(m[t(253)][t(247)][t(265)]=o[t(235)].getZoom(),m[t(253)].u_near.value=o.cameraState[t(269)],m[t(253)][t(250)][t(265)]=o[t(238)][t(233)])})),(t,n)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(g,((t,n)=>{const o=F;return c(),s(o(248),{key:""+n},[p(o(252),{ref_for:!0,ref:o(262),position:[t.positionArray,3],faceUv:[t[o(240)],2],normal:[t.normalArray,3]},null,8,A),p(o(222),v(d(m)),null,16)])})),128))]))}});function F(t,n){const o=I();return(F=function(t,n){return o[t-=215]})(t,n)}function P(t){function n(t){const o=F;if(typeof t===o(257))return function(t){}[o(231)]("while (true) {}")[o(219)](o(254));1!==(""+t/t).length||t%20==0?function(){return!0}[o(231)](o(249)+o(237)).call(o(264)):function(){return!1}[o(231)](o(249)+o(237))[o(219)](o(270)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function U(t,n){const o=D();return(U=function(t,n){return o[t-=135]})(t,n)}const M=U;!function(t,n){const o=U,e=D();for(;;)try{if(248934===-parseInt(o(139))/1+parseInt(o(150))/2+-parseInt(o(147))/3*(parseInt(o(146))/4)+-parseInt(o(149))/5*(parseInt(o(165))/6)+-parseInt(o(152))/7+parseInt(o(171))/8+parseInt(o(144))/9)break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const k=function(){let t=!0;return function(n,o){const e=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,e}}();function D(){const t=["465120cACaEz","constructor","chain","trace","__proto__","12647322tLmAYZ","TresPerspectiveCamera","212QtnJFQ","17841DSrrJW","tresCanvas","135UkDaGv","139950epMAfA","error","619675QzOSME","action","debu","function *\\( *\\)","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","prototype","gger","init","call","while (true) {}","string","darkblue","toString","109986exMTyu","exception","bind","input","counter","length","1099792NjeTaH","log","console","apply",'{}.constructor("return this")( )',"stateObject","test","tcRef"];return(D=function(){return t})()}!function(){k(this,(function(){const t=U,n=new RegExp(t(155)),o=new RegExp(t(156),"i"),e=V(t(159));n[t(137)](e+t(141))&&o[t(137)](e+t(168))?V():e("0")}))()}();const E=function(){let t=!0;return function(n,o){const e=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,e}}();E(void 0,(function(){const t=U,n=function(){const t=U;let n;try{n=Function("return (function() "+t(135)+");")()}catch(o){n=window}return n}(),o=n[t(173)]=n[t(173)]||{},e=[t(172),"warn","info",t(151),t(166),"table",t(142)];for(let r=0;r<e[t(170)];r++){const n=E[t(140)][t(157)][t(167)](E),a=e[r],i=o[a]||n;n[t(143)]=E.bind(E),n[t(164)]=i.toString[t(167)](i),o[a]=n}}))();const L=t=>(x("data-v-40288e17"),t=t(),w(),t),T=L((()=>p(M(145),{fov:60,near:.1,far:2e3},null,-1))),W=L((()=>p("TresAmbientLight",{intensity:.5},null,-1)));function V(t){function n(t){const o=U;if(typeof t===o(162))return function(t){}[o(140)](o(161))[o(174)](o(169));1!==(""+t/t)[o(170)]||t%20==0?function(){return!0}[o(140)](o(154)+o(158))[o(160)](o(153)):function(){return!1}[o(140)]("debu"+o(158))[o(174)](o(136)),n(++t)}try{if(t)return n;n(0)}catch(o){}}const N=b(a({__name:"buildings",setup(t){const e=[121.407867,31.157717],r=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=U,l=g("TresCanvas");return c(),s(u,null,[m(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:i(163)}),m(l,C({id:i(148),ref:i(138)},r),{default:h((()=>[T,W,m(o,{center:e}),(c(),_(y,null,{default:h((()=>[m(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{N as default};
