import{i as e}from"./Resource.DxdCIUkg1758524188831.js";import{d as s,b as o,w as t,G as l,o as a,H as r,ab as n}from"./@vue.pEDXJ_3Z1758524188831.js";const u=["object"],c=s({__name:"topoBase",props:{selected:{default:"baseModelA"},type:{default:["baseModelA","baseModelB"]},colorlist:{default:["#6381EE","#FFFFFF"]},roughness:{default:.5},metalness:{default:.6}},setup(s){const c=s,i=o(!1);(async()=>{for(const s of c.type)await e.getResource("GLTFLoader",`./plugins/floor/models/topoBase/${s}.glb`,`topo-${s}.glb`);i.value=!0})();const d=o(null),p={};t((()=>i.value),(s=>{s&&(d.value=e.getReactiveItem(`topo-${c.selected}.glb`)().scene.clone(),m(d.value))}),{immediate:!0}),t((()=>c.selected),(async s=>{d.value=e.getReactiveItem(`topo-${s}.glb`)().scene.clone(),m(d.value)}));const m=e=>{for(const s in p)p[s].dispose(),delete p[s];e.traverse((e=>{if(e.isMesh&&e.material){const s=e.material;p[s.uuid]||(p[s.uuid]=s.clone()),e.material=p[s.uuid]}})),f(c.colorlist)},f=e=>{let s=0;for(const o in p)p.hasOwnProperty(o)&&p[o].color.set(e[s]),s++},v=(e,s)=>{for(const o in p)p.hasOwnProperty(o)&&(p[o][e]=s)};return t((()=>c.colorlist),(e=>{f(e)}),{deep:!0}),t((()=>[c.roughness,c.metalness]),(([e,s])=>{v("roughness",e),v("metalness",s)}),{deep:!0}),(e,s)=>(a(),l("TresGroup",null,[d.value?(a(),l("primitive",{key:0,object:n(d.value)},null,8,u)):r("",!0)]))}});export{c as _};
