import{c0 as n,ak as t,am as e,C as o,aX as a,c as r}from"./three.6w8Allze1738810638719.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.8axf5yqM1738810638719.js";import{d as u,b as f,w as d,e as m,o as p,H as h,j as v,u as g,g as w,N as b,aj as M,ak as C,F as P}from"./@vue.NRI7TcgI1738810638719.js";import"./@vueuse.hJpps2zM1738810638719.js";const y=T;!function(n,t){const e=T,o=j();for(;;)try{if(810347===-parseInt(e(344))/1+parseInt(e(374))/2+parseInt(e(351))/3*(parseInt(e(385))/4)+-parseInt(e(359))/5+-parseInt(e(355))/6+parseInt(e(365))/7+-parseInt(e(342))/8)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(400)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=T,t=new RegExp(n(390)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=_(n(367));t.test(o+n(395))&&e[n(362)](o+n(383))?_():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(400)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function j(){const n=["1508992jwaJqo","return (function() ","34794ByEWSH","outsideColor",'{}.constructor("return this")( )',"bind","uTime","branches","trace","27UvhfCm","TresCanvas","black","sin","1068864jATHeF","position","prototype","value","3207480XVdosG","debu","radius","test","galaxy","TresPerspectiveCamera","3913350FTejkm","setAttribute","init","#b5f28d","count","toString","TresPoints","warn","action","1213636nEnJJs","constructor","a-scale","uniforms","#1b3984","lerp","call","info","a-randomness","input","geometry","305572AnJvrN","clone","insideColor","TresBufferGeometry","length","function *\\( *\\)","randomnessPower","string","keys","console","chain","stateObject","color","random","table","apply"];return(j=function(){return n})()}z(void 0,(function(){const n=T;let t;try{t=Function(n(343)+n(346)+");")()}catch(a){t=window}const e=t[n(394)]=t[n(394)]||{},o=["log",n(372),n(381),"error","exception",n(399),n(350)];for(let r=0;r<o.length;r++){const t=z[n(375)][n(357)][n(347)](z),a=o[r],s=e[a]||t;t.__proto__=z[n(347)](z),t[n(370)]=s.toString.bind(s),e[a]=t}}))();const S=["position",y(376),y(397),y(382)];function T(n,t){const e=j();return(T=function(n,t){return e[n-=342]})(n,t)}const A=u({__name:y(363),setup(u){const x=y,z={clearColor:x(353),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(368),outsideColor:x(378)},A=new o(j[x(387)]),_=new o(j.outsideColor),F=new Float32Array(3*j[x(369)]),I=new Float32Array(3*j[x(369)]),k=new Float32Array(j[x(369)]),R=new Float32Array(3*j[x(369)]);for(let n=0;n<j[x(369)];n++){const t=3*n,e=Math[x(398)]()*j[x(361)],o=n%j[x(349)]*Math.PI*2/j[x(349)];F[t]=Math.cos(o)*e,F[t+1]=0,F[t+2]=Math.sin(o)*e;const a=Math.random()**j[x(391)]*(Math[x(398)]()<.5?-1:1),r=Math[x(398)]()**j.randomnessPower*(Math[x(398)]()<.5?-1:1),s=Math[x(398)]()**j[x(391)]*(Math[x(398)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=A.clone();i.lerp(_,e/j[x(361)]),I[t+0]=i.r,I[t+1]=i.g,I[t+2]=i.b,k[n]=Math[x(398)]()}const E={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j.size}}};const J=f(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=x;J[t(358)]&&(J[t(358)].material[t(377)][t(348)][t(358)]=n)}));const{count:H,size:B,radius:G,branches:N,spin:W,randomness:X,randomnessPower:Z,insideColor:$,outsideColor:q}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:"#b5f28d",outsideColor:x(378)});return d([H[x(358)],B[x(358)],G[x(358)],N.value,W.value,X[x(358)],Z[x(358)],$[x(358)],q.value],(n=>{n.forEach(((n,t)=>{const e=T;j[Object[e(393)](j)[t]]=n[e(358)]})),function(){const n=x;if(J[n(358)]){const t=new o(j[n(387)]),e=new o(j[n(345)]),a=new Float32Array(3*j[n(369)]),s=new Float32Array(3*j.count),i=new Float32Array(j[n(369)]),c=new Float32Array(3*j.count);for(let o=0;o<j[n(369)];o++){const r=3*o,l=Math[n(398)]()*j[n(361)],u=o%j.branches*Math.PI*2/j.branches;a[r]=Math.cos(u)*l,a[r+1]=0,a[r+2]=Math[n(354)](u)*l;const f=Math.random()**j[n(391)]*(Math[n(398)]()<.5?-1:1),d=Math[n(398)]()**j[n(391)]*(Math[n(398)]()<.5?-1:1),m=Math[n(398)]()**j[n(391)]*(Math[n(398)]()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=t[n(386)]();p[n(379)](e,l/j[n(361)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math[n(398)]()}J.value[n(384)][n(366)](n(356),new r(a,3)),J.value.geometry.setAttribute("aRandomness",new r(c,3)),J[n(358)][n(384)].setAttribute(n(397),new r(s,3)),J.value[n(384)][n(366)]("aScale",new r(i,1))}}()})),(n,t)=>{const e=x,o=m(e(352));return p(),h(P,null,[v(g(c)),v(o,M(C(z)),{default:w((()=>[t[0]||(t[0]=b(e(364),{position:[3,3,3]},null,-1)),b(e(371),{ref_key:"bufferRef",ref:J},[b(e(388),{position:[g(F),3],"a-scale":[g(k),1],color:[g(I),3],"a-randomness":[g(R),3]},null,8,S),b("TresShaderMaterial",M(C(E)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function _(n){function t(n){const e=T;if(typeof n===e(392))return function(n){}[e(375)]("while (true) {}")[e(400)]("counter");1!==(""+n/n)[e(389)]||n%20==0?function(){return!0}.constructor("debugger")[e(380)](e(373)):function(){return!1}[e(375)](e(360)+"gger")[e(400)](e(396)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{A as default};
