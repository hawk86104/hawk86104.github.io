import{e,o as n,a as t}from"./@tresjs.Ea5Oq_-I1741168315107.js";import{P as a}from"./tweakpane.yDiyAAkA1741168315107.js";import{d as o,a3 as r,v as i,e as l,o as s,f as u,g as c,N as p,j as f,u as v,m,aj as d,ak as h}from"./@vue.NRI7TcgI1741168315107.js";import{y as g,ak as x}from"./three.FxqAALWt1741168315107.js";import"./postprocessing.hfy6Kqg11741168315107.js";import"./@vueuse.Z8xAfE_A1741168315107.js";const y=S;!function(e,n){const t=S,a=_();for(;;)try{if(413110===-parseInt(t(208))/1*(-parseInt(t(261))/2)+parseInt(t(268))/3+parseInt(t(234))/4*(parseInt(t(265))/5)+parseInt(t(260))/6*(parseInt(t(256))/7)+-parseInt(t(241))/8*(parseInt(t(273))/9)+parseInt(t(222))/10+-parseInt(t(264))/11)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=S,n=new RegExp(e(240)),t=new RegExp(e(220),"i"),a=j("init");n[e(215)](a+e(224))&&t[e(215)](a+e(238))?j():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(e,n){const t=_();return(S=function(e,n){return t[e-=208]})(e,n)}function _(){const e=["TresPoints","海浪高度","input","wireframeMaterialRef","function *\\( *\\)","4328TVHlaV","uTime","exception","log","table","groupRef","call","error","warn","TresMesh","value","action","#080820","return (function() ","#17c5a9","15687jYkFHr","color","bind","TresPerspectiveCamera","1866fxGhUv","14zsCkjG","length","prototype","24503028FWeIyD","397990BmrPue","console","Debug","1178919XbqoGB","TresMeshBasicMaterial","uniforms","string","#ffffff","198snNCxr","TresCanvas","gger","粒子大小","uWaveSpeed","40253adTnif","constructor","change","TresHemisphereLight","海浪变化速度","TresIcosahedronGeometry","set","test","__proto__","pointSize","addBinding","TresShaderMaterial","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","info","5644830PvlFWk","trace","chain","addFolder","while (true) {}","apply","TresGroup","toString","pointsEarth",'{}.constructor("return this")( )',"debu","stateObject","36kCtwcQ","counter"];return(_=function(){return e})()}w(void 0,(function(){const e=S,n=function(){const e=S;let n;try{n=Function(e(254)+e(231)+");")()}catch(t){n=window}return n}(),t=n[e(266)]=n[e(266)]||{},a=[e(244),e(249),e(221),e(248),e(243),e(245),e(223)];for(let o=0;o<a.length;o++){const n=w[e(209)][e(263)][e(258)](w),r=a[o],i=t[r]||n;n[e(216)]=w[e(258)](w),n[e(229)]=i[e(229)][e(258)](i),t[r]=n}}))();const b=o({__name:y(230),async setup(o){const T=y;let w,S;const _={color:T(255),pointSize:4},b={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:x},j={color:_.color,wireframe:!0,transparent:!0,opacity:.2},z=([w,S]=r((()=>t(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),w=await w,S(),w),P=z[0],E=z[1],k=z[2],D=z[3],I=z[4],C={uniforms:{size:{type:"f",value:_[T(217)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:k},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:P},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:g},A=i(),W=i(),H=(new a)[T(225)]({title:T(267)});H.addBinding(_,"color",{type:T(257)}).on(T(210),(({value:e})=>{const n=T;W[n(251)][n(257)][n(214)](e)})),H[T(218)](C[T(270)].size,T(251),{min:.1,max:10,step:.1,label:T(276)}),H[T(218)](C[T(270)].uWaveHeight,T(251),{min:.01,max:.5,step:.01,label:T(237)}),H[T(218)](C[T(270)][T(277)],T(251),{min:.01,max:1,step:.01,label:T(212)});const{onLoop:U}=e();return U((({delta:e})=>{const n=T;A[n(251)]&&(A[n(251)].rotation.y+=.002,C[n(270)][n(242)][n(251)]+=10*e)})),(e,t)=>{const a=T,o=l(a(274));return s(),u(o,m(b,{"window-size":""}),{default:c((()=>[t[2]||(t[2]=p(a(259),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),f(v(n),{autoRotate:!0,autoRotateSpeed:2}),p(a(228),{ref_key:a(246),ref:A},[p(a(250),null,[t[0]||(t[0]=p(a(213),{args:[1,4]},null,-1)),p(a(269),m({ref_key:a(239),ref:W},j),null,16)]),p(a(236),null,[t[1]||(t[1]=p(a(213),{args:[1,128]},null,-1)),p(a(219),d(h(C)),null,16)])],512),t[3]||(t[3]=p(a(211),{args:[a(272),a(253),3]},null,-1))])),_:1},16)}}});function j(e){function n(e){const t=S;if(typeof e===t(271))return function(e){}[t(209)](t(226))[t(227)](t(235));1!==(""+e/e)[t(262)]||e%20==0?function(){return!0}[t(209)](t(232)+t(275))[t(247)](t(252)):function(){return!1}.constructor(t(232)+t(275))[t(227)](t(233)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
