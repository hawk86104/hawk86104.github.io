import{_ as t,m as n,b as e,C as o,a7 as r,ap as a}from"./three.XuMWWlrU1743039954535.js";import{e as i,a as s,o as c}from"./@tresjs.05J-Im0t1743039954535.js";import"./index.3vFJA8eM1743039954535.js";import{c as l}from"./simplex-noise.jB2HxhHB1743039954535.js";import{C as u}from"./index.5i_Lshjm1743039954535.js";import{d as f,a3 as p,o as h,H as m,N as v,u as d,r as g,e as x,f as w,g as y,j as b,aj as _,ak as z,al as M}from"./@vue.C4dqouNn1743039954535.js";import{_ as j}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.eeDIKbIc1743039954535.js";import"./postprocessing.YRVqsIkW1743039954535.js";import"./@vueuse.NzAeD-Dt1743039954535.js";import"./lamina.BOIwMUyl1743039954535.js";import"./glsl-tokenizer.Fq-_WqIE1743039954535.js";import"./@amap.7j9kjwBk1743039954535.js";import"./glsl-token-descope.dzikyoVQ1743039954535.js";import"./glsl-token-depth.YU6whtdQ1743039954535.js";import"./glsl-token-scope.fsyROTG31743039954535.js";import"./glsl-token-properties.g-TsNdbY1743039954535.js";import"./glsl-token-assignments.j9FG3Za11743039954535.js";import"./glsl-token-string.u7T6LGXR1743039954535.js";import"./glsl-token-functions.JxG5OFUD1743039954535.js";import"./object-hash.mBR0vz1e1743039954535.js";import"./jszip.5Yd3mfTB1743039954535.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.foEkV7Bq1743039954535.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.eZ63Dyrj1743039954535.js";import"./three-stdlib.DxlPEuV51743039954535.js";import"./@pmndrs.Z1sh1G-81743039954535.js";import"./utils.bYJKCM9a1743039954535.js";const I=R;!function(t,n){const e=R,o=T();for(;;)try{if(223133===parseInt(e(276))/1+parseInt(e(311))/2*(parseInt(e(298))/3)+-parseInt(e(330))/4*(parseInt(e(334))/5)+-parseInt(e(281))/6*(parseInt(e(275))/7)+parseInt(e(265))/8*(parseInt(e(293))/9)+parseInt(e(335))/10+-parseInt(e(286))/11*(-parseInt(e(320))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[R(310)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){A(this,(function(){const t=R,n=new RegExp(t(288)),e=new RegExp(t(339),"i"),o=E("init");n[t(267)](o+t(318))&&e[t(267)](o+t(274))?E():o("0")}))()}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();C(void 0,(function(){const t=R,n=function(){const t=R;let n;try{n=Function(t(277)+'{}.constructor("return this")( ));')()}catch(e){n=window}return n}(),e=n.console=n[t(279)]||{},o=["log",t(336),t(269),t(315),t(325),t(317),t(304)];for(let r=0;r<o[t(329)];r++){const n=C.constructor[t(303)][t(309)](C),a=o[r],i=e[a]||n;n[t(324)]=C[t(309)](C),n[t(327)]=i.toString[t(309)](i),e[a]=n}}))();const F=[I(294)],S=[I(290),"attributes-position","attributes-uv","attributes-offset",I(342),I(299),I(341),"attributes-halfRootAngleCos"],k=["geometry"],D=[I(332)];function R(t,n){const e=T();return R=function(t,n){return e[t-=264]},R(t,n)}function T(){const t=["toneMapped","push","26704psuEtj","joints","test","random","info","orientationsF32","while (true) {}","Color","stateObject","input","196UwFCBe","18076GDYFWn","return (function() ","DoubleSide","console","map","45726SJgcOl","translate","string","grass","call","22WrDZaC","TresMesh","function *\\( *\\)","sin","index","instances","halfRootAngleCosF32","216SZFMaO","material","needsUpdate","cos","alphaMap","3gzBWxb","attributes-stretch","constructor","array","debu","prototype","trace","attributes","gger","offsetsF32","position","bind","apply","650872npMAik","computeVertexNormals","stretchesF32","width","error","counter","table","chain","InstancedBufferAttribute","972360vOvbzG","normalize","halfRootAngleSinF32","Vector4","__proto__","exception","PlaneGeometry","toString","set","length","36pWzhTE","TresGroup","side","TresInstancedBufferGeometry","205895lNeoNb","2214480zvpwWI","warn","convertSRGBToLinear","Vector3","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","#000f00","attributes-halfRootAngleSin","attributes-orientation"];return(T=function(){return t})()}const B=f({__name:I(284),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(a){const c=I;let f,g;const x=([f,g]=p((()=>s({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),f=await f,g(),f),w=a,y=l(Math[c(268)]);function b(n,e){const o=c,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(323)])(r,a,i,s)}function _(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const z=function(n,o){const a=c,i=[],s=[],l=[],u=[],f=[];let p=new(t[a(323)]),h=new(t[a(323)]);const m=-.25;for(let r=0;r<n;r++){const c=Math[a(268)]()*o-o/2,v=Math[a(268)]()*o-o/2,d=_(c,v);i[a(264)](c,d,v);let g=Math.PI-Math[a(268)]()*(2*Math.PI);u[a(264)](Math[a(289)](.5*g)),f[a(264)](Math.cos(.5*g));let x=new e(0,1,0),w=x.x*Math.sin(g/2),y=x.y*Math[a(289)](g/2),z=x.z*Math[a(289)](g/2),M=Math[a(296)](g/2);p.set(w,y,z,M)[a(321)](),g=.5*Math[a(268)]()+m,x=new(t[a(338)])(1,0,0),w=x.x*Math.sin(g/2),y=x.y*Math[a(289)](g/2),z=x.z*Math.sin(g/2),M=Math.cos(g/2),h[a(328)](w,y,z,M)[a(321)](),p=b(p,h),g=.5*Math[a(268)]()+m,x=new(t[a(338)])(0,0,1),w=x.x*Math[a(289)](g/2),y=x.y*Math.sin(g/2),z=x.z*Math.sin(g/2),M=Math.cos(g/2),h[a(328)](w,y,z,M)[a(321)](),p=b(p,h),s[a(264)](p.x,p.y,p.z,p.w),r<n/3?l[a(264)](1.8*Math.random()):l.push(Math[a(268)]())}return{offsetsF32:new r(new Float32Array(i),3),orientationsF32:new(t[a(319)])(new Float32Array(s),4),stretchesF32:new(t[a(319)])(new Float32Array(l),1),halfRootAngleCosF32:new(t[a(319)])(new Float32Array(f),1),halfRootAngleSinF32:new r(new Float32Array(u),1)}}(w[c(291)],w[c(314)]),M=new(t[c(326)])(w.bW,w.bH,1,w[c(266)])[c(282)](0,w.bH/2,0),j=new n(w[c(314)],w[c(314)],32,32);j.lookAt(new e(0,1,0));const A=j[c(305)][c(308)];for(let t=0;t<A[c(301)][c(329)];t+=3)A[c(301)][t+1]=_(A[c(301)][t],A.array[t+2]);j[c(305)].position[c(295)]=!0,j[c(312)]();const C=new(u({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[c(272)])(.3,.9,0)[c(337)](),bottomColor:new o(0,.2,0).convertSRGBToLinear()},"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }",(n=>{const e=c;n[e(332)]=t[e(278)]})));C[c(280)]=x[c(280)],C[c(297)]=x.alphaMap,C[c(343)]=!1;const{onLoop:R}=i();return R((({elapsed:t})=>{C.uniforms.time.value=t/4})),(n,e)=>{const o=c;return h(),m(o(331),null,[v(o(287),{material:d(C)},[v(o(333),{index:d(M)[o(290)],"attributes-position":d(M)[o(305)][o(308)],"attributes-uv":d(M).attributes.uv,"attributes-offset":d(z)[o(307)],"attributes-orientation":d(z)[o(270)],"attributes-stretch":d(z)[o(313)],"attributes-halfRootAngleSin":d(z)[o(322)],"attributes-halfRootAngleCos":d(z)[o(292)]},null,8,S)],8,F),v(o(287),{position:[0,0,0],geometry:d(j)},[v("TresMeshStandardMaterial",{color:o(340),side:t[o(278)]},null,8,D)],8,k)])}}});function E(t){function n(t){const e=R;if(typeof t===e(283))return function(t){}[e(300)](e(271)).apply(e(316));1!==(""+t/t).length||t%20==0?function(){return!0}[e(300)]("debu"+e(306))[e(285)]("action"):function(){return!1}[e(300)](e(302)+e(306))[e(310)](e(273)),n(++t)}try{if(t)return n;n(0)}catch(e){}}function H(t,n){const e=P();return H=function(t,n){return e[t-=245]},H(t,n)}const O=H;!function(t,n){const e=H,o=P();for(;;)try{if(295584===parseInt(e(247))/1+-parseInt(e(267))/2+parseInt(e(248))/3*(parseInt(e(278))/4)+-parseInt(e(252))/5*(-parseInt(e(281))/6)+parseInt(e(261))/7+parseInt(e(274))/8*(-parseInt(e(279))/9)+-parseInt(e(251))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const L=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[H(263)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function P(){const t=["grass","bind","TresCanvas","4hdftnv","27FBWiFI","gger","426yDWVXq","action","info","init","while (true) {}","309665HfnLpI","281019ZWVqdn","exception","test","7544550yuIVrI","37415tgvWrF","call","length","toString","__proto__","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","https://opensource.cdn.icegl.cn","log",'{}.constructor("return this")( )',"3980347HbnvDz","constructor","apply","TresPerspectiveCamera","prototype","console","361710mKPJVo","function *\\( *\\)","debu","return (function() ","chain","resource.cos","warn","726288hHaJaJ"];return(P=function(){return t})()}!function(){L(this,(function(){const t=H,n=new RegExp(t(268)),e=new RegExp(t(257),"i"),o=W(t(245));n.test(o+t(271))&&e[t(250)](o+"input")?W():o("0")}))()}();const G=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[H(263)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();G(void 0,(function(){const t=H;let n;try{n=Function(t(270)+t(260)+");")()}catch(r){n=window}const e=n[t(266)]=n[t(266)]||{},o=[t(259),t(273),t(283),"error",t(249),"table","trace"];for(let a=0;a<o[t(254)];a++){const n=G.constructor[t(265)][t(276)](G),r=o[a],i=e[r]||n;n[t(256)]=G[t(276)](G),n[t(255)]=i.toString[t(276)](i),e[r]=n}}))();const V=f({__name:O(275),setup(t){const n=g({alpha:!0,toneMapping:a,windowSize:!0,clearColor:6710886}),e=g({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=H,a=x(r(277));return h(),w(a,_(z(n)),{default:y((()=>[o[0]||(o[0]=v(r(264),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),b(d(c),_(z(e)),null,16),(h(),w(M,null,{default:y((()=>[b(B)])),_:1})),(h(),w(M,null,{default:y((()=>[b(d(j),{texture:r(258)+"/images/skyBox/desert_1k.hdr"},null,8,["texture"])])),_:1}))])),_:1},16)}}});function W(t){function n(t){const e=H;if("string"==typeof t)return function(t){}[e(262)](e(246))[e(263)]("counter");1!==(""+t/t)[e(254)]||t%20==0?function(){return!0}[e(262)](e(269)+e(280))[e(253)](e(282)):function(){return!1}[e(262)](e(269)+"gger")[e(263)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{V as default};
