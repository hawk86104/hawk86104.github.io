import{u as t,_ as o,a as n}from"./mergeTres.NtvEZAfF1732680436779.js";import{l as r}from"./utils.8rnLE6QZ1732680436779.js";import{e}from"./@tresjs.ozxSQdlw1732680436779.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.u2cBPEWn1732680436779.js";import{_ as C}from"./@fesjs.PwptM7Gh1732680436779.js";import"./@amap.jmLgXK4f1732680436779.js";import"./pinia.u6SS9Z3a1732680436779.js";import"./vue-demi.C4xddsk91732680436779.js";import"./three.HQIWXjA-1732680436779.js";import"./three-mesh-bvh.qxsdV1TA1732680436779.js";import"./@vueuse.OVEejUj91732680436779.js";import"./vue-router.87op6V6j1732680436779.js";import"./lodash-es.guXTxyfJ1732680436779.js";import"./@qlin.yHhFDldE1732680436779.js";import"./@floating-ui.BPbuo5Gx1732680436779.js";import"./@juggle.7yjBMqoW1732680436779.js";const y=b;!function(t,o){const n=b,r=S();for(;;)try{if(373544===parseInt(n(390))/1+-parseInt(n(392))/2*(parseInt(n(389))/3)+-parseInt(n(368))/4+-parseInt(n(403))/5*(parseInt(n(388))/6)+parseInt(n(357))/7+parseInt(n(385))/8*(parseInt(n(393))/9)+-parseInt(n(378))/10*(-parseInt(n(361))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(362)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){w(this,(function(){const t=b,o=new RegExp(t(400)),n=new RegExp(t(345),"i"),r=z(t(391));o.test(r+"chain")&&n[t(394)](r+t(355))?z():r("0")}))()}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(362)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function b(t,o){const n=S();return(b=function(t,o){return n[t-=345]})(t,o)}x(void 0,(function(){const t=b;let o;try{o=Function(t(372)+'{}.constructor("return this")( ));')()}catch(e){o=window}const n=o[t(366)]=o[t(366)]||{},r=[t(383),t(354),"info",t(384),"exception",t(364),t(381)];for(let a=0;a<r[t(401)];a++){const o=x[t(360)][t(358)].bind(x),e=r[a],i=n[e]||o;o[t(365)]=x[t(348)](x),o.toString=i[t(397)][t(348)](i),n[e]=o}}))();const I=[y(373),y(356),y(371)];function S(){const t=["value","buildings","while (true) {}","TresBufferGeometry","warn","input","faceUv","610491zoJpcR","prototype","near","constructor","5874ctpJfD","apply","cameraState","table","__proto__","console","push","2295668wvghQf","u_zoom","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","normal","return (function() ","position","action","tbgRef","customCoords","geometry","15670DMRWru","gger","uvArray","trace","far","log","error","64SqouVU","TresGroup","uniforms","1428906oetLon","71964MYbSMb","88033URgwKh","init","34tFZTgV","654057UsjtaS","test","counter","string","toString","positionArray","mapHandle","function *\\( *\\)","length","debu","5ldIOfX","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","normalArray","TresMesh","bind","lngLatToCoord"];return(S=function(){return t})()}const j=a({__name:"buildingModels",setup(o){const n=t(),a=t=>{const o=b;for(let r=0;r<t[o(401)];r+=3){const e=[t[r],t[r+1]],a=n[o(399)][o(376)][o(349)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n.cameraState&&(async()=>{const t=b,o=await r(t(370),t(351));for(let n=0;n<o[t(401)];n++){const r=o[n];a(r.geometry);const e=new Float32Array(r[t(377)]),i=new Float32Array(r.faceUv),l=new Float32Array(r[t(377)][t(401)]);d[t(367)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;n[t(363)]&&(g[t(387)][t(369)][t(350)]=n[t(399)].getZoom(),g[t(387)].u_near.value=n[t(363)][t(359)],g[t(387)].u_far[t(350)]=n[t(363)][t(382)])})),(t,o)=>{const n=b;return c(),s(n(386),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s(r(347),{key:""+o},[p(r(353),{ref_for:!0,ref:r(375),position:[t[r(398)],3],faceUv:[t[r(380)],2],normal:[t[r(346)],3]},null,8,I),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=b;if(typeof t===n(396))return function(t){}[n(360)](n(352))[n(362)](n(395));1!==(""+t/t)[n(401)]||t%20==0?function(){return!0}[n(360)](n(402)+n(379)).call(n(374)):function(){return!1}[n(360)]("debu"+n(379)).apply("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const R=A;!function(t,o){const n=A,r=U();for(;;)try{if(783586===parseInt(n(175))/1+-parseInt(n(186))/2*(parseInt(n(174))/3)+parseInt(n(180))/4*(-parseInt(n(168))/5)+-parseInt(n(192))/6+parseInt(n(196))/7*(-parseInt(n(191))/8)+-parseInt(n(169))/9+parseInt(n(189))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[A(164)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function U(){const t=["672153hKKcke","782924SRxDUF","prototype","counter","TresAmbientLight","return (function() ","8lgrXlP","action","function *\\( *\\)","trace","test","toString","6fNikur","chain","console","46376270SAoQkW","TresCanvas","376niFFTo","8967300ErloKl","stateObject","warn","constructor","156723NChmME","bind","table","__proto__","call","apply","gger","buildings","TresPerspectiveCamera","2214200CENtfg","4790691oRnYym","init","string","tresCanvas","debu"];return(U=function(){return t})()}function A(t,o){const n=U();return(A=function(t,o){return n[t-=160]})(t,o)}!function(){F(this,(function(){const t=A,o=new RegExp(t(182)),n=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=M(t(170));o[t(184)](r+t(187))&&n[t(184)](r+"input")?M():r("0")}))()}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[A(164)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();P(void 0,(function(){const t=A,o=function(){const t=A;let o;try{o=Function(t(179)+'{}.constructor("return this")( ));')()}catch(n){o=window}return o}(),n=o[t(188)]=o.console||{},r=["log",t(194),"info","error","exception",t(161),t(183)];for(let e=0;e<r.length;e++){const o=P[t(195)][t(176)][t(160)](P),a=r[e],i=n[a]||o;o[t(162)]=P.bind(P),o[t(185)]=i[t(185)][t(160)](i),n[a]=o}}))();function M(t){function o(t){const n=A;if(typeof t===n(171))return function(t){}[n(195)]("while (true) {}")[n(164)](n(177));1!==(""+t/t).length||t%20==0?function(){return!0}.constructor(n(173)+n(165))[n(163)](n(181)):function(){return!1}.constructor(n(173)+n(165)).apply(n(193)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const D=C(a({__name:R(166),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:"manual"});return(t,a)=>{const i=A,l=d(i(190));return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(l,v({id:i(172),ref:"tcRef"},e),{default:m((()=>[a[0]||(a[0]=p(i(167),{fov:60,near:.1,far:2e3},null,-1)),a[1]||(a[1]=p(i(178),{intensity:.5},null,-1)),g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{D as default};
