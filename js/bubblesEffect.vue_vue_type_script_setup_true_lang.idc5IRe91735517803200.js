import{s as n,_ as t,c2 as e,cC as o,C as i,aB as r,h as a,ab as s}from"./three.-uH5I3Xp1735517803200.js";import{m as l,e as u,b as c}from"./@tresjs.0qL_P2CE1735517803200.js";import{d as f,b as p,a6 as m,a3 as b,o as g,D as v,J as y,aj as d,ak as h,u as w}from"./@vue.-THQH3GC1735517803200.js";const _=P;!function(n,t){const e=P,o=T();for(;;)try{if(801660===parseInt(e(185))/1+-parseInt(e(182))/2+-parseInt(e(187))/3*(parseInt(e(217))/4)+parseInt(e(180))/5*(parseInt(e(173))/6)+parseInt(e(218))/7*(-parseInt(e(181))/8)+-parseInt(e(178))/9+-parseInt(e(175))/10*(-parseInt(e(188))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(199)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=P,t=new RegExp(n(172)),e=new RegExp(n(192),"i"),o=S("init");t[n(220)](o+n(179))&&e.test(o+n(193))?S():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function T(){const n=["log","table","1115440tMjTnA","value","6IiAUex","1199YuNiKX","stateObject","constructor","#84ccff","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","dispose","glowColor","traverse","length","uniforms","apply","color","geometry","AdditiveBlending","Color","TresMeshRef","gger","string","TresBufferGeometry","toString","console","trace","verticesNeedUpdate","xRayEffect",'{}.constructor("return this")( )',"mergeGeometries","debu","offsetY","863932NEZQZk","510391CTDkDF","DoubleSide","test","info","__proto__","exception","action","opacity","function *\\( *\\)","4357734dyIstk","uTime","119860iIcwPR","position","bind","13988583hFbEnl","chain","5XYzypK","24WiSIxq","283102ppgxNT"];return(T=function(){return n})()}function P(n,t){const e=T();return(P=function(n,t){return e[n-=171]})(n,t)}z(void 0,(function(){const n=P;let t;try{t=Function("return (function() "+n(213)+");")()}catch(i){t=window}const e=t[n(209)]=t.console||{},o=[n(183),"warn",n(221),"error",n(223),n(184),n(210)];for(let r=0;r<o.length;r++){const t=z.constructor.prototype[n(177)](z),i=o[r],a=e[i]||t;t[n(222)]=z.bind(z),t[n(208)]=a[n(208)].bind(a),e[i]=t}}))();const I=f({__name:_(212),props:{model:{},color:{default:_(191)},opacity:{default:1}},async setup(o){const i=_;let r,a;const s=o,f=p(),w=[];s.model[i(196)]((t=>{const e=i;t instanceof n&&(t[e(201)][e(211)]=!0,w.push(t[e(201)]))}));const x=([r,a]=m((()=>c({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,a(),r),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[i(203)])(s[i(200)])},lightningTexture:{type:"t",value:x.map},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:s[i(171)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:t[i(219)],blending:t[i(202)],depthWrite:!1};z.uniforms[i(216)][i(186)]=Math.sin(5);const{camera:T}=l(),{onLoop:P}=u();return P((({delta:n})=>{const t=i;T[t(186)][t(176)]&&f[t(186)]&&(z[t(198)][t(174)][t(186)]+=n)})),b((()=>{const n=i;f[n(186)]&&(f[n(186)][n(201)][n(194)](),f[n(186)].geometry=e[n(214)](w)),s[n(200)]&&(z.uniforms[n(195)].value=new(t[n(203)])(s.color)),s.opacity&&(z[n(198)].uOpacity[n(186)]=s.opacity)})),(n,t)=>{const e=i;return g(),v("TresMesh",{ref_key:e(204),ref:f},[t[0]||(t[0]=y(e(207),null,null,-1)),y("TresShaderMaterial",d(h(z)),null,16)],512)}}});function S(n){function t(n){const e=P;if(typeof n===e(206))return function(n){}.constructor("while (true) {}").apply("counter");1!==(""+n/n)[e(197)]||n%20==0?function(){return!0}[e(190)]("debu"+e(205)).call(e(224)):function(){return!1}.constructor(e(215)+e(205))[e(199)](e(189)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const C=B;function M(){const n=["model","24640HDIDzx","geometry","11573TTZoDj","randInt","glowColor","Mesh","prototype","setAttribute","constructor","uSlowTime","debu","bind","warn","array","1596BmYqiG","call","2034275MbKQTC","32865300RSfouq","color","position","bridge","value","return (function() ","log","#FFF","init","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","episodic","chain","TresMeshRef","MathUtils","24720PDtxbQ","name","toString","size","Float32BufferAttribute","bubblesEffect","uOpacity","string","83492prNdVZ","afective","length","material","3487tANZgW","9009738xHUbiD","147mIhCJZ","while (true) {}","table","gger","ShaderMaterial","trace","78IJwAka","error","input","function *\\( *\\)","BufferGeometryRef","TresBufferGeometry",'{}.constructor("return this")( )',"uTime","aDelayDuration","6tGXyPA","uniforms","randFloat","console","Color","apply","opacity","push","action","includes","TresShaderMaterial","DoubleSide","computeBoundingSphere","analitic","brainstem","stateObject","attributes"];return(M=function(){return n})()}!function(n,t){const e=B,o=M();for(;;)try{if(682840===parseInt(e(517))/1*(parseInt(e(566))/2)+-parseInt(e(560))/3*(parseInt(e(554))/4)+parseInt(e(531))/5*(-parseInt(e(497))/6)+parseInt(e(529))/7*(parseInt(e(546))/8)+-parseInt(e(559))/9+-parseInt(e(515))/10*(parseInt(e(558))/11)+parseInt(e(532))/12)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const F=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[B(502)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){F(this,(function(){const n=B,t=new RegExp(n(569)),e=new RegExp(n(541),"i"),o=j(n(540));t.test(o+n(543))&&e.test(o+n(568))?j():o("0")}))()}();const D=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(n,t){const e=M();return(B=function(n,t){return e[n-=492]})(n,t)}D(void 0,(function(){const n=B;let t;try{t=Function(n(537)+n(494)+");")()}catch(i){t=window}const e=t[n(500)]=t.console||{},o=[n(538),n(527),"info",n(567),"exception",n(562),n(565)];for(let r=0;r<o[n(556)];r++){const t=D[n(523)][n(521)][n(526)](D),i=o[r],a=e[i]||t;t.__proto__=D[n(526)](D),t.toString=a[n(548)][n(526)](a),e[i]=t}}))();const U=f({__name:C(551),props:{model:{},color:{default:C(539)},opacity:{default:1}},setup(n){const e=C,l=n,c=[e(555),"semantic",e(542),"process","amigdala",e(511),e(535),"cerebellum",e(510)],f={};l[e(514)].traverse((n=>{const i=e;n instanceof t[i(520)]&&c.map((t=>{const e=i;if(n[e(547)][e(506)](t)){if(f[t]){const i=[f[t],n[e(516)]];return f[t]=o(i),f}return f[t]=n[e(516)]}return[]}))}));const m=p(),_=new(t[e(564)])({uniforms:{glowColor:{type:"c",value:new i(l[e(533)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l[e(503)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:r,side:t[e(508)],depthTest:!1,vertexColors:!1,transparent:!0});b((()=>{m[e(536)]&&(()=>{const n=e,o=[],i=[],r=[],l=[];for(let e=0;e<2e4-3*c[n(556)];e+=1){const s=t[n(545)][n(518)](0,c[n(556)]-1),u=c[s],p=f[u][n(513)][n(534)][n(528)][3*e+0]||0,m=f[u][n(513)][n(534)][n(528)][3*e+1]||0,b=f[u].attributes.position[n(528)][3*e+2]||0;if(i[n(504)](p,m,b),o[e]=a[n(499)](10,20),e%100==0){const e=t[n(545)][n(518)](100,250)+m;l.push(p,e,b,1)}else l[n(504)](p,m,b,0);r[2*e+0]=t[n(545)].randFloat(.5,1.5),r[2*e+1]=2.5}m[n(536)][n(522)](n(496),new s(r,2)),m[n(536)][n(522)]("bubbles",new(t[n(550)])(l,4)),m[n(536)][n(522)](n(534),new(t[n(550)])(i,3)),m[n(536)][n(522)](n(533),new s([],3)),m[n(536)].setAttribute(n(549),new(t[n(550)])(o,1)),m[n(536)][n(509)]()})()}));const x=p(),{onLoop:z}=u();return z((({delta:n})=>{const o=e;x.value&&(x[o(536)][o(557)].uniforms[o(495)][o(536)]+=.05,x[o(536)].material.uniforms[o(524)].value+=1/400),l[o(533)]&&(_[o(498)][o(519)].value=new(t[o(501)])(l[o(533)])),l.opacity&&(_[o(498)][o(552)][o(536)]=l[o(503)])})),(n,t)=>{const o=e;return g(),v("TresPoints",{ref_key:o(544),ref:x},[y(o(493),{ref_key:o(492),ref:m},null,512),y(o(507),d(h(w(_))),null,16)],512)}}});function j(n){function t(n){const e=B;if(typeof n===e(553))return function(n){}[e(523)](e(561))[e(502)]("counter");1!==(""+n/n)[e(556)]||n%20==0?function(){return!0}[e(523)](e(525)+e(563))[e(530)](e(505)):function(){return!1}[e(523)](e(525)+"gger")[e(502)](e(512)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{I as _,U as a};
