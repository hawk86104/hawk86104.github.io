import{_ as e}from"./three.KG0QRRig1731552996711.js";import{e as n,U as t,b as a}from"./@tresjs.01P8tiuF1731552996711.js";import{P as o}from"./tweakpane.yHWGBmom1731552996711.js";import{d as r,a6 as i,X as l,e as s,o as u,f as c,g as f,J as v,j as p,u as m,m as d,aj as h,ak as g}from"./@vue.-THQH3GC1731552996711.js";import"./@vueuse.YduQ9gvc1731552996711.js";const x=T;!function(e,n){const t=T,a=S();for(;;)try{if(176576===-parseInt(t(212))/1+parseInt(t(263))/2+-parseInt(t(203))/3*(-parseInt(t(209))/4)+-parseInt(t(217))/5+parseInt(t(219))/6+-parseInt(t(265))/7*(parseInt(t(244))/8)+-parseInt(t(232))/9*(-parseInt(t(228))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(215)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function T(e,n){const t=S();return(T=function(e,n){return t[e-=203]})(e,n)}!function(){y(this,(function(){const e=T,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(236),"i"),a=_("init");n[e(230)](a+e(252))&&t.test(a+e(260))?_():a("0")}))()}();const w=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[T(215)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function S(){const e=["197692BJDMuw","uniforms","1043889ZlcUsZ","bind","table","3dgZwKk","#ffffff","FrontSide","debu","error","value","370616cKMAPA","prototype","stateObject","267020eLdfLv","海浪变化速度","TresMeshBasicMaterial","apply","海浪高度","1040785nlqbsQ","console","1182660eTIZfl","pointSize","string","rotation","length","uWaveSpeed","action","groupRef","wireframeMaterialRef","20kKOscJ","TresHemisphereLight","test","TresCanvas","1855215wjTRYL","log","#080820","TresPerspectiveCamera","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","while (true) {}","return (function() ","counter","uWaveHeight","color","#122148","toString","8fbvXDj","set","exception","TresShaderMaterial","TresGroup","TresPoints","pointsEarth","warn","chain","#17c5a9","constructor","gger","uTime","addFolder","SRGBColorSpace","size","input","addBinding","TresIcosahedronGeometry"];return(S=function(){return e})()}w(void 0,(function(){const e=T;let n;try{n=Function(e(238)+'{}.constructor("return this")( ));')()}catch(o){n=window}const t=n[e(218)]=n.console||{},a=[e(233),e(251),"info",e(207),e(246),e(267),"trace"];for(let r=0;r<a[e(223)];r++){const n=w[e(254)][e(210)][e(266)](w),o=a[r],i=t[o]||n;n.__proto__=w[e(266)](w),n[e(243)]=i[e(243)][e(266)](i),t[o]=n}}))();const b=r({__name:x(250),async setup(r){const y=x;let T,w;const S={color:y(253),pointSize:4},b={clearColor:y(242),shadows:!1,alpha:!1,outputColorSpace:e[y(258)]},_={color:S[y(241)],wireframe:!0,transparent:!0,opacity:.2},z=([T,w]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,w(),T),j=z[0],E=z[1],P=z[2],D=z[3],I=z[4],k={uniforms:{size:{type:"f",value:S[y(220)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(205)]},A=l(),C=l(),M=(new o)[y(257)]({title:"Debug"});M.addBinding(S,y(241),{type:y(241)}).on("change",(({value:e})=>{const n=y;C[n(208)][n(241)][n(245)](e)})),M[y(261)](k.uniforms[y(259)],y(208),{min:.1,max:10,step:.1,label:"粒子大小"}),M[y(261)](k[y(264)][y(240)],y(208),{min:.01,max:.5,step:.01,label:y(216)}),M[y(261)](k[y(264)][y(224)],y(208),{min:.01,max:1,step:.01,label:y(213)});const{onLoop:U}=n();return U((({delta:e})=>{const n=y;A[n(208)]&&(A[n(208)][n(222)].y+=.002,k[n(264)][n(256)].value+=10*e)})),(e,n)=>{const a=y,o=s(a(231));return u(),c(o,d(b,{"window-size":""}),{default:f((()=>[n[2]||(n[2]=v(a(235),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),p(m(t),{autoRotate:!0,autoRotateSpeed:2}),v(a(248),{ref_key:a(226),ref:A},[v("TresMesh",null,[n[0]||(n[0]=v(a(262),{args:[1,4]},null,-1)),v(a(214),d({ref_key:a(227),ref:C},_),null,16)]),v(a(249),null,[n[1]||(n[1]=v("TresIcosahedronGeometry",{args:[1,128]},null,-1)),v(a(247),h(g(k)),null,16)])],512),n[3]||(n[3]=v(a(229),{args:[a(204),a(234),3]},null,-1))])),_:1},16)}}});function _(e){function n(e){const t=T;if(typeof e===t(221))return function(e){}[t(254)](t(237)).apply(t(239));1!==(""+e/e)[t(223)]||e%20==0?function(){return!0}.constructor(t(206)+t(255)).call(t(225)):function(){return!1}[t(254)](t(206)+t(255))[t(215)](t(211)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{b as default};
