import{C as n,a$ as t,c4 as e,ar as o,at as a,c as r}from"./three.DqHgeVY11742895693222.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.xCsT8yve1742895693222.js";import{d as u,b as f,w as d,e as m,o as p,H as h,j as v,u as g,g as w,N as M,aj as P,ak as b,F as x}from"./@vue.C4dqouNn1742895693222.js";import"./postprocessing.vTwfsnPH1742895693222.js";import"./@vueuse.q8TRDI1e1742895693222.js";const y=_;!function(n,t){const e=_,o=j();for(;;)try{if(618498===-parseInt(e(300))/1+-parseInt(e(280))/2*(-parseInt(e(294))/3)+parseInt(e(273))/4+-parseInt(e(296))/5+parseInt(e(301))/6*(parseInt(e(305))/7)+parseInt(e(281))/8+parseInt(e(308))/9*(-parseInt(e(285))/10))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=_,t=new RegExp(n(275)),e=new RegExp(n(289),"i"),o=I(n(304));t[n(283)](o+n(270))&&e.test(o+"input")?I():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(266)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();z(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(288)+n(309)+");")()}catch(e){t=window}return t}(),e=t[n(274)]=t[n(274)]||{},o=[n(307),"warn",n(264),n(282),"exception",n(286),n(295)];for(let a=0;a<o[n(284)];a++){const t=z[n(268)][n(277)][n(318)](z),r=o[a],s=e[r]||t;t[n(299)]=z[n(318)](z),t.toString=s[n(316)][n(318)](s),e[r]=t}}))();const S=[y(272),y(320),y(310),"a-randomness"];function j(){const n=["color","aScale","#1b3984","stateObject","insideColor","geometry","toString","sin","bind","setAttribute","a-scale","cos","aRandomness","material","uniforms","radius","TresPerspectiveCamera","info","outsideColor","apply","clone","constructor","string","chain","value","position","4781380vHitqr","console","function *\\( *\\)","TresPoints","prototype","lerp","branches","22VMNZJM","8669496BpEYJq","error","test","length","10ooWafM","table","gger","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","random","counter","count","call","34107xeeoZb","trace","160030fbkEJx","randomnessPower","TresShaderMaterial","__proto__","859073LsLSey","3385680FSciLO","#b5f28d","debu","init","7fUjNVd","size","log","13129146bPCxaL",'{}.constructor("return this")( )'];return(j=function(){return n})()}function _(n,t){const e=j();return _=function(n,t){return e[n-=259]},_(n,t)}const T=u({__name:"galaxy",setup(u){const C=y,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:C(302),outsideColor:C(312)},T=new n(j[C(314)]),I=new n(j[C(265)]),A=new Float32Array(3*j[C(292)]),F=new Float32Array(3*j[C(292)]),k=new Float32Array(j.count),R=new Float32Array(3*j[C(292)]);for(let n=0;n<j[C(292)];n++){const t=3*n,e=Math[C(290)]()*j[C(262)],o=n%j[C(279)]*Math.PI*2/j[C(279)];A[t]=Math[C(321)](o)*e,A[t+1]=0,A[t+2]=Math.sin(o)*e;const a=Math.random()**j.randomnessPower*(Math[C(290)]()<.5?-1:1),r=Math[C(290)]()**j.randomnessPower*(Math[C(290)]()<.5?-1:1),s=Math.random()**j[C(297)]*(Math[C(290)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=T[C(267)]();i[C(278)](I,e/j[C(262)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,k[n]=Math.random()}const E={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j[C(306)]}}};const L=f(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=C;L[t(271)]&&(L.value[t(260)][t(261)].uTime.value=n)}));const{count:Z,size:J,radius:N,branches:$,spin:q,randomness:B,randomnessPower:H,insideColor:V,outsideColor:W}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:C(302),outsideColor:C(312)});return d([Z[C(271)],J[C(271)],N[C(271)],$[C(271)],q[C(271)],B[C(271)],H[C(271)],V[C(271)],W[C(271)]],(t=>{t.forEach(((n,t)=>{const e=_;j[Object.keys(j)[t]]=n[e(271)]})),function(){const t=C;if(L[t(271)]){const e=new n(j[t(314)]),o=new n(j[t(265)]),a=new Float32Array(3*j[t(292)]),s=new Float32Array(3*j[t(292)]),i=new Float32Array(j[t(292)]),c=new Float32Array(3*j[t(292)]);for(let n=0;n<j[t(292)];n++){const r=3*n,l=Math[t(290)]()*j.radius,u=n%j[t(279)]*Math.PI*2/j.branches;a[r]=Math.cos(u)*l,a[r+1]=0,a[r+2]=Math[t(317)](u)*l;const f=Math[t(290)]()**j[t(297)]*(Math[t(290)]()<.5?-1:1),d=Math[t(290)]()**j[t(297)]*(Math[t(290)]()<.5?-1:1),m=Math[t(290)]()**j[t(297)]*(Math.random()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=e.clone();p[t(278)](o,l/j[t(262)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(290)]()}L.value[t(315)][t(319)](t(272),new r(a,3)),L[t(271)][t(315)].setAttribute(t(259),new r(c,3)),L[t(271)][t(315)][t(319)]("color",new r(s,3)),L[t(271)][t(315)][t(319)](t(311),new r(i,1))}}()})),(n,t)=>{const e=C,o=m("TresCanvas");return p(),h(x,null,[v(g(c)),v(o,P(b(z)),{default:w((()=>[t[0]||(t[0]=M(e(263),{position:[3,3,3]},null,-1)),M(e(276),{ref_key:"bufferRef",ref:L},[M("TresBufferGeometry",{position:[g(A),3],"a-scale":[g(k),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,S),M(e(298),P(b(E)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function I(n){function t(n){const e=_;if(typeof n===e(269))return function(n){}[e(268)]("while (true) {}")[e(266)](e(291));1!==(""+n/n)[e(284)]||n%20==0?function(){return!0}[e(268)]("debu"+e(287))[e(293)]("action"):function(){return!1}[e(268)](e(303)+"gger")[e(266)](e(313)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as default};
