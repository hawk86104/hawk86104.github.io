import{ad as s,A as e,cn as a}from"./three.Bhn4-0ry1761276103973.js";import{K as t}from"./@tresjs.B_KjVy0E1761276103973.js";import{P as o}from"./tweakpane.CqZAnw7f1761276103973.js";import"./@fesjs.DnM7nINA1761276103973.js";import"./Resource.CSaxGSPI1761276103973.js";/* empty css                                                                             */import{_ as r}from"./randomLoading.vue_vue_type_script_setup_true_lang.BgTQontY1761276103973.js";import"./three-mesh-ui.module.C--P1h9b1761276103973.js";import"./global.BkM2LKCv1761276103973.js";/* empty css                                                              */import"./vanilla.esm.5.5.0.CRlEbOMK1761276103973.js";import{_ as i}from"./device.vue_vue_type_script_setup_true_lang.CBMoN8wl1761276103973.js";import{d as p,r as m,g as n,G as l,o as u,h as d,u as j,e as _,I as c,b as g,a9 as h,aa as v,ap as f,m as b,F as y}from"./@vue.CKlgtJke1761276103973.js";import"./postprocessing.CeTFUAN_1761276103973.js";import"./@vueuse.wtfleElW1761276103973.js";import"./vue-router.BFHj2xRz1761276103973.js";import"./lodash-es.DWe8oqPO1761276103973.js";import"./pinia.C8YT0eOZ1761276103973.js";import"./@qlin.y-0Z8WnK1761276103973.js";import"./@babel.BPq7uOAK1761276103973.js";import"./@floating-ui.Bhq4ibgf1761276103973.js";import"./@juggle.Vc7cP4_P1761276103973.js";import"./starLoading.Dxnl37sJ1761276103973.js";import"./utils.DEKxcj5Y1761276103973.js";import"./cssLoaders.UlIhETTt1761276103973.js";import"./bubbleLoading.CNFXC-mb1761276103973.js";import"./yangyangLoading.-KGL02eM1761276103973.js";import"./color.zjyo9y-T1761276103973.js";import"./color-string.Cb0Nf94v1761276103973.js";import"./color-name.gyPnsvCn1761276103973.js";import"./lodash.B8Sqzhuz1761276103973.js";import"./@amap.fjyZdsU91761276103973.js";import"./object-hash.1qNYTrnD1761276103973.js";import"./jszip.y_yjJ09m1761276103973.js";import"./index.vM1sPJET1761276103973.js";import"./three-stdlib.tb53t5ki1761276103973.js";import"./useLoader.DWT9Jk041761276103973.js";const x=p({__name:"deviceLight",setup(p){const x=m({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:e,toneMapping:s,renderMode:"manual"}),L=m({autoRotate:!0}),w=m({threshold:0,strength:.6,radius:.21}),C=new o({title:"参数"});return C.addBinding(w,"threshold",{label:"阈值",min:0,max:1,step:.1}),C.addBinding(w,"strength",{label:"强度",min:0,max:3,step:.2}),C.addBinding(w,"radius",{label:"半径",min:0,max:1,step:.1}),(s,e)=>{const a=n("TresCanvas");return u(),l(y,null,[d(j(r)),d(a,b(x,{"window-size":""}),{default:_(()=>[e[0]||(e[0]=c("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1)),d(j(t),h(v(L)),null,16),(u(),g(f,null,{default:_(()=>[d(i,h(v(w)),null,16)]),_:1})),e[1]||(e[1]=c("TresGridHelper",{position:[0,-1,0]},null,-1))]),_:1},16)],64)}}});export{x as default};
