import{u as t,_ as n,a as o}from"./mergeTres.HOGxLN-H1739444016646.js";import{l as r}from"./utils.uqGscKRB1739444016646.js";import{e}from"./@tresjs.Q4_KYO2a1739444016646.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1739444016646.js";import{_ as y}from"./@fesjs.sJn9--0s1739444016646.js";import"./@amap.KAEokh9M1739444016646.js";import"./pinia.yh3RXIKV1739444016646.js";import"./three.W6GmiHfn1739444016646.js";import"./three-mesh-bvh.QFDNi-ac1739444016646.js";import"./@vueuse.6yH4xZkk1739444016646.js";import"./vue-router.AC2Dribr1739444016646.js";import"./lodash-es.pklfUAS51739444016646.js";import"./@qlin.yHhFDldE1739444016646.js";import"./@floating-ui.BPbuo5Gx1739444016646.js";import"./@juggle.7yjBMqoW1739444016646.js";const C=S;!function(t,n){const o=S,r=b();for(;;)try{if(504717===parseInt(o(205))/1+-parseInt(o(225))/2*(parseInt(o(213))/3)+-parseInt(o(228))/4*(-parseInt(o(238))/5)+parseInt(o(221))/6+-parseInt(o(239))/7*(-parseInt(o(210))/8)+-parseInt(o(190))/9*(parseInt(o(241))/10)+-parseInt(o(231))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[S(237)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){w(this,(function(){const t=S,n=new RegExp(t(203)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(t(226));n[t(207)](r+t(234))&&o.test(r+t(198))?z():r("0")}))()}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(){const t=["geometry","10RMwNmX","bind","mapHandle","buildings","lngLatToCoord","getZoom","__proto__","6822702NzHBSI","string","warn","debu","prototype","u_zoom","u_far","constructor","input",'{}.constructor("return this")( )',"position","counter","value","function *\\( *\\)","push","658063LGNLfu","atan","test","action","while (true) {}","8OAPDWU","length","TresShaderMaterial","316227bTJnEr","toString","log","far","console","positionArray","gger","info","3365226nVavoZ","cameraState","u_near","uniforms","2hwpqZv","init","customCoords","12ZVXCwg","TresGroup","faceUv","10924870dgVyyB","call","table","chain","exception","tbgRef","apply","236745krBkyN","7002751FJcZsL"];return(b=function(){return t})()}x(void 0,(function(){const t=S;let n;try{n=Function("return (function() "+t(199)+");")()}catch(e){n=window}const o=n[t(217)]=n.console||{},r=[t(215),t(192),t(220),"error",t(235),t(233),"trace"];for(let a=0;a<r.length;a++){const n=x[t(197)][t(194)].bind(x),e=r[a],i=o[e]||n;n[t(189)]=x[t(242)](x),n[t(214)]=i[t(214)].bind(i),o[e]=n}}))();const I=[C(200),"faceUv","normal"];function S(t,n){const o=b();return(S=function(t,n){return o[t-=189]})(t,n)}const j=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=S;for(let r=0;r<t[n(211)];r+=3){const e=[t[r],t[r+1]],a=o[n(243)].customCoords[n(245)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[S(222)]&&(async()=>{const t=S,n=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(244));for(let o=0;o<n.length;o++){const r=n[o];a(r[t(240)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(230)]),l=new Float32Array(r.geometry.length);d[t(204)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=S;o[t(222)]&&(g.uniforms[t(195)][t(202)]=o.mapHandle[t(246)](),g[t(224)][t(223)][t(202)]=o.cameraState.near,g.uniforms[t(196)].value=o[t(222)][t(216)])})),(t,n)=>{const o=S;return c(),s(o(229),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s("TresMesh",{key:""+n},[p("TresBufferGeometry",{ref_for:!0,ref:r(236),position:[t[r(218)],3],faceUv:[t.uvArray,2],normal:[t.normalArray,3]},null,8,I),p(r(212),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=S;if(typeof t===o(191))return function(t){}[o(197)](o(209))[o(237)](o(201));1!==(""+t/t).length||t%20==0?function(){return!0}[o(197)](o(193)+o(219))[o(232)](o(208)):function(){return!1}[o(197)](o(193)+o(219))[o(237)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const A=U;!function(t,n){const o=U,r=F();for(;;)try{if(257072===parseInt(o(390))/1*(-parseInt(o(374))/2)+parseInt(o(395))/3+-parseInt(o(396))/4*(parseInt(o(365))/5)+-parseInt(o(367))/6+-parseInt(o(359))/7+-parseInt(o(394))/8*(parseInt(o(380))/9)+parseInt(o(387))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){P(this,(function(){const t=U,n=new RegExp(t(382)),o=new RegExp(t(391),"i"),r=L(t(364));n[t(372)](r+"chain")&&o[t(372)](r+t(362))?L():r("0")}))()}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[U(373)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function U(t,n){const o=F();return(U=function(t,n){return o[t-=359]})(t,n)}function F(){const t=["12625190ssJdwL","prototype","console","169BwrbJn","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","error","return (function() ","2464632nIgXyT","240564XESQdg","56BUuLEp","call","TresPerspectiveCamera","472479hjEnTC","constructor","debu","input","exception","init","102635xMivzH","length","852846zrATUR","__proto__","action","bind","table","test","apply","3320BbXhgE","TresAmbientLight","counter","buildings","gger","info","9NYTsSP","warn","function *\\( *\\)","while (true) {}","tcRef","manual","toString"];return(F=function(){return t})()}R(void 0,(function(){const t=U;let n;try{n=Function(t(393)+'{}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(389)]=n[t(389)]||{},r=["log",t(381),t(379),t(392),t(363),t(371),"trace"];for(let a=0;a<r[t(366)];a++){const n=R[t(360)][t(388)].bind(R),e=r[a],i=o[e]||n;n[t(368)]=R[t(370)](R),n[t(386)]=i[t(386)][t(370)](i),o[e]=n}}))();function L(t){function n(t){const o=U;if("string"==typeof t)return function(t){}.constructor(o(383))[o(373)](o(376));1!==(""+t/t)[o(366)]||t%20==0?function(){return!0}[o(360)]("debu"+o(378))[o(397)](o(369)):function(){return!1}.constructor(o(361)+o(378))[o(373)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const E=y(a({__name:A(377),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(385)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:"darkblue"}),g(f,v({id:"tresCanvas",ref:l(384)},a),{default:m((()=>[i[0]||(i[0]=p(l(398),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(375),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{E as default};
