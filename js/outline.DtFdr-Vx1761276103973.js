import{k as e,M as s,cs as t,cJ as a,a0 as n}from"./three.Bhn4-0ry1761276103973.js";import{F as o,N as r,K as i,o as l}from"./@tresjs.B_KjVy0E1761276103973.js";import{P as c}from"./tweakpane.CqZAnw7f1761276103973.js";import{O as p}from"./@pmndrs.CvKgExG31761276103973.js";import{d as u,q as f,a3 as d,G as m,o as h,u as g,w as b,H as y,I as k,h as M,r as j,b as w,e as T,a9 as B,aa as v,ap as _,m as G}from"./@vue.CKlgtJke1761276103973.js";import"./postprocessing.CeTFUAN_1761276103973.js";import"./@vueuse.wtfleElW1761276103973.js";const x=["object"],C=u({__name:"outlineCom",props:{color:{default:"#ffffff"},thickness:{default:.1},screenspace:{type:Boolean,default:!1}},setup(s){const t=s,{renderer:a}=o(),n=p({color:new e(t.color),thickness:t.thickness,screenspace:t.screenspace,gl:a});return f(()=>{n.generate()}),d(()=>{n.updateProps({color:new e(t.color),thickness:t.thickness,screenspace:t.screenspace})}),(e,s)=>(h(),m("primitive",{object:g(n).group},null,8,x))}}),P=["object"],S=["geometry"],z=u({__name:"outlineModel",props:{color:{default:"#ffffff"},thickness:{default:.1},screenspace:{type:Boolean,default:!1}},setup(e){const{state:n}=r("./plugins/basic/htmls/model/model.gltf",{draco:!0,decoderPath:"./draco/"});function o(e){const n=[];e.traverse(e=>{if(e.isMesh&&e.geometry.isBufferGeometry&&e.geometry.attributes.position.count<1e5){const t=e.geometry.clone(),o=new s;o.copy(e.matrixWorld),t.applyMatrix4(o),t.isBufferGeometry&&(Object.keys(t.attributes).forEach(e=>{"position"!==e&&t.deleteAttribute(e)}),n.push(function(e,s=.1){return(new a).modify(e,Math.floor(e.attributes.position.count*s))}(t,.1)))}});return t(n)}let i=null;return b(()=>n.value,e=>{e.scene&&(i=o(e.scene))}),(e,s)=>g(n)?(h(),m("primitive",{key:0,object:g(n)?.scene,scale:1,position:[3,-1,-3]},[k("TresMesh",{geometry:g(i)},[s[0]||(s[0]=k("TresMeshBasicMaterial",{color:"#000000",transparent:"",opacity:0},null,-1)),M(C,{thickness:e.thickness,screenspace:e.screenspace,color:e.color},null,8,["thickness","screenspace","color"])],8,S)],8,P)):y("",!0)}}),A={position:[0,.9,0],name:"torus"},D={position:[-2.5,.5,2.5],"receive-shadow":"","cast-shadow":"",name:"cube"},K=u({__name:"outline",setup(e){const s=j({alpha:!0,toneMapping:n,windowSize:!0,clearColor:"#000000"}),t=j({enableDamping:!0,autoRotate:!1}),a=j({color:"#ff00ae",thickness:.1,screenspace:!1}),o=new c;o.addBinding(a,"color",{label:"颜色"}),o.addBinding(a,"thickness",{label:"thickness",min:0,max:2,step:.01}),o.addBinding(a,"screenspace",{label:"space"});const r=j({color:"#ffffff",thickness:.026,screenspace:!1});return o.addBinding(r,"color",{label:"模型边框颜色"}),o.addBinding(r,"thickness",{label:"模型边框粗细",min:0,max:.2,step:.001}),o.addBinding(r,"screenspace",{label:"模型边框类型"}),(e,n)=>(h(),w(g(l),G(s,{"window-size":""}),{default:T(()=>[n[4]||(n[4]=k("TresPerspectiveCamera",{position:[10,10,10],fov:45,near:1,far:1e3},null,-1)),M(g(i),B(v(t)),null,16),n[5]||(n[5]=k("TresAmbientLight",{intensity:.5},null,-1)),n[6]||(n[6]=k("TresDirectionalLight",{position:[15,15,15],intensity:1},null,-1)),k("TresMesh",A,[n[0]||(n[0]=k("TresTorusKnotGeometry",{args:[1,.35,100,32]},null,-1)),n[1]||(n[1]=k("TresMeshStandardMaterial",{color:"#ff33ff",roughness:.3,metalness:.5},null,-1)),M(C,B(v(a)),null,16)]),k("TresMesh",D,[n[2]||(n[2]=k("TresCylinderGeometry",{args:[1.5,1.5,2]},null,-1)),n[3]||(n[3]=k("TresMeshStandardMaterial",{color:3407871,roughness:0,metalness:0},null,-1)),M(C)]),(h(),w(_,null,{default:T(()=>[M(z,B(v(r)),null,16)]),_:1}))]),_:1},16))}});export{K as default};
