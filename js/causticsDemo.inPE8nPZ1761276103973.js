import{dn as s,a9 as e,a0 as a}from"./three.Bhn4-0ry1761276103973.js";import{z as t,K as o}from"./@tresjs.B_KjVy0E1761276103973.js";import"./lamina.BeKFoY2k1761276103973.js";import"./three-custom-shader-material.DSmV-ApW1761276103973.js";import"./vanilla.esm.5.5.0.CRlEbOMK1761276103973.js";import{_ as i}from"./index.vue_vue_type_script_setup_true_lang.OV3PkmXB1761276103973.js";import"./Resource.CSaxGSPI1761276103973.js";import{a as n}from"./three-stdlib.tb53t5ki1761276103973.js";import{d as r,ac as l,G as m,o as p,u as d,r as u,a as c,g,b as f,e as j,I as h,h as _,a9 as x,aa as b,ap as k,m as v}from"./@vue.CKlgtJke1761276103973.js";import{P as y}from"./tweakpane.CqZAnw7f1761276103973.js";import"./postprocessing.CeTFUAN_1761276103973.js";import"./@vueuse.wtfleElW1761276103973.js";import"./glsl-tokenizer.D6vDr73b1761276103973.js";import"./@amap.fjyZdsU91761276103973.js";import"./glsl-token-descope.DZ_6fK_C1761276103973.js";import"./glsl-token-depth.Duvdnvlt1761276103973.js";import"./glsl-token-scope.BdCfdvWe1761276103973.js";import"./glsl-token-properties.DKXemF9b1761276103973.js";import"./glsl-token-assignments.Ctx_yUgS1761276103973.js";import"./glsl-token-string.Dcid9Vdn1761276103973.js";import"./glsl-token-functions.BQlKpBDG1761276103973.js";import"./object-hash.1qNYTrnD1761276103973.js";import"./jszip.y_yjJ09m1761276103973.js";import"./@pmndrs.CvKgExG31761276103973.js";const w=["object","scale"],T=r({__name:"groundProjectedEnvCom",props:{texture:{default:"https://opensource.cdn.icegl.cn/images/skyBox/round_platform_1k.exr"},size:{default:100}},async setup(a){let o,i;const r=a,u=new s,c=([o,i]=l(()=>u.loadAsync(r.texture)),o=await o,i(),o);c.mapping=e;const{scene:g}=t();g.value.environment=c;const f=new n(c);return(s,e)=>(p(),m("primitive",{object:d(f),scale:r.size},null,8,w))}}),z=r({__name:"causticsDemo",setup(s){const e=u({alpha:!0,toneMapping:a,windowSize:!0,clearColor:10066329}),t=u({enableDamping:!0,autoRotate:!1}),n=c(null),r=({elapsed:s})=>{n.value&&(n.value.rotation.x=s,n.value.rotation.y=s)},l=u({color:"#ffffff",ior:1.1,backsideIOR:1.1,far:30,worldRadius:.3,intensity:.05,causticsOnly:!1,lightSource:{x:1,y:1,z:1}}),m=new y({title:"参数"});return m.addBinding(l,"color",{label:"颜色"}),m.addBinding(l,"ior",{label:"折射系数",min:.6,max:1.3,step:.01}),m.addBinding(l,"backsideIOR",{label:"折射系数2",min:.6,max:1.3,step:.01}),m.addBinding(l,"far",{label:"可视距离",min:0,max:30,step:1}),m.addBinding(l,"worldRadius",{label:"材质大小",min:.001,max:.5,step:.001}),m.addBinding(l,"intensity",{label:"强度",min:0,max:1,step:.01}),m.addBinding(l,"causticsOnly",{label:"只显示投射"}),m.addBinding(l,"lightSource",{label:"光源位置",x:{min:-1,max:1},y:{min:-1,max:1},z:{min:-1,max:1}}),(s,a)=>{const m=g("TresCanvas");return p(),f(m,v(e,{"window-size":"",onLoop:r}),{default:j(()=>[a[2]||(a[2]=h("TresPerspectiveCamera",{position:[-20,20,15],fov:45,near:1,far:1e3},null,-1)),_(d(o),x(b(t)),null,16),a[3]||(a[3]=h("TresDirectionalLight",{position:[10,2,4],intensity:1},null,-1)),_(d(i),x(b(l)),{default:j(()=>[a[1]||(a[1]=h("TresMesh",{position:[8,5.5,8.5],"receive-shadow":"","cast-shadow":"",name:"sphere"},[h("TresSphereGeometry",{args:[3.5]}),h("TresMeshStandardMaterial",{color:16724991,roughness:0,metalness:1})],-1)),h("TresMesh",{ref_key:"torusMesh",ref:n,position:[-8,6,-8],name:"torus"},[...a[0]||(a[0]=[h("TresTorusKnotGeometry",{args:[3,1,100,32]},null,-1),h("TresMeshPhysicalMaterial",{color:"#33ffff",transmission:1,roughness:0,thickness:2},null,-1)])],512)]),_:1},16),(p(),f(k,null,{default:j(()=>[_(d(T),{position:[0,-.1,0]})]),_:1}))]),_:1},16)}}});export{z as default};
