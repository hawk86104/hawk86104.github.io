import{u as t,_ as o,a as n}from"./mergeTres.V0Gy94sc1728531791220.js";import{l as r}from"./utils.POXIUlUG1728531791220.js";import{U as e}from"./@tresjs.TFxw2EXb1728531791220.js";import{d as a,r as i,a3 as c,o as l,E as s,F as u,W as f,L as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.bvMz0l_u1728531791220.js";import{_ as w}from"./@fesjs.AIUeUkBK1728531791220.js";import"./@amap.OnfPw1bC1728531791220.js";import"./pinia.K-WG64zG1728531791220.js";import"./three.QbUqWzuy1728531791220.js";import"./three-mesh-bvh.AYIyC3ZD1728531791220.js";import"./@vueuse.MmMw6bXQ1728531791220.js";import"./vue-router.2bmjA1xE1728531791220.js";import"./lodash-es.guXTxyfJ1728531791220.js";import"./@qlin.yHhFDldE1728531791220.js";import"./@floating-ui.BPbuo5Gx1728531791220.js";import"./@juggle.7yjBMqoW1728531791220.js";const x=z;!function(t,o){const n=z,r=j();for(;;)try{if(271885===-parseInt(n(383))/1*(parseInt(n(346))/2)+parseInt(n(352))/3*(parseInt(n(340))/4)+parseInt(n(361))/5+-parseInt(n(369))/6*(-parseInt(n(336))/7)+-parseInt(n(363))/8+parseInt(n(356))/9+-parseInt(n(321))/10*(-parseInt(n(379))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[z(329)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=z,o=new RegExp(t(372)),n=new RegExp(t(384),"i"),r=U(t(357));o.test(r+t(375))&&n[t(351)](r+t(377))?U():r("0")}))()}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=z;let o;try{o=Function(t(332)+t(362)+");")()}catch(e){o=window}const n=o[t(378)]=o[t(378)]||{},r=[t(348),t(330),t(385),t(386),t(323),t(345),t(367)];for(let a=0;a<r[t(359)];a++){const o=I.constructor[t(354)][t(381)](I),e=r[a],i=n[e]||o;o[t(327)]=I[t(381)](I),o[t(353)]=i[t(353)][t(381)](i),n[e]=o}}))();const S=[x(376),x(355),x(380)];function j(){const t=["test","6ahouPa","toString","prototype","faceUv","717651NjDqna","init","atan","length","uniforms","971060zhoRwr",'{}.constructor("return this")( )',"273840JLIrpH","TresShaderMaterial","near","push","trace","geometry","64122JQRZcZ","TresMesh","far","function *\\( *\\)","normalArray","value","chain","position","input","console","77yUKkFa","normal","bind","positionArray","1uDncKB","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","info","error","buildings","74710HacSKU","customCoords","exception","u_far","mapHandle","debu","__proto__","string","apply","warn","call","return (function() ","constructor","TresGroup","u_near","161JGcfQG","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","buildingModels","getZoom","379380jgpgUy","action","tbgRef","cameraState","TresBufferGeometry","table","911248frURjO","gger","log","stateObject","lngLatToCoord"];return(j=function(){return t})()}function z(t,o){const n=j();return(z=function(t,o){return n[t-=320]})(t,o)}const R=a({__name:x(338),setup(o){const n=t(),a=t=>{const o=z;for(let r=0;r<t[o(359)];r+=3){const e=[t[r],t[r+1]],a=n[o(325)].customCoords[o(350)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};c((()=>{n[z(343)]&&(async()=>{const t=z,o=await r(t(337),t(320));for(let n=0;n<o[t(359)];n++){const r=o[n];a(r.geometry);const e=new Float32Array(r[t(368)]),i=new Float32Array(r[t(355)]),c=new Float32Array(r[t(368)][t(359)]);d[t(366)]({positionArray:e,uvArray:i,normalArray:c})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;n.cameraState&&(g.uniforms.u_zoom[t(374)]=n[t(325)][t(339)](),g[t(360)][t(335)][t(374)]=n.cameraState[t(365)],g[t(360)][t(324)].value=n[t(343)][t(371)])})),(t,o)=>{const n=z;return l(),s(n(334),null,[(l(!0),s(u,null,f(d,((t,o)=>{const r=n;return l(),s(r(370),{key:""+o},[p(r(344),{ref_for:!0,ref:r(342),position:[t[r(382)],3],faceUv:[t.uvArray,2],normal:[t[r(373)],3]},null,8,S),p(r(364),v({ref_for:!0},g),null,16)])})),128))])}}});function U(t){function o(t){const n=z;if(typeof t===n(328))return function(t){}.constructor("while (true) {}")[n(329)]("counter");1!==(""+t/t)[n(359)]||t%20==0?function(){return!0}.constructor(n(326)+n(347))[n(331)](n(341)):function(){return!1}[n(333)](n(326)+n(347))[n(329)](n(349)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const A=k;!function(t,o){const n=k,r=D();for(;;)try{if(750001===-parseInt(n(316))/1+parseInt(n(336))/2+parseInt(n(332))/3*(parseInt(n(304))/4)+-parseInt(n(317))/5+parseInt(n(344))/6*(parseInt(n(310))/7)+parseInt(n(347))/8*(-parseInt(n(334))/9)+parseInt(n(345))/10*(parseInt(n(327))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[k(341)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){F(this,(function(){const t=k,o=new RegExp(t(314)),n=new RegExp(t(338),"i"),r=E("init");o.test(r+t(343))&&n[t(330)](r+"input")?E():r("0")}))()}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[k(341)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();P(void 0,(function(){const t=k,o=function(){const t=k;let o;try{o=Function(t(320)+t(335)+");")()}catch(n){o=window}return o}(),n=o[t(333)]=o[t(333)]||{},r=[t(315),t(328),t(323),t(346),t(324),t(306),t(308)];for(let e=0;e<r[t(326)];e++){const o=P.constructor[t(339)][t(318)](P),a=r[e],i=n[a]||o;o.__proto__=P.bind(P),o[t(348)]=i.toString.bind(i),n[a]=o}}))();const L=t=>(C(A(319)),t=t(),y(),t),M=L((()=>p(A(340),{fov:60,near:.1,far:2e3},null,-1))),W=L((()=>p(A(307),{intensity:.5},null,-1)));function k(t,o){const n=D();return(k=function(t,o){return n[t-=304]})(t,o)}function D(){const t=["gger","tresCanvas","counter","function *\\( *\\)","log","105255WjAIlK","6842815MYNYvn","bind","data-v-f2059998","return (function() ","call","buildings","info","exception","debu","length","12608398LiaFHY","warn","while (true) {}","test","action","51033tGsNaw","console","117dvCeEV",'{}.constructor("return this")( )',"1803336mncIuv","manual","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","prototype","TresPerspectiveCamera","apply","constructor","chain","18aaqkhx","10HIifJp","error","389624AclYuv","toString","116tMLLdo","darkblue","table","TresAmbientLight","trace","string","736757WCHWNR"];return(D=function(){return t})()}function E(t){function o(t){const n=k;if(typeof t===n(309))return function(t){}.constructor(n(329))[n(341)](n(313));1!==(""+t/t)[n(326)]||t%20==0?function(){return!0}[n(342)](n(325)+"gger")[n(321)](n(331)):function(){return!1}.constructor("debu"+n(311))[n(341)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const N=w(a({__name:A(322),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(337)});return(t,i)=>{const c=r,f=d("TresCanvas");return l(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:c(305)}),g(f,v({id:c(312),ref:"tcRef"},a),{default:m((()=>[M,W,g(n,{center:e}),(l(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{N as default};
