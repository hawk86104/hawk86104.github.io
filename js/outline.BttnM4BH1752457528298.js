import{C as e,M as s,cg as t,cr as a,Y as o}from"./three.DOaOWaa_1752457528298.js";import{m as n,k as r,a as i,H as l}from"./@tresjs.CutcgRLX1752457528298.js";import{P as c}from"./tweakpane.C0HtAJSg1752457528298.js";import{O as p}from"./@pmndrs.n6QbIIvg1752457528298.js";import{d as u,s as f,a2 as d,G as m,o as h,u as g,a9 as y,I as b,j as k,r as M,e as j,f as w,a6 as T,a7 as B,a4 as v,m as _}from"./@vue.CcDZ19ef1752457528298.js";import"./postprocessing.BhLg8VAN1752457528298.js";import"./@vueuse.D5pFWdqo1752457528298.js";const x=["object"],C=u({__name:"outlineCom",props:{color:{default:"#ffffff"},thickness:{default:.1},screenspace:{type:Boolean,default:!1}},setup(s){const t=s,{renderer:a}=n(),o=p({color:new e(t.color),thickness:t.thickness,screenspace:t.screenspace,gl:a.value});return f((()=>{o.generate()})),d((()=>{o.updateProps({color:new e(t.color),thickness:t.thickness,screenspace:t.screenspace})})),(e,s)=>(h(),m("primitive",{object:g(o).group},null,8,x))}}),G=["object"],P=["geometry"],S=u({__name:"outlineModel",props:{color:{default:"#ffffff"},thickness:{default:.1},screenspace:{type:Boolean,default:!1}},async setup(e){let o,n;const{scene:i}=([o,n]=y((()=>r("./plugins/basic/htmls/model/model.gltf",{draco:!0,decoderPath:"./draco/"}))),o=await o,n(),o);const l=function(e){const o=[];return e.traverse((e=>{if(e.isMesh&&e.geometry.isBufferGeometry&&e.geometry.attributes.position.count<1e5){const t=e.geometry.clone(),n=new s;n.copy(e.matrixWorld),t.applyMatrix4(n),t.isBufferGeometry&&(Object.keys(t.attributes).forEach((e=>{"position"!==e&&t.deleteAttribute(e)})),o.push(function(e,s=.1){return(new a).modify(e,Math.floor(e.attributes.position.count*s))}(t,.1)))}})),t(o)}(i);return(e,s)=>(h(),m("primitive",{object:g(i),scale:1,position:[3,-1,-3]},[b("TresMesh",{geometry:g(l)},[s[0]||(s[0]=b("TresMeshBasicMaterial",{color:"#000000",transparent:"",opacity:0},null,-1)),k(C,{thickness:e.thickness,screenspace:e.screenspace,color:e.color},null,8,["thickness","screenspace","color"])],8,P)],8,G))}}),z={position:[0,.9,0],name:"torus"},A={position:[-2.5,.5,2.5],"receive-shadow":"","cast-shadow":"",name:"cube"},D=u({__name:"outline",setup(e){const s=M({alpha:!0,toneMapping:o,windowSize:!0,clearColor:"#000000"}),t=M({enableDamping:!0,autoRotate:!1}),a=M({color:"#ff00ae",thickness:.1,screenspace:!1}),n=new c;n.addBinding(a,"color",{label:"颜色"}),n.addBinding(a,"thickness",{label:"thickness",min:0,max:2,step:.01}),n.addBinding(a,"screenspace",{label:"space"});const r=M({color:"#ffffff",thickness:.026,screenspace:!1});return n.addBinding(r,"color",{label:"模型边框颜色"}),n.addBinding(r,"thickness",{label:"模型边框粗细",min:0,max:.2,step:.001}),n.addBinding(r,"screenspace",{label:"模型边框类型"}),(e,o)=>(h(),j(g(l),_(s,{"window-size":""}),{default:w((()=>[o[4]||(o[4]=b("TresPerspectiveCamera",{position:[10,10,10],fov:45,near:1,far:1e3},null,-1)),k(g(i),T(B(t)),null,16),o[5]||(o[5]=b("TresAmbientLight",{intensity:.5},null,-1)),o[6]||(o[6]=b("TresDirectionalLight",{position:[15,15,15],intensity:1},null,-1)),b("TresMesh",z,[o[0]||(o[0]=b("TresTorusKnotGeometry",{args:[1,.35,100,32]},null,-1)),o[1]||(o[1]=b("TresMeshStandardMaterial",{color:"#ff33ff",roughness:.3,metalness:.5},null,-1)),k(C,T(B(a)),null,16)]),b("TresMesh",A,[o[2]||(o[2]=b("TresCylinderGeometry",{args:[1.5,1.5,2]},null,-1)),o[3]||(o[3]=b("TresMeshStandardMaterial",{color:3407871,roughness:0,metalness:0},null,-1)),k(C)]),(h(),j(v,null,{default:w((()=>[k(S,T(B(r)),null,16)])),_:1}))])),_:1},16))}});export{D as default};
