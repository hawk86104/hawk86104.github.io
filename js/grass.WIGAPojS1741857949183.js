import{s as t,_ as n,ar as e,b as o,T as r,a0 as a,ai as i}from"./three.Gi_-4zeu1741857949183.js";import{e as s,a as c,o as l,f as u}from"./@tresjs.8SAr0PX_1741857949183.js";import"./index.Y-OjzYi-1741857949183.js";import{c as f}from"./simplex-noise.jB2HxhHB1741857949183.js";import{C as p}from"./index.f40bqtgT1741857949183.js";import{d as h,a3 as m,o as v,H as d,N as g,u as x,r as w,f as y,g as b,j as _,aj as M,ak as j,al as z}from"./@vue.NRI7TcgI1741857949183.js";import{_ as A}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.mzp98ftp1741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";import"./lamina.WGZ5sYf41741857949183.js";import"./glsl-tokenizer._St4QHBu1741857949183.js";import"./@amap.QByc7Q7q1741857949183.js";import"./glsl-token-descope.SJzB9MXC1741857949183.js";import"./glsl-token-depth.mwV6EDy11741857949183.js";import"./glsl-token-scope.W4hghJtp1741857949183.js";import"./glsl-token-properties.nSwRwxaR1741857949183.js";import"./glsl-token-assignments.rKQ_e44M1741857949183.js";import"./glsl-token-string.Bt9cTVcE1741857949183.js";import"./glsl-token-functions.x4X5nz0Z1741857949183.js";import"./object-hash.LyZoNZuC1741857949183.js";import"./jszip.v_at1HP11741857949183.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.yTUldRQl1741857949183.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.cFlECBMz1741857949183.js";import"./three-stdlib._1jCUDZZ1741857949183.js";import"./@pmndrs.3fVcA4nP1741857949183.js";import"./utils._W3mRP5C1741857949183.js";const I=R;!function(t,n){const e=R,o=k();for(;;)try{if(377639===-parseInt(e(309))/1+-parseInt(e(340))/2+parseInt(e(321))/3*(parseInt(e(306))/4)+-parseInt(e(313))/5*(-parseInt(e(311))/6)+parseInt(e(307))/7*(-parseInt(e(316))/8)+-parseInt(e(292))/9+parseInt(e(284))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[R(333)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){C(this,(function(){const t=R,n=new RegExp(t(289)),e=new RegExp(t(336),"i"),o=B("init");n[t(324)](o+t(341))&&e.test(o+t(351))?B():o("0")}))()}();const S=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[R(333)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(){const t=["exception","computeVertexNormals","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMesh","while (true) {}","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","412054uGwyXt","chain","TresGroup","__proto__","halfRootAngleSinF32","width","attributes-orientation","push","offsetsF32","attributes-position","action","input","translate","prototype","convertSRGBToLinear","halfRootAngleCosF32","index","value","gger","Vector3","orientationsF32","TresInstancedBufferGeometry","15195930iyygUp","attributes-uv","side","uniforms","console","function *\\( *\\)","attributes-halfRootAngleCos","grass","834192zYAjJr","attributes","bind","constructor","array","alphaMap","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }",'{}.constructor("return this")( )',"map","needsUpdate","sin","normalize","set","#000f00","4060LfXTIX","7cRgrzh","position","689171EsXHkl","attributes-offset","12fPCcMI","length","202775xIWHpp","Vector4","Color","5243104MsxkSS","material","InstancedBufferAttribute","cos","warn","1242ANaECJ","DoubleSide","counter","test","error","random","stretchesF32","debu","toString","string","call","toneMapped","apply"];return(k=function(){return t})()}function R(t,n){const e=k();return(R=function(t,n){return e[t-=284]})(t,n)}S(void 0,(function(){const t=R;let n;try{n=Function("return (function() "+t(299)+");")()}catch(r){n=window}const e=n.console=n[t(288)]||{},o=["log",t(320),"info",t(325),t(334),"table","trace"];for(let a=0;a<o.length;a++){const n=S[t(295)][t(353)][t(294)](S),r=o[a],i=e[r]||n;n[t(343)]=S[t(294)](S),n[t(329)]=i[t(329)][t(294)](i),e[r]=n}}))();const F=[I(317)],D=[I(356),I(349),I(285),I(310),I(346),"attributes-stretch","attributes-halfRootAngleSin",I(290)],T=["geometry"],E=[I(286)],H=h({__name:I(291),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const l=I;let u,h;const w=([u,h]=m((()=>c({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),u=await u,h(),u),y=i,b=f(Math[l(326)]);function _(t,e){const o=l,r=t.x*e.w+t.y*e.z-t.z*e.y+t.w*e.x,a=-t.x*e.z+t.y*e.w+t.z*e.x+t.w*e.y,i=t.x*e.y-t.y*e.x+t.z*e.w+t.w*e.z,s=-t.x*e.x-t.y*e.y-t.z*e.z+t.w*e.w;return new(n[o(314)])(r,a,i,s)}function M(t,n){var e=2*b(t/50,n/50);return e+=4*b(t/100,n/100),e+=.2*b(t/10,n/10)}const j=function(t,a){const i=l,s=[],c=[],u=[],f=[],p=[];let h=new e,m=new(n[i(314)]);const v=-.25;for(let e=0;e<t;e++){const r=Math.random()*a-a/2,l=Math.random()*a-a/2,d=M(r,l);s[i(347)](r,d,l);let g=Math.PI-Math[i(326)]()*(2*Math.PI);f[i(347)](Math[i(302)](.5*g)),p[i(347)](Math[i(319)](.5*g));let x=new o(0,1,0),w=x.x*Math.sin(g/2),y=x.y*Math[i(302)](g/2),b=x.z*Math.sin(g/2),j=Math[i(319)](g/2);h.set(w,y,b,j)[i(303)](),g=.5*Math[i(326)]()+v,x=new(n[i(359)])(1,0,0),w=x.x*Math.sin(g/2),y=x.y*Math[i(302)](g/2),b=x.z*Math[i(302)](g/2),j=Math.cos(g/2),m[i(304)](w,y,b,j).normalize(),h=_(h,m),g=.5*Math[i(326)]()+v,x=new(n[i(359)])(0,0,1),w=x.x*Math[i(302)](g/2),y=x.y*Math[i(302)](g/2),b=x.z*Math[i(302)](g/2),j=Math[i(319)](g/2),m[i(304)](w,y,b,j)[i(303)](),h=_(h,m),c[i(347)](h.x,h.y,h.z,h.w),e<t/3?u[i(347)](1.8*Math[i(326)]()):u[i(347)](Math.random())}return{offsetsF32:new(n[i(318)])(new Float32Array(s),3),orientationsF32:new(n[i(318)])(new Float32Array(c),4),stretchesF32:new r(new Float32Array(u),1),halfRootAngleCosF32:new r(new Float32Array(p),1),halfRootAngleSinF32:new(n[i(318)])(new Float32Array(f),1)}}(y.instances,y[l(345)]),z=new t(y.bW,y.bH,1,y.joints)[l(352)](0,y.bH/2,0),A=new t(y.width,y[l(345)],32,32);A.lookAt(new(n[l(359)])(0,1,0));const C=A[l(293)][l(308)];for(let t=0;t<C.array[l(312)];t+=3)C[l(296)][t+1]=M(C[l(296)][t],C[l(296)][t+2]);A[l(293)][l(308)][l(301)]=!0,A[l(335)]();const S=new(p({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(n[l(315)])(.3,.9,0)[l(354)](),bottomColor:new(n[l(315)])(0,.2,0)[l(354)]()},l(298),l(339),(t=>{t[l(286)]=a})));S[l(300)]=w[l(300)],S.alphaMap=w[l(297)],S[l(332)]=!1;const{onLoop:k}=s();return k((({elapsed:t})=>{const n=l;S[n(287)].time[n(357)]=t/4})),(t,e)=>{const o=l;return v(),d(o(342),null,[g(o(337),{material:x(S)},[g(o(361),{index:x(z)[o(356)],"attributes-position":x(z).attributes[o(308)],"attributes-uv":x(z)[o(293)].uv,"attributes-offset":x(j)[o(348)],"attributes-orientation":x(j)[o(360)],"attributes-stretch":x(j)[o(327)],"attributes-halfRootAngleSin":x(j)[o(344)],"attributes-halfRootAngleCos":x(j)[o(355)]},null,8,D)],8,F),g(o(337),{position:[0,0,0],geometry:x(A)},[g("TresMeshStandardMaterial",{color:o(305),side:n[o(322)]},null,8,E)],8,T)])}}});function B(t){function n(t){const e=R;if(typeof t===e(330))return function(t){}[e(295)](e(338))[e(333)](e(323));1!==(""+t/t)[e(312)]||t%20==0?function(){return!0}[e(295)](e(328)+e(358))[e(331)](e(350)):function(){return!1}.constructor("debu"+e(358))[e(333)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const L=U;!function(t,n){const e=U,o=q();for(;;)try{if(766069===-parseInt(e(306))/1+parseInt(e(296))/2+-parseInt(e(295))/3*(-parseInt(e(278))/4)+-parseInt(e(308))/5+-parseInt(e(292))/6*(parseInt(e(304))/7)+parseInt(e(309))/8+-parseInt(e(300))/9*(-parseInt(e(289))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const O=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[U(291)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){O(this,(function(){const t=U,n=new RegExp(t(286)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=V(t(298));n[t(281)](o+"chain")&&e[t(281)](o+t(302))?V():o("0")}))()}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[U(291)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function q(){const t=["console","function *\\( *\\)","toString","string","10gonDeL","bind","apply","18AAVWcp","gger","exception","3sUhIvZ","1518132ICTsax","__proto__","init","log","9306531BAvzmG","info","input","constructor","424046QVyNJm","debu","1341242TMidXp","grass","4574335ViqgOq","990016pcsQjd","call","length","TresPerspectiveCamera","return (function() ","stateObject","error","5148140BEqRdS","counter","action","test","warn","while (true) {}","prototype"];return(q=function(){return t})()}function U(t,n){const e=q();return(U=function(t,n){return e[t-=272]})(t,n)}P(void 0,(function(){const t=U;let n;try{n=Function(t(275)+'{}.constructor("return this")( ));')()}catch(r){n=window}const e=n[t(285)]=n[t(285)]||{},o=[t(299),t(282),t(301),t(277),t(294),"table","trace"];for(let a=0;a<o[t(273)];a++){const n=P[t(303)][t(284)][t(290)](P),r=o[a],i=e[r]||n;n[t(297)]=P[t(290)](P),n.toString=i[t(287)][t(290)](i),e[r]=n}}))();const N=h({__name:L(307),setup(t){const n=w({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=w({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=U;return v(),y(x(u),M(j(n)),{default:b((()=>[o[0]||(o[0]=g(r(274),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),_(x(l),M(j(e)),null,16),(v(),y(z,null,{default:b((()=>[_(H)])),_:1})),(v(),y(z,null,{default:b((()=>[_(x(A),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16)}}});function V(t){function n(t){const e=U;if(typeof t===e(288))return function(t){}[e(303)](e(283))[e(291)](e(279));1!==(""+t/t)[e(273)]||t%20==0?function(){return!0}[e(303)](e(305)+e(293))[e(272)](e(280)):function(){return!1}.constructor(e(305)+"gger")[e(291)](e(276)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{N as default};
