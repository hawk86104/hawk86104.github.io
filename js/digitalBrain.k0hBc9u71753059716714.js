import{cf as s,N as a,_ as o,ce as e}from"./three.DR_5uK8e1753059716714.js";import{a as t}from"./@tresjs.oHLVlBVa1753059716714.js";import{P as i}from"./tweakpane.C0HtAJSg1753059716714.js";import"./index.CXZGuRj51753059716714.js";import{l}from"./util.B5ixLKLJ1753059716714.js";import{_ as r}from"./cloudPoints.vue_vue_type_script_setup_true_lang.CUbG60hP1753059716714.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.DBeTODNB1753059716714.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DOKxjcyP1753059716714.js";import{d as m,r as u,aa as c,h as j,G as f,o as g,j as _,u as b,f as h,I as w,a7 as y,a8 as v,e as B,H as k,m as x,a5 as L,F as T}from"./@vue.DwSifnVs1753059716714.js";import"./postprocessing.BrgFZ9pj1753059716714.js";import"./@vueuse.mXirru381753059716714.js";import"./utils.My5XTXU-1753059716714.js";import"./@fesjs.CV3tl4s01753059716714.js";import"./vue-router.Tg4SAQ0L1753059716714.js";import"./lodash-es.C7pWAXPe1753059716714.js";import"./@qlin.q6OWdsQV1753059716714.js";import"./pinia.DQkQ1TR81753059716714.js";import"./@babel.BPq7uOAK1753059716714.js";import"./@floating-ui.BFjFSAYt1753059716714.js";import"./@juggle.CcBCnTIR1753059716714.js";import"./index.BfQdOkTF1753059716714.js";import"./three-mesh-ui.module.DdVJf2la1753059716714.js";import"./starLoading.CqdwjeMv1753059716714.js";import"./cssLoaders.B-VOSyql1753059716714.js";import"./bubbleLoading.ChenZ7AY1753059716714.js";import"./yangyangLoading.B7DnHS9P1753059716714.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,P;const F=u({color:"#fff",show:!0,opacity:1}),H=new i({title:"参数"});H.addBinding(F,"show",{label:"点云显示"}),H.addBinding(F,"color",{label:"点云颜色"}),H.addBinding(F,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const M=u({color:"#84ccff",show:!0,opacity:1});H.addBinding(M,"show",{label:"脑轮廓显示"}),H.addBinding(M,"color",{label:"脑轮廓颜色"}),H.addBinding(M,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=u({color:"#9e00af",show:!0,opacity:1});H.addBinding(R,"show",{label:"脑组织显示"}),H.addBinding(R,"color",{label:"脑组织颜色"}),H.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const S=new s,q=([G,P]=c((()=>l("./plugins/medical/model/brainparts.OBJ",S))),G=await G,P(),G),z=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a}),A=u({autoRotate:!0,autoRotateSpeed:2});return(s,a)=>{const o=j("TresCanvas");return g(),f(T,null,[_(b(d)),_(o,x(z,{"window-size":""}),{default:h((()=>[a[0]||(a[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),_(b(t),y(v(A)),null,16),a[1]||(a[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",C,[F.show?(g(),B(r,x({key:0,model:b(q)},F),null,16,["model"])):k("",!0),(g(),B(L,null,{default:h((()=>[M.show?(g(),B(n,x({key:0,model:b(q)},M),null,16,["model"])):k("",!0)])),_:1})),R.show?(g(),B(p,x({key:1,model:b(q)},R),null,16,["model"])):k("",!0)]),a[2]||(a[2]=w("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
