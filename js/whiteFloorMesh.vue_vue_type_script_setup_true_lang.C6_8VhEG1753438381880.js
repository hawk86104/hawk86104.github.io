import{aL as a,b5 as e,as as o,C as r,a3 as s}from"./three.0XnumNGx1753438381880.js";import{b as t}from"./@tresjs.CL21cZKR1753438381880.js";import{g as l,a as u}from"./whiteFloor.DTFSSVv61753438381880.js";import{d as n,b as i,aa as d,w as f,G as m,o as h,I as p,a7 as w,a8 as g}from"./@vue.BzMISRrV1753438381880.js";const v=["rotation-x"],C=["args"],c=n({__name:"whiteFloorMesh",props:{size:{default:[20,20]},color:{default:"#990"},shadowColor:{default:"#999"},edge:{default:.35}},async setup(n){let c,j;const x=n,S=i(),{map:y}=([c,j]=d((()=>t({map:"./plugins/floor/image/whiteFloor.jpg"}))),c=await c,j(),c);y.wrapS=y.wrapT=a;const T={uniforms:e.merge([o.lights,{uTexture:{type:"t",value:y},uColor:{value:new r(x.color)},uShadowColor:{value:new r(x.shadowColor)},fEdge:{type:"f",value:x.edge}}]),side:s,vertexShader:u(),fragmentShader:l(),lights:!0,transparent:!0};return f((()=>x.edge),(a=>{T.uniforms.fEdge.value=a})),f((()=>x.color),(a=>{T.uniforms.uColor.value=new r(x.color)})),f((()=>x.shadowColor),(a=>{T.uniforms.uShadowColor.value=new r(x.shadowColor)})),(a,e)=>(h(),m("TresMesh",{ref_key:"tmRef",ref:S,"rotation-x":-Math.PI/2},[p("TresPlaneGeometry",{args:x.size},null,8,C),p("TresShaderMaterial",w(g(T)),null,16)],8,v))}});export{c as _};
