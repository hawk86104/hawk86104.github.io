import{_ as e}from"./three.jpi2UCEx1735275234726.js";import{e as n,U as t,b as a}from"./@tresjs.fCqPNEAw1735275234726.js";import{P as o}from"./tweakpane.yHWGBmom1735275234726.js";import{d as r,a6 as i,X as l,e as s,o as u,f as c,g as p,J as v,j as f,u as m,m as d,aj as h,ak as g}from"./@vue.u2cBPEWn1735275234726.js";import"./@vueuse.8jEBPPFT1735275234726.js";const x=w;function y(){const e=["stateObject","1882323LlmNXu","function *\\( *\\)","143418zsxlkS","change","wireframeMaterialRef","color","action","error","addBinding","TresCanvas","8pyeunO","26247vxHzgR","uTime","rotation","8QUBHMg","exception","海浪变化速度",'{}.constructor("return this")( )',"209RaYFFY","FrontSide","982989RWojox","test","apply","TresShaderMaterial","string","log","size","addFolder","#17c5a9","pointsEarth","while (true) {}","154780hZoOOD","bind","粒子大小","pointSize","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","SRGBColorSpace","3196632MiIhhs","uniforms","toString","uWaveSpeed","chain","海浪高度","#ffffff","constructor","12KolcYY","__proto__","length","value","TresIcosahedronGeometry","call","info","#122148","14884kyohOi","return (function() ","counter","Debug","TresPerspectiveCamera","260LjcTOi","TresPoints","debu","console","#080820","table"];return(y=function(){return e})()}!function(e,n){const t=w,a=y();for(;;)try{if(160391===-parseInt(t(400))/1+parseInt(t(412))/2*(parseInt(t(409))/3)+-parseInt(t(386))/4*(parseInt(t(391))/5)+-parseInt(t(378))/6*(-parseInt(t(353))/7)+-parseInt(t(408))/8*(-parseInt(t(398))/9)+parseInt(t(364))/10*(-parseInt(t(351))/11)+parseInt(t(370))/12)break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=w,n=new RegExp(e(399)),t=new RegExp(e(368),"i"),a=b("init");n.test(a+e(374))&&t[e(354)](a+"input")?b():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[w(355)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();function w(e,n){const t=y();return(w=function(e,n){return t[e-=348]})(e,n)}S(void 0,(function(){const e=w;let n;try{n=Function(e(387)+e(350)+");")()}catch(o){n=window}const t=n[e(394)]=n[e(394)]||{},a=[e(358),"warn",e(384),e(405),e(348),e(396),"trace"];for(let r=0;r<a.length;r++){const n=S[e(377)].prototype[e(365)](S),o=a[r],i=t[o]||n;n[e(379)]=S[e(365)](S),n.toString=i[e(372)].bind(i),t[o]=n}}))();const _=r({__name:x(362),async setup(r){const y=x;let T,S;const w={color:y(361),pointSize:4},_={clearColor:y(385),shadows:!1,alpha:!1,outputColorSpace:e[y(369)]},b={color:w[y(403)],wireframe:!0,transparent:!0,opacity:.2},z=([T,S]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),j=z[0],E=z[1],P=z[2],D=z[3],I=z[4],k={uniforms:{size:{type:"f",value:w[y(367)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:P},elevTexture:{type:"t",value:D},alphaTexture:{type:"t",value:I},earthTexture:{type:"t",value:j},starTexture:{type:"t",value:E}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(352)]},A=l(),C=l(),M=(new o)[y(360)]({title:y(389)});M.addBinding(w,y(403),{type:y(403)}).on(y(401),(({value:e})=>{const n=y;C[n(381)][n(403)].set(e)})),M.addBinding(k[y(371)][y(359)],y(381),{min:.1,max:10,step:.1,label:y(366)}),M.addBinding(k[y(371)].uWaveHeight,y(381),{min:.01,max:.5,step:.01,label:y(375)}),M[y(406)](k.uniforms[y(373)],"value",{min:.01,max:1,step:.01,label:y(349)});const{onLoop:R}=n();return R((({delta:e})=>{const n=y;A[n(381)]&&(A.value[n(411)].y+=.002,k[n(371)][n(410)][n(381)]+=10*e)})),(e,n)=>{const a=y,o=s(a(407));return u(),c(o,d(_,{"window-size":""}),{default:p((()=>[n[2]||(n[2]=v(a(390),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1)),f(m(t),{autoRotate:!0,autoRotateSpeed:2}),v("TresGroup",{ref_key:"groupRef",ref:A},[v("TresMesh",null,[n[0]||(n[0]=v(a(382),{args:[1,4]},null,-1)),v("TresMeshBasicMaterial",d({ref_key:a(402),ref:C},b),null,16)]),v(a(392),null,[n[1]||(n[1]=v(a(382),{args:[1,128]},null,-1)),v(a(356),h(g(k)),null,16)])],512),n[3]||(n[3]=v("TresHemisphereLight",{args:[a(376),a(395),3]},null,-1))])),_:1},16)}}});function b(e){function n(e){const t=w;if(typeof e===t(357))return function(e){}[t(377)](t(363))[t(355)](t(388));1!==(""+e/e)[t(380)]||e%20==0?function(){return!0}[t(377)](t(393)+"gger")[t(383)](t(404)):function(){return!1}[t(377)](t(393)+"gger")[t(355)](t(397)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{_ as default};
