import{U as n,Y as t}from"./@tresjs.CmAaFQUS1729762363846.js";import{a0 as e,aN as r}from"./three.CQvcOG671729762363846.js";import{_ as o}from"./argestCircle.DtZPcCa-1729762363846.js";import{d as i,e as s,o as a,f as u,g as c,L as f,j as l,u as p,aj as v,ak as d,m}from"./@vue.n8X62v121729762363846.js";import"./@vueuse.DvZn62wO1729762363846.js";const g=A;!function(n,t){const e=A,r=T();for(;;)try{if(749644===-parseInt(e(423))/1+-parseInt(e(426))/2*(parseInt(e(459))/3)+-parseInt(e(456))/4*(parseInt(e(429))/5)+parseInt(e(439))/6+-parseInt(e(470))/7*(parseInt(e(460))/8)+parseInt(e(436))/9*(parseInt(e(440))/10)+parseInt(e(428))/11*(parseInt(e(430))/12))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const h=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[A(442)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();function T(){const n=["constructor","gger","TresMesh","TresCanvas","TresDirectionalLight","return (function() ","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","test","toString","console","input","4899444NTpdgv","function *\\( *\\)","bind","3xALjzL","2840MvwrKI","init","length","string","log","#ffffff","TresGridHelper","uniforms","while (true) {}","exception","8568nnNOhA","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","debu","#000000","565012GbyycT","__proto__","prototype","1381078eIfJos","value","11iBceTq","5AEGGti","35890152oHitEh","uTime","rotation-x","TresShaderMaterial","error","info","2808936sGFhyw","TresPlaneGeometry","table","2169756RUQRDA","10PdkVZu","stateObject","apply","trace","call"];return(T=function(){return n})()}!function(){h(this,(function(){const n=A,t=new RegExp(n(457)),e=new RegExp(n(420),"i"),r=G(n(461));t[n(452)](r+"chain")&&e.test(r+n(455))?G():r("0")}))()}();const x=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[A(442)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();x(void 0,(function(){const n=A,t=function(){const n=A;let t;try{t=Function(n(450)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t[n(454)]=t[n(454)]||{},r=[n(464),"warn",n(435),n(434),n(469),n(438),n(443)];for(let o=0;o<r.length;o++){const t=x[n(445)][n(425)].bind(x),i=r[o],s=e[i]||t;t[n(424)]=x[n(458)](x),t[n(453)]=s[n(453)].bind(s),e[i]=t}}))();const y={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},I=f("TresAmbientLight",{color:g(465)},null,-1),b=f(g(449),{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1),w=[g(432)],_=f(g(437),{args:[1e3,1e3]},null,-1),j=f("TresAxesHelper",{args:[1e3],position:[0,19,0]},null,-1),C=f(g(466),{args:[6e3,100],position:[0,19,0]},null,-1);function A(n,t){const e=T();return(A=function(n,t){return e[n-=420]})(n,t)}const L=g(451),R=i({__name:"tunnel",setup(i){const h=g,T={clearColor:h(422),shadows:!0,alpha:!1,useLegacyLights:!0},x={autoRotate:!0,enableDamping:!0},A={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:L,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:R}=n();return R((({delta:n})=>{const t=h;A[t(467)][t(431)][t(427)]+=n})),(n,e)=>{const r=h,o=s(r(448));return a(),u(o,m(T,{"window-size":""}),{default:c((()=>[f("TresPerspectiveCamera",y,null,512),l(p(t),v(d(x)),null,16),I,b,f(r(447),{ref:"quanMeshRef",position:[0,100,0],"rotation-x":2*Math.PI/360*90},[_,f(r(433),v(d(A)),null,16)],8,w),j,C])),_:1},16)}}});function G(n){function t(n){const e=A;if(typeof n===e(463))return function(n){}[e(445)](e(468))[e(442)]("counter");1!==(""+n/n)[e(462)]||n%20==0?function(){return!0}[e(445)](e(421)+e(446))[e(444)]("action"):function(){return!1}[e(445)](e(421)+e(446))[e(442)](e(441)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{R as default};
