import{C as e,A as a,al as n,c6 as r,cu as s,bb as t,c7 as o,c8 as c,V as i,c9 as v,cn as u,n as d,cR as l}from"./three.2wx8FU0g1743660816268.js";let m=new e("#0fb1fb");const w=new a({color:m,transparent:!0,opacity:.3}),p=new n({color:new e(m),depthTest:!0,transparent:!0}),x=e=>{const a=[];e.traverse((e=>{e.isMesh&&(a.push(e.geometry),e.material=w)}));const n=r(a),o=new s(n,6.137*Math.PI),c=new t(o);return p.opacity=1,c.material=p,c},b=0,f=.972,T=.21,g=(e,a,n,r,s)=>{const t=new o(e,a),m=new c(new i(r,s),f,T,b),w=new v(n);w.renderToScreen=!1,w.addPass(t),w.addPass(m);const p=new u(new d({uniforms:{baseTexture:{value:null},bloomTexture:{value:w.renderTarget2.texture}},vertexShader:"varying vec2 vUv;\nvoid main(){\n\tvUv=uv;\n\tgl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform sampler2D baseTexture;\nuniform sampler2D bloomTexture;\nvarying vec2 vUv;\nvoid main(){\n\tgl_FragColor=(texture2D(baseTexture,vUv)+vec4(1.)*texture2D(bloomTexture,vUv));\n}",defines:{}}),"baseTexture");p.needsSwap=!0;const x=new l,g=new v(n);return g.addPass(t),g.addPass(p),g.addPass(x),{finalComposer:g,effectComposer:w,renderScene:t,bloomPass:m}};export{x as r,g as u};
