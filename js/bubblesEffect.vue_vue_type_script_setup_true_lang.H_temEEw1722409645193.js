import{a6 as n,bV as t,C as e,k as o,Z as i,h as r}from"./three.6E5muTWJ1722409645193.js";import{p as a,$ as s,N as l}from"./@tresjs.qmCJ68Vp1722409645193.js";import{d as u,b as c,a4 as f,a1 as p,o as m,D as g,J as b,aj as v,ak as y,u as d}from"./@vue.9bHx4gg21722409645193.js";const h=x;!function(n,t){const e=x,o=_();for(;;)try{if(877760===parseInt(e(164))/1*(-parseInt(e(166))/2)+parseInt(e(155))/3*(-parseInt(e(112))/4)+-parseInt(e(170))/5*(parseInt(e(153))/6)+parseInt(e(158))/7+parseInt(e(162))/8+parseInt(e(136))/9+-parseInt(e(146))/10*(-parseInt(e(130))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const w=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[x(150)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function _(){const n=["gger","711530pKWeoz","color","geometry","call","20065QZLRlq","init","xRayEffect","16hAKblR","input","Color","mergeGeometries","while (true) {}","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","opacity","dispose","return (function() ","glowColor","value",'{}.constructor("return this")( )',"TresMesh","exception","DoubleSide","debu","log","verticesNeedUpdate","77QJPipJ","#84ccff","model","test","error","TresBufferGeometry","2138850CcxQNK","prototype","AdditiveBlending","sin","action","toString","map","uOpacity","console","counter","1997990dENkpf","trace","Mesh","TresMeshRef","apply","uniforms","stateObject","1608eFPnBx","table","764817gASXpe","function *\\( *\\)","position","9149770zaJlUq","push","length","bind","5929416tWyDyH","constructor","2OtCIti"];return(_=function(){return n})()}!function(){w(this,(function(){const n=x,t=new RegExp(n(156)),e=new RegExp(n(117),"i"),o=S(n(110));t.test(o+"chain")&&e[n(133)](o+n(113))?S():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[x(150)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function x(n,t){const e=_();return(x=function(n,t){return e[n-=110]})(n,t)}z(void 0,(function(){const n=x;let t;try{t=Function(n(120)+n(123)+");")()}catch(i){t=window}const e=t[n(144)]=t[n(144)]||{},o=[n(128),"warn","info",n(134),n(125),n(154),n(147)];for(let r=0;r<o[n(160)];r++){const t=z[n(163)][n(137)][n(161)](z),i=o[r],a=e[i]||t;t.__proto__=z.bind(z),t[n(141)]=a[n(141)][n(161)](a),e[i]=t}}))();const P=b(h(135),null,null,-1),T=u({__name:h(111),props:{model:{},color:{default:h(131)},opacity:{default:1}},async setup(o){const i=h;let r,u;const d=o,w=c(),_=[];d[i(132)].traverse((t=>{const e=i;t instanceof n[e(148)]&&(t.geometry[e(129)]=!0,_[e(159)](t[e(168)]))}));const z=([r,u]=f((()=>l({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,u(),r),x={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(114)])(d[i(167)])},lightningTexture:{type:"t",value:z[i(142)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:d[i(118)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:n[i(126)],blending:n[i(138)],depthWrite:!1};x[i(151)].offsetY[i(122)]=Math[i(139)](5);const{camera:T}=a(),{onLoop:S}=s();return S((({delta:n})=>{const t=i;T[t(122)][t(157)]&&w[t(122)]&&(x[t(151)].uTime[t(122)]+=n)})),p((()=>{const n=i;w.value&&(w[n(122)][n(168)][n(119)](),w[n(122)][n(168)]=t[n(115)](_)),d[n(167)]&&(x[n(151)][n(121)].value=new e(d.color)),d[n(118)]&&(x[n(151)][n(143)].value=d[n(118)])})),(n,t)=>{const e=i;return m(),g(e(124),{ref_key:e(149),ref:w},[P,b("TresShaderMaterial",v(y(x)),null,16)],512)}}});function S(n){function t(n){const e=x;if("string"==typeof n)return function(n){}.constructor(e(116))[e(150)](e(145));1!==(""+n/n)[e(160)]||n%20==0?function(){return!0}[e(163)](e(127)+e(165))[e(169)](e(140)):function(){return!1}[e(163)]("debu"+e(165))[e(150)](e(152)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const C=F;!function(n,t){const e=F,o=B();for(;;)try{if(376060===-parseInt(e(362))/1*(-parseInt(e(360))/2)+parseInt(e(335))/3*(-parseInt(e(337))/4)+parseInt(e(349))/5*(-parseInt(e(319))/6)+-parseInt(e(333))/7+-parseInt(e(342))/8*(-parseInt(e(347))/9)+-parseInt(e(334))/10+parseInt(e(355))/11)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(307)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){I(this,(function(){const n=F,t=new RegExp(n(341)),e=new RegExp(n(327),"i"),o=O(n(344));t[n(354)](o+n(313))&&e[n(354)](o+"input")?O():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(307)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function F(n,t){const e=B();return(F=function(n,t){return e[n-=302]})(n,t)}M(void 0,(function(){const n=F,t=function(){let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(t){n=window}return n}(),e=t[n(352)]=t[n(352)]||{},o=[n(306),n(357),"info",n(329),"exception","table","trace"];for(let i=0;i<o.length;i++){const t=M[n(323)][n(346)][n(309)](M),r=o[i],a=e[r]||t;t[n(331)]=M[n(309)](M),t.toString=a[n(373)][n(309)](a),e[r]=t}}))();const U=u({__name:C(351),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(e){const a=C,l=e,u=["afective",a(370),"episodic","process",a(353),a(372),a(312),a(310),"analitic"],f={};l[a(367)][a(363)]((e=>{const o=a;e instanceof n[o(304)]&&u.map((n=>{const i=o;if(e[i(358)].includes(n)){if(f[n]){const o=[f[n],e[i(371)]];return f[n]=t[i(324)](o),f}return f[n]=e.geometry}return[]}))}));const h=c(),w=new o({uniforms:{glowColor:{type:"c",value:new(n[a(321)])(l[a(348)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:l[a(317)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[a(356)],side:i,depthTest:!1,vertexColors:!1,transparent:!0});p((()=>{h[a(314)]&&(()=>{const t=a,e=[],o=[],i=[],s=[];for(let a=0;a<2e4-3*u[t(361)];a+=1){const l=n[t(368)][t(316)](0,u[t(361)]-1),c=u[l],p=f[c][t(303)][t(340)][t(366)][3*a+0]||0,m=f[c][t(303)][t(340)].array[3*a+1]||0,g=f[c][t(303)].position[t(366)][3*a+2]||0;if(o.push(p,m,g),e[a]=r[t(315)](10,20),a%100==0){const n=r[t(316)](100,250)+m;s[t(322)](p,n,g,1)}else s.push(p,m,g,0);i[2*a+0]=n[t(368)][t(315)](.5,1.5),i[2*a+1]=2.5}h[t(314)].setAttribute(t(343),new(n[t(311)])(i,2)),h[t(314)][t(374)](t(330),new(n[t(311)])(s,4)),h[t(314)][t(374)](t(340),new(n[t(311)])(o,3)),h[t(314)][t(374)](t(348),new(n[t(311)])([],3)),h[t(314)][t(374)](t(320),new(n[t(311)])(e,1)),h[t(314)][t(326)]()})()}));const _=c(),{onLoop:z}=s();return z((({delta:t})=>{const e=a;_.value&&(_[e(314)][e(345)].uniforms[e(339)][e(314)]+=.05,_[e(314)].material[e(336)].uSlowTime[e(314)]+=1/400),l.color&&(w[e(336)][e(375)][e(314)]=new(n[e(321)])(l[e(348)])),l[e(317)]&&(w[e(336)][e(365)][e(314)]=l[e(317)])})),(n,t)=>{const e=a;return m(),g(e(305),{ref_key:e(328),ref:_},[b(e(308),{ref_key:e(332),ref:h},null,512),b(e(359),v(y(d(w))),null,16)],512)}}});function B(){const n=["uniforms","4JWOtMc","string","uTime","position","function *\\( *\\)","9552MoHMwl","aDelayDuration","init","material","prototype","1197zJokUb","color","5TpFQMK","action","bubblesEffect","console","amigdala","test","21446381gmedgp","AdditiveBlending","warn","name","TresShaderMaterial","4262EuIVAF","length","137mnQXZO","traverse","counter","uOpacity","array","model","MathUtils","stateObject","semantic","geometry","brainstem","toString","setAttribute","glowColor","call","attributes","Mesh","TresPoints","log","apply","TresBufferGeometry","bind","cerebellum","Float32BufferAttribute","bridge","chain","value","randFloat","randInt","opacity","while (true) {}","2946234zWgHCm","size","Color","push","constructor","mergeGeometries","gger","computeBoundingSphere","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMeshRef","error","bubbles","__proto__","BufferGeometryRef","5032986HXaDUF","6225100kJziKJ","575439zfqWLL"];return(B=function(){return n})()}function O(n){function t(n){const e=F;if(typeof n===e(338))return function(n){}[e(323)](e(318))[e(307)](e(364));1!==(""+n/n).length||n%20==0?function(){return!0}[e(323)]("debu"+e(325))[e(302)](e(350)):function(){return!1}[e(323)]("debu"+e(325))[e(307)](e(369)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as _,U as a};
