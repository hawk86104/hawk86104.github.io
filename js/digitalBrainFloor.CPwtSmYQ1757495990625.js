import{cf as e,N as o,_ as s,ce as a}from"./three.QlBabAUP1757495990625.js";import{a as t}from"./@tresjs.BaNUTOlS1757495990625.js";import{P as i}from"./tweakpane.C0HtAJSg1757495990625.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.DMyccwH-1757495990625.js";import"./@fesjs.CCi3MYpR1757495990625.js";import"./Resource.CGdZhZpw1757495990625.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.CW0_itaP1757495990625.js";import"./three-mesh-ui.module.Claa84Mj1757495990625.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1757495990625.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.CBBfHGLg1757495990625.js";import{_ as d,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.Dvd5L3Wr1757495990625.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as x,m as C,a5 as T,F as k}from"./@vue.pEDXJ_3Z1757495990625.js";import"./postprocessing.Ct7rpRb51757495990625.js";import"./@vueuse.us9YhBxp1757495990625.js";import"./vue-router.B3z3fWKz1757495990625.js";import"./lodash-es.C7pWAXPe1757495990625.js";import"./pinia.fETTmjgD1757495990625.js";import"./@qlin.q6OWdsQV1757495990625.js";import"./@babel.BPq7uOAK1757495990625.js";import"./@floating-ui.BFjFSAYt1757495990625.js";import"./@juggle.CcBCnTIR1757495990625.js";import"./starLoading.BYLwYKz_1757495990625.js";import"./utils.CFlViMy01757495990625.js";import"./cssLoaders.Dji2eks31757495990625.js";import"./bubbleLoading.5-HnR69F1757495990625.js";import"./yangyangLoading.D07nFGoS1757495990625.js";const S={position:[0,120,0]},M=u({__name:"digitalBrainFloor",async setup(u){let M,P;const R=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),z=c({color:"#fff",show:!0,opacity:1}),G=new i({title:"参数"});G.addBinding(z,"show",{label:"点云显示"}),G.addBinding(z,"color",{label:"点云颜色"}),G.addBinding(z,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});G.addBinding(F,"show",{label:"脑轮廓显示"}),G.addBinding(F,"color",{label:"脑轮廓颜色"}),G.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const I=c({color:"#9e00af",show:!0,opacity:1});G.addBinding(I,"show",{label:"脑组织显示"}),G.addBinding(I,"color",{label:"脑组织颜色"}),G.addBinding(I,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const J=new e,N=([M,P]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",J))),M=await M,P(),M),q=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:o}),A=c({autoRotate:!0,autoRotateSpeed:2});return(e,o)=>{const s=j("TresCanvas");return g(),f(k,null,[y(h(l)),y(s,C(q,{"window-size":""}),{default:b((()=>[o[0]||(o[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(A)),null,16),o[1]||(o[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",S,[z.show?(g(),L(p,C({key:0,model:h(N)},z),null,16,["model"])):x("",!0),(g(),L(T,null,{default:b((()=>[F.show?(g(),L(d,C({key:0,model:h(N)},F),null,16,["model"])):x("",!0)])),_:1})),I.show?(g(),L(m,C({key:1,model:h(N)},I),null,16,["model"])):x("",!0)]),y(r,w(B(R)),null,16)])),_:1},16)],64)}}});export{M as default};
