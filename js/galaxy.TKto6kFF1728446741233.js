import{C as n,aN as t,bU as e,ak as o,am as a,a as r}from"./three.GKtOCofD1728446741233.js";import{U as s,e as i,F as c,Y as u}from"./@tresjs.2zzrlbpQ1728446741233.js";import{d as l,b as d,w as f,e as m,o as p,E as h,j as v,u as g,g as w,L as M,aj as b,ak as P,F as C}from"./@vue.JNsx1iN61728446741233.js";import"./@vueuse.M29bYW2K1728446741233.js";const y=A;!function(n,t){const e=A,o=_();for(;;)try{if(223351===-parseInt(e(138))/1*(-parseInt(e(130))/2)+-parseInt(e(124))/3*(-parseInt(e(147))/4)+parseInt(e(121))/5*(parseInt(e(132))/6)+-parseInt(e(114))/7+parseInt(e(139))/8*(parseInt(e(135))/9)+-parseInt(e(129))/10*(parseInt(e(134))/11)+parseInt(e(171))/12*(parseInt(e(159))/13))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[A(170)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=A,t=new RegExp(n(168)),e=new RegExp(n(153),"i"),o=T(n(177));t.test(o+"chain")&&e[n(127)](o+n(174))?T():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[A(170)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();z(void 0,(function(){const n=A;let t;try{t=Function("return (function() "+n(125)+");")()}catch(a){t=window}const e=t[n(178)]=t[n(178)]||{},o=[n(140),"warn",n(141),"error",n(155),n(126),n(119)];for(let r=0;r<o[n(137)];r++){const t=z[n(167)].prototype[n(128)](z),a=o[r],s=e[a]||t;t[n(157)]=z[n(128)](z),t[n(149)]=s[n(149)].bind(s),e[a]=t}}))();const I=M(y(161),{position:[3,3,3]},null,-1),j=[y(115),y(117),y(136),"a-randomness"];function A(n,t){const e=_();return(A=function(n,t){return e[n-=114]})(n,t)}function _(){const n=["function *\\( *\\)","sin","apply","1212hOtmGM","gger","cos","input","uTime","galaxy","init","console","aRandomness","while (true) {}","bufferRef","stateObject","1906562CKVvoG","position","call","a-scale","randomnessPower","trace","geometry","5grtziV","counter","TresPoints","3MRCRur",'{}.constructor("return this")( )',"table","test","bind","681080cBajIe","778rnFcaZ","branches","981606prQqxg","TresShaderMaterial","22VxeDbk","1039914gqAnjI","color","length","1VwvzsZ","8XfJkKZ","log","info","uniforms","forEach","string","outsideColor","lerp","771268AMyaRi","insideColor","toString","debu","random","count","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","clone","exception","setAttribute","__proto__","material","20540sMOljB","#b5f28d","TresPerspectiveCamera","radius","size","action","TresBufferGeometry","value","constructor"];return(_=function(){return n})()}const S=l({__name:y(176),setup(l){const x=y,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a,windowSize:!0},A={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(160),outsideColor:"#1b3984"},_=new n(A[x(148)]),S=new n(A[x(145)]),T=new Float32Array(3*A.count),F=new Float32Array(3*A.count),R=new Float32Array(A[x(152)]),k=new Float32Array(3*A.count);for(let n=0;n<A.count;n++){const t=3*n,e=Math[x(151)]()*A.radius,o=n%A[x(131)]*Math.PI*2/A[x(131)];T[t]=Math[x(173)](o)*e,T[t+1]=0,T[t+2]=Math[x(169)](o)*e;const a=Math[x(151)]()**A[x(118)]*(Math.random()<.5?-1:1),r=Math[x(151)]()**A[x(118)]*(Math[x(151)]()<.5?-1:1),s=Math.random()**A[x(118)]*(Math[x(151)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_[x(154)]();i[x(146)](S,e/A[x(162)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,R[n]=Math.random()}const O={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:A[x(163)]}}};const Z=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;Z[t(166)]&&(Z.value[t(158)][t(142)][t(175)].value=n)}));const{count:V,size:B,radius:G,branches:q,spin:K,randomness:L,randomnessPower:U,insideColor:$,outsideColor:D}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(160),outsideColor:"#1b3984"});return f([V[x(166)],B[x(166)],G[x(166)],q[x(166)],K[x(166)],L[x(166)],U[x(166)],$[x(166)],D.value],(t=>{t[x(143)](((n,t)=>{A[Object.keys(A)[t]]=n.value})),function(){const t=x;if(Z[t(166)]){const e=new n(A[t(148)]),o=new n(A[t(145)]),a=new Float32Array(3*A[t(152)]),s=new Float32Array(3*A.count),i=new Float32Array(A[t(152)]),c=new Float32Array(3*A[t(152)]);for(let n=0;n<A[t(152)];n++){const r=3*n,u=Math.random()*A[t(162)],l=n%A[t(131)]*Math.PI*2/A[t(131)];a[r]=Math[t(173)](l)*u,a[r+1]=0,a[r+2]=Math[t(169)](l)*u;const d=Math[t(151)]()**A[t(118)]*(Math[t(151)]()<.5?-1:1),f=Math[t(151)]()**A.randomnessPower*(Math[t(151)]()<.5?-1:1),m=Math[t(151)]()**A.randomnessPower*(Math[t(151)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=e[t(154)]();p[t(146)](o,u/A[t(162)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(151)]()}Z.value[t(120)][t(156)](t(115),new r(a,3)),Z[t(166)].geometry.setAttribute(t(179),new r(c,3)),Z[t(166)][t(120)][t(156)](t(136),new r(s,3)),Z[t(166)][t(120)].setAttribute("aScale",new r(i,1))}}()})),(n,t)=>{const e=x,o=m("TresCanvas");return p(),h(C,null,[v(g(c)),v(o,b(P(z)),{default:w((()=>[I,M(e(123),{ref_key:e(181),ref:Z},[M(e(165),{position:[g(T),3],"a-scale":[g(R),1],color:[g(F),3],"a-randomness":[g(k),3]},null,8,j),M(e(133),b(P(O)),null,16)],512),v(g(u))])),_:1},16)],64)}}});function T(n){function t(n){const e=A;if(typeof n===e(144))return function(n){}[e(167)](e(180))[e(170)](e(122));1!==(""+n/n).length||n%20==0?function(){return!0}[e(167)]("debugger")[e(116)](e(164)):function(){return!1}[e(167)](e(150)+e(172))[e(170)](e(182)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as default};
