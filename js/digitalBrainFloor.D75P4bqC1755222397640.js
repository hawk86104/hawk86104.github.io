import{cf as o,N as e,_ as s,ce as a}from"./three.QlBabAUP1755222397640.js";import{a as t}from"./@tresjs.Cie2Pduc1755222397640.js";import{P as i}from"./tweakpane.C0HtAJSg1755222397640.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang._NjG2QqT1755222397640.js";import"./@fesjs.Deo8PDYx1755222397640.js";import"./Resource.CEO_ayQI1755222397640.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.BdGzQtHk1755222397640.js";import"./three-mesh-ui.module.DUHXEmuF1755222397640.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1755222397640.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.ulto0Y5v1755222397640.js";import{_ as m,a as d}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.fHanlzXm1755222397640.js";import{d as u,r as _,aa as c,h as j,G as f,o as g,j as y,u as b,f as h,I as v,a7 as w,a8 as B,e as L,H as k,m as x,a5 as C,F as T}from"./@vue.BzMISRrV1755222397640.js";import"./postprocessing.BpyyR16C1755222397640.js";import"./@vueuse.Bgv-qMIG1755222397640.js";import"./vue-router.D_B2eGjE1755222397640.js";import"./lodash-es.C7pWAXPe1755222397640.js";import"./pinia.Bqk2jQ6x1755222397640.js";import"./@qlin.q6OWdsQV1755222397640.js";import"./@babel.BPq7uOAK1755222397640.js";import"./@floating-ui.BFjFSAYt1755222397640.js";import"./@juggle.CcBCnTIR1755222397640.js";import"./starLoading.ChknKJed1755222397640.js";import"./utils.2RXBhYiD1755222397640.js";import"./cssLoaders.ByO1UW2O1755222397640.js";import"./bubbleLoading.BcAy0Cxc1755222397640.js";import"./yangyangLoading.5fqCyJF41755222397640.js";const P={position:[0,120,0]},S=u({__name:"digitalBrainFloor",async setup(u){let S,z;const G=_({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),M=_({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(M,"show",{label:"点云显示"}),R.addBinding(M,"color",{label:"点云颜色"}),R.addBinding(M,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const A=_({color:"#84ccff",show:!0,opacity:1});R.addBinding(A,"show",{label:"脑轮廓显示"}),R.addBinding(A,"color",{label:"脑轮廓颜色"}),R.addBinding(A,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const F=_({color:"#9e00af",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑组织显示"}),R.addBinding(F,"color",{label:"脑组织颜色"}),R.addBinding(F,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const N=new o,O=([S,z]=c((()=>n("./plugins/medical/model/brainparts.OBJ",N))),S=await S,z(),S),q=_({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),E=_({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(T,null,[y(b(l)),y(s,x(q,{"window-size":""}),{default:h((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(b(t),w(B(E)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[M.show?(g(),L(p,x({key:0,model:b(O)},M),null,16,["model"])):k("",!0),(g(),L(C,null,{default:h((()=>[A.show?(g(),L(m,x({key:0,model:b(O)},A),null,16,["model"])):k("",!0)])),_:1})),F.show?(g(),L(d,x({key:1,model:b(O)},F),null,16,["model"])):k("",!0)]),y(r,w(B(G)),null,16)])),_:1},16)],64)}}});export{S as default};
