import{a0 as l,a1 as c,ap as p,r as m,o as r,v as t,D as o,a as n,K as _,ab as d,af as f,a9 as u,aa as h,X as e}from"./vendor.dUBjHEtG1712557423713.js";import{_ as v}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.bBtSgy0P1712557423713.js";import"./dither.glsl.y2WXw1t-1712557423713.js";import"./OimoPhysicsBuffer.cRLFY5r71712557423713.js";const T=e("TresPerspectiveCamera",{position:[-15,15,-15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),g=e("TresAmbientLight",{intensity:10},null,-1),C=e("TresMesh",{position:[3,1,0]},[e("TresBoxGeometry",{args:[2,2,2]}),e("TresMeshNormalMaterial",{wireframe:!0})],-1),w=e("TresMesh",{position:[0,2,4]},[e("TresBoxGeometry",{args:[1,1,1]}),e("TresMeshNormalMaterial")],-1),N=l({__name:"reflectorDUDV",setup(x){const a=c({reflectivity:2.6,showGridHelper:!0}),s=new p({title:"镜面参数",expanded:!0});return s.addBinding(a,"reflectivity",{label:"反射率",min:0,max:10,step:.1}),s.addBinding(a,"showGridHelper",{label:"显示网格"}),(B,M)=>{const i=m("TresCanvas");return r(),t(i,{clearColor:"#201919","window-size":""},{default:o(()=>[T,n(_(d),{enableDamping:""}),g,C,w,(r(),t(f,null,{default:o(()=>[n(v,u(h(a)),null,16)]),_:1}))]),_:1})}}});export{N as default};
