import{l as n,_ as t,ab as e,a$ as o,cj as i,C as r,a}from"./three.qSkR4_5R1743066865732.js";import{m as s,e as l,a as u}from"./@tresjs.NxYvETXi1743066865732.js";import{d as c,b as f,a3 as p,a2 as m,o as b,H as g,N as v,aj as y,ak as d,u as h}from"./@vue.L-brCdZe1743066865732.js";const w=P;!function(n,t){const e=P,o=z();for(;;)try{if(974685===parseInt(e(322))/1+-parseInt(e(338))/2*(-parseInt(e(363))/3)+parseInt(e(333))/4+parseInt(e(334))/5+-parseInt(e(325))/6*(parseInt(e(364))/7)+parseInt(e(357))/8*(-parseInt(e(336))/9)+parseInt(e(351))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(373)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["3746125ojIoyf","map","18cNaJzV","offsetY","152sfcARj","value","mergeGeometries","warn","exception","geometry","TresMesh","bind","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor","opacity","prototype","566380DPrVzB","console","chain","verticesNeedUpdate","action","info","5809216MDVmWU","Color","test","trace","debu","glowColor","56142OshHLY","14djHePx","uTime","init","toString","dispose","gger","position","log","push","apply","table","__proto__","TresShaderMaterial","1782570ahBBwJ","traverse","TresMeshRef","5090982QHSGzL","function *\\( *\\)","sin","stateObject","xRayEffect","color","call","length","453144mIfLii"];return(z=function(){return n})()}!function(){_(this,(function(){const n=P,t=new RegExp(n(326)),e=new RegExp(n(347),"i"),o=S(n(366));t[n(359)](o+n(353))&&e[n(359)](o+"input")?S():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(373)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function P(n,t){const e=z();return P=function(n,t){return e[n-=320]},P(n,t)}x(void 0,(function(){const n=P;let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(352)]=t[n(352)]||{},o=[n(371),n(341),n(356),"error",n(342),n(374),n(360)];for(let r=0;r<o[n(332)];r++){const t=x[n(348)][n(350)][n(345)](x),i=o[r],a=e[i]||t;t[n(320)]=x[n(345)](x),t[n(367)]=a.toString[n(345)](a),e[i]=t}}))();const T=c({__name:w(329),props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(r){const a=w;let c,h;const _=r,z=f(),x=[];_.model[a(323)]((t=>{const e=a;t instanceof n&&(t.geometry[e(354)]=!0,x[e(372)](t[e(343)]))}));const P=([c,h]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),c=await c,h(),c),T={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[a(358)])(_.color)},lightningTexture:{type:"t",value:P[a(335)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:_.opacity}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e,blending:o,depthWrite:!1};T.uniforms[a(337)][a(339)]=Math[a(327)](5);const{camera:S}=s(),{onLoop:I}=l();return I((({delta:n})=>{const t=a;S.value[t(370)]&&z[t(339)]&&(T[t(346)][t(365)][t(339)]+=n)})),m((()=>{const n=a;z[n(339)]&&(z[n(339)][n(343)][n(368)](),z[n(339)][n(343)]=i[n(340)](x)),_[n(330)]&&(T[n(346)][n(362)][n(339)]=new(t[n(358)])(_[n(330)])),_[n(349)]&&(T[n(346)].uOpacity.value=_[n(349)])})),(n,t)=>{const e=a;return b(),g(e(344),{ref_key:e(324),ref:z},[t[0]||(t[0]=v("TresBufferGeometry",null,null,-1)),v(e(321),y(d(T)),null,16)],512)}}});function S(n){function t(n){const e=P;if("string"==typeof n)return function(n){}[e(348)]("while (true) {}").apply("counter");1!==(""+n/n)[e(332)]||n%20==0?function(){return!0}[e(348)]("debugger")[e(331)](e(355)):function(){return!1}[e(348)](e(361)+e(369))[e(373)](e(328)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const I=F;!function(n,t){const e=F,o=B();for(;;)try{if(342663===-parseInt(e(212))/1*(parseInt(e(195))/2)+-parseInt(e(248))/3+-parseInt(e(242))/4*(parseInt(e(230))/5)+-parseInt(e(194))/6+parseInt(e(249))/7+parseInt(e(251))/8*(-parseInt(e(239))/9)+parseInt(e(261))/10*(parseInt(e(229))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(205)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=F,t=new RegExp(n(240)),e=new RegExp(n(257),"i"),o=j(n(264));t.test(o+"chain")&&e.test(o+n(252))?j():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(205)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(){const n=["exception","gger","apply","action","while (true) {}","constructor","trace","size","bubblesEffect","31151vVLTTw","error","afective","TresBufferGeometry","setAttribute","TresShaderMaterial","prototype","toString","debu","name","MathUtils","string","bridge","material","array","attributes","warn","737KYXBAk","15uYNxlN","value","bubbles","DoubleSide","Color","Mesh","randInt","info","includes","18zdacOV","function *\\( *\\)","#FFF","628916qVOUxX","color","position","aDelayDuration","ShaderMaterial","uniforms","1120728FbdHrq","1988693qXSkRu","push","1069448RHazJU","input","geometry","Float32BufferAttribute","console","amigdala","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","bind","AdditiveBlending","cerebellum","233780LKMQvn","length","map","init","counter","analitic","uSlowTime","traverse",'{}.constructor("return this")( )',"semantic","314856kVOmTB","22ulwKpw","TresMeshRef","opacity","mergeGeometries","randFloat","return (function() ","brainstem","TresPoints"];return(B=function(){return n})()}function F(n,t){const e=B();return F=function(n,t){return e[n-=191]},F(n,t)}M(void 0,(function(){const n=F,t=function(){const n=F;let t;try{t=Function(n(200)+n(192)+");")()}catch(e){t=window}return t}(),e=t[n(255)]=t[n(255)]||{},o=["log",n(228),n(237),n(213),n(203),"table",n(209)];for(let i=0;i<o[n(262)];i++){const t=M[n(208)][n(218)][n(258)](M),r=o[i],a=e[r]||t;t.__proto__=M[n(258)](M),t[n(219)]=a.toString.bind(a),e[r]=t}}))();const U=c({__name:I(211),props:{model:{},color:{default:I(241)},opacity:{default:1}},setup(n){const e=I,o=n,s=[e(214),e(193),"episodic","process",e(256),e(201),e(224),e(260),e(266)],u={};o.model[e(191)]((n=>{const o=e;n instanceof t[o(235)]&&s[o(263)]((t=>{const e=o;if(n[e(221)][e(238)](t)){if(u[t]){const o=[u[t],n[e(253)]];return u[t]=i[e(198)](o),u}return u[t]=n[e(253)]}return[]}))}));const c=f(),p=new(t[e(246)])({uniforms:{glowColor:{type:"c",value:new(t[e(234)])(o[e(243)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:o.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t[e(259)],side:t[e(233)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{c.value&&(()=>{const n=e,o=[],i=[],r=[],l=[];for(let e=0;e<2e4-3*s[n(262)];e+=1){const c=t[n(222)][n(236)](0,s[n(262)]-1),f=s[c],p=u[f][n(227)][n(244)].array[3*e+0]||0,m=u[f].attributes[n(244)][n(226)][3*e+1]||0,b=u[f].attributes[n(244)][n(226)][3*e+2]||0;if(i[n(250)](p,m,b),o[e]=a[n(199)](10,20),e%100==0){const t=a[n(236)](100,250)+m;l[n(250)](p,t,b,1)}else l[n(250)](p,m,b,0);r[2*e+0]=t[n(222)][n(199)](.5,1.5),r[2*e+1]=2.5}c[n(231)].setAttribute(n(245),new(t[n(254)])(r,2)),c[n(231)].setAttribute(n(232),new(t[n(254)])(l,4)),c[n(231)].setAttribute(n(244),new(t[n(254)])(i,3)),c[n(231)][n(216)]("color",new(t[n(254)])([],3)),c[n(231)][n(216)](n(210),new(t[n(254)])(o,1)),c.value.computeBoundingSphere()})()}));const w=f(),{onLoop:_}=l();return _((({delta:n})=>{const t=e;w[t(231)]&&(w.value[t(225)].uniforms.uTime[t(231)]+=.05,w[t(231)][t(225)][t(247)][t(267)][t(231)]+=1/400),o[t(243)]&&(p[t(247)].glowColor.value=new r(o[t(243)])),o[t(197)]&&(p[t(247)].uOpacity[t(231)]=o.opacity)})),(n,t)=>{const o=e;return b(),g(o(202),{ref_key:o(196),ref:w},[v(o(215),{ref_key:"BufferGeometryRef",ref:c},null,512),v(o(217),y(d(h(p))),null,16)],512)}}});function j(n){function t(n){const e=F;if(typeof n===e(223))return function(n){}[e(208)](e(207))[e(205)](e(265));1!==(""+n/n)[e(262)]||n%20==0?function(){return!0}.constructor(e(220)+e(204)).call(e(206)):function(){return!1}[e(208)](e(220)+e(204))[e(205)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{T as _,U as a};
