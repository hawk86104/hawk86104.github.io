import{ca as o,av as s,ay as a,c9 as e}from"./three.BNH6wr6-1752136696158.js";import{a as i}from"./@tresjs.DLq12syC1752136696158.js";import{P as t}from"./tweakpane.C0HtAJSg1752136696158.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.DPkFNzY_1752136696158.js";import"./index.CwmxOU_M1752136696158.js";import{l}from"./util.DXMeqAJl1752136696158.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.CEtIRnr31752136696158.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.CUz2eLwU1752136696158.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.CadAJkJG1752136696158.js";import{d as u,r as c,a3 as j,h as _,G as f,o as g,j as b,u as h,f as y,I as w,ak as v,al as B,e as k,H as L,m as x,am as C,F as T}from"./@vue.BInVSO3Q1752136696158.js";import"./postprocessing.CPr5BoQh1752136696158.js";import"./@vueuse.BmvRw4vU1752136696158.js";import"./utils.Bm3_mDTK1752136696158.js";import"./@fesjs.CApmwxMx1752136696158.js";import"./vue-router.qYamoiMP1752136696158.js";import"./lodash-es.C7pWAXPe1752136696158.js";import"./@qlin.q6OWdsQV1752136696158.js";import"./pinia.CsLPLp3A1752136696158.js";import"./@babel.BPq7uOAK1752136696158.js";import"./@floating-ui.BFjFSAYt1752136696158.js";import"./@juggle.CcBCnTIR1752136696158.js";import"./index.coH2xK-x1752136696158.js";import"./three-mesh-ui.module.DoqSn93D1752136696158.js";import"./starLoading.DstW1JMx1752136696158.js";import"./cssLoaders.NPelU3HS1752136696158.js";import"./bubbleLoading.DbohumTb1752136696158.js";import"./yangyangLoading.NdbVhRQA1752136696158.js";const S={position:[0,120,0]},z=u({__name:"digitalBrainFloor",async setup(u){let z,G;const M=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),P=c({color:"#fff",show:!0,opacity:1}),F=new t({title:"参数"});F.addBinding(P,"show",{label:"点云显示"}),F.addBinding(P,"color",{label:"点云颜色"}),F.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const O=c({color:"#84ccff",show:!0,opacity:1});F.addBinding(O,"show",{label:"脑轮廓显示"}),F.addBinding(O,"color",{label:"脑轮廓颜色"}),F.addBinding(O,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=c({color:"#9e00af",show:!0,opacity:1});F.addBinding(R,"show",{label:"脑组织显示"}),F.addBinding(R,"color",{label:"脑组织颜色"}),F.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const q=new o,A=([z,G]=j((()=>l("./plugins/medical/model/brainparts.OBJ",q))),z=await z,G(),z),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=_("TresCanvas");return g(),f(T,null,[b(h(d)),b(a,x(E,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),b(h(i),v(B(H)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",S,[P.show?(g(),k(n,x({key:0,model:h(A)},P),null,16,["model"])):L("",!0),(g(),k(C,null,{default:y((()=>[O.show?(g(),k(p,x({key:0,model:h(A)},O),null,16,["model"])):L("",!0)])),_:1})),R.show?(g(),k(m,x({key:1,model:h(A)},R),null,16,["model"])):L("",!0)]),b(r,v(B(M)),null,16)])),_:1},16)],64)}}});export{z as default};
