import{c1 as n,ak as t,am as e,C as o,aX as a,c as r}from"./three.Gi_-4zeu1741857949183.js";import{e as s,I as i,K as c,o as l}from"./@tresjs.8SAr0PX_1741857949183.js";import{d as u,b as d,w as f,e as p,o as m,H as h,j as v,u as g,g as w,N as M,aj as C,ak as b,F as x}from"./@vue.NRI7TcgI1741857949183.js";import"./postprocessing.D5IzAGSN1741857949183.js";import"./@vueuse.PrSwDteH1741857949183.js";const P=I;!function(n,t){const e=I,o=j();for(;;)try{if(215743===-parseInt(e(436))/1*(parseInt(e(460))/2)+parseInt(e(478))/3*(-parseInt(e(435))/4)+-parseInt(e(447))/5+-parseInt(e(445))/6*(parseInt(e(455))/7)+-parseInt(e(452))/8+parseInt(e(465))/9+parseInt(e(437))/10)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const y=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(485)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){y(this,(function(){const n=I,t=new RegExp(n(451)),e=new RegExp(n(468),"i"),o=S(n(492));t.test(o+n(473))&&e[n(440)](o+"input")?S():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(485)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=j();return(I=function(n,t){return e[n-=433]})(n,t)}function j(){const n=["toString","test","uTime","sin","geometry","console","1614246WHCXpj","random","1735040ZIpACv","error","gger","string","function *\\( *\\)","3432488Bhxpxl","constructor","value","7aKBPIQ","return (function() ","aScale","bufferRef","uniforms","1052OAKzrR","TresPoints","cos","radius","count","3480192UEpIwt","randomnessPower","black","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","counter","insideColor","aRandomness","branches","chain","prototype","color","position","material","203223vbiwMY","debu","call","clone","#1b3984","length","trace","apply","outsideColor","#b5f28d","setAttribute","while (true) {}","TresBufferGeometry","a-randomness","init","bind","table","16ZxaCed","251uGBsUx","12771550bJEGIM","lerp"];return(j=function(){return n})()}z(void 0,(function(){const n=I;let t;try{t=Function(n(456)+'{}.constructor("return this")( ));')()}catch(a){t=window}const e=t[n(444)]=t[n(444)]||{},o=["log","warn","info",n(448),"exception",n(434),n(484)];for(let r=0;r<o[n(483)];r++){const t=z[n(453)][n(474)][n(433)](z),a=o[r],s=e[a]||t;t.__proto__=z[n(433)](z),t[n(439)]=s[n(439)].bind(s),e[a]=t}}))();const A=["position","a-scale",P(475),P(491)],_=u({__name:"galaxy",setup(u){const y=P,z={clearColor:y(467),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},j={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:"#b5f28d",outsideColor:y(482)},_=new o(j.insideColor),S=new o(j.outsideColor),T=new Float32Array(3*j[y(464)]),F=new Float32Array(3*j[y(464)]),k=new Float32Array(j.count),R=new Float32Array(3*j[y(464)]);for(let n=0;n<j[y(464)];n++){const t=3*n,e=Math[y(446)]()*j[y(463)],o=n%j[y(472)]*Math.PI*2/j[y(472)];T[t]=Math[y(462)](o)*e,T[t+1]=0,T[t+2]=Math[y(442)](o)*e;const a=Math[y(446)]()**j[y(466)]*(Math[y(446)]()<.5?-1:1),r=Math[y(446)]()**j[y(466)]*(Math[y(446)]()<.5?-1:1),s=Math[y(446)]()**j[y(466)]*(Math[y(446)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=_[y(481)]();i[y(438)](S,e/j.radius),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,k[n]=Math[y(446)]()}const E={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:j.size}}};const O=d(null),{onLoop:B}=s();B((({elapsed:n})=>{const t=y;O[t(454)]&&(O[t(454)][t(477)][t(459)][t(441)][t(454)]=n)}));const{count:Z,size:G,radius:K,branches:H,spin:U,randomness:W,randomnessPower:X,insideColor:$,outsideColor:J}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:y(487),outsideColor:y(482)});return f([Z[y(454)],G[y(454)],K[y(454)],H.value,U[y(454)],W[y(454)],X[y(454)],$.value,J[y(454)]],(n=>{n.forEach(((n,t)=>{const e=I;j[Object.keys(j)[t]]=n[e(454)]})),function(){const n=y;if(O[n(454)]){const t=new o(j[n(470)]),e=new o(j[n(486)]),a=new Float32Array(3*j[n(464)]),s=new Float32Array(3*j[n(464)]),i=new Float32Array(j[n(464)]),c=new Float32Array(3*j[n(464)]);for(let o=0;o<j[n(464)];o++){const r=3*o,l=Math[n(446)]()*j[n(463)],u=o%j[n(472)]*Math.PI*2/j[n(472)];a[r]=Math.cos(u)*l,a[r+1]=0,a[r+2]=Math.sin(u)*l;const d=Math[n(446)]()**j[n(466)]*(Math.random()<.5?-1:1),f=Math[n(446)]()**j[n(466)]*(Math[n(446)]()<.5?-1:1),p=Math.random()**j[n(466)]*(Math[n(446)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=p;const m=t[n(481)]();m[n(438)](e,l/j[n(463)]),s[r+0]=m.r,s[r+1]=m.g,s[r+2]=m.b,i[o]=Math.random()}O.value[n(443)][n(488)](n(476),new r(a,3)),O[n(454)][n(443)][n(488)](n(471),new r(c,3)),O[n(454)][n(443)].setAttribute(n(475),new r(s,3)),O.value.geometry.setAttribute(n(457),new r(i,1))}}()})),(n,t)=>{const e=y,o=p("TresCanvas");return m(),h(x,null,[v(g(c)),v(o,C(b(z)),{default:w((()=>[t[0]||(t[0]=M("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),M(e(461),{ref_key:e(458),ref:O},[M(e(490),{position:[g(T),3],"a-scale":[g(k),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,A),M("TresShaderMaterial",C(b(E)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function S(n){function t(n){const e=I;if(typeof n===e(450))return function(n){}[e(453)](e(489))[e(485)](e(469));1!==(""+n/n)[e(483)]||n%20==0?function(){return!0}[e(453)](e(479)+e(449))[e(480)]("action"):function(){return!1}[e(453)](e(479)+"gger")[e(485)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_ as default};
