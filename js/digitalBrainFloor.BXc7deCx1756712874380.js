import{cf as o,N as e,_ as s,ce as a}from"./three.QlBabAUP1756712874380.js";import{a as t}from"./@tresjs.CsRUmnoW1756712874380.js";import{P as i}from"./tweakpane.C0HtAJSg1756712874380.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.C5Pu4XRo1756712874380.js";import"./@fesjs.LRiLk74K1756712874380.js";import"./Resource.Czzehl3E1756712874380.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.B00tNoL61756712874380.js";import"./three-mesh-ui.module.dFyLSTAb1756712874380.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1756712874380.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.DygRGMJr1756712874380.js";import{_ as d,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BsDBp42Z1756712874380.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as x,H as L,m as C,a5 as T,F as k}from"./@vue.BzMISRrV1756712874380.js";import"./postprocessing.COeOixE51756712874380.js";import"./@vueuse.BerxTw9o1756712874380.js";import"./vue-router.ctM6eFuG1756712874380.js";import"./lodash-es.C7pWAXPe1756712874380.js";import"./pinia.DGIW4iZl1756712874380.js";import"./@qlin.q6OWdsQV1756712874380.js";import"./@babel.BPq7uOAK1756712874380.js";import"./@floating-ui.BFjFSAYt1756712874380.js";import"./@juggle.CcBCnTIR1756712874380.js";import"./starLoading.D4_zvuV61756712874380.js";import"./utils.DiP8ung71756712874380.js";import"./cssLoaders.DNFKCFxj1756712874380.js";import"./bubbleLoading.96Cr-qJ51756712874380.js";import"./yangyangLoading.DZLeFPa31756712874380.js";const S={position:[0,120,0]},P=u({__name:"digitalBrainFloor",async setup(u){let P,z;const G=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),M=c({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(M,"show",{label:"点云显示"}),R.addBinding(M,"color",{label:"点云颜色"}),R.addBinding(M,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const q=c({color:"#84ccff",show:!0,opacity:1});R.addBinding(q,"show",{label:"脑轮廓显示"}),R.addBinding(q,"color",{label:"脑轮廓颜色"}),R.addBinding(q,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const F=c({color:"#9e00af",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑组织显示"}),R.addBinding(F,"color",{label:"脑组织颜色"}),R.addBinding(F,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const A=new o,D=([P,z]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",A))),P=await P,z(),P),E=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),H=c({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(k,null,[y(h(l)),y(s,C(E,{"window-size":""}),{default:b((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(H)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",S,[M.show?(g(),x(p,C({key:0,model:h(D)},M),null,16,["model"])):L("",!0),(g(),x(T,null,{default:b((()=>[q.show?(g(),x(d,C({key:0,model:h(D)},q),null,16,["model"])):L("",!0)])),_:1})),F.show?(g(),x(m,C({key:1,model:h(D)},F),null,16,["model"])):L("",!0)]),y(r,w(B(G)),null,16)])),_:1},16)],64)}}});export{P as default};
