import{e,a as o}from"./@tresjs.PrijCSbN1757990346019.js";import{bQ as i}from"./three.DHXbQd-f1757990346019.js";import{d as n,r as a,h as t,e as s,o as r,f as l,I as u,j as m,u as d,a7 as c,a8 as p,m as f}from"./@vue.pEDXJ_3Z1757990346019.js";import"./postprocessing.BxUQ5pTE1757990346019.js";import"./@vueuse.D19fGRfI1757990346019.js";const v={position:[-2,-2,-2]},h=["position","a-scale"],P=3e3,T=n({__name:"shaderParticles",setup(n){const T=a({clearColor:"black",shadows:!0,alpha:!1}),g={transparent:!0,blending:i,depthWrite:!1,vertexShader:"\n  uniform float uPixelRatio;\n  uniform float uSize;\n  uniform float uTime;\n  attribute float aScale;\n\n  void main()\n  {\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n      modelPosition.y += sin(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n      vec4 viewPosition = viewMatrix * modelPosition;\n      vec4 projectionPosition = projectionMatrix * viewPosition;\n\n      gl_Position = projectionPosition;\n      gl_PointSize = aScale * uSize * uPixelRatio;\n      gl_PointSize *= (1.0 / - viewPosition.z);\n  }\n  ",fragmentShader:"\n  void main()\n    {\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n      float strength = 0.05 / distanceToCenter - 0.1;\n\n      gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n    }\n  ",uniforms:{uSize:{value:100},uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uTime:{value:0}}},w=new Float32Array(9e3),S=new Float32Array(P);for(let e=0;e<P;e++)w[3*e+0]=4*Math.random(),w[3*e+1]=4*Math.random(),w[3*e+2]=4*Math.random(),S[e]=Math.random();const{onLoop:j}=e();return j((({elapsed:e})=>{g.uniforms.uTime.value=e})),(e,i)=>{const n=t("TresCanvas");return r(),s(n,f(T,{"window-size":""}),{default:l((()=>[i[0]||(i[0]=u("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:.1,far:1e3,"look-at":[-8,3,-3]},null,-1)),m(d(o)),i[1]||(i[1]=u("TresAmbientLight",{intensity:.5},null,-1)),u("TresPoints",v,[u("TresBufferGeometry",{position:[d(w),3],"a-scale":[d(S),1]},null,8,h),u("TresShaderMaterial",c(p(g)),null,16)]),i[2]||(i[2]=u("TresDirectionalLight",{position:[0,2,4],intensity:1,"cast-shadow":""},null,-1)),i[3]||(i[3]=u("TresGridHelper",null,null,-1))])),_:1},16)}}});export{T as default};
