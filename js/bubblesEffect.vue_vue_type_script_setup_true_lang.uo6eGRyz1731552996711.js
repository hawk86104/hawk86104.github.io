import{_ as n,a0 as t,bW as e,cr as o,C as i,h as r,ab as a}from"./three.KG0QRRig1731552996711.js";import{m as s,e as l,b as u}from"./@tresjs.01P8tiuF1731552996711.js";import{d as c,b as f,a6 as p,a3 as m,o as b,D as v,J as g,aj as y,ak as d,u as h}from"./@vue.-THQH3GC1731552996711.js";const w=T;function _(){const n=["init","2065580HyXotK","TresMeshRef","dispose","verticesNeedUpdate","table","return (function() ","position","xRayEffect","counter","bind","__proto__","color","debu","geometry","#84ccff","action","46XNDdTr","constructor","error","warn","uniforms","304318ZdRnNM","TresShaderMaterial","2256xXtfme","AdditiveBlending","string","call","length","offsetY","log","while (true) {}","uOpacity","2429847dbYQJm","test","544305iYiBPQ","gger","toString","opacity","map","10768OYkUNz","TresBufferGeometry","27005OuGVvo","4FTjFhh","8XvweeV","glowColor","value","traverse","Color","console","mergeGeometries","Mesh","push","apply","stateObject","input","function *\\( *\\)","5ImJjyQ","chain","1305438DbmkyJ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)"];return(_=function(){return n})()}!function(n,t){const e=T,o=_();for(;;)try{if(239999===-parseInt(e(319))/1*(-parseInt(e(342))/2)+-parseInt(e(337))/3*(-parseInt(e(345))/4)+parseInt(e(359))/5*(-parseInt(e(300))/6)+parseInt(e(324))/7+parseInt(e(346))/8*(-parseInt(e(335))/9)+-parseInt(e(303))/10+-parseInt(e(344))/11*(-parseInt(e(326))/12))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(355)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=T,t=new RegExp(n(358)),e=new RegExp(n(301),"i"),o=S(n(302));t[n(336)](o+n(360))&&e[n(336)](o+n(357))?S():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[T(355)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function T(n,t){const e=_();return(T=function(n,t){return e[n-=300]})(n,t)}z(void 0,(function(){const n=T,t=function(){const n=T;let t;try{t=Function(n(308)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t[n(351)]=t.console||{},o=[n(332),n(322),"info",n(321),"exception",n(307),"trace"];for(let i=0;i<o.length;i++){const t=z[n(320)].prototype.bind(z),r=o[i],a=e[r]||t;t[n(313)]=z[n(312)](z),t[n(339)]=a[n(339)][n(312)](a),e[r]=t}}))();const P=c({__name:w(310),props:{model:{},color:{default:w(317)},opacity:{default:1}},async setup(o){const i=w;let r,a;const c=o,h=f(),_=[];c.model[i(349)]((t=>{const e=i;t instanceof n[e(353)]&&(t[e(316)][e(306)]=!0,_[e(354)](t.geometry))}));const x=([r,a]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),r=await r,a(),r),z={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(n[i(350)])(c.color)},lightningTexture:{type:"t",value:x[i(341)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:c[i(340)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:t,blending:n[i(327)],depthWrite:!1};z[i(323)][i(331)][i(348)]=Math.sin(5);const{camera:T}=s(),{onLoop:P}=l();return P((({delta:n})=>{const t=i;T[t(348)][t(309)]&&h[t(348)]&&(z[t(323)].uTime[t(348)]+=n)})),m((()=>{const t=i;h.value&&(h[t(348)][t(316)][t(305)](),h[t(348)][t(316)]=e[t(352)](_)),c[t(314)]&&(z[t(323)][t(347)][t(348)]=new(n[t(350)])(c.color)),c[t(340)]&&(z[t(323)][t(334)][t(348)]=c[t(340)])})),(n,t)=>{const e=i;return b(),v("TresMesh",{ref_key:e(304),ref:h},[t[0]||(t[0]=g(e(343),null,null,-1)),g(e(325),y(d(z)),null,16)],512)}}});function S(n){function t(n){const e=T;if(typeof n===e(328))return function(n){}[e(320)](e(333))[e(355)](e(311));1!==(""+n/n)[e(330)]||n%20==0?function(){return!0}[e(320)](e(315)+e(338))[e(329)](e(318)):function(){return!1}.constructor(e(315)+e(338))[e(355)](e(356)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const I=F;!function(n,t){const e=F,o=B();for(;;)try{if(868109===parseInt(e(255))/1*(-parseInt(e(319))/2)+-parseInt(e(249))/3*(-parseInt(e(262))/4)+-parseInt(e(264))/5+parseInt(e(261))/6*(-parseInt(e(289))/7)+parseInt(e(254))/8+parseInt(e(266))/9+-parseInt(e(294))/10*(-parseInt(e(297))/11))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(280)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){C(this,(function(){const n=F,t=new RegExp(n(257)),e=new RegExp(n(269),"i"),o=j(n(279));t[n(287)](o+n(268))&&e.test(o+n(253))?j():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[F(280)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(){const n=["debu","info","input","3750632FBiKyp","47239bUvSyZ","BufferGeometryRef","function *\\( *\\)","DoubleSide","Mesh","bridge","18rJcqdY","80312KpoTby","stateObject","119445jRvYbV","computeBoundingSphere","2081574JBacvW","gger","chain","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","color","value","uniforms","bubblesEffect","AdditiveBlending","#FFF","string","push","TresPoints","init","apply","name","console","uOpacity","randFloat","randInt","episodic","test","MathUtils","2874319VtTYpt","map","warn","traverse","exception","2020vDiTZc","log","ShaderMaterial","33407xnmHYv","TresBufferGeometry","bind","opacity","error","aDelayDuration","Float32BufferAttribute","material","analitic","table","prototype","length","uTime","array","__proto__","position","call","afective","geometry","setAttribute","model","attributes","32ABNPxh","uSlowTime","bubbles","counter","size","constructor","234BTkAuE","trace"];return(B=function(){return n})()}function F(n,t){const e=B();return(F=function(n,t){return e[n-=247]})(n,t)}M(void 0,(function(){const n=F;let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(i){t=window}const e=t[n(282)]=t.console||{},o=[n(295),n(291),n(252),n(301),n(293),n(306),n(250)];for(let r=0;r<o[n(308)];r++){const t=M[n(248)][n(307)][n(299)](M),i=o[r],a=e[i]||t;t[n(311)]=M[n(299)](M),t.toString=a.toString[n(299)](a),e[i]=t}}))();const U=c({__name:I(273),props:{model:{},color:{default:I(275)},opacity:{default:1}},setup(t){const e=I,s=t,u=[e(314),"semantic",e(286),"process","amigdala","brainstem",e(260),"cerebellum",e(305)],c={};s[e(317)][e(292)]((t=>{const i=e;t instanceof n[i(259)]&&u[i(290)]((n=>{const e=i;if(t[e(281)].includes(n)){if(c[n]){const i=[c[n],t[e(315)]];return c[n]=o(i),c}return c[n]=t[e(315)]}return[]}))}));const p=f(),w=new(n[e(296)])({uniforms:{glowColor:{type:"c",value:new i(s[e(270)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s.opacity}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:n[e(274)],side:n[e(258)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{p.value&&(()=>{const t=e,o=[],i=[],s=[],l=[];for(let e=0;e<2e4-3*u[t(308)];e+=1){const a=n[t(288)][t(285)](0,u[t(308)]-1),f=u[a],p=c[f].attributes[t(312)][t(310)][3*e+0]||0,m=c[f].attributes[t(312)].array[3*e+1]||0,b=c[f][t(318)][t(312)][t(310)][3*e+2]||0;if(i[t(277)](p,m,b),o[e]=n[t(288)].randFloat(10,20),e%100==0){const e=n[t(288)][t(285)](100,250)+m;l[t(277)](p,e,b,1)}else l[t(277)](p,m,b,0);s[2*e+0]=r[t(284)](.5,1.5),s[2*e+1]=2.5}p.value[t(316)](t(302),new(n[t(303)])(s,2)),p[t(271)][t(316)](t(321),new(n[t(303)])(l,4)),p.value[t(316)](t(312),new(n[t(303)])(i,3)),p.value[t(316)](t(270),new a([],3)),p.value.setAttribute(t(247),new(n[t(303)])(o,1)),p[t(271)][t(265)]()})()}));const _=f(),{onLoop:x}=l();return x((({delta:n})=>{const t=e;_[t(271)]&&(_[t(271)].material.uniforms[t(309)][t(271)]+=.05,_.value[t(304)][t(272)][t(320)][t(271)]+=1/400),s[t(270)]&&(w.uniforms.glowColor[t(271)]=new i(s[t(270)])),s[t(300)]&&(w[t(272)][t(283)].value=s[t(300)])})),(n,t)=>{const o=e;return b(),v(o(278),{ref_key:"TresMeshRef",ref:_},[g(o(298),{ref_key:o(256),ref:p},null,512),g("TresShaderMaterial",y(d(h(w))),null,16)],512)}}});function j(n){function t(n){const e=F;if(typeof n===e(276))return function(n){}[e(248)]("while (true) {}")[e(280)](e(322));1!==(""+n/n)[e(308)]||n%20==0?function(){return!0}.constructor(e(251)+e(267))[e(313)]("action"):function(){return!1}[e(248)]("debu"+e(267))[e(280)](e(263)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{P as _,U as a};
