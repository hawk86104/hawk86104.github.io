import{m as a}from"./@tresjs.zc7faK4J1743660816268.js";import{d as e,P as t}from"./@pmndrs.z8R6f5wQ1743660816268.js";import{d as o,b as s,w as i,a2 as r,o as n,H as l,N as d,aj as h,ak as p}from"./@vue.B5PFBfKs1743660816268.js";import{b as m,f as c,b9 as u,a as f}from"./three.2wx8FU0g1743660816268.js";const w=["rotate-x"],b=o({__name:"accumulativeShadowsCom",props:{opacity:{default:.8},alphaTest:{default:.9},color:{default:"#000000"},blend:{default:2},lightPosition:{default:{x:3,y:5,z:3}},frames:{default:60},blendWindow:{default:100},ambient:{default:.5}},setup(o){const b=o;let g=s();const{extend:M,scene:v,renderer:z,camera:S}=a();M({SoftShadowMaterial:e});const y={position:(new m).set(b.lightPosition.x,b.lightPosition.y,b.lightPosition.z),radius:1,amount:8,intensity:Math.PI,bias:.001,mapSize:1024,size:8,near:.5,far:200},P=new t(z.value,v.value,y.mapSize),x={map:P.progressiveLightMap2.texture,transparent:!0,depthWrite:!1,toneMapped:!0,blend:b.blend,alphaTest:b.alphaTest,opacity:b.opacity,color:b.color},T=new c;for(let a=0;a<y.amount;a++){const a=new u(16777215,y.intensity/y.amount);a.castShadow=!0,a.shadow.bias=y.bias,a.shadow.camera.near=y.near,a.shadow.camera.far=y.far,a.shadow.camera.right=y.size/2,a.shadow.camera.left=-y.size/2,a.shadow.camera.top=y.size/2,a.shadow.camera.bottom=-y.size/2,a.shadow.mapSize.width=y.mapSize,a.shadow.mapSize.height=y.mapSize,T.add(a)}const j=()=>{const a=y.position.length();for(let e=0;e<T.children.length;e++){const t=T.children[e];if(Math.random()>b.ambient)t.position.set(y.position.x+f.randFloatSpread(y.radius),y.position.y+f.randFloatSpread(y.radius),y.position.z+f.randFloatSpread(y.radius));else{let e=Math.acos(2*Math.random()-1)-Math.PI/2,o=2*Math.PI*Math.random();t.position.set(Math.cos(e)*Math.cos(o)*a,Math.abs(Math.cos(e)*Math.sin(o)*a),Math.sin(e)*a)}}},I=(a=1)=>{v.value.add(T),P.prepare();for(let e=0;e<a;e++)j(),P.update(S.value,b.blendWindow),console.log("shadows plm update",e);v.value.remove(T),P.finish()};i((()=>g.value),(a=>{a&&(P.configure(a),P.clear(),console.log("shadows render start"),I(b.frames),console.log("shadows render end"))}));const W=()=>{P.clear(),I(b.frames)};return r((()=>{g.value&&(b.opacity&&(g.value.material.opacity=b.opacity),b.alphaTest&&(g.value.material.alphaTest=b.alphaTest),b.color&&g.value.material.color.set(b.color),b.blend&&(g.value.material.blend=b.blend))})),i((()=>b.lightPosition),(a=>{a&&(console.log(b.lightPosition),y.position.set(a.x,a.y,a.z),W())}),{deep:!0}),i((()=>[b.frames,b.blendWindow,b.ambient]),(()=>{W()})),(a,e)=>(n(),l("TresMesh",{"receive-shadow":"",ref_key:"gPlane",ref:g,scale:10,"rotate-x":-Math.PI/2},[e[0]||(e[0]=d("TresPlaneGeometry",{args:[1,1]},null,-1)),d("TresSoftShadowMaterial",h(p(x)),null,16)],8,w))}});export{b as _};
