import{a5 as t,s as n,C as e,Z as o,aj as r,K as a,ab as i}from"./three.HEgnMaTu1721048663624.js";import{r as s,N as c,d as l,P as u}from"./@tresjs.Xiq_TH801721048663624.js";import"./index.yngD-88n1721048663624.js";import{a as f}from"./simplex-noise.MycypUyu1721048663624.js";import{C as p}from"./index.3f2gHe7y1721048663624.js";import{d as h,a3 as m,o as v,D as d,J as g,u as x,r as w,f as y,g as b,j as _,aj as j,ak as M,al as I}from"./@vue.ApkyOKE71721048663624.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.f9SbESLP1721048663624.js";import"./@vueuse.2IVIyoVR1721048663624.js";import"./tweakpane.yHWGBmom1721048663624.js";import"./lamina.1ZlYvTtP1721048663624.js";import"./glsl-tokenizer.bhImRDDx1721048663624.js";import"./@amap.IXBtourJ1721048663624.js";import"./glsl-token-descope.WfEHT2hN1721048663624.js";import"./glsl-token-depth.4V8cT9KG1721048663624.js";import"./glsl-token-scope.sTNxd1EP1721048663624.js";import"./glsl-token-properties.ptivZu601721048663624.js";import"./glsl-token-assignments.sSCXB6TD1721048663624.js";import"./glsl-token-string.fSxiDrag1721048663624.js";import"./glsl-token-functions.tTTlKCMK1721048663624.js";import"./object-hash.E5Z0NA4F1721048663624.js";import"./jszip.PK6xEuxJ1721048663624.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.Gt5gFBQs1721048663624.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.9zmuEPj51721048663624.js";import"./three-stdlib.Bcxn6yVp1721048663624.js";import"./@pmndrs.jxJ3fman1721048663624.js";import"./utils.xk6C9kS21721048663624.js";const A=k;!function(t,n){const e=k,o=E();for(;;)try{if(615061===parseInt(e(215))/1+-parseInt(e(201))/2*(parseInt(e(164))/3)+-parseInt(e(200))/4*(parseInt(e(207))/5)+-parseInt(e(204))/6+-parseInt(e(153))/7*(-parseInt(e(208))/8)+parseInt(e(169))/9*(parseInt(e(194))/10)+-parseInt(e(175))/11*(-parseInt(e(137))/12))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const C=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(162)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){C(this,(function(){const t=k,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(179),"i"),o=T("init");n.test(o+t(155))&&e.test(o+"input")?T():o("0")}))()}();const S=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[k(162)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function k(t,n){const e=E();return(k=function(t,n){return e[t-=137]})(t,n)}S(void 0,(function(){const t=k,n=function(){const t=k;let n;try{n=Function(t(209)+t(150)+");")()}catch(e){n=window}return n}(),e=n[t(216)]=n[t(216)]||{},o=["log",t(173),t(188),"error",t(156),t(148),t(146)];for(let r=0;r<o[t(149)];r++){const n=S[t(143)][t(213)].bind(S),a=o[r],i=e[a]||n;n[t(184)]=S[t(171)](S),n.toString=i.toString[t(171)](i),e[a]=n}}))();const D=[A(168)],R=["index",A(140),"attributes-uv",A(185),A(139),A(212),"attributes-halfRootAngleSin",A(198)],F=["geometry"],O=[A(192)];function E(){const t=["computeVertexNormals","translate","side","DoubleSide","10jLDHFB","InstancedBufferAttribute","random","gger","attributes-halfRootAngleCos","grass","36OGSVYT","150iVgJDH","sin","instances","7040028oKsYRp","Vector3","width","662430GslCBw","16nhxHpR","return (function() ","normalize","cos","attributes-stretch","prototype","time","988510SNVAEK","console","11289624xSbeUO","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","attributes-orientation","attributes-position","halfRootAngleSinF32","counter","constructor","TresGroup","Vector4","trace","array","table","length",'{}.constructor("return this")( )',"   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","push","3809540EmMxbt","action","chain","exception","attributes","stateObject","uniforms","map","halfRootAngleCosF32","apply","toneMapped","16374QwDWbT","set","Color","orientationsF32","material","3351339auQWeE","needsUpdate","bind","PlaneGeometry","warn","TresInstancedBufferGeometry","11OHypSW","TresMesh","index","alphaMap","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMeshStandardMaterial","joints","call","convertSRGBToLinear","__proto__","attributes-offset","position","while (true) {}","info","lookAt"];return(E=function(){return t})()}const H=h({__name:A(199),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(i){const l=A;let u,h;const w=([u,h]=m((()=>c({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),u=await u,h(),u),y=i,b=f(Math[l(196)]);function _(n,e){const o=l,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,i=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,s=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(145)])(r,a,i,s)}function j(t,n){var e=2*b(t/50,n/50);return e+=4*b(t/100,n/100),e+=.2*b(t/10,n/10)}const M=function(n,e){const o=l,i=[],s=[],c=[],u=[],f=[];let p=new r,h=new(t[o(145)]);const m=-.25;for(let r=0;r<n;r++){const a=Math[o(196)]()*e-e/2,l=Math[o(196)]()*e-e/2,v=j(a,l);i[o(152)](a,v,l);let d=Math.PI-Math[o(196)]()*(2*Math.PI);u[o(152)](Math.sin(.5*d)),f.push(Math[o(211)](.5*d));let g=new(t[o(205)])(0,1,0),x=g.x*Math[o(202)](d/2),w=g.y*Math[o(202)](d/2),y=g.z*Math[o(202)](d/2),b=Math[o(211)](d/2);p.set(x,w,y,b)[o(210)](),d=.5*Math[o(196)]()+m,g=new(t[o(205)])(1,0,0),x=g.x*Math.sin(d/2),w=g.y*Math[o(202)](d/2),y=g.z*Math.sin(d/2),b=Math[o(211)](d/2),h[o(165)](x,w,y,b)[o(210)](),p=_(p,h),d=.5*Math[o(196)]()+m,g=new(t[o(205)])(0,0,1),x=g.x*Math[o(202)](d/2),w=g.y*Math[o(202)](d/2),y=g.z*Math[o(202)](d/2),b=Math[o(211)](d/2),h[o(165)](x,w,y,b)[o(210)](),p=_(p,h),s[o(152)](p.x,p.y,p.z,p.w),r<n/3?c[o(152)](1.8*Math[o(196)]()):c[o(152)](Math[o(196)]())}return{offsetsF32:new a(new Float32Array(i),3),orientationsF32:new a(new Float32Array(s),4),stretchesF32:new(t[o(195)])(new Float32Array(c),1),halfRootAngleCosF32:new(t[o(195)])(new Float32Array(f),1),halfRootAngleSinF32:new(t[o(195)])(new Float32Array(u),1)}}(y[l(203)],y[l(206)]),I=new(t[l(172)])(y.bW,y.bH,1,y[l(181)])[l(191)](0,y.bH/2,0),z=new n(y.width,y[l(206)],32,32);z[l(189)](new(t[l(205)])(0,1,0));const C=z[l(157)].position;for(let t=0;t<C[l(147)][l(149)];t+=3)C[l(147)][t+1]=j(C[l(147)][t],C[l(147)][t+2]);z[l(157)][l(186)][l(170)]=!0,z[l(190)]();const S=new(p({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new e(.3,.9,0)[l(183)](),bottomColor:new(t[l(166)])(0,.2,0)[l(183)]()},l(151),l(138),(n=>{const e=l;n[e(192)]=t[e(193)]})));S[l(160)]=w.map,S[l(178)]=w[l(178)],S[l(163)]=!1;const{onLoop:k}=s();return k((({elapsed:t})=>{const n=l;S[n(159)][n(214)].value=t/4})),(t,n)=>{const e=l;return v(),d(e(144),null,[g(e(176),{material:x(S)},[g(e(174),{index:x(I)[e(177)],"attributes-position":x(I)[e(157)].position,"attributes-uv":x(I)[e(157)].uv,"attributes-offset":x(M).offsetsF32,"attributes-orientation":x(M)[e(167)],"attributes-stretch":x(M).stretchesF32,"attributes-halfRootAngleSin":x(M)[e(141)],"attributes-halfRootAngleCos":x(M)[e(161)]},null,8,R)],8,D),g(e(176),{position:[0,0,0],geometry:x(z)},[g(e(180),{color:"#000f00",side:o},null,8,O)],8,F)])}}});function T(t){function n(t){const e=k;if("string"==typeof t)return function(t){}[e(143)](e(187))[e(162)](e(142));1!==(""+t/t)[e(149)]||t%20==0?function(){return!0}[e(143)]("debu"+e(197))[e(182)](e(154)):function(){return!1}[e(143)]("debu"+e(197))[e(162)](e(158)),n(++t)}try{if(t)return n;n(0)}catch(e){}}const P=L;function B(){const t=["constructor","length","counter","return (function() ",'{}.constructor("return this")( )',"2594nyNnFC","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","207okaHeY","138140AiRxnQ","console","10ljEOaK","grass","exception","error","debu","apply","7998348npJqou","prototype","while (true) {}","5485962mvquZh","32104niSqIv","warn","gger","__proto__","7OCMrKS","chain","bind","toString","1864404CfCDXP","table","15246869CIftwU","function *\\( *\\)","action","stateObject","log","init","40tyYgwx","1307WfrOdH","input"];return(B=function(){return t})()}function L(t,n){const e=B();return(L=function(t,n){return e[t-=174]})(t,n)}!function(t,n){const e=L,o=B();for(;;)try{if(899909===parseInt(e(191))/1*(parseInt(e(198))/2)+-parseInt(e(182))/3+-parseInt(e(190))/4*(parseInt(e(201))/5)+-parseInt(e(212))/6*(-parseInt(e(178))/7)+parseInt(e(174))/8*(-parseInt(e(200))/9)+parseInt(e(203))/10*(-parseInt(e(184))/11)+parseInt(e(209))/12)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const q=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){q(this,(function(){const t=L,n=new RegExp(t(185)),e=new RegExp(t(199),"i"),o=V(t(189));n.test(o+t(179))&&e.test(o+t(192))?V():o("0")}))()}();const U=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[L(208)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();U(void 0,(function(){const t=L,n=function(){const t=L;let n;try{n=Function(t(196)+t(197)+");")()}catch(e){n=window}return n}(),e=n[t(202)]=n.console||{},o=[t(188),t(175),"info",t(206),t(205),t(183),"trace"];for(let r=0;r<o[t(194)];r++){const n=U[t(193)][t(210)][t(180)](U),a=o[r],i=e[a]||n;n[t(177)]=U[t(180)](U),n[t(181)]=i[t(181)][t(180)](i),e[a]=n}}))();const G=g("TresPerspectiveCamera",{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1),N=h({__name:P(204),setup(t){const n=w({alpha:!0,toneMapping:i,windowSize:!0,clearColor:6710886}),e=w({enableDamping:!0,autoRotate:!1});return(t,o)=>(v(),y(x(u),j(M(n)),{default:b((()=>[G,_(x(l),j(M(e)),null,16),(v(),y(I,null,{default:b((()=>[_(H)])),_:1})),(v(),y(I,null,{default:b((()=>[_(x(z),{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})])),_:1}))])),_:1},16))}});function V(t){function n(t){const e=L;if("string"==typeof t)return function(t){}[e(193)](e(211))[e(208)](e(195));1!==(""+t/t)[e(194)]||t%20==0?function(){return!0}[e(193)](e(207)+"gger").call(e(186)):function(){return!1}[e(193)](e(207)+e(176))[e(208)](e(187)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{N as default};
