import{_ as t,C as n,a0 as e,as as o,ai as r}from"./three.bXjbKLxC1731379053498.js";import{e as a,b as i,U as s,c}from"./@tresjs.bLKO3xyw1731379053498.js";import"./index.1UjolhJf1731379053498.js";import{a as l}from"./simplex-noise.Yx8GBgKo1731379053498.js";import{C as u}from"./index.Xkk8JFHs1731379053498.js";import{d as f,a6 as p,o as h,D as m,J as v,u as d,r as g,f as x,g as y,j as w,aj as b,ak as _,al as M}from"./@vue.-THQH3GC1731379053498.js";import{_ as z}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang._L57yx0e1731379053498.js";import"./@vueuse.DWZrQ1Sl1731379053498.js";import"./lamina.D0P7S8V91731379053498.js";import"./glsl-tokenizer.CV5WAAIL1731379053498.js";import"./@amap.mFH-iVTk1731379053498.js";import"./glsl-token-descope.TP7ExkRg1731379053498.js";import"./glsl-token-depth.jYcXS-Aq1731379053498.js";import"./glsl-token-scope.6lr34xTi1731379053498.js";import"./glsl-token-properties.McDyG7gG1731379053498.js";import"./glsl-token-assignments.t2_MyZc01731379053498.js";import"./glsl-token-string.p3vPet871731379053498.js";import"./glsl-token-functions.700LN4ld1731379053498.js";import"./object-hash.ODhiDasX1731379053498.js";import"./jszip.Gy4zFode1731379053498.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.pJCpwrKR1731379053498.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.yDMVUe831731379053498.js";import"./three-stdlib.yR_asc1t1731379053498.js";import"./@pmndrs.WRC-eauj1731379053498.js";import"./utils.XokLgxnh1731379053498.js";const j=D;!function(t,n){const e=D,o=C();for(;;)try{if(671098===parseInt(e(478))/1*(-parseInt(e(490))/2)+parseInt(e(538))/3+parseInt(e(527))/4+-parseInt(e(467))/5*(parseInt(e(542))/6)+-parseInt(e(524))/7*(-parseInt(e(494))/8)+parseInt(e(502))/9*(-parseInt(e(471))/10)+parseInt(e(492))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){A(this,(function(){const t=D,n=new RegExp("function *\\( *\\)"),e=new RegExp(t(536),"i"),o=H(t(470));n[t(530)](o+t(500))&&e.test(o+"input")?H():o("0")}))()}();const I=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[D(486)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function C(){const t=["Vector3","test","trace","time","map","gger","TresGroup","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","41277ahcrTe","return (function() ","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","prototype","258KQHHKV","toString","attributes-uv","table","142615NpmVGu","call","computeVertexNormals","init","10BpreOV","convertSRGBToLinear","PlaneGeometry","toneMapped","#000f00","bind","index","1Hrrwrz","warn","TresMeshStandardMaterial","material","attributes-halfRootAngleSin","string","joints","normalize","apply","geometry","__proto__","console","599674dEOFbk","attributes-stretch","28062727pzpuJr","attributes","232AKhuqV","log","error","random","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","counter","chain","push","9350712wtCcMY","InstancedBufferAttribute","Color","cos","orientationsF32","grass","uniforms","DoubleSide","value","halfRootAngleCosF32","debu","halfRootAngleSinF32","attributes-position","set","TresMesh","attributes-orientation","position","while (true) {}","sin","action","array","info","30205zYHXTN","width","exception","2185364EfKwzy","constructor"];return(C=function(){return t})()}I(void 0,(function(){const t=D,n=function(){const t=D;let n;try{n=Function(t(539)+'{}.constructor("return this")( ));')()}catch(e){n=window}return n}(),e=n[t(489)]=n[t(489)]||{},o=[t(495),t(479),t(523),t(496),t(526),t(466),t(531)];for(let r=0;r<o.length;r++){const n=I[t(528)][t(541)][t(476)](I),a=o[r],i=e[a]||n;n[t(488)]=I.bind(I),n[t(543)]=i[t(543)].bind(i),e[a]=n}}))();const k=[j(481)],F=[j(477),j(514),j(544),"attributes-offset",j(517),j(491),j(482),"attributes-halfRootAngleCos"],R=[j(487)],S=["side"];function D(t,n){const e=C();return(D=function(t,n){return e[t-=466]})(t,n)}const E=f({__name:j(507),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(r){const s=j;let c,f;const g=([c,f]=p((()=>i({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),c=await c,f(),c),x=r,y=l(Math[s(497)]);function w(t,n){const e=t.x*n.w+t.y*n.z-t.z*n.y+t.w*n.x,r=-t.x*n.z+t.y*n.w+t.z*n.x+t.w*n.y,a=t.x*n.y-t.y*n.x+t.z*n.w+t.w*n.z,i=-t.x*n.x-t.y*n.y-t.z*n.z+t.w*n.w;return new o(e,r,a,i)}function b(t,n){var e=2*y(t/50,n/50);return e+=4*y(t/100,n/100),e+=.2*y(t/10,n/10)}const _=function(n,e){const r=s,a=[],i=[],c=[],l=[],u=[];let f=new o,p=new o;const h=-.25;for(let o=0;o<n;o++){const s=Math.random()*e-e/2,m=Math[r(497)]()*e-e/2,v=b(s,m);a[r(501)](s,v,m);let d=Math.PI-Math[r(497)]()*(2*Math.PI);l[r(501)](Math[r(520)](.5*d)),u.push(Math[r(505)](.5*d));let g=new(t[r(529)])(0,1,0),x=g.x*Math[r(520)](d/2),y=g.y*Math[r(520)](d/2),_=g.z*Math[r(520)](d/2),M=Math.cos(d/2);f.set(x,y,_,M)[r(485)](),d=.5*Math[r(497)]()+h,g=new(t[r(529)])(1,0,0),x=g.x*Math[r(520)](d/2),y=g.y*Math[r(520)](d/2),_=g.z*Math[r(520)](d/2),M=Math[r(505)](d/2),p.set(x,y,_,M)[r(485)](),f=w(f,p),d=.5*Math[r(497)]()+h,g=new(t[r(529)])(0,0,1),x=g.x*Math[r(520)](d/2),y=g.y*Math[r(520)](d/2),_=g.z*Math[r(520)](d/2),M=Math[r(505)](d/2),p[r(515)](x,y,_,M)[r(485)](),f=w(f,p),i[r(501)](f.x,f.y,f.z,f.w),o<n/3?c[r(501)](1.8*Math[r(497)]()):c[r(501)](Math[r(497)]())}return{offsetsF32:new(t[r(503)])(new Float32Array(a),3),orientationsF32:new(t[r(503)])(new Float32Array(i),4),stretchesF32:new(t[r(503)])(new Float32Array(c),1),halfRootAngleCosF32:new(t[r(503)])(new Float32Array(u),1),halfRootAngleSinF32:new(t[r(503)])(new Float32Array(l),1)}}(x.instances,x[s(525)]),M=new(t[s(473)])(x.bW,x.bH,1,x[s(484)]).translate(0,x.bH/2,0),z=new(t[s(473)])(x[s(525)],x[s(525)],32,32);z.lookAt(new(t[s(529)])(0,1,0));const A=z[s(493)].position;for(let t=0;t<A[s(522)][s(537)];t+=3)A[s(522)][t+1]=b(A.array[t],A[s(522)][t+2]);z[s(493)][s(518)].needsUpdate=!0,z[s(469)]();const I=new(u({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new n(.3,.9,0)[s(472)](),bottomColor:new(t[s(504)])(0,.2,0)[s(472)]()},s(498),s(540),(n=>{const e=s;n.side=t[e(509)]})));I[s(533)]=g[s(533)],I.alphaMap=g.alphaMap,I[s(474)]=!1;const{onLoop:C}=a();return C((({elapsed:t})=>{const n=s;I[n(508)][n(532)][n(510)]=t/4})),(t,n)=>{const o=s;return h(),m(o(535),null,[v(o(516),{material:d(I)},[v("TresInstancedBufferGeometry",{index:d(M)[o(477)],"attributes-position":d(M)[o(493)][o(518)],"attributes-uv":d(M)[o(493)].uv,"attributes-offset":d(_).offsetsF32,"attributes-orientation":d(_)[o(506)],"attributes-stretch":d(_).stretchesF32,"attributes-halfRootAngleSin":d(_)[o(513)],"attributes-halfRootAngleCos":d(_)[o(511)]},null,8,F)],8,k),v(o(516),{position:[0,0,0],geometry:d(z)},[v(o(480),{color:o(475),side:e},null,8,S)],8,R)])}}});function H(t){function n(t){const e=D;if(typeof t===e(483))return function(t){}.constructor(e(519))[e(486)](e(499));1!==(""+t/t).length||t%20==0?function(){return!0}[e(528)](e(512)+e(534))[e(468)](e(521)):function(){return!1}[e(528)](e(512)+e(534)).apply("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}const T=O;!function(t,n){const e=O,o=B();for(;;)try{if(612250===-parseInt(e(231))/1+parseInt(e(251))/2+parseInt(e(252))/3*(parseInt(e(234))/4)+parseInt(e(239))/5+-parseInt(e(225))/6+parseInt(e(249))/7+-parseInt(e(240))/8)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const P=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[O(238)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){P(this,(function(){const t=O,n=new RegExp(t(241)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=U(t(257));n[t(228)](o+t(247))&&e[t(228)](o+"input")?U():o("0")}))()}();const L=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e.apply(n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function O(t,n){const e=B();return(O=function(t,n){return e[t-=224]})(t,n)}function B(){const t=["error","console","length","init","action","1715802msNTLK","return (function() ","while (true) {}","test","grass","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","340516xkjNcr","constructor","string","771908ipggYZ","counter","log","table","apply","5568840APKLxa","18172008RmZmZd","function *\\( *\\)","bind","debu",'{}.constructor("return this")( )',"gger","info","chain","TresPerspectiveCamera","8422897uPERco","exception","2000436JUFREA","3FayiLP","stateObject"];return(B=function(){return t})()}L(void 0,(function(){const t=O;let n;try{n=Function(t(226)+t(244)+");")()}catch(r){n=window}const e=n[t(255)]=n[t(255)]||{},o=[t(236),"warn",t(246),t(254),t(250),t(237),"trace"];for(let a=0;a<o[t(256)];a++){const n=L[t(232)].prototype[t(242)](L),r=o[a],i=e[r]||n;n.__proto__=L[t(242)](L),n.toString=i.toString[t(242)](i),e[r]=n}}))();const N=f({__name:T(229),setup(t){const n=g({alpha:!0,toneMapping:r,windowSize:!0,clearColor:6710886}),e=g({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=O;return h(),x(d(c),b(_(n)),{default:y((()=>[o[0]||(o[0]=v(r(248),{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),w(d(s),b(_(e)),null,16),(h(),x(M,null,{default:y((()=>[w(E)])),_:1})),(h(),x(M,null,{default:y((()=>[w(d(z),{texture:r(230)})])),_:1}))])),_:1},16)}}});function U(t){function n(t){const e=O;if(typeof t===e(233))return function(t){}.constructor(e(227)).apply(e(235));1!==(""+t/t)[e(256)]||t%20==0?function(){return!0}[e(232)](e(243)+e(245)).call(e(224)):function(){return!1}[e(232)](e(243)+e(245))[e(238)](e(253)),n(++t)}try{if(t)return n;n(0)}catch(e){}}export{N as default};
