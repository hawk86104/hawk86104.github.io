import{bU as n,ak as t,am as e,C as o,aB as a,a as r}from"./three.KG0QRRig1731552996711.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.01P8tiuF1731552996711.js";import{d as u,b as d,w as m,e as f,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as P,F as y}from"./@vue.-THQH3GC1731552996711.js";import"./@vueuse.YduQ9gvc1731552996711.js";const x=z;!function(n,t){const e=z,o=S();for(;;)try{if(991889===parseInt(e(259))/1*(parseInt(e(252))/2)+parseInt(e(271))/3*(parseInt(e(256))/4)+parseInt(e(238))/5+-parseInt(e(282))/6*(parseInt(e(236))/7)+parseInt(e(234))/8*(-parseInt(e(268))/9)+parseInt(e(243))/10*(-parseInt(e(255))/11)+parseInt(e(239))/12*(parseInt(e(277))/13))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(248)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=S();return(z=function(n,t){return e[n-=219]})(n,t)}!function(){C(this,(function(){const n=z,t=new RegExp(n(275)),e=new RegExp(n(260),"i"),o=A(n(231));t[n(225)](o+n(262))&&e.test(o+n(274))?A():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[z(248)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();I(void 0,(function(){const n=z;let t;try{t=Function("return (function() "+n(284)+");")()}catch(a){t=window}const e=t.console=t[n(253)]||{},o=[n(265),"warn","info",n(224),n(264),n(249),n(272)];for(let r=0;r<o[n(276)];r++){const t=I[n(267)][n(246)].bind(I),a=o[r],s=e[a]||t;t.__proto__=I[n(258)](I),t[n(230)]=s.toString[n(258)](s),e[a]=t}}))();const T=["position","a-scale",x(227),x(254)];function S(){const n=["random","insideColor","822bXlEoz","trace","TresPoints","input","function *\\( *\\)","length","65ZoiTrl","#1b3984","debu","call","position","24JtZskR","TresPerspectiveCamera",'{}.constructor("return this")( )',"outsideColor","while (true) {}","cos","value","uniforms","geometry","TresShaderMaterial","count","black","error","test","counter","color","clone","setAttribute","toString","init","sin","keys","5059992AGEyLp","string","1788773MEMxFB","radius","2986660xLvSOE","11385636ZDhNLI","size","lerp","#b5f28d","500FKRRhx","randomnessPower","branches","prototype","gger","apply","table","forEach","stateObject","764674TzUetB","console","a-randomness","414766ZOHpcI","1068vYuytr","TresBufferGeometry","bind","1Tznigk","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","material","chain","bufferRef","exception","log","TresCanvas","constructor","27hMYAOw"];return(S=function(){return n})()}const _=u({__name:"galaxy",setup(u){const C=x,z={clearColor:C(223),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},I={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:C(242),outsideColor:C(278)},S=new o(I[C(270)]),_=new o(I[C(285)]),A=new Float32Array(3*I.count),F=new Float32Array(3*I[C(222)]),j=new Float32Array(I[C(222)]),R=new Float32Array(3*I[C(222)]);for(let n=0;n<I[C(222)];n++){const t=3*n,e=Math[C(269)]()*I.radius,o=n%I[C(245)]*Math.PI*2/I.branches;A[t]=Math[C(287)](o)*e,A[t+1]=0,A[t+2]=Math[C(232)](o)*e;const a=Math[C(269)]()**I[C(244)]*(Math.random()<.5?-1:1),r=Math[C(269)]()**I[C(244)]*(Math.random()<.5?-1:1),s=Math[C(269)]()**I.randomnessPower*(Math[C(269)]()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=S[C(228)]();i.lerp(_,e/I.radius),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,j[n]=Math.random()}const k={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:I[C(240)]}}};const E=d(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=C;E[t(288)]&&(E[t(288)][t(261)][t(219)].uTime[t(288)]=n)}));const{count:Z,size:B,radius:L,branches:U,spin:D,randomness:G,randomnessPower:J,insideColor:Y,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:C(242),outsideColor:C(278)});return m([Z.value,B.value,L[C(288)],U[C(288)],D[C(288)],G.value,J.value,Y[C(288)],$[C(288)]],(n=>{const t=C;n[t(250)](((n,e)=>{const o=t;I[Object[o(233)](I)[e]]=n[o(288)]})),function(){const n=C;if(E[n(288)]){const t=new o(I[n(270)]),e=new o(I.outsideColor),a=new Float32Array(3*I[n(222)]),s=new Float32Array(3*I[n(222)]),i=new Float32Array(I.count),c=new Float32Array(3*I[n(222)]);for(let o=0;o<I[n(222)];o++){const r=3*o,l=Math[n(269)]()*I[n(237)],u=o%I[n(245)]*Math.PI*2/I.branches;a[r]=Math[n(287)](u)*l,a[r+1]=0,a[r+2]=Math[n(232)](u)*l;const d=Math[n(269)]()**I[n(244)]*(Math.random()<.5?-1:1),m=Math.random()**I.randomnessPower*(Math[n(269)]()<.5?-1:1),f=Math[n(269)]()**I[n(244)]*(Math[n(269)]()<.5?-1:1);c[r]=d,c[r+1]=m,c[r+2]=f;const p=t[n(228)]();p[n(241)](e,l/I[n(237)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}E.value[n(220)][n(229)](n(281),new r(a,3)),E[n(288)].geometry[n(229)]("aRandomness",new r(c,3)),E[n(288)][n(220)][n(229)](n(227),new r(s,3)),E[n(288)][n(220)].setAttribute("aScale",new r(i,1))}}()})),(n,t)=>{const e=C,o=f(e(266));return p(),h(y,null,[v(g(c)),v(o,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(e(283),{position:[3,3,3]},null,-1)),M(e(273),{ref_key:e(263),ref:E},[M(e(257),{position:[g(A),3],"a-scale":[g(j),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,T),M(e(221),b(P(k)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const e=z;if(typeof n===e(235))return function(n){}.constructor(e(286))[e(248)](e(226));1!==(""+n/n)[e(276)]||n%20==0?function(){return!0}[e(267)](e(279)+e(247))[e(280)]("action"):function(){return!1}[e(267)]("debu"+e(247))[e(248)](e(251)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{_ as default};
