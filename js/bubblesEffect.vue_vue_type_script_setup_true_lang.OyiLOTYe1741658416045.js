import{r as n,_ as t,a0 as e,c3 as o,ab as i}from"./three.FyUEtfsR1741658416045.js";import{m as r,e as a,a as s}from"./@tresjs.W3PFJhMo1741658416045.js";import{d as l,b as u,a3 as c,a2 as f,o as p,H as m,N as b,aj as g,ak as v,u as d}from"./@vue.NRI7TcgI1741658416045.js";!function(n,t){const e=_,o=w();for(;;)try{if(182105===-parseInt(e(179))/1+-parseInt(e(162))/2*(-parseInt(e(165))/3)+-parseInt(e(135))/4+-parseInt(e(139))/5+-parseInt(e(163))/6+parseInt(e(177))/7+-parseInt(e(137))/8*(-parseInt(e(136))/9))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const y=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(127)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){y(this,(function(){const n=_,t=new RegExp(n(131)),e=new RegExp(n(178),"i"),o=z(n(170));t[n(159)](o+n(168))&&e[n(159)](o+"input")?z():o("0")}))()}();const h=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(127)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function w(){const n=["apply","toString","glowColor","TresBufferGeometry","function *\\( *\\)","log","warn","push","1323968LcOHVL","1224cfphFo","41600yehKvj","length","926390vDdFXg","position","gger","error","uniforms","TresMeshRef","counter","opacity","model","trace","AdditiveBlending","return (function() ","prototype","constructor","dispose","mergeGeometries","uOpacity","debu","table","call","test","console","sin","30iddZlQ","406776vMnXlu","Color","5310gvsVqD","bind","info","chain","uTime","init","value","geometry","map","string","TresShaderMaterial","color","954219KHMSQA","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","103896ofluXw","exception"];return(w=function(){return n})()}function _(n,t){const e=w();return(_=function(n,t){return e[n-=127]})(n,t)}h(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(150)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t[n(160)]=t[n(160)]||{},o=[n(132),n(133),n(167),n(142),n(180),n(157),n(148)];for(let i=0;i<o[n(138)];i++){const t=h[n(152)][n(151)][n(166)](h),r=o[i],a=e[r]||t;t.__proto__=h.bind(h),t[n(128)]=a[n(128)][n(166)](a),e[r]=t}}))();const x=l({__name:"xRayEffect",props:{model:{},color:{default:"#84ccff"},opacity:{default:1}},async setup(i){const l=_;let d,y;const h=i,w=u(),x=[];h[l(147)].traverse((t=>{const e=l;t instanceof n&&(t[e(172)].verticesNeedUpdate=!0,x[e(134)](t[e(172)]))}));const z=([d,y]=c((()=>s({map:"./plugins/medical/image/brainXRayLight.png"}))),d=await d,y(),d),T={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[l(164)])(h.color)},lightningTexture:{type:"t",value:z[l(173)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:h[l(146)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e,blending:t[l(149)],depthWrite:!1};T[l(143)].offsetY[l(171)]=Math[l(161)](5);const{camera:P}=r(),{onLoop:S}=a();return S((({delta:n})=>{const t=l;P.value[t(140)]&&w.value&&(T[t(143)][t(169)][t(171)]+=n)})),f((()=>{const n=l;w[n(171)]&&(w[n(171)][n(172)][n(153)](),w[n(171)][n(172)]=o[n(154)](x)),h[n(176)]&&(T[n(143)][n(129)].value=new(t[n(164)])(h[n(176)])),h.opacity&&(T.uniforms[n(155)][n(171)]=h[n(146)])})),(n,t)=>{const e=l;return p(),m("TresMesh",{ref_key:e(144),ref:w},[t[0]||(t[0]=b(e(130),null,null,-1)),b(e(175),g(v(T)),null,16)],512)}}});function z(n){function t(n){const e=_;if(typeof n===e(174))return function(n){}.constructor("while (true) {}")[e(127)](e(145));1!==(""+n/n)[e(138)]||n%20==0?function(){return!0}[e(152)]("debu"+e(141))[e(158)]("action"):function(){return!1}.constructor(e(156)+e(141))[e(127)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}const T=I;function P(){const n=["AdditiveBlending","map","randFloat","test","8qXpUBE","action",'{}.constructor("return this")( )',"2089720rlTXNz","table","setAttribute","trace","value","exception","9Fosdvc","mergeGeometries","color","process","string","gger","computeBoundingSphere","604680mUJlNG","cerebellum","glowColor","init","1574390oqNxrz","call","function *\\( *\\)","625528IcNgTZ","return (function() ","attributes","model","2449811rCXSnD","BufferGeometryRef","debu","input","size","uOpacity","amigdala","push","analitic","apply","TresPoints","constructor","DoubleSide","chain","#FFF","array","console","ShaderMaterial","toString","uSlowTime","material","bridge","Color","stateObject","info","opacity","uniforms","position","geometry","6USFjqe","513567MVKYbh","traverse","episodic","length","Mesh","counter","randInt","MathUtils","prototype","bubblesEffect","error","__proto__","bind","Float32BufferAttribute","TresShaderMaterial","81989xBwnTG","TresBufferGeometry","bubbles"];return(P=function(){return n})()}!function(n,t){const e=I,o=P();for(;;)try{if(366867===-parseInt(e(181))/1*(-parseInt(e(165))/2)+-parseInt(e(166))/3*(-parseInt(e(188))/4)+parseInt(e(208))/5+parseInt(e(204))/6+-parseInt(e(136))/7+-parseInt(e(132))/8*(parseInt(e(197))/9)+-parseInt(e(191))/10)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(145)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){S(this,(function(){const n=I,t=new RegExp(n(210)),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=F(n(207));t[n(187)](o+n(149))&&e.test(o+n(139))?F():o("0")}))()}();const C=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[I(145)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function I(n,t){const e=P();return(I=function(n,t){return e[n-=132]})(n,t)}C(void 0,(function(){const n=I,t=function(){const n=I;let t;try{t=Function(n(133)+n(190)+");")()}catch(e){t=window}return t}(),e=t[n(152)]=t[n(152)]||{},o=["log","warn",n(160),n(176),n(196),n(192),n(194)];for(let i=0;i<o[n(169)];i++){const t=C[n(147)][n(174)][n(178)](C),r=o[i],a=e[r]||t;t[n(177)]=C.bind(C),t[n(154)]=a[n(154)][n(178)](a),e[r]=t}}))();const M=l({__name:T(175),props:{model:{},color:{default:T(150)},opacity:{default:1}},setup(n){const e=T,r=n,s=["afective","semantic",e(168),e(200),e(142),"brainstem",e(157),e(205),e(144)],l={};r[e(135)][e(167)]((n=>{const i=e;n instanceof t[i(170)]&&s[i(185)]((t=>{const e=i;if(n.name.includes(t)){if(l[t]){const i=[l[t],n[e(164)]];return l[t]=o[e(198)](i),l}return l[t]=n.geometry}return[]}))}));const c=u(),y=new(t[e(153)])({uniforms:{glowColor:{type:"c",value:new(t[e(158)])(r.color)},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:r[e(161)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t[e(184)],side:t[e(148)],depthTest:!1,vertexColors:!1,transparent:!0});f((()=>{c[e(195)]&&(()=>{const n=e,o=[],r=[],a=[],u=[];for(let e=0;e<2e4-3*s[n(169)];e+=1){const i=t[n(173)][n(172)](0,s[n(169)]-1),c=s[i],f=l[c][n(134)][n(163)].array[3*e+0]||0,p=l[c].attributes[n(163)][n(151)][3*e+1]||0,m=l[c][n(134)][n(163)].array[3*e+2]||0;if(r[n(143)](f,p,m),o[e]=t[n(173)][n(186)](10,20),e%100==0){const e=t[n(173)].randInt(100,250)+p;u[n(143)](f,e,m,1)}else u.push(f,p,m,0);a[2*e+0]=t[n(173)][n(186)](.5,1.5),a[2*e+1]=2.5}c[n(195)][n(193)]("aDelayDuration",new i(a,2)),c[n(195)].setAttribute(n(183),new i(u,4)),c.value.setAttribute(n(163),new i(r,3)),c[n(195)][n(193)](n(199),new(t[n(179)])([],3)),c[n(195)][n(193)](n(140),new(t[n(179)])(o,1)),c[n(195)][n(203)]()})()}));const h=u(),{onLoop:w}=a();return w((({delta:n})=>{const o=e;h[o(195)]&&(h[o(195)][o(156)][o(162)].uTime[o(195)]+=.05,h[o(195)][o(156)][o(162)][o(155)][o(195)]+=1/400),r[o(199)]&&(y[o(162)][o(206)][o(195)]=new(t[o(158)])(r[o(199)])),r[o(161)]&&(y[o(162)][o(141)][o(195)]=r.opacity)})),(n,t)=>{const o=e;return p(),m(o(146),{ref_key:"TresMeshRef",ref:h},[b(o(182),{ref_key:o(137),ref:c},null,512),b(o(180),g(v(d(y))),null,16)],512)}}});function F(n){function t(n){const e=I;if(typeof n===e(201))return function(n){}.constructor("while (true) {}")[e(145)](e(171));1!==(""+n/n).length||n%20==0?function(){return!0}[e(147)](e(138)+e(202))[e(209)](e(189)):function(){return!1}[e(147)]("debu"+e(202))[e(145)](e(159)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{x as _,M as a};
