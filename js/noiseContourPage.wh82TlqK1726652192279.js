import{p as n,U as e,z as t,Y as r}from"./@tresjs.UGbbWZf51726652192279.js";import{W as o,k as i,c7 as s,bZ as a,bX as u,a0 as c,n as f,b6 as l}from"./three.3esZ7Hzr1726652192279.js";import{d as p,a4 as v,a3 as m,o as d,E as h,L as g,u as x,F as w,e as y,f as D,g as b,j as E,al as I,m as S}from"./@vue.JNsx1iN61726652192279.js";import"./@vueuse.OdTlFP151726652192279.js";const R=C;!function(n,e){const t=C,r=P();for(;;)try{if(757090===-parseInt(t(160))/1*(-parseInt(t(181))/2)+-parseInt(t(167))/3+-parseInt(t(178))/4*(parseInt(t(151))/5)+-parseInt(t(172))/6*(parseInt(t(193))/7)+-parseInt(t(152))/8*(parseInt(t(194))/9)+-parseInt(t(166))/10*(parseInt(t(157))/11)+parseInt(t(187))/12)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[C(180)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function C(n,e){const t=P();return(C=function(n,e){return t[n-=148]})(n,e)}!function(){_(this,(function(){const n=C,e=new RegExp(n(198)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=A(n(188));e[n(155)](r+"chain")&&t[n(155)](r+n(183))?A():r("0")}))()}();const T=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[C(180)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(){const n=['{}.constructor("return this")( )',"11MXpAuC","error","string","381344OKOWQA","side","width","renderToScreen","table","length","262610eUcLZQ","3328260uQyGXI","constructor","TresMesh","while (true) {}","derivatives","1752iYonlO","debu","bind","#ffffff","toString","uniforms","2228768KJKGPY","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","apply","2NVqLbE","rotation-x","input","warn","extensions","gger","39966072LwTost","init","addPass","TresMeshPhongMaterial","exception","innerHeight","119rOWjcW","9PnUhUl","action","texture","call","function *\\( *\\)","__proto__","counter","console","prototype","innerWidth","stateObject","5qJEEGn","10055384xpLwqD","log","value","test"];return(P=function(){return n})()}T(void 0,(function(){const n=C;let e;try{e=Function("return (function() "+n(156)+");")()}catch(o){e=window}const t=e[n(201)]=e[n(201)]||{},r=[n(153),n(184),"info",n(158),n(191),n(164),"trace"];for(let i=0;i<r[n(165)];i++){const e=T[n(168)][n(148)][n(174)](T),o=r[i],s=t[o]||e;e[n(199)]=T.bind(T),e[n(176)]=s[n(176)][n(174)](s),t[o]=e}}))();const N=[R(161),R(182)],M=[g("TresBoxGeometry",{args:[400,400,400]},null,-1),g("TresMeshPhongMaterial",{color:R(175),shininess:0},null,-1)],U=[R(161)],F=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g(R(190),{color:"#ffffff",shininess:0},null,-1)],j="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",L=R(179),z=p({__name:"noiseContour",async setup(r){const p=R;let y,D;const{camera:b,renderer:E,scene:I,sizes:S}=n(),_=([y,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),y=await y,D(),y),{onLoop:C,onAfterLoop:T}=e(),P=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),z=new i(window[p(149)],window[p(192)]);let A=null;const k=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:z}},vertexShader:j,fragmentShader:L}),O=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:j,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return O[p(163)]=!0,O.material[p(185)][p(171)]=!0,m((()=>{const n=p;S[n(162)][n(154)]&&(A=new a(E[n(154)]),A[n(189)](new u(I[n(154)],b[n(154)])),A[n(189)](k),A[n(189)](O))})),C((({elapsed:n})=>{const e=p;E[e(154)].render(I[e(154)],b[e(154)],P),k[e(177)].tShadow[e(154)]=P[e(196)],O.uniforms.iTime[e(154)]=n})),T((()=>{A&&A.render()})),(n,e)=>{const t=p;return d(),h(w,null,[g(t(169),{ref:"noiseContourMeshRef2",side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},M,8,N),g(t(169),{ref:"noiseContourMeshRef1",side:x(c),position:[0,150,0],"cast-shadow":""},F,8,U)],64)}}});function A(n){function e(n){const t=C;if(typeof n===t(159))return function(n){}.constructor(t(170)).apply(t(200));1!==(""+n/n)[t(165)]||n%20==0?function(){return!0}[t(168)](t(173)+t(186))[t(197)](t(195)):function(){return!1}.constructor(t(173)+t(186)).apply(t(150)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const k=X;!function(n,e){const t=X,r=Z();for(;;)try{if(195453===parseInt(t(309))/1*(-parseInt(t(332))/2)+parseInt(t(328))/3+-parseInt(t(311))/4+-parseInt(t(307))/5*(-parseInt(t(298))/6)+-parseInt(t(304))/7*(parseInt(t(325))/8)+-parseInt(t(327))/9*(-parseInt(t(318))/10)+parseInt(t(319))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const O=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[X(299)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){O(this,(function(){const n=X,e=new RegExp(n(312)),t=new RegExp(n(330),"i"),r=Q(n(334));e[n(333)](r+"chain")&&t[n(333)](r+n(300))?Q():r("0")}))()}();const W=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[X(299)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function X(n,e){const t=Z();return(X=function(n,e){return t[n-=297]})(n,e)}function Z(){const n=["bind","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)",'{}.constructor("return this")( )',"8846TXmFbs","test","init","return (function() ","warn","debu","prototype","table","216puOEzV","apply","input","gger","console","exception","7OFFcEM","red","TresAmbientLight","41235VSLwIW","length","6KQfXMl","call","1163932bsdXaa","function *\\( *\\)","__proto__","trace","action","TresDirectionalLight","info","520XKOMeF","1100275NrVxaC","while (true) {}","#000000","#ffffff","TresPerspectiveCamera","constructor","1774896DyBbvz","toString","56025CcRZac","42657HTKFWc"];return(Z=function(){return n})()}W(void 0,(function(){const n=X;let e;try{e=Function(n(335)+n(331)+");")()}catch(o){e=window}const t=e.console=e[n(302)]||{},r=["log",n(336),n(317),"error",n(303),n(297),n(314)];for(let i=0;i<r[n(308)];i++){const e=W.constructor[n(338)][n(329)](W),o=r[i],s=t[o]||e;e[n(313)]=W[n(329)](W),e[n(326)]=s[n(326)][n(329)](s),t[o]=e}}))();const B={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},G=g(k(306),{color:k(322)},null,-1),K=g(k(316),{position:[400,400,400],intensity:1,color:k(305)},null,-1),V=p({__name:"noiseContourPage",setup(n){const e=k,t={clearColor:e(321),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=y("TresCanvas");return d(),D(s,S(t,{"window-size":""}),{default:b((()=>[g(i(323),B,null,512),E(x(r)),G,K,(d(),D(I,null,{default:b((()=>[E(z)])),_:1}))])),_:1},16)}}});function Q(n){function e(n){const t=X;if("string"==typeof n)return function(n){}[t(324)](t(320))[t(299)]("counter");1!==(""+n/n)[t(308)]||n%20==0?function(){return!0}[t(324)](t(337)+t(301))[t(310)](t(315)):function(){return!1}[t(324)](t(337)+t(301))[t(299)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{V as default};
