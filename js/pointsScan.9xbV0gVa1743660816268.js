import{_ as t}from"./earth.vue_vue_type_script_setup_true_lang.m5DDw_jY1743660816268.js";import{e,o as n}from"./@tresjs.zc7faK4J1743660816268.js";import{d as a,w as r,o,H as s,N as i,aj as u,ak as l,r as c,e as p,f as m,g as v,j as f,u as d,al as g}from"./@vue.B5PFBfKs1743660816268.js";import{V as _,C as y}from"./three.2wx8FU0g1743660816268.js";import{P as j}from"./tweakpane.ivGeiIdz1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";const T=a({__name:"pointsScan",props:{color:{default:"#FFFFFF"},opacity:{default:1},speed:{default:1}},setup(t){const n=t,a={uniforms:{uTime:{value:0},pointNum:{value:new _(32,16)},uColor:{value:new y(n.color)},uOpacity:{value:n.opacity}},transparent:!0,vertexShader:"\n\t\t\t\t\tvarying vec2 vUv;\n                    void main(){\n\t\t\t\t\t\tvUv=uv;\n\t\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                    }",fragmentShader:"\n\t\t\t\t\tfloat PI = acos(-1.0);\n                    uniform vec3 uColor;\n                    uniform vec2 pointNum;\n                    uniform float uTime;\n                    varying vec2 vUv;\n\t\t\t\t\tuniform float uOpacity;\n                    void main(){\n\t\t\t\t\t\tvec2 uv = vUv+ vec2(0.0, uTime);\n\t\t\t\t\t\tfloat current = abs(sin(uv.y * PI));\n\t\t\t\t\t\tif(current < sin(0.4714*PI)) {\n\t\t\t\t\t\t\tcurrent=current*0.5;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfloat d = distance(fract(uv * pointNum*2.0), vec2(0.5, 0.5));\n\n\t\t\t\t\t\tif(d > current*0.2 ) {\n\t\t\t\t\t\t\tdiscard;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl_FragColor =vec4(uColor,current*uOpacity);\n\t\t\t\t\t\t}\n                    }"};r((()=>[n.color,n.opacity]),(([t,e])=>{a.uniforms.uColor.value=new y(t),a.uniforms.uOpacity.value=e}));const{onLoop:c}=e();return c((({delta:t})=>{a.uniforms.uTime.value+=.1*t*n.speed})),(t,e)=>(o(),s("TresMesh",null,[e[0]||(e[0]=i("TresSphereGeometry",{args:[1,32,32]},null,-1)),i("TresShaderMaterial",u(l(a)),null,16)]))}}),w=a({__name:"pointsScan",setup(e){const a=c({color:"#ffffff",opacity:.48,speed:4.8,scale:1.1}),r=new j;return r.addBinding(a,"color",{label:"颜色"}),r.addBinding(a,"opacity",{label:"透明度",min:0,max:1,step:.01}),r.addBinding(a,"speed",{label:"速度",min:.1,max:5,step:.1}),r.addBinding(a,"scale",{label:"大小",min:1.01,max:2,step:.01}),(e,r)=>{const s=p("TresCanvas");return o(),m(s,{clearColor:"#201919","window-size":""},{default:v((()=>[r[0]||(r[0]=i("TresPerspectiveCamera",{position:[3,3,0],fov:45,near:.1,far:1e4},null,-1)),f(d(n),{enableDamping:""}),r[1]||(r[1]=i("TresAmbientLight",{intensity:3},null,-1)),(o(),m(g,null,{default:v((()=>[f(t)])),_:1})),(o(),m(g,null,{default:v((()=>[f(T,u(l(a)),null,16)])),_:1}))])),_:1})}}});export{w as default};
