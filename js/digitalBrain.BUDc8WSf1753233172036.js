import{cf as s,N as a,_ as o,ce as e}from"./three.CcAUWIwc1753233172036.js";import{a as t}from"./@tresjs.C_lUIoBy1753233172036.js";import{P as i}from"./tweakpane.C0HtAJSg1753233172036.js";import"./index.ehJwyQ8v1753233172036.js";import{l as r}from"./util.DwAr7qKM1753233172036.js";import{_ as l}from"./cloudPoints.vue_vue_type_script_setup_true_lang.D4S_BESA1753233172036.js";import{_ as n,a as p}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.BBmJ6Mts1753233172036.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.DQJaVaP-1753233172036.js";import{d as m,r as u,aa as c,h as j,G as g,o as f,j as _,u as b,f as h,I as w,a7 as y,a8 as v,e as B,H as k,m as x,a5 as L,F as T}from"./@vue.DwSifnVs1753233172036.js";import"./postprocessing.BWGCgD611753233172036.js";import"./@vueuse.35KRNqxK1753233172036.js";import"./utils.BqiPcXqU1753233172036.js";import"./@fesjs.CJmphC0G1753233172036.js";import"./vue-router.0le_2Tu71753233172036.js";import"./lodash-es.C7pWAXPe1753233172036.js";import"./@qlin.q6OWdsQV1753233172036.js";import"./pinia.ia5100Wx1753233172036.js";import"./@babel.BPq7uOAK1753233172036.js";import"./@floating-ui.BFjFSAYt1753233172036.js";import"./@juggle.CcBCnTIR1753233172036.js";import"./index.DBmzea2c1753233172036.js";import"./three-mesh-ui.module.BS8L3_9E1753233172036.js";import"./starLoading.PFMVYWAP1753233172036.js";import"./cssLoaders.4Dzr9WTU1753233172036.js";import"./bubbleLoading.7uib_EEo1753233172036.js";import"./yangyangLoading.BTuUUcXb1753233172036.js";const C={position:[0,120,0]},G=m({__name:"digitalBrain",async setup(m){let G,H;const P=u({color:"#fff",show:!0,opacity:1}),q=new i({title:"参数"});q.addBinding(P,"show",{label:"点云显示"}),q.addBinding(P,"color",{label:"点云颜色"}),q.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const I=u({color:"#84ccff",show:!0,opacity:1});q.addBinding(I,"show",{label:"脑轮廓显示"}),q.addBinding(I,"color",{label:"脑轮廓颜色"}),q.addBinding(I,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const M=u({color:"#9e00af",show:!0,opacity:1});q.addBinding(M,"show",{label:"脑组织显示"}),q.addBinding(M,"color",{label:"脑组织颜色"}),q.addBinding(M,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const R=new s,S=([G,H]=c((()=>r("./plugins/medical/model/brainparts.OBJ",R))),G=await G,H(),G),z=u({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a}),A=u({autoRotate:!0,autoRotateSpeed:2});return(s,a)=>{const o=j("TresCanvas");return f(),g(T,null,[_(b(d)),_(o,x(z,{"window-size":""}),{default:h((()=>[a[0]||(a[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),_(b(t),y(v(A)),null,16),a[1]||(a[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",C,[P.show?(f(),B(l,x({key:0,model:b(S)},P),null,16,["model"])):k("",!0),(f(),B(L,null,{default:h((()=>[I.show?(f(),B(n,x({key:0,model:b(S)},I),null,16,["model"])):k("",!0)])),_:1})),M.show?(f(),B(p,x({key:1,model:b(S)},M),null,16,["model"])):k("",!0)]),a[2]||(a[2]=w("TresGridHelper",{args:[400,10]},null,-1))])),_:1},16)],64)}}});export{G as default};
