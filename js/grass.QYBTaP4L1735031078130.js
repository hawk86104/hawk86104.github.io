import{_ as t,C as n,V as e,ai as o}from"./three.bc6MLGU_1735031078130.js";import{e as r,b as a,U as i,c as s}from"./@tresjs.dTM0HLnZ1735031078130.js";import"./index.0t6lmnst1735031078130.js";import{a as c}from"./simplex-noise.Yx8GBgKo1735031078130.js";import{C as l}from"./index.ENNhtf0D1735031078130.js";import{d as u,a6 as f,o as p,D as h,J as m,u as v,r as d,f as g,g as x,j as w,aj as y,ak as b,al as _}from"./@vue.-THQH3GC1735031078130.js";import{_ as M}from"./skyBoxBmesh.vue_vue_type_script_setup_true_lang.9m4D9crQ1735031078130.js";import"./@vueuse.COyzlgw71735031078130.js";import"./lamina.VR45CYjm1735031078130.js";import"./glsl-tokenizer.QZU1GFE21735031078130.js";import"./@amap.FwSyOcr71735031078130.js";import"./glsl-token-descope.uWhRLtaX1735031078130.js";import"./glsl-token-depth.LGKbVJk01735031078130.js";import"./glsl-token-scope.My1l95_h1735031078130.js";import"./glsl-token-properties.HffMRbve1735031078130.js";import"./glsl-token-assignments.QI3hLzx01735031078130.js";import"./glsl-token-string.kegNuDAa1735031078130.js";import"./glsl-token-functions.mTyBwCXd1735031078130.js";import"./object-hash.USFlpBEa1735031078130.js";import"./jszip.B5akDNc61735031078130.js";import"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.LX3n2P1r1735031078130.js";import"./skyBoxDmesh.vue_vue_type_script_setup_true_lang.fdXwoNYV1735031078130.js";import"./three-stdlib.2VgffRAZ1735031078130.js";import"./@pmndrs.jH1lDBFa1735031078130.js";import"./utils.WNdrcUQ11735031078130.js";const z=I;!function(t,n){const e=I,o=D();for(;;)try{if(959144===parseInt(e(276))/1*(-parseInt(e(316))/2)+-parseInt(e(292))/3+-parseInt(e(245))/4+-parseInt(e(264))/5*(-parseInt(e(294))/6)+parseInt(e(327))/7+parseInt(e(278))/8+-parseInt(e(293))/9*(-parseInt(e(303))/10))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const j=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[I(296)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){j(this,(function(){const t=I,n=new RegExp(t(307)),e=new RegExp(t(246),"i"),o=E(t(279));n[t(250)](o+t(249))&&e.test(o+t(277))?E():o("0")}))()}();const A=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[I(296)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function I(t,n){const e=D();return(I=function(t,n){return e[t-=244]})(t,n)}A(void 0,(function(){const t=I;let n;try{n=Function(t(275)+t(301)+");")()}catch(r){n=window}const e=n[t(254)]=n[t(254)]||{},o=["log","warn",t(259),t(284),t(309),t(257),"trace"];for(let a=0;a<o[t(329)];a++){const n=A[t(302)][t(323)][t(248)](A),r=o[a],i=e[r]||n;n[t(262)]=A.bind(A),n[t(315)]=i[t(315)][t(248)](i),e[r]=n}}))();const C=[z(326)],S=[z(260),z(247),z(267),z(318),z(305),z(265),z(272),z(273)],F=[z(325)],k=[z(311)];function D(){const t=["return (function() ","759401DcIaUv","input","11024720GxXtzc","init","attributes","map","random","while (true) {}","error","InstancedBufferAttribute","   precision mediump float;\n      attribute vec3 offset;\n      attribute vec4 orientation;\n      attribute float halfrootanglesin;\n      attribute float halfrootanglecos;\n      attribute float stretch;\n      uniform float time;\n      uniform float bladeHeight;\n      varying vec2 vUv;\n      varying float frc;\n\n      //WEBGL-NOISE FROM https://github.com/stegu/webgl-noise\n      //Description : Array and textureless GLSL 2D simplex noise function. Author : Ian McEwan, Ashima Arts. Maintainer : stegu Lastmod : 20110822 (ijm) License : Copyright (C) 2011 Ashima Arts. All rights reserved. Distributed under the MIT License. See LICENSE file. https://github.com/ashima/webgl-noise https://github.com/stegu/webgl-noise\n      vec3 mod289(vec3 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec2 mod289(vec2 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;} vec3 permute(vec3 x) {return mod289(((x*34.0)+1.0)*x);} float snoise(vec2 v){const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439); vec2 i  = floor(v + dot(v, C.yy) ); vec2 x0 = v -   i + dot(i, C.xx); vec2 i1; i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0); vec4 x12 = x0.xyxy + C.xxzz; x12.xy -= i1; i = mod289(i); vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 )); vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0); m = m*m ; m = m*m ; vec3 x = 2.0 * fract(p * C.www) - 1.0; vec3 h = abs(x) - 0.5; vec3 ox = floor(x + 0.5); vec3 a0 = x - ox; m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h ); vec3 g; g.x  = a0.x  * x0.x  + h.x  * x0.y; g.yz = a0.yz * x12.xz + h.yz * x12.yw; return 130.0 * dot(m, g);}\n      //END NOISE\n\n      //https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n      vec3 rotateVectorByQuaternion( vec3 v, vec4 q){\n        return 2.0 * cross(q.xyz, v * q.w + cross(q.xyz, v)) + v;\n      }\n\n      //https://en.wikipedia.org/wiki/Slerp\n      vec4 slerp(vec4 v0, vec4 v1, float t) {\n        // Only unit quaternions are valid rotations.\n        // Normalize to avoid undefined behavior.\n        normalize(v0);\n        normalize(v1);\n\n        // Compute the cosine of the angle between the two vectors.\n        float dot_ = dot(v0, v1);\n\n        // If the dot product is negative, slerp won't take\n        // the shorter path. Note that v1 and -v1 are equivalent when\n        // the negation is applied to all four components. Fix by\n        // reversing one quaternion.\n        if (dot_ < 0.0) {\n          v1 = -v1;\n          dot_ = -dot_;\n        }\n\n        const float DOT_THRESHOLD = 0.9995;\n        if (dot_ > DOT_THRESHOLD) {\n          // If the inputs are too close for comfort, linearly interpolate\n          // and normalize the result.\n          vec4 result = t*(v1 - v0) + v0;\n          normalize(result);\n          return result;\n        }\n\n        // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n        float theta_0 = acos(dot_);       // theta_0 = angle between input vectors\n        float theta = theta_0*t;          // theta = angle between v0 and result\n        float sin_theta = sin(theta);     // compute this value only once\n        float sin_theta_0 = sin(theta_0); // compute this value only once\n        float s0 = cos(theta) - dot_ * sin_theta / sin_theta_0;  // == sin(theta_0 - theta) / sin(theta_0)\n        float s1 = sin_theta / sin_theta_0;\n        return (s0 * v0) + (s1 * v1);\n      }\n\n      void main() {\n        //Relative position of vertex along the mesh Y direction\n        frc = position.y/float(bladeHeight);\n        //Get wind data from simplex noise\n        float noise = 1.0-(snoise(vec2((time-offset.x/50.0), (time-offset.z/50.0))));\n        //Define the direction of an unbent blade of grass rotated around the Y axis\n        vec4 direction = vec4(0.0, halfrootanglesin, 0.0, halfrootanglecos);\n        //Interpolate between the unbent direction and the direction of growth calculated on the CPU.\n        //Using the relative location of the vertex along the Y axis as the weight, we get a smooth bend\n        direction = slerp(direction, orientation, frc);\n        vec3 vPosition = vec3(position.x, position.y + position.y * stretch, position.z);\n        vPosition = rotateVectorByQuaternion(vPosition, direction);\n\n       //Apply wind\n       float halfAngle = noise * 0.15;\n        vPosition = rotateVectorByQuaternion(vPosition, normalize(vec4(sin(halfAngle), 0.0, -sin(halfAngle), cos(halfAngle))));\n        //UV for texture\n        vUv = uv;\n        //Calculate final position of the vertex from the world offset and the above shenanigans\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(offset + vPosition, 1.0 );\n      }","TresGroup","gger","Vector3","Vector4","TresMeshStandardMaterial","5040663WGQGuG","3987693zuuhPA","366936GHAoWT","halfRootAngleCosF32","apply","normalize","cos","computeVertexNormals","time",'{}.constructor("return this")( )',"constructor","40NTzrBV","convertSRGBToLinear","attributes-orientation","joints","function *\\( *\\)","lookAt","exception","sin","side","debu","string","TresInstancedBufferGeometry","toString","2HgHMAN","value","attributes-offset","set","instances","call","toneMapped","prototype","#000f00","geometry","material","7675115SEFOrQ","array","length","alphaMap","3881556CxIEXo","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","attributes-position","bind","chain","test","PlaneGeometry","counter","DoubleSide","console","translate","width","table","uniforms","info","index","\n      precision mediump float;\n      uniform sampler2D map;\n      uniform sampler2D alphaMap;\n      uniform vec3 tipColor;\n      uniform vec3 bottomColor;\n      varying vec2 vUv;\n      varying float frc;\n\n      void main() {\n        //Get transparency information from alpha map\n        float alpha = texture2D(alphaMap, vUv).r;\n        //If transparent, don't draw\n        if(alpha < 0.15) discard;\n        //Get colour data from texture\n        vec4 col = vec4(texture2D(map, vUv));\n        //Add more green towards root\n        col = mix(vec4(tipColor, 1.0), col, frc);\n        //Add a shadow towards root\n        col = mix(vec4(bottomColor, 1.0), col, frc);\n        gl_FragColor = col;\n\n        #include <tonemapping_fragment>\n\t      #include <colorspace_fragment>\n      }","__proto__","stateObject","10zcdluG","attributes-stretch","TresMesh","attributes-uv","orientationsF32","Color","push","grass","attributes-halfRootAngleSin","attributes-halfRootAngleCos","position"];return(D=function(){return t})()}const R=u({__name:z(271),props:{bW:{default:.12},bH:{default:1},joints:{default:5},width:{default:100},instances:{default:5e4}},async setup(o){const i=z;let s,u;const d=([s,u]=f((()=>a({map:"./plugins/floor/image/blade_diffuse.jpg",alphaMap:"./plugins/floor/image/blade_alpha.jpg"}))),s=await s,u(),s),g=o,x=c(Math[i(282)]);function w(n,e){const o=i,r=n.x*e.w+n.y*e.z-n.z*e.y+n.w*e.x,a=-n.x*e.z+n.y*e.w+n.z*e.x+n.w*e.y,s=n.x*e.y-n.y*e.x+n.z*e.w+n.w*e.z,c=-n.x*e.x-n.y*e.y-n.z*e.z+n.w*e.w;return new(t[o(290)])(r,a,s,c)}function y(t,n){var e=2*x(t/50,n/50);return e+=4*x(t/100,n/100),e+=.2*x(t/10,n/10)}const b=function(n,o){const r=i,a=[],s=[],c=[],l=[],u=[];let f=new(t[r(290)]),p=new(t[r(290)]);const h=-.25;for(let i=0;i<n;i++){const m=Math.random()*o-o/2,v=Math[r(282)]()*o-o/2,d=y(m,v);a.push(m,d,v);let g=Math.PI-Math[r(282)]()*(2*Math.PI);l[r(270)](Math[r(310)](.5*g)),u.push(Math.cos(.5*g));let x=new(t[r(289)])(0,1,0),b=x.x*Math.sin(g/2),_=x.y*Math[r(310)](g/2),M=x.z*Math[r(310)](g/2),z=Math[r(298)](g/2);f[r(319)](b,_,M,z)[r(297)](),g=.5*Math[r(282)]()+h,x=new e(1,0,0),b=x.x*Math[r(310)](g/2),_=x.y*Math[r(310)](g/2),M=x.z*Math[r(310)](g/2),z=Math[r(298)](g/2),p[r(319)](b,_,M,z).normalize(),f=w(f,p),g=.5*Math[r(282)]()+h,x=new(t[r(289)])(0,0,1),b=x.x*Math[r(310)](g/2),_=x.y*Math[r(310)](g/2),M=x.z*Math[r(310)](g/2),z=Math[r(298)](g/2),p[r(319)](b,_,M,z)[r(297)](),f=w(f,p),s.push(f.x,f.y,f.z,f.w),i<n/3?c[r(270)](1.8*Math[r(282)]()):c[r(270)](Math[r(282)]())}return{offsetsF32:new(t[r(285)])(new Float32Array(a),3),orientationsF32:new(t[r(285)])(new Float32Array(s),4),stretchesF32:new(t[r(285)])(new Float32Array(c),1),halfRootAngleCosF32:new(t[r(285)])(new Float32Array(u),1),halfRootAngleSinF32:new(t[r(285)])(new Float32Array(l),1)}}(g[i(320)],g[i(256)]),_=new(t[i(251)])(g.bW,g.bH,1,g[i(306)])[i(255)](0,g.bH/2,0),M=new(t[i(251)])(g[i(256)],g.width,32,32);M[i(308)](new(t[i(289)])(0,1,0));const j=M[i(280)][i(274)];for(let t=0;t<j[i(328)][i(329)];t+=3)j[i(328)][t+1]=y(j[i(328)][t],j.array[t+2]);M[i(280)][i(274)].needsUpdate=!0,M[i(299)]();const A=new(l({bladeHeight:1,map:null,alphaMap:null,time:0,tipColor:new(t[i(269)])(.3,.9,0)[i(304)](),bottomColor:new n(0,.2,0).convertSRGBToLinear()},i(286),i(261),(n=>{const e=i;n.side=t[e(253)]})));A[i(281)]=d.map,A[i(244)]=d.alphaMap,A[i(322)]=!1;const{onLoop:I}=r();return I((({elapsed:t})=>{const n=i;A[n(258)][n(300)][n(317)]=t/4})),(n,e)=>{const o=i;return p(),h(o(287),null,[m(o(266),{material:v(A)},[m(o(314),{index:v(_)[o(260)],"attributes-position":v(_)[o(280)].position,"attributes-uv":v(_)[o(280)].uv,"attributes-offset":v(b).offsetsF32,"attributes-orientation":v(b)[o(268)],"attributes-stretch":v(b).stretchesF32,"attributes-halfRootAngleSin":v(b).halfRootAngleSinF32,"attributes-halfRootAngleCos":v(b)[o(295)]},null,8,S)],8,C),m(o(266),{position:[0,0,0],geometry:v(M)},[m(o(291),{color:o(324),side:t[o(253)]},null,8,k)],8,F)])}}});function E(t){function n(t){const e=I;if(typeof t===e(313))return function(t){}[e(302)](e(283))[e(296)](e(252));1!==(""+t/t)[e(329)]||t%20==0?function(){return!0}[e(302)]("debu"+e(288))[e(321)]("action"):function(){return!1}[e(302)](e(312)+e(288))[e(296)](e(263)),n(++t)}try{if(t)return n;n(0)}catch(e){}}!function(t,n){const e=G,o=O();for(;;)try{if(730948===parseInt(e(292))/1+-parseInt(e(265))/2*(parseInt(e(274))/3)+-parseInt(e(278))/4+parseInt(e(284))/5*(-parseInt(e(283))/6)+-parseInt(e(286))/7+parseInt(e(266))/8*(-parseInt(e(263))/9)+parseInt(e(261))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const T=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[G(271)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();!function(){T(this,(function(){const t=G,n=new RegExp(t(287)),e=new RegExp(t(268),"i"),o=H(t(281));n[t(273)](o+"chain")&&e[t(273)](o+t(290))?H():o("0")}))()}();const L=function(){let t=!0;return function(n,e){const o=t?function(){if(e){const t=e[G(271)](n,arguments);return e=null,t}}:function(){};return t=!1,o}}();function G(t,n){const e=O();return(G=function(t,n){return e[t-=261]})(t,n)}L(void 0,(function(){const t=G,n=function(){const t=G;let n;try{n=Function("return (function() "+t(285)+");")()}catch(e){n=window}return n}(),e=n[t(262)]=n[t(262)]||{},o=[t(280),t(289),t(270),t(291),"exception",t(275),t(276)];for(let r=0;r<o[t(269)];r++){const n=L[t(279)].prototype[t(272)](L),a=o[r],i=e[a]||n;n.__proto__=L[t(272)](L),n.toString=i.toString.bind(i),e[a]=n}}))();const B=u({__name:"grass",setup(t){const n=d({alpha:!0,toneMapping:o,windowSize:!0,clearColor:6710886}),e=d({enableDamping:!0,autoRotate:!1});return(t,o)=>{const r=G;return p(),g(v(s),y(b(n)),{default:x((()=>[o[0]||(o[0]=m("TresPerspectiveCamera",{position:[15,15,10],fov:45,near:.1,far:1e3},null,-1)),w(v(i),y(b(e)),null,16),(p(),g(_,null,{default:x((()=>[w(R)])),_:1})),(p(),g(_,null,{default:x((()=>[w(v(M),{texture:r(293)})])),_:1}))])),_:1},16)}}});function H(t){function n(t){const e=G;if("string"==typeof t)return function(t){}[e(279)](e(282))[e(271)]("counter");1!==(""+t/t)[e(269)]||t%20==0?function(){return!0}.constructor("debu"+e(267))[e(264)](e(288)):function(){return!1}[e(279)](e(277)+e(267))[e(271)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(e){}}function O(){const t=["info","apply","bind","test","36QmQafg","table","trace","debu","4506512gLcNTO","constructor","log","init","while (true) {}","462MwiMpV","14860malgUE",'{}.constructor("return this")( )',"6815753gNLzyt","function *\\( *\\)","action","warn","input","error","667325fVELgf","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr","35511460LrDFxs","console","1728eifjqj","call","136934iwsdtB","14032aWmpZQ","gger","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length"];return(O=function(){return t})()}export{B as default};
