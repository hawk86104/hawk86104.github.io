import{u as t,_ as o,a as n}from"./mergeTres.fWp7KF6E1722313330047.js";import{l as r}from"./utils.kZzAVceA1722313330047.js";import{$ as e}from"./@tresjs.Q03Md-En1722313330047.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as C,an as y}from"./@vue.Q1VpS3901722313330047.js";import{_ as w}from"./@fesjs.Tyv7j4eO1722313330047.js";import"./@amap.cDim55ZW1722313330047.js";import"./pinia.YMTINUAO1722313330047.js";import"./three.0L1oP_mX1722313330047.js";import"./three-mesh-bvh.Q4SF0_jl1722313330047.js";import"./tweakpane.yHWGBmom1722313330047.js";import"./@vueuse.UFv615y21722313330047.js";import"./vue-router.jRikjQi41722313330047.js";import"./lodash-es.nFpJXAf-1722313330047.js";import"./@qlin.yHhFDldE1722313330047.js";import"./@floating-ui.BPbuo5Gx1722313330047.js";import"./@juggle.7yjBMqoW1722313330047.js";const x=z;!function(t,o){const n=z,r=j();for(;;)try{if(450402===-parseInt(n(143))/1*(-parseInt(n(126))/2)+parseInt(n(123))/3*(-parseInt(n(144))/4)+-parseInt(n(133))/5*(parseInt(n(142))/6)+-parseInt(n(107))/7*(-parseInt(n(117))/8)+parseInt(n(124))/9+-parseInt(n(127))/10+-parseInt(n(131))/11*(parseInt(n(135))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[z(155)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=z,o=new RegExp(t(148)),n=new RegExp(t(132),"i"),r=A(t(111));o[t(116)](r+t(137))&&n.test(r+t(121))?A():r("0")}))()}();const I=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[z(155)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=z,o=function(){const t=z;let o;try{o=Function(t(129)+t(109)+");")()}catch(n){o=window}return o}(),n=o.console=o[t(139)]||{},r=[t(128),"warn",t(119),t(112),t(134),"table","trace"];for(let e=0;e<r[t(153)];e++){const o=I[t(152)].prototype[t(125)](I),a=r[e],i=n[a]||o;o.__proto__=I.bind(I),o[t(164)]=i.toString[t(125)](i),n[a]=o}}))();const S=["position",x(115),x(154)];function j(){const t=["3591981hFwoXk","bind","272746RDuEsH","2540860MevLxE","log","return (function() ","debu","3300220ejGzIZ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","51990iDYqAz","exception","12MNjiEH","positionArray","chain","atan","console","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","tbgRef","342TOcCXj","5jDvReI","61044oBSTHX","TresBufferGeometry","far","while (true) {}","function *\\( *\\)","cameraState","buildingModels","exp","constructor","length","normal","apply","value","TresGroup","u_zoom","uniforms","gger","action","buildings","mapHandle","toString","343KCqKsJ","u_near",'{}.constructor("return this")( )',"u_far","init","error","geometry","call","faceUv","test","89264IwzDXN","customCoords","info","push","input","lngLatToCoord","6PBmbZr"];return(j=function(){return t})()}function z(t,o){const n=j();return(z=function(t,o){return n[t-=107]})(t,o)}const R=a({__name:x(150),setup(o){const n=t(),a=t=>{const o=z;for(let r=0;r<t[o(153)];r+=3){const e=[t[r],t[r+1]],a=n.mapHandle.customCoords[o(122)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n.cameraState&&(async()=>{const t=z,o=await r(t(140),t(162));for(let n=0;n<o[t(153)];n++){const r=o[n];a(r[t(113)]);const e=new Float32Array(r[t(113)]),i=new Float32Array(r[t(115)]),l=new Float32Array(r[t(113)][t(153)]);d[t(120)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=z;n[t(149)]&&(g[t(159)][t(158)][t(156)]=n[t(163)].getZoom(),g[t(159)][t(108)][t(156)]=n[t(149)].near,g[t(159)][t(110)][t(156)]=n[t(149)][t(146)])})),(t,o)=>{const n=z;return c(),s(n(157),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s("TresMesh",{key:""+o},[p(r(145),{ref_for:!0,ref:r(141),position:[t[r(136)],3],faceUv:[t.uvArray,2],normal:[t.normalArray,3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function A(t){function o(t){const n=z;if("string"==typeof t)return function(t){}.constructor(n(147)).apply("counter");1!==(""+t/t)[n(153)]||t%20==0?function(){return!0}[n(152)](n(130)+n(160))[n(114)](n(161)):function(){return!1}.constructor(n(130)+n(160))[n(155)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}function F(){const t=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","string","685732tvJTEq","init","gger","1119981hMeWaL","apply","45SXbJgf","function *\\( *\\)","while (true) {}","table","tresCanvas","info","debu","21469bPbLdp","prototype","chain","bind",'{}.constructor("return this")( )',"length","4586210IuGOtE","call","console","__proto__","86392ZCKFRq","log","59496sNLwji","action","return (function() ","buildings","TresCanvas","trace","TresPerspectiveCamera","846rFkiOA","750itBwzA","darkblue","constructor","tcRef","data-v-40288e17","error","722868iEembJ","warn","exception","toString","counter","test"];return(F=function(){return t})()}const P=U;!function(t,o){const n=U,r=F();for(;;)try{if(380421===parseInt(n(223))/1+-parseInt(n(215))/2+-parseInt(n(226))/3+parseInt(n(199))/4*(-parseInt(n(228))/5)+parseInt(n(209))/6*(parseInt(n(189))/7)+parseInt(n(201))/8*(parseInt(n(208))/9)+-parseInt(n(195))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const E=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(227)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){E(this,(function(){const t=U,o=new RegExp(t(229)),n=new RegExp(t(221),"i"),r=T(t(224));o[t(220)](r+t(191))&&n[t(220)](r+"input")?T():r("0")}))()}();const L=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[U(227)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();L(void 0,(function(){const t=U;let o;try{o=Function(t(203)+t(193)+");")()}catch(e){o=window}const n=o[t(197)]=o[t(197)]||{},r=[t(200),t(216),t(187),t(214),t(217),t(231),t(206)];for(let a=0;a<r[t(194)];a++){const o=L[t(211)][t(190)][t(192)](L),e=r[a],i=n[e]||o;o[t(198)]=L[t(192)](L),o.toString=i[t(218)][t(192)](i),n[e]=o}}))();const M=t=>(C(P(213)),t=t(),y(),t),D=M((()=>p(P(207),{fov:60,near:.1,far:2e3},null,-1))),k=M((()=>p("TresAmbientLight",{intensity:.5},null,-1)));function U(t,o){const n=F();return(U=function(t,o){return n[t-=187]})(t,o)}function T(t){function o(t){const n=U;if(typeof t===n(222))return function(t){}[n(211)](n(230)).apply(n(219));1!==(""+t/t)[n(194)]||t%20==0?function(){return!0}.constructor(n(188)+n(225))[n(196)](n(202)):function(){return!1}[n(211)](n(188)+n(225)).apply("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const N=w(a({__name:P(204),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=U,l=d(i(205));return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(210)}),g(l,v({id:i(232),ref:i(212)},e),{default:m((()=>[D,k,g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{N as default};
