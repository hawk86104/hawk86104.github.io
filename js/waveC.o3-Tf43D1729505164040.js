import{U as e,Y as n}from"./@tresjs.IsKybBdF1729505164040.js";import{_ as t,k as o,bU as r}from"./three.YREzp-_G1729505164040.js";import{P as i}from"./tweakpane.yHWGBmom1729505164040.js";import{d as a,w as l,o as u,E as c,L as v,u as s,r as f,e as p,f as g,g as d,j as m,aj as y,ak as x,m as P}from"./@vue.JNsx1iN61729505164040.js";import"./@vueuse.9dhnH8nd1729505164040.js";const z=S;!function(e,n){const t=S,o=C();for(;;)try{if(124102===-parseInt(t(313))/1+-parseInt(t(330))/2*(-parseInt(t(296))/3)+parseInt(t(305))/4*(parseInt(t(347))/5)+-parseInt(t(342))/6+parseInt(t(345))/7+-parseInt(t(282))/8*(-parseInt(t(319))/9)+parseInt(t(312))/10*(-parseInt(t(346))/11))break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[S(322)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=S,n=new RegExp(e(318)),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=A(e(289));n[e(323)](o+"chain")&&t[e(323)](o+"input")?A():o("0")}))()}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[S(322)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function S(e,n){const t=C();return(S=function(e,n){return t[e-=279]})(e,n)}function C(){const e=["Vector2","function *\\( *\\)","91737NdyULX","log","uPerlinWaveAmplitude","apply","test","TresShaderMaterial","uPerlinWaveIterations","colorDamping","TresPlaneGeometry","uColorOffset","prototype","4hUuEee","string","perlinWaveAmplitude","fragmentShader","setStyle","peakColor","uWaveAmplitude","gger","while (true) {}","table","perlinWaveFrequency","value","985746EqdBLC","perlinWaveSpeed","uSinWaveFrequency","686616iHqzuA","11yuZaYc","2645CSuMkL","constructor","uSinWaveSpeed","error","set","counter","__proto__","return (function() ","176OcmSYu","uTime","action","info","rotation-x","stateObject","debu","init","bind","wireframe","DoubleSide","vertexShader","uColorDamping","call","368643tUfYlp","perlinWaveIterations","uPerlinWaveFrequency","trace","waveAmplitude","Color","#184650","uPeakColor","valleyColor","1504ADVYhL","waveC","length","colorOffset","sinWaveFrequency","exception","sinWaveSpeed","2758060oAmWBr","202801jKLGCB","uValleyColor","toString",'{}.constructor("return this")( )'];return(C=function(){return e})()}w(void 0,(function(){const e=S;let n;try{n=Function(e(281)+e(316)+");")()}catch(r){n=window}const t=n.console=n.console||{},o=[e(320),"warn",e(285),e(350),e(310),e(339),e(299)];for(let i=0;i<o[e(307)];i++){const n=w.constructor[e(329)][e(290)](w),r=o[i],a=t[r]||n;n[e(280)]=w[e(290)](w),n[e(315)]=a[e(315)][e(290)](a),t[r]=n}}))();const I=[z(286)],h=v(z(327),{args:[10,10,512,512]},null,-1),_=["side",z(293),z(333),"wireframe"],b=a({__name:z(306),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:"#b367ff"},valleyColor:{default:z(302)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const r=z,i=n,a={uTime:{value:0},uPeakColor:{value:new(t[r(301)])(i[r(335)])},uValleyColor:{value:new(t[r(301)])(i[r(304)])},uColorOffset:{value:i.colorOffset},uColorDamping:{value:i.colorDamping},uSinWaveFrequency:{value:new(t[r(317)])(i[r(309)].x,i[r(309)].y)},uWaveAmplitude:{value:i[r(300)]},uSinWaveSpeed:{value:new o(i[r(311)].x,i[r(311)].y)},uPerlinWaveIterations:{value:i.perlinWaveIterations},uPerlinWaveFrequency:{value:i[r(340)]},uPerlinWaveAmplitude:{value:i[r(332)]},uPerlinWaveSpeed:{value:i[r(343)]}},{onLoop:f}=e();return f((({elapsed:e})=>{const n=r;a[n(283)][n(341)]=e})),l((()=>i),(()=>{const e=r;a[e(303)].value[e(334)](i[e(335)]),a[e(314)][e(341)][e(334)](i[e(304)]),a[e(328)][e(341)]=i[e(308)],a[e(294)].value=i[e(326)],a[e(344)][e(341)][e(351)](i[e(309)].x,i[e(309)].y),a[e(336)][e(341)]=i.waveAmplitude,a[e(349)].value[e(351)](i[e(311)].x,i[e(311)].y),a[e(325)][e(341)]=i[e(297)],a[e(298)][e(341)]=i[e(340)],a[e(321)][e(341)]=i[e(332)],a.uPerlinWaveSpeed.value=i[e(343)]}),{deep:!0}),(e,n)=>{const o=r;return u(),c("TresMesh",{"rotation-x":-Math.PI/2,"position-y":1},[h,v(o(324),{side:t[o(292)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:a,wireframe:e[o(291)]},null,8,_)],8,I)}}});function A(e){function n(e){const t=S;if(typeof e===t(331))return function(e){}[t(348)](t(338))[t(322)](t(279));1!==(""+e/e)[t(307)]||e%20==0?function(){return!0}[t(348)](t(288)+t(337))[t(295)](t(284)):function(){return!1}[t(348)]("debu"+t(337)).apply(t(287)),n(++e)}try{if(e)return n;n(0)}catch(t){}}function k(){const e=["152775OlBkFO","sinWaveFrequency","26182541ppdrSw","TresPerspectiveCamera","133572rToEIo","toString","counter","info","stateObject","trace","exception","constructor","chain","peakColor","string","length","bind","error","debu","山谷颜色","action","小波浪层数","log","apply","344XGedIh","colorDamping","call","NoToneMapping","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","49848PjmCMo","colorOffset","1547xPjNhA","inline","while (true) {}","颜色抑制","山峰颜色","perlinWaveSpeed","正弦波振幅","perlinWaveIterations","260kEmfju","valleyColor","1042613lWzZul","addBinding","prototype","2932998PjDxro","warn","test","waveC","console","init","table","正弦波速度","正弦波频率","function *\\( *\\)","SRGBColorSpace","11704bfieqm","__proto__","sinWaveSpeed","gger","waveAmplitude","#ff6767","return (function() ","70vkuIHd","小波浪速度"];return(k=function(){return e})()}const q=E;!function(e,n){const t=E,o=k();for(;;)try{if(957064===parseInt(t(386))/1+-parseInt(t(389))/2+-parseInt(t(374))/3*(parseInt(t(369))/4)+parseInt(t(343))/5*(parseInt(t(349))/6)+-parseInt(t(376))/7*(parseInt(t(336))/8)+parseInt(t(345))/9*(parseInt(t(384))/10)+parseInt(t(347))/11)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const F=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[E(368)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){F(this,(function(){const e=E,n=new RegExp(e(334)),t=new RegExp(e(373),"i"),o=B(e(394));n[e(391)](o+e(357))&&t.test(o+"input")?B():o("0")}))()}();const T=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[E(368)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();T(void 0,(function(){const e=E,n=function(){const e=E;let n;try{n=Function(e(342)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n[e(393)]=n[e(393)]||{},o=[e(367),e(390),e(352),e(362),e(355),e(395),e(354)];for(let r=0;r<o[e(360)];r++){const n=T[e(356)][e(388)][e(361)](T),i=o[r],a=t[i]||n;n[e(337)]=T[e(361)](T),n[e(350)]=a[e(350)][e(361)](a),t[i]=n}}))();const j=v(q(348),{position:[10,10,10]},null,-1),O=v("TresGridHelper",{args:[10,10]},null,-1);function E(e,n){const t=k();return(E=function(e,n){return t[e-=332]})(e,n)}const M=a({__name:q(392),setup(e){const o=q,a={clearColor:"#222",shadows:!0,alpha:!1,shadowMapType:r,outputColorSpace:t[o(335)],toneMapping:t[o(372)],useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},l=f({peakColor:o(341),valleyColor:"#310039",wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),c=new i({title:"参数",expanded:!0});return c.addBinding(l,"wireframe",{label:"网格化"}),c.addBinding(l,o(358),{label:o(380)}),c[o(387)](l,o(385),{label:o(364)}),c.addBinding(l,o(375),{label:"颜色偏移",min:.01,max:3,step:.01}),c.addBinding(l,o(370),{label:o(379),min:.01,max:6,step:.01}),c[o(387)](l,o(346),{label:o(333),picker:o(377),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),c[o(387)](l,o(340),{label:o(382),min:0,max:2,step:.01}),c.addBinding(l,o(338),{label:o(332),picker:"inline",x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),c[o(387)](l,o(383),{label:o(366),min:1,max:7,step:.1}),c[o(387)](l,"perlinWaveFrequency",{label:"小波浪频率",min:0,max:5,step:.01}),c[o(387)](l,"perlinWaveAmplitude",{label:"小波浪幅度",min:0,max:2,step:.01}),c[o(387)](l,o(381),{label:o(344),min:0,max:2,step:.01}),(e,t)=>{const o=p("TresCanvas");return u(),g(o,P(a,{"window-size":""}),{default:d((()=>[j,m(s(n)),O,m(b,y(x(l)),null,16)])),_:1},16)}}});function B(e){function n(e){const t=E;if(typeof e===t(359))return function(e){}[t(356)](t(378))[t(368)](t(351));1!==(""+e/e)[t(360)]||e%20==0?function(){return!0}[t(356)](t(363)+t(339))[t(371)](t(365)):function(){return!1}[t(356)](t(363)+t(339)).apply(t(353)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{M as default};
