import{a}from"./@tresjs.CL21cZKR1753438381880.js";import{P as o}from"./tweakpane.C0HtAJSg1753438381880.js";import{_ as e,a as s,b as r}from"./depth.vue_vue_type_script_setup_true_lang.QyALxneN1753438381880.js";import"./lamina.CqyTVVMk1753438381880.js";import"./index.BTJd7YvD1753438381880.js";import{_ as l}from"./reflectorDUDV.vue_vue_type_script_setup_true_lang.BKjUSglB1753438381880.js";import{d as t,r as i,ac as p,h as n,e as m,o as d,f as c,I as f,j as h,u,a7 as j,a8 as g,a5 as _,m as v}from"./@vue.BzMISRrV1753438381880.js";import{_ as w,ce as B,V as b}from"./three.0XnumNGx1753438381880.js";import"./postprocessing.Bts7n4b31753438381880.js";import"./@vueuse.B7eBfla_1753438381880.js";import"./glsl-tokenizer.C3JQXhZf1753438381880.js";import"./@amap.CGUF9xH41753438381880.js";import"./glsl-token-descope.fj_-KFeA1753438381880.js";import"./glsl-token-depth.Duvdnvlt1753438381880.js";import"./glsl-token-scope.BdCfdvWe1753438381880.js";import"./glsl-token-properties.DKXemF9b1753438381880.js";import"./glsl-token-assignments.Ctx_yUgS1753438381880.js";import"./glsl-token-string.BGVQgvcG1753438381880.js";import"./glsl-token-functions.yG5Yfd2u1753438381880.js";import"./object-hash.DYHtc3m61753438381880.js";import"./jszip.CUJi8Lct1753438381880.js";import"./all.three.D8-MkhyJ1753438381880.js";import"./oimophysics.BBtHVm4j1753438381880.js";import"./reflectorDiffuse.DJeQYKJE1753438381880.js";import"./vite-plugin-qiankun.B06WoCqG1753438381880.js";import"./index.D__mh6AF1753438381880.js";import"./three-stdlib.BgQiFB3D1753438381880.js";import"./whiteFloor.DTFSSVv61753438381880.js";const k={position:[0,.5,0]},x=t({__name:"layerMaterial",setup(t){const x=i({clearColor:"#000000",shadows:!0,alpha:!1,antialias:!0,pixelRatio:window.devicePixelRatio,shadowMapType:B,outputColorSpace:w,toneMapping:void 0,useLegacyLights:!0}),y=i({autoRotate:!0}),A=p({color1:"#000000",alpha1:1,colorA:"#ed08ff",colorB:"#1bff00",alpha2:1.1,near:.87,far:299.77}),T=new o({expanded:!0}),C=T.addFolder({title:"Color层"});C.addBinding(A,"color1",{label:"颜色"}),C.addBinding(A,"alpha1",{label:"alpha",step:.1,min:0,max:2});const D=T.addFolder({title:"Depth层"});return D.addBinding(A,"colorA",{label:"颜色A"}),D.addBinding(A,"colorB",{label:"颜色B"}),D.addBinding(A,"alpha2",{label:"alpha",step:.1,min:0,max:2}),D.addBinding(A,"near",{label:"near",step:.01,min:0,max:1}),D.addBinding(A,"far",{label:"far",step:.01,min:299,max:300}),(o,t)=>{const i=n("TresCanvas");return d(),m(i,v(x,{"window-size":""}),{default:c((()=>[t[1]||(t[1]=f("TresPerspectiveCamera",{position:[5,10,5],fov:30,near:1,far:1e3},null,-1)),h(u(a),j(g(y)),null,16),t[2]||(t[2]=f("TresAmbientLight",{color:"#ffffff",intensity:2},null,-1)),(d(),m(_,null,{default:c((()=>[h(u(l),{reflectivity:2.6,showGridHelper:"",position:[0,-.6,0]})])),_:1})),f("TresMesh",k,[t[0]||(t[0]=f("TresSphereGeometry",{args:[1,500,500]},null,-1)),h(u(e),{color:"white",lighting:"physical"},{default:c((()=>[h(u(s),{color:u(A).color1,alpha:u(A).alpha1},null,8,["color","alpha"]),h(u(r),{colorA:u(A).colorA,colorB:u(A).colorB,alpha:u(A).alpha2,mode:"normal",near:u(A).near,far:u(A).far,origin:new b(100,100,100)},null,8,["colorA","colorB","alpha","near","far","origin"])])),_:1})])])),_:1},16)}}});export{x as default};
