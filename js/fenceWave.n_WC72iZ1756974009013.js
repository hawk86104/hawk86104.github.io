import{P as e}from"./tweakpane.C0HtAJSg1756974009013.js";import"./vanilla.esm.5.5.0.DgttBzoc1756974009013.js";import"./SPE.DDuzZr0x1756974009013.js";import"./@fesjs.BxH8SrKG1756974009013.js";import{e as t}from"./@tresjs.C2b5OFct1756974009013.js";import{g as o}from"./utils.MFxA3x6c1756974009013.js";import{d as i,b as n,a2 as s,w as a,G as r,o as p,I as u,u as l,a7 as m,a8 as y,s as f,t as c,r as d,e as v,f as h,j as x,m as j}from"./@vue.pEDXJ_3Z1756974009013.js";import{C as g,a3 as q}from"./three.QlBabAUP1756974009013.js";import"./HeightCorrection.Bq98L9tL1756974009013.js";import"./three-custom-shader-material.o_a6GBpn1756974009013.js";import{b as _}from"./pagesShow.vue_vue_type_script_setup_true_lang.BP3CEasy1756974009013.js";import"./object-hash.BUfjm0yL1756974009013.js";import"./@amap.CGUF9xH41756974009013.js";import"./jszip.BU7m6sw81756974009013.js";import"./vue-router.BzNOprYp1756974009013.js";import"./lodash-es.C7pWAXPe1756974009013.js";import"./pinia.Cod4x9ah1756974009013.js";import"./@qlin.q6OWdsQV1756974009013.js";import"./@babel.BPq7uOAK1756974009013.js";import"./@floating-ui.BFjFSAYt1756974009013.js";import"./@juggle.CcBCnTIR1756974009013.js";import"./postprocessing.DuMTjsTx1756974009013.js";import"./@vueuse.BbWOQEYU1756974009013.js";import"./three-mesh-bvh.DVIvx3oK1756974009013.js";import"./buildingsCustomShaderMaterial.DyBo--wu1756974009013.js";const b=["position","uv"],N=i({__name:"wave",props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:"#ffff00"},opacity:{default:.8},height:{default:100},frequencyNum:{default:8},speed:{default:1}},setup(e){const i=e,f=n(),c={side:q,transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:"\nvarying vec2 vUv; \nvoid main(){\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",fragmentShader:"\n\tuniform float uTime;\n\tvarying vec2 vUv;\n\t#define PI 3.14159265\n  uniform float speed;\n  uniform vec3 color;\n  uniform float opacity;\n  uniform float frequencyNum;\n\tvoid main(){\n\t\t\t\n\tfloat amplitude = 1.;\n\n\tfloat x = vUv.x;\n\tfloat y = sin(x * frequencyNum) ;\n\tfloat t = 0.01*(-uTime*130.0*speed);\n\ty += sin(x*frequencyNum*2.1 + t)*4.5;\n\ty += sin(x*frequencyNum*1.72 + t*1.121)*4.0;\n\ty += sin(x*frequencyNum*2.221 + t*0.437)*5.0;\n\ty += sin(x*frequencyNum*3.1122+ t*4.269)*2.5;\n\ty *= amplitude*0.06;\n\ty /= 3.;\n\ty += 0.55;\n\n\tfloat ap = step(vUv.y,y) * (y-vUv.y)/y;\n\n\tgl_FragColor = vec4(color,ap*opacity);\n}\n\t",uniforms:{uTime:{type:"pv2",value:0},color:{type:"uvs",value:new g(i.color)},opacity:{type:"pv2",value:i.opacity},frequencyNum:{type:"pv2",value:i.frequencyNum},speed:{type:"pv2",value:i.speed}}};let d=null,v=null;function h(e=[],t){const o=[],i=[];for(let n=0,s=o.length,a=i.length;n<e.length-1;n++){let r=1,p=e[n],u=e[n+1];o[s++]=p.x,o[s++]=0,o[s++]=p.y,i[a++]=0,i[a++]=0,o[s++]=u.x,o[s++]=0,o[s++]=u.y,i[a++]=1,i[a++]=0,o[s++]=p.x,o[s++]=t,o[s++]=p.y,i[a++]=0,i[a++]=r,o[s++]=p.x,o[s++]=t,o[s++]=p.y,i[a++]=0,i[a++]=r,o[s++]=u.x,o[s++]=0,o[s++]=u.y,i[a++]=1,i[a++]=0,o[s++]=u.x,o[s++]=t,o[s++]=u.y,i[a++]=1,i[a++]=r}d=new Float32Array(o),v=new Float32Array(i)}const{centerPoint:x,points:j}=o(i.positionSrc);h(j,i.height);const{onLoop:_}=t();return _((({delta:e})=>{c.uniforms.uTime.value+=e})),s((()=>{i.color&&(c.uniforms.color.value=new g(i.color)),i.opacity&&(c.uniforms.opacity.value=i.opacity),i.frequencyNum&&(c.uniforms.frequencyNum.value=i.frequencyNum),i.speed&&(c.uniforms.speed.value=i.speed),f.value&&f.value.position.set(x.x,f.value.position.y,x.y)})),a((()=>i.height),(e=>{h(j,i.height),f.value&&f.value.position.set(x.x,f.value.position.y,x.y)})),(e,t)=>(p(),r("TresMesh",{renderOrder:2200,ref_key:"tresMeshRef",ref:f},[u("TresBufferGeometry",{position:[l(d),3],uv:[l(v),2]},null,8,b),u("TresShaderMaterial",m(y(c)),null,16)],512))}}),w=i({__name:"fenceWave",setup(t){const o=n();f((()=>{c((()=>{o.value&&o.value.$refs.perspectiveCameraRef.position.set(580,360,500)}))}));const i=d({color:"#00ffdd",opacity:.8,frequencyNum:6,speed:1,height:100}),s=new e({title:"围墙效果",expanded:!0});return s.addBinding(i,"color",{label:"颜色"}),s.addBinding(i,"opacity",{label:"透明度",min:0,max:1,step:.1}),s.addBinding(i,"speed",{label:"滚动速度",min:.1,max:5,step:.001}),s.addBinding(i,"frequencyNum",{label:"波浪数",min:0,max:20,step:1}),s.addBinding(i,"height",{label:"高度",min:10,max:300,step:1}),(e,t)=>(p(),v(_,{ref_key:"pagesShowRef",ref:o},{ability:h((()=>[x(l(N),{"position-y":20,positionSrc:[{x:-292,y:4.27*40},{x:-296,y:402},{x:-196,y:401.2},{x:-196,y:178.4},{x:-292,y:4.27*40}],height:180}),x(l(N),j({"position-y":20,positionSrc:[{x:10.8,y:40*-1.19},{x:12.8,y:-220},{x:-303.6,y:-236},{x:-304,y:-52},{x:10.8,y:40*-1.19}]},i),null,16)])),_:1},512))}});export{w as default};
