import{m as n,a as e,e as t,U as r}from"./@tresjs.C3WO4ZW41730883607874.js";import{W as o,k as i,c9 as s,c4 as a,c2 as u,a0 as c,n as f,bf as l}from"./three.fIUcjaNz1730883607874.js";import{d as v,a6 as p,a3 as m,o as d,D as h,J as g,u as y,F as w,e as x,f as D,g as I,j as S,al as R,m as _}from"./@vue.Cfu43fwq1730883607874.js";import"./@vueuse.BSum2YDk1730883607874.js";const b=E;function E(n,e){const t=j();return(E=function(n,e){return t[n-=401]})(n,e)}!function(n,e){const t=E,r=j();for(;;)try{if(890887===-parseInt(t(407))/1*(-parseInt(t(421))/2)+parseInt(t(443))/3*(-parseInt(t(427))/4)+-parseInt(t(423))/5+-parseInt(t(429))/6*(-parseInt(t(447))/7)+parseInt(t(450))/8+-parseInt(t(419))/9+parseInt(t(401))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[E(449)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){C(this,(function(){const n=E,e=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z("init");e[n(424)](r+"chain")&&t[n(424)](r+n(453))?z():r("0")}))()}();const P=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[E(449)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();P(void 0,(function(){const n=E;let e;try{e=Function(n(425)+n(410)+");")()}catch(o){e=window}const t=e[n(437)]=e[n(437)]||{},r=["log",n(411),n(446),"error",n(430),n(405),n(432)];for(let i=0;i<r[n(408)];i++){const e=P[n(441)][n(413)][n(403)](P),o=r[i],s=t[o]||e;e.__proto__=P[n(403)](P),e.toString=s[n(428)].bind(s),t[o]=e}}))();const T=["side",b(435)],M=["side"];function j(){const n=["console","width","texture","derivatives","constructor","debu","2469153wHaBwP","tShadow","uniforms","info","7XOIpmD","TresMesh","apply","12596752wFzolx","renderToScreen","value","input","12772490uQKLMd","action","bind","addPass","table","extensions","45469PzIOeh","length","gger",'{}.constructor("return this")( )',"warn","innerHeight","prototype","TresMeshPhongMaterial","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","noiseContour","while (true) {}","innerWidth","12100968trpwHl","iTime","26JXIdhY","call","5012905scvTyu","test","return (function() ","material","4tIsdtj","toString","3708786ZDakTm","exception","string","trace","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","#ffffff","rotation-x","TresBoxGeometry"];return(j=function(){return n})()}const N=b(415),k=b(433),U=v({__name:b(416),async setup(r){const v=b;let x,D;const{camera:I,renderer:S,scene:R,sizes:_}=n(),E=([x,D]=p((()=>e({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),x=await x,D(),x),{onLoop:C,onAfterLoop:P}=t(),j=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),U=new i(window[v(418)],window[v(412)]);let z=null;const F=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:U}},vertexShader:N,fragmentShader:k}),L=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:E}},vertexShader:N,fragmentShader:"\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n"});return L[v(451)]=!0,L[v(426)][v(406)][v(440)]=!0,m((()=>{const n=v;_[n(438)][n(452)]&&(z=new a(S[n(452)]),z.addPass(new u(R[n(452)],I.value)),z[n(404)](F),z[n(404)](L))})),C((({elapsed:n})=>{const e=v;S.value.render(R[e(452)],I[e(452)],j),F[e(445)][e(444)][e(452)]=j[e(439)],L[e(445)][e(420)][e(452)]=n})),P((()=>{z&&z.render()})),(n,e)=>{const t=v;return d(),h(w,null,[g(t(448),{ref:"noiseContourMeshRef2",side:y(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g(t(436),{args:[400,400,400]},null,-1),g(t(414),{color:t(434),shininess:0},null,-1)]),8,T),g(t(448),{ref:"noiseContourMeshRef1",side:y(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g("TresMeshPhongMaterial",{color:"#ffffff",shininess:0},null,-1)]),8,M)],64)}}});function z(n){function e(n){const t=E;if(typeof n===t(431))return function(n){}[t(441)](t(417))[t(449)]("counter");1!==(""+n/n)[t(408)]||n%20==0?function(){return!0}[t(441)](t(442)+"gger")[t(422)](t(402)):function(){return!1}.constructor(t(442)+t(409))[t(449)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}const F=B;!function(n,e){const t=B,r=Z();for(;;)try{if(857106===parseInt(t(421))/1*(parseInt(t(431))/2)+-parseInt(t(419))/3*(-parseInt(t(413))/4)+-parseInt(t(444))/5+parseInt(t(439))/6+-parseInt(t(440))/7+-parseInt(t(417))/8*(parseInt(t(426))/9)+parseInt(t(436))/10)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const L=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[B(414)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){L(this,(function(){const n=B,e=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=O(n(423));e[n(418)](r+n(425))&&t.test(r+n(433))?O():r("0")}))()}();const A=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[B(414)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function B(n,e){const t=Z();return(B=function(n,e){return t[n-=410]})(n,e)}A(void 0,(function(){const n=B,e=function(){const n=B;let e;try{e=Function(n(434)+n(410)+");")()}catch(t){e=window}return e}(),t=e[n(429)]=e[n(429)]||{},r=["log","warn",n(412),"error",n(438),n(448),n(446)];for(let o=0;o<r[n(447)];o++){const e=A[n(411)][n(441)][n(420)](A),i=r[o],s=t[i]||e;e[n(437)]=A[n(420)](A),e[n(445)]=s[n(445)].bind(s),t[i]=e}}))();const H={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4};function Z(){const n=["call","776FtyVhH","test","3jeclYw","bind","1154774rLjaNP","TresCanvas","init","#ffffff","chain","80991imgoyH","#000000","debu","console","TresDirectionalLight","2gLfsJi","TresAmbientLight","input","return (function() ","counter","8626200WySpqM","__proto__","exception","4850610MCkEyc","7930510QVhWWM","prototype","action","stateObject","41845MvjdoH","toString","trace","length","table","red","TresPerspectiveCamera","gger",'{}.constructor("return this")( )',"constructor","info","181916mCkZuI","apply","noiseContourPage"];return(Z=function(){return n})()}const W=v({__name:F(415),setup(n){const e=F,t={clearColor:e(427),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=x(i(422));return d(),D(s,_(t,{"window-size":""}),{default:I((()=>[g(i(450),H,null,512),S(y(r)),o[0]||(o[0]=g(i(432),{color:i(424)},null,-1)),o[1]||(o[1]=g(i(430),{position:[400,400,400],intensity:1,color:i(449)},null,-1)),(d(),D(R,null,{default:I((()=>[S(U)])),_:1}))])),_:1},16)}}});function O(n){function e(n){const t=B;if("string"==typeof n)return function(n){}[t(411)]("while (true) {}").apply(t(435));1!==(""+n/n)[t(447)]||n%20==0?function(){return!0}[t(411)](t(428)+"gger")[t(416)](t(442)):function(){return!1}[t(411)]("debu"+t(451)).apply(t(443)),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{W as default};
