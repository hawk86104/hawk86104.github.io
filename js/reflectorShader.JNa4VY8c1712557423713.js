import{a0 as m,a1 as p,ap as d,r as c,o,v as s,D as n,a as t,K as i,ab as _,a_ as f,af as u,a9 as g,aa as h,X as a}from"./vendor.dUBjHEtG1712557423713.js";import{_ as v}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.C88RBys21712557423713.js";import"./ReflectorMaterial.Jzr7izjF1712557423713.js";import"./dither.glsl.y2WXw1t-1712557423713.js";import"./OimoPhysicsBuffer.cRLFY5r71712557423713.js";const x=a("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),B=a("TresAmbientLight",{intensity:10},null,-1),C=a("TresMesh",{position:[0,2,-4]},[a("TresBoxGeometry",{args:[1,1,1]}),a("TresMeshNormalMaterial")],-1),M=m({__name:"reflectorShader",setup(b){const e=p({reflectivity:.49,mirror:.25,mixStrength:26,showGridHelper:!0}),r=new d({title:"镜面参数",expanded:!0});return r.addBinding(e,"reflectivity",{label:"反射率",min:.01,max:1,step:.01}),r.addBinding(e,"mirror",{label:"镜面化",min:0,max:1,step:.01}),r.addBinding(e,"mixStrength",{label:"混合",min:0,max:100,step:1}),r.addBinding(e,"showGridHelper",{label:"显示网格"}),(T,w)=>{const l=c("TresCanvas");return o(),s(l,{clearColor:"#201919","window-size":""},{default:n(()=>[x,t(i(_),{enableDamping:""}),B,t(i(f),{args:[1,1,1],color:"orange",position:[3,1,0]}),C,(o(),s(u,null,{default:n(()=>[t(v,g(h(e)),null,16)]),_:1}))]),_:1})}}});export{M as default};
