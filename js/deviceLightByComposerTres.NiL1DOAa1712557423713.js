import{a0 as P,aC as $,aD as F,aj as G,bK as w,a5 as K,ay as V,o as g,c as X,X as n,K as v,E as j,a8 as O,a1 as _,a2 as W,a3 as q,a4 as H,ap as I,r as J,v as M,D as x,a7 as Q,a as y,a9 as S,aa as k,ab as U,af as Y}from"./vendor.dUBjHEtG1712557423713.js";import{r as Z,u as ee}from"./device.litNlxta1712557423713.js";import"./BufferGeometryUtils.H8mHnHC81712557423713.js";import"./EffectComposer.5Aa6ATvp1712557423713.js";import"./UnrealBloomPass.Vqu0VzRV1712557423713.js";const te=["object"],ae=["object"],se=P({__name:"ByComposerTres",props:{threshold:{default:0},strength:{default:.972},radius:{default:.21}},async setup(b){let r,l;const t=b,{nodes:a}=([r,l]=$(()=>F("./plugins/industry4/model/modelDraco.glb",{draco:!0,decoderPath:"./draco/"})),r=await r,l(),r),i=Z(a.Sketchfab_model),{camera:d,renderer:u,scene:p,sizes:C}=G();let h=null,m=null,s=null;const T=new w({color:"black"});K(()=>{if(d.value){const{finalComposer:e,effectComposer:o,bloomPass:E}=ee(p.value,d.value,u.value,C.width.value,C.height.value);h=e,m=o,s=E,s.threshold=t.threshold,s.strength=t.strength,s.radius=t.radius}t.threshold&&(s.threshold=t.threshold),t.strength&&(s.strength=t.strength),t.radius&&(s.radius=t.radius)});const c={},L=e=>{e.isMesh&&(c[e.uuid]=e.material,e.material=T)},N=e=>{c[e.uuid]&&(e.material=c[e.uuid],delete c[e.uuid])},{onLoop:D,onAfterLoop:R}=O();let B=.03,f=a.Sketchfab_model.getObjectByName("canister_turbine_011_Nickel-Light-PBR_0"),z=f.material.clone(),A=new w({color:new V("red"),transparent:!0,opacity:1});return D(({elapsed:e})=>{a.hull_turbine&&(a.hull_turbine.rotation.x+=B,a.blades_turbine_003.rotation.x+=B),Math.floor(e)%2?f.material=z:f.material=A}),R(({elapsed:e})=>{m&&(p.value.traverse(o=>{L(o)}),m.render(e)),h&&(p.value.traverse(o=>{N(o)}),h.render(e))}),(e,o)=>(g(),X(j,null,[n("primitive",{object:v(a).Sketchfab_model},null,8,te),n("primitive",{object:v(i)},null,8,ae)],64))}}),re=n("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1),oe=n("TresAmbientLight",{color:"#ffffff",intensity:"40"},null,-1),ne=n("TresDirectionalLight",{position:[0,2,-4],intensity:1},null,-1),pe=P({__name:"deviceLightByComposerTres",setup(b){const r=_({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:W,outputColorSpace:q,toneMapping:H}),l=_({autoRotate:!0}),t=_({threshold:0,strength:.972,radius:.21}),a=new I({title:"参数"});return a.addBinding(t,"threshold",{label:"阈值",min:0,max:1,step:.1}),a.addBinding(t,"strength",{label:"强度",min:0,max:3,step:.2}),a.addBinding(t,"radius",{label:"半径",min:0,max:1,step:.1}),a.addBlade({view:"text",label:"post-processing",parse:i=>String(i),value:"未完成：等待Tresjs库更新"}),(i,d)=>{const u=J("TresCanvas");return g(),M(u,Q(r,{"window-size":""}),{default:x(()=>[re,y(v(U),S(k(l)),null,16),oe,ne,(g(),M(Y,null,{default:x(()=>[y(se,S(k(t)),null,16)]),_:1}))]),_:1},16)}}});export{pe as default};
