import{u as t,_ as n,a as o}from"./mergeTres.a_Dw3XqF1741168315107.js";import{l as r}from"./utils.R1pzgsk61741168315107.js";import{e}from"./@tresjs.Ea5Oq_-I1741168315107.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741168315107.js";import{_ as C}from"./@fesjs.vxeGrljA1741168315107.js";import"./@amap.d8-LJgNK1741168315107.js";import"./pinia.54vgoDms1741168315107.js";import"./three.FxqAALWt1741168315107.js";import"./three-mesh-bvh.304c-5N01741168315107.js";import"./postprocessing.hfy6Kqg11741168315107.js";import"./@vueuse.Z8xAfE_A1741168315107.js";import"./vue-router.WwZ4Gmuc1741168315107.js";import"./lodash-es.pklfUAS51741168315107.js";import"./@qlin.yHhFDldE1741168315107.js";import"./@floating-ui.BPbuo5Gx1741168315107.js";import"./@juggle.7yjBMqoW1741168315107.js";const y=b;!function(t,n){const o=b,r=S();for(;;)try{if(691742===parseInt(o(283))/1+parseInt(o(233))/2*(-parseInt(o(245))/3)+parseInt(o(279))/4*(parseInt(o(253))/5)+parseInt(o(238))/6+parseInt(o(272))/7*(-parseInt(o(254))/8)+-parseInt(o(278))/9*(-parseInt(o(251))/10)+parseInt(o(270))/11)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(262)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){w(this,(function(){const t=b,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(274),"i"),r=z(t(234));n[t(255)](r+t(243))&&o[t(255)](r+t(269))?z():r("0")}))()}();const x=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[b(262)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function b(t,n){const o=S();return(b=function(t,n){return o[t-=229]})(t,n)}x(void 0,(function(){const t=b,n=function(){const t=b;let n;try{n=Function(t(273)+t(264)+");")()}catch(o){n=window}return n}(),o=n.console=n.console||{},r=[t(267),"warn","info",t(248),t(286),t(232),t(258)];for(let e=0;e<r.length;e++){const n=x[t(235)].prototype[t(268)](x),a=r[e],i=o[a]||n;n.__proto__=x.bind(x),n.toString=i.toString[t(268)](i),o[a]=n}}))();const I=[y(252),y(230),y(246)];function S(){const t=["TresGroup","positionArray","TresBufferGeometry","chain","mapHandle","417dACwDn","normal","u_near","error","counter","near","890670XUhoLR","position","5dSccDy","10095152gbqxGl","test","string","action","trace","geometry","lngLatToCoord","uvArray","apply","uniforms",'{}.constructor("return this")( )',"length","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","log","bind","input","7686712zdJXhi","tbgRef","7SZahVE","return (function() ","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","u_far","push","TresMesh","18rwbkyp","5048876LfjtPn","buildings","normalArray","value","217129hhUvdZ","gger","while (true) {}","exception","cameraState","faceUv","call","table","8870iuZfDb","init","constructor","exp","customCoords","1282962nScvzO","debu"];return(S=function(){return t})()}const j=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=b;for(let r=0;r<t[n(265)];r+=3){const e=[t[r],t[r+1]],a=o[n(244)][n(237)].lngLatToCoord(e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[b(229)]&&(async()=>{const t=b,n=await r(t(266),t(280));for(let o=0;o<n[t(265)];o++){const r=n[o];a(r[t(259)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(230)]),l=new Float32Array(r.geometry[t(265)]);d[t(276)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;o.cameraState&&(g[t(263)].u_zoom.value=o[t(244)].getZoom(),g[t(263)][t(247)][t(282)]=o[t(229)][t(250)],g.uniforms[t(275)][t(282)]=o[t(229)].far)})),(t,n)=>{const o=b;return c(),s(o(240),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(277),{key:""+n},[p(r(242),{ref_for:!0,ref:r(271),position:[t[r(241)],3],faceUv:[t[r(261)],2],normal:[t[r(281)],3]},null,8,I),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function n(t){const o=b;if(typeof t===o(256))return function(t){}[o(235)](o(285))[o(262)](o(249));1!==(""+t/t).length||t%20==0?function(){return!0}[o(235)](o(239)+o(284))[o(231)](o(257)):function(){return!1}[o(235)](o(239)+o(284))[o(262)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const P=L;!function(t,n){const o=L,r=F();for(;;)try{if(147335===-parseInt(o(138))/1*(-parseInt(o(110))/2)+-parseInt(o(118))/3+parseInt(o(117))/4+-parseInt(o(121))/5*(parseInt(o(124))/6)+parseInt(o(132))/7+-parseInt(o(123))/8+parseInt(o(108))/9*(-parseInt(o(141))/10))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=L,n=new RegExp(t(107)),o=new RegExp(t(140),"i"),r=U(t(144));n[t(127)](r+"chain")&&o[t(127)](r+t(139))?U():r("0")}))()}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[L(146)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function L(t,n){const o=F();return(L=function(t,n){return o[t-=107]})(t,n)}A(void 0,(function(){const t=L;let n;try{n=Function('return (function() {}.constructor("return this")( ));')()}catch(e){n=window}const o=n[t(129)]=n[t(129)]||{},r=[t(111),"warn",t(113),t(133),"exception","table",t(125)];for(let a=0;a<r[t(119)];a++){const n=A[t(126)][t(120)][t(109)](A),e=r[a],i=o[e]||n;n[t(145)]=A.bind(A),n.toString=i[t(122)][t(109)](i),o[e]=n}}))();function U(t){function n(t){const o=L;if("string"==typeof t)return function(t){}[o(126)](o(131))[o(146)](o(130));1!==(""+t/t)[o(119)]||t%20==0?function(){return!0}[o(126)](o(136)+o(116)).call("action"):function(){return!1}[o(126)](o(136)+o(116))[o(146)](o(137)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function F(){const t=["init","__proto__","apply","function *\\( *\\)","371376LlLWCs","bind","29782MYCqpj","log","manual","info","TresCanvas","TresPerspectiveCamera","gger","646516JTzJki","116583bicvnn","length","prototype","55JUIqMp","toString","1180944SIgdvp","64770SuLKIS","trace","constructor","test","buildings","console","counter","while (true) {}","1363362wTrPjb","error","tcRef","darkblue","debu","stateObject","12Rrwanv","input","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","20szjdYA","TresAmbientLight","tresCanvas"];return(F=function(){return t})()}const M=C(a({__name:P(128),setup(t){const r=P,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(112)});return(t,i)=>{const l=r,f=d(l(114));return c(),s(u,null,[g(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(135)}),g(f,v({id:l(143),ref:l(134)},a),{default:m((()=>[i[0]||(i[0]=p(l(115),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(142),{intensity:.5},null,-1)),g(o,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
