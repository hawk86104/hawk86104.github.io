import{s as n,_ as t,a0 as e,bY as o,m as i,C as r,ab as a}from"./three.3b9CEYeV1731055558423.js";import{m as s,e as l,b as u}from"./@tresjs.KsuCtVXf1731055558423.js";import{d as c,b as f,a6 as p,a3 as m,o as b,D as g,J as v,aj as y,ak as d,u as h}from"./@vue.u2cBPEWn1731055558423.js";const w=P;!function(n,t){const e=P,o=z();for(;;)try{if(213247===parseInt(e(447))/1+parseInt(e(444))/2*(parseInt(e(425))/3)+parseInt(e(429))/4*(parseInt(e(416))/5)+-parseInt(e(439))/6+-parseInt(e(457))/7+parseInt(e(427))/8+-parseInt(e(440))/9)break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const _=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(441)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["AdditiveBlending","table","map","6djyGsX","stateObject","1432856Rzgwrp","bind","6184upyjQM","length","action","opacity","#84ccff","test","error","exception","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","color","1975098HLJSEN","4538043xcovRz","apply","offsetY","string","275654NpPfvD","toString","Color","339134wefKvl",'{}.constructor("return this")( )',"traverse","geometry","uniforms","value","TresMeshRef","warn","constructor","input","1033564wTAnBV","info","console","counter","dispose","verticesNeedUpdate","return (function() ","gger","mergeGeometries","function *\\( *\\)","uOpacity","TresMesh","glowColor","sin","position","init","1295AWMjtZ","TresShaderMaterial","debu","model","__proto__","while (true) {}"];return(z=function(){return n})()}!function(){_(this,(function(){const n=P,t=new RegExp(n(409)),e=new RegExp(n(437),"i"),o=T(n(415));t[n(434)](o+"chain")&&e[n(434)](o+n(456))?T():o("0")}))()}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[P(441)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function P(n,t){const e=z();return(P=function(n,t){return e[n-=407]})(n,t)}x(void 0,(function(){const n=P,t=function(){const n=P;let t;try{t=Function(n(463)+n(448)+");")()}catch(e){t=window}return t}(),e=t[n(459)]=t[n(459)]||{},o=["log",n(454),n(458),n(435),n(436),n(423),"trace"];for(let i=0;i<o[n(430)];i++){const t=x.constructor.prototype.bind(x),r=o[i],a=e[r]||t;t[n(420)]=x[n(428)](x),t.toString=a[n(445)].bind(a),e[r]=t}}))();const S=c({__name:"xRayEffect",props:{model:{},color:{default:w(433)},opacity:{default:1}},async setup(i){const r=w;let a,c;const h=i,_=f(),z=[];h[r(419)][r(449)]((t=>{const e=r;t instanceof n&&(t[e(450)][e(462)]=!0,z.push(t[e(450)]))}));const x=([a,c]=p((()=>u({map:"./plugins/medical/image/brainXRayLight.png"}))),a=await a,c(),a),P={uniforms:{c:{type:"f",value:1.11},p:{type:"f",value:1},glowColor:{type:"c",value:new(t[r(446)])(h[r(438)])},lightningTexture:{type:"t",value:x[r(424)]},offsetY:{type:"f",value:.1},uTime:{type:"f",value:0},uOpacity:{type:"f",value:h[r(432)]}},vertexShader:"uniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying vec2 vUv;\nvoid main(){\n    vUv=uv;\n    vec3 vNormal=normalize(normalMatrix*normal);\n    intensity=pow(c-abs(dot(vNormal,vec3(0,0,1))),p);\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);\n}",fragmentShader:"uniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\nuniform float uOpacity;\n\nvoid main(){\n  vec2 uv=vUv;\n  uv.y+=offsetY;\n  vec3 glow=glowColor*intensity;\n  vec3 color=vec3(step(.1,uv.y)-step(.2,uv.y))-vec3(texture2D(lightningTexture,uv));\n  float alpha=clamp(cos(uTime*3.),.5,1.);\n  gl_FragColor=vec4(glow+color,alpha*uOpacity);\n}",side:e,blending:t[r(422)],depthWrite:!1};P[r(451)][r(442)][r(452)]=Math[r(413)](5);const{camera:S}=s(),{onLoop:T}=l();return T((({delta:n})=>{const t=r;S[t(452)][t(414)]&&_[t(452)]&&(P.uniforms.uTime.value+=n)})),m((()=>{const n=r;_[n(452)]&&(_[n(452)][n(450)][n(461)](),_[n(452)][n(450)]=o[n(408)](z)),h.color&&(P[n(451)][n(412)][n(452)]=new(t[n(446)])(h[n(438)])),h[n(432)]&&(P[n(451)][n(410)].value=h.opacity)})),(n,t)=>{const e=r;return b(),g(e(411),{ref_key:e(453),ref:_},[t[0]||(t[0]=v("TresBufferGeometry",null,null,-1)),v(e(417),y(d(P)),null,16)],512)}}});function T(n){function t(n){const e=P;if(typeof n===e(443))return function(n){}.constructor(e(421))[e(441)](e(460));1!==(""+n/n)[e(430)]||n%20==0?function(){return!0}.constructor(e(418)+e(407)).call(e(431)):function(){return!1}[e(455)]("debu"+e(407)).apply(e(426)),t(++n)}try{if(n)return t;t(0)}catch(e){}}const C=B;!function(n,t){const e=B,o=F();for(;;)try{if(989274===parseInt(e(316))/1*(-parseInt(e(352))/2)+parseInt(e(369))/3+parseInt(e(361))/4+-parseInt(e(363))/5*(parseInt(e(319))/6)+-parseInt(e(333))/7*(parseInt(e(323))/8)+parseInt(e(366))/9*(-parseInt(e(381))/10)+-parseInt(e(339))/11*(-parseInt(e(321))/12))break;o.push(o.shift())}catch(i){o.push(o.shift())}}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[B(375)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){I(this,(function(){const n=B,t=new RegExp("function *\\( *\\)"),e=new RegExp(n(317),"i"),o=U(n(331));t[n(359)](o+"chain")&&e[n(359)](o+n(376))?U():o("0")}))()}();const M=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[B(375)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function B(n,t){const e=F();return(B=function(n,t){return e[n-=308]})(n,t)}function F(){const n=["uOpacity","317suCpyW","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","array","2105364qrGwvq","episodic","36PokZAn","aDelayDuration","1177720FaSaZz","mergeGeometries","includes","uSlowTime","color","debu","__proto__","warn","init","stateObject","49weHHaj","BufferGeometryRef","opacity","uniforms","toString","value","17054543orARZD","randFloat","setAttribute","process","randInt","Float32BufferAttribute","call","bubblesEffect",'{}.constructor("return this")( )',"map","while (true) {}","TresBufferGeometry","material","9404QqBLEi","info","constructor","TresPoints","error","position","push","test","afective","2892676ZbZBVy","semantic","20vertMk","glowColor","action","57078LXUOSa","amigdala","return (function() ","235653wwaQrQ","length","bridge","brainstem","AdditiveBlending","computeBoundingSphere","apply","input","bind","DoubleSide","cerebellum","Color","850AndvKB","gger","TresShaderMaterial","analitic","attributes","model","Mesh","log","geometry","MathUtils"];return(F=function(){return n})()}M(void 0,(function(){const n=B,t=function(){const n=B;let t;try{t=Function(n(368)+n(347)+");")()}catch(e){t=window}return t}(),e=t.console=t.console||{},o=[n(312),n(330),n(353),n(356),"exception","table","trace"];for(let i=0;i<o[n(370)];i++){const t=M.constructor.prototype[n(377)](M),r=o[i],a=e[r]||t;t[n(329)]=M[n(377)](M),t[n(337)]=a.toString[n(377)](a),e[r]=t}}))();const j=c({__name:C(346),props:{model:{},color:{default:"#FFF"},opacity:{default:1}},setup(n){const e=C,s=n,u=[e(360),e(362),e(320),e(342),e(367),e(372),e(371),e(379),e(308)],c={};s[e(310)].traverse((n=>{const i=e;n instanceof t[i(311)]&&u[i(348)]((t=>{const e=i;if(n.name[e(325)](t)){if(c[t]){const i=[c[t],n[e(313)]];return c[t]=o[e(324)](i),c}return c[t]=n[e(313)]}return[]}))}));const p=f(),w=new i({uniforms:{glowColor:{type:"c",value:new r(s[e(327)])},uTime:{type:"f",value:0},uSlowTime:{type:"f",value:0},uBubblesUp:{type:"f",value:1},uOpacity:{type:"f",value:s[e(335)]}},vertexShader:"uniform float p;\nuniform float uTime;\nuniform float uSlowTime;\nuniform float uBubblesUp;\nvarying float intensity;\nattribute vec2 aDelayDuration;\nattribute float size;\nattribute vec4 bubbles;\nvarying float alpha;\n\nfloat easeExpoInOut(float p){\n    return((p*=2.)<1.)?.5*pow(2.,10.*(p-1.)):.5*(2.-pow(2.,-10.*(p-1.)));\n}\n\nvoid main()\n{\n    intensity=.9;\n    vec4 mvPosition=modelViewMatrix*vec4(position,1.);\n    gl_PointSize=size*(300./-mvPosition.z);\n    float m=mod(size,sin(uSlowTime*.12+size));\n    \n    alpha=step(.5,abs(m));\n    if(m>.5&&m<.7){\n        gl_PointSize=.9*size;\n    }\n    if(m>.8){\n        gl_PointSize=.9*size;\n    }\n    \n    gl_Position=projectionMatrix*mvPosition;\n    \n    if(bubbles.w>0.&&bubbles.w<2.&&bubbles.x!=0.&&bubbles.y!=0.){\n        gl_PointSize=size+15.;\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        \n        float tProgress=smoothstep(0.,aDelayDuration.x,uBubblesUp);\n        vec3 tranlated=mix(position,bubbles.xyz,tProgress);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        gl_Position+=projectionMatrix*bPosition;\n        alpha=5.;\n    }\n    \n    if(bubbles.w==2.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,.6);\n        gl_PointSize=size+60.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n    if(bubbles.w==3.){\n        alpha=clamp(abs(sin(uTime-bubbles.y)),.3,1.);\n        gl_PointSize=size+90.;\n        \n        gl_PointSize=uBubblesUp*gl_PointSize;\n        float normalized=clamp(uBubblesUp,0.,2.)*2.;\n        vec3 tranlated=mix(position,bubbles.xyz,normalized);\n        vec4 bPosition=modelViewMatrix*vec4(tranlated,1.);\n        gl_Position+=projectionMatrix*bPosition;\n    }\n}",fragmentShader:"precision mediump float;\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float alpha;\nuniform float uOpacity;\nvoid main() {\n  float distanceToCenter = distance(gl_PointCoord, vec2(.5));\n  float pct = 1. - smoothstep(0., .5, distanceToCenter);\n  vec3 color = vec3(1.) * gl_FragColor.rgb;\n  vec3 glow = glowColor * intensity;\n  gl_FragColor = vec4(glow, clamp(alpha, 0., 1.));\n  gl_FragColor = vec4(glow, pct * gl_FragColor.a);\n  gl_FragColor = vec4(gl_FragColor.rgb, gl_FragColor.a * uOpacity);\n  // gl_FragColor=vec4(1.,1.,0.,1.);\n}",blending:t[e(373)],side:t[e(378)],depthTest:!1,vertexColors:!1,transparent:!0});m((()=>{p[e(338)]&&(()=>{const n=e,o=[],i=[],r=[],s=[];for(let e=0;e<2e4-3*u[n(370)];e+=1){const a=t[n(314)].randInt(0,u[n(370)]-1),l=u[a],f=c[l].attributes[n(357)][n(318)][3*e+0]||0,p=c[l].attributes[n(357)][n(318)][3*e+1]||0,m=c[l][n(309)].position[n(318)][3*e+2]||0;if(i.push(f,p,m),o[e]=t[n(314)][n(340)](10,20),e%100==0){const e=t[n(314)][n(343)](100,250)+p;s[n(358)](f,e,m,1)}else s[n(358)](f,p,m,0);r[2*e+0]=t[n(314)][n(340)](.5,1.5),r[2*e+1]=2.5}p[n(338)][n(341)](n(322),new(t[n(344)])(r,2)),p[n(338)][n(341)]("bubbles",new a(s,4)),p[n(338)][n(341)]("position",new(t[n(344)])(i,3)),p.value.setAttribute(n(327),new(t[n(344)])([],3)),p[n(338)][n(341)]("size",new a(o,1)),p[n(338)][n(374)]()})()}));const _=f(),{onLoop:z}=l();return z((({delta:n})=>{const o=e;_.value&&(_[o(338)].material[o(336)].uTime[o(338)]+=.05,_[o(338)][o(351)][o(336)][o(326)][o(338)]+=1/400),s[o(327)]&&(w.uniforms[o(364)][o(338)]=new(t[o(380)])(s[o(327)])),s.opacity&&(w[o(336)][o(315)][o(338)]=s.opacity)})),(n,t)=>{const o=e;return b(),g(o(355),{ref_key:"TresMeshRef",ref:_},[v(o(350),{ref_key:o(334),ref:p},null,512),v(o(383),y(d(h(w))),null,16)],512)}}});function U(n){function t(n){const e=B;if("string"==typeof n)return function(n){}[e(354)](e(349))[e(375)]("counter");1!==(""+n/n).length||n%20==0?function(){return!0}[e(354)](e(328)+e(382))[e(345)](e(365)):function(){return!1}.constructor("debugger")[e(375)](e(332)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{S as _,j as a};
