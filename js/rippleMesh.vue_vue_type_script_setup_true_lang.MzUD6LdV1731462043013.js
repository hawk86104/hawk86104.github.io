import{_ as n,bI as t,C as o}from"./three.wKRaqyB-1731462043013.js";import{e}from"./@tresjs.xlnLF3O61731462043013.js";import{g as r}from"./utils.cFc4kGHg1731462043013.js";import{d as i,b as s,a3 as a,o as c,D as u,J as l,u as f,aj as p,ak as v}from"./@vue.-THQH3GC1731462043013.js";const m=x;function d(){const n=["\n  precision lowp float;\n  precision lowp int;\n  uniform float time;\n  uniform float opacity;\n  uniform vec3 color;\n  uniform float num;\n  uniform float speed;\n  varying vec2 vUv;\n  void main() {\n    vec4 fragColor = vec4(0.);\n    float sin = sin((vUv.y - time * speed) * 10. * num);\n    float high = 0.92;\n    float medium = 0.4;\n    if (sin > high) {\n      fragColor = vec4(mix(vec3(.8, 1., 1.), color, (1. - sin) / (1. - high)), 1.);\n    } else if(sin > medium) {\n      fragColor = vec4(color, mix(1., 0., 1.-(sin - medium) / (high - medium)));\n    } else {\n      fragColor = vec4(color, 0.);\n    }\n    vec3 fade = mix(color, vec3(0., 0., 0.), vUv.y);\n    fragColor = mix(fragColor, vec4(fade, 1.), 0.85);\n    gl_FragColor = vec4(fragColor.rgb, fragColor.a * opacity * (1. - vUv.y));\n  }\n\t","4jxngLo","uvs","console","rippleMesh","fog_pars_vertex","speed","\n}\n","6XVhipB","test","bind","table","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","4858707FPtqgN","stateObject","color","opacity","length","__proto__","init","value","num","error","7852085aLzfVM","TresMesh","pv2","set","4419104QJowFy","30698830DXjBzM","action","prototype","return (function() ","positionSrc","string","constructor","ShaderChunk","Color","time","exception","gger","apply","trace","TresBufferGeometry",'{}.constructor("return this")( )',"fog_vertex","log","1115306XHVVoO","13472892wLsTjY","debu","#ffff00","while (true) {}","counter","toString","position","2809725zbbVlH","2yoswAZ","11uxPlOm","warn","uniforms","chain","DoubleSide"];return(d=function(){return n})()}!function(n,t){const o=x,e=d();for(;;)try{if(807870===parseInt(o(467))/1+-parseInt(o(476))/2*(-parseInt(o(475))/3)+parseInt(o(483))/4*(-parseInt(o(444))/5)+parseInt(o(490))/6*(-parseInt(o(495))/7)+-parseInt(o(448))/8+-parseInt(o(468))/9+parseInt(o(449))/10*(parseInt(o(477))/11))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const y=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[x(461)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){y(this,(function(){const n=x,t=new RegExp("function *\\( *\\)"),o=new RegExp(n(494),"i"),e=_(n(440));t[n(491)](e+n(480))&&o.test(e+"input")?_():e("0")}))()}();const h=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[x(461)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();h(void 0,(function(){const n=x;let t;try{t=Function(n(452)+n(464)+");")()}catch(r){t=window}const o=t[n(485)]=t[n(485)]||{},e=[n(466),n(478),"info",n(443),n(459),n(493),n(462)];for(let i=0;i<e[n(438)];i++){const t=h[n(455)][n(451)].bind(h),r=e[i],s=o[r]||t;t[n(439)]=h[n(492)](h),t[n(473)]=s[n(473)][n(492)](s),o[r]=t}}))();const g=[m(474),"uv"];function x(n,t){const o=d();return(x=function(n,t){return o[n-=436]})(n,t)}const w=i({__name:m(486),props:{positionSrc:{default:[{x:0,y:0},{x:10,y:10}]},color:{default:m(470)},opacity:{default:.8},height:{default:100},num:{default:8},speed:{default:.15}},setup(i){const d=m,y=i,h=s(),x={side:n[d(481)],transparent:!0,depthWrite:!1,depthTest:!0,vertexShader:"\nprecision lowp float;\nprecision lowp int;\n"+n[d(456)][d(487)]+"\nvarying vec2 vUv;\nvoid main() {\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    "+t[d(465)]+d(489),fragmentShader:d(482),uniforms:{time:{type:d(446),value:0},color:{type:d(484),value:new(n[d(457)])(y.color)},opacity:{type:"pv2",value:y.opacity},num:{type:d(446),value:y[d(442)]},speed:{type:d(446),value:y.speed}}};let w=null,_=null;const{centerPoint:b,points:C}=r(y[d(453)]);!function(n=[],t){const o=d,e=[],r=[];for(let i=0,s=e[o(438)],a=r[o(438)];i<n[o(438)]-1;i++){let o=1,c=n[i],u=n[i+1];e[s++]=c.x,e[s++]=0,e[s++]=c.y,r[a++]=0,r[a++]=0,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=c.x,e[s++]=t,e[s++]=c.y,r[a++]=0,r[a++]=o,e[s++]=u.x,e[s++]=0,e[s++]=u.y,r[a++]=1,r[a++]=0,e[s++]=u.x,e[s++]=t,e[s++]=u.y,r[a++]=1,r[a++]=o}w=new Float32Array(e),_=new Float32Array(r)}(C,y.height);const{onLoop:I}=e();return I((({delta:n})=>{const t=d;x[t(479)][t(458)][t(441)]+=n})),a((()=>{const n=d;y.color&&(x[n(479)][n(436)][n(441)]=new o(y[n(436)])),y[n(437)]&&(x[n(479)][n(437)].value=y[n(437)]),y[n(442)]&&(x[n(479)][n(442)][n(441)]=y[n(442)]),y.speed&&(x[n(479)][n(488)].value=y[n(488)]),h[n(441)]&&h[n(441)].position[n(447)](b.x,h[n(441)][n(474)].y,b.y)})),(n,t)=>{const o=d;return c(),u(o(445),{renderOrder:2200,ref_key:"tresMeshRef",ref:h},[l(o(463),{position:[f(w),3],uv:[f(_),2]},null,8,g),l("TresShaderMaterial",p(v(x)),null,16)],512)}}});function _(n){function t(n){const o=x;if(typeof n===o(454))return function(n){}[o(455)](o(471))[o(461)](o(472));1!==(""+n/n)[o(438)]||n%20==0?function(){return!0}[o(455)]("debu"+o(460)).call(o(450)):function(){return!1}.constructor(o(469)+o(460)).apply(o(496)),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{w as _};
