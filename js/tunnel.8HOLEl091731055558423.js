import{e as n,U as t}from"./@tresjs.KsuCtVXf1731055558423.js";import{a0 as e,az as r}from"./three.3b9CEYeV1731055558423.js";import{_ as o}from"./argestCircle.iQbYZf4A1731055558423.js";import{d as s,e as i,o as a,f as u,g as c,J as l,j as f,u as p,aj as v,ak as d,m}from"./@vue.u2cBPEWn1731055558423.js";import"./@vueuse.GLWi_e1b1731055558423.js";const g=y;function h(){const n=["length","warn","uTime","gger","TresPerspectiveCamera","toString","TresAmbientLight","input","table",'{}.constructor("return this")( )',"#ffffff","action","TresAxesHelper","apply","7016990ruwKDU","TresCanvas","call","259703qsnVhc","40jNAsdg","1584800gmTgTk","757506pLDIKf","24VKVsir","function *\\( *\\)","TresDirectionalLight","4qpCgCh","TresShaderMaterial","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","console","error","TresPlaneGeometry","9FAwCDc","debu","trace","rotation-x","perspectiveCameraRef","test","init","30041935sZIzIh","__proto__","return (function() ","constructor","947499xJpTSm","info","4465509SCUzqJ","chain","bind","stateObject","\nvarying vec2 vUv;\nuniform float uTime;\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(sin(uTime * 0.2) * 0.5 + 0.5, cos(uTime * 0.25) * 0.5 + 0.5, sin(uTime * 0.3 + 1.0) * 0.5 + 0.5);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main(){\n    vec2 uv = vUv-vec2(0.5);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    int sides = int(5.0 + 4.0 * sin(uTime * 0.5)); \n    angle = mod(angle, 6.28318 / float(sides)) * float(sides);\n    \n    vec2 uv0 = vec2(radius, angle);\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 5.0; i++) {\n        uv0.x = fract(uv0.x * (1.5 + 0.1 * sin(uTime)));\n        \n        float d = uv0.x * exp(-radius);\n\n        vec3 col = palette(uv0.x + i * 0.4 + uTime * 0.4);\n\n        d = sin(d * (8.0 + 4.0 * sin(uTime * 0.1)) + uTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2 + 0.1 * sin(uTime));\n\n        finalColor += col * d;\n    }\n    \n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","uniforms","quanMeshRef","value","tunnel","string"];return(h=function(){return n})()}!function(n,t){const e=y,r=h();for(;;)try{if(807647===parseInt(e(448))/1+-parseInt(e(450))/2+-parseInt(e(421))/3*(parseInt(e(455))/4)+-parseInt(e(449))/5*(parseInt(e(451))/6)+parseInt(e(419))/7*(parseInt(e(452))/8)+parseInt(e(461))/9*(parseInt(e(445))/10)+parseInt(e(415))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const T=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[y(444)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();!function(){T(this,(function(){const n=y,t=new RegExp(n(453)),e=new RegExp(n(457),"i"),r=j(n(414));t[n(413)](r+n(422))&&e.test(r+n(438))?j():r("0")}))()}();const x=function(){let n=!0;return function(t,e){const r=n?function(){if(e){const n=e[y(444)](t,arguments);return e=null,n}}:function(){};return n=!1,r}}();x(void 0,(function(){const n=y,t=function(){const n=y;let t;try{t=Function(n(417)+n(440)+");")()}catch(e){t=window}return t}(),e=t.console=t[n(458)]||{},r=["log",n(432),n(420),n(459),"exception",n(439),n(410)];for(let o=0;o<r[n(431)];o++){const t=x[n(418)].prototype.bind(x),s=r[o],i=e[s]||t;t[n(416)]=x[n(423)](x),t[n(436)]=i.toString[n(423)](i),e[s]=t}}))();const I={ref:g(412),position:[600,750,-1221],fov:45,near:1,far:1e4},w=[g(411)];function y(n,t){const e=h();return(y=function(n,t){return e[n-=410]})(n,t)}const C=g(425),b=s({__name:g(429),setup(s){const g={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0},h={autoRotate:!0,enableDamping:!0},T={uniforms:{uTime:{type:"f",value:0}},vertexShader:o,fragmentShader:C,side:e,blending:r,depthWrite:!1,transparent:!0},{onLoop:x}=n();return x((({delta:n})=>{const t=y;T[t(426)][t(433)][t(428)]+=n})),(n,e)=>{const r=y,o=i(r(446));return a(),u(o,m(g,{"window-size":""}),{default:c((()=>[l(r(435),I,null,512),f(p(t),v(d(h)),null,16),e[1]||(e[1]=l(r(437),{color:r(441)},null,-1)),e[2]||(e[2]=l(r(454),{position:[100,100,0],intensity:.5,color:r(441)},null,-1)),l("TresMesh",{ref:r(427),position:[0,100,0],"rotation-x":2*Math.PI/360*90},[e[0]||(e[0]=l(r(460),{args:[1e3,1e3]},null,-1)),l(r(456),v(d(T)),null,16)],8,w),e[3]||(e[3]=l(r(443),{args:[1e3],position:[0,19,0]},null,-1)),e[4]||(e[4]=l("TresGridHelper",{args:[6e3,100],position:[0,19,0]},null,-1))])),_:1},16)}}});function j(n){function t(n){const e=y;if(typeof n===e(430))return function(n){}.constructor("while (true) {}")[e(444)]("counter");1!==(""+n/n)[e(431)]||n%20==0?function(){return!0}[e(418)](e(462)+e(434))[e(447)](e(442)):function(){return!1}[e(418)](e(462)+e(434)).apply(e(424)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{b as default};
