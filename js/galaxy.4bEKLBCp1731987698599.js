import{bU as n,ak as t,am as e,C as o,aB as a,a as r}from"./three.3RwiW87x1731987698599.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.juy9qkLz1731987698599.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as P,ak as y,F as b}from"./@vue.-THQH3GC1731987698599.js";import"./@vueuse.R8VPJfVr1731987698599.js";const C=_;!function(n,t){const e=_,o=T();for(;;)try{if(342311===parseInt(e(330))/1*(-parseInt(e(364))/2)+parseInt(e(388))/3*(parseInt(e(380))/4)+-parseInt(e(356))/5*(parseInt(e(355))/6)+-parseInt(e(372))/7+parseInt(e(331))/8*(parseInt(e(370))/9)+parseInt(e(335))/10+-parseInt(e(348))/11)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(344)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();!function(){x(this,(function(){const n=_,t=new RegExp("function *\\( *\\)"),e=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=I(n(374));t[n(385)](o+n(387))&&e[n(385)](o+n(328))?I():o("0")}))()}();const z=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(344)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function T(){const n=["chain","39nYLwUK","#b5f28d","sin","#1b3984","radius","stateObject","random","bufferRef","input","info","8elJyIk","8kunUFM","error","a-scale","insideColor","5797830tfkGyt","black","constructor","value","counter","geometry","TresShaderMaterial","branches","table","apply","color","toString","warn","1193379pEhSRT","debu","TresBufferGeometry","randomnessPower","position","outsideColor","string","4584FJeHwv","1205buYaGk","log","bind","count","setAttribute","exception","aRandomness","TresPoints","54618LccdHq","gger","keys","clone","cos","trace","1932426PGzJsd","length","394604YTsJCQ","__proto__","init","uniforms","lerp","TresCanvas","while (true) {}","prototype","35468YdPBiT","console","material","size","forEach","test","call"];return(T=function(){return n})()}z(void 0,(function(){const n=_;let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(a){t=window}const e=t.console=t[n(381)]||{},o=[n(357),n(347),n(329),n(332),n(361),n(343),n(369)];for(let r=0;r<o[n(371)];r++){const t=z[n(337)][n(379)][n(358)](z),a=o[r],s=e[a]||t;t[n(373)]=z[n(358)](z),t[n(346)]=s[n(346)][n(358)](s),e[a]=t}}))();const S=[C(352),C(333),"color","a-randomness"];function _(n,t){const e=T();return(_=function(n,t){return e[n-=324]})(n,t)}const F=u({__name:"galaxy",setup(u){const x=C,z={clearColor:x(336),shadows:!0,alpha:!1,shadowMapType:n,outputColorSpace:t,toneMapping:e,windowSize:!0},T={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(389),outsideColor:x(391)},_=new o(T.insideColor),F=new o(T[x(353)]),I=new Float32Array(3*T[x(359)]),j=new Float32Array(3*T[x(359)]),A=new Float32Array(T[x(359)]),k=new Float32Array(3*T[x(359)]);for(let n=0;n<T[x(359)];n++){const t=3*n,e=Math[x(326)]()*T.radius,o=n%T[x(342)]*Math.PI*2/T[x(342)];I[t]=Math.cos(o)*e,I[t+1]=0,I[t+2]=Math.sin(o)*e;const a=Math[x(326)]()**T[x(351)]*(Math[x(326)]()<.5?-1:1),r=Math[x(326)]()**T[x(351)]*(Math[x(326)]()<.5?-1:1),s=Math[x(326)]()**T[x(351)]*(Math[x(326)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_.clone();i[x(376)](F,e/T[x(324)]),j[t+0]=i.r,j[t+1]=i.g,j[t+2]=i.b,A[n]=Math[x(326)]()}const R={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:T[x(383)]}}};const J=d(null),{onLoop:E}=s();E((({elapsed:n})=>{const t=x;J[t(338)]&&(J[t(338)][t(382)][t(375)].uTime[t(338)]=n)}));const{count:G,size:O,radius:U,branches:Y,spin:B,randomness:L,randomnessPower:H,insideColor:Z,outsideColor:$}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(389),outsideColor:x(391)});return f([G[x(338)],O[x(338)],U.value,Y[x(338)],B[x(338)],L[x(338)],H[x(338)],Z[x(338)],$[x(338)]],(n=>{const t=x;n[t(384)](((n,e)=>{const o=t;T[Object[o(366)](T)[e]]=n[o(338)]})),function(){const n=x;if(J[n(338)]){const t=new o(T[n(334)]),e=new o(T[n(353)]),a=new Float32Array(3*T[n(359)]),s=new Float32Array(3*T[n(359)]),i=new Float32Array(T[n(359)]),c=new Float32Array(3*T[n(359)]);for(let o=0;o<T[n(359)];o++){const r=3*o,l=Math[n(326)]()*T[n(324)],u=o%T[n(342)]*Math.PI*2/T.branches;a[r]=Math[n(368)](u)*l,a[r+1]=0,a[r+2]=Math[n(390)](u)*l;const d=Math[n(326)]()**T[n(351)]*(Math[n(326)]()<.5?-1:1),f=Math.random()**T.randomnessPower*(Math[n(326)]()<.5?-1:1),m=Math[n(326)]()**T[n(351)]*(Math[n(326)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=t[n(367)]();p[n(376)](e,l/T.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[o]=Math.random()}J[n(338)].geometry[n(360)](n(352),new r(a,3)),J[n(338)][n(340)].setAttribute(n(362),new r(c,3)),J.value.geometry[n(360)](n(345),new r(s,3)),J.value[n(340)][n(360)]("aScale",new r(i,1))}}()})),(n,t)=>{const e=x,o=m(e(377));return p(),h(b,null,[v(g(c)),v(o,P(y(z)),{default:w((()=>[t[0]||(t[0]=M("TresPerspectiveCamera",{position:[3,3,3]},null,-1)),M(e(363),{ref_key:e(327),ref:J},[M(e(350),{position:[g(I),3],"a-scale":[g(A),1],color:[g(j),3],"a-randomness":[g(k),3]},null,8,S),M(e(341),P(y(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function I(n){function t(n){const e=_;if(typeof n===e(354))return function(n){}.constructor(e(378))[e(344)](e(339));1!==(""+n/n)[e(371)]||n%20==0?function(){return!0}[e(337)](e(349)+e(365))[e(386)]("action"):function(){return!1}[e(337)]("debu"+e(365))[e(344)](e(325)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{F as default};
