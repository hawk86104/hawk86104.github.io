import{C as n,aB as t,bU as e,ak as o,am as a,a as r}from"./three.wKRaqyB-1731462043013.js";import{e as s,f as i,F as c,U as l}from"./@tresjs.xlnLF3O61731462043013.js";import{d as u,b as f,w as d,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as C,F as y}from"./@vue.-THQH3GC1731462043013.js";import"./@vueuse.W4jVx8WA1731462043013.js";const P=z;!function(n,t){const e=z,o=S();for(;;)try{if(269707===parseInt(e(430))/1*(-parseInt(e(433))/2)+-parseInt(e(469))/3*(parseInt(e(482))/4)+parseInt(e(445))/5*(-parseInt(e(496))/6)+parseInt(e(466))/7+-parseInt(e(432))/8*(-parseInt(e(428))/9)+parseInt(e(478))/10*(parseInt(e(486))/11)+parseInt(e(495))/12*(parseInt(e(462))/13))break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(n,t){const e=S();return(z=function(n,t){return e[n-=427]})(n,t)}function S(){const n=["__proto__","value","91hefarf","clone","forEach","count","1374065NPSmdl","a-scale","size","3zDPcWx","#b5f28d","counter","lerp","gger","toString","console","test","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","10coJOWw","position","table","branches","1518604TuHxCS","TresPerspectiveCamera","chain","log","7909rFBUcM","warn","info","radius","galaxy","sin","randomnessPower","cos","trace","880728OruoBx","634494OSgHKU","return (function() ","uTime","6651jkbMtr","setAttribute","5SYioKI","bind","3080YBsTCI","96072QwLiqM","while (true) {}","stateObject","error",'{}.constructor("return this")( )',"aRandomness","random","geometry","exception","debu","constructor","a-randomness","5mjzXHb","TresShaderMaterial","call","outsideColor","length","TresPoints","input","function *\\( *\\)","color","TresBufferGeometry","aScale","#1b3984","string","prototype","material"];return(S=function(){return n})()}!function(){x(this,(function(){const n=z,t=new RegExp(n(452)),e=new RegExp(n(477),"i"),o=_("init");t.test(o+n(484))&&e[n(476)](o+n(451))?_():o("0")}))()}();const I=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e.apply(t,arguments);return e=null,n}}:function(){};return n=!1,o}}();I(void 0,(function(){const n=z;let t;try{t=Function(n(497)+n(437)+");")()}catch(a){t=window}const e=t[n(475)]=t[n(475)]||{},o=[n(485),n(487),n(488),n(436),n(441),n(480),n(494)];for(let r=0;r<o.length;r++){const t=I[n(443)][n(458)][n(431)](I),a=o[r],s=e[a]||t;t[n(460)]=I[n(431)](I),t[n(474)]=s[n(474)][n(431)](s),e[a]=t}}))();const T=["position",P(467),P(453),P(444)],j=u({__name:P(490),setup(u){const x=P,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:o,toneMapping:a,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(470),outsideColor:x(456)},I=new n(S.insideColor),j=new n(S.outsideColor),_=new Float32Array(3*S.count),A=new Float32Array(3*S[x(465)]),F=new Float32Array(S[x(465)]),k=new Float32Array(3*S[x(465)]);for(let n=0;n<S[x(465)];n++){const t=3*n,e=Math[x(439)]()*S[x(489)],o=n%S[x(481)]*Math.PI*2/S.branches;_[t]=Math[x(493)](o)*e,_[t+1]=0,_[t+2]=Math[x(491)](o)*e;const a=Math[x(439)]()**S[x(492)]*(Math[x(439)]()<.5?-1:1),r=Math.random()**S[x(492)]*(Math[x(439)]()<.5?-1:1),s=Math[x(439)]()**S[x(492)]*(Math[x(439)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=I[x(463)]();i[x(472)](j,e/S[x(489)]),A[t+0]=i.r,A[t+1]=i.g,A[t+2]=i.b,F[n]=Math.random()}const O={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S[x(468)]}}};const R=f(null),{onLoop:B}=s();B((({elapsed:n})=>{const t=x;R.value&&(R[t(461)][t(459)].uniforms[t(427)][t(461)]=n)}));const{count:U,size:E,radius:H,branches:W,spin:D,randomness:J,randomnessPower:K,insideColor:L,outsideColor:Y}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(470),outsideColor:"#1b3984"});return d([U.value,E[x(461)],H[x(461)],W.value,D[x(461)],J.value,K.value,L[x(461)],Y.value],(t=>{const e=x;t[e(464)](((n,t)=>{const o=e;S[Object.keys(S)[t]]=n[o(461)]})),function(){const t=x;if(R[t(461)]){const e=new n(S.insideColor),o=new n(S[t(448)]),a=new Float32Array(3*S[t(465)]),s=new Float32Array(3*S[t(465)]),i=new Float32Array(S[t(465)]),c=new Float32Array(3*S[t(465)]);for(let n=0;n<S[t(465)];n++){const r=3*n,l=Math[t(439)]()*S[t(489)],u=n%S.branches*Math.PI*2/S[t(481)];a[r]=Math[t(493)](u)*l,a[r+1]=0,a[r+2]=Math[t(491)](u)*l;const f=Math.random()**S[t(492)]*(Math.random()<.5?-1:1),d=Math[t(439)]()**S[t(492)]*(Math[t(439)]()<.5?-1:1),m=Math[t(439)]()**S[t(492)]*(Math[t(439)]()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=e[t(463)]();p[t(472)](o,l/S[t(489)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math.random()}R[t(461)][t(440)][t(429)](t(479),new r(a,3)),R[t(461)].geometry.setAttribute(t(438),new r(c,3)),R[t(461)][t(440)][t(429)](t(453),new r(s,3)),R[t(461)][t(440)].setAttribute(t(455),new r(i,1))}}()})),(n,t)=>{const e=x,o=m("TresCanvas");return p(),h(y,null,[v(g(c)),v(o,b(C(z)),{default:w((()=>[t[0]||(t[0]=M(e(483),{position:[3,3,3]},null,-1)),M(e(450),{ref_key:"bufferRef",ref:R},[M(e(454),{position:[g(_),3],"a-scale":[g(F),1],color:[g(A),3],"a-randomness":[g(k),3]},null,8,T),M(e(446),b(C(O)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function _(n){function t(n){const e=z;if(typeof n===e(457))return function(n){}[e(443)](e(434)).apply(e(471));1!==(""+n/n)[e(449)]||n%20==0?function(){return!0}[e(443)](e(442)+"gger")[e(447)]("action"):function(){return!1}.constructor("debu"+e(473)).apply(e(435)),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
