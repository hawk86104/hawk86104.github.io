import{u as t,_ as n,a as o}from"./mergeTres.E7TAtv_x1734492426993.js";import{l as r}from"./utils.eLz0ibWs1734492426993.js";import{e}from"./@tresjs.WiFlZbqU1734492426993.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as g,j as d,g as m,f as h,al as _}from"./@vue.-THQH3GC1734492426993.js";import{_ as y}from"./@fesjs.-ojmPQ0_1734492426993.js";import"./@amap.VVwFehhA1734492426993.js";import"./pinia.21wZrGqi1734492426993.js";import"./vue-demi.C4xddsk91734492426993.js";import"./three.-W-Avfc61734492426993.js";import"./three-mesh-bvh.Ibne3Tc81734492426993.js";import"./@vueuse.HnQgsJ961734492426993.js";import"./vue-router.XKFr-7ni1734492426993.js";import"./lodash-es.kYt-_xTG1734492426993.js";import"./@qlin.yHhFDldE1734492426993.js";import"./@floating-ui.BPbuo5Gx1734492426993.js";import"./@juggle.7yjBMqoW1734492426993.js";function C(){const t=["uvArray","177yOyBuk","bind","lngLatToCoord","near","call","chain","toString","getZoom","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","gger","log","console","debu","normalArray","test","u_far","trace","1525AfERjJ","length","4356OLKoHA","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","geometry","table","position","700ulzxvU","buildingModels","576971gEFRKp","atan","function *\\( *\\)","while (true) {}","exception","16982RrOkYR","8YrYqvZ","value","252301wPMKOy","apply","cameraState","info","TresBufferGeometry","customCoords","96bxzKTT","__proto__","TresMesh","1478439HSfmZn","input","counter","string","TresShaderMaterial","faceUv","return (function() ","normal","90398tPDggl","exp","action","prototype","init","constructor","u_zoom","14423004WGKTKo","TresGroup","mapHandle","uniforms"];return(C=function(){return t})()}const x=I;!function(t,n){const o=I,r=C();for(;;)try{if(371011===parseInt(o(351))/1+parseInt(o(356))/2*(parseInt(o(388))/3)+-parseInt(o(407))/4*(-parseInt(o(405))/5)+parseInt(o(365))/6*(-parseInt(o(359))/7)+parseInt(o(357))/8*(parseInt(o(368))/9)+parseInt(o(412))/10*(parseInt(o(376))/11)+-parseInt(o(383))/12)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const w=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){w(this,(function(){const t=I,n=new RegExp(t(353)),o=new RegExp(t(408),"i"),r=z(t(380));n[t(402)](r+t(393))&&o.test(r+t(369))?z():r("0")}))()}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[I(360)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function I(t,n){const o=C();return(I=function(t,n){return o[t-=351]})(t,n)}b(void 0,(function(){const t=I,n=function(){const t=I;let n;try{n=Function(t(374)+'{}.constructor("return this")( ));')()}catch(o){n=window}return n}(),o=n[t(399)]=n[t(399)]||{},r=[t(398),"warn",t(362),"error",t(355),t(410),t(404)];for(let e=0;e<r.length;e++){const n=b.constructor[t(379)].bind(b),a=r[e],i=o[a]||n;n[t(366)]=b.bind(b),n[t(394)]=i[t(394)][t(389)](i),o[a]=n}}))();const S=[x(411),x(373),x(375)],j=a({__name:x(413),setup(n){const o=t(),a=t=>{const n=I;for(let r=0;r<t[n(406)];r+=3){const e=[t[r],t[r+1]],a=o.mapHandle[n(364)][n(390)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},g=i([]),d={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o[I(361)]&&(async()=>{const t=I,n=await r(t(396),"buildings");for(let o=0;o<n[t(406)];o++){const r=n[o];a(r[t(409)]);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(373)]),l=new Float32Array(r.geometry[t(406)]);g.push({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;o[t(361)]&&(d[t(386)][t(382)].value=o[t(385)][t(395)](),d[t(386)].u_near[t(358)]=o[t(361)][t(391)],d[t(386)][t(403)][t(358)]=o.cameraState.far)})),(t,n)=>{const o=I;return c(),s(o(384),null,[(c(!0),s(u,null,f(g,((t,n)=>{const r=o;return c(),s(r(367),{key:""+n},[p(r(363),{ref_for:!0,ref:"tbgRef",position:[t.positionArray,3],faceUv:[t[r(387)],2],normal:[t[r(401)],3]},null,8,S),p(r(372),v({ref_for:!0},d),null,16)])})),128))])}}});function z(t){function n(t){const o=I;if(typeof t===o(371))return function(t){}[o(381)](o(354))[o(360)](o(370));1!==(""+t/t).length||t%20==0?function(){return!0}[o(381)](o(400)+o(397))[o(392)](o(378)):function(){return!1}[o(381)]("debugger")[o(360)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const R=U;!function(t,n){const o=U,r=F();for(;;)try{if(141045===-parseInt(o(420))/1*(-parseInt(o(438))/2)+parseInt(o(441))/3+-parseInt(o(427))/4*(-parseInt(o(430))/5)+parseInt(o(416))/6+-parseInt(o(412))/7+parseInt(o(411))/8*(-parseInt(o(417))/9)+-parseInt(o(445))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const P=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[U(405)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){P(this,(function(){const t=U,n=new RegExp(t(446)),o=new RegExp(t(422),"i"),r=L(t(433));n[t(440)](r+t(442))&&o.test(r+t(413))?L():r("0")}))()}();const A=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[U(405)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function F(){const t=["info","1180040SvbyWU","function *\\( *\\)","console","apply","bind","manual","tresCanvas","trace","length","3016Qcdhaz","1102507gxyNLw","input","table","constructor","385086bqSFUv","3393BROzvg","warn","darkblue","56273xqhlGx","debu","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","return (function() ","buildings","TresAmbientLight","gger","17564SIirmd","toString","action","50vDXJMK","call","exception","init","error",'{}.constructor("return this")( )',"__proto__","tcRef","6SpagVi","counter","test","845307UTsRht","chain","TresPerspectiveCamera"];return(F=function(){return t})()}function U(t,n){const o=F();return(U=function(t,n){return o[t-=405]})(t,n)}A(void 0,(function(){const t=U;let n;try{n=Function(t(423)+t(435)+");")()}catch(e){n=window}const o=n[t(447)]=n[t(447)]||{},r=["log",t(418),t(444),t(434),t(432),t(414),t(409)];for(let a=0;a<r[t(410)];a++){const n=A[t(415)].prototype[t(406)](A),e=r[a],i=o[e]||n;n[t(436)]=A[t(406)](A),n[t(428)]=i.toString[t(406)](i),o[e]=n}}))();function L(t){function n(t){const o=U;if("string"==typeof t)return function(t){}[o(415)]("while (true) {}")[o(405)](o(439));1!==(""+t/t)[o(410)]||t%20==0?function(){return!0}.constructor(o(421)+"gger")[o(431)](o(429)):function(){return!1}[o(415)](o(421)+o(426))[o(405)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const M=y(a({__name:R(424),setup(t){const r=R,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(407)});return(t,i)=>{const l=r,f=g("TresCanvas");return c(),s(u,null,[d(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(419)}),d(f,v({id:l(408),ref:l(437)},a),{default:m((()=>[i[0]||(i[0]=p(l(443),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(425),{intensity:.5},null,-1)),d(o,{center:e}),(c(),h(_,null,{default:m((()=>[d(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{M as default};
