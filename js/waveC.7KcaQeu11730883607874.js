import{e,U as n}from"./@tresjs.C3WO4ZW41730883607874.js";import{_ as t,am as o}from"./three.fIUcjaNz1730883607874.js";import{P as r}from"./tweakpane.BCjFYDHx1730883607874.js";import{d as i,w as a,o as l,D as u,J as c,u as s,r as v,e as f,f as p,g,j as y,aj as m,ak as d,m as x}from"./@vue.Cfu43fwq1730883607874.js";import"./@vueuse.BSum2YDk1730883607874.js";const P=z;function z(e,n){const t=C();return(z=function(e,n){return t[e-=481]})(e,n)}!function(e,n){const t=z,o=C();for(;;)try{if(617108===parseInt(t(533))/1+-parseInt(t(485))/2*(-parseInt(t(481))/3)+-parseInt(t(548))/4*(parseInt(t(513))/5)+parseInt(t(511))/6+parseInt(t(502))/7+-parseInt(t(535))/8+-parseInt(t(540))/9)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const W=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){W(this,(function(){const e=z,n=new RegExp("function *\\( *\\)"),t=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),o=_(e(544));n[e(506)](o+"chain")&&t.test(o+e(495))?_():o("0")}))()}();const w=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[z(549)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();w(void 0,(function(){const e=z,n=function(){const e=z;let n;try{n=Function(e(531)+'{}.constructor("return this")( ));')()}catch(t){n=window}return n}(),t=n.console=n[e(508)]||{},o=[e(534),e(488),"info",e(492),e(487),e(510),e(484)];for(let r=0;r<o[e(528)];r++){const n=w[e(547)][e(521)][e(530)](w),i=o[r],a=t[i]||n;n.__proto__=w[e(530)](w),n.toString=a[e(527)].bind(a),t[i]=n}}))();const S=[P(522)],h=[P(482),P(491),P(486),P(538)];function C(){const e=["perlinWaveFrequency","sinWaveSpeed","uPeakColor","debu","5303340ZSWbVr","uWaveAmplitude","uColorOffset","uTime","test","set","console","peakColor","table","2162244olJwlj","counter","10EkPHvW","setStyle","perlinWaveSpeed","uValleyColor","uColorDamping","uPerlinWaveFrequency","stateObject","#184650","prototype","rotation-x","action","uPerlinWaveIterations","uSinWaveFrequency","perlinWaveIterations","toString","length","DoubleSide","bind","return (function() ","call","516150piHdum","log","3649184tWiLyD","Vector2","gger","wireframe","waveAmplitude","7223607txODUX","perlinWaveAmplitude","colorOffset","string","init","TresPlaneGeometry","#b367ff","constructor","217324OxuoqN","apply","350397IgQMMk","side","valleyColor","trace","6TSkzFc","fragmentShader","exception","warn","uPerlinWaveSpeed","value","vertexShader","error","sinWaveFrequency","while (true) {}","input","Color","waveC"];return(C=function(){return e})()}const I=i({__name:P(497),props:{wireframe:{type:Boolean,default:!1},peakColor:{default:P(546)},valleyColor:{default:P(520)},colorOffset:{default:.9},colorDamping:{default:4.5},sinWaveFrequency:{default:{x:.4,y:.3}},waveAmplitude:{default:.8},sinWaveSpeed:{default:{x:.6,y:1.3}},perlinWaveIterations:{default:3},perlinWaveFrequency:{default:.6},perlinWaveAmplitude:{default:.5},perlinWaveSpeed:{default:.6}},setup(n){const o=P,r=n,i={uTime:{value:0},uPeakColor:{value:new(t[o(496)])(r[o(509)])},uValleyColor:{value:new(t[o(496)])(r[o(483)])},uColorOffset:{value:r.colorOffset},uColorDamping:{value:r.colorDamping},uSinWaveFrequency:{value:new(t[o(536)])(r[o(493)].x,r[o(493)].y)},uWaveAmplitude:{value:r.waveAmplitude},uSinWaveSpeed:{value:new(t[o(536)])(r[o(499)].x,r[o(499)].y)},uPerlinWaveIterations:{value:r.perlinWaveIterations},uPerlinWaveFrequency:{value:r[o(498)]},uPerlinWaveAmplitude:{value:r[o(541)]},uPerlinWaveSpeed:{value:r.perlinWaveSpeed}},{onLoop:v}=e();return v((({elapsed:e})=>{const n=o;i[n(505)][n(490)]=e})),a((()=>r),(()=>{const e=o;i[e(500)][e(490)][e(514)](r[e(509)]),i[e(516)].value.setStyle(r[e(483)]),i[e(504)][e(490)]=r[e(542)],i[e(517)][e(490)]=r.colorDamping,i[e(525)][e(490)][e(507)](r[e(493)].x,r.sinWaveFrequency.y),i[e(503)][e(490)]=r[e(539)],i.uSinWaveSpeed[e(490)][e(507)](r[e(499)].x,r[e(499)].y),i[e(524)][e(490)]=r[e(526)],i[e(518)][e(490)]=r[e(498)],i.uPerlinWaveAmplitude[e(490)]=r[e(541)],i[e(489)][e(490)]=r[e(515)]}),{deep:!0}),(e,n)=>{const r=o;return l(),u("TresMesh",{"rotation-x":-Math.PI/2,"position-y":1},[n[0]||(n[0]=c(r(545),{args:[10,10,512,512]},null,-1)),c("TresShaderMaterial",{side:t[r(529)],vertexShader:s("uniform float uTime;\n\nuniform vec3 uPeakColor;\nuniform vec3 uValleyColor;\nuniform float uColorOffset;\nuniform float uColorDamping;\n\nuniform vec2 uSinWaveFrequency;\nuniform float uWaveAmplitude;\nuniform vec2 uSinWaveSpeed;\n\nuniform float uPerlinWaveIterations;\nuniform float uPerlinWaveFrequency;\nuniform float uPerlinWaveAmplitude;\nuniform float uPerlinWaveSpeed;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\n# define MAX_ITERATIONS 100.0\n#define M_PI 3.1415926535897932384626433832795\n\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x) {return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); \n  vec3 Pi1 = Pi0 + vec3(1.0); \n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); \n  vec3 Pf1 = Pf0 - vec3(1.0); \n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n  vUv = uv;\n  vPeakColor = uPeakColor;\n  vValleyColor = uValleyColor;\n  \n  vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n  float elevation =\n    sin(modelPosition.x * uSinWaveFrequency.x + uTime * uSinWaveSpeed.x)\n    * sin(modelPosition.z * uSinWaveFrequency.y + uTime * uSinWaveSpeed.y)\n    * uWaveAmplitude;\n\n  for (float i = 1.; i < MAX_ITERATIONS; i++) {\n    if (i > uPerlinWaveIterations) break;\n    elevation -= abs(cnoise(vec3(\n      modelPosition.x * uPerlinWaveFrequency * i,\n      modelPosition.z * uPerlinWaveFrequency * i,\n      uTime * uPerlinWaveSpeed / i\n    ))) * uPerlinWaveAmplitude / i;\n  }\n\n  modelPosition.y += elevation;\n  vElevation = min(1.0, (elevation + uColorOffset) / uColorDamping);\n\n  vec4 viewPosition = viewMatrix * modelPosition;\n\n  vec4 projectedPosition = projectionMatrix * viewPosition;\n\n  gl_Position = projectedPosition;\n}"),fragmentShader:s("precision mediump float;\n\nvarying vec2 vUv;\nvarying float vElevation;\nvarying vec3 vPeakColor;\nvarying vec3 vValleyColor;\n\nuniform float uTime;\n\nvoid main()\n{\n  gl_FragColor = vec4(mix(vValleyColor, vPeakColor, vElevation), 1.0);\n\n  #include <tonemapping_fragment>\n  #include <colorspace_fragment>\n}"),uniforms:i,wireframe:e[r(538)]},null,8,h)],8,S)}}});function _(e){function n(e){const t=z;if(typeof e===t(543))return function(e){}.constructor(t(494)).apply(t(512));1!==(""+e/e)[t(528)]||e%20==0?function(){return!0}[t(547)]("debu"+t(537))[t(532)](t(523)):function(){return!1}.constructor(t(501)+t(537))[t(549)](t(519)),n(++e)}try{if(e)return n;n(0)}catch(t){}}!function(e,n){const t=F,o=q();for(;;)try{if(124002===-parseInt(t(246))/1+parseInt(t(261))/2*(-parseInt(t(260))/3)+parseInt(t(202))/4+parseInt(t(222))/5*(parseInt(t(247))/6)+parseInt(t(238))/7+-parseInt(t(219))/8*(-parseInt(t(224))/9)+-parseInt(t(208))/10)break;o.push(o.shift())}catch(r){o.push(o.shift())}}();const b=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t[F(232)](n,arguments);return t=null,e}}:function(){};return e=!1,o}}();!function(){b(this,(function(){const e=F,n=new RegExp("function *\\( *\\)"),t=new RegExp(e(248),"i"),o=T("init");n[e(203)](o+e(221))&&t.test(o+e(249))?T():o("0")}))()}();const A=function(){let e=!0;return function(n,t){const o=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,o}}();function q(){const e=["8tXgLan",'{}.constructor("return this")( )',"chain","61195UunfQK","perlinWaveIterations","1245834ZjwVYt","wireframe","#ff6767","sinWaveSpeed","perlinWaveSpeed","gger","stateObject","正弦波速度","apply","string","小波浪层数","__proto__","小波浪频率","return (function() ","162155DGhfpp","toString","table","山谷颜色","perlinWaveAmplitude","info","小波浪幅度","SRGBColorSpace","61201xhgOPE","42YhRPwW","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","input","TresCanvas","BasicShadowMap","inline","error","sinWaveFrequency","valleyColor","colorOffset","while (true) {}","颜色抑制","length","3xrEtOw","253986TVXWmb","perlinWaveFrequency","964660MHZVGa","test","TresPerspectiveCamera","exception","正弦波频率","console","1762330bqdNNF","constructor","trace","颜色偏移","#310039","call","#222","bind","addBinding","debu","action"];return(q=function(){return e})()}function F(e,n){const t=q();return(F=function(e,n){return t[e-=201]})(e,n)}A(void 0,(function(){const e=F,n=function(){const e=F;let n;try{n=Function(e(237)+e(220)+");")()}catch(t){n=window}return n}(),t=n[e(207)]=n.console||{},o=["log","warn",e(243),e(253),e(205),e(240),e(210)];for(let r=0;r<o[e(259)];r++){const n=A[e(209)].prototype[e(215)](A),i=o[r],a=t[i]||n;n[e(235)]=A[e(215)](A),n[e(239)]=a[e(239)][e(215)](a),t[i]=n}}))();const k=i({__name:"waveC",setup(e){const i=F,a={clearColor:i(214),shadows:!0,alpha:!1,shadowMapType:t[i(251)],outputColorSpace:t[i(245)],toneMapping:o,useLegacyLights:!0,antialias:!0,logarithmicDepthBuffer:!0},u=v({peakColor:i(226),valleyColor:i(212),wireframe:!1,colorOffset:.9,colorDamping:4.5,sinWaveFrequency:{x:.4,y:.3},waveAmplitude:.8,sinWaveSpeed:{x:.6,y:1.3},perlinWaveIterations:3,perlinWaveFrequency:.6,perlinWaveAmplitude:.5,perlinWaveSpeed:.6}),P=new r({title:"参数",expanded:!0});return P[i(216)](u,i(225),{label:"网格化"}),P.addBinding(u,"peakColor",{label:"山峰颜色"}),P[i(216)](u,i(255),{label:i(241)}),P[i(216)](u,i(256),{label:i(211),min:.01,max:3,step:.01}),P[i(216)](u,"colorDamping",{label:i(258),min:.01,max:6,step:.01}),P[i(216)](u,i(254),{label:i(206),picker:i(252),x:{min:-1,step:.01,max:1,inverted:!0},y:{min:-1,step:.01,max:1,inverted:!0}}),P[i(216)](u,"waveAmplitude",{label:"正弦波振幅",min:0,max:2,step:.01}),P[i(216)](u,i(227),{label:i(231),picker:i(252),x:{min:-3,step:.01,max:3,inverted:!0},y:{min:-3,step:.01,max:3,inverted:!0}}),P[i(216)](u,i(223),{label:i(234),min:1,max:7,step:.1}),P[i(216)](u,i(201),{label:i(236),min:0,max:5,step:.01}),P[i(216)](u,i(242),{label:i(244),min:0,max:2,step:.01}),P[i(216)](u,i(228),{label:"小波浪速度",min:0,max:2,step:.01}),(e,t)=>{const o=i,r=f(o(250));return l(),p(r,x(a,{"window-size":""}),{default:g((()=>[t[0]||(t[0]=c(o(204),{position:[10,10,10]},null,-1)),y(s(n)),t[1]||(t[1]=c("TresGridHelper",{args:[10,10]},null,-1)),y(I,m(d(u)),null,16)])),_:1},16)}}});function T(e){function n(e){const t=F;if(typeof e===t(233))return function(e){}[t(209)](t(257))[t(232)]("counter");1!==(""+e/e)[t(259)]||e%20==0?function(){return!0}[t(209)](t(217)+t(229))[t(213)](t(218)):function(){return!1}[t(209)](t(217)+"gger")[t(232)](t(230)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{k as default};
