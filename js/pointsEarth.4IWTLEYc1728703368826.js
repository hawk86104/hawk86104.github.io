import{_ as e}from"./three.VoknrmS61728703368826.js";import{U as n,Y as t,z as a}from"./@tresjs.JhHPALEY1728703368826.js";import{P as o}from"./tweakpane.yHWGBmom1728703368826.js";import{d as r,a4 as i,Y as l,e as s,o as u,f as c,g as p,j as f,u as v,L as m,m as d,aj as h,ak as g}from"./@vue.JNsx1iN61728703368826.js";import"./@vueuse.yeA714RM1728703368826.js";const x=j;!function(e,n){const t=j,a=z();for(;;)try{if(242778===-parseInt(t(170))/1+parseInt(t(169))/2*(parseInt(t(226))/3)+parseInt(t(196))/4*(parseInt(t(203))/5)+-parseInt(t(231))/6+parseInt(t(219))/7*(parseInt(t(183))/8)+parseInt(t(167))/9*(parseInt(t(190))/10)+-parseInt(t(214))/11*(parseInt(t(189))/12))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const y=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(227)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){y(this,(function(){const e=j,n=new RegExp(e(215)),t=new RegExp(e(213),"i"),a=E(e(202));n[e(208)](a+e(224))&&t[e(208)](a+"input")?E():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(227)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();S(void 0,(function(){const e=j;let n;try{n=Function(e(205)+e(185)+");")()}catch(o){n=window}const t=n[e(228)]=n[e(228)]||{},a=[e(207),e(204),e(230),e(198),e(186),e(197),e(199)];for(let r=0;r<a[e(180)];r++){const n=S[e(210)][e(163)].bind(S),o=a[r],i=t[o]||n;n[e(188)]=S[e(176)](S),n[e(209)]=i[e(209)][e(176)](i),t[o]=n}}))();const T=m(x(218),{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),w=m(x(216),{args:[1,4]},null,-1),b=m(x(216),{args:[1,128]},null,-1),_=m(x(177),{args:[x(173),x(194),3]},null,-1);function z(){const e=["SRGBColorSpace","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","11mdDpOg","function *\\( *\\)","TresIcosahedronGeometry","addBinding","TresPerspectiveCamera","37282CbHKmV","stateObject","uniforms","uTime","#17c5a9","chain","粒子大小","3pWfOna","apply","console","TresMeshBasicMaterial","info","2827212PXltZD","prototype","size","string","value","810VIcflx","海浪变化速度","622068MMDGSM","466383ewkbkB","Debug","TresPoints","#ffffff","action","counter","bind","TresHemisphereLight","color","海浪高度","length","groupRef","rotation","360DGELWz","while (true) {}",'{}.constructor("return this")( )',"exception","set","__proto__","3610428sLpLdi","52580yjJupa","uWaveHeight","FrontSide","debu","#080820","change","50812DRYlZX","table","error","trace","TresGroup","call","init","180GgSVYj","warn","return (function() ","gger","log","test","toString","constructor","TresShaderMaterial"];return(z=function(){return e})()}function j(e,n){const t=z();return(j=function(e,n){return t[e-=163]})(e,n)}const D=r({__name:"pointsEarth",async setup(r){const y=x;let S,z;const j={color:y(223),pointSize:4},D={clearColor:"#122148",shadows:!1,alpha:!1,outputColorSpace:e[y(212)]},E={color:j[y(178)],wireframe:!0,transparent:!0,opacity:.2},P=([S,z]=i((()=>a(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),S=await S,z(),S),I=P[0],k=P[1],C=P[2],M=P[3],A=P[4],L={uniforms:{size:{type:"f",value:j.pointSize},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:C},elevTexture:{type:"t",value:M},alphaTexture:{type:"t",value:A},earthTexture:{type:"t",value:I},starTexture:{type:"t",value:k}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(192)]},W=l(),U=l(),B=(new o).addFolder({title:y(171)});B[y(217)](j,"color",{type:y(178)}).on(y(195),(({value:e})=>{const n=y;U[n(166)].color[n(187)](e)})),B[y(217)](L[y(221)][y(164)],y(166),{min:.1,max:10,step:.1,label:y(225)}),B.addBinding(L.uniforms[y(191)],y(166),{min:.01,max:.5,step:.01,label:y(179)}),B.addBinding(L[y(221)].uWaveSpeed,y(166),{min:.01,max:1,step:.01,label:y(168)});const{onLoop:H}=n();return H((({delta:e})=>{const n=y;W[n(166)]&&(W.value[n(182)].y+=.002,L[n(221)][n(222)][n(166)]+=10*e)})),(e,n)=>{const a=y,o=s("TresCanvas");return u(),c(o,d(D,{"window-size":""}),{default:p((()=>[T,f(v(t),{autoRotate:!0,autoRotateSpeed:2}),m(a(200),{ref_key:a(181),ref:W},[m("TresMesh",null,[w,m(a(229),d({ref_key:"wireframeMaterialRef",ref:U},E),null,16)]),m(a(172),null,[b,m(a(211),h(g(L)),null,16)])],512),_])),_:1},16)}}});function E(e){function n(e){const t=j;if(typeof e===t(165))return function(e){}[t(210)](t(184))[t(227)](t(175));1!==(""+e/e)[t(180)]||e%20==0?function(){return!0}[t(210)](t(193)+t(206))[t(201)](t(174)):function(){return!1}[t(210)]("debu"+t(206))[t(227)](t(220)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{D as default};
