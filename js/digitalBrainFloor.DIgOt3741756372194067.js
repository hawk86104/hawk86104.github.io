import{cf as o,N as e,_ as s,ce as a}from"./three.QlBabAUP1756372194067.js";import{a as t}from"./@tresjs.Df2Jc2df1756372194067.js";import{P as i}from"./tweakpane.C0HtAJSg1756372194067.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.BTrs1XBS1756372194067.js";import"./@fesjs.BxIxMXgl1756372194067.js";import"./Resource.CtByW1MJ1756372194067.js";/* empty css                                                                             */import{_ as l}from"./randomLoading.vue_vue_type_script_setup_true_lang.BC1IBSns1756372194067.js";import"./three-mesh-ui.module.Dgb2GCtr1756372194067.js";/* empty css                                                              */import{l as n}from"./util.BTRj-dGq1756372194067.js";import{_ as p}from"./cloudPoints.vue_vue_type_script_setup_true_lang.De9A4oyQ1756372194067.js";import{_ as m,a as d}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.C4Fd-jqQ1756372194067.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as y,u as h,f as b,I as v,a7 as w,a8 as B,e as L,H as x,m as C,a5 as k,F as T}from"./@vue.BzMISRrV1756372194067.js";import"./postprocessing.eHqBklb71756372194067.js";import"./@vueuse.BIpwRBdi1756372194067.js";import"./vue-router.Dko1PBP91756372194067.js";import"./lodash-es.C7pWAXPe1756372194067.js";import"./pinia.CqPBZQk21756372194067.js";import"./@qlin.q6OWdsQV1756372194067.js";import"./@babel.BPq7uOAK1756372194067.js";import"./@floating-ui.BFjFSAYt1756372194067.js";import"./@juggle.CcBCnTIR1756372194067.js";import"./starLoading.EJ6y69CN1756372194067.js";import"./utils.B5jG6Hsc1756372194067.js";import"./cssLoaders.GyY4v84z1756372194067.js";import"./bubbleLoading.CXlOzAAA1756372194067.js";import"./yangyangLoading.FzXUgEID1756372194067.js";const P={position:[0,120,0]},S=u({__name:"digitalBrainFloor",async setup(u){let S,z;const G=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),M=c({color:"#fff",show:!0,opacity:1}),R=new i({title:"参数"});R.addBinding(M,"show",{label:"点云显示"}),R.addBinding(M,"color",{label:"点云颜色"}),R.addBinding(M,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});R.addBinding(F,"show",{label:"脑轮廓显示"}),R.addBinding(F,"color",{label:"脑轮廓颜色"}),R.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const N=c({color:"#9e00af",show:!0,opacity:1});R.addBinding(N,"show",{label:"脑组织显示"}),R.addBinding(N,"color",{label:"脑组织颜色"}),R.addBinding(N,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const O=new o,q=([S,z]=_((()=>n("https://opensource.cdn.icegl.cn/model/medical/brainparts.OBJ",O))),S=await S,z(),S),A=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:s,toneMapping:e}),E=c({autoRotate:!0,autoRotateSpeed:2});return(o,e)=>{const s=j("TresCanvas");return g(),f(T,null,[y(h(l)),y(s,C(A,{"window-size":""}),{default:b((()=>[e[0]||(e[0]=v("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),y(h(t),w(B(E)),null,16),e[1]||(e[1]=v("TresAmbientLight",{intensity:.5},null,-1)),v("TresGroup",P,[M.show?(g(),L(p,C({key:0,model:h(q)},M),null,16,["model"])):x("",!0),(g(),L(k,null,{default:b((()=>[F.show?(g(),L(m,C({key:0,model:h(q)},F),null,16,["model"])):x("",!0)])),_:1})),N.show?(g(),L(d,C({key:1,model:h(q)},N),null,16,["model"])):x("",!0)]),y(r,w(B(G)),null,16)])),_:1},16)],64)}}});export{S as default};
