import{C as n,bU as t,ak as e,am as o,aL as a,a as r}from"./three.x4oqFJNT1729821967160.js";import{U as s,e as i,F as c,Y as l}from"./@tresjs.QjD7q5YC1729821967160.js";import{d as u,b as f,w as d,e as m,o as p,E as h,j as v,u as g,g as w,L as P,aj as M,ak as b,F as C}from"./@vue.JNsx1iN61729821967160.js";import"./@vueuse.HMG_JnUD1729821967160.js";const y=_;!function(n,t){const e=_,o=z();for(;;)try{if(183072===-parseInt(e(369))/1*(parseInt(e(350))/2)+parseInt(e(387))/3*(parseInt(e(353))/4)+-parseInt(e(331))/5*(-parseInt(e(337))/6)+parseInt(e(380))/7*(-parseInt(e(373))/8)+parseInt(e(360))/9+parseInt(e(393))/10*(-parseInt(e(345))/11)+parseInt(e(339))/12)break;o.push(o.shift())}catch(a){o.push(o.shift())}}();const x=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(381)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();function z(){const n=["function *\\( *\\)","uniforms","22aEkLSw","a-scale","error","input","333624laGSGQ","branches","bind","radius","keys","debu","#1b3984","35VMlQPz","apply","length","info","count","randomnessPower","color","205125rhsChz","value","lerp","counter","TresBufferGeometry","random","352900dkQWgk","clone","bufferRef","while (true) {}","5sLdTpU","console","exception","init","aScale","trace","763302rjZEZc","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","1723404ftPHaz","table","return (function() ","TresCanvas","prototype","a-randomness","22WgCQfs","toString","setAttribute","material","insideColor","16708VGIlPm","forEach","TresPoints","8GLmRYY","outsideColor","sin","call","cos","geometry","#b5f28d","2145339SMlPug","gger","warn","constructor","chain","action","string"];return(z=function(){return n})()}!function(){x(this,(function(){const n=_,t=new RegExp(n(367)),e=new RegExp(n(338),"i"),o=A(n(334));t.test(o+n(364))&&e.test(o+n(372))?A():o("0")}))()}();const S=function(){let n=!0;return function(t,e){const o=n?function(){if(e){const n=e[_(381)](t,arguments);return e=null,n}}:function(){};return n=!1,o}}();S(void 0,(function(){const n=_,t=function(){const n=_;let t;try{t=Function(n(341)+'{}.constructor("return this")( ));')()}catch(e){t=window}return t}(),e=t.console=t[n(332)]||{},o=["log",n(362),n(383),n(371),n(333),n(340),n(336)];for(let a=0;a<o[n(382)];a++){const t=S[n(363)][n(343)][n(375)](S),r=o[a],s=e[r]||t;t.__proto__=S[n(375)](S),t.toString=s[n(346)][n(375)](s),e[r]=t}}))();const I=P("TresPerspectiveCamera",{position:[3,3,3]},null,-1),T=["position",y(370),y(386),y(344)];function _(n,t){const e=z();return(_=function(n,t){return e[n-=329]})(n,t)}const j=u({__name:"galaxy",setup(u){const x=y,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:t,outputColorSpace:e,toneMapping:o,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(359),outsideColor:x(379)},_=new n(S[x(349)]),j=new n(S[x(354)]),A=new Float32Array(3*S[x(384)]),F=new Float32Array(3*S[x(384)]),k=new Float32Array(S[x(384)]),R=new Float32Array(3*S.count);for(let n=0;n<S[x(384)];n++){const t=3*n,e=Math.random()*S[x(376)],o=n%S.branches*Math.PI*2/S[x(374)];A[t]=Math[x(357)](o)*e,A[t+1]=0,A[t+2]=Math[x(355)](o)*e;const a=Math[x(392)]()**S[x(385)]*(Math[x(392)]()<.5?-1:1),r=Math[x(392)]()**S.randomnessPower*(Math[x(392)]()<.5?-1:1),s=Math[x(392)]()**S.randomnessPower*(Math.random()<.5?-1:1);R[t]=a,R[t+1]=r,R[t+2]=s;const i=_.clone();i[x(389)](j,e/S[x(376)]),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,k[n]=Math[x(392)]()}const E={transparent:!0,depthWrite:!1,blending:a,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S.size}}};const L=f(null),{onLoop:G}=s();G((({elapsed:n})=>{const t=x;L[t(388)]&&(L[t(388)][t(348)][t(368)].uTime[t(388)]=n)}));const{count:O,size:Q,radius:Z,branches:U,spin:W,randomness:Y,randomnessPower:V,insideColor:$,outsideColor:B}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(359),outsideColor:x(379)});return d([O.value,Q[x(388)],Z[x(388)],U[x(388)],W[x(388)],Y.value,V[x(388)],$[x(388)],B[x(388)]],(t=>{const e=x;t[e(351)](((n,t)=>{const o=e;S[Object[o(377)](S)[t]]=n[o(388)]})),function(){const t=x;if(L[t(388)]){const e=new n(S.insideColor),o=new n(S[t(354)]),a=new Float32Array(3*S[t(384)]),s=new Float32Array(3*S[t(384)]),i=new Float32Array(S[t(384)]),c=new Float32Array(3*S.count);for(let n=0;n<S.count;n++){const r=3*n,l=Math[t(392)]()*S[t(376)],u=n%S.branches*Math.PI*2/S[t(374)];a[r]=Math.cos(u)*l,a[r+1]=0,a[r+2]=Math[t(355)](u)*l;const f=Math[t(392)]()**S[t(385)]*(Math[t(392)]()<.5?-1:1),d=Math[t(392)]()**S[t(385)]*(Math[t(392)]()<.5?-1:1),m=Math[t(392)]()**S.randomnessPower*(Math[t(392)]()<.5?-1:1);c[r]=f,c[r+1]=d,c[r+2]=m;const p=e[t(394)]();p[t(389)](o,l/S[t(376)]),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math[t(392)]()}L[t(388)][t(358)].setAttribute("position",new r(a,3)),L[t(388)][t(358)][t(347)]("aRandomness",new r(c,3)),L.value.geometry[t(347)](t(386),new r(s,3)),L[t(388)][t(358)].setAttribute(t(335),new r(i,1))}}()})),(n,t)=>{const e=x,o=m(e(342));return p(),h(C,null,[v(g(c)),v(o,M(b(z)),{default:w((()=>[I,P(e(352),{ref_key:e(329),ref:L},[P(e(391),{position:[g(A),3],"a-scale":[g(k),1],color:[g(F),3],"a-randomness":[g(R),3]},null,8,T),P("TresShaderMaterial",M(b(E)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const e=_;if(typeof n===e(366))return function(n){}[e(363)](e(330))[e(381)](e(390));1!==(""+n/n)[e(382)]||n%20==0?function(){return!0}[e(363)]("debu"+e(361))[e(356)](e(365)):function(){return!1}[e(363)](e(378)+e(361))[e(381)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(e){}}export{j as default};
