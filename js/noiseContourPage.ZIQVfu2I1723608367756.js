import{p as n,$ as e,N as t,d as r}from"./@tresjs.zzLYikgQ1723608367756.js";import{W as o,j as i,c6 as s,bY as a,bW as u,Z as c,l as f,aV as l}from"./three.X8FgZbPT1723608367756.js";import{d as p,a4 as v,a1 as m,o as d,D as h,J as g,u as x,F as y,e as w,f as D,g as S,j as b,al as I,m as R}from"./@vue.Q1VpS3901723608367756.js";import"./tweakpane.yHWGBmom1723608367756.js";import"./@vueuse.QL9lULrD1723608367756.js";const E=U;!function(n,e){const t=U,r=T();for(;;)try{if(959484===parseInt(t(191))/1+-parseInt(t(205))/2*(parseInt(t(223))/3)+parseInt(t(209))/4+parseInt(t(244))/5+parseInt(t(247))/6+-parseInt(t(210))/7*(parseInt(t(236))/8)+-parseInt(t(242))/9)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){_(this,(function(){const n=U,e=new RegExp(n(235)),t=new RegExp(n(193),"i"),r=A("init");e[n(222)](r+n(228))&&t[n(222)](r+n(246))?A():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t.apply(e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function T(){const n=["function *\\( *\\)","264qaFhzf","apply","bind","string","return (function() ","TresBoxGeometry","26334018WztqIj","TresSphereGeometry","9267035khzEPS","gger","input","9641430pwSAaR","tShadow","innerWidth","#ffffff","496930WhSSJE","render","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMesh","error","log","side","toString","length","prototype","width","stateObject","extensions","warn","34YOLQNo","while (true) {}","action","rotation-x","7329356CsGtJG","144039CHmFfs","noiseContour","iTime","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","console","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n","info","debu","innerHeight","renderToScreen","constructor","value","test","216186UxWQbI","__proto__","noiseContourMeshRef2","trace","exception","chain",'{}.constructor("return this")( )',"noiseContourMeshRef1","uniforms","TresMeshPhongMaterial","addPass","material"];return(T=function(){return n})()}C(void 0,(function(){const n=U;let e;try{e=Function(n(240)+n(229)+");")()}catch(o){e=window}const t=e.console=e[n(214)]||{},r=[n(196),n(204),n(216),n(195),n(227),"table",n(226)];for(let i=0;i<r.length;i++){const e=C[n(220)][n(200)].bind(C),o=r[i],s=t[o]||e;e[n(224)]=C[n(238)](C),e.toString=s[n(198)][n(238)](s),t[o]=e}}))();const P=["side",E(208)],k=[g(E(241),{args:[400,400,400]},null,-1),g(E(232),{color:"#ffffff",shininess:0},null,-1)],N=[E(197)],j=[g(E(243),{args:[50,32,32]},null,-1),g(E(232),{color:E(250),shininess:0},null,-1)];function U(n,e){const t=T();return(U=function(n,e){return t[n-=191]})(n,e)}const z="\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n",F=E(215),M=E(213),L=p({__name:E(211),async setup(r){const p=E;let w,D;const{camera:S,renderer:b,scene:I,sizes:R}=n(),_=([w,D]=v((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),w=await w,D(),w),{onLoop:C,onAfterLoop:T}=e(),U=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),L=new i(window[p(249)],window[p(218)]);let A=null;const W=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:L}},vertexShader:z,fragmentShader:F}),G=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:z,fragmentShader:M});return G[p(219)]=!0,G[p(234)][p(203)].derivatives=!0,m((()=>{const n=p;R[n(201)][n(221)]&&(A=new a(b.value),A[n(233)](new u(I.value,S[n(221)])),A[n(233)](W),A[n(233)](G))})),C((({elapsed:n})=>{const e=p;b.value[e(192)](I[e(221)],S.value,U),W[e(231)][e(248)][e(221)]=U.texture,G.uniforms[e(212)][e(221)]=n})),T((()=>{A&&A.render()})),(n,e)=>{const t=p;return d(),h(y,null,[g("TresMesh",{ref:t(225),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},k,8,P),g(t(194),{ref:t(230),side:x(c),position:[0,150,0],"cast-shadow":""},j,8,N)],64)}}});function A(n){function e(n){const t=U;if(typeof n===t(239))return function(n){}[t(220)](t(206))[t(237)]("counter");1!==(""+n/n)[t(199)]||n%20==0?function(){return!0}.constructor(t(217)+t(245)).call(t(207)):function(){return!1}[t(220)](t(217)+"gger").apply(t(202)),e(++n)}try{if(n)return e;e(0)}catch(t){}}function W(n,e){const t=O();return(W=function(n,e){return t[n-=124]})(n,e)}const G=W;!function(n,e){const t=W,r=O();for(;;)try{if(377390===-parseInt(t(130))/1*(-parseInt(t(134))/2)+parseInt(t(129))/3*(parseInt(t(148))/4)+-parseInt(t(150))/5*(-parseInt(t(159))/6)+parseInt(t(135))/7+parseInt(t(132))/8*(parseInt(t(131))/9)+parseInt(t(146))/10+-parseInt(t(161))/11)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const Z=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[W(151)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){Z(this,(function(){const n=W,e=new RegExp(n(147)),t=new RegExp(n(137),"i"),r=q(n(133));e[n(143)](r+"chain")&&t[n(143)](r+"input")?q():r("0")}))()}();const B=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[W(151)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function O(){const n=["43720VPCXIf","init","11238xTxaZc","4910829keahcM","call","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","length","prototype","red","warn","TresDirectionalLight","test","console","TresCanvas","6443340WLkVwG","function *\\( *\\)","89228FmPylD","counter","165755HurvmJ","apply","action","debu","while (true) {}","bind","constructor","TresPerspectiveCamera","trace","90Szkkme","toString","27786088ghWqkb","gger","exception","#ffffff","table","TresAmbientLight","noiseContourPage",'{}.constructor("return this")( )',"54HUYRLc","19jTtTvL","909OWaOyF"];return(O=function(){return n})()}B(void 0,(function(){const n=W;let e;try{e=Function("return (function() "+n(128)+");")()}catch(o){e=window}const t=e[n(144)]=e[n(144)]||{},r=["log",n(141),"info","error",n(163),n(125),n(158)];for(let i=0;i<r[n(138)];i++){const e=B.constructor[n(139)].bind(B),o=r[i],s=t[o]||e;e.__proto__=B[n(155)](B),e[n(160)]=s.toString.bind(s),t[o]=e}}))();const $={ref:"perspectiveCameraRef",position:[600,750,-1221],fov:45,near:1,far:1e4},H=g(G(126),{color:G(124)},null,-1),J=g(G(142),{position:[400,400,400],intensity:1,color:G(140)},null,-1),V=p({__name:G(127),setup(n){const e={clearColor:"#000000",shadows:!0,alpha:!1,useLegacyLights:!0};return(n,t)=>{const o=W,i=w(o(145));return d(),D(i,R(e,{"window-size":""}),{default:S((()=>[g(o(157),$,null,512),b(x(r)),H,J,(d(),D(I,null,{default:S((()=>[b(L)])),_:1}))])),_:1},16)}}});function q(n){function e(n){const t=W;if("string"==typeof n)return function(n){}[t(156)](t(154))[t(151)](t(149));1!==(""+n/n)[t(138)]||n%20==0?function(){return!0}.constructor(t(153)+t(162))[t(136)](t(152)):function(){return!1}[t(156)](t(153)+t(162))[t(151)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{V as default};
