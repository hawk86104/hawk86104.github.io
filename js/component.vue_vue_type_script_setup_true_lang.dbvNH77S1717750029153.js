import{bb as ne,aJ as oe,aA as ie,bT as se,bn as I,ax as O,bU as N,aM as X,ao as te,bV as le,q as V,z as q,bW as ue,B as A,bX as j,T as H,bY as ce,bZ as J,a5 as de,aU as me,aH as _e,o as he,c as pe,a4 as ve,a2 as ge,ad as fe,b_ as Z,b$ as K,c0 as ye,c1 as Q,aG as ee,c2 as Ee}from"./vendor.v0nfbpA-1717750029153.js";class we extends ne{constructor(){super(),this.virtualScene=null,this.virtualScene=new oe}add(...i){return this.virtualScene.add(...i),this}destructor(){this.virtualScene.traverse(i=>{i instanceof ie&&(i.geometry.dispose(),i.material.dispose(),i.material.map&&i.material.map.dispose(),this.virtualScene.remove(i))}),this.virtualScene=null}}class ae extends se{constructor(i){super(i),this.type=I}parse(i){const s=function(e,r){switch(e){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(r||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(r||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(r||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(r||""))}},t="\n",v=function(e,r,n){r=r||1024;let _=e.pos,m=-1,a=0,h="",o=String.fromCharCode.apply(null,new Uint16Array(e.subarray(_,_+128)));for(;0>(m=o.indexOf(t))&&a<r&&_<e.byteLength;)h+=o,a+=o.length,_+=128,o+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(_,_+128)));return-1<m?(n!==!1&&(e.pos+=a+m+1),h+o.slice(0,m)):!1},l=function(e){const r=/^#\?(\S+)/,n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,u=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,_=/^\s*FORMAT=(\S+)\s*$/,m=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,a={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let h,o;for((e.pos>=e.byteLength||!(h=v(e)))&&s(1,"no header found"),(o=h.match(r))||s(3,"bad initial token"),a.valid|=1,a.programtype=o[1],a.string+=h+"\n";h=v(e),h!==!1;){if(a.string+=h+"\n",h.charAt(0)==="#"){a.comments+=h+"\n";continue}if((o=h.match(n))&&(a.gamma=parseFloat(o[1])),(o=h.match(u))&&(a.exposure=parseFloat(o[1])),(o=h.match(_))&&(a.valid|=2,a.format=o[1]),(o=h.match(m))&&(a.valid|=4,a.height=parseInt(o[1],10),a.width=parseInt(o[2],10)),a.valid&2&&a.valid&4)break}return a.valid&2||s(3,"missing format specifier"),a.valid&4||s(3,"missing image size specifier"),a},w=function(e,r,n){const u=r;if(u<8||u>32767||e[0]!==2||e[1]!==2||e[2]&128)return new Uint8Array(e);u!==(e[2]<<8|e[3])&&s(3,"wrong scanline width");const _=new Uint8Array(4*r*n);_.length||s(4,"unable to allocate buffer space");let m=0,a=0;const h=4*u,o=new Uint8Array(4),L=new Uint8Array(h);let Y=n;for(;Y>0&&a<e.byteLength;){a+4>e.byteLength&&s(1),o[0]=e[a++],o[1]=e[a++],o[2]=e[a++],o[3]=e[a++],(o[0]!=2||o[1]!=2||(o[2]<<8|o[3])!=u)&&s(3,"bad rgbe scanline format");let U=0,k;for(;U<h&&a<e.byteLength;){k=e[a++];const S=k>128;if(S&&(k-=128),(k===0||U+k>h)&&s(3,"bad scanline data"),S){const B=e[a++];for(let W=0;W<k;W++)L[U++]=B}else L.set(e.subarray(a,a+k),U),U+=k,a+=k}const re=u;for(let S=0;S<re;S++){let B=0;_[m]=L[S+B],B+=u,_[m+1]=L[S+B],B+=u,_[m+2]=L[S+B],B+=u,_[m+3]=L[S+B],m+=4}Y--}return _},y=function(e,r,n,u){const _=e[r+3],m=Math.pow(2,_-128)/255;n[u+0]=e[r+0]*m,n[u+1]=e[r+1]*m,n[u+2]=e[r+2]*m,n[u+3]=1},g=function(e,r,n,u){const _=e[r+3],m=Math.pow(2,_-128)/255;n[u+0]=N.toHalfFloat(Math.min(e[r+0]*m,65504)),n[u+1]=N.toHalfFloat(Math.min(e[r+1]*m,65504)),n[u+2]=N.toHalfFloat(Math.min(e[r+2]*m,65504)),n[u+3]=N.toHalfFloat(1)},R=new Uint8Array(i);R.pos=0;const d=l(R),E=d.width,C=d.height,x=w(R.subarray(R.pos),E,C);let $,z,F;switch(this.type){case O:F=x.length/4;const e=new Float32Array(F*4);for(let n=0;n<F;n++)y(x,n*4,e,n*4);$=e,z=O;break;case I:F=x.length/4;const r=new Uint16Array(F*4);for(let n=0;n<F;n++)g(x,n*4,r,n*4);$=r,z=I;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:E,height:C,data:$,header:d.string,gamma:d.gamma,exposure:d.exposure,type:z}}setDataType(i){return this.type=i,this}load(i,p,T,c){function G(s,M){switch(s.type){case O:case I:"colorSpace"in s?s.colorSpace="srgb-linear":s.encoding=3e3,s.minFilter=X,s.magFilter=X,s.generateMipmaps=!1,s.flipY=!0;break}p&&p(s,M)}return super.load(i,G,T,c)}}const P={sunset:"venice/venice_sunset_1k.hdr",studio:"studio/poly_haven_studio_1k.hdr",city:"city/canary_wharf_1k.hdr",umbrellas:"outdoor/outdoor_umbrellas_1k.hdr",night:"outdoor/satara_night_1k.hdr",forest:"outood/mossy_forest_1k.hdr",snow:"outdoor/snowy_forest_path_01_1k.hdr",dawn:"kiara/kiara_1_dawn_1k.hdr",hangar:"indoor/small_hangar_01_1k.hdr",urban:"indoor/abandoned_games_room_02_1k.hdr",modern:"city/modern_buildings_2_1k.hdr",shangai:"city/shanghai_bund_1k.hdr"},be="https://raw.githubusercontent.com/Tresjs/assets/main/textures/hdr/";async function Re(D,i){const{scene:p}=te(),{preset:T,blur:c,files:G=[],path:s="",background:M}=le(D),f=V(),b=q(()=>Array.isArray(G.value)),t=q(()=>b.value?ue:ae),v=V(null);return A(()=>[G,s],async([l,w])=>{if(l.value.length>0&&!T.value){try{v.value=await j(H(t),b.value?[H(l)]:H(l),y=>{w.value&&y.setPath(H(w))})}catch(y){throw new Error("Failed to load environment map: ".concat(y))}v.value&&(f.value=b.value?v.value[0]:v.value,f.value.mapping=b.value?ce:J)}},{immediate:!0}),A(()=>f.value,l=>{p.value&&(p.value.environment=l)},{immediate:!0}),A(()=>[M.value,f.value],([l,w])=>{if(p.value){let y=i!=null&&i.value?i.value.texture:w,g=p.value.background;g!=null&&g.isColor||(g=void 0),p.value.background=l?y:g}},{immediate:!0}),A(()=>c==null?void 0:c.value,l=>{p.value&&(p.value.backgroundBlurriness=l)},{immediate:!0}),A(T,async l=>{if(l&&l in P){const w=be,y=P[l];try{v.value=await j(ae,y,g=>{w&&g.setPath(w)})}catch(g){throw new Error("Failed to load environment map: ".concat(g))}v.value&&(f.value=v.value,f.value.mapping=J)}else if(l&&!(l in P))throw new Error("Preset must be one of: ".concat(Object.keys(P).join(", ")))},{immediate:!0}),{texture:f}}const Se=de({__name:"component",props:{background:{type:[Boolean,String],default:!1},blur:{default:0},files:{default:[]},path:{default:""},preset:{default:void 0},resolution:{default:256},near:{default:1},far:{default:1e3},frames:{default:1/0},useDefaultScene:{type:Boolean,default:!1}},async setup(D,{expose:i}){let p,T;const c=D,G=V(null);i({texture:G});const{extend:s,renderer:M,scene:f}=te();let b=null,t=V(null),v=null;const l=V(null);me(()=>{var d,E;(d=l.value)==null||d.destructor(),(E=t.value)==null||E.dispose()});const{onBeforeLoop:w}=fe();let y=1;w(()=>{v&&l.value&&t.value&&(c.frames===1/0||y<c.frames)&&(c.useDefaultScene?v.update(M.value,f.value):v.update(M.value,Ee(l.value.virtualScene)),y++)});const g=([p,T]=_e(()=>Re(c,t)),p=await p,T(),p).texture,R=d=>{d?(f.value.environment=d.texture,c.background&&(f.value.background=d.texture)):(f.value.environment=g.value,c.background&&(f.value.background=g.value))};return A(g,d=>{t.value&&R(t.value)},{immediate:!0,deep:!0}),s({EnvSence:we}),A(()=>ye().default,d=>{var E,C,x;if(d&&(!t.value||t.value.texture.type!==I)&&(b=d(),Array.isArray(b)&&b.length>0&&typeof((E=b[0])==null?void 0:E.type)!="symbol")){(C=t.value)==null||C.dispose(),t.value=new Z(c.resolution),t.value.texture.type=I,v=new K(c.near,c.far,t.value),R(t.value);return}(x=t.value)==null||x.dispose(),t.value=null,R(null)},{immediate:!0,deep:!0}),G.value=g,A(()=>c.useDefaultScene,d=>{var E;d&&(!t.value||t.value.texture.type!==Q)&&((E=t.value)==null||E.dispose(),t.value=new Z(c.resolution),v=new K(c.near,c.far,t.value),t.value.texture.type=Q,t.value.texture.generateMipmaps=!1,t.value.texture.minFilter=ee,t.value.texture.magFilter=ee,R(t.value))},{immediate:!0}),(d,E)=>H(t)?(he(),pe("TresEnvSence",{key:0,ref_key:"envSence",ref:l},[ve(d.$slots,"default")],512)):ge("",!0)}});export{Se as _};
