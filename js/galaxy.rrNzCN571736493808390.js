import{C as n,az as t,c0 as o,ak as e,am as a,a as r}from"./three.lAfZYOpc1736493808390.js";import{e as s,g as i,F as c,U as l}from"./@tresjs.g7tJPOCI1736493808390.js";import{d as u,b as d,w as f,e as m,o as p,D as h,j as v,u as g,g as w,J as M,aj as b,ak as P,F as y}from"./@vue.-Mz_IXfk1736493808390.js";import"./@vueuse.kU-N6GoC1736493808390.js";const C=S;!function(n,t){const o=S,e=_();for(;;)try{if(545690===-parseInt(o(531))/1*(-parseInt(o(489))/2)+parseInt(o(493))/3*(-parseInt(o(519))/4)+-parseInt(o(523))/5+parseInt(o(547))/6+-parseInt(o(501))/7+-parseInt(o(512))/8+parseInt(o(487))/9)break;e.push(e.shift())}catch(a){e.push(e.shift())}}();const x=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o.apply(t,arguments);return o=null,n}}:function(){};return n=!1,e}}();!function(){x(this,(function(){const n=S,t=new RegExp(n(542)),o=new RegExp(n(536),"i"),e=A("init");t[n(491)](e+n(518))&&o[n(491)](e+n(496))?A():e("0")}))()}();const z=function(){let n=!0;return function(t,o){const e=n?function(){if(o){const n=o[S(505)](t,arguments);return o=null,n}}:function(){};return n=!1,e}}();function S(n,t){const o=_();return(S=function(n,t){return o[n-=485]})(n,t)}z(void 0,(function(){const n=S;let t;try{t=Function(n(546)+n(504)+");")()}catch(a){t=window}const o=t[n(502)]=t[n(502)]||{},e=[n(527),n(543),n(528),n(549),n(530),"table","trace"];for(let r=0;r<e[n(522)];r++){const t=z.constructor[n(516)].bind(z),a=e[r],s=o[a]||t;t.__proto__=z[n(490)](z),t[n(510)]=s.toString[n(490)](s),o[a]=t}}))();const T=["position",C(497),C(499),C(535)];function _(){const n=["outsideColor","exception","37fkFVJf","aScale","#1b3984","forEach","a-randomness","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresCanvas","clone","uTime","constructor","count","function *\\( *\\)","warn","sin","cos","return (function() ","171690MGpjoD","radius","error","bufferRef","random","19936458culqiP","gger","7816RHkpOD","bind","test","randomnessPower","3KJRDTL","branches","action","input","a-scale","size","color","geometry","3725582WqNBZD","console","#b5f28d",'{}.constructor("return this")( )',"apply","uniforms","setAttribute","while (true) {}","counter","toString","galaxy","6516480WaGtdr","debu","lerp","string","prototype","TresPoints","chain","50104JGVyzu","keys","TresPerspectiveCamera","length","2416855XSMYIe","value","material","aRandomness","log","info"];return(_=function(){return n})()}const j=u({__name:C(511),setup(u){const x=C,z={clearColor:"black",shadows:!0,alpha:!1,shadowMapType:o,outputColorSpace:e,toneMapping:a,windowSize:!0},S={count:3e4,size:20,radius:5,branches:5,spin:4,randomness:.13,randomnessPower:7.5,insideColor:x(503),outsideColor:"#1b3984"},_=new n(S.insideColor),j=new n(S[x(529)]),A=new Float32Array(3*S[x(541)]),F=new Float32Array(3*S.count),I=new Float32Array(S[x(541)]),k=new Float32Array(3*S.count);for(let n=0;n<S[x(541)];n++){const t=3*n,o=Math[x(486)]()*S[x(548)],e=n%S.branches*Math.PI*2/S[x(494)];A[t]=Math[x(545)](e)*o,A[t+1]=0,A[t+2]=Math[x(544)](e)*o;const a=Math[x(486)]()**S[x(492)]*(Math[x(486)]()<.5?-1:1),r=Math[x(486)]()**S[x(492)]*(Math.random()<.5?-1:1),s=Math.random()**S[x(492)]*(Math[x(486)]()<.5?-1:1);k[t]=a,k[t+1]=r,k[t+2]=s;const i=_.clone();i.lerp(j,o/S.radius),F[t+0]=i.r,F[t+1]=i.g,F[t+2]=i.b,I[n]=Math[x(486)]()}const R={transparent:!0,depthWrite:!1,blending:t,vertexColors:!0,vertexShader:"uniform float uSize;\nuniform float uTime;\n\nattribute float aScale;\nattribute vec3 aRandomness;\n\nvarying vec3 vColor;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    \n    float angle = atan(modelPosition.x, modelPosition.z);\n    float distanceToCenter = length(modelPosition.xz);\n    float angleOffset = (1.0 / distanceToCenter) * uTime * 0.2;\n    angle += angleOffset;\n\n    modelPosition.x = distanceToCenter * cos(angle);\n    modelPosition.z = distanceToCenter * sin(angle);\n\n    \n    modelPosition.xyz += aRandomness;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectedPosition = projectionMatrix * viewPosition;\n    gl_Position = projectedPosition;\n\n    gl_PointSize = uSize * aScale;\n\n    \n    gl_PointSize *= ( 1.0 / - viewPosition.z);\n\n    \n    vColor = color;\n\n}",fragmentShader:"varying vec3 vColor;\n\nvoid main()\n{\n    \n    float strength = distance(gl_PointCoord, vec2(0.5));\n    strength = 1.0 - strength;\n    strength = pow(strength, 5.0);\n\n    \n    vec3 color = mix(vec3(0.0), vColor, strength);\n    gl_FragColor = vec4(color, 1.0);\n}",uniforms:{uTime:{value:0},uSize:{value:S[x(498)]}}};const D=d(null),{onLoop:O}=s();O((({elapsed:n})=>{const t=x;D[t(524)]&&(D[t(524)][t(525)][t(506)][t(539)].value=n)}));const{count:G,size:J,radius:E,branches:W,spin:Z,randomness:q,randomnessPower:B,insideColor:L,outsideColor:V}=i({count:{value:3e4,min:0,max:1e5,step:1},size:{value:20,min:.01,max:40,step:1},radius:{value:5,min:.1,max:20,step:.01},branches:{value:5,min:2,max:10,step:1},spin:{value:4,min:-5,max:5,step:.01},randomness:{value:.13,min:.1,max:.2,step:.01},randomnessPower:{value:7.5,min:1,max:10,step:.001},insideColor:x(503),outsideColor:x(533)});return f([G[x(524)],J[x(524)],E.value,W[x(524)],Z[x(524)],q[x(524)],B[x(524)],L[x(524)],V.value],(t=>{const o=x;t[o(534)](((n,t)=>{const e=o;S[Object[e(520)](S)[t]]=n[e(524)]})),function(){const t=x;if(D[t(524)]){const o=new n(S.insideColor),e=new n(S.outsideColor),a=new Float32Array(3*S[t(541)]),s=new Float32Array(3*S[t(541)]),i=new Float32Array(S[t(541)]),c=new Float32Array(3*S[t(541)]);for(let n=0;n<S[t(541)];n++){const r=3*n,l=Math[t(486)]()*S.radius,u=n%S.branches*Math.PI*2/S[t(494)];a[r]=Math[t(545)](u)*l,a[r+1]=0,a[r+2]=Math[t(544)](u)*l;const d=Math.random()**S.randomnessPower*(Math[t(486)]()<.5?-1:1),f=Math.random()**S[t(492)]*(Math[t(486)]()<.5?-1:1),m=Math.random()**S[t(492)]*(Math[t(486)]()<.5?-1:1);c[r]=d,c[r+1]=f,c[r+2]=m;const p=o[t(538)]();p[t(514)](e,l/S.radius),s[r+0]=p.r,s[r+1]=p.g,s[r+2]=p.b,i[n]=Math.random()}D[t(524)][t(500)].setAttribute("position",new r(a,3)),D[t(524)].geometry.setAttribute(t(526),new r(c,3)),D[t(524)][t(500)][t(507)]("color",new r(s,3)),D[t(524)][t(500)][t(507)](t(532),new r(i,1))}}()})),(n,t)=>{const o=x,e=m(o(537));return p(),h(y,null,[v(g(c)),v(e,b(P(z)),{default:w((()=>[t[0]||(t[0]=M(o(521),{position:[3,3,3]},null,-1)),M(o(517),{ref_key:o(485),ref:D},[M("TresBufferGeometry",{position:[g(A),3],"a-scale":[g(I),1],color:[g(F),3],"a-randomness":[g(k),3]},null,8,T),M("TresShaderMaterial",b(P(R)),null,16)],512),v(g(l))])),_:1},16)],64)}}});function A(n){function t(n){const o=S;if(typeof n===o(515))return function(n){}.constructor(o(508))[o(505)](o(509));1!==(""+n/n)[o(522)]||n%20==0?function(){return!0}[o(540)](o(513)+o(488)).call(o(495)):function(){return!1}[o(540)]("debu"+o(488))[o(505)]("stateObject"),t(++n)}try{if(n)return t;t(0)}catch(o){}}export{j as default};
