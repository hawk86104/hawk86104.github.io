import{u as t,_ as o,a as n}from"./mergeTres.vz8xUUfU1741007821308.js";import{l as r}from"./utils.qrEcVY0O1741007821308.js";import{e}from"./@tresjs.u6hJLBm41741007821308.js";import{d as a,r as i,a2 as l,o as c,H as s,F as u,X as f,N as p,m as v,e as d,j as g,g as m,f as h,al as _}from"./@vue.NRI7TcgI1741007821308.js";import{_ as y}from"./@fesjs.5qm9mpwh1741007821308.js";import"./@amap.1goFCJT_1741007821308.js";import"./pinia.uil_kwoa1741007821308.js";import"./three.sBrYSCgq1741007821308.js";import"./three-mesh-bvh.7EsR8FeE1741007821308.js";import"./postprocessing.rsQjznIU1741007821308.js";import"./@vueuse.jd1Cg91M1741007821308.js";import"./vue-router.ArfKSsyg1741007821308.js";import"./lodash-es.pklfUAS51741007821308.js";import"./@qlin.yHhFDldE1741007821308.js";import"./@floating-ui.BPbuo5Gx1741007821308.js";import"./@juggle.7yjBMqoW1741007821308.js";const C=b;!function(t,o){const n=b,r=S();for(;;)try{if(756970===parseInt(n(212))/1*(-parseInt(n(229))/2)+-parseInt(n(232))/3+-parseInt(n(206))/4*(-parseInt(n(225))/5)+parseInt(n(240))/6+-parseInt(n(214))/7*(-parseInt(n(185))/8)+parseInt(n(192))/9*(parseInt(n(205))/10)+parseInt(n(201))/11*(-parseInt(n(222))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const x=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){x(this,(function(){const t=b,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(198),"i"),r=z("init");o[t(224)](r+t(219))&&n[t(224)](r+"input")?z():r("0")}))()}();const w=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[b(187)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function b(t,o){const n=S();return(b=function(t,o){return n[t-=184]})(t,o)}w(void 0,(function(){const t=b;let o;try{o=Function(t(235)+t(207)+");")()}catch(e){o=window}const n=o[t(220)]=o.console||{},r=[t(239),t(190),t(215),t(211),t(226),"table",t(200)];for(let a=0;a<r[t(236)];a++){const o=w.constructor.prototype.bind(w),e=r[a],i=n[e]||o;o[t(193)]=w[t(233)](w),o[t(227)]=i[t(227)].bind(i),n[e]=o}}))();const I=[C(191),C(204),"normal"];function S(){const t=["buildings","chain","console","cameraState","88716FKABaX","u_near","test","82930HxVBdV","exception","toString","debu","779426aepTQC","while (true) {}","constructor","3307641oVkabj","bind","u_zoom","return (function() ","length","TresBufferGeometry","normalArray","log","6465612qFWrIS","TresGroup","TresShaderMaterial","136xiSvhA","far","apply","stateObject","action","warn","position","9KHZHtg","__proto__","near","lngLatToCoord","string","uniforms","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","push","trace","1133KdYTag","exp","uvArray","faceUv","10555330VBJZZS","76XRjiBc",'{}.constructor("return this")( )',"value","counter","gger","error","2VOBahm","mapHandle","392063wRawRe","info","customCoords","call"];return(S=function(){return t})()}const j=a({__name:"buildingModels",setup(o){const n=t(),a=t=>{const o=b;for(let r=0;r<t.length;r+=3){const e=[t[r],t[r+1]],a=n[o(213)][o(216)][o(195)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[b(221)]&&(async()=>{const t=b,o=await r("https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson",t(218));for(let n=0;n<o.length;n++){const r=o[n];a(r.geometry);const e=new Float32Array(r.geometry),i=new Float32Array(r[t(204)]),l=new Float32Array(r.geometry[t(236)]);d[t(199)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=b;n[t(221)]&&(g.uniforms[t(234)][t(208)]=n.mapHandle.getZoom(),g[t(197)][t(223)][t(208)]=n[t(221)][t(194)],g[t(197)].u_far[t(208)]=n[t(221)][t(186)])})),(t,o)=>{const n=b;return c(),s(n(241),null,[(c(!0),s(u,null,f(d,((t,o)=>{const r=n;return c(),s("TresMesh",{key:""+o},[p(r(237),{ref_for:!0,ref:"tbgRef",position:[t.positionArray,3],faceUv:[t[r(203)],2],normal:[t[r(238)],3]},null,8,I),p(r(184),v({ref_for:!0},g),null,16)])})),128))])}}});function z(t){function o(t){const n=b;if(typeof t===n(196))return function(t){}[n(231)](n(230))[n(187)](n(209));1!==(""+t/t)[n(236)]||t%20==0?function(){return!0}[n(231)](n(228)+n(210))[n(217)](n(189)):function(){return!1}[n(231)](n(228)+n(210))[n(187)](n(188)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const A=V;!function(t,o){const n=V,r=F();for(;;)try{if(578732===parseInt(n(444))/1+parseInt(n(432))/2+-parseInt(n(426))/3*(-parseInt(n(424))/4)+-parseInt(n(411))/5*(parseInt(n(445))/6)+parseInt(n(427))/7*(-parseInt(n(414))/8)+-parseInt(n(409))/9+parseInt(n(431))/10)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const R=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[V(418)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){R(this,(function(){const t=V,o=new RegExp(t(420)),n=new RegExp(t(417),"i"),r=M(t(435));o.test(r+t(413))&&n[t(410)](r+t(428))?M():r("0")}))()}();const P=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function F(){const t=["function *\\( *\\)","toString","debu","table","814544kyGPfm","length","9TgqOVJ","87521wjcXpe","input","manual","console","7091020tedHAM","1117392zoiCgT","gger","exception","init","string","tresCanvas","call","bind","tcRef","while (true) {}","buildings","warn","992167nNAYpE","913854Aubqac","constructor","stateObject","8445681QZPooe","test","35zybcci","prototype","chain","184VVaobO","action","darkblue","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","apply","TresAmbientLight"];return(F=function(){return t})()}function V(t,o){const n=F();return(V=function(t,o){return n[t-=409]})(t,o)}P(void 0,(function(){const t=V,o=function(){let t;try{t=Function('return (function() {}.constructor("return this")( ));')()}catch(o){t=window}return t}(),n=o[t(430)]=o[t(430)]||{},r=["log",t(443),"info","error",t(434),t(423),"trace"];for(let e=0;e<r[t(425)];e++){const o=P.constructor[t(412)][t(439)](P),a=r[e],i=n[a]||o;o.__proto__=P[t(439)](P),o[t(421)]=i[t(421)][t(439)](i),n[a]=o}}))();function M(t){function o(t){const n=V;if(typeof t===n(436))return function(t){}[n(446)](n(441))[n(418)]("counter");1!==(""+t/t)[n(425)]||t%20==0?function(){return!0}[n(446)](n(422)+"gger")[n(438)](n(415)):function(){return!1}.constructor("debu"+n(433))[n(418)](n(447)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const T=y(a({__name:A(442),setup(t){const r=A,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(429)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[g(o,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(416)}),g(f,v({id:l(437),ref:l(440)},a),{default:m((()=>[i[0]||(i[0]=p("TresPerspectiveCamera",{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(419),{intensity:.5},null,-1)),g(n,{center:e}),(c(),h(_,null,{default:m((()=>[g(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{T as default};
