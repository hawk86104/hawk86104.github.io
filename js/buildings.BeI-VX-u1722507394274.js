import{u as t,_ as o,a as n}from"./mergeTres.GYWtsyzd1722507394274.js";import{l as r}from"./utils.CuCN1ddQ1722507394274.js";import{$ as e}from"./@tresjs.bNNpPzYW1722507394274.js";import{d as a,r as i,a1 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as g,g as m,f as h,al as _,am as y,an as C}from"./@vue.CFXy4cc91722507394274.js";import{_ as x}from"./@fesjs.HUfyfxyE1722507394274.js";import"./@amap.B-BVafMU1722507394274.js";import"./pinia.CScY4tX71722507394274.js";import"./vue-demi.Dq6ymT-81722507394274.js";import"./three.Brogx0uK1722507394274.js";import"./three-mesh-bvh.1z_sibLA1722507394274.js";import"./tweakpane.BCjFYDHx1722507394274.js";import"./@vueuse.CY5GWLAn1722507394274.js";import"./vue-router.B7QAPA1N1722507394274.js";import"./lodash-es.X8SAORSL1722507394274.js";import"./@qlin.BIlp8Yi21722507394274.js";import"./@babel.DOgRMOv71722507394274.js";import"./@floating-ui.B75jtkXD1722507394274.js";import"./@juggle.BnTvdTVm1722507394274.js";const w=I;!function(t,o){const n=I,r=S();for(;;)try{if(111758===-parseInt(n(268))/1+parseInt(n(305))/2+-parseInt(n(261))/3+parseInt(n(278))/4*(-parseInt(n(317))/5)+parseInt(n(293))/6+-parseInt(n(263))/7*(-parseInt(n(273))/8)+-parseInt(n(264))/9)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function S(){const t=["uvArray","1287378zDRuqN","call","while (true) {}","string","buildings","u_zoom","bind","stateObject","normal","constructor","near","u_far","409830QxOueJ","toString","normalArray","input","function *\\( *\\)","gger","lngLatToCoord","return (function() ","log","TresBufferGeometry","test",'{}.constructor("return this")( )',"25eUUqKO","action","error","push","647079CdbgGS","console","23513ALyYva","167175kklUhf","init","faceUv","mapHandle","34269HgdSso","chain","length","value","getZoom","344WseaJy","positionArray","info","far","atan","146896TirDtM","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","__proto__","uniforms","debu","prototype","customCoords","apply","buildingModels","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","geometry","TresMesh","u_near","cameraState"];return(S=function(){return t})()}!function(){b(this,(function(){const t=I,o=new RegExp(t(309)),n=new RegExp(t(287),"i"),r=U(t(265));o[t(315)](r+t(269))&&n[t(315)](r+t(308))?U():r("0")}))()}();const j=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();function I(t,o){const n=S();return(I=function(t,o){return n[t-=259]})(t,o)}j(void 0,(function(){const t=I;let o;try{o=Function(t(312)+t(316)+");")()}catch(e){o=window}const n=o[t(262)]=o[t(262)]||{},r=[t(313),"warn",t(275),t(259),"exception","table","trace"];for(let a=0;a<r[t(270)];a++){const o=j[t(302)][t(283)][t(299)](j),e=r[a],i=n[e]||o;o[t(280)]=j[t(299)](j),o.toString=i[t(306)][t(299)](i),n[e]=o}}))();const z=["position","faceUv",w(301)],R=a({__name:w(286),setup(o){const n=t(),a=t=>{const o=I;for(let r=0;r<t[o(270)];r+=3){const e=[t[r],t[r+1]],a=n[o(267)][o(284)][o(311)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),g={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{n[I(291)]&&(async()=>{const t=I,o=await r(t(279),t(297));for(let n=0;n<o[t(270)];n++){const r=o[n];a(r[t(288)]);const e=new Float32Array(r[t(288)]),i=new Float32Array(r[t(266)]),l=new Float32Array(r[t(288)][t(270)]);d[t(260)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:m}=e();return m((()=>{const t=I;n[t(291)]&&(g[t(281)][t(298)].value=n[t(267)][t(272)](),g[t(281)][t(290)][t(271)]=n[t(291)][t(303)],g[t(281)][t(304)][t(271)]=n[t(291)][t(276)])})),(t,o)=>(c(),s("TresGroup",null,[(c(!0),s(u,null,f(d,((t,o)=>{const n=I;return c(),s(n(289),{key:""+o},[p(n(314),{ref_for:!0,ref:"tbgRef",position:[t[n(274)],3],faceUv:[t[n(292)],2],normal:[t[n(307)],3]},null,8,z),p("TresShaderMaterial",v({ref_for:!0},g),null,16)])})),128))]))}});function U(t){function o(t){const n=I;if(typeof t===n(296))return function(t){}[n(302)](n(295))[n(285)]("counter");1!==(""+t/t)[n(270)]||t%20==0?function(){return!0}[n(302)](n(282)+n(310))[n(294)](n(318)):function(){return!1}.constructor(n(282)+"gger")[n(285)](n(300)),o(++t)}try{if(t)return o;o(0)}catch(n){}}const P=M;!function(t,o){const n=M,r=W();for(;;)try{if(679139===-parseInt(n(430))/1*(parseInt(n(431))/2)+-parseInt(n(457))/3+-parseInt(n(454))/4+parseInt(n(424))/5+-parseInt(n(461))/6+-parseInt(n(459))/7+parseInt(n(439))/8)break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const A=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n[M(446)](o,arguments);return n=null,t}}:function(){};return t=!1,r}}();!function(){A(this,(function(){const t=M,o=new RegExp("function *\\( *\\)"),n=new RegExp(t(460),"i"),r=E("init");o[t(433)](r+"chain")&&n[t(433)](r+t(451))?E():r("0")}))()}();const F=function(){let t=!0;return function(o,n){const r=t?function(){if(n){const t=n.apply(o,arguments);return n=null,t}}:function(){};return t=!1,r}}();F(void 0,(function(){const t=M;let o;try{o=Function(t(443)+t(426)+");")()}catch(e){o=window}const n=o.console=o[t(440)]||{},r=[t(456),t(438),t(436),t(458),"exception",t(434),t(441)];for(let a=0;a<r.length;a++){const o=F[t(444)][t(435)].bind(F),e=r[a],i=n[e]||o;o[t(427)]=F[t(450)](F),o[t(447)]=i[t(447)].bind(i),n[e]=o}}))();const k=t=>(y(P(442)),t=t(),C(),t),D=k((()=>p(P(453),{fov:60,near:.1,far:2e3},null,-1))),L=k((()=>p(P(449),{intensity:.5},null,-1)));function M(t,o){const n=W();return(M=function(t,o){return n[t-=424]})(t,o)}function W(){const t=["constructor","darkblue","apply","toString","action","TresAmbientLight","bind","input","debu","TresPerspectiveCamera","2428740BEbgpx","tcRef","log","989424QHwuMO","error","6750128JWtDin","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","2673708CljitK","424470rPzyNG","length",'{}.constructor("return this")( )',"__proto__","while (true) {}","gger","20TXucNN","111336COjtUu","counter","test","table","prototype","info","buildings","warn","32436160rLSmVE","console","trace","data-v-40288e17","return (function() "];return(W=function(){return t})()}function E(t){function o(t){const n=M;if("string"==typeof t)return function(t){}.constructor(n(428))[n(446)](n(432));1!==(""+t/t)[n(425)]||t%20==0?function(){return!0}.constructor(n(452)+n(429)).call(n(448)):function(){return!1}.constructor("debugger")[n(446)]("stateObject"),o(++t)}try{if(t)return o;o(0)}catch(n){}}const N=x(a({__name:P(437),setup(t){const r=[121.407867,31.157717],e=i({alpha:!0,antialias:!0,autoClear:!1,disableRender:!0});return(t,a)=>{const i=M,l=d("TresCanvas");return c(),s(u,null,[g(o,{center:r,zoom:19,pitch:65.59312320916906,mapStyle:i(445)}),g(l,v({id:"tresCanvas",ref:i(455)},e),{default:m((()=>[D,L,g(n,{center:r}),(c(),h(_,null,{default:m((()=>[g(R)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-40288e17"]]);export{N as default};
