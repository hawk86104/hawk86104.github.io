import{o as e}from"./@tresjs.zc7faK4J1743660816268.js";import{P as o}from"./tweakpane.ivGeiIdz1743660816268.js";import{d as r,w as n,o as t,H as i,N as a,m as s,u as l,r as c,e as u,f,g as m,j as p}from"./@vue.B5PFBfKs1743660816268.js";import{C as d,b as g,a$ as v,a5 as w,cs as y}from"./three.2wx8FU0g1743660816268.js";import"./postprocessing.ApTwx-211743660816268.js";import"./@vueuse.jtbb8I7w1743660816268.js";!function(e,o){const r=h,n=V();for(;;)try{if(445255===-parseInt(r(504))/1+parseInt(r(509))/2*(parseInt(r(503))/3)+parseInt(r(478))/4+parseInt(r(496))/5*(-parseInt(r(490))/6)+-parseInt(r(495))/7+-parseInt(r(480))/8*(-parseInt(r(510))/9)+-parseInt(r(514))/10*(parseInt(r(485))/11))break;n.push(n.shift())}catch(t){n.push(n.shift())}}();const C=function(){let e=!0;return function(o,r){const n=e?function(){if(r){const e=r[h(493)](o,arguments);return r=null,e}}:function(){};return e=!1,n}}();function h(e,o){const r=V();return h=function(e,o){return r[e-=474]},h(e,o)}!function(){C(this,(function(){const e=h,o=new RegExp("function *\\( *\\)"),r=new RegExp(e(491),"i"),n=M(e(484));o[e(477)](n+e(486))&&r[e(477)](n+e(507))?M():n("0")}))()}();const x=function(){let e=!0;return function(o,r){const n=e?function(){if(r){const e=r.apply(o,arguments);return r=null,e}}:function(){};return e=!1,n}}();function T(e,o){const r=h;if(!e[r(499)])return void console[r(512)]("The geometry must be a BufferGeometry.");!e[r(501)][r(482)]&&e[r(498)]();const n=e[r(501)].position,t=e[r(501)][r(482)],i=n.array,a=t.array;for(let s=0;s<n[r(488)];s++){const e=3*s;i[e]+=a[e]*o,i[e+1]+=a[e+1]*o,i[e+2]+=a[e+2]*o}n[r(492)]=!0}function M(e){function o(e){const r=h;if(typeof e===r(483))return function(e){}[r(506)](r(502)).apply(r(476));1!==(""+e/e)[r(474)]||e%20==0?function(){return!0}[r(506)](r(497)+r(487))[r(479)](r(481)):function(){return!1}[r(506)](r(497)+"gger")[r(493)]("stateObject"),o(++e)}try{if(e)return o;o(0)}catch(r){}}function V(){const e=["toString","constructor","input","exception","1288414cQrAFi","6236901SDtCXM","warn","error",'{}.constructor("return this")( )',"22070AdNBEm","console","length","trace","counter","test","511740MhHtWs","call","8aQVIrz","action","normal","string","init","1496oDVazk","chain","gger","count","table","54kguKim","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","needsUpdate","apply","__proto__","4235735TgHTor","7865yqYuUT","debu","computeVertexNormals","isBufferGeometry","bind","attributes","while (true) {}","3PXjDGx","100462BrdapL"];return(V=function(){return e})()}x(void 0,(function(){const e=h,o=function(){const e=h;let o;try{o=Function("return (function() "+e(513)+");")()}catch(r){o=window}return o}(),r=o[e(515)]=o.console||{},n=["log",e(511),"info",e(512),e(508),e(489),e(475)];for(let t=0;t<n[e(474)];t++){const o=x[e(506)].prototype[e(500)](x),i=n[t],a=r[i]||o;o[e(494)]=x[e(500)](x),o[e(505)]=a[e(505)][e(500)](a),r[i]=o}}))();var b="varying vec3 vVertexWorldPosition;\nvarying vec3 vVertexNormal;\nvarying vec4 vFragColor;\nvoid main() {\n  vVertexNormal = normalize(normalMatrix * normal);\n  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}",P="uniform vec3 glowColor;\nuniform float coeficient;\nuniform float power;\nvarying vec3 vVertexNormal;\nvarying vec3 vVertexWorldPosition;\nvarying vec4 vFragColor;\nvoid main() {\n  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;\n  vec3 viewCameraToVertex = (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;\n  viewCameraToVertex = normalize(viewCameraToVertex);\n  float intensity =\n      pow(coeficient + dot(vVertexNormal, viewCameraToVertex), power);\n  gl_FragColor = vec4(glowColor, intensity);\n}";const j=["geometry"],B=["blending","side"],_=["geometry"],I=["blending","side"],z=r({__name:"geometricGlowMesh",props:{geometry:Object,inColor:{default:"hotpink"},outColor:{default:"hotpink"},inPower:{default:1.4},outPower:{default:1.2},inCoeficient:{default:1.1},outCoeficient:{default:.1}},setup(e){const o=e,r=o.geometry.clone();T(r,.01);const c=o.geometry.clone();T(c,.2);const u={uniforms:{coeficient:{value:o.inCoeficient},power:{value:o.inPower},glowColor:{value:new d(o.inColor)},viewVector:{value:new g(0,0,1)}},vertexShader:b,fragmentShader:P},f={uniforms:{coeficient:{value:o.outCoeficient},power:{value:o.outPower},glowColor:{value:new d(o.outColor)},viewVector:{value:new g(0,0,1)}},vertexShader:b,fragmentShader:P};return n((()=>[o.inColor,o.outColor]),(([e,o])=>{u.uniforms.glowColor.value.set(e),f.uniforms.glowColor.value.set(o)})),n((()=>[o.inPower,o.outPower,o.inCoeficient,o.outCoeficient]),(([e,o,r,n])=>{u.uniforms.power.value=e,f.uniforms.power.value=o,u.uniforms.coeficient.value=r,f.uniforms.coeficient.value=n})),(e,o)=>(t(),i("TresGroup",null,[a("TresMesh",{geometry:l(r)},[a("TresShaderMaterial",s(u,{blending:v,transparent:"",depthWrite:!1,side:void 0}),null,16,B)],8,j),a("TresMesh",{geometry:l(c),visible:!0},[a("TresShaderMaterial",s(f,{blending:v,transparent:"",depthWrite:!1,side:w}),null,16,I)],8,_)]))}}),N=["geometry"],S=["geometry"],k=["geometry"],G=["geometry"],W=["geometry"],F=r({__name:"geometricGlow",setup(r){const n=new y(.75,.25,64),i=n.clone();T(i,-.1);const d=n.clone();T(d,.1);const g=c({inColor:"#0078ff",outColor:"#ff00ba",inPower:1.4,outPower:1.2,inCoeficient:1.1,outCoeficient:.1}),v=new o;return v.addBinding(g,"inColor",{label:"内发光色"}),v.addBinding(g,"inPower",{label:"内发光强度",step:.01,min:0,max:4}),v.addBinding(g,"inCoeficient",{step:.01,min:0,max:4}),v.addBinding(g,"outColor",{label:"外发光色"}),v.addBinding(g,"outPower",{label:"外发光强度",step:.01,min:0,max:6}),v.addBinding(g,"outCoeficient",{step:.01,min:0,max:4}),(o,r)=>{const c=u("TresCanvas");return t(),f(c,{"window-size":"",clearColor:"#333333"},{default:m((()=>[r[5]||(r[5]=a("TresPerspectiveCamera",{position:[5,5,5]},null,-1)),p(l(e)),a("TresMesh",{position:[0,1,-4],geometry:l(n)},[r[1]||(r[1]=a("TresMeshNormalMaterial",{transparent:"",opacity:.8},null,-1)),a("TresMesh",{geometry:l(i)},r[0]||(r[0]=[a("TresMeshBasicMaterial",{wireframe:"",color:"#000"},null,-1)]),8,S)],8,N),a("TresMesh",{position:[0,1,4],geometry:l(n)},[r[3]||(r[3]=a("TresMeshNormalMaterial",{transparent:"",opacity:.9},null,-1)),a("TresMesh",{geometry:l(d)},r[2]||(r[2]=[a("TresMeshBasicMaterial",{wireframe:"",color:"#000"},null,-1)]),8,G)],8,k),a("TresMesh",{position:[0,1,0],geometry:l(n),renderOrder:1},[r[4]||(r[4]=a("TresMeshBasicMaterial",{color:"gray"},null,-1)),p(z,s({geometry:l(n)},g),null,16,["geometry"])],8,W),r[6]||(r[6]=a("TresGridHelper",{args:[10,10]},null,-1))])),_:1})}}});export{F as default};
