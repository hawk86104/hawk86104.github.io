import{u as t,_ as n,a as o}from"./mergeTres.MtoOYCBC1731552996711.js";import{l as r}from"./utils.L-vmRhm51731552996711.js";import{e}from"./@tresjs.01P8tiuF1731552996711.js";import{d as a,r as i,a3 as l,o as c,D as s,F as u,V as f,J as p,m as v,e as d,j as m,g,f as h,al as _}from"./@vue.-THQH3GC1731552996711.js";import{_ as y}from"./@fesjs.ffiiLppw1731552996711.js";import"./@amap.QHC596bA1731552996711.js";import"./pinia.Yf0ZNVo31731552996711.js";import"./vue-demi.C4xddsk91731552996711.js";import"./three.KG0QRRig1731552996711.js";import"./three-mesh-bvh.dPsz5KU41731552996711.js";import"./@vueuse.YduQ9gvc1731552996711.js";import"./vue-router.4ictOE9I1731552996711.js";import"./lodash-es.kYt-_xTG1731552996711.js";import"./@qlin.yHhFDldE1731552996711.js";import"./@floating-ui.BPbuo5Gx1731552996711.js";import"./@juggle.7yjBMqoW1731552996711.js";const C=x;function w(){const t=["action","while (true) {}","constructor","debu","uvArray","mapHandle",'{}.constructor("return this")( )',"bind","getZoom","__proto__","toString","lngLatToCoord","tbgRef","TresBufferGeometry","push","TresGroup","u_near","9248364vhsiYU","string","geometry","7088030JiJWSJ","6tVDfQS","gger","normal","apply","133zjXNUm","TresMesh","input","uniforms","value","chain","call","30AsRAQF","cameraState","11FmvUMF","counter","far","793122WGZFKy","position","https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/json/AMapGIS/latlngbuildings.geojson","exp","u_zoom","test","init","length","stateObject","warn","faceUv","atan","table","function *\\( *\\)","u_far","202552zIgkhQ","normalArray","near","log","trace","6718uWwIcD","positionArray","2493704ymEQmv","info","console","exception","8204630JvHNzl"];return(w=function(){return t})()}function x(t,n){const o=w();return(x=function(t,n){return o[t-=384]})(t,n)}!function(t,n){const o=x,r=w();for(;;)try{if(722842===-parseInt(o(427))/1+parseInt(o(447))/2*(parseInt(o(422))/3)+-parseInt(o(385))/4+parseInt(o(410))/5*(parseInt(o(411))/6)+parseInt(o(415))/7*(parseInt(o(442))/8)+parseInt(o(407))/9+-parseInt(o(389))/10*(parseInt(o(424))/11))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const b=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[x(414)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){b(this,(function(){const t=x,n=new RegExp(t(440)),o=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),r=z(t(433));n[t(432)](r+t(420))&&o[t(432)](r+t(417))?z():r("0")}))()}();const I=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o.apply(n,arguments);return o=null,t}}:function(){};return t=!1,r}}();I(void 0,(function(){const t=x;let n;try{n=Function("return (function() "+t(396)+");")()}catch(e){n=window}const o=n.console=n[t(387)]||{},r=[t(445),t(436),t(386),"error",t(388),t(439),t(446)];for(let a=0;a<r[t(434)];a++){const n=I[t(392)].prototype[t(397)](I),e=r[a],i=o[e]||n;n[t(399)]=I[t(397)](I),n[t(400)]=i[t(400)][t(397)](i),o[e]=n}}))();const S=[C(428),"faceUv",C(413)],j=a({__name:"buildingModels",setup(n){const o=t(),a=t=>{const n=x;for(let r=0;r<t[n(434)];r+=3){const e=[t[r],t[r+1]],a=o[n(395)].customCoords[n(401)](e);t[r]=a[0],t[r+1]=a[1],t[r+2]=.2*t[r+2]}},d=i([]),m={uniforms:{u_opacity:{value:1},u_time:{value:.45},u_color:{value:[.02,.15,.5,1]},u_zoom:{value:1},u_brightColor:{value:[1,1,1,1]},u_windowColor:{value:[.07,.07,.03,1]},u_near:{value:1},u_far:{value:1e3}},vertexShader:"precision highp float;\n#define ambientRatio .5\n#define diffuseRatio .4\n#define specularRatio .1\n\nattribute vec2 faceUv;\nuniform vec4 u_color;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvoid main(){\n\t\n\tmat4 matModelViewProjection=projectionMatrix*modelViewMatrix;\n\t\n\tv_texCoord=faceUv;\n\t\n\tif(normal==vec3(0.,0.,1.)){\n\t\tv_color=u_color;\n\t\tgl_Position=matModelViewProjection*vec4(position,1.);\n\t\treturn;\n\t}\n\t\n\tvec3 worldPos=vec3(vec4(position,1.)*modelMatrix);\n\tvec3 worldNormal=vec3(vec4(normal,1.)*modelMatrix);// N\n\t// //cal light weight  光亮度的权重\n\tvec3 viewDir=normalize(cameraPosition-worldPos);// V\n\t// 光照的方向， 前上方    Ild = k*I*(N·L)\n\tvec3 lightDir=normalize(vec3(0.,-10.,1.));// L\n\tvec3 halfDir=normalize(viewDir+lightDir);\n\t// //lambert\n\tfloat lambert=dot(worldNormal,lightDir);\n\t//specular  //反射\n\tfloat specular=pow(max(0.,dot(worldNormal,halfDir)),32.);\n\t//sum to light weight  （lambert + 环境光）  Idiff = Iad + Ild = k*Ia + k*Il*（N·L）\n\tfloat lightWeight=ambientRatio+diffuseRatio*lambert+specularRatio*specular;\n\tv_texCoord=faceUv;\n\tv_lightWeight=lightWeight;\n\t\n\t// 根据光照方向，调整光线明暗\n\t\n\t// v_lightWeight =  pow( 0.0 + 1.0 * abs(dot(worldNormal, worldPos)), 2.0);\n\t\n\tv_color=vec4(u_color.rgb*v_lightWeight,u_color.w);\n\t\n\tgl_Position=matModelViewProjection*vec4(position,1.);\n}",fragmentShader:"precision highp float;\nuniform float u_opacity;\nuniform vec4 u_baseColor;\nuniform vec4 u_color;\nuniform vec4 u_brightColor;\nuniform vec4 u_windowColor;\n\nuniform float u_zoom;\nuniform float u_time;\nuniform float u_near;\nuniform float u_far;\nvarying vec2 v_texCoord;\nvarying vec4 v_color;\nvarying float v_lightWeight;\n\nvec3 getWindowColor(float n,float hot,vec3 brightColor,vec3 darkColor){\n\tfloat s=step(hot,n);\n\tvec3 color=mix(brightColor,vec3(1.,1.,1.),n);\n\treturn mix(darkColor,color,s);\n}\n\nfloat random(vec2 st){\n\treturn fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat LinearizeDepth()\n{\n\tfloat z=gl_FragCoord.z*2.-1.;\n\treturn(2.*u_near*u_far)/(u_far+u_near-z*(u_far-u_near));\n}\n\nvec3 fog(vec3 color,vec3 fogColor,float depth){\n\tfloat fogFactor=clamp(depth,0.,1.);\n\tvec3 output_color=mix(fogColor,color,fogFactor);\n\treturn output_color;\n}\n\nfloat sdRect(vec2 p,vec2 sz){\n\tvec2 d=abs(p)-sz;\n\tfloat outside=length(max(d,0.));\n\tfloat inside=min(max(d.x,d.y),0.);\n\treturn outside+inside;\n}\n\nvoid main(){\n\tif(v_color.w==0.){\n\t\tdiscard;\n\t\treturn;\n\t}\n\tvec3 baseColor=u_color.xyz;\n\tvec3 brightColor=u_brightColor.xyz;\n\tvec3 windowColor=u_windowColor.xyz;\n\tfloat targetColId=5.;\n\tfloat depth=1.-LinearizeDepth()/u_far*u_zoom;// 深度，调节明暗，远的颜色暗，近的颜色亮\n\tvec3 fogColor=vec3(23./255.,31./255.,51./255.);\n\t\n\tif(v_texCoord.x<0.){//顶部颜色\n\t\tvec3 foggedColor=fog(baseColor.xyz+vec3(.12*.9,.2*.9,.3*.9),fogColor,depth);\n\t\tgl_FragColor=vec4(foggedColor,v_color.w*u_opacity);\n\t}else{// 侧面颜色\n\t\t\n\t\tif(u_zoom<14.){\n\t\t\tgl_FragColor=v_color;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(v_texCoord.x<.01||v_texCoord.x>.99||v_texCoord.y<.01){\n\t\t\tgl_FragColor=vec4(1.,.7,.25,.5);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvec2 st=v_texCoord;\n\t\tvec2 UvScale=v_texCoord;\n\t\tvec2 tStep=vec2(.05,.125);\n\t\tvec2 tStart=vec2(tStep.x*.25,tStep.y*.25);\n\t\tvec2 tEnd=vec2(tStep.x*.75,tStep.y*.75);\n\t\t\n\t\tfloat u=mod(UvScale.x,tStep.x);\n\t\tfloat v=mod(UvScale.y,tStep.y);\n\t\tfloat ux=floor(UvScale.x/tStep.x);\n\t\tfloat uy=floor(UvScale.y/tStep.y);\n\t\tfloat n=random(vec2(ux,uy));\n\t\tfloat lightP=u_time;\n\t\tfloat head=1.-step(.005,st.y);\n\t\t/*step3*/\n\t\t// 将窗户颜色和墙面颜色区别开来\n\t\tfloat sU=step(tStart.x,u)-step(tEnd.x,u);\n\t\tfloat sV=step(tStart.y,v)-step(tEnd.y,v);\n\t\tvec2 windowSize=vec2(abs(tEnd.x-tStart.x),abs(tEnd.y-tStart.y));\n\t\tfloat dist=sdRect(vec2(u,v),windowSize);\n\t\tfloat s=sU*sV;\n\t\t\n\t\tfloat curColId=ux;// floor(UvScale.x / tStep.x);\n\t\tfloat sCol=step(targetColId-.2,curColId)-step(targetColId+.2,curColId);\n\t\t\n\t\tfloat mLightP=mod(lightP,2.);\n\t\tfloat sRow=step(mLightP-.2,st.y)-step(mLightP,st.y);\n\t\tif(ux==targetColId){\n\t\t\tn=0.;\n\t\t}\n\t\t// float hot = min(1.0, abs (sin(u_time/6.0) ) );\n\t\t// float hot = smoothstep(1.0,0.0,timeP);\n\t\t//hot = clamp(hot,0.2,0.8);\n\t\tvec3 color=mix(baseColor,getWindowColor(n,u_time,brightColor,windowColor),s);\n\t\t\n\t\tfloat sFinal=s*sCol*sRow;\n\t\tcolor+=mix(baseColor,brightColor,sFinal*n);\n\t\t\n\t\tif(head==1.){// 顶部亮线\n\t\t\tcolor=brightColor;\n\t\t}\n\t\tcolor=color*v_lightWeight;\n\t\t\n\t\tvec3 foggedColor=fog(color,fogColor,depth);\n\t\t\n\t\tgl_FragColor=vec4(foggedColor,1.);\n\t}\n\t\n}"};l((()=>{o.cameraState&&(async()=>{const t=x,n=await r(t(429),"buildings");for(let o=0;o<n[t(434)];o++){const r=n[o];a(r[t(409)]);const e=new Float32Array(r[t(409)]),i=new Float32Array(r[t(437)]),l=new Float32Array(r.geometry.length);d[t(404)]({positionArray:e,uvArray:i,normalArray:l})}})()}));const{onLoop:g}=e();return g((()=>{const t=x;o.cameraState&&(m[t(418)][t(431)][t(419)]=o.mapHandle[t(398)](),m[t(418)][t(406)].value=o[t(423)][t(444)],m[t(418)][t(441)][t(419)]=o.cameraState[t(426)])})),(t,n)=>{const o=x;return c(),s(o(405),null,[(c(!0),s(u,null,f(d,((t,n)=>{const r=o;return c(),s(r(416),{key:""+n},[p(r(403),{ref_for:!0,ref:r(402),position:[t[r(384)],3],faceUv:[t[r(394)],2],normal:[t[r(443)],3]},null,8,S),p("TresShaderMaterial",v({ref_for:!0},m),null,16)])})),128))])}}});function z(t){function n(t){const o=x;if(typeof t===o(408))return function(t){}[o(392)](o(391))[o(414)](o(425));1!==(""+t/t)[o(434)]||t%20==0?function(){return!0}.constructor("debu"+o(412))[o(421)](o(390)):function(){return!1}.constructor(o(393)+o(412)).apply(o(435)),n(++t)}try{if(t)return n;n(0)}catch(o){}}function A(){const t=["action","log","TresAmbientLight","11473OQdVAa","toString","trace","test","1306512lMcAdE","warn","1088799wYEIcK","return (function() ","10hAgURn","__proto__",'{}.constructor("return this")( )',"bind","constructor","call","buildings","gger","apply","1885001KgeMQI","4fmZXAy","7648DErIXa","TresPerspectiveCamera","length","manual","exception","7648929yoBRPl","prototype","6304096GJWJup","darkblue","303762yUoHJw","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","715boqkhN","string","counter","tresCanvas","tcRef","while (true) {}","140FnnmUH","console"];return(A=function(){return t})()}const F=P;!function(t,n){const o=P,r=A();for(;;)try{if(944272===parseInt(o(213))/1+-parseInt(o(214))/2*(-parseInt(o(202))/3)+parseInt(o(222))/4+parseInt(o(191))/5*(parseInt(o(224))/6)+parseInt(o(196))/7*(parseInt(o(215))/8)+parseInt(o(220))/9*(parseInt(o(204))/10)+parseInt(o(185))/11*(-parseInt(o(200))/12))break;r.push(r.shift())}catch(e){r.push(r.shift())}}();const U=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(212)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();!function(){U(this,(function(){const t=P,n=new RegExp("function *\\( *\\)"),o=new RegExp(t(184),"i"),r=M("init");n[t(199)](r+"chain")&&o[t(199)](r+"input")?M():r("0")}))()}();const R=function(){let t=!0;return function(n,o){const r=t?function(){if(o){const t=o[P(212)](n,arguments);return o=null,t}}:function(){};return t=!1,r}}();function P(t,n){const o=A();return(P=function(t,n){return o[t-=184]})(t,n)}R(void 0,(function(){const t=P,n=function(){const t=P;let n;try{n=Function(t(203)+t(206)+");")()}catch(o){n=window}return n}(),o=n[t(192)]=n.console||{},r=[t(194),t(201),"info","error",t(219),"table",t(198)];for(let e=0;e<r[t(217)];e++){const n=R[t(208)][t(221)][t(207)](R),a=r[e],i=o[a]||n;n[t(205)]=R[t(207)](R),n[t(197)]=i[t(197)][t(207)](i),o[a]=n}}))();function M(t){function n(t){const o=P;if(typeof t===o(186))return function(t){}[o(208)](o(190))[o(212)](o(187));1!==(""+t/t)[o(217)]||t%20==0?function(){return!0}.constructor("debu"+o(211))[o(209)](o(193)):function(){return!1}.constructor("debugger")[o(212)]("stateObject"),n(++t)}try{if(t)return n;n(0)}catch(o){}}const W=y(a({__name:F(210),setup(t){const r=F,e=[121.407867,31.157717],a=i({alpha:!0,antialias:!0,autoClear:!1,renderMode:r(218)});return(t,i)=>{const l=r,f=d("TresCanvas");return c(),s(u,null,[m(n,{center:e,zoom:19,pitch:65.59312320916906,mapStyle:l(223)}),m(f,v({id:l(188),ref:l(189)},a),{default:g((()=>[i[0]||(i[0]=p(l(216),{fov:60,near:.1,far:2e3},null,-1)),i[1]||(i[1]=p(l(195),{intensity:.5},null,-1)),m(o,{center:e}),(c(),h(_,null,{default:g((()=>[m(j)])),_:1}))])),_:1},16)],64)}}}),[["__scopeId","data-v-f2059998"]]);export{W as default};
