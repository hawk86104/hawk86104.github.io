import{m as n,e,b as t,U as r}from"./@tresjs.0qL_P2CE1735517803200.js";import{W as o,k as i,cf as s,c5 as a,c3 as u,a0 as c,n as f,b6 as l}from"./three.-uH5I3Xp1735517803200.js";import{d as v,a6 as p,a3 as m,o as d,D as h,J as g,u as x,F as y,e as w,f as D,g as S,j as R,al as E,m as I}from"./@vue.-THQH3GC1735517803200.js";import"./@vueuse.oT9wchAS1735517803200.js";const b=T;!function(n,e){const t=T,r=P();for(;;)try{if(296117===parseInt(t(296))/1+parseInt(t(300))/2+-parseInt(t(285))/3+-parseInt(t(271))/4+parseInt(t(297))/5*(-parseInt(t(255))/6)+parseInt(t(299))/7+parseInt(t(292))/8)break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const _=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[T(274)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function T(n,e){const t=P();return(T=function(n,e){return t[n-=251]})(n,e)}!function(){_(this,(function(){const n=T,e=new RegExp(n(289)),t=new RegExp(n(275),"i"),r=z(n(266));e[n(280)](r+n(269))&&t[n(280)](r+n(298))?z():r("0")}))()}();const C=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[T(274)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function P(){const n=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","TresMeshPhongMaterial","value","\n    varying vec2 vUv;\n    void main() {\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n    }\n","texture","test","uniforms","error","exception","while (true) {}","231918BajWsx","noiseContourMeshRef2","#ffffff","prototype","function *\\( *\\)","constructor","console","3635032oARkAD","string","bind","noiseContour","108975xaJJwH","11115oexdGF","input","3050075oObEXg","77862BjzvkI","render","stateObject","return (function() ","material","\nuniform sampler2D tDiffuse;\nuniform sampler2D tNoise;\nuniform float iTime;\n\nvarying vec2 vUv;\n\n#define EdgeColor vec4(0.2, 0.2, 0.15, 1.0)\n#define BackgroundColor vec4(1,0.95,0.85,1)\n#define NoiseAmount 0.01\n#define ErrorPeriod 30.0\n#define ErrorRange 0.003\n\n// Reference: https://www.shadertoy.com/view/MsSGD1\nfloat triangle(float x)\n{\n    return abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nvoid main()\n{\n    float time = floor(iTime * 16.0) / 16.0;\n    vec2 uv = vUv;\n    uv += vec2(triangle(uv.y * rand(time) * 1.0) * rand(time * 1.9) * 0.005,\n            triangle(uv.x * rand(time * 3.4) * 1.0) * rand(time * 2.1) * 0.005);\n\n    float noise = (texture2D(tNoise, uv * 0.5).r - 0.5) * NoiseAmount;\n    vec2 uvs[3];\n    uvs[0] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 0.0) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 0.0) + noise);\n    uvs[1] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 1.047) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 3.142) + noise);\n    uvs[2] = uv + vec2(ErrorRange * sin(ErrorPeriod * uv.y + 2.094) + noise, ErrorRange * sin(ErrorPeriod * uv.x + 1.571) + noise);\n\n    float edge = texture2D(tDiffuse, uvs[0]).r * texture2D(tDiffuse, uvs[1]).r * texture2D(tDiffuse, uvs[2]).r;\n    float diffuse = texture2D(tDiffuse, uv).g;\n\n    float w = fwidth(diffuse) * 2.0;\n    vec4 mCol = mix(BackgroundColor * 0.5, BackgroundColor, mix(0.0, 1.0, smoothstep(-w, w, diffuse - 0.3)));\n    gl_FragColor = mix(EdgeColor, mCol, edge);\n}\n","rotation-x","innerHeight","tShadow","TresMesh","side","__proto__","derivatives","846naNTNU","addPass",'{}.constructor("return this")( )',"innerWidth","iTime","log","extensions","gger","TresBoxGeometry","call","debu","init","counter","noiseContourMeshRef1","chain","trace","1404576FMsRQA","length","table","apply"];return(P=function(){return n})()}C(void 0,(function(){const n=T,e=function(){const n=T;let e;try{e=Function(n(303)+n(257)+");")()}catch(t){e=window}return e}(),t=e[n(291)]=e[n(291)]||{},r=[n(260),"warn","info",n(282),n(283),n(273),n(270)];for(let o=0;o<r[n(272)];o++){const e=C[n(290)][n(288)][n(294)](C),i=r[o],s=t[i]||e;e[n(253)]=C.bind(C),e.toString=s.toString[n(294)](s),t[i]=e}}))();const N=[b(252),b(306)],j=["side"],k=b(278),U=b(305),M=v({__name:b(295),async setup(r){const v=b;let w,D;const{camera:S,renderer:R,scene:E,sizes:I}=n(),_=([w,D]=p((()=>t({map:"./plugins/shadertoyToThreejs/image/noise.png"}))),w=await w,D(),w),{onLoop:T,onAfterLoop:C}=e(),P=new o(1,1,{minFilter:f,magFilter:f,format:l,stencilBuffer:!1}),M=new i(window[v(258)],window[v(307)]);let z=null;const A=new s({uniforms:{tDiffuse:{type:"t",value:null},tShadow:{type:"t",value:null},iResolution:{type:"v2",value:M}},vertexShader:k,fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tShadow;\n    uniform vec2 iResolution;\n\n    varying vec2 vUv;\n    #define Sensitivity (vec2(0.3, 1.5) * iResolution.y / 400.0)\n    float checkSame(vec4 center, vec4 samplef)\n    {\n        vec2 centerNormal = center.xy;\n        float centerDepth = center.z;\n        vec2 sampleNormal = samplef.xy;\n        float sampleDepth = samplef.z;\n\n        vec2 diffNormal = abs(centerNormal - sampleNormal) * Sensitivity.x;\n        bool isSameNormal = (diffNormal.x + diffNormal.y) < 0.1;\n        float diffDepth = abs(centerDepth - sampleDepth) * Sensitivity.y;\n        bool isSameDepth = diffDepth < 0.1;\n\n        return (isSameNormal && isSameDepth) ? 1.0 : 0.0;\n    }\n\n    void main( )\n    {\n        vec4 sample0 = texture2D(tDiffuse, vUv);\n        vec4 sample1 = texture2D(tDiffuse, vUv + (vec2(1.0, 1.0) / iResolution.xy));\n        vec4 sample2 = texture2D(tDiffuse, vUv + (vec2(-1.0, -1.0) / iResolution.xy));\n        vec4 sample3 = texture2D(tDiffuse, vUv + (vec2(-1.0, 1.0) / iResolution.xy));\n        vec4 sample4 = texture2D(tDiffuse, vUv + (vec2(1.0, -1.0) / iResolution.xy));\n\n        float edge = checkSame(sample1, sample2) * checkSame(sample3, sample4);\n\n        // gl_FragColor = vec4(edge, sample0.w, 1.0, 1.0);\n        float shadow = texture2D(tShadow, vUv).x;\n        gl_FragColor = vec4(edge, shadow, 1.0, 1.0);\n\n    }\n"}),F=new s({uniforms:{tDiffuse:{type:"t",value:null},iTime:{type:"f",value:0},tNoise:{type:"t",value:_}},vertexShader:k,fragmentShader:U});return F.renderToScreen=!0,F[v(304)][v(261)][v(254)]=!0,m((()=>{const n=v;I.width[n(277)]&&(z=new a(R[n(277)]),z[n(256)](new u(E[n(277)],S.value)),z.addPass(A),z[n(256)](F))})),T((({elapsed:n})=>{const e=v;R[e(277)][e(301)](E[e(277)],S[e(277)],P),A[e(281)][e(308)][e(277)]=P[e(279)],F[e(281)][e(259)][e(277)]=n})),C((()=>{z&&z[v(301)]()})),(n,e)=>{const t=v;return d(),h(y,null,[g("TresMesh",{ref:t(286),side:x(c),position:[400,100,0],"rotation-x":2*Math.PI/360*90,"cast-shadow":""},e[0]||(e[0]=[g(t(263),{args:[400,400,400]},null,-1),g(t(276),{color:t(287),shininess:0},null,-1)]),8,N),g(t(251),{ref:t(268),side:x(c),position:[0,150,0],"cast-shadow":""},e[1]||(e[1]=[g("TresSphereGeometry",{args:[50,32,32]},null,-1),g(t(276),{color:t(287),shininess:0},null,-1)]),8,j)],64)}}});function z(n){function e(n){const t=T;if(typeof n===t(293))return function(n){}.constructor(t(284))[t(274)](t(267));1!==(""+n/n).length||n%20==0?function(){return!0}.constructor(t(265)+t(262))[t(264)]("action"):function(){return!1}[t(290)]("debu"+t(262))[t(274)](t(302)),e(++n)}try{if(n)return e;e(0)}catch(t){}}const A=G;!function(n,e){const t=G,r=L();for(;;)try{if(185468===parseInt(t(197))/1*(-parseInt(t(204))/2)+-parseInt(t(184))/3+parseInt(t(189))/4*(-parseInt(t(219))/5)+parseInt(t(202))/6+parseInt(t(199))/7*(-parseInt(t(210))/8)+-parseInt(t(180))/9+parseInt(t(215))/10*(parseInt(t(198))/11))break;r.push(r.shift())}catch(o){r.push(r.shift())}}();const F=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[G(188)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();!function(){F(this,(function(){const n=G,e=new RegExp(n(212)),t=new RegExp(n(200),"i"),r=J(n(190));e[n(192)](r+"chain")&&t.test(r+n(194))?J():r("0")}))()}();const B=function(){let n=!0;return function(e,t){const r=n?function(){if(t){const n=t[G(188)](e,arguments);return t=null,n}}:function(){};return n=!1,r}}();function L(){const n=["\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","constructor","2185050EkXnLo","TresCanvas","2WjcMyU","warn","prototype","exception","debu","trace","5528vsLGGu","counter","function *\\( *\\)","console","toString","50kDSmWE","action","#000000","TresPerspectiveCamera","1327825IfzFMw","error","946899KITWnk","info","table","log","611088TSBPyl","TresAmbientLight","length","perspectiveCameraRef","apply","4VLJwyV","init","red","test","gger","input","bind","call","294563vRBdTK","1666181tmaOWz","679GhZBpy"];return(L=function(){return n})()}function G(n,e){const t=L();return(G=function(n,e){return t[n-=180]})(n,e)}B(void 0,(function(){const n=G;let e;try{e=Function('return (function() {}.constructor("return this")( ));')()}catch(o){e=window}const t=e[n(213)]=e[n(213)]||{},r=[n(183),n(205),n(181),n(220),n(207),n(182),n(209)];for(let i=0;i<r[n(186)];i++){const e=B[n(201)][n(206)][n(195)](B),o=r[i],s=t[o]||e;e.__proto__=B[n(195)](B),e[n(214)]=s.toString[n(195)](s),t[o]=e}}))();const W={ref:A(187),position:[600,750,-1221],fov:45,near:1,far:1e4},Z=v({__name:"noiseContourPage",setup(n){const e=A,t={clearColor:e(217),shadows:!0,alpha:!1,useLegacyLights:!0};return(n,o)=>{const i=e,s=w(i(203));return d(),D(s,I(t,{"window-size":""}),{default:S((()=>[g(i(218),W,null,512),R(x(r)),o[0]||(o[0]=g(i(185),{color:"#ffffff"},null,-1)),o[1]||(o[1]=g("TresDirectionalLight",{position:[400,400,400],intensity:1,color:i(191)},null,-1)),(d(),D(E,null,{default:S((()=>[R(M)])),_:1}))])),_:1},16)}}});function J(n){function e(n){const t=G;if("string"==typeof n)return function(n){}[t(201)]("while (true) {}").apply(t(211));1!==(""+n/n)[t(186)]||n%20==0?function(){return!0}[t(201)](t(208)+t(193))[t(196)](t(216)):function(){return!1}[t(201)](t(208)+t(193))[t(188)]("stateObject"),e(++n)}try{if(n)return e;e(0)}catch(t){}}export{Z as default};
