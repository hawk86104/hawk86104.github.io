import{ad as s,A as e,cn as a}from"./three.DvmzhRS91761100244891.js";import{K as o}from"./@tresjs.DqJWjmrH1761100244891.js";import{P as t}from"./tweakpane.CqZAnw7f1761100244891.js";import"./@fesjs.DbrjsIBT1761100244891.js";import"./Resource.mX5inOAT1761100244891.js";/* empty css                                                                             */import{_ as r}from"./randomLoading.vue_vue_type_script_setup_true_lang.DVHfE-Hw1761100244891.js";import"./three-mesh-ui.module.B6HSvFaK1761100244891.js";import"./global.CFybmx-G1761100244891.js";/* empty css                                                              */import{_ as i}from"./device.vue_vue_type_script_setup_true_lang.P9uD6uwg1761100244891.js";import{d as p,r as m,g as n,G as l,o as u,h as d,u as j,e as _,I as c,b as g,a9 as h,aa as v,ap as f,m as b,F as y}from"./@vue.CKlgtJke1761100244891.js";import"./postprocessing.CYU4Fj-U1761100244891.js";import"./@vueuse.mZcBai3M1761100244891.js";import"./vue-router.AUgVvTqV1761100244891.js";import"./lodash-es.DWe8oqPO1761100244891.js";import"./pinia.-nSLzXOT1761100244891.js";import"./@qlin.y-0Z8WnK1761100244891.js";import"./@babel.BPq7uOAK1761100244891.js";import"./@floating-ui.Bhq4ibgf1761100244891.js";import"./@juggle.Vc7cP4_P1761100244891.js";import"./starLoading.BZXulw6M1761100244891.js";import"./utils.g-0SwCPh1761100244891.js";import"./cssLoaders.BrTFRgeJ1761100244891.js";import"./bubbleLoading.CpUQAUq31761100244891.js";import"./yangyangLoading.BaxHfpnX1761100244891.js";import"./color.DSPNiGxi1761100244891.js";import"./color-string.Bn2Vqey71761100244891.js";import"./color-name.gyPnsvCn1761100244891.js";import"./lodash.DPxB_j171761100244891.js";import"./@amap.fjyZdsU91761100244891.js";import"./vanilla.esm.5.5.0.CsbunUBT1761100244891.js";import"./object-hash.zo7S6bgL1761100244891.js";import"./jszip.DTlig5CR1761100244891.js";import"./index.wJolfAi41761100244891.js";import"./three-stdlib.Bkbtr8od1761100244891.js";import"./useLoader.DWT9Jk041761100244891.js";const x=p({__name:"deviceLight",setup(p){const x=m({clearColor:"#000",shadows:!0,alpha:!1,shadowMapType:a,outputColorSpace:e,toneMapping:s,renderMode:"manual"}),L=m({autoRotate:!0}),w=m({threshold:0,strength:.6,radius:.21}),C=new t({title:"参数"});return C.addBinding(w,"threshold",{label:"阈值",min:0,max:1,step:.1}),C.addBinding(w,"strength",{label:"强度",min:0,max:3,step:.2}),C.addBinding(w,"radius",{label:"半径",min:0,max:1,step:.1}),(s,e)=>{const a=n("TresCanvas");return u(),l(y,null,[d(j(r)),d(a,b(x,{"window-size":""}),{default:_(()=>[e[0]||(e[0]=c("TresPerspectiveCamera",{position:[5,5,5],fov:45,near:1,far:1e3},null,-1)),d(j(o),h(v(L)),null,16),(u(),g(f,null,{default:_(()=>[d(i,h(v(w)),null,16)]),_:1})),e[1]||(e[1]=c("TresGridHelper",{position:[0,-1,0]},null,-1))]),_:1},16)],64)}}});export{x as default};
