import{aC as z,bb as Z,k as ee,a5 as te,aj as oe,o as r,c as i,E as x,G as se,v as B,D as M,X as o,t as ne,a7 as A,K as b,ak as re,Y as m,bS as ae,ao as ie,at as G,av as pe,ay as ce,bo as le,b2 as D,a8 as ue,c8 as de,a0 as he,a1 as j,r as fe,a as O,a9 as _e,aa as me,ab as ye,af as ge}from"./vendor.UoMSxCrE1712649228867.js";import{l as Te}from"./utils.kCzRK1MJ1712649228867.js";import{u as Ce,f as ve}from"./utils.lL21jvBF1712649228867.js";import{c as xe,d as Be,a as Me}from"./ExtensionUtilities.XztQYbX61712649228867.js";import{m as be}from"./mercator.a2Hae4Rp1712649228867.js";import"./Water2.IV0XG4_O1712649228867.js";import"./Reflector.76NymbEQ1712649228867.js";const Se=["position"],ke=["blending","map"],we=["name","renderOrder","pCenter"],Le=["args"],Pe=["color","side"],Ee=["renderOrder","position-z"],$e=["position"],ze=o("TresLineBasicMaterial",{color:16777215,linewidth:.5},null,-1),Ge=["renderOrder"],De=["position"],je=o("TresLineBasicMaterial",{color:0,linewidth:.5},null,-1),Oe={__name:"jiangSuMapMesh",async setup(N){let s,a;(()=>{G.prototype.computeBoundsTree=xe,G.prototype.disposeBoundsTree=Be,pe.prototype.raycast=Me})();const y=([s,a]=z(()=>Te("./plugins/simpleGIS/json/320000_full.json","features")),s=await s,a(),s),{map:g}=([s,a]=z(()=>Z({map:"./plugins/simpleGIS/image/icon.png"})),s=await s,a(),s),H=y[0].properties.centroid,p=be();p.center(H).translate([0,0]);const c=[];(()=>{y.forEach(t=>{const l=new ce("hsl( 16, ".concat(Math.random()*30+55,"%, ").concat(Math.random()*30+55,"%)")).getHex(),e=Math.random()*.3+.3,{centroid:n,oneCenter:q,center:Q,name:S}=t.properties,{coordinates:U,type:k}=t.geometry,w=n||q||Q||[0,0],h=p(w);h[1]=-h[1],h[2]=e,c.push({type:"Html",position:h,name:S});const u=p(w);u[1]=-u[1]+.2,u[2]=e+.22,c.push({type:"Sprite",position:u}),U.forEach(L=>{function P(f){const T=new de;f.forEach((C,v)=>{const[_,$]=p(C);v===0?T.moveTo(_,-$):T.lineTo(_,-$)}),c.push({type:"Shape",shape:T,name:S,color:l,depth:e,pCenter:u});const E=[];f.forEach(C=>{const[v,_]=p(C);E.push(v,-_,0)}),c.push({type:"Line",points:new Float32Array(E),depth:e})}k==="MultiPolygon"&&L.forEach(f=>P(f)),k==="Polygon"&&P(L)})})})();const I=t=>{t.rotation.x=-Math.PI/2;const e=new le().setFromObject(t).getCenter(new D),n=[0,0];t.position.x=t.position.x-e.x-n[0],t.position.z=t.position.z-e.z-n[1]},d=ee();te(()=>{d.value&&(I(d.value),d.value.children.forEach(t=>{t.type==="Mesh"&&t.geometry.computeBoundsTree()}))});const R=t=>{t.object.material.opacity=.4},V=t=>{t.material.opacity=1},{camera:X,controls:Y}=oe(),J=(t,l)=>{console.log("click",t,l);const e=new D;e.x=t.point.x,e.y=t.point.y+10,e.z=t.point.z,ve(X,e,Y)},{onBeforeLoop:K}=ue();K(()=>{Ce()});const W={wrapperClass:"wrapper",as:"div",center:!0,sprite:!0,prepend:!0,transform:!0};return(t,l)=>(r(),i("TresGroup",{ref_key:"tgRef",ref:d},[(r(),i(x,null,se(c,(e,n)=>(r(),i(x,{key:"".concat(n)},[e.type==="Html"?(r(),B(b(re),A({key:0},W,{position:e.position}),{default:M(()=>[o("span",null,ne(e.name),1)]),_:2},1040,["position"])):m("",!0),e.type==="Sprite"?(r(),i("TresSprite",{key:1,position:e.position,scale:.3,renderOrder:1e3},[o("TresSpriteMaterial",{color:16711680,blending:ae,map:b(g)},null,8,ke)],8,Se)):m("",!0),e.type==="Shape"?(r(),i("TresMesh",{key:2,name:e.name,renderOrder:n,pCenter:e.pCenter,onPointerEnter:R,onPointerLeave:V,onClick:J},[o("TresExtrudeGeometry",{args:[e.shape,{depth:e.depth,bevelEnabled:!1}]},null,8,Le),o("TresMeshStandardMaterial",{color:e.color,emissive:0,roughness:.45,metalness:.8,transparent:!0,side:ie},null,8,Pe)],40,we)):m("",!0),e.type==="Line"?(r(),i(x,{key:3},[o("TresLine",{renderOrder:n,"position-z":e.depth+1e-4},[o("TresBufferGeometry",{position:[e.points,3]},null,8,$e),ze],8,Ee),o("TresLine",{renderOrder:n,"position-z":-1e-4},[o("TresBufferGeometry",{position:[e.points,3]},null,8,De),je],8,Ge)],64)):m("",!0)],64))),64))],512))}},Ae=o("TresPerspectiveCamera",{position:[0,12,0],fov:75,near:.1,far:1e3,up:[0,0,-1]},null,-1),Ne=o("TresAmbientLight",{intensity:8.8},null,-1),Fe=o("TresDirectionalLight",{position:[0,10,5],intensity:.2},null,-1),He=o("TresDirectionalLight",{position:[0,10,-5],intensity:.2},null,-1),Ie=o("TresDirectionalLight",{position:[5,10,0],intensity:.2},null,-1),Re=o("TresDirectionalLight",{position:[-5,10,0],intensity:.2},null,-1),Ve=o("TresGridHelper",{args:[20,10]},null,-1),Ze=he({__name:"jiangSuMap",setup(N){const s=j({clearColor:"#ffdbd1",alpha:!0,antialias:!0}),a=j({enableDamping:!0,dampingFactor:.05,makeDefault:!0});return(F,y)=>{const g=fe("TresCanvas");return r(),B(g,A(s,{"window-size":""}),{default:M(()=>[Ae,O(b(ye),_e(me(a)),null,16),Ne,Fe,He,Ie,Re,Ve,(r(),B(ge,null,{default:M(()=>[O(Oe)]),_:1}))]),_:1},16)}}});export{Ze as default};
