import{_ as e}from"./three.CQvcOG671729762363846.js";import{z as n,U as t,Y as a}from"./@tresjs.CmAaFQUS1729762363846.js";import{P as o}from"./tweakpane.BCjFYDHx1729762363846.js";import{d as r,a5 as i,Y as l,e as s,o as u,f as c,g as f,j as p,u as v,L as m,m as d,aj as h,ak as g}from"./@vue.n8X62v121729762363846.js";import"./@vueuse.DvZn62wO1729762363846.js";const x=j;function y(){const e=["6917896YFdOYA","return (function() ","apply","TresIcosahedronGeometry","__proto__","SRGBColorSpace","chain","value","pointsEarth","set","console","action","\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","gger","#122148","call","TresMeshBasicMaterial","FrontSide","uWaveHeight","debu","TresMesh","string","addBinding","粒子大小","9LYRihr","input","counter","while (true) {}","125515cEYGSJ","addFolder","wireframeMaterialRef","Debug","toString","1218910tSCGUf","4219716gWTNFP","268CgGKAo","error","14GTeDym","uniforms",'{}.constructor("return this")( )',"function *\\( *\\)","test","bind","groupRef","stateObject","exception","uTime","TresShaderMaterial","color","rotation","change","table","warn","1531707daPTVs","9852AXOjwW","trace","length","info","11058070ZNZQmY","TresHemisphereLight","uWaveSpeed","constructor","pointSize","TresCanvas"];return(y=function(){return e})()}!function(e,n){const t=j,a=y();for(;;)try{if(991800===-parseInt(t(154))/1+parseInt(t(111))/2+parseInt(t(110))/3+parseInt(t(156))/4*(-parseInt(t(149))/5)+parseInt(t(155))/6*(parseInt(t(158))/7)+parseInt(t(121))/8+-parseInt(t(145))/9*(-parseInt(t(115))/10))break;a.push(a.shift())}catch(o){a.push(a.shift())}}();const T=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t.apply(n,arguments);return t=null,e}}:function(){};return e=!1,a}}();!function(){T(this,(function(){const e=j,n=new RegExp(e(161)),t=new RegExp(e(133),"i"),a=P("init");n[e(162)](a+e(127))&&t.test(a+e(146))?P():a("0")}))()}();const S=function(){let e=!0;return function(n,t){const a=e?function(){if(t){const e=t[j(123)](n,arguments);return t=null,e}}:function(){};return e=!1,a}}();S(void 0,(function(){const e=j;let n;try{n=Function(e(122)+e(160)+");")()}catch(o){n=window}const t=n[e(131)]=n.console||{},a=["log",e(109),e(114),e(157),e(166),e(108),e(112)];for(let r=0;r<a.length;r++){const n=S[e(118)].prototype[e(163)](S),o=a[r],i=t[o]||n;n[e(125)]=S[e(163)](S),n[e(153)]=i[e(153)][e(163)](i),t[o]=n}}))();const w=m("TresPerspectiveCamera",{position:[0,0,3.5],fov:45,near:.1,far:20},null,-1),_=m(x(124),{args:[1,4]},null,-1),b=m(x(124),{args:[1,128]},null,-1),z=m(x(116),{args:["#ffffff","#080820",3]},null,-1);function j(e,n){const t=y();return(j=function(e,n){return t[e-=103]})(e,n)}const E=r({__name:x(129),async setup(r){const y=x;let T,S;const j={color:"#17c5a9",pointSize:4},E={clearColor:y(135),shadows:!1,alpha:!1,outputColorSpace:e[y(126)]},P={color:j[y(105)],wireframe:!0,transparent:!0,opacity:.2},D=([T,S]=i((()=>n(["./plugins/earthSample/image/pointsEarth/00_earthmap1k.jpg","./plugins/earthSample/image/pointsEarth/circle.png","./plugins/earthSample/image/pointsEarth/04_rainbow1k.jpg","./plugins/earthSample/image/pointsEarth/01_earthbump1k.jpg","./plugins/earthSample/image/pointsEarth/02_earthspec1k.jpg"]))),T=await T,S(),T),A=D[0],C=D[1],k=D[2],I=D[3],U=D[4],W={uniforms:{size:{type:"f",value:j[y(119)]},uTime:{type:"f",value:0},uWaveHeight:{type:"f",value:.075},uWaveSpeed:{type:"f",value:.2},colorTexture:{type:"t",value:k},elevTexture:{type:"t",value:I},alphaTexture:{type:"t",value:U},earthTexture:{type:"t",value:A},starTexture:{type:"t",value:C}},vertexShader:"  uniform float size;\n  uniform sampler2D elevTexture;\n  uniform sampler2D alphaTexture;\n  uniform float uTime;\n  uniform float uWaveHeight;\n  uniform float uWaveSpeed;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n  // Function to generate fBm with vec3 input\n  float random(vec3 st) {\n    return fract(sin(dot(st.xyz, vec3(12.9898,78.233,45.164))) * 43758.5453123);\n}\n\nfloat noise(vec3 st) {\n    vec3 i = floor(st);\n    vec3 f = fract(st);\n\n    // Eight corners in 3D of a tile\n    float a = random(i);\n    float b = random(i + vec3(1.0, 0.0, 0.0));\n    float c = random(i + vec3(0.0, 1.0, 0.0));\n    float d = random(i + vec3(1.0, 1.0, 0.0));\n    float e = random(i + vec3(0.0, 0.0, 1.0));\n    float f1 = random(i + vec3(1.0, 0.0, 1.0));\n    float g = random(i + vec3(0.0, 1.0, 1.0));\n    float h = random(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y),\n               mix(mix(e, f1, u.x), mix(g, h, u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 st) {\n    float value = 0.0;\n    float amplitude = 0.5;\n\n    for (int i = 0; i < 5; i++) {\n        value += amplitude * noise(st);\n        st *= 2.0;\n        amplitude *= 0.5;\n    }\n    return value;\n}\n\n  void main() {\n    vUv = uv;\n    float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vAlpha = alphaLand;\n    vec3 newPosition = position;\n\n    if(alphaLand < 0.5) {\n      // Sea\n      // fBm for wave-like displacement\n      float waveHeight = uWaveHeight; // Adjust wave height as needed\n      float waveSpeed = uWaveSpeed;  // Adjust wave speed as needed\n      float displacement = (fbm(newPosition * 5.0 + uTime * waveSpeed) * 2.0 - 1.0) * waveHeight;\n      vElevation = displacement;\n      newPosition += normal * displacement ;\n    }\n\n    vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );\n    float elv = texture2D(elevTexture, vUv).r;\n    vec3 vNormal = normalMatrix * normal;\n    vVisible = step(0.0, dot( -normalize(mvPosition.xyz), normalize(vNormal)));\n    mvPosition.z += 0.45 * elv;\n\n    // 求出 mvPosition 距离相机的距离\n    float dist = length(mvPosition.xyz);\n    // 根据距离调整 size\n    float pointSize = size * (1.0 - dist / 10.0);\n    gl_PointSize = max(pointSize, 1.0);\n    gl_PointSize = pointSize;\n    gl_Position = projectionMatrix * mvPosition;\n  }\n",fragmentShader:"  uniform sampler2D colorTexture;\n  // uniform sampler2D alphaTexture;\n  uniform sampler2D earthTexture;\n  uniform sampler2D starTexture;\n\n  varying vec2 vUv;\n  varying float vVisible;\n  varying float vAlpha;\n  varying float vElevation;\n\n  void main() {\n    if (floor(vVisible + 0.1) == 0.0) discard;\n    vec2 coord = gl_PointCoord;\n    float alpha = texture2D(starTexture, coord).a;\n    // 根据 alpha 值来裁剪形状\n    if (alpha < 0.1) discard;\n\n    // float alphaLand = 1.0 - texture2D(alphaTexture, vUv).r;\n    vec3 color = texture2D(colorTexture, vUv).rgb;\n    vec3 earth = texture2D(earthTexture, vUv).rgb;\n    color = mix(color, earth, 0.65);\n    if(\n      vAlpha > 0.5\n    ) {\n      gl_FragColor = vec4(color, vAlpha);\n    }else {\n      // 对于海洋部分，根据 vElevation 调整颜色\n      float elevationEffect = clamp(vElevation*30.0, -1.0, 1.0); // 将 vElevation 限制在 [-1, 1] 范围内\n      vec3 deep_sea_blue = vec3(0.004, 0.227, 0.388);\n      vec3 adjustedColor = mix(deep_sea_blue, earth*1.75, (elevationEffect + 1.0) * 0.5); // 根据 vElevation 调整颜色\n      gl_FragColor = vec4(adjustedColor, 1.0-vAlpha);\n    }\n  }\n",transparent:!0,side:e[y(138)]},F=l(),L=l(),M=(new o)[y(150)]({title:y(152)});M[y(143)](j,y(105),{type:y(105)}).on(y(107),(({value:e})=>{const n=y;L[n(128)][n(105)][n(130)](e)})),M[y(143)](W[y(159)].size,y(128),{min:.1,max:10,step:.1,label:y(144)}),M[y(143)](W[y(159)][y(139)],y(128),{min:.01,max:.5,step:.01,label:"海浪高度"}),M.addBinding(W[y(159)][y(117)],y(128),{min:.01,max:1,step:.01,label:"海浪变化速度"});const{onLoop:R}=t();return R((({delta:e})=>{const n=y;F[n(128)]&&(F[n(128)][n(106)].y+=.002,W[n(159)][n(103)][n(128)]+=10*e)})),(e,n)=>{const t=y,o=s(t(120));return u(),c(o,d(E,{"window-size":""}),{default:f((()=>[w,p(v(a),{autoRotate:!0,autoRotateSpeed:2}),m("TresGroup",{ref_key:t(164),ref:F},[m(t(141),null,[_,m(t(137),d({ref_key:t(151),ref:L},P),null,16)]),m("TresPoints",null,[b,m(t(104),h(g(W)),null,16)])],512),z])),_:1},16)}}});function P(e){function n(e){const t=j;if(typeof e===t(142))return function(e){}[t(118)](t(148))[t(123)](t(147));1!==(""+e/e)[t(113)]||e%20==0?function(){return!0}[t(118)](t(140)+"gger")[t(136)](t(132)):function(){return!1}[t(118)]("debu"+t(134))[t(123)](t(165)),n(++e)}try{if(e)return n;n(0)}catch(t){}}export{E as default};
