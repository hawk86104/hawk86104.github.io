import{cf as o,N as s,_ as a,ce as e}from"./three.EZPPomHU1753844948006.js";import{a as i}from"./@tresjs.DRasrl5q1753844948006.js";import{P as t}from"./tweakpane.C0HtAJSg1753844948006.js";import{_ as r}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.BIqtbs4d1753844948006.js";import"./index.DtElXmdU1753844948006.js";import{l}from"./util.CEQQ2_ZD1753844948006.js";import{_ as n}from"./cloudPoints.vue_vue_type_script_setup_true_lang.B4RePbeh1753844948006.js";import{_ as p,a as m}from"./bubblesEffect.vue_vue_type_script_setup_true_lang.CGndAw1K1753844948006.js";import{_ as d}from"./randomLoading.vue_vue_type_script_setup_true_lang.CBTFF8Iy1753844948006.js";import{d as u,r as c,aa as _,h as j,G as f,o as g,j as h,u as b,f as y,I as w,a7 as v,a8 as B,e as L,H as x,m as C,a5 as k,F as T}from"./@vue.BzMISRrV1753844948006.js";import"./postprocessing.BwliAN0R1753844948006.js";import"./@vueuse.KQ9lc16w1753844948006.js";import"./utils.CgAXGypF1753844948006.js";import"./@fesjs.7Dni6qN91753844948006.js";import"./vue-router.Dji__t9R1753844948006.js";import"./lodash-es.C7pWAXPe1753844948006.js";import"./@qlin.q6OWdsQV1753844948006.js";import"./pinia.Dcj6ab2m1753844948006.js";import"./@babel.BPq7uOAK1753844948006.js";import"./@floating-ui.BFjFSAYt1753844948006.js";import"./@juggle.CcBCnTIR1753844948006.js";import"./index.B-tGt_gs1753844948006.js";import"./three-mesh-ui.module.KgnnshJi1753844948006.js";import"./starLoading.SDxyeyNj1753844948006.js";import"./cssLoaders.DcPQ8xDG1753844948006.js";import"./bubbleLoading.DmrHvP-O1753844948006.js";import"./yangyangLoading.DrLINyO81753844948006.js";const S={position:[0,120,0]},z=u({__name:"digitalBrainFloor",async setup(u){let z,G;const M=c({mirrorSize:500,gridSize:490,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),P=c({color:"#fff",show:!0,opacity:1}),q=new t({title:"参数"});q.addBinding(P,"show",{label:"点云显示"}),q.addBinding(P,"color",{label:"点云颜色"}),q.addBinding(P,"opacity",{label:"点云透明度",min:0,max:1,step:.1});const F=c({color:"#84ccff",show:!0,opacity:1});q.addBinding(F,"show",{label:"脑轮廓显示"}),q.addBinding(F,"color",{label:"脑轮廓颜色"}),q.addBinding(F,"opacity",{label:"脑轮廓透明度",min:0,max:1,step:.1});const R=c({color:"#9e00af",show:!0,opacity:1});q.addBinding(R,"show",{label:"脑组织显示"}),q.addBinding(R,"color",{label:"脑组织颜色"}),q.addBinding(R,"opacity",{label:"脑组织透明度",min:0,max:1,step:.1});const A=new o,E=([z,G]=_((()=>l("./plugins/medical/model/brainparts.OBJ",A))),z=await z,G(),z),H=c({clearColor:"#201919",shadows:!0,alpha:!1,shadowMapType:e,outputColorSpace:a,toneMapping:s}),I=c({autoRotate:!0,autoRotateSpeed:2});return(o,s)=>{const a=j("TresCanvas");return g(),f(T,null,[h(b(d)),h(a,C(H,{"window-size":""}),{default:y((()=>[s[0]||(s[0]=w("TresPerspectiveCamera",{position:[100,400,500],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1)),h(b(i),v(B(I)),null,16),s[1]||(s[1]=w("TresAmbientLight",{intensity:.5},null,-1)),w("TresGroup",S,[P.show?(g(),L(n,C({key:0,model:b(E)},P),null,16,["model"])):x("",!0),(g(),L(k,null,{default:y((()=>[F.show?(g(),L(p,C({key:0,model:b(E)},F),null,16,["model"])):x("",!0)])),_:1})),R.show?(g(),L(m,C({key:1,model:b(E)},R),null,16,["model"])):x("",!0)]),h(r,v(B(M)),null,16)])),_:1},16)],64)}}});export{z as default};
