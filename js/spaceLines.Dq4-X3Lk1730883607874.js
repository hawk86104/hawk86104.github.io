import{U as t}from"./@tresjs.C3WO4ZW41730883607874.js";import{P as n}from"./tweakpane.BCjFYDHx1730883607874.js";import{a as s}from"./index.D3-O3Ya61730883607874.js";import{_ as e}from"./spaceLine.vue_vue_type_script_setup_true_lang.DEwQqh2s1730883607874.js";import{g as r}from"./utils.CPIBWCIi1730883607874.js";import{d as o,r as i,a6 as a,e as u,o as c,f as l,g as p,J as m,j as f,u as j,al as d,aj as g,ak as h,m as b}from"./@vue.Cfu43fwq1730883607874.js";import"./three.fIUcjaNz1730883607874.js";import"./@vueuse.BSum2YDk1730883607874.js";import"./@fesjs.DQmvwjPe1730883607874.js";import"./vue-router.BDLCs4Ld1730883607874.js";import"./lodash-es.BBTWvufR1730883607874.js";import"./@qlin.BIlp8Yi21730883607874.js";import"./pinia.DKpn0rzI1730883607874.js";import"./vue-demi.Dq6ymT-81730883607874.js";import"./@babel.BBWsvBIa1730883607874.js";import"./@floating-ui.B75jtkXD1730883607874.js";import"./@juggle.BnTvdTVm1730883607874.js";import"./chalk.B3MNILV41730883607874.js";/* empty css                                 */import"./iconify-icon.DK1S_nhj1730883607874.js";import"./@iconify.CkmZGMLx1730883607874.js";import"./dompurify.MwRjsY0L1730883607874.js";import"./oimophysics.B0i2NtyE1730883607874.js";import"./three-stdlib.oW8T3I_Q1730883607874.js";import"./@pmndrs.CQZPv3U_1730883607874.js";import"./object-hash.c-ODBdIv1730883607874.js";import"./@amap.CXRRqiLY1730883607874.js";import"./jszip.V4H7zZUl1730883607874.js";import"./three-custom-shader-material.DD5mBNmu1730883607874.js";import"./three.quarks.BwNiiDXj1730883607874.js";import"./quarks.core.C7CDonSm1730883607874.js";import"./@tweenjs.BPM-ZGue1730883607874.js";import"./utils.DqGdOV081730883607874.js";import"./three-mesh-bvh.yJpBh0Yi1730883607874.js";import"./d3-geo.BpURvSnU1730883607874.js";import"./d3-array.CKz3hFNy1730883607874.js";const _=k;function w(){const t=["call","stateObject","exception","管道壁圆润","string","input","radius","console","#ff0052","chain","debu","#ffffff","管道半径","#ffa500","linesList","#00b6ff","1680020IZgHQX","spaceLines","action","counter","颜色2","speed","length","constructor","TresPerspectiveCamera","171093uIUxni","toString","tubularSegments","1144101RiAkPh","862652MUfnVo","closed","addBinding","颜色1","56mDjrBA","log","info","apply","trace","fewNum","__proto__","color2","bind","color","2338560ZivkSa","gger",'{}.constructor("return this")( )',"4725585OfQMri","error","#201919","table","test","6193134EMGsWV","function *\\( *\\)","radialSegments"];return(w=function(){return t})()}!function(t,n){const s=k,e=w();for(;;)try{if(607071===-parseInt(s(472))/1+parseInt(s(463))/2+parseInt(s(490))/3+parseInt(s(476))/4+-parseInt(s(493))/5+parseInt(s(498))/6+parseInt(s(475))/7*(-parseInt(s(480))/8))break;e.push(e.shift())}catch(r){e.push(e.shift())}}();const y=function(){let t=!0;return function(n,s){const e=t?function(){if(s){const t=s[k(483)](n,arguments);return s=null,t}}:function(){};return t=!1,e}}();!function(){y(this,(function(){const t=k,n=new RegExp(t(499)),s=new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)","i"),e=I("init");n[t(497)](e+t(456))&&s[t(497)](e+t(506))?I():e("0")}))()}();const v=function(){let t=!0;return function(n,s){const e=t?function(){if(s){const t=s[k(483)](n,arguments);return s=null,t}}:function(){};return t=!1,e}}();function k(t,n){const s=w();return(k=function(t,n){return s[t-=454]})(t,n)}v(void 0,(function(){const t=k;let n;try{n=Function("return (function() "+t(492)+");")()}catch(r){n=window}const s=n[t(454)]=n[t(454)]||{},e=[t(481),"warn",t(482),t(494),t(503),t(496),t(484)];for(let o=0;o<e[t(469)];o++){const n=v.constructor.prototype.bind(v),r=e[o],i=s[r]||n;n[t(486)]=v[t(488)](v),n.toString=i[t(473)][t(488)](i),s[r]=n}}))();const x=o({__name:_(464),async setup(o){const w=_;let y,v;const k=i({reflectivity:.1,showGridHelper:!1,scale:5}),x=i({color:w(460),color2:w(455),radius:.2,speed:10,tubularSegments:64,radialSegments:6,closed:!1,clockwise:!1,fewNum:10,linesList:[[15,0,15],[15,0,-15],[-15,0,-15],[-15,0,10],[13,0,15]]}),I=new n;I[w(478)](x,w(489),{label:w(479)}),I[w(478)](x,w(487),{label:w(467)}),I[w(478)](x,w(507),{label:w(459),min:.01,max:1,step:.01}),I[w(478)](x,w(468),{label:"跑动速度",min:.1,max:20,step:.1}),I[w(478)](x,w(474),{label:"管道路径平滑",min:1,max:100,step:1}),I.addBinding(x,w(500),{label:w(504),min:1,max:20,step:1}),I[w(478)](x,w(477),{label:"闭合管道"}),I.addBinding(x,"clockwise",{label:"顺时针流动"}),I[w(478)](x,w(485),{label:"线端数量",min:1,max:20,step:1});const S=([y,v]=a((()=>r("./plugins/simpleGIS/json/320000_full.json"))),y=await y,v(),y);return(n,r)=>{const o=w,i=u("TresCanvas");return c(),l(i,{clearColor:o(495),"window-size":""},{default:p((()=>[r[0]||(r[0]=m(o(471),{position:[25,25,25],fov:45,near:.1,far:1e4},null,-1)),f(j(t),{enableDamping:"",autoRotate:""}),(c(),l(d,null,{default:p((()=>[f(e,g(h(x)),null,16)])),_:1})),(c(),l(d,null,{default:p((()=>[f(e,{linesList:j(S),position:[0,0,-4],color:o(462),color2:o(458),speed:6,fewNum:60,tubularSegments:1024,radius:.1},null,8,[o(461)])])),_:1})),(c(),l(d,null,{default:p((()=>[f(j(s),b({position:[0,-.5,0]},k),null,16)])),_:1}))])),_:1})}}});function I(t){function n(t){const s=k;if(typeof t===s(505))return function(t){}[s(470)]("while (true) {}").apply(s(466));1!==(""+t/t)[s(469)]||t%20==0?function(){return!0}.constructor(s(457)+"gger")[s(501)](s(465)):function(){return!1}.constructor("debu"+s(491))[s(483)](s(502)),n(++t)}try{if(t)return n;n(0)}catch(s){}}export{x as default};
